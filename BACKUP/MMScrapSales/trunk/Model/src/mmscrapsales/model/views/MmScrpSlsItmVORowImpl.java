package mmscrapsales.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmscrapsales.model.services.MmScrapSalesAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 05 12:48:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScrpSlsItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSCRPSLSITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        FifoPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getFifoPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setFifoPrice((Number)value);
            }
        }
        ,
        ItmId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmQtyBs {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getItmQtyBs();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setItmQtyBs((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        LifoPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getLifoPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setLifoPrice((Number)value);
            }
        }
        ,
        LndPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getLndPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setLndPrice((Number)value);
            }
        }
        ,
        MapPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getMapPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setMapPrice((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        ScrpPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getScrpPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setScrpPrice((Number)value);
            }
        }
        ,
        ScrpVal {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getScrpVal();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setScrpVal((Number)value);
            }
        }
        ,
        SlocId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        WapPrice {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getWapPrice();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setWapPrice((Number)value);
            }
        }
        ,
        WhId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        TranItmNm {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getTranItmNm();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setTranItmNm((String)value);
            }
        }
        ,
        TransUomBs {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getTransUomBs();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setTransUomBs((String)value);
            }
        }
        ,
        TransSrFlg {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getTransSrFlg();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setTransSrFlg((String)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        TransAvlQty {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getTransAvlQty();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setTransAvlQty((Number)value);
            }
        }
        ,
        MmScrpSlsLot {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getMmScrpSlsLot();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmScrpSlsSr {
            public Object get(MmScrpSlsItmVORowImpl obj) {
                return obj.getMmScrpSlsSr();
            }

            public void put(MmScrpSlsItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmScrpSlsItmVORowImpl object);

        public abstract void put(MmScrpSlsItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FIFOPRICE = AttributesEnum.FifoPrice.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMQTYBS = AttributesEnum.ItmQtyBs.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int LIFOPRICE = AttributesEnum.LifoPrice.index();
    public static final int LNDPRICE = AttributesEnum.LndPrice.index();
    public static final int MAPPRICE = AttributesEnum.MapPrice.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCRPPRICE = AttributesEnum.ScrpPrice.index();
    public static final int SCRPVAL = AttributesEnum.ScrpVal.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int WAPPRICE = AttributesEnum.WapPrice.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int TRANITMNM = AttributesEnum.TranItmNm.index();
    public static final int TRANSUOMBS = AttributesEnum.TransUomBs.index();
    public static final int TRANSSRFLG = AttributesEnum.TransSrFlg.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSAVLQTY = AttributesEnum.TransAvlQty.index();
    public static final int MMSCRPSLSLOT = AttributesEnum.MmScrpSlsLot.index();
    public static final int MMSCRPSLSSR = AttributesEnum.MmScrpSlsSr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScrpSlsItmVORowImpl() {
    }

    /**
     * Gets MmScrpSlsItmEO entity object.
     * @return the MmScrpSlsItmEO
     */
    public EntityImpl getMmScrpSlsItmEO() {
        return (EntityImpl)getEntity(ENTITY_MMSCRPSLSITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FIFO_PRICE using the alias name FifoPrice.
     * @return the FIFO_PRICE
     */
    public Number getFifoPrice() {
        return (Number) getAttributeInternal(FIFOPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for FIFO_PRICE using the alias name FifoPrice.
     * @param value value to set the FIFO_PRICE
     */
    public void setFifoPrice(Number value) {
        setAttributeInternal(FIFOPRICE, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @return the ITM_QTY_BS
     */
    public Number getItmQtyBs() {
        return (Number) getAttributeInternal(ITMQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @param value value to set the ITM_QTY_BS
     */
    public void setItmQtyBs(Number value) {
        Number zero=new Number(0);
        if(value!=null && getScrpPrice()!=null && getScrpPrice()!=zero){
            Number scrpVal=value.multiply(getScrpPrice());
            setScrpVal(scrpVal);
        }
        setAttributeInternal(ITMQTYBS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for LIFO_PRICE using the alias name LifoPrice.
     * @return the LIFO_PRICE
     */
    public Number getLifoPrice() {
        return (Number) getAttributeInternal(LIFOPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for LIFO_PRICE using the alias name LifoPrice.
     * @param value value to set the LIFO_PRICE
     */
    public void setLifoPrice(Number value) {
        setAttributeInternal(LIFOPRICE, value);
    }

    /**
     * Gets the attribute value for LND_PRICE using the alias name LndPrice.
     * @return the LND_PRICE
     */
    public Number getLndPrice() {
        return (Number) getAttributeInternal(LNDPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for LND_PRICE using the alias name LndPrice.
     * @param value value to set the LND_PRICE
     */
    public void setLndPrice(Number value) {
        setAttributeInternal(LNDPRICE, value);
    }

    /**
     * Gets the attribute value for MAP_PRICE using the alias name MapPrice.
     * @return the MAP_PRICE
     */
    public Number getMapPrice() {
        return (Number) getAttributeInternal(MAPPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for MAP_PRICE using the alias name MapPrice.
     * @param value value to set the MAP_PRICE
     */
    public void setMapPrice(Number value) {
        setAttributeInternal(MAPPRICE, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SCRP_PRICE using the alias name ScrpPrice.
     * @return the SCRP_PRICE
     */
    public Number getScrpPrice() {
        return (Number) getAttributeInternal(SCRPPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCRP_PRICE using the alias name ScrpPrice.
     * @param value value to set the SCRP_PRICE
     */
    public void setScrpPrice(Number value) {
        Number zero=new Number(0);
        if(value!=null && getItmQtyBs()!=null && getItmQtyBs()!=zero){
            Number scrpVal=value.multiply(getItmQtyBs());
            setScrpVal(scrpVal);
        }
        setAttributeInternal(SCRPPRICE, value);
    }

    /**
     * Gets the attribute value for SCRP_VAL using the alias name ScrpVal.
     * @return the SCRP_VAL
     */
    public Number getScrpVal() {
        return (Number) getAttributeInternal(SCRPVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for SCRP_VAL using the alias name ScrpVal.
     * @param value value to set the SCRP_VAL
     */
    public void setScrpVal(Number value) {
        setAttributeInternal(SCRPVAL, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for WAP_PRICE using the alias name WapPrice.
     * @return the WAP_PRICE
     */
    public Number getWapPrice() {
        return (Number) getAttributeInternal(WAPPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for WAP_PRICE using the alias name WapPrice.
     * @param value value to set the WAP_PRICE
     */
    public void setWapPrice(Number value) {
        setAttributeInternal(WAPPRICE, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Gets the attribute value for the calculated attribute TranItmNm.
     * @return the TranItmNm
     */
    public String getTranItmNm() {
      String itemdesc=null;
        if(getItmId()!=null){
            MmScrapSalesAMImpl am =(MmScrapSalesAMImpl)this.getApplicationModule();
            
            ViewObjectImpl itmvo=am.getLovItmVo();
            String hoOrgId=resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
            itmvo.setNamedWhereClauseParam("BindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("BindSlocId", getSlocId());
            itmvo.setNamedWhereClauseParam("BindHoOrgId", hoOrgId);
            itmvo.setNamedWhereClauseParam("bindItmId", getItmId());
            itmvo.executeQuery();
            Row [] r1=itmvo.getAllRowsInRange();
          //  System.out.println("item rows length "+r1.length);
            if(r1.length>0){
               itemdesc= r1[0].getAttribute("ItmDesc").toString();
            }
        }
       // System.out.println("item desc is "+itemdesc+" getItmId "+getItmId());
        return itemdesc;
        //return (String) getAttributeInternal(TRANITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranItmNm.
     * @param value value to set the  TranItmNm
     */
    public void setTranItmNm(String value) {
        setAttributeInternal(TRANITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomBs.
     * @return the TransUomBs
     */
    public String getTransUomBs() {
        String trnauom=null;
        if(getItmUomBs()!=null){
            MmScrapSalesAMImpl am =(MmScrapSalesAMImpl)this.getApplicationModule();
           // System.out.println("getItmUomBs "+getItmUomBs());
            
        ViewObjectImpl uomvo=am.getLovUom();
        uomvo.setNamedWhereClauseParam("bindCldId", getCldId());
        uomvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
        uomvo.setNamedWhereClauseParam("bindUomId", getItmUomBs());
        uomvo.executeQuery();
        Row [] rr1=uomvo.getAllRowsInRange();
        if(rr1.length>0){
            trnauom= rr1[0].getAttribute("UomDesc").toString();
         }
       // System.out.println("trnauom  name is"+trnauom);
        }
        return (String) trnauom;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomBs.
     * @param value value to set the  TransUomBs
     */
    public void setTransUomBs(String value) {
        setAttributeInternal(TRANSUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrFlg.
     * @return the TransSrFlg
     */
    public String getTransSrFlg() {
        String srFlg=null;
        if(getItmId()!=null){
        MmScrapSalesAMImpl am=(MmScrapSalesAMImpl)this.getApplicationModule();
        ViewObjectImpl itmVo=am.getLovItmVo();
        itmVo.setNamedWhereClauseParam("BindCldId", getCldId());
        itmVo.setNamedWhereClauseParam("BindSlocId", Integer.parseInt(getSlocId().toString()));
        itmVo.setNamedWhereClauseParam("BindHoOrgId", getTransHoOrgId());
        itmVo.setNamedWhereClauseParam("bindItmId", getItmId());
        itmVo.executeQuery();
        Row [] rr1=itmVo.getAllRowsInRange();
        if(rr1.length>0){
            srFlg=rr1[0].getAttribute("SerializedFlg").toString();
        }
        }
        return srFlg;
       // return (String) getAttributeInternal(TRANSSRFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrFlg.
     * @param value value to set the  TransSrFlg
     */
    public void setTransSrFlg(String value) {
        setAttributeInternal(TRANSSRFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
    return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
    //    return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAvlQty.
     * @return the TransAvlQty
     */
    public Number getTransAvlQty() {
        Number avlStk=null;
        if(getItmId()!=null){
        MmScrapSalesAMImpl am=(MmScrapSalesAMImpl)this.getApplicationModule();
        Row[] rr1=am.getLovStkSummItm().getFilteredRows("ItmId",getItmId());
        //  adflog.info("filter rows length with itm id "+rr1.length+curr1.getAttribute("ItmId"));
        if(rr1.length>0){
            avlStk=(Number)rr1[0].getAttribute("ScrpStk");
            
        }
        }
        return avlStk;
        
      //  return (Number) getAttributeInternal(TRANSAVLQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAvlQty.
     * @param value value to set the  TransAvlQty
     */
    public void setTransAvlQty(Number value) {
        setAttributeInternal(TRANSAVLQTY, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScrpSlsLot.
     */
    public RowIterator getMmScrpSlsLot() {
        return (RowIterator)getAttributeInternal(MMSCRPSLSLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScrpSlsSr.
     */
    public RowIterator getMmScrpSlsSr() {
        return (RowIterator)getAttributeInternal(MMSCRPSLSSR);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
