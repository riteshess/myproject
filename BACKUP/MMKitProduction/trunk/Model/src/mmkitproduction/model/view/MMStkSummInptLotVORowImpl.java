package mmkitproduction.model.view;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 07 10:37:47 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMStkSummInptLotVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        LotId {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        OpStk {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getOpStk();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setOpStk((Number)value);
            }
        }
        ,
        TotStk {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setTotStk((Number)value);
            }
        }
        ,
        BasicPrice {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getBasicPrice();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setBasicPrice((Number)value);
            }
        }
        ,
        LndPrice {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getLndPrice();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setLndPrice((Number)value);
            }
        }
        ,
        LndVal {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getLndVal();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setLndVal((Number)value);
            }
        }
        ,
        WarrantyDt {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getWarrantyDt();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setWarrantyDt((Timestamp)value);
            }
        }
        ,
        ExpiryDt {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getExpiryDt();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setExpiryDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        LotDt {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getLotDt();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setLotDt((Timestamp)value);
            }
        }
        ,
        totStkTrans {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.gettotStkTrans();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.settotStkTrans((Number)value);
            }
        }
        ,
        AppitmPrfVO1 {
            public Object get(MMStkSummInptLotVORowImpl obj) {
                return obj.getAppitmPrfVO1();
            }

            public void put(MMStkSummInptLotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMStkSummInptLotVORowImpl object);

        public abstract void put(MMStkSummInptLotVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int OPSTK = AttributesEnum.OpStk.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int BASICPRICE = AttributesEnum.BasicPrice.index();
    public static final int LNDPRICE = AttributesEnum.LndPrice.index();
    public static final int LNDVAL = AttributesEnum.LndVal.index();
    public static final int WARRANTYDT = AttributesEnum.WarrantyDt.index();
    public static final int EXPIRYDT = AttributesEnum.ExpiryDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int LOTDT = AttributesEnum.LotDt.index();
    public static final int TOTSTKTRANS = AttributesEnum.totStkTrans.index();
    public static final int APPITMPRFVO1 = AttributesEnum.AppitmPrfVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMStkSummInptLotVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotId.
     * @return the LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotId.
     * @param value value to set the  LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomBs.
     * @param value value to set the  ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpStk.
     * @return the OpStk
     */
    public Number getOpStk() {
        return (Number) getAttributeInternal(OPSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpStk.
     * @param value value to set the  OpStk
     */
    public void setOpStk(Number value) {
        setAttributeInternal(OPSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public Number getTotStk() {
        return (Number) getAttributeInternal(TOTSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotStk.
     * @param value value to set the  TotStk
     */
    public void setTotStk(Number value) {
        setAttributeInternal(TOTSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BasicPrice.
     * @return the BasicPrice
     */
    public Number getBasicPrice() {
        return (Number) getAttributeInternal(BASICPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BasicPrice.
     * @param value value to set the  BasicPrice
     */
    public void setBasicPrice(Number value) {
        setAttributeInternal(BASICPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LndPrice.
     * @return the LndPrice
     */
    public Number getLndPrice() {
        return (Number) getAttributeInternal(LNDPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LndPrice.
     * @param value value to set the  LndPrice
     */
    public void setLndPrice(Number value) {
        setAttributeInternal(LNDPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LndVal.
     * @return the LndVal
     */
    public Number getLndVal() {
        return (Number) getAttributeInternal(LNDVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LndVal.
     * @param value value to set the  LndVal
     */
    public void setLndVal(Number value) {
        setAttributeInternal(LNDVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WarrantyDt.
     * @return the WarrantyDt
     */
    public Timestamp getWarrantyDt() {
        return (Timestamp) getAttributeInternal(WARRANTYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WarrantyDt.
     * @param value value to set the  WarrantyDt
     */
    public void setWarrantyDt(Timestamp value) {
        setAttributeInternal(WARRANTYDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExpiryDt.
     * @return the ExpiryDt
     */
    public Timestamp getExpiryDt() {
        return (Timestamp) getAttributeInternal(EXPIRYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExpiryDt.
     * @param value value to set the  ExpiryDt
     */
    public void setExpiryDt(Timestamp value) {
        setAttributeInternal(EXPIRYDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdMod.
     * @param value value to set the  UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdModDt.
     * @param value value to set the  UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotDt.
     * @return the LotDt
     */
    public Timestamp getLotDt() {
        return (Timestamp) getAttributeInternal(LOTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotDt.
     * @param value value to set the  LotDt
     */
    public void setLotDt(Timestamp value) {
        setAttributeInternal(LOTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute totStkTrans.
     * @return the totStkTrans
     */
    public Number gettotStkTrans() {
        return (Number) getAttributeInternal(TOTSTKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute totStkTrans.
     * @param value value to set the  totStkTrans
     */
    public void settotStkTrans(Number value) {
        setAttributeInternal(TOTSTKTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppitmPrfVO1.
     */
    public RowSet getAppitmPrfVO1() {
        return (RowSet)getAttributeInternal(APPITMPRFVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
