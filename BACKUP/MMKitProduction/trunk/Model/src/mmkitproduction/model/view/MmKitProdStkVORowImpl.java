package mmkitproduction.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmkitproduction.model.services.MMKitProductionAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 26 15:59:48 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmKitProdStkVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMKITPRODSTKEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BinId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setBinId((String)value);
            }
        }
        ,
        CldId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        LotId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        OpItmId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getOpItmId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setOpItmId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        SrNo {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        StkActn {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getStkActn();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setStkActn((String)value);
            }
        }
        ,
        TotQty {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getTotQty();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setTotQty((Number)value);
            }
        }
        ,
        WhId {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        LOTTrans {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getLOTTrans();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setLOTTrans((String)value);
            }
        }
        ,
        srl_flg {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getsrl_flg();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setsrl_flg((String)value);
            }
        }
        ,
        LotAutoGenTrans {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getLotAutoGenTrans();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setLotAutoGenTrans((String)value);
            }
        }
        ,
        MmKitProdItmStkO {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getMmKitProdItmStkO();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MMStockSummLotVO1 {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getMMStockSummLotVO1();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmKitProdStkVO1 {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getMmKitProdStkVO1();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppBinLoc1VO1 {
            public Object get(MmKitProdStkVORowImpl obj) {
                return obj.getAppBinLoc1VO1();
            }

            public void put(MmKitProdStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmKitProdStkVORowImpl object);

        public abstract void put(MmKitProdStkVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BINID = AttributesEnum.BinId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int OPITMID = AttributesEnum.OpItmId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int STKACTN = AttributesEnum.StkActn.index();
    public static final int TOTQTY = AttributesEnum.TotQty.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int LOTTRANS = AttributesEnum.LOTTrans.index();
    public static final int SRL_FLG = AttributesEnum.srl_flg.index();
    public static final int LOTAUTOGENTRANS = AttributesEnum.LotAutoGenTrans.index();
    public static final int MMKITPRODITMSTKO = AttributesEnum.MmKitProdItmStkO.index();
    public static final int MMSTOCKSUMMLOTVO1 = AttributesEnum.MMStockSummLotVO1.index();
    public static final int MMKITPRODSTKVO1 = AttributesEnum.MmKitProdStkVO1.index();
    public static final int APPBINLOC1VO1 = AttributesEnum.AppBinLoc1VO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmKitProdStkVORowImpl() {
    }

    /**
     * Gets MmKitProdStkEO entity object.
     * @return the MmKitProdStkEO
     */
    public EntityImpl getMmKitProdStkEO() {
        return (EntityImpl)getEntity(ENTITY_MMKITPRODSTKEO);
    }

    /**
     * Gets the attribute value for BIN_ID using the alias name BinId.
     * @return the BIN_ID
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as attribute value for BIN_ID using the alias name BinId.
     * @param value value to set the BIN_ID
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for LOT_ID using the alias name LotId.
     * @return the LOT_ID
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOT_ID using the alias name LotId.
     * @param value value to set the LOT_ID
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for OP_ITM_ID using the alias name OpItmId.
     * @return the OP_ITM_ID
     */
    public String getOpItmId() {
        return (String) getAttributeInternal(OPITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ITM_ID using the alias name OpItmId.
     * @param value value to set the OP_ITM_ID
     */
    public void setOpItmId(String value) {
        setAttributeInternal(OPITMID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public String getSrNo() {
        
        return (String) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for STK_ACTN using the alias name StkActn.
     * @return the STK_ACTN
     */
    public String getStkActn() {
        return (String) getAttributeInternal(STKACTN);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_ACTN using the alias name StkActn.
     * @param value value to set the STK_ACTN
     */
    public void setStkActn(String value) {
        setAttributeInternal(STKACTN, value);
    }

    /**
     * Gets the attribute value for TOT_QTY using the alias name TotQty.
     * @return the TOT_QTY
     */
    public Number getTotQty() {
        if(getAttributeInternal(TOTQTY)!=null){
            return (Number) getAttributeInternal(TOTQTY);    
        }else{
            return new Number(0);
        }
        
        
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_QTY using the alias name TotQty.
     * @param value value to set the TOT_QTY
     */
    public void setTotQty(Number value) {
        setAttributeInternal(TOTQTY, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LOTTrans.
     * @return the LOTTrans
     */
    public String getLOTTrans() {
        if(getAttributeInternal(LOTTRANS)!=null){
            return (String) getAttributeInternal(LOTTRANS);
        }
        else{
            String temp="";
            if(getLotId()!=null){
            temp=getLotId().toString();
           }
            return temp;
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LOTTrans.
     * @param value value to set the  LOTTrans
     */
    public void setLOTTrans(String value) {
        setAttributeInternal(LOTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute srl_flg.
     * @return the srl_flg
     */
     public Object resolvElDC(String data) {
     FacesContext fc = FacesContext.getCurrentInstance();
     Application app = fc.getApplication();
     ExpressionFactory elFactory = app.getExpressionFactory();
     ELContext elContext = fc.getELContext();
     ValueExpression valueExp =
     elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
     return valueExp.getValue(elContext);
     }
    
    public String getsrl_flg() {
        
       MMKitProductionAMImpl am=(MMKitProductionAMImpl)resolvElDC("MMKitProductionAMDataControl");
       ViewObjectImpl  prodvo= am.getMmKitProd1();
       String DocId=prodvo.getCurrentRow().getAttribute("DocId").toString();
       String optId=prodvo.getCurrentRow().getAttribute("OpItmId").toString();
       String CldId=prodvo.getCurrentRow().getAttribute("CldId").toString();
       String SlocId=prodvo.getCurrentRow().getAttribute("SlocId").toString();
       
       ViewObjectImpl  appkitvo= am.getMMAppKit1();
       
        
        return (String) getAttributeInternal(SRL_FLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute srl_flg.
     * @param value value to set the  srl_flg
     */
    public void setsrl_flg(String value) {
        setAttributeInternal(SRL_FLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotAutoGenTrans.
     * @return the LotAutoGenTrans
     */
    public String getLotAutoGenTrans() {
        String chk="N";
        if(getAttributeInternal(LOTAUTOGENTRANS)!=null){
            return (String) getAttributeInternal(LOTAUTOGENTRANS);
        }
        else{
        if(getOrgId()!=null){
            MMKitProductionAMImpl am=(MMKitProductionAMImpl)resolvElDC("MMKitProductionAMDataControl");
            ViewObjectImpl  orgPrf= am.getViewOrgMMPrf();
            Row[] prf= orgPrf.getFilteredRows("OrgId", getOrgId());
            if(prf.length>0){
                chk=prf[0].getAttribute("AutoLotGen").toString();
            }
           }
            return chk;
        }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotAutoGenTrans.
     * @param value value to set the  LotAutoGenTrans
     */
    public void setLotAutoGenTrans(String value) {
        setAttributeInternal(LOTAUTOGENTRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmKitProdItmStkO.
     */
    public RowIterator getMmKitProdItmStkO() {
        return (RowIterator)getAttributeInternal(MMKITPRODITMSTKO);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MMStockSummLotVO1.
     */
    public RowSet getMMStockSummLotVO1() {
        return (RowSet)getAttributeInternal(MMSTOCKSUMMLOTVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MmKitProdStkVO1.
     */
    public RowSet getMmKitProdStkVO1() {
        return (RowSet)getAttributeInternal(MMKITPRODSTKVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> AppBinLoc1VO1.
     */
    public RowSet getAppBinLoc1VO1() {
        return (RowSet)getAttributeInternal(APPBINLOC1VO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
