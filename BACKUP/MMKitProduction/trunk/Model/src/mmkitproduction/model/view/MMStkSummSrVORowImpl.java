package mmkitproduction.model.view;

import java.sql.Timestamp;

import mmkitproduction.model.services.MMKitProductionAMImpl;
import mmkitproduction.model.services.common.MMKitProductionAM;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 12 15:37:37 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMStkSummSrVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        LotId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        BinId {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setBinId((String)value);
            }
        }
        ,
        SrNo {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        TotStk {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setTotStk((Number)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        StkChkTrans {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getStkChkTrans();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setStkChkTrans((String)value);
            }
        }
        ,
        chkTrans {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getchkTrans();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setchkTrans((Boolean)value);
            }
        }
        ,
        AppitmPrfVO1 {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getAppitmPrfVO1();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppBinLoc1VO1 {
            public Object get(MMStkSummSrVORowImpl obj) {
                return obj.getAppBinLoc1VO1();
            }

            public void put(MMStkSummSrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMStkSummSrVORowImpl object);

        public abstract void put(MMStkSummSrVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int BINID = AttributesEnum.BinId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int STKCHKTRANS = AttributesEnum.StkChkTrans.index();
    public static final int CHKTRANS = AttributesEnum.chkTrans.index();
    public static final int APPITMPRFVO1 = AttributesEnum.AppitmPrfVO1.index();
    public static final int APPBINLOC1VO1 = AttributesEnum.AppBinLoc1VO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMStkSummSrVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotId.
     * @return the LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotId.
     * @param value value to set the  LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BinId.
     * @return the BinId
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BinId.
     * @param value value to set the  BinId
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SrNo.
     * @return the SrNo
     */
    public String getSrNo() {
        return (String) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SrNo.
     * @param value value to set the  SrNo
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public Number getTotStk() {
        return (Number) getAttributeInternal(TOTSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotStk.
     * @param value value to set the  TotStk
     */
    public void setTotStk(Number value) {
        setAttributeInternal(TOTSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdMod.
     * @param value value to set the  UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdModDt.
     * @param value value to set the  UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkChkTrans.
     * @return the StkChkTrans
     */
    public String getStkChkTrans() {
        return (String) getAttributeInternal(STKCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkChkTrans.
     * @param value value to set the  StkChkTrans
     */
    public void setStkChkTrans(String value) {
        setAttributeInternal(STKCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute chkTrans.
     * @return the chkTrans
     */
    public Boolean getchkTrans() {
        //if(getAttributeInternal(CHKTRANS)!=null){
       /*  MMKitProductionAMImpl am = (MMKitProductionAMImpl)this.getApplicationModule();
        Boolean flag = false;
        if(am.getMmKitProdStk2().getEstimatedRowCount()>0){
        Row curr =am.getMmKitProdStk2().getCurrentRow();
      
        Row []rr = am.getMmKitProdStk2().getFilteredRows("DocId", curr.getAttribute("DocId"));
        if(rr.length>0){
            for(Row r : rr){
                if(getSrNo().equalsIgnoreCase(r.getAttribute("SrNo").toString()) ){
                    flag =true;
                }
            }
        }
        }
        if(flag){
            return true;
        }else{ */
        return (Boolean) getAttributeInternal(CHKTRANS);
  //  }
  }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute chkTrans.
     * @param value value to set the  chkTrans
     */
    public void setchkTrans(Boolean value) {
        setAttributeInternal(CHKTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppitmPrfVO1.
     */
    public RowSet getAppitmPrfVO1() {
        return (RowSet)getAttributeInternal(APPITMPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppBinLoc1VO1.
     */
    public RowSet getAppBinLoc1VO1() {
        return (RowSet)getAttributeInternal(APPBINLOC1VO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
