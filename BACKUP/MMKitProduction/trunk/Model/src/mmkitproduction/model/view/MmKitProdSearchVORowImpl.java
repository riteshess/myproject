package mmkitproduction.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 18 15:30:03 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmKitProdSearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        KitProdNo {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getKitProdNo();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setKitProdNo((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        OpItmId {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getOpItmId();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setOpItmId((String)value);
            }
        }
        ,
        itmDescTrans {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getitmDescTrans();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setitmDescTrans((String)value);
            }
        }
        ,
        WhTrans {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getWhTrans();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setWhTrans((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        StkAction {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getStkAction();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setStkAction((String)value);
            }
        }
        ,
        MMAppKitVO1 {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getMMAppKitVO1();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmKitWhVO1 {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getMmKitWhVO1();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmKitProdVO1 {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getMmKitProdVO1();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppOptTypeVO1 {
            public Object get(MmKitProdSearchVORowImpl obj) {
                return obj.getAppOptTypeVO1();
            }

            public void put(MmKitProdSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmKitProdSearchVORowImpl object);

        public abstract void put(MmKitProdSearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int KITPRODNO = AttributesEnum.KitProdNo.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int OPITMID = AttributesEnum.OpItmId.index();
    public static final int ITMDESCTRANS = AttributesEnum.itmDescTrans.index();
    public static final int WHTRANS = AttributesEnum.WhTrans.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int STKACTION = AttributesEnum.StkAction.index();
    public static final int MMAPPKITVO1 = AttributesEnum.MMAppKitVO1.index();
    public static final int MMKITWHVO1 = AttributesEnum.MmKitWhVO1.index();
    public static final int MMKITPRODVO1 = AttributesEnum.MmKitProdVO1.index();
    public static final int APPOPTTYPEVO1 = AttributesEnum.AppOptTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmKitProdSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute KitProdNo.
     * @return the KitProdNo
     */
    public String getKitProdNo() {
        return (String) getAttributeInternal(KITPRODNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute KitProdNo.
     * @param value value to set the  KitProdNo
     */
    public void setKitProdNo(String value) {
        setAttributeInternal(KITPRODNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpItmId.
     * @return the OpItmId
     */
    public String getOpItmId() {
        return (String) getAttributeInternal(OPITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpItmId.
     * @param value value to set the  OpItmId
     */
    public void setOpItmId(String value) {
        setAttributeInternal(OPITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute itmDescTrans.
     * @return the itmDescTrans
     */
    public String getitmDescTrans() {
        return (String) getAttributeInternal(ITMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute itmDescTrans.
     * @param value value to set the  itmDescTrans
     */
    public void setitmDescTrans(String value) {
        setAttributeInternal(ITMDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhTrans.
     * @return the WhTrans
     */
    public String getWhTrans() {
        return (String) getAttributeInternal(WHTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhTrans.
     * @param value value to set the  WhTrans
     */
    public void setWhTrans(String value) {
        setAttributeInternal(WHTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null)
        { 
           return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        }
        else{
                  return (Integer) getAttributeInternal(SLOCID);
            }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */

     public String resolvEl(String data)
     {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
    public String getCldId() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null)
        { 
           return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        }
        else{
                  return (String) getAttributeInternal(CLDID);
            }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null)
        { 
           return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        }
        else{
                  return (String) getAttributeInternal(ORGID);
            }
      
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkAction.
     * @return the StkAction
     */
    public String getStkAction() {
        return (String) getAttributeInternal(STKACTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkAction.
     * @param value value to set the  StkAction
     */
    public void setStkAction(String value) {
        setAttributeInternal(STKACTION, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MMAppKitVO1.
     */
    public RowSet getMMAppKitVO1() {
        return (RowSet)getAttributeInternal(MMAPPKITVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmKitWhVO1.
     */
    public RowSet getMmKitWhVO1() {
        return (RowSet)getAttributeInternal(MMKITWHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmKitProdVO1.
     */
    public RowSet getMmKitProdVO1() {
        return (RowSet)getAttributeInternal(MMKITPRODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppOptTypeVO1.
     */
    public RowSet getAppOptTypeVO1() {
        return (RowSet)getAttributeInternal(APPOPTTYPEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
