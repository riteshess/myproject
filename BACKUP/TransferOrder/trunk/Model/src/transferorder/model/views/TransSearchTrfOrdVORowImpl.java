package transferorder.model.views;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 17 14:08:39 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransSearchTrfOrdVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        TrfNoTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getTrfNoTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setTrfNoTrans((String)value);
            }
        }
        ,
        TrfSrcTypeTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getTrfSrcTypeTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setTrfSrcTypeTrans((Integer)value);
            }
        }
        ,
        FromDateTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getFromDateTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setFromDateTrans((Timestamp)value);
            }
        }
        ,
        ToDateTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getToDateTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setToDateTrans((Timestamp)value);
            }
        }
        ,
        CldIdTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setCldIdTrans((String)value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer)value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String)value);
            }
        }
        ,
        WhIdTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getWhIdTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setWhIdTrans((String)value);
            }
        }
        ,
        WhId1Trans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getWhId1Trans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setWhId1Trans((String)value);
            }
        }
        ,
        ItemDesc {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getItemDesc();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setItemDesc((String)value);
            }
        }
        ,
        ItemIdTrans {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getItemIdTrans();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setItemIdTrans((String)value);
            }
        }
        ,
        TrfStat {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getTrfStat();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setTrfStat((Integer)value);
            }
        }
        ,
        Trf_Src_TypeVO1 {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getTrf_Src_TypeVO1();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmTrfOrdVO1 {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getMmTrfOrdVO1();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhIdSrcVO1 {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getWhIdSrcVO1();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmItmVwVO1 {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getMmItmVwVO1();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TrfStatVO1 {
            public Object get(TransSearchTrfOrdVORowImpl obj) {
                return obj.getTrfStatVO1();
            }

            public void put(TransSearchTrfOrdVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TransSearchTrfOrdVORowImpl object);

        public abstract void put(TransSearchTrfOrdVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRFNOTRANS = AttributesEnum.TrfNoTrans.index();
    public static final int TRFSRCTYPETRANS = AttributesEnum.TrfSrcTypeTrans.index();
    public static final int FROMDATETRANS = AttributesEnum.FromDateTrans.index();
    public static final int TODATETRANS = AttributesEnum.ToDateTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int WHIDTRANS = AttributesEnum.WhIdTrans.index();
    public static final int WHID1TRANS = AttributesEnum.WhId1Trans.index();
    public static final int ITEMDESC = AttributesEnum.ItemDesc.index();
    public static final int ITEMIDTRANS = AttributesEnum.ItemIdTrans.index();
    public static final int TRFSTAT = AttributesEnum.TrfStat.index();
    public static final int TRF_SRC_TYPEVO1 = AttributesEnum.Trf_Src_TypeVO1.index();
    public static final int MMTRFORDVO1 = AttributesEnum.MmTrfOrdVO1.index();
    public static final int WHIDSRCVO1 = AttributesEnum.WhIdSrcVO1.index();
    public static final int MMITMVWVO1 = AttributesEnum.MmItmVwVO1.index();
    public static final int TRFSTATVO1 = AttributesEnum.TrfStatVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransSearchTrfOrdVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrfNoTrans.
     * @return the TrfNoTrans
     */
    public String getTrfNoTrans() {
        return (String) getAttributeInternal(TRFNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrfNoTrans.
     * @param value value to set the  TrfNoTrans
     */
    public void setTrfNoTrans(String value) {
        setAttributeInternal(TRFNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrfSrcTypeTrans.
     * @return the TrfSrcTypeTrans
     */
    public Integer getTrfSrcTypeTrans() {
        return (Integer) getAttributeInternal(TRFSRCTYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrfSrcTypeTrans.
     * @param value value to set the  TrfSrcTypeTrans
     */
    public void setTrfSrcTypeTrans(Integer value) {
        setAttributeInternal(TRFSRCTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDateTrans.
     * @return the FromDateTrans
     */
    public Timestamp getFromDateTrans() {
        return (Timestamp) getAttributeInternal(FROMDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDateTrans.
     * @param value value to set the  FromDateTrans
     */
    public void setFromDateTrans(Timestamp value) {
        setAttributeInternal(FROMDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDateTrans.
     * @return the ToDateTrans
     */
    public Timestamp getToDateTrans() {
        return (Timestamp) getAttributeInternal(TODATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDateTrans.
     * @param value value to set the  ToDateTrans
     */
    public void setToDateTrans(Timestamp value) {
        setAttributeInternal(TODATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null)
        { 
           return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        }else{
              return (String) getAttributeInternal(CLDIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
     public String resolvEl(String data)
     {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
    public Integer getSlocIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null)
        { 
           return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        }
        else{
        return (Integer) getAttributeInternal(SLOCIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null)
        { 
           return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        }
        else{
             return (String) getAttributeInternal(ORGIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdTrans.
     * @return the WhIdTrans
     */
    public String getWhIdTrans() {
        return (String) getAttributeInternal(WHIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhIdTrans.
     * @param value value to set the  WhIdTrans
     */
    public void setWhIdTrans(String value) {
        setAttributeInternal(WHIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId1Trans.
     * @return the WhId1Trans
     */
    public String getWhId1Trans() {
        return (String) getAttributeInternal(WHID1TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId1Trans.
     * @param value value to set the  WhId1Trans
     */
    public void setWhId1Trans(String value) {
        setAttributeInternal(WHID1TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDesc.
     * @return the ItemDesc
     */
    public String getItemDesc() {
        return (String) getAttributeInternal(ITEMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDesc.
     * @param value value to set the  ItemDesc
     */
    public void setItemDesc(String value) {
        setAttributeInternal(ITEMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIdTrans.
     * @return the ItemIdTrans
     */
    public String getItemIdTrans() {
        return (String) getAttributeInternal(ITEMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIdTrans.
     * @param value value to set the  ItemIdTrans
     */
    public void setItemIdTrans(String value) {
        setAttributeInternal(ITEMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrfStat.
     * @return the TrfStat
     */
    public Integer getTrfStat() {
        return (Integer) getAttributeInternal(TRFSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrfStat.
     * @param value value to set the  TrfStat
     */
    public void setTrfStat(Integer value) {
        setAttributeInternal(TRFSTAT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Trf_Src_TypeVO1.
     */
    public RowSet getTrf_Src_TypeVO1() {
        return (RowSet)getAttributeInternal(TRF_SRC_TYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmTrfOrdVO1.
     */
    public RowSet getMmTrfOrdVO1() {
        return (RowSet)getAttributeInternal(MMTRFORDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WhIdSrcVO1.
     */
    public RowSet getWhIdSrcVO1() {
        return (RowSet)getAttributeInternal(WHIDSRCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmItmVwVO1.
     */
    public RowSet getMmItmVwVO1() {
        return (RowSet)getAttributeInternal(MMITMVWVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TrfStatVO1.
     */
    public RowSet getTrfStatVO1() {
        return (RowSet)getAttributeInternal(TRFSTATVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
