package userdocmapping.model.views;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 05 14:54:56 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovUsrIdRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getCldId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getOrgId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        UsrId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getUsrId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setUsrId((Integer)value);
            }
        }
        ,
        UsrNm {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getUsrNm();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setUsrNm((String)value);
            }
        }
        ,
        UsrRoleId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getUsrRoleId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setUsrRoleId((Integer)value);
            }
        }
        ,
        DocId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getDocId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        DocTypeId {
            public Object get(LovUsrIdRowImpl obj) {
                return obj.getDocTypeId();
            }

            public void put(LovUsrIdRowImpl obj, Object value) {
                obj.setDocTypeId((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LovUsrIdRowImpl object);

        public abstract void put(LovUsrIdRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int USRNM = AttributesEnum.UsrNm.index();
    public static final int USRROLEID = AttributesEnum.UsrRoleId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovUsrIdRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrId.
     * @return the UsrId
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrId.
     * @param value value to set the  UsrId
     */
    public void setUsrId(Integer value) {
        setAttributeInternal(USRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrNm.
     * @return the UsrNm
     */
    public String getUsrNm() {
        return (String) getAttributeInternal(USRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrNm.
     * @param value value to set the  UsrNm
     */
    public void setUsrNm(String value) {
        setAttributeInternal(USRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrRoleId.
     * @return the UsrRoleId
     */
    public Integer getUsrRoleId() {
        return (Integer) getAttributeInternal(USRROLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrRoleId.
     * @param value value to set the  UsrRoleId
     */
    public void setUsrRoleId(Integer value) {
        setAttributeInternal(USRROLEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Integer getDocId() {
        return (Integer) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeId.
     * @return the DocTypeId
     */
    public Integer getDocTypeId() {
        return (Integer) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocTypeId.
     * @param value value to set the  DocTypeId
     */
    public void setDocTypeId(Integer value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
