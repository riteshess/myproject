package appsecrole.model.entities;

import appsecrole.model.module.AppRolesAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 19 12:21:00 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppSecUsrRoleEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        UsrRoleId {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrRoleId();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrRoleId((Integer)value);
            }
        }
        ,
        UsrRoleNm {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrRoleNm();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrRoleNm((String)value);
            }
        }
        ,
        UsrRoleResv {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrRoleResv();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrRoleResv((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrRoleCldId {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrRoleCldId();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrRoleCldId((String)value);
            }
        }
        ,
        UsrRoleActv {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getUsrRoleActv();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setUsrRoleActv((String)value);
            }
        }
        ,
        AppSecUsrRoleMnu {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getAppSecUsrRoleMnu();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppSecUsrRoleLnk {
            public Object get(AppSecUsrRoleEOImpl obj) {
                return obj.getAppSecUsrRoleLnk();
            }

            public void put(AppSecUsrRoleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppSecUsrRoleEOImpl object);

        public abstract void put(AppSecUsrRoleEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRROLEID = AttributesEnum.UsrRoleId.index();
    public static final int USRROLENM = AttributesEnum.UsrRoleNm.index();
    public static final int USRROLERESV = AttributesEnum.UsrRoleResv.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int USRROLECLDID = AttributesEnum.UsrRoleCldId.index();
    public static final int USRROLEACTV = AttributesEnum.UsrRoleActv.index();
    public static final int APPSECUSRROLEMNU = AttributesEnum.AppSecUsrRoleMnu.index();
    public static final int APPSECUSRROLELNK = AttributesEnum.AppSecUsrRoleLnk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppSecUsrRoleEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appsecrole.model.entities.AppSecUsrRoleEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for UsrRoleId, using the alias name UsrRoleId.
     * @return the value of UsrRoleId
     */
    public Integer getUsrRoleId() {
        return (Integer)getAttributeInternal(USRROLEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrRoleId.
     * @param value value to set the UsrRoleId
     */
    public void setUsrRoleId(Integer value) {
        setAttributeInternal(USRROLEID, value);
    }

    /**
     * Gets the attribute value for UsrRoleNm, using the alias name UsrRoleNm.
     * @return the value of UsrRoleNm
     */
    public String getUsrRoleNm() {
        return (String)getAttributeInternal(USRROLENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrRoleNm.
     * @param value value to set the UsrRoleNm
     */
    public void setUsrRoleNm(String value) {
        setAttributeInternal(USRROLENM, value);
    }

    /**
     * Gets the attribute value for UsrRoleResv, using the alias name UsrRoleResv.
     * @return the value of UsrRoleResv
     */
    public String getUsrRoleResv() {
        return (String)getAttributeInternal(USRROLERESV);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrRoleResv.
     * @param value value to set the UsrRoleResv
     */
    public void setUsrRoleResv(String value) {
        setAttributeInternal(USRROLERESV, value);
    }


    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for UsrRoleCldId, using the alias name UsrRoleCldId.
     * @return the value of UsrRoleCldId
     */
    public String getUsrRoleCldId() {
        return (String)getAttributeInternal(USRROLECLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrRoleCldId.
     * @param value value to set the UsrRoleCldId
     */
    public void setUsrRoleCldId(String value) {
        setAttributeInternal(USRROLECLDID, value);
    }

    /**
     * Gets the attribute value for UsrRoleActv, using the alias name UsrRoleActv.
     * @return the value of UsrRoleActv
     */
    public String getUsrRoleActv() {
        return (String)getAttributeInternal(USRROLEACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrRoleActv.
     * @param value value to set the UsrRoleActv
     */
    public void setUsrRoleActv(String value) {
        setAttributeInternal(USRROLEACTV, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppSecUsrRoleMnu() {
        return (RowIterator)getAttributeInternal(APPSECUSRROLEMNU);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppSecUsrRoleLnk() {
        return (RowIterator)getAttributeInternal(APPSECUSRROLELNK);
    }


    /**
     * @param slocId key constituent
     * @param usrRoleId key constituent
     * @param usrRoleCldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, Integer usrRoleId, String usrRoleCldId) {
        return new Key(new Object[]{slocId, usrRoleId, usrRoleCldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        String glbl_cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        System.out.println("GLBL_CLD_ID = " + glbl_cld_id);
        
        Integer glbl_usr_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        System.out.println("GLBL_USR_ID = "+ glbl_usr_id);
        
        Integer glbl_sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        System.out.println("GLBL_APP_SERV_LOC = "+ glbl_sloc_id);
        
        setUsrRoleCldId(glbl_cld_id);
        setUsrIdCreate(glbl_usr_id);
        setUsrIdMod(glbl_usr_id);
        setSlocId(glbl_sloc_id);
        
        super.create(attributeList);
    }
    
    public Object resolvElDC(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
            return valueExp.getValue(elContext);
    }
    
    public String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if(operation==DML_UPDATE){
             Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
             System.out.println("===================================>>>> " + UserId);
                setUsrIdMod(UserId);
                
                
         }
        
        super.doDML(operation, e);
    }
}
