package mmmaterialreqslip.model.view;

import java.sql.ResultSet;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;


import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 12:08:53 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WarehouseVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public WarehouseVOImpl() {
    }


    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }


    /**
     * Returns the bind variable value for cldIdBind.
     * @return bind variable value for cldIdBind
     */
    public String getcldIdBind1() {
        return (String)getNamedWhereClauseParam("cldIdBind1");
    }

    /**
     * Sets <code>value</code> for bind variable cldIdBind.
     * @param value value to bind as cldIdBind
     */
    public void setcldIdBind1(String value) {
        setNamedWhereClauseParam("cldIdBind1", value);
    }

    /**
     * Returns the bind variable value for slocIdBind.
     * @return bind variable value for slocIdBind
     */
    public Integer getslocIdBind1() {
        return (Integer)getNamedWhereClauseParam("slocIdBind1");
    }

    /**
     * Sets <code>value</code> for bind variable slocIdBind.
     * @param value value to bind as slocIdBind
     */
    public void setslocIdBind1(Integer value) {
        setNamedWhereClauseParam("slocIdBind1", value);
    }


    /**
     * Returns the variable value for orgIdBind1.
     * @return variable value for orgIdBind1
     */
    public String getorgIdBind1() {
        return (String)ensureVariableManager().getVariableValue("orgIdBind1");
    }

    /**
     * Sets <code>value</code> for variable orgIdBind1.
     * @param value value to bind as orgIdBind1
     */
    public void setorgIdBind1(String value) {
        ensureVariableManager().setVariableValue("orgIdBind1", value);
    }

    /**
     * Returns the variable value for hoOrgIdBindVar.
     * @return variable value for hoOrgIdBindVar
     */
    public String gethoOrgIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("hoOrgIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable hoOrgIdBindVar.
     * @param value value to bind as hoOrgIdBindVar
     */
    public void sethoOrgIdBindVar(String value) {
        ensureVariableManager().setVariableValue("hoOrgIdBindVar", value);
    }
}
