package mmmaterialreqslip.model.entity;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 18:32:03 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMrsItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        MrsTxnId {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getMrsTxnId();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setMrsTxnId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ReqQty {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getReqQty();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setReqQty((BigDecimal)value);
            }
        }
        ,
        IssuQty {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getIssuQty();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setIssuQty((BigDecimal)value);
            }
        }
        ,
        PendQty {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setPendQty((BigDecimal)value);
            }
        }
        ,
        AuthQty {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getAuthQty();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setAuthQty((BigDecimal)value);
            }
        }
        ,
        CnclItm {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getCnclItm();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setCnclItm((String)value);
            }
        }
        ,
        StkResvQty {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getStkResvQty();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setStkResvQty((BigDecimal)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setUomConvFctr((BigDecimal)value);
            }
        }
        ,
        ReqQtyBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getReqQtyBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setReqQtyBs((BigDecimal)value);
            }
        }
        ,
        AuthQtyBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getAuthQtyBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setAuthQtyBs((BigDecimal)value);
            }
        }
        ,
        StkResvQtyBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getStkResvQtyBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setStkResvQtyBs((BigDecimal)value);
            }
        }
        ,
        IssuQtyBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getIssuQtyBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setIssuQtyBs((BigDecimal)value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setPendQtyBs((BigDecimal)value);
            }
        }
        ,
        MmMrs {
            public Object get(MmMrsItmEOImpl obj) {
                return obj.getMmMrs();
            }

            public void put(MmMrsItmEOImpl obj, Object value) {
                obj.setMmMrs((MmMrsEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMrsItmEOImpl object);

        public abstract void put(MmMrsItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int MRSTXNID = AttributesEnum.MrsTxnId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int REQQTY = AttributesEnum.ReqQty.index();
    public static final int ISSUQTY = AttributesEnum.IssuQty.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int AUTHQTY = AttributesEnum.AuthQty.index();
    public static final int CNCLITM = AttributesEnum.CnclItm.index();
    public static final int STKRESVQTY = AttributesEnum.StkResvQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int REQQTYBS = AttributesEnum.ReqQtyBs.index();
    public static final int AUTHQTYBS = AttributesEnum.AuthQtyBs.index();
    public static final int STKRESVQTYBS = AttributesEnum.StkResvQtyBs.index();
    public static final int ISSUQTYBS = AttributesEnum.IssuQtyBs.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int MMMRS = AttributesEnum.MmMrs.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMrsItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmmaterialreqslip.model.entity.MmMrsItmEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for MrsTxnId, using the alias name MrsTxnId.
     * @return the value of MrsTxnId
     */
    public String getMrsTxnId() {
        return (String)getAttributeInternal(MRSTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsTxnId.
     * @param value value to set the MrsTxnId
     */
    public void setMrsTxnId(String value) {
        setAttributeInternal(MRSTXNID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ReqQty, using the alias name ReqQty.
     * @return the value of ReqQty
     */
    public BigDecimal getReqQty() {
        return (BigDecimal)getAttributeInternal(REQQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqQty.
     * @param value value to set the ReqQty
     */
    public void setReqQty(BigDecimal value) {
        setAttributeInternal(REQQTY, value);
    }

    /**
     * Gets the attribute value for IssuQty, using the alias name IssuQty.
     * @return the value of IssuQty
     */
    public BigDecimal getIssuQty() {
        return (BigDecimal)getAttributeInternal(ISSUQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuQty.
     * @param value value to set the IssuQty
     */
    public void setIssuQty(BigDecimal value) {
        setAttributeInternal(ISSUQTY, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public BigDecimal getPendQty() {
        return (BigDecimal)getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(BigDecimal value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for AuthQty, using the alias name AuthQty.
     * @return the value of AuthQty
     */
    public BigDecimal getAuthQty() {
        return (BigDecimal)getAttributeInternal(AUTHQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthQty.
     * @param value value to set the AuthQty
     */
    public void setAuthQty(BigDecimal value) {
        setAttributeInternal(AUTHQTY, value);
    }

    /**
     * Gets the attribute value for CnclItm, using the alias name CnclItm.
     * @return the value of CnclItm
     */
    public String getCnclItm() {
        return (String)getAttributeInternal(CNCLITM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CnclItm.
     * @param value value to set the CnclItm
     */
    public void setCnclItm(String value) {
        setAttributeInternal(CNCLITM, value);
    }

    /**
     * Gets the attribute value for StkResvQty, using the alias name StkResvQty.
     * @return the value of StkResvQty
     */
    public BigDecimal getStkResvQty() {
        return (BigDecimal)getAttributeInternal(STKRESVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkResvQty.
     * @param value value to set the StkResvQty
     */
    public void setStkResvQty(BigDecimal value) {
        setAttributeInternal(STKRESVQTY, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public BigDecimal getUomConvFctr() {
        return (BigDecimal)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(BigDecimal value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ReqQtyBs, using the alias name ReqQtyBs.
     * @return the value of ReqQtyBs
     */
    public BigDecimal getReqQtyBs() {
        return (BigDecimal)getAttributeInternal(REQQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqQtyBs.
     * @param value value to set the ReqQtyBs
     */
    public void setReqQtyBs(BigDecimal value) {
        setAttributeInternal(REQQTYBS, value);
    }

    /**
     * Gets the attribute value for AuthQtyBs, using the alias name AuthQtyBs.
     * @return the value of AuthQtyBs
     */
    public BigDecimal getAuthQtyBs() {
        return (BigDecimal)getAttributeInternal(AUTHQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthQtyBs.
     * @param value value to set the AuthQtyBs
     */
    public void setAuthQtyBs(BigDecimal value) {
        setAttributeInternal(AUTHQTYBS, value);
    }

    /**
     * Gets the attribute value for StkResvQtyBs, using the alias name StkResvQtyBs.
     * @return the value of StkResvQtyBs
     */
    public BigDecimal getStkResvQtyBs() {
        return (BigDecimal)getAttributeInternal(STKRESVQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkResvQtyBs.
     * @param value value to set the StkResvQtyBs
     */
    public void setStkResvQtyBs(BigDecimal value) {
        setAttributeInternal(STKRESVQTYBS, value);
    }

    /**
     * Gets the attribute value for IssuQtyBs, using the alias name IssuQtyBs.
     * @return the value of IssuQtyBs
     */
    public BigDecimal getIssuQtyBs() {
        return (BigDecimal)getAttributeInternal(ISSUQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuQtyBs.
     * @param value value to set the IssuQtyBs
     */
    public void setIssuQtyBs(BigDecimal value) {
        setAttributeInternal(ISSUQTYBS, value);
    }

    /**
     * Gets the attribute value for PendQtyBs, using the alias name PendQtyBs.
     * @return the value of PendQtyBs
     */
    public BigDecimal getPendQtyBs() {
        return (BigDecimal)getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQtyBs.
     * @param value value to set the PendQtyBs
     */
    public void setPendQtyBs(BigDecimal value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmMrsEOImpl.
     */
    public MmMrsEOImpl getMmMrs() {
        return (MmMrsEOImpl)getAttributeInternal(MMMRS);
    }

    /**
     * Sets <code>value</code> as the associated entity MmMrsEOImpl.
     */
    public void setMmMrs(MmMrsEOImpl value) {
        setAttributeInternal(MMMRS, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param mrsTxnId key constituent
     * @param itmId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String mrsTxnId, String itmId) {
        return new Key(new Object[]{cldId, slocId, orgId, mrsTxnId, itmId});
    }

    public String resolvEl(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String msg = valueExp.getValue(elContext).toString();
           return msg;
       }
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setOrgId(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());  
        setIssuQty(new BigDecimal(0));
        setCnclItm("N");
        setStkResvQty(new BigDecimal(0));   
       // setReqQty(new BigDecimal(1));
        //   System.out.println("id entered");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
       super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_INSERT)
        {
            if(getReqQty()!=null){
               /*  setPendQty(getReqQty());
                setAuthQty(getReqQty()); 
                setStkResvQty(new BigDecimal(0)); */
                setReqQtyBs(getReqQty());
                setAuthQtyBs(getAuthQty());
                setStkResvQtyBs(getStkResvQty());
                setIssuQtyBs(getIssuQty());
                setPendQtyBs(getPendQty());
                }
            else
            {
                   /*  setPendQty(new BigDecimal(0));
                    setAuthQty(new BigDecimal(0));  */
                }
             if(getItmUom()!=null)
             {
                setItmUomBs(getItmUom());
                setUomConvFctr(new BigDecimal(1));
                
                 }
               
            }
        if(operation==DML_UPDATE)
        {
            setPendQty(new BigDecimal(getReqQty().subtract(getIssuQty()).toString()));
               
                setReqQtyBs(getReqQty());
                setAuthQtyBs(getAuthQty());
                setStkResvQtyBs(getStkResvQty());
                setIssuQtyBs(getIssuQty());
                setPendQtyBs(getPendQty());
            }
      
        super.doDML(operation, e);
    }
}
