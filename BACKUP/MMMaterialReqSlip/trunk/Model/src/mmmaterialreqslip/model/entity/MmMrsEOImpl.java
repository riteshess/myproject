package mmmaterialreqslip.model.entity;

import java.sql.CallableStatement;
//import java.sql.SQLException;

import java.sql.SQLException;
//import java.sql.Timestamp;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmmaterialreqslip.model.services.MmMatReqSlipAMImpl;

//import mmmateriealreqslip.model.services.MmMatReqSlipAMImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 18:11:03 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMrsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        RqmtAreaId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getRqmtAreaId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setRqmtAreaId((Integer)value);
            }
        }
        ,
        MrsTxnId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsTxnId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsTxnId((String)value);
            }
        }
        ,
        MrsTxnDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsTxnDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsTxnDt((Timestamp)value);
            }
        }
        ,
        FyId {
            public Object get(MmMrsEOImpl obj) {
                return obj.getFyId();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        MrsNo {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsNo();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsNo((String)value);
            }
        }
        ,
        MrsDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsDt((Timestamp)value);
            }
        }
        ,
        OrgIdReqTo {
            public Object get(MmMrsEOImpl obj) {
                return obj.getOrgIdReqTo();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setOrgIdReqTo((String)value);
            }
        }
        ,
        WhIdReqTo {
            public Object get(MmMrsEOImpl obj) {
                return obj.getWhIdReqTo();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setWhIdReqTo((String)value);
            }
        }
        ,
        MrsStat {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsStat();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsStat((Integer)value);
            }
        }
        ,
        AuthStat {
            public Object get(MmMrsEOImpl obj) {
                return obj.getAuthStat();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setAuthStat((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmMrsEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmMrsEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        MrsStatDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMrsStatDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setMrsStatDt((Timestamp)value);
            }
        }
        ,
        ReqdDt {
            public Object get(MmMrsEOImpl obj) {
                return obj.getReqdDt();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setReqdDt((Timestamp)value);
            }
        }
        ,
        MmMrsItm {
            public Object get(MmMrsEOImpl obj) {
                return obj.getMmMrsItm();
            }

            public void put(MmMrsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMrsEOImpl object);

        public abstract void put(MmMrsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int MRSTXNID = AttributesEnum.MrsTxnId.index();
    public static final int MRSTXNDT = AttributesEnum.MrsTxnDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int MRSNO = AttributesEnum.MrsNo.index();
    public static final int MRSDT = AttributesEnum.MrsDt.index();
    public static final int ORGIDREQTO = AttributesEnum.OrgIdReqTo.index();
    public static final int WHIDREQTO = AttributesEnum.WhIdReqTo.index();
    public static final int MRSSTAT = AttributesEnum.MrsStat.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int MRSSTATDT = AttributesEnum.MrsStatDt.index();
    public static final int REQDDT = AttributesEnum.ReqdDt.index();
    public static final int MMMRSITM = AttributesEnum.MmMrsItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMrsEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmmaterialreqslip.model.entity.MmMrsEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RqmtAreaId, using the alias name RqmtAreaId.
     * @return the value of RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer)getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaId.
     * @param value value to set the RqmtAreaId
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for MrsTxnId, using the alias name MrsTxnId.
     * @return the value of MrsTxnId
     */
    public String getMrsTxnId() {
        return (String)getAttributeInternal(MRSTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsTxnId.
     * @param value value to set the MrsTxnId
     */
    public void setMrsTxnId(String value) {
        setAttributeInternal(MRSTXNID, value);
    }

    /**
     * Gets the attribute value for MrsTxnDt, using the alias name MrsTxnDt.
     * @return the value of MrsTxnDt
     */
    public Timestamp getMrsTxnDt() {
        return (Timestamp)getAttributeInternal(MRSTXNDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsTxnDt.
     * @param value value to set the MrsTxnDt
     */
    public void setMrsTxnDt(Timestamp value) {
        setAttributeInternal(MRSTXNDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for MrsNo, using the alias name MrsNo.
     * @return the value of MrsNo
     */
    public String getMrsNo() {
        return (String)getAttributeInternal(MRSNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsNo.
     * @param value value to set the MrsNo
     */
    public void setMrsNo(String value) {
        setAttributeInternal(MRSNO, value);
    }

    /**
     * Gets the attribute value for MrsDt, using the alias name MrsDt.
     * @return the value of MrsDt
     */
    public Timestamp getMrsDt() {
        return (Timestamp)getAttributeInternal(MRSDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsDt.
     * @param value value to set the MrsDt
     */
    public void setMrsDt(Timestamp value) {
        setAttributeInternal(MRSDT, value);
    }

    /**
     * Gets the attribute value for OrgIdReqTo, using the alias name OrgIdReqTo.
     * @return the value of OrgIdReqTo
     */
    public String getOrgIdReqTo() {
        return (String)getAttributeInternal(ORGIDREQTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdReqTo.
     * @param value value to set the OrgIdReqTo
     */
    public void setOrgIdReqTo(String value) {
        setAttributeInternal(ORGIDREQTO, value);
    }

    /**
     * Gets the attribute value for WhIdReqTo, using the alias name WhIdReqTo.
     * @return the value of WhIdReqTo
     */
    public String getWhIdReqTo() {
        return (String)getAttributeInternal(WHIDREQTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhIdReqTo.
     * @param value value to set the WhIdReqTo
     */
    public void setWhIdReqTo(String value) {
        setAttributeInternal(WHIDREQTO, value);
    }

    /**
     * Gets the attribute value for MrsStat, using the alias name MrsStat.
     * @return the value of MrsStat
     */
    public Integer getMrsStat() {
        return (Integer)getAttributeInternal(MRSSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsStat.
     * @param value value to set the MrsStat
     */
    public void setMrsStat(Integer value) {
        setAttributeInternal(MRSSTAT, value);
    }

    /**
     * Gets the attribute value for AuthStat, using the alias name AuthStat.
     * @return the value of AuthStat
     */
    public String getAuthStat() {
        return (String)getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthStat.
     * @param value value to set the AuthStat
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for MrsStatDt, using the alias name MrsStatDt.
     * @return the value of MrsStatDt
     */
    public Timestamp getMrsStatDt() {
        return (Timestamp)getAttributeInternal(MRSSTATDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsStatDt.
     * @param value value to set the MrsStatDt
     */
    public void setMrsStatDt(Timestamp value) {
        setAttributeInternal(MRSSTATDT, value);
    }

    /**
     * Gets the attribute value for ReqdDt, using the alias name ReqdDt.
     * @return the value of ReqdDt
     */
    public Timestamp getReqdDt() {
        return (Timestamp)getAttributeInternal(REQDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqdDt.
     * @param value value to set the ReqdDt
     */
    public void setReqdDt(Timestamp value) {
        setAttributeInternal(REQDDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmMrsItm() {
        return (RowIterator)getAttributeInternal(MMMRSITM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param mrsTxnId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String mrsTxnId) {
        return new Key(new Object[]{cldId, slocId, orgId, mrsTxnId});
    }

    public String resolvEl(String data) {
          FacesContext fc = FacesContext.getCurrentInstance();
          Application app = fc.getApplication();
          ExpressionFactory elFactory = app.getExpressionFactory();
          ELContext elContext = fc.getELContext();
          ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
          String msg = valueExp.getValue(elContext).toString();
          return msg;
      }
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        String UsrId=resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer SlocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String CldId= resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        setOrgId(OrgId);
        setSlocId(SlocId);
        setCldId(CldId);
        String txnId =(String)(callStoredFunction(Types.VARCHAR, "app.pkg_app.get_txn_id(?,?,?,?,?)", new Object[] {UsrId,OrgId,SlocId,new Integer(18513),CldId}));   
        setMrsTxnId(txnId); 
        setMrsTxnDt(new Timestamp(System.currentTimeMillis()));
        setMrsDt((new Timestamp(System.currentTimeMillis())));
        setMrsStat(new Integer(397));
        setAuthStat("N");
        setUsrIdCreate(Integer.parseInt(UsrId));
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                MmMatReqSlipAMImpl am = (MmMatReqSlipAMImpl)resolvElDC("MmMatReqSlipAMDataControl");
                st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
     
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) { throw new JboException(e);
                    }
                }
            }
        }
    
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =
    elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }
    
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
    //    super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE)
        { 
            String UsrId=resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString();
            setUsrIdMod(Integer.parseInt(UsrId));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
                   
                }
        else
            if(operation ==DML_INSERT)
        {
                String UsrId=resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString();
                setUsrIdCreate(Integer.parseInt(UsrId));
            setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
                if(getAuthStat()!=null && getAuthStat().compareTo("N")!=0)
                {  
                    setAuthStat("Y");}
                else
                        setAuthStat("N");
         
            }
        super.doDML(operation, e);
        }
}
