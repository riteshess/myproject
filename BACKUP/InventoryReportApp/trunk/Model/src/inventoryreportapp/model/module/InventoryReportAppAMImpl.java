package inventoryreportapp.model.module;

import inventoryreportapp.model.module.common.InventoryReportAppAM;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 12 13:04:33 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InventoryReportAppAMImpl extends ApplicationModuleImpl implements InventoryReportAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    public InventoryReportAppAMImpl() {
    }

    /**
     * Container's getter for MmReceiptRptDtlVw1.
     * @return MmReceiptRptDtlVw1
     */
    public ViewObjectImpl getMmReceiptRptDtlVw1() {
        return (ViewObjectImpl)findViewObject("MmReceiptRptDtlVw1");
    }

    public String resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message.toString();
    }

    public void setInitialVar() {
        
        String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String orgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        // parameter at page load for Material inwards-----------
        ViewObjectImpl inward = this.getMmReceiptRptDtlVw1(); // VO for material Inwards----
        inward.setNamedWhereClauseParam("CldIdBind", cldId);
        inward.setNamedWhereClauseParam("SlocIdBind", slocId);
        inward.setNamedWhereClauseParam("OrgIdBind", orgId);
        inward.setNamedWhereClauseParam("FyIdBind", -3);
        inward.executeQuery();
        // parameter at page load for Material Outwards---------
        ViewObjectImpl outward = this.getMmIssueRptDtlVw1();// VO for Material Outwards------
        outward.setNamedWhereClauseParam("CldIdBind", cldId);
        outward.setNamedWhereClauseParam("SlocIdBind", slocId);
        outward.setNamedWhereClauseParam("OrgIdBind", orgId);
        outward.setNamedWhereClauseParam("FyIdBind", -3);
        outward.executeQuery();
        
        
        this.getKitWorkShop1().executeQuery();
        this.getStockVO1().executeQuery();
        this.getStockTakeVO1().executeQuery();
        this.getPurchaseReturnVO1().executeQuery();
        this.getGatePassVO1().executeQuery();
        this.getMmIssueRptDtlVw1().executeQuery();
        this.getMmReceiptRptDtlVw1().executeQuery();
        this.getSearch1().executeQuery();
        this.getQcProcessParam1().executeQuery();
        this.getSearchMaterialOutward1().executeQuery();
        this.getMrsParam1().executeQuery();
        this.getRmdaParam1().executeQuery();
        this.getPurchaseRequisition1().executeQuery();
        this.getPurchaseInvoiceVO1().executeQuery();
        this.getTransferOrderVO1().executeQuery();
        this.getMaterialReturnNoteVO1().executeQuery();
                            
    }

    /**
     * Container's getter for Search1.
     * @return Search1
     */
    public ViewObjectImpl getSearch1() {
        return (ViewObjectImpl)findViewObject("Search1");
    }

    /** Search For Materila Inwards* written on 14-march-14 */
    public void searchMaterialInward() {
        ViewObjectImpl dtlVw1 = this.getMmReceiptRptDtlVw1();
        ViewObjectImpl srch = this.getSearch1();
        Row currentRow = srch.getCurrentRow();

        if (currentRow.getAttribute("WhId") != null) {
           // System.out.println("whId not null---" + currentRow.getAttribute("WhId"));
            dtlVw1.setNamedWhereClauseParam("WhIdBind", currentRow.getAttribute("WhId").toString());
        } else {
            //System.out.println("warehouse null");
            dtlVw1.setNamedWhereClauseParam("WhIdBind", null);
        }
        if (currentRow.getAttribute("Rcpt_no_doc_id") != null) {
            dtlVw1.setNamedWhereClauseParam("RcptDocIdBind", currentRow.getAttribute("Rcpt_no_doc_id").toString());
        } else {
            //System.out.println("rcptdocid null");
            dtlVw1.setNamedWhereClauseParam("RcptDocIdBind", null);
        }
        if (currentRow.getAttribute("Fy_Id") != null) {
            //System.out.println("fyID not null--" + currentRow.getAttribute("Fy_Id"));
            dtlVw1.setNamedWhereClauseParam("FyIdBind", Integer.parseInt(currentRow.getAttribute("Fy_Id").toString()));
        } else {
            //System.out.println("fyId Null");
            dtlVw1.setNamedWhereClauseParam("FyIdBind", null);
        }
        if (currentRow.getAttribute("Rcpt_Src_Typ") != null) {
           //System.out.println("rcptSrctype---" + currentRow.getAttribute("Rcpt_Src_Typ"));
            dtlVw1.setNamedWhereClauseParam("RcptSrcTypBind",
                                            Integer.parseInt(currentRow.getAttribute("Rcpt_Src_Typ").toString()));
        } else {
            //System.out.println("rcptSrctyp null");
            dtlVw1.setNamedWhereClauseParam("RcptSrcTypBind", null);
        }
        if (currentRow.getAttribute("Doc_Type_Src") != null) {
            //System.out.println("doctypsrc not null" + currentRow.getAttribute("Doc_Type_Src"));
            dtlVw1.setNamedWhereClauseParam("DocTypSrcBind",
                                            Integer.parseInt(currentRow.getAttribute("Doc_Type_Src").toString()));
        } else {
            //System.out.println("doctypesrc null");
            dtlVw1.setNamedWhereClauseParam("DocTypSrcBind", null);
        }
        if (currentRow.getAttribute("Entity_Id") != null) {
            //System.out.println("entity id" + currentRow.getAttribute("Entity_Id"));
            dtlVw1.setNamedWhereClauseParam("RcptSrcIdBind", currentRow.getAttribute("Entity_Id").toString());
        } else {
            //System.out.println("entity id null");
            dtlVw1.setNamedWhereClauseParam("RcptSrcIdBind", null);
        }
        if (currentRow.getAttribute("Doc_Id_Src") != null) {
            //System.out.println("docIdSrc--" + currentRow.getAttribute("Doc_Id_Src"));
            dtlVw1.setNamedWhereClauseParam("DocIdSrcBind", currentRow.getAttribute("Doc_Id_Src").toString());
        } else {
            //System.out.println("docIdSrc null");
            dtlVw1.setNamedWhereClauseParam("DocIdSrcBind", null);
        }
        if (currentRow.getAttribute("Item_Id") != null) {
            dtlVw1.setNamedWhereClauseParam("ItemIdBind", currentRow.getAttribute("Item_Id").toString());
        } else {
            dtlVw1.setNamedWhereClauseParam("ItemIdBind", null);
        }
        if (currentRow.getAttribute("Rcpt_Frm_Dt") != null) {
            dtlVw1.setNamedWhereClauseParam("RcptFrmDtBind", (Date)currentRow.getAttribute("Rcpt_Frm_Dt"));
        } else {
            dtlVw1.setNamedWhereClauseParam("RcptFrmDtBind", null);
        }
        if (currentRow.getAttribute("Rcpt_To_Dt") != null) {
            dtlVw1.setNamedWhereClauseParam("RcptToDtBind", (Date)currentRow.getAttribute("Rcpt_To_Dt"));
        }
        dtlVw1.executeQuery();
    }
    /** Reset For Materila Inwards written on 14-march-14 */
    public void resetMaterialInward() {
        ViewObjectImpl srch = this.getSearch1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("Rcpt_no_doc_id", null);
        currentRow.setAttribute("Fy_Id", null);
        currentRow.setAttribute("Rcpt_Src_Typ", null);
        currentRow.setAttribute("Doc_Type_Src", null);
        currentRow.setAttribute("Entity_Id", null);
        currentRow.setAttribute("Doc_Id_Src", null);
        currentRow.setAttribute("Item_Id", null);
        srch.executeQuery();

        this.getMmReceiptRptDtlVw1().setNamedWhereClauseParam("FyIdBind", -3);
        this.getMmReceiptRptDtlVw1().executeQuery();
    }
    /** Search For Material Outwards written on 25-march-14 */
    public void searchMaterailOutwards(){
        ViewObjectImpl issueVO = this.getMmIssueRptDtlVw1();
        Row currentRow = this.getSearchMaterialOutward1().getCurrentRow();
        
        if(currentRow.getAttribute("WhId")!=null){
            issueVO.setNamedWhereClauseParam("WhIdBind", currentRow.getAttribute("WhId").toString());
        }else{
            issueVO.setNamedWhereClauseParam("WhIdBind", null);
        }
        if(currentRow.getAttribute("IssueType")!=null){
            issueVO.setNamedWhereClauseParam("IssueSrcTypBind", Integer.parseInt(currentRow.getAttribute("IssueType").toString()));
        }
        else{
            issueVO.setNamedWhereClauseParam("IssueSrcTypBind", null);
        }
        if(currentRow.getAttribute("IssueSrcId")!=null){
            issueVO.setNamedWhereClauseParam("IssueSrcIdBind", currentRow.getAttribute("IssueSrcId").toString());
        }
        else{
            issueVO.setNamedWhereClauseParam("IssueSrcIdBind", null);
        }
        if(currentRow.getAttribute("DocTypSrc")!=null){
            issueVO.setNamedWhereClauseParam("DocTypSrcBind", Integer.parseInt(currentRow.getAttribute("DocTypSrc").toString()));
        }
        else{
            issueVO.setNamedWhereClauseParam("DocTypSrcBind", null);
        }
        if(currentRow.getAttribute("DocNoId")!=null){
            issueVO.setNamedWhereClauseParam("DocIdSrcBind", currentRow.getAttribute("DocNoId").toString());
        }
        else{
            issueVO.setNamedWhereClauseParam("DocIdSrcBind", null);
        }
        if(currentRow.getAttribute("IssueNoDocId")!=null){
            issueVO.setNamedWhereClauseParam("DocIdIssueBind", currentRow.getAttribute("IssueNoDocId").toString());
        }
        else{
            issueVO.setNamedWhereClauseParam("DocIdIssueBind", null);
        }
        if(currentRow.getAttribute("ItemId")!=null){
            issueVO.setNamedWhereClauseParam("ItemIdBind", currentRow.getAttribute("ItemId").toString());
        }
        else{
            issueVO.setNamedWhereClauseParam("ItemIdBind", null);
        }
        if(currentRow.getAttribute("IssueFrmDate")!=null){
            issueVO.setNamedWhereClauseParam("IssueFrmDtBind", currentRow.getAttribute("IssueFrmDate"));
        }
        else{
            issueVO.setNamedWhereClauseParam("IssueFrmDtBind", null);
        }
        if(currentRow.getAttribute("IssueToDate")!=null){
            issueVO.setNamedWhereClauseParam("IssueToDtBind", currentRow.getAttribute("IssueToDate"));
        }
        else{
            issueVO.setNamedWhereClauseParam("IssueToDtBind", null);
        }
        if(currentRow.getAttribute("FyId")!=null){
            issueVO.setNamedWhereClauseParam("FyIdBind", Integer.parseInt(currentRow.getAttribute("FyId").toString()));
        }
        else{
            issueVO.setNamedWhereClauseParam("FyIdBind", null);
        }
        issueVO.executeQuery();
    }
    /** Reset For Material Outwards written on 25-march-14 */
    public void resetMaterialOutwards(){
        ViewObjectImpl srch = this.getSearchMaterialOutward1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("FyId", null);
        currentRow.setAttribute("IssueToDate", null);
        currentRow.setAttribute("IssueFrmDate", null);
        currentRow.setAttribute("ItemId", null);
        currentRow.setAttribute("IssueNoDocId", null);
        currentRow.setAttribute("DocNoId", null);
        currentRow.setAttribute("DocTypSrc", null);
        currentRow.setAttribute("IssueSrcId", null);
        currentRow.setAttribute("IssueType", null);
        currentRow.setAttribute("WhId", null);
        srch.executeQuery();
        
        this.getMmIssueRptDtlVw1().setNamedWhereClauseParam("FyIdBind", -3);
        this.getMmIssueRptDtlVw1().executeQuery();
    }
    
    public void resetMRS(){
        this.getMrsParam1().executeQuery();
    }
    public void resetRmda(){
        this.getRmdaParam1().executeQuery();
    }
    public void resetQcProcess(){
        this.getQcProcessParam1().executeQuery();
    }
    /**
     * Container's getter for MmIssueRptDtlVw1.
     * @return MmIssueRptDtlVw1
     */
    public ViewObjectImpl getMmIssueRptDtlVw1() {
        return (ViewObjectImpl)findViewObject("MmIssueRptDtlVw1");
    }

    /**
     * Container's getter for SearchMaterialOutward1.
     * @return SearchMaterialOutward1
     */
    public ViewObjectImpl getSearchMaterialOutward1() {
        return (ViewObjectImpl)findViewObject("SearchMaterialOutward1");
    }

    /**
     * Container's getter for MrsParam1.
     * @return MrsParam1
     */
    public ViewObjectImpl getMrsParam1() {
        return (ViewObjectImpl)findViewObject("MrsParam1");
    }

    /**
     * Container's getter for RmdaParam1.
     * @return RmdaParam1
     */
    public ViewObjectImpl getRmdaParam1() {
        return (ViewObjectImpl)findViewObject("RmdaParam1");
    }

    /**
     * Container's getter for QcProcessParam1.
     * @return QcProcessParam1
     */
    public ViewObjectImpl getQcProcessParam1() {
        return (ViewObjectImpl)findViewObject("QcProcessParam1");
    }

    /**
     * Container's getter for LovItem1.
     * @return LovItem1
     */
    public ViewObjectImpl getLovItem1() {
        return (ViewObjectImpl)findViewObject("LovItem1");
    }

    /**
     * Container's getter for LovLotVO1.
     * @return LovLotVO1
     */
    public ViewObjectImpl getLovLotVO1() {
        return (ViewObjectImpl)findViewObject("LovLotVO1");
    }

    /**
     * Container's getter for LovBinVO1.
     * @return LovBinVO1
     */
    public ViewObjectImpl getLovBinVO1() {
        return (ViewObjectImpl)findViewObject("LovBinVO1");
    }

    /**
     * Container's getter for StockVO1.
     * @return StockVO1
     */
    public ViewObjectImpl getStockVO1() {
        return (ViewObjectImpl)findViewObject("StockVO1");
    }
    
    
    
    public void resetStock() {
       String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
       String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
       
       Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
       
        ViewObjectImpl srch = this.getStockVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("toDate", null);
        currentRow.setAttribute("ItmId", null);
        currentRow.setAttribute("ItmNm", null);
        currentRow.setAttribute("fromDate", null);
        currentRow.setAttribute("LotId", null);
        currentRow.setAttribute("BinId", null);
        currentRow.setAttribute("WipItmFlg", "N");
        currentRow.setAttribute("SlsItmFlg", "N");
        currentRow.setAttribute("PurItmFlg", "N");
        currentRow.setAttribute("ChkSpwFlg", "N");
       currentRow.setAttribute("ItmGrpId", null);
       currentRow.setAttribute("FyId",fyId);
        srch.executeQuery();
   }

    /**
     * Container's getter for LOVStkTkCycle1.
     * @return LOVStkTkCycle1
     */
    public ViewObjectImpl getLOVStkTkCycle1() {
        return (ViewObjectImpl)findViewObject("LOVStkTkCycle1");
    }

    /**
     * Container's getter for LOVMnthSelCr1.
     * @return LOVMnthSelCr1
     */
    public ViewObjectImpl getLOVMnthSelCr1() {
        return (ViewObjectImpl)findViewObject("LOVMnthSelCr1");
    }

    /**
     * Container's getter for LOVStockTKPRf1.
     * @return LOVStockTKPRf1
     */
    public ViewObjectImpl getLOVStockTKPRf1() {
        return (ViewObjectImpl)findViewObject("LOVStockTKPRf1");
    }

    /**
     * Container's getter for LOVYNVO1.
     * @return LOVYNVO1
     */
    public ViewObjectImpl getLOVYNVO1() {
        return (ViewObjectImpl)findViewObject("LOVYNVO1");
    }

    /**
     * Container's getter for StockTakeVO1.
     * @return StockTakeVO1
     */
    public ViewObjectImpl getStockTakeVO1() {
        return (ViewObjectImpl)findViewObject("StockTakeVO1");
    }

    /**
     * Container's getter for LovKitType1.
     * @return LovKitType1
     */
    public ViewObjectImpl getLovKitType1() {
        return (ViewObjectImpl)findViewObject("LovKitType1");
    }

    /**
     * Container's getter for LOVKitWorkShopVO1.
     * @return LOVKitWorkShopVO1
     */
    public ViewObjectImpl getLOVKitWorkShopVO1() {
        return (ViewObjectImpl)findViewObject("LOVKitWorkShopVO1");
    }

    /**
     * Container's getter for KitWorkShop1.
     * @return KitWorkShop1
     */
    public ViewObjectImpl getKitWorkShop1() {
        return (ViewObjectImpl)findViewObject("KitWorkShop1");
    }
    
    
    public void resetStockTake() {
        ViewObjectImpl srch = this.getStockTakeVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("StockTkePrfId", null);
        currentRow.setAttribute("StockPrfDflt", null);
        currentRow.setAttribute("StockMnthCyc", null);
        currentRow.setAttribute("StockTkeCycle", null);
        srch.executeQuery();
    }
    
    public void resetKitWorkShop() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getKitWorkShop1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("KitType", null);
        currentRow.setAttribute("KitNo", null);
        currentRow.setAttribute("FyId", fyId);
        srch.executeQuery();
    }
    
    
    public void resetPurchaseReturn() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getPurchaseReturnVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("EoId", null);
        currentRow.setAttribute("docId", null);
        currentRow.setAttribute("FyId", fyId);
        currentRow.setAttribute("PurStat", null);
        currentRow.setAttribute("AuthStat", null);
        currentRow.setAttribute("fromDate", null);
        currentRow.setAttribute("toDate", null);
        currentRow.setAttribute("ItmId", null);
        srch.executeQuery();
    }
    
    public void resetGatePass() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getGatePassVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("docId", null);
        currentRow.setAttribute("EoId", null);
        currentRow.setAttribute("FyId", fyId);
        currentRow.setAttribute("docTypeSrc", null);
        srch.executeQuery();
    }
    
    
    public void resetPurchaseRequisition() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getPurchaseRequisition1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("docId", null);
        currentRow.setAttribute("FyId", fyId);
        currentRow.setAttribute("PurReqStat", null);
        currentRow.setAttribute("AuthStat", null);
        currentRow.setAttribute("fromDate", null);
        currentRow.setAttribute("toDate", null);
        currentRow.setAttribute("RqmtArea", null);
        srch.executeQuery();
    }
    
    
    public void resetTransferOrder() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getTransferOrderVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("TrfDocId", null);
        currentRow.setAttribute("FyId", fyId);
        currentRow.setAttribute("TrfSrcType", null);
        currentRow.setAttribute("AuthStat", null);
        currentRow.setAttribute("FromDate", null);
        currentRow.setAttribute("ToDate", null);
        currentRow.setAttribute("TrfType", null);
        currentRow.setAttribute("TrfStat", null);
         srch.executeQuery();
    }
    
    
    protected Object callStoredFunction(int sqlReturnType, String stmt,
                                          Object[] bindVars) {
        CallableStatement st = null;
        try {
          // 1. Create a JDBC CallabledStatement
          st =
              getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;",
                                                         0);
          // 2. Register the first bind variable for the return value
          st.registerOutParameter(1, sqlReturnType);
          if (bindVars != null) {
            // 3. Loop over values for the bind variables passed in, if any
            for (int z = 0; z < bindVars.length; z++) {
              // 4. Set the value of user-supplied bind vars in the stmt
              st.setObject(z + 2, bindVars[z]);
            }
          }
          // 5. Set the value of user-supplied bind vars in the stmt
          st.executeUpdate();
          // 6. Return the value of the first bind variable
          return st.getObject(1);
        } catch (SQLException e) {
          throw new JboException(e);
        } finally {
          if (st != null) {
            try {
              // 7. Close the statement
              st.close();
            } catch (SQLException e) {
            }
          }
        }
      }

    /**
     * Container's getter for LOVGp1.
     * @return LOVGp1
     */
    public ViewObjectImpl getLOVGp1() {
        return (ViewObjectImpl)findViewObject("LOVGp1");
    }

    /**
     * Container's getter for LOVGpDocType1.
     * @return LOVGpDocType1
     */
    public ViewObjectImpl getLOVGpDocType1() {
        return (ViewObjectImpl)findViewObject("LOVGpDocType1");
    }

    /**
     * Container's getter for LOVEoVO1.
     * @return LOVEoVO1
     */
    public ViewObjectImpl getLOVEoVO1() {
        return (ViewObjectImpl)findViewObject("LOVEoVO1");
    }

    /**
     * Container's getter for GatePassVO1.
     * @return GatePassVO1
     */
    public ViewObjectImpl getGatePassVO1() {
        return (ViewObjectImpl)findViewObject("GatePassVO1");
    }

    /**
     * Container's getter for PurchaseReturnVO1.
     * @return PurchaseReturnVO1
     */
    public ViewObjectImpl getPurchaseReturnVO1() {
        return (ViewObjectImpl)findViewObject("PurchaseReturnVO1");
    }

    /**
     * Container's getter for LovPurReturnVO1.
     * @return LovPurReturnVO1
     */
    public ViewObjectImpl getLovPurReturnVO1() {
        return (ViewObjectImpl)findViewObject("LovPurReturnVO1");
    }

    /**
     * Container's getter for LovPurRtnStatus1.
     * @return LovPurRtnStatus1
     */
    public ViewObjectImpl getLovPurRtnStatus1() {
        return (ViewObjectImpl)findViewObject("LovPurRtnStatus1");
    }

    /**
     * Container's getter for PurchaseInvoiceVO1.
     * @return PurchaseInvoiceVO1
     */
    public ViewObjectImpl getPurchaseInvoiceVO1() {
        return (ViewObjectImpl)findViewObject("PurchaseInvoiceVO1");
    }

    /**
     * Container's getter for PurchaseRequisition1.
     * @return PurchaseRequisition1
     */
    public ViewObjectImpl getPurchaseRequisition1() {
        return (ViewObjectImpl)findViewObject("PurchaseRequisition1");
    }

    /**
     * Container's getter for TransferOrderVO1.
     * @return TransferOrderVO1
     */
    public ViewObjectImpl getTransferOrderVO1() {
        return (ViewObjectImpl)findViewObject("TransferOrderVO1");
    }

    /**
     * Container's getter for MaterialReturnNoteVO1.
     * @return MaterialReturnNoteVO1
     */
    public ViewObjectImpl getMaterialReturnNoteVO1() {
        return (ViewObjectImpl)findViewObject("MaterialReturnNoteVO1");
    }

    /**
     * Container's getter for LovRqmtArea1.
     * @return LovRqmtArea1
     */
    public ViewObjectImpl getLovRqmtArea1() {
        return (ViewObjectImpl)findViewObject("LovRqmtArea1");
    }

    /**
     * Container's getter for LOVPurRequ1.
     * @return LOVPurRequ1
     */
    public ViewObjectImpl getLOVPurRequ1() {
        return (ViewObjectImpl)findViewObject("LOVPurRequ1");
    }

    /**
     * Container's getter for LOVPurRequistion1.
     * @return LOVPurRequistion1
     */
    public ViewObjectImpl getLOVPurRequistion1() {
        return (ViewObjectImpl)findViewObject("LOVPurRequistion1");
    }

    /**
     * Container's getter for LOVTrnOrderSrcType1.
     * @return LOVTrnOrderSrcType1
     */
    public ViewObjectImpl getLOVTrnOrderSrcType1() {
        return (ViewObjectImpl)findViewObject("LOVTrnOrderSrcType1");
    }

    /**
     * Container's getter for LOVTrnsOrder1.
     * @return LOVTrnsOrder1
     */
    public ViewObjectImpl getLOVTrnsOrder1() {
        return (ViewObjectImpl)findViewObject("LOVTrnsOrder1");
    }

    /**
     * Container's getter for LovTrnsOrderStat1.
     * @return LovTrnsOrderStat1
     */
    public ViewObjectImpl getLovTrnsOrderStat1() {
        return (ViewObjectImpl)findViewObject("LovTrnsOrderStat1");
    }

    /**
     * Container's getter for LovTrsOrderType1.
     * @return LovTrsOrderType1
     */
    public ViewObjectImpl getLovTrsOrderType1() {
        return (ViewObjectImpl)findViewObject("LovTrsOrderType1");
    }

    /**
     * Container's getter for LOVItmGrp1.
     * @return LOVItmGrp1
     */
    public ViewObjectImpl getLOVItmGrp1() {
        return (ViewObjectImpl)findViewObject("LOVItmGrp1");
    }

    /**
     * Container's getter for LovMrnStat1.
     * @return LovMrnStat1
     */
    public ViewObjectImpl getLovMrnStat1() {
        return (ViewObjectImpl)findViewObject("LovMrnStat1");
    }

    /**
     * Container's getter for LOVMrnVO1.
     * @return LOVMrnVO1
     */
    public ViewObjectImpl getLOVMrnVO1() {
        return (ViewObjectImpl)findViewObject("LOVMrnVO1");
    }

    /**
     * Container's getter for LOVMmIssu1.
     * @return LOVMmIssu1
     */
    public ViewObjectImpl getLOVMmIssu1() {
        return (ViewObjectImpl)findViewObject("LOVMmIssu1");
    }
    
    
    public void resetMrn() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        
        ViewObjectImpl srch = this.getMaterialReturnNoteVO1();
        Row currentRow = srch.getCurrentRow();
        currentRow.setAttribute("WhId", null);
        currentRow.setAttribute("DocId", null);
        currentRow.setAttribute("FyId", fyId);
        currentRow.setAttribute("MMIssuDoc", null);
        currentRow.setAttribute("AuthStat", null);
        currentRow.setAttribute("FromDate", null);
        currentRow.setAttribute("ToDate", null);
        currentRow.setAttribute("RqmtArea", null);
        currentRow.setAttribute("OrgRetId", null);
         srch.executeQuery();
    }

    /**
     * Container's getter for LovOrgHoVO1.
     * @return LovOrgHoVO1
     */
    public ViewObjectImpl getLovOrgHoVO1() {
        return (ViewObjectImpl)findViewObject("LovOrgHoVO1");
    }

    /**
     * Container's getter for LOVWHVO1.
     * @return LOVWHVO1
     */
    public ViewObjectImpl getLOVWHVO1() {
        return (ViewObjectImpl)findViewObject("LOVWHVO1");
    }

    /**
     * Container's getter for PuchaseInvoiceParam1.
     * @return PuchaseInvoiceParam1
     */
    public ViewObjectImpl getPuchaseInvoiceParam1() {
        return (ViewObjectImpl)findViewObject("PuchaseInvoiceParam1");
    }
    
    public void resetPI(){
        this.getPuchaseInvoiceParam1().executeQuery();
    }
}
