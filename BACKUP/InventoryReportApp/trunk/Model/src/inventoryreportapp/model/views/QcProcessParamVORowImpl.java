package inventoryreportapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 08 16:11:55 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class QcProcessParamVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CldId {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        QcFrmDate {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getQcFrmDate();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setQcFrmDate((Date)value);
            }
        }
        ,
        QcToDate {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getQcToDate();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setQcToDate((Date)value);
            }
        }
        ,
        QcChek {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getQcChek();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setQcChek((Integer)value);
            }
        }
        ,
        QcStatus {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getQcStatus();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setQcStatus((String)value);
            }
        }
        ,
        ReceiptNo {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getReceiptNo();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setReceiptNo((String)value);
            }
        }
        ,
        QcSrcTxnId {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getQcSrcTxnId();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setQcSrcTxnId((String)value);
            }
        }
        ,
        LOVReceiptNoForQc1 {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getLOVReceiptNoForQc1();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVQcCheckVO1 {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getLOVQcCheckVO1();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVQcStatusVO1 {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getLOVQcStatusVO1();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(QcProcessParamVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(QcProcessParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(QcProcessParamVORowImpl object);

        public abstract void put(QcProcessParamVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int QCFRMDATE = AttributesEnum.QcFrmDate.index();
    public static final int QCTODATE = AttributesEnum.QcToDate.index();
    public static final int QCCHEK = AttributesEnum.QcChek.index();
    public static final int QCSTATUS = AttributesEnum.QcStatus.index();
    public static final int RECEIPTNO = AttributesEnum.ReceiptNo.index();
    public static final int QCSRCTXNID = AttributesEnum.QcSrcTxnId.index();
    public static final int LOVRECEIPTNOFORQC1 = AttributesEnum.LOVReceiptNoForQc1.index();
    public static final int LOVQCCHECKVO1 = AttributesEnum.LOVQcCheckVO1.index();
    public static final int LOVQCSTATUSVO1 = AttributesEnum.LOVQcStatusVO1.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public QcProcessParamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
            cldid=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            return cldid;
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer sloc;
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
         sloc =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            return sloc;
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }
    public Object resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    Object Message=valueExp.getValue(elContext);
    return Message;
    }
    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null){
         orgid =resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            return orgid;
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcFrmDate.
     * @return the QcFrmDate
     */
    public Date getQcFrmDate() {
        return (Date) getAttributeInternal(QCFRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcFrmDate.
     * @param value value to set the  QcFrmDate
     */
    public void setQcFrmDate(Date value) {
        setAttributeInternal(QCFRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcToDate.
     * @return the QcToDate
     */
    public Date getQcToDate() {
        return (Date) getAttributeInternal(QCTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcToDate.
     * @param value value to set the  QcToDate
     */
    public void setQcToDate(Date value) {
        setAttributeInternal(QCTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcChek.
     * @return the QcChek
     */
    public Integer getQcChek() {
        return (Integer) getAttributeInternal(QCCHEK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcChek.
     * @param value value to set the  QcChek
     */
    public void setQcChek(Integer value) {
        setAttributeInternal(QCCHEK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcStatus.
     * @return the QcStatus
     */
    public String getQcStatus() {
        return (String) getAttributeInternal(QCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcStatus.
     * @param value value to set the  QcStatus
     */
    public void setQcStatus(String value) {
        setAttributeInternal(QCSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReceiptNo.
     * @return the ReceiptNo
     */
    public String getReceiptNo() {
        return (String) getAttributeInternal(RECEIPTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReceiptNo.
     * @param value value to set the  ReceiptNo
     */
    public void setReceiptNo(String value) {
        setAttributeInternal(RECEIPTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcSrcTxnId.
     * @return the QcSrcTxnId
     */
    public String getQcSrcTxnId() {
        return (String) getAttributeInternal(QCSRCTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcSrcTxnId.
     * @param value value to set the  QcSrcTxnId
     */
    public void setQcSrcTxnId(String value) {
        setAttributeInternal(QCSRCTXNID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVReceiptNoForQc1.
     */
    public RowSet getLOVReceiptNoForQc1() {
        return (RowSet)getAttributeInternal(LOVRECEIPTNOFORQC1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVQcCheckVO1.
     */
    public RowSet getLOVQcCheckVO1() {
        return (RowSet)getAttributeInternal(LOVQCCHECKVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVQcStatusVO1.
     */
    public RowSet getLOVQcStatusVO1() {
        return (RowSet)getAttributeInternal(LOVQCSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
