package mmDiscountApp.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 17 11:34:42 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmSchmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmSchmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmSchmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SchmId {
            public Object get(MmSchmEOImpl obj) {
                return obj.getSchmId();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setSchmId((String)value);
            }
        }
        ,
        SchmNm {
            public Object get(MmSchmEOImpl obj) {
                return obj.getSchmNm();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setSchmNm((String)value);
            }
        }
        ,
        SchmDesc {
            public Object get(MmSchmEOImpl obj) {
                return obj.getSchmDesc();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setSchmDesc((String)value);
            }
        }
        ,
        ValidFrm {
            public Object get(MmSchmEOImpl obj) {
                return obj.getValidFrm();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setValidFrm((Date)value);
            }
        }
        ,
        ValidUpto {
            public Object get(MmSchmEOImpl obj) {
                return obj.getValidUpto();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setValidUpto((Date)value);
            }
        }
        ,
        Actv {
            public Object get(MmSchmEOImpl obj) {
                return obj.getActv();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(MmSchmEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(MmSchmEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmSchmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmSchmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmSchmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmSchmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmSchmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        SchmType {
            public Object get(MmSchmEOImpl obj) {
                return obj.getSchmType();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setSchmType((Integer)value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmSchmEOImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setDiscAmtBs((Number)value);
            }
        }
        ,
        CldId {
            public Object get(MmSchmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MmSchmItm {
            public Object get(MmSchmEOImpl obj) {
                return obj.getMmSchmItm();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmSchmFreeItm {
            public Object get(MmSchmEOImpl obj) {
                return obj.getMmSchmFreeItm();
            }

            public void put(MmSchmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmSchmEOImpl object);

        public abstract void put(MmSchmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int SCHMNM = AttributesEnum.SchmNm.index();
    public static final int SCHMDESC = AttributesEnum.SchmDesc.index();
    public static final int VALIDFRM = AttributesEnum.ValidFrm.index();
    public static final int VALIDUPTO = AttributesEnum.ValidUpto.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int SCHMTYPE = AttributesEnum.SchmType.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MMSCHMITM = AttributesEnum.MmSchmItm.index();
    public static final int MMSCHMFREEITM = AttributesEnum.MmSchmFreeItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmSchmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmDiscountApp.model.entities.MmSchmEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SchmId, using the alias name SchmId.
     * @return the value of SchmId
     */
    public String getSchmId() {
        return (String)getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmId.
     * @param value value to set the SchmId
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for SchmNm, using the alias name SchmNm.
     * @return the value of SchmNm
     */
    public String getSchmNm() {
        return (String)getAttributeInternal(SCHMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmNm.
     * @param value value to set the SchmNm
     */
    public void setSchmNm(String value) {
        setAttributeInternal(SCHMNM, value);
    }

    /**
     * Gets the attribute value for SchmDesc, using the alias name SchmDesc.
     * @return the value of SchmDesc
     */
    public String getSchmDesc() {
        return (String)getAttributeInternal(SCHMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmDesc.
     * @param value value to set the SchmDesc
     */
    public void setSchmDesc(String value) {
        setAttributeInternal(SCHMDESC, value);
    }

    /**
     * Gets the attribute value for ValidFrm, using the alias name ValidFrm.
     * @return the value of ValidFrm
     */
    public Date getValidFrm() {
        return (Date)getAttributeInternal(VALIDFRM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidFrm.
     * @param value value to set the ValidFrm
     */
    public void setValidFrm(Date value) {
        setAttributeInternal(VALIDFRM, value);
    }

    /**
     * Gets the attribute value for ValidUpto, using the alias name ValidUpto.
     * @return the value of ValidUpto
     */
    public Date getValidUpto() {
        return (Date)getAttributeInternal(VALIDUPTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidUpto.
     * @param value value to set the ValidUpto
     */
    public void setValidUpto(Date value) {
        setAttributeInternal(VALIDUPTO, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Date getInactvDt() {
        return (Date)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for SchmType, using the alias name SchmType.
     * @return the value of SchmType
     */
    public Integer getSchmType() {
        return (Integer)getAttributeInternal(SCHMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmType.
     * @param value value to set the SchmType
     */
    public void setSchmType(Integer value) {
        setAttributeInternal(SCHMTYPE, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number)getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmSchmItm() {
        return (RowIterator)getAttributeInternal(MMSCHMITM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmSchmFreeItm() {
        return (RowIterator)getAttributeInternal(MMSCHMFREEITM);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param schmId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String schmId, String cldId) {
        return new Key(new Object[]{slocId, orgId, schmId, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    
     private static int STRING = Types.VARCHAR;

     protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
         CallableStatement st = null;
         try {

             // 1. Create a JDBC CallabledStatement
             st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
             // 2. Register the first bind variable for the return value
             st.registerOutParameter(1, sqlReturnType);
             if (bindVars != null) {
                 // 3. Loop over values for the bind variables passed in, if any
                 for (int z = 0; z < bindVars.length; z++) {
                     // 4. Set the value of user-supplied bind vars in the stmt
                     st.setObject(z + 2, bindVars[z]);
                 }
             }
             // 5. Set the value of user-supplied bind vars in the stmt
             st.executeUpdate();
             // 6. Return the value of the first bind variable
             return st.getObject(1);
         } catch (SQLException e) {
             throw new JboException(e);
         } finally {
             if (st != null) {
                 try {
                     // 7. Close the statement
                     st.close();
                 } catch (SQLException e) {
                     e.printStackTrace();
                 }
             }
         }
     }
    /* protected void create(AttributeList attributeList) {
        
        Integer UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        String cldId=(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")).toString();
        String org=(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")).toString();
            
        super.create(attributeList);
        String SchmId =
           (String)callStoredFunction(STRING, "MM.pkg_mm_gen.generate_id(?,?,?,?,?)", new Object[] {slocId,cldId,null,null, "APP$WH" });
        System.out.println("imgId==========" + SchmId);
        this.setSchmId(SchmId);
        
    } */
    
    protected void create(AttributeList attributeList) {
       Integer slocid = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
       String orgid = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
       Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
       String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        
       setSlocId(slocid);
       //setOrgId(orgid);
       setUsrIdCreate(userId);
        String SchmId =
           (String)callStoredFunction(STRING, "MM.FN_MM_GEN_ID(?,?,?,?)", new Object[] {slocid,cldId, orgid, "MM$SCHM" });
        System.out.println("schms idId==========" + SchmId);
        this.setSchmId(SchmId);
        setCldId(cldId);
     
       super.create(attributeList);
    }

    
    
    
    
    

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
           Integer UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
           setUsrIdMod(UserId);
           
           
           
        }
        else if(operation == DML_INSERT){
            Integer UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdCreate(UserId);
        }
        super.doDML(operation, e);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
}
