package materialreturnnote.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 07 09:58:28 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMrnItmStkEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        LotId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getLotId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        SrNo {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        EoId {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        TotRetQty {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getTotRetQty();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setTotRetQty((Number)value);
            }
        }
        ,
        OkQty {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getOkQty();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setOkQty((Number)value);
            }
        }
        ,
        RejQty {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getRejQty();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setRejQty((Number)value);
            }
        }
        ,
        RwkQty {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getRwkQty();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setRwkQty((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        OkQtyBs {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getOkQtyBs();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setOkQtyBs((Number)value);
            }
        }
        ,
        RejQtyBs {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getRejQtyBs();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setRejQtyBs((Number)value);
            }
        }
        ,
        RwkQtyBs {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getRwkQtyBs();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setRwkQtyBs((Number)value);
            }
        }
        ,
        DocIdPurRet {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getDocIdPurRet();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setDocIdPurRet((String)value);
            }
        }
        ,
        ScrpQty {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getScrpQty();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setScrpQty((Number)value);
            }
        }
        ,
        ScrpQtyBs {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getScrpQtyBs();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setScrpQtyBs((Number)value);
            }
        }
        ,
        DocIdRcptBack {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getDocIdRcptBack();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setDocIdRcptBack((String)value);
            }
        }
        ,
        MmMrnItm {
            public Object get(MmMrnItmStkEOImpl obj) {
                return obj.getMmMrnItm();
            }

            public void put(MmMrnItmStkEOImpl obj, Object value) {
                obj.setMmMrnItm((MmMrnItmEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMrnItmStkEOImpl object);

        public abstract void put(MmMrnItmStkEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int TOTRETQTY = AttributesEnum.TotRetQty.index();
    public static final int OKQTY = AttributesEnum.OkQty.index();
    public static final int REJQTY = AttributesEnum.RejQty.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int OKQTYBS = AttributesEnum.OkQtyBs.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int RWKQTYBS = AttributesEnum.RwkQtyBs.index();
    public static final int DOCIDPURRET = AttributesEnum.DocIdPurRet.index();
    public static final int SCRPQTY = AttributesEnum.ScrpQty.index();
    public static final int SCRPQTYBS = AttributesEnum.ScrpQtyBs.index();
    public static final int DOCIDRCPTBACK = AttributesEnum.DocIdRcptBack.index();
    public static final int MMMRNITM = AttributesEnum.MmMrnItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMrnItmStkEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for LotId, using the alias name LotId.
     * @return the value of LotId
     */
    public String getLotId() {
        return (String)getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotId.
     * @param value value to set the LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for SrNo, using the alias name SrNo.
     * @return the value of SrNo
     */
    public String getSrNo() {
        return (String)getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrNo.
     * @param value value to set the SrNo
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for DocIdRcpt, using the alias name DocIdRcpt.
     * @return the value of DocIdRcpt
     */
    public String getDocIdRcpt() {
        return (String)getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdRcpt.
     * @param value value to set the DocIdRcpt
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for TotRetQty, using the alias name TotRetQty.
     * @return the value of TotRetQty
     */
    public Number getTotRetQty() {
        return (Number)getAttributeInternal(TOTRETQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotRetQty.
     * @param value value to set the TotRetQty
     */
    public void setTotRetQty(Number value) {
        setAttributeInternal(TOTRETQTY, value);
    }

    /**
     * Gets the attribute value for OkQty, using the alias name OkQty.
     * @return the value of OkQty
     */
    public Number getOkQty() {
        return (Number)getAttributeInternal(OKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OkQty.
     * @param value value to set the OkQty
     */
    public void setOkQty(Number value) {
        setAttributeInternal(OKQTY, value);
    }

    /**
     * Gets the attribute value for RejQty, using the alias name RejQty.
     * @return the value of RejQty
     */
    public Number getRejQty() {
        return (Number)getAttributeInternal(REJQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejQty.
     * @param value value to set the RejQty
     */
    public void setRejQty(Number value) {
        setAttributeInternal(REJQTY, value);
    }

    /**
     * Gets the attribute value for RwkQty, using the alias name RwkQty.
     * @return the value of RwkQty
     */
    public Number getRwkQty() {
        return (Number)getAttributeInternal(RWKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwkQty.
     * @param value value to set the RwkQty
     */
    public void setRwkQty(Number value) {
        setAttributeInternal(RWKQTY, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for OkQtyBs, using the alias name OkQtyBs.
     * @return the value of OkQtyBs
     */
    public Number getOkQtyBs() {
        return (Number)getAttributeInternal(OKQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OkQtyBs.
     * @param value value to set the OkQtyBs
     */
    public void setOkQtyBs(Number value) {
        setAttributeInternal(OKQTYBS, value);
    }

    /**
     * Gets the attribute value for RejQtyBs, using the alias name RejQtyBs.
     * @return the value of RejQtyBs
     */
    public Number getRejQtyBs() {
        return (Number)getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejQtyBs.
     * @param value value to set the RejQtyBs
     */
    public void setRejQtyBs(Number value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for RwkQtyBs, using the alias name RwkQtyBs.
     * @return the value of RwkQtyBs
     */
    public Number getRwkQtyBs() {
        return (Number)getAttributeInternal(RWKQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwkQtyBs.
     * @param value value to set the RwkQtyBs
     */
    public void setRwkQtyBs(Number value) {
        setAttributeInternal(RWKQTYBS, value);
    }

    /**
     * Gets the attribute value for DocIdPurRet, using the alias name DocIdPurRet.
     * @return the value of DocIdPurRet
     */
    public String getDocIdPurRet() {
        return (String)getAttributeInternal(DOCIDPURRET);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdPurRet.
     * @param value value to set the DocIdPurRet
     */
    public void setDocIdPurRet(String value) {
        setAttributeInternal(DOCIDPURRET, value);
    }

    /**
     * Gets the attribute value for ScrpQty, using the alias name ScrpQty.
     * @return the value of ScrpQty
     */
    public Number getScrpQty() {
        return (Number)getAttributeInternal(SCRPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScrpQty.
     * @param value value to set the ScrpQty
     */
    public void setScrpQty(Number value) {
        setAttributeInternal(SCRPQTY, value);
    }

    /**
     * Gets the attribute value for ScrpQtyBs, using the alias name ScrpQtyBs.
     * @return the value of ScrpQtyBs
     */
    public Number getScrpQtyBs() {
        return (Number)getAttributeInternal(SCRPQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScrpQtyBs.
     * @param value value to set the ScrpQtyBs
     */
    public void setScrpQtyBs(Number value) {
        setAttributeInternal(SCRPQTYBS, value);
    }

    /**
     * Gets the attribute value for DocIdRcptBack, using the alias name DocIdRcptBack.
     * @return the value of DocIdRcptBack
     */
    public String getDocIdRcptBack() {
        return (String)getAttributeInternal(DOCIDRCPTBACK);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdRcptBack.
     * @param value value to set the DocIdRcptBack
     */
    public void setDocIdRcptBack(String value) {
        setAttributeInternal(DOCIDRCPTBACK, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmMrnItmEOImpl.
     */
    public MmMrnItmEOImpl getMmMrnItm() {
        return (MmMrnItmEOImpl)getAttributeInternal(MMMRNITM);
    }

    /**
     * Sets <code>value</code> as the associated entity MmMrnItmEOImpl.
     */
    public void setMmMrnItm(MmMrnItmEOImpl value) {
        setAttributeInternal(MMMRNITM, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent
     * @param lotId key constituent
     * @param srNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String itmId,
                                       String itmUom, String lotId, String srNo) {
        return new Key(new Object[]{cldId, slocId, orgId, docId, itmId, itmUom, lotId, srNo});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("materialreturnnote.model.entities.MmMrnItmStkEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
