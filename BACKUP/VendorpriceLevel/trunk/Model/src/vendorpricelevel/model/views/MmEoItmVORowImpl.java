package vendorpricelevel.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import vendorpricelevel.model.entities.MmEoItmEOImpl;
import vendorpricelevel.model.services.vendorpriceAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 08 10:24:47 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmEoItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMEOITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        EoId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        LeadTime {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getLeadTime();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setLeadTime((Integer)value);
            }
        }
        ,
        Actv {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getActv();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getInactvResn();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getInactvDt();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EntityId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        DiscType {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        OrdQty {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        TlrncType {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTlrncType();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTlrncType((String)value);
            }
        }
        ,
        TlrncVal {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTlrncVal();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTlrncVal((Number)value);
            }
        }
        ,
        SrcDocId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getSrcDocId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setSrcDocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SrcDocTxnId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getSrcDocTxnId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setSrcDocTxnId((String)value);
            }
        }
        ,
        ItmPriceUomBs {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmPriceUomBs();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setItmPriceUomBs((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer)value);
            }
        }
        ,
        TranUomClass {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTranUomClass();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTranUomClass((Integer)value);
            }
        }
        ,
        TransCurrConvFctr {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransCurrConvFctr();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransCurrConvFctr((Number)value);
            }
        }
        ,
        TransPriceBsCurr {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransPriceBsCurr();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransPriceBsCurr((Number)value);
            }
        }
        ,
        TransItmUomBsDesc {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransItmUomBsDesc();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransItmUomBsDesc((String)value);
            }
        }
        ,
        TransItmUomSpDesc {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransItmUomSpDesc();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransItmUomSpDesc((String)value);
            }
        }
        ,
        TransPriceBsCurrBsUnit {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransPriceBsCurrBsUnit();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransPriceBsCurrBsUnit((Number)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        TransItmDesc {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransItmDesc();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransItmDesc((String)value);
            }
        }
        ,
        TransCurrIdSp {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransCurrIdSp();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransCurrIdSp((String)value);
            }
        }
        ,
        TransOrgCurrId {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getTransOrgCurrId();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setTransOrgCurrId((Integer)value);
            }
        }
        ,
        supIdLOV1 {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getsupIdLOV1();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        uomLOV1 {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getuomLOV1();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmIdLOV1 {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getItmIdLOV1();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DiscountVO1 {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getDiscountVO1();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CurrencyVO1 {
            public Object get(MmEoItmVORowImpl obj) {
                return obj.getCurrencyVO1();
            }

            public void put(MmEoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmEoItmVORowImpl object);

        public abstract void put(MmEoItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int LEADTIME = AttributesEnum.LeadTime.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int TLRNCVAL = AttributesEnum.TlrncVal.index();
    public static final int SRCDOCID = AttributesEnum.SrcDocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SRCDOCTXNID = AttributesEnum.SrcDocTxnId.index();
    public static final int ITMPRICEUOMBS = AttributesEnum.ItmPriceUomBs.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int TRANUOMCLASS = AttributesEnum.TranUomClass.index();
    public static final int TRANSCURRCONVFCTR = AttributesEnum.TransCurrConvFctr.index();
    public static final int TRANSPRICEBSCURR = AttributesEnum.TransPriceBsCurr.index();
    public static final int TRANSITMUOMBSDESC = AttributesEnum.TransItmUomBsDesc.index();
    public static final int TRANSITMUOMSPDESC = AttributesEnum.TransItmUomSpDesc.index();
    public static final int TRANSPRICEBSCURRBSUNIT = AttributesEnum.TransPriceBsCurrBsUnit.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSCURRIDSP = AttributesEnum.TransCurrIdSp.index();
    public static final int TRANSORGCURRID = AttributesEnum.TransOrgCurrId.index();
    public static final int SUPIDLOV1 = AttributesEnum.supIdLOV1.index();
    public static final int UOMLOV1 = AttributesEnum.uomLOV1.index();
    public static final int ITMIDLOV1 = AttributesEnum.ItmIdLOV1.index();
    public static final int DISCOUNTVO1 = AttributesEnum.DiscountVO1.index();
    public static final int CURRENCYVO1 = AttributesEnum.CurrencyVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmEoItmVORowImpl() {
    }

    /**
     * Gets MmEoItmEO entity object.
     * @return the MmEoItmEO
     */
    public MmEoItmEOImpl getMmEoItmEO() {
        return (MmEoItmEOImpl)getEntity(ENTITY_MMEOITMEO);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        if(getAttributeInternal(ITMPRICE)!=null)
        {
           
                return (Number)getAttributeInternal(ITMPRICE);
            }
        else
            return new Number(0);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if(value==null)
            value=new Number(0);
        Number price=value;
        
        Number uomconv=new Number(1);
        if(getUomConvFctr()!=null)
        uomconv=getUomConvFctr();
        setItmPriceUomBs(price.divide(uomconv));
        System.out.println(" value "+value+"  uomconv  "+uomconv+" price.multiply(uomconv)   "+price.multiply(uomconv));
        setAttributeInternal(ITMPRICE, value);
    }


    /**
     * Gets the attribute value for LEAD_TIME using the alias name LeadTime.
     * @return the LEAD_TIME
     */
    public Integer getLeadTime() {
        return (Integer) getAttributeInternal(LEADTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAD_TIME using the alias name LeadTime.
     * @param value value to set the LEAD_TIME
     */
    public void setLeadTime(Integer value) {
        setAttributeInternal(LEADTIME, value);
    }

    /**
     * Gets the attribute value for ACTV using the alias name Actv.
     * @return the ACTV
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV using the alias name Actv.
     * @param value value to set the ACTV
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for INACTV_RESN using the alias name InactvResn.
     * @return the INACTV_RESN
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_RESN using the alias name InactvResn.
     * @param value value to set the INACTV_RESN
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Date getInactvDt() {
        return (Date) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for ORD_QTY using the alias name OrdQty.
     * @return the ORD_QTY
     */
    public Number getOrdQty() {
        return (Number)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ORD_QTY using the alias name OrdQty.
     * @param value value to set the ORD_QTY
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @return the TLRNC_TYPE
     */
    public String getTlrncType() {
        return (String) getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @param value value to set the TLRNC_TYPE
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_VAL using the alias name TlrncVal.
     * @return the TLRNC_VAL
     */
    public Number getTlrncVal() {
        return (Number)getAttributeInternal(TLRNCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_VAL using the alias name TlrncVal.
     * @param value value to set the TLRNC_VAL
     */
    public void setTlrncVal(Number value) {
        setAttributeInternal(TLRNCVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranUomClass.
     * @return the TranUomClass
     */
    public Integer getTranUomClass() {
        return (Integer) getAttributeInternal(TRANUOMCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranUomClass.
     * @param value value to set the  TranUomClass
     */
    public void setTranUomClass(Integer value) {
        setAttributeInternal(TRANUOMCLASS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrConvFctr.
     * @return the TransCurrConvFctr
     */
    public Number getTransCurrConvFctr() {
       
        vendorpriceAMImpl am = (vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
          ViewObjectImpl currVo=am.getCurrencyVO1();
       RowQualifier rq=new RowQualifier(currVo);
    rq.setWhereClause("CldId='"+getCldId()+"' and OrgId='"+getOrgId()+"' and HoOrgId='"+getTransHoOrgId()+"' and CcCurrId="+getTransOrgCurrId()+" and CcCurrIdTxn="+getCurrIdSp());
          Row r[]=am.getCurrencyVO1().getFilteredRows(rq);
          if(r.length>0)
              return (Number)r[0].getAttribute("CcBuy");
       return (Number) getAttributeInternal(TRANSCURRCONVFCTR); 
    }
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);

    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrConvFctr.
     * @param value value to set the  TransCurrConvFctr
     */
    public void setTransCurrConvFctr(Number value) {
        setAttributeInternal(TRANSCURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPriceBsCurr.
     * @return the TransPriceBsCurr
     */
    public Number getTransPriceBsCurr() {
        Number price=new Number(0);
        Number currconv=new Number(1);
        if(getItmPrice()!=null)
        {
            price=getItmPrice();
            }
        if(getTransCurrConvFctr()!=null)
        {
            currconv=getTransCurrConvFctr();
            }
        return price.multiply(currconv);
       // return (Number) getAttributeInternal(TRANSPRICEBSCURR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPriceBsCurr.
     * @param value value to set the  TransPriceBsCurr
     */
    public void setTransPriceBsCurr(Number value) {
       setAttributeInternal(TRANSPRICEBSCURR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomBsDesc.
     * @return the TransItmUomBsDesc
     */
    public String getTransItmUomBsDesc() {
        if(getAttributeInternal(TRANSITMUOMBSDESC)!=null)
        return (String) getAttributeInternal(TRANSITMUOMBSDESC);
        else
        {
           
                vendorpriceAMImpl am = (vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
                am.getuomLOV1().setNamedWhereClauseParam("orgBind", getOrgId());
                am.getuomLOV1().setNamedWhereClauseParam("hoorgBind", getTransHoOrgId());
                am.getuomLOV1().setNamedWhereClauseParam("CldIdBindVar", getCldId());
                am.getuomLOV1().setNamedWhereClauseParam("SlocIdBindVar", getSlocId());
                am.getuomLOV1().setNamedWhereClauseParam("ItmIdBind", getItmId());
                am.getuomLOV1().setNamedWhereClauseParam("UomClass", null);
                am.getuomLOV1().executeQuery();
             Row r[]=am.getuomLOV1().getFilteredRows("UomId", getItmUomBs());
          //  Row r[]=am.getuomLOV1().getAllRowsInRange();
            if(r.length>0)
                return (String)r[0].getAttribute("UomDesc");
            else
                return (String) getAttributeInternal(TRANSITMUOMBSDESC);
            }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomBsDesc.
     * @param value value to set the  TransItmUomBsDesc
     */
    public void setTransItmUomBsDesc(String value) {
        setAttributeInternal(TRANSITMUOMBSDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomSpDesc.
     * @return the TransItmUomSpDesc
     */
    public String getTransItmUomSpDesc() {
        if( getItmUom()!=null){
        if(getAttributeInternal(TRANSITMUOMSPDESC)!=null)
            return (String) getAttributeInternal(TRANSITMUOMSPDESC);
        else
        {
           
                vendorpriceAMImpl am = (vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
             Row r[]=am.getuomLOV1().getFilteredRows("UomId", getItmUom());
            if(r.length>0)
                return (String)r[0].getAttribute("UomDesc");
            else
                return (String) getAttributeInternal(TRANSITMUOMSPDESC);
            }
        }
        else
            return "--";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomSpDesc.
     * @param value value to set the  TransItmUomSpDesc
     */
    public void setTransItmUomSpDesc(String value) {
        setAttributeInternal(TRANSITMUOMSPDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPriceBsCurrBsUnit.
     * @return the TransPriceBsCurrBsUnit
     */
    public Number getTransPriceBsCurrBsUnit() {
       // return (Number) getAttributeInternal(TRANSPRICEBSCURRBSUNIT);
        Number price=new Number(0);
        Number currconv=new Number(1);
        Number uomConvFctr=new Number(1);
        if(getItmPrice()!=null)
        {
            price=getItmPrice();
            }
        if(getTransCurrConvFctr()!=null)
        {
            currconv=getTransCurrConvFctr();
            }
        if(getUomConvFctr()!=null)
        {
            uomConvFctr=getUomConvFctr();
            }
        return (price.divide(uomConvFctr)).multiply(currconv);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPriceBsCurrBsUnit.
     * @param value value to set the  TransPriceBsCurrBsUnit
     */
    public void setTransPriceBsCurrBsUnit(Number value) {
        setAttributeInternal(TRANSPRICEBSCURRBSUNIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
       // return (String) getAttributeInternal(TRANSHOORGID);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        if(getItmId()!=null)
        {
          
        vendorpriceAMImpl am = (vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
       
         ViewObjectImpl itmvo= am.getLovItmIdTune();
         itmvo.setNamedWhereClauseParam("slocIdBind", getSlocId());
         itmvo.setNamedWhereClauseParam("cldIdBind", getCldId());
         itmvo.setNamedWhereClauseParam("hoOrgIdBind", getTransHoOrgId());
         itmvo.setNamedWhereClauseParam("itmIdBind", getItmId());
         itmvo.executeQuery();
        
        //RowQualifier rq=new RowQualifier(itmvo);
        //rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and OrgId='"+getOrgId()+"' and HoOrgId='"+getTransHoOrgId()+"' and ItmId='"+getItmId()+"'");
        Row[] fr=itmvo.getFilteredRows("ItmId",getItmId());
          System.out.println("row length "+fr.length +" expr "+getItmId());
        Object itmdesc=null;
        if(fr.length>0){
            itmdesc=fr[0].getAttribute("ItmDesc");
          System.out.println("---------- "+fr[0].getAttribute("ItmDesc"));
            return (String)itmdesc;
          }
            return (String)itmdesc;
        }
        else
           return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSp.
     * @return the TransCurrIdSp
     */
    public String getTransCurrIdSp() {
        if(getAttributeInternal(TRANSCURRIDSP)!=null)
        return (String) getAttributeInternal(TRANSCURRIDSP);
        else
        {
            if(getCurrIdSp()!=null)
            {
                Integer currIdSp=getCurrIdSp();
                vendorpriceAMImpl am = (vendorpriceAMImpl)this.getApplicationModule();
                ViewObject currVo=am.getLovCurrVwVO1();
                Row r[]=currVo.getFilteredRows("CurrId", currIdSp);
                if(r.length>0)
                    return (String)r[0].getAttribute("CurrDesc");
                }
            
            }
        return (String) getAttributeInternal(TRANSCURRIDSP);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSp.
     * @param value value to set the  TransCurrIdSp
     */
    public void setTransCurrIdSp(String value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgCurrId.
     * @return the TransOrgCurrId
     */
    public Integer getTransOrgCurrId() {
       // return (Integer) getAttributeInternal(TRANSORGCURRID);
        if(getAttributeInternal(TRANSORGCURRID)!=null)
        return (Integer) getAttributeInternal(TRANSORGCURRID);
        else
        {
            String org=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
                Integer currId=(Integer)(callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {org}));

               return currId;
            }
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            vendorpriceAMImpl am = (vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgCurrId.
     * @param value value to set the  TransOrgCurrId
     */
    public void setTransOrgCurrId(Integer value) {
        setAttributeInternal(TRANSORGCURRID, value);
    }


    /**
     * Gets the attribute value for SRC_DOC_ID using the alias name SrcDocId.
     * @return the SRC_DOC_ID
     */
    public Integer getSrcDocId() {
        return (Integer)getAttributeInternal(SRCDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SRC_DOC_ID using the alias name SrcDocId.
     * @param value value to set the SRC_DOC_ID
     */
    public void setSrcDocId(Integer value) {
        setAttributeInternal(SRCDOCID, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SRC_DOC_TXN_ID using the alias name SrcDocTxnId.
     * @return the SRC_DOC_TXN_ID
     */
    public String getSrcDocTxnId() {
        return (String) getAttributeInternal(SRCDOCTXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for SRC_DOC_TXN_ID using the alias name SrcDocTxnId.
     * @param value value to set the SRC_DOC_TXN_ID
     */
    public void setSrcDocTxnId(String value) {
        setAttributeInternal(SRCDOCTXNID, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_UOM_BS using the alias name ItmPriceUomBs.
     * @return the ITM_PRICE_UOM_BS
     */
    public Number getItmPriceUomBs() {
        return (Number)getAttributeInternal(ITMPRICEUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_UOM_BS using the alias name ItmPriceUomBs.
     * @param value value to set the ITM_PRICE_UOM_BS
     */
    public void setItmPriceUomBs(Number value) {
        setAttributeInternal(ITMPRICEUOMBS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> supIdLOV1.
     */
    public RowSet getsupIdLOV1() {
        return (RowSet)getAttributeInternal(SUPIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> uomLOV1.
     */
    public RowSet getuomLOV1() {
        return (RowSet)getAttributeInternal(UOMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmIdLOV1.
     */
    public RowSet getItmIdLOV1() {
        return (RowSet)getAttributeInternal(ITMIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DiscountVO1.
     */
    public RowSet getDiscountVO1() {
        return (RowSet)getAttributeInternal(DISCOUNTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CurrencyVO1.
     */
    public RowSet getCurrencyVO1() {
        return (RowSet)getAttributeInternal(CURRENCYVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
