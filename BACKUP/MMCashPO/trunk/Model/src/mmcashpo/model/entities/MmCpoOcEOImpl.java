package mmcashpo.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 11 11:13:54 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmCpoOcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        CoaId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        OcDesc {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getOcDesc();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setOcDesc((Integer)value);
            }
        }
        ,
        TranType {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getTranType();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setTranType((String)value);
            }
        }
        ,
        OcAmtBs {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getOcAmtBs();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setOcAmtBs((Number)value);
            }
        }
        ,
        OcAmtSp {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getOcAmtSp();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setOcAmtSp((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EntityId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        TranAmtBs {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getTranAmtBs();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setTranAmtBs((Number)value);
            }
        }
        ,
        CldId {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MmCpo {
            public Object get(MmCpoOcEOImpl obj) {
                return obj.getMmCpo();
            }

            public void put(MmCpoOcEOImpl obj, Object value) {
                obj.setMmCpo((MmCpoEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmCpoOcEOImpl object);

        public abstract void put(MmCpoOcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int TRANAMTBS = AttributesEnum.TranAmtBs.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MMCPO = AttributesEnum.MmCpo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmCpoOcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmcashpo.model.entities.MmCpoOcEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for OcDesc, using the alias name OcDesc.
     * @return the value of OcDesc
     */
    public Integer getOcDesc() {
        return (Integer)getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcDesc.
     * @param value value to set the OcDesc
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for TranType, using the alias name TranType.
     * @return the value of TranType
     */
    public String getTranType() {
        return (String)getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranType.
     * @param value value to set the TranType
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for OcAmtBs, using the alias name OcAmtBs.
     * @return the value of OcAmtBs
     */
    public Number getOcAmtBs() {
        return (Number)getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtBs.
     * @param value value to set the OcAmtBs
     */
    public void setOcAmtBs(Number value) {
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * Gets the attribute value for OcAmtSp, using the alias name OcAmtSp.
     * @return the value of OcAmtSp
     */
    public Number getOcAmtSp() {
        return (Number)getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtSp.
     * @param value value to set the OcAmtSp
     */
    public void setOcAmtSp(Number value) {
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for TranAmtBs, using the alias name TranAmtBs.
     * @return the value of TranAmtBs
     */
    public Number getTranAmtBs() {
        return (Number)getAttributeInternal(TRANAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranAmtBs.
     * @param value value to set the TranAmtBs
     */
    public void setTranAmtBs(Number value) {
        setAttributeInternal(TRANAMTBS, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmCpoEOImpl.
     */
    public MmCpoEOImpl getMmCpo() {
        return (MmCpoEOImpl)getAttributeInternal(MMCPO);
    }

    /**
     * Sets <code>value</code> as the associated entity MmCpoEOImpl.
     */
    public void setMmCpo(MmCpoEOImpl value) {
        setAttributeInternal(MMCPO, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param coaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, Integer coaId) {
        return new Key(new Object[]{slocId, orgId, docId, coaId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")));
        setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
        setOrgId(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = "N";
        if(valueExp != null)
        {
         msg = valueExp.getValue(elContext).toString();
        }
        return msg;
    }
    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
