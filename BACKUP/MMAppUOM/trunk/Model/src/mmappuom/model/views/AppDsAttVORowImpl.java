package mmappuom.model.views;

import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 21 11:59:34 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppDsAttVORowImpl extends ViewRowImpl {
    public static final int ENTITY_APPDSATTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AttId {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttId();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttId((Integer)value);
            }
        }
        ,
        AttNm {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttNm();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttNm((String)value);
            }
        }
        ,
        AttTypeId {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttTypeId();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttTypeId((Integer)value);
            }
        }
        ,
        AttResv {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttResv();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttResv((String)value);
            }
        }
        ,
        AttActv {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttActv();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttActv((String)value);
            }
        }
        ,
        AttMref {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAttMref();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttMref((String)value);
            }
        }
        ,
        AppUomConvStd {
            public Object get(AppDsAttVORowImpl obj) {
                return obj.getAppUomConvStd();
            }

            public void put(AppDsAttVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppDsAttVORowImpl object);

        public abstract void put(AppDsAttVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ATTID = AttributesEnum.AttId.index();
    public static final int ATTNM = AttributesEnum.AttNm.index();
    public static final int ATTTYPEID = AttributesEnum.AttTypeId.index();
    public static final int ATTRESV = AttributesEnum.AttResv.index();
    public static final int ATTACTV = AttributesEnum.AttActv.index();
    public static final int ATTMREF = AttributesEnum.AttMref.index();
    public static final int APPUOMCONVSTD = AttributesEnum.AppUomConvStd.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppDsAttVORowImpl() {
    }

    /**
     * Gets AppDsAttEO entity object.
     * @return the AppDsAttEO
     */
    public EntityImpl getAppDsAttEO() {
        return (EntityImpl)getEntity(ENTITY_APPDSATTEO);
    }

    /**
     * Gets the attribute value for ATT_ID using the alias name AttId.
     * @return the ATT_ID
     */
    public Integer getAttId() {
        return (Integer) getAttributeInternal(ATTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_ID using the alias name AttId.
     * @param value value to set the ATT_ID
     */
    public void setAttId(Integer value) {
        setAttributeInternal(ATTID, value);
    }

    /**
     * Gets the attribute value for ATT_NM using the alias name AttNm.
     * @return the ATT_NM
     */
    public String getAttNm() {
        return (String) getAttributeInternal(ATTNM);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_NM using the alias name AttNm.
     * @param value value to set the ATT_NM
     */
    public void setAttNm(String value) {
        setAttributeInternal(ATTNM, value.toUpperCase());
    }

    /**
     * Gets the attribute value for ATT_TYPE_ID using the alias name AttTypeId.
     * @return the ATT_TYPE_ID
     */
    public Integer getAttTypeId() {
        return (Integer) getAttributeInternal(ATTTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_TYPE_ID using the alias name AttTypeId.
     * @param value value to set the ATT_TYPE_ID
     */
    public void setAttTypeId(Integer value) {
        setAttributeInternal(ATTTYPEID, value);
    }

    /**
     * Gets the attribute value for ATT_RESV using the alias name AttResv.
     * @return the ATT_RESV
     */
    public String getAttResv() {
        return (String) getAttributeInternal(ATTRESV);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_RESV using the alias name AttResv.
     * @param value value to set the ATT_RESV
     */
    public void setAttResv(String value) {
        setAttributeInternal(ATTRESV, value);
    }

    /**
     * Gets the attribute value for ATT_ACTV using the alias name AttActv.
     * @return the ATT_ACTV
     */
    public String getAttActv() {
        return (String) getAttributeInternal(ATTACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_ACTV using the alias name AttActv.
     * @param value value to set the ATT_ACTV
     */
    public void setAttActv(String value) {
        setAttributeInternal(ATTACTV, value);
    }

    /**
     * Gets the attribute value for ATT_MREF using the alias name AttMref.
     * @return the ATT_MREF
     */
    public String getAttMref() {
        return (String) getAttributeInternal(ATTMREF);
    }

    /**
     * Sets <code>value</code> as attribute value for ATT_MREF using the alias name AttMref.
     * @param value value to set the ATT_MREF
     */
    public void setAttMref(String value) {
        setAttributeInternal(ATTMREF, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppUomConvStd.
     */
    public RowIterator getAppUomConvStd() {
        return (RowIterator)getAttributeInternal(APPUOMCONVSTD);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
