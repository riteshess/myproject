package procurmentprocess.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;


import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 17 11:52:57 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PoId {
            public Object get(DualVORowImpl obj) {
                return obj.getPoId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoId((String)value);
            }
        }
        ,
        PoDt {
            public Object get(DualVORowImpl obj) {
                return obj.getPoDt();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoDt((String)value);
            }
        }
        ,
        PoMode {
            public Object get(DualVORowImpl obj) {
                return obj.getPoMode();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoMode((Integer)value);
            }
        }
        ,
        EoId {
            public Object get(DualVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        EoNm {
            public Object get(DualVORowImpl obj) {
                return obj.getEoNm();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setEoNm((String)value);
            }
        }
        ,
        PoDocId {
            public Object get(DualVORowImpl obj) {
                return obj.getPoDocId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoDocId((String)value);
            }
        }
        ,
        FrmDate {
            public Object get(DualVORowImpl obj) {
                return obj.getFrmDate();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setFrmDate((Date)value);
            }
        }
        ,
        ToDate {
            public Object get(DualVORowImpl obj) {
                return obj.getToDate();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setToDate((Date)value);
            }
        }
        ,
        OrgId {
            public Object get(DualVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(DualVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(DualVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        PoType {
            public Object get(DualVORowImpl obj) {
                return obj.getPoType();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoType((Integer)value);
            }
        }
        ,
        PoBasis {
            public Object get(DualVORowImpl obj) {
                return obj.getPoBasis();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setPoBasis((Integer)value);
            }
        }
        ,
        PoModeVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getPoModeVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SupplierVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getSupplierVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVPoNoVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLOVPoNoVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSuppForPoVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovSuppForPoVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DualVORowImpl object);

        public abstract void put(DualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POID = AttributesEnum.PoId.index();
    public static final int PODT = AttributesEnum.PoDt.index();
    public static final int POMODE = AttributesEnum.PoMode.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int PODOCID = AttributesEnum.PoDocId.index();
    public static final int FRMDATE = AttributesEnum.FrmDate.index();
    public static final int TODATE = AttributesEnum.ToDate.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int POTYPE = AttributesEnum.PoType.index();
    public static final int POBASIS = AttributesEnum.PoBasis.index();
    public static final int POMODEVO1 = AttributesEnum.PoModeVO1.index();
    public static final int SUPPLIERVO1 = AttributesEnum.SupplierVO1.index();
    public static final int LOVPONOVO1 = AttributesEnum.LOVPoNoVO1.index();
    public static final int LOVSUPPFORPOVO1 = AttributesEnum.LovSuppForPoVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PoId.
     * @return the PoId
     */
    public String getPoId() {
        return (String) getAttributeInternal(POID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoId.
     * @param value value to set the  PoId
     */
    public void setPoId(String value) {
        setAttributeInternal(POID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoDt.
     * @return the PoDt
     */
    public String getPoDt() {
        return (String) getAttributeInternal(PODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoDt.
     * @param value value to set the  PoDt
     */
    public void setPoDt(String value) {
        setAttributeInternal(PODT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoMode.
     * @return the PoMode
     */
    public Integer getPoMode() {
        return (Integer) getAttributeInternal(POMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoMode.
     * @param value value to set the  PoMode
     */
    public void setPoMode(Integer value) {
        setAttributeInternal(POMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNm.
     * @param value value to set the  EoNm
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoDocId.
     * @return the PoDocId
     */
    public String getPoDocId() {
        return (String) getAttributeInternal(PODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoDocId.
     * @param value value to set the  PoDocId
     */
    public void setPoDocId(String value) {
        setAttributeInternal(PODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FrmDate.
     * @return the FrmDate
     */
    public Date getFrmDate() {
        return (Date) getAttributeInternal(FRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FrmDate.
     * @param value value to set the  FrmDate
     */
    public void setFrmDate(Date value) {
        setAttributeInternal(FRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDate.
     * @return the ToDate
     */
    public Date getToDate() {
        return (Date) getAttributeInternal(TODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDate.
     * @param value value to set the  ToDate
     */
    public void setToDate(Date value) {
        setAttributeInternal(TODATE, value);
    }

    public String resolvEl(String data){
       ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message.toString();
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        
        String org= resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
          return org;
        //return (String) getAttributeInternal(ORGID);
    
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
         String cldId= resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
         return cldId;
           }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        
            Integer slocId= Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
             return slocId;
        
        //return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoType.
     * @return the PoType
     */
    public Integer getPoType() {
       String podoc=getPoDocId();
       //System.out.println("DocId"+podoc);
      //getLOVPoNoVO1().setNamedWhereClauseParam("DocId",podoc);
      Integer potype=null;
        Row r[]=getLOVPoNoVO1().getFilteredRows("DocId", podoc);
        if(r.length!=0&&r.length>0){
        potype=Integer.parseInt(r[0].getAttribute("PoType").toString());
        System.out.println("potype"+potype);
        }else {
            return (Integer) getAttributeInternal(POTYPE);
        }
    
        return potype;
    
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoType.
     * @param value value to set the  PoType
     */
    public void setPoType(Integer value) {
        setAttributeInternal(POTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoBasis.
     * @return the PoBasis
     */
    public Integer getPoBasis() {       
        String podoc=getPoDocId();
        //System.out.println("DocId"+podoc);
      //getLOVPoNoVO1().setNamedWhereClauseParam("DocId",podoc);
        Row r[]=getLOVPoNoVO1().getFilteredRows("DocId", podoc);
        Integer pobasis=null;
        if(r.length!=0&&r.length>0){
        pobasis=Integer.parseInt(r[0].getAttribute("PoBasis").toString());
        System.out.println("pobasis"+pobasis);
            return pobasis;
        }
        else {
            return (Integer) getAttributeInternal(POBASIS);
        }
        
        //return (Integer) getAttributeInternal(POBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoBasis.
     * @param value value to set the  PoBasis
     */
    public void setPoBasis(Integer value) {
        setAttributeInternal(POBASIS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PoModeVO1.
     */
    public RowSet getPoModeVO1() {
        return (RowSet)getAttributeInternal(POMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierVO1.
     */
    public RowSet getSupplierVO1() {
        return (RowSet)getAttributeInternal(SUPPLIERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVPoNoVO1.
     */
    public RowSet getLOVPoNoVO1() {
        return (RowSet)getAttributeInternal(LOVPONOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSuppForPoVO1.
     */
    public RowSet getLovSuppForPoVO1() {
        return (RowSet)getAttributeInternal(LOVSUPPFORPOVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
