package mminvoice.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mminvoice.model.entities.MmInvcOcEOImpl;

import mminvoice.model.services.MMInvoiceAMImpl;
import mminvoice.model.services.common.MMInvoiceAM;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 17 15:24:33 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvcOcVORowImpl extends ViewRowImpl {

    public static final int ENTITY_MMINVCOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        DocIdPo {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getDocIdPo();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setDocIdPo((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        OcDesc {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getOcDesc();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setOcDesc((String)value);
            }
        }
        ,
        TranType {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getTranType();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setTranType((String)value);
            }
        }
        ,
        OcAmtSp {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getOcAmtSp();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setOcAmtSp((Number)value);
            }
        }
        ,
        OcAmtBs {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getOcAmtBs();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setOcAmtBs((Number)value);
            }
        }
        ,
        HoOrgId {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        TrnsCoaNm {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getTrnsCoaNm();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setTrnsCoaNm((String)value);
            }
        }
        ,
        LovOcCoaVO {
            public Object get(MmInvcOcVORowImpl obj) {
                return obj.getLovOcCoaVO();
            }

            public void put(MmInvcOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmInvcOcVORowImpl object);

        public abstract void put(MmInvcOcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int DOCIDPO = AttributesEnum.DocIdPo.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int TRNSCOANM = AttributesEnum.TrnsCoaNm.index();
    public static final int LOVOCCOAVO = AttributesEnum.LovOcCoaVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvcOcVORowImpl() {
    }

    /**
     * Gets MmInvcOcEO entity object.
     * @return the MmInvcOcEO
     */
    public MmInvcOcEOImpl getMmInvcOcEO() {
        return (MmInvcOcEOImpl)getEntity(ENTITY_MMINVCOCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @return the DOC_ID_RCPT
     */
    public String getDocIdRcpt() {
        return (String) getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @param value value to set the DOC_ID_RCPT
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for DOC_ID_PO using the alias name DocIdPo.
     * @return the DOC_ID_PO
     */
    public String getDocIdPo() {
        return (String) getAttributeInternal(DOCIDPO);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_PO using the alias name DocIdPo.
     * @param value value to set the DOC_ID_PO
     */
    public void setDocIdPo(String value) {
        setAttributeInternal(DOCIDPO, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public String getOcDesc() {
        return (String) getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(String value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @return the OC_AMT_SP
     */
    public Number getOcAmtSp() {
        return (Number) getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @param value value to set the OC_AMT_SP
     */
    public void setOcAmtSp(Number value) {
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @return the OC_AMT_BS
     */
    public Number getOcAmtBs() {
        MMInvoiceAMImpl invcObj = (MMInvoiceAMImpl)this.getApplicationModule();
        ViewObjectImpl vo = invcObj.getMmInvc();
        Row row = vo.getCurrentRow();
        if(this.getOcAmtSp() != null)
            {Number cc=(Number)row.getAttribute("CurrConvFctr");
             setOcAmtBs(this.getOcAmtSp().multiply(cc));
            return this.getOcAmtSp().multiply(cc);}
        return (Number) getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @param value value to set the OC_AMT_BS
     */
    public void setOcAmtBs(Number value) {
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String paramHoOrdId= resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
                  if(paramHoOrdId != null)
                  {return paramHoOrdId;}
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrnsCoaNm.
     * @return the TrnsCoaNm
     */
    public String getTrnsCoaNm() {
        if(getCoaId() != null)
        {
            MMInvoiceAMImpl am =(MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl vo = am.getLovCoaOC();
            vo.setNamedWhereClauseParam("SlocIdBindVar", this.getSlocId());
            vo.setNamedWhereClauseParam("CldIdVar", this.getCldId());
            vo.setNamedWhereClauseParam("OrgIdVar", this.getOrgId());
            vo.setNamedWhereClauseParam("hoOrgId", this.getHoOrgId());
            vo.setNamedWhereClauseParam("bindCoaId", this.getCoaId());
            vo.executeQuery();
            //System.out.println(this.getCoaId() +"   "+this.getHoOrgId());
            
            Row r[]=vo.getFilteredRows("CoaId", this.getCoaId());
            if(r.length>0)
                {return r[0].getAttribute("CoaNm").toString();}
            else
                {return (String) getAttributeInternal(TRNSCOANM);}
        }
        return (String) getAttributeInternal(TRNSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrnsCoaNm.
     * @param value value to set the  TrnsCoaNm
     */
    public void setTrnsCoaNm(String value) {
        setAttributeInternal(TRNSCOANM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcCoaVO.
     */
    public RowSet getLovOcCoaVO() {
        return (RowSet)getAttributeInternal(LOVOCCOAVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    
    private String resolvEl(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message = valueExp.getValue(elContext).toString();
           return Message;
       }
}
