package mminvoice.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 06 12:59:34 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvcOcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        DocIdPo {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getDocIdPo();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setDocIdPo((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        OcDesc {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getOcDesc();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setOcDesc((String)value);
            }
        }
        ,
        TranType {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getTranType();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setTranType((String)value);
            }
        }
        ,
        OcAmtSp {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getOcAmtSp();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setOcAmtSp((Number)value);
            }
        }
        ,
        OcAmtBs {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getOcAmtBs();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setOcAmtBs((Number)value);
            }
        }
        ,
        MmInvcSrc {
            public Object get(MmInvcOcEOImpl obj) {
                return obj.getMmInvcSrc();
            }

            public void put(MmInvcOcEOImpl obj, Object value) {
                obj.setMmInvcSrc((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmInvcOcEOImpl object);

        public abstract void put(MmInvcOcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int DOCIDPO = AttributesEnum.DocIdPo.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int MMINVCSRC = AttributesEnum.MmInvcSrc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvcOcEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdRcpt, using the alias name DocIdRcpt.
     * @return the value of DocIdRcpt
     */
    public String getDocIdRcpt() {
        return (String)getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdRcpt.
     * @param value value to set the DocIdRcpt
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for DocIdPo, using the alias name DocIdPo.
     * @return the value of DocIdPo
     */
    public String getDocIdPo() {
        return (String)getAttributeInternal(DOCIDPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdPo.
     * @param value value to set the DocIdPo
     */
    public void setDocIdPo(String value) {
        setAttributeInternal(DOCIDPO, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer)getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for OcDesc, using the alias name OcDesc.
     * @return the value of OcDesc
     */
    public String getOcDesc() {
        return (String)getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcDesc.
     * @param value value to set the OcDesc
     */
    public void setOcDesc(String value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for TranType, using the alias name TranType.
     * @return the value of TranType
     */
    public String getTranType() {
        return (String)getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranType.
     * @param value value to set the TranType
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for OcAmtSp, using the alias name OcAmtSp.
     * @return the value of OcAmtSp
     */
    public Number getOcAmtSp() {
        return (Number)getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtSp.
     * @param value value to set the OcAmtSp
     */
    public void setOcAmtSp(Number value) {
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for OcAmtBs, using the alias name OcAmtBs.
     * @return the value of OcAmtBs
     */
    public Number getOcAmtBs() {
        return (Number)getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtBs.
     * @param value value to set the OcAmtBs
     */
    public void setOcAmtBs(Number value) {
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getMmInvcSrc() {
        return (EntityImpl)getAttributeInternal(MMINVCSRC);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMmInvcSrc(EntityImpl value) {
        setAttributeInternal(MMINVCSRC, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param docIdRcpt key constituent
     * @param docIdPo key constituent
     * @param dlvSchdlNo key constituent
     * @param coaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String docIdRcpt,
                                       String docIdPo, Integer dlvSchdlNo, Integer coaId) {
        return new Key(new Object[]{cldId, slocId, orgId, docId, docIdRcpt, docIdPo, dlvSchdlNo, coaId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mminvoice.model.entities.MmInvcOcEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
