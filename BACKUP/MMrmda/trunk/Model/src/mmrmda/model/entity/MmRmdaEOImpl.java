package mmrmda.model.entity;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 30 10:26:48 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRmdaEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        RmdaType {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getRmdaType();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setRmdaType((Integer)value);
            }
        }
        ,
        FyId {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getFyId();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        RmdaNo {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getRmdaNo();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setRmdaNo((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        DocDtRcpt {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getDocDtRcpt();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setDocDtRcpt((Timestamp)value);
            }
        }
        ,
        EoIdSrc {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getEoIdSrc();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setEoIdSrc((Integer)value);
            }
        }
        ,
        RqmtAreaIdSrc {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getRqmtAreaIdSrc();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setRqmtAreaIdSrc((Integer)value);
            }
        }
        ,
        OrgIdSrc {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getOrgIdSrc();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setOrgIdSrc((String)value);
            }
        }
        ,
        WhIdSrc {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getWhIdSrc();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setWhIdSrc((String)value);
            }
        }
        ,
        RetnFlg {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getRetnFlg();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setRetnFlg((String)value);
            }
        }
        ,
        DebitNoteNo {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getDebitNoteNo();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setDebitNoteNo((String)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setCurrIdSp((Integer)value);
            }
        }
        ,
        TotAmtSp {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setTotAmtSp((BigDecimal)value);
            }
        }
        ,
        TotAmtBs {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setTotAmtBs((BigDecimal)value);
            }
        }
        ,
        TaxRvrsFlg {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getTaxRvrsFlg();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setTaxRvrsFlg((String)value);
            }
        }
        ,
        TaxAmtSp {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getTaxAmtSp();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setTaxAmtSp((BigDecimal)value);
            }
        }
        ,
        TaxAmtBs {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getTaxAmtBs();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setTaxAmtBs((BigDecimal)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        MmRmdaItm {
            public Object get(MmRmdaEOImpl obj) {
                return obj.getMmRmdaItm();
            }

            public void put(MmRmdaEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmRmdaEOImpl object);

        public abstract void put(MmRmdaEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int RMDATYPE = AttributesEnum.RmdaType.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int RMDANO = AttributesEnum.RmdaNo.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int DOCDTRCPT = AttributesEnum.DocDtRcpt.index();
    public static final int EOIDSRC = AttributesEnum.EoIdSrc.index();
    public static final int RQMTAREAIDSRC = AttributesEnum.RqmtAreaIdSrc.index();
    public static final int ORGIDSRC = AttributesEnum.OrgIdSrc.index();
    public static final int WHIDSRC = AttributesEnum.WhIdSrc.index();
    public static final int RETNFLG = AttributesEnum.RetnFlg.index();
    public static final int DEBITNOTENO = AttributesEnum.DebitNoteNo.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TAXRVRSFLG = AttributesEnum.TaxRvrsFlg.index();
    public static final int TAXAMTSP = AttributesEnum.TaxAmtSp.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int MMRMDAITM = AttributesEnum.MmRmdaItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRmdaEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for RmdaType, using the alias name RmdaType.
     * @return the value of RmdaType
     */
    public Integer getRmdaType() {
        return (Integer)getAttributeInternal(RMDATYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RmdaType.
     * @param value value to set the RmdaType
     */
    public void setRmdaType(Integer value) {
        setAttributeInternal(RMDATYPE, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for RmdaNo, using the alias name RmdaNo.
     * @return the value of RmdaNo
     */
    public String getRmdaNo() {
        return (String)getAttributeInternal(RMDANO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RmdaNo.
     * @param value value to set the RmdaNo
     */
    public void setRmdaNo(String value) {
        setAttributeInternal(RMDANO, value);
    }

    /**
     * Gets the attribute value for DocIdRcpt, using the alias name DocIdRcpt.
     * @return the value of DocIdRcpt
     */
    public String getDocIdRcpt() {
        return (String)getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdRcpt.
     * @param value value to set the DocIdRcpt
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for DocDtRcpt, using the alias name DocDtRcpt.
     * @return the value of DocDtRcpt
     */
    public Timestamp getDocDtRcpt() {
        return (Timestamp)getAttributeInternal(DOCDTRCPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDtRcpt.
     * @param value value to set the DocDtRcpt
     */
    public void setDocDtRcpt(Timestamp value) {
        setAttributeInternal(DOCDTRCPT, value);
    }

    /**
     * Gets the attribute value for EoIdSrc, using the alias name EoIdSrc.
     * @return the value of EoIdSrc
     */
    public Integer getEoIdSrc() {
        return (Integer)getAttributeInternal(EOIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoIdSrc.
     * @param value value to set the EoIdSrc
     */
    public void setEoIdSrc(Integer value) {
        setAttributeInternal(EOIDSRC, value);
    }

    /**
     * Gets the attribute value for RqmtAreaIdSrc, using the alias name RqmtAreaIdSrc.
     * @return the value of RqmtAreaIdSrc
     */
    public Integer getRqmtAreaIdSrc() {
        return (Integer)getAttributeInternal(RQMTAREAIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaIdSrc.
     * @param value value to set the RqmtAreaIdSrc
     */
    public void setRqmtAreaIdSrc(Integer value) {
        setAttributeInternal(RQMTAREAIDSRC, value);
    }

    /**
     * Gets the attribute value for OrgIdSrc, using the alias name OrgIdSrc.
     * @return the value of OrgIdSrc
     */
    public String getOrgIdSrc() {
        return (String)getAttributeInternal(ORGIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdSrc.
     * @param value value to set the OrgIdSrc
     */
    public void setOrgIdSrc(String value) {
        setAttributeInternal(ORGIDSRC, value);
    }

    /**
     * Gets the attribute value for WhIdSrc, using the alias name WhIdSrc.
     * @return the value of WhIdSrc
     */
    public String getWhIdSrc() {
        return (String)getAttributeInternal(WHIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhIdSrc.
     * @param value value to set the WhIdSrc
     */
    public void setWhIdSrc(String value) {
        setAttributeInternal(WHIDSRC, value);
    }

    /**
     * Gets the attribute value for RetnFlg, using the alias name RetnFlg.
     * @return the value of RetnFlg
     */
    public String getRetnFlg() {
        return (String)getAttributeInternal(RETNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetnFlg.
     * @param value value to set the RetnFlg
     */
    public void setRetnFlg(String value) {
        setAttributeInternal(RETNFLG, value);
    }

    /**
     * Gets the attribute value for DebitNoteNo, using the alias name DebitNoteNo.
     * @return the value of DebitNoteNo
     */
    public String getDebitNoteNo() {
        return (String)getAttributeInternal(DEBITNOTENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DebitNoteNo.
     * @param value value to set the DebitNoteNo
     */
    public void setDebitNoteNo(String value) {
        setAttributeInternal(DEBITNOTENO, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer)getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for TotAmtSp, using the alias name TotAmtSp.
     * @return the value of TotAmtSp
     */
    public BigDecimal getTotAmtSp() {
        return (BigDecimal)getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtSp.
     * @param value value to set the TotAmtSp
     */
    public void setTotAmtSp(BigDecimal value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for TotAmtBs, using the alias name TotAmtBs.
     * @return the value of TotAmtBs
     */
    public BigDecimal getTotAmtBs() {
        return (BigDecimal)getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtBs.
     * @param value value to set the TotAmtBs
     */
    public void setTotAmtBs(BigDecimal value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxRvrsFlg, using the alias name TaxRvrsFlg.
     * @return the value of TaxRvrsFlg
     */
    public String getTaxRvrsFlg() {
        return (String)getAttributeInternal(TAXRVRSFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRvrsFlg.
     * @param value value to set the TaxRvrsFlg
     */
    public void setTaxRvrsFlg(String value) {
        setAttributeInternal(TAXRVRSFLG, value);
    }

    /**
     * Gets the attribute value for TaxAmtSp, using the alias name TaxAmtSp.
     * @return the value of TaxAmtSp
     */
    public BigDecimal getTaxAmtSp() {
        return (BigDecimal)getAttributeInternal(TAXAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtSp.
     * @param value value to set the TaxAmtSp
     */
    public void setTaxAmtSp(BigDecimal value) {
        setAttributeInternal(TAXAMTSP, value);
    }

    /**
     * Gets the attribute value for TaxAmtBs, using the alias name TaxAmtBs.
     * @return the value of TaxAmtBs
     */
    public BigDecimal getTaxAmtBs() {
        return (BigDecimal)getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtBs.
     * @param value value to set the TaxAmtBs
     */
    public void setTaxAmtBs(BigDecimal value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmRmdaItm() {
        return (RowIterator)getAttributeInternal(MMRMDAITM);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId) {
        return new Key(new Object[]{cldId, slocId, orgId, whId, docId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmrmda.model.entity.MmRmdaEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        Integer userId=Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_USR}").toString());
        Integer sloc_id =Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String org_id =(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cld_id =(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        setSlocId(sloc_id);
        setOrgId(org_id);
        setCldId(cld_id);
        setRmdaType(new Integer(417));
        
        setDocDt(new Timestamp(System.currentTimeMillis()));
        String docId =(String)(callStoredFunction(Types.VARCHAR, "app.pkg_app.get_txn_id (?,?,?,?,?)", new Object[] {userId,org_id,sloc_id,new Integer(18522),cld_id}));
        setDocId(docId);
        String whId =(String)(callStoredFunction(Types.VARCHAR, "MM.GET_WH_ID(?,?,?,?)", new Object[] {cld_id,sloc_id,org_id,userId}));   
        setWhId(whId);
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cld_id,org_id,new Timestamp(System.currentTimeMillis())}));
        setFyId(fyid);
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
       
        Integer userId=Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_USR}").toString());
        Integer sloc_id =Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String org_id = (String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cld_id = (String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        if(operation==DML_INSERT)
        { 
          setUsrIdCreate(userId);
          setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
          setUsrIdMod(userId);
          setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        if(operation== DML_UPDATE)
        {
            setUsrIdMod(Integer.valueOf(userId));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        
        super.doDML(operation, e);
    }
    
    public static Object evaluateEL(String el) 
    {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory =
        facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, el, Object.class);
        return exp.getValue(elContext);
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
           CallableStatement st = null;
           try {
               st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               st.registerOutParameter(1, sqlReturnType);
               if (bindVars != null) {
                   for (int z = 0; z < bindVars.length; z++) {
                       st.setObject(z + 2, bindVars[z]);
                   }
               }
               st.executeUpdate();
               return st.getObject(1);

           } catch (SQLException e) {
               throw new JboException(e);
           } finally {
               if (st != null) {
                   try {
                       st.close();
                   } catch (SQLException e) {e.printStackTrace();}
               }
           }
       }
    
    
    
    
}
