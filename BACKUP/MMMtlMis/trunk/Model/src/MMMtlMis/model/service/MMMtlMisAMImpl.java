package MMMtlMis.model.service;


import MMMtlMis.model.service.common.MMMtlMisAM;

import MMMtlMis.model.view.MmMainVOImpl;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Map;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 11 09:59:50 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMMtlMisAMImpl extends ApplicationModuleImpl implements MMMtlMisAM {
    /**
     * This is the default constructor (do not remove).
     */
    public MMMtlMisAMImpl() {
    }

    /**
     * Container's getter for StkItmBin1.
     * @return StkItmBin1
     */
    public ViewObjectImpl getStkItmBin1() {
        return (ViewObjectImpl)findViewObject("StkItmBin1");
    }

    /**
     * Container's getter for StkItmLot1.
     * @return StkItmLot1
     */
    public ViewObjectImpl getStkItmLot1() {
        return (ViewObjectImpl)findViewObject("StkItmLot1");
    }

    /**
     * Container's getter for StkItmSr1.
     * @return StkItmSr1
     */
    public ViewObjectImpl getStkItmSr1() {
        return (ViewObjectImpl)findViewObject("StkItmSr1");
    }

    /**
     * Container's getter for StkItm1.
     * @return StkItm1
     */
    public ViewObjectImpl getStkItm1() {
        return (ViewObjectImpl)findViewObject("StkItm1");
    }
    
    
    
    public void executeStkItmVo()
    {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
        
        ViewObjectImpl vo = getStkItm1();
        ViewCriteria vc = vo.getViewCriteria("StkItmVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
       // vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindHoOrgId", hoOrgId);
        
        if(getSrchTrns1().getCurrentRow() !=null)
        {   vo.setNamedWhereClauseParam("bindOrgId", getSrchTrns1().getCurrentRow().getAttribute("orgId"));
            vo.setNamedWhereClauseParam("bindWhId", getSrchTrns1().getCurrentRow().getAttribute("whId"));
            vo.setNamedWhereClauseParam("bindItmId", getSrchTrns1().getCurrentRow().getAttribute("ItmId"));
            vo.setNamedWhereClauseParam("bindFYId", getSrchTrns1().getCurrentRow().getAttribute("financialYear"));
        }
        else
        {
            Integer fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
            vo.setNamedWhereClauseParam("bindFYId", fyid);
        }
       
           vo.executeQuery();

    }
    
    
    public void executeStkItmLotVo()
    {
        
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getStkItm1();
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmLot1();
        ViewCriteria vc = vo.getViewCriteria("StkItmLotVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindItemId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    public boolean isItmSerialized()
    {
        ViewObjectImpl itmvo = getStkItm1();
        Row curr = itmvo.getCurrentRow();
        if(curr.getAttribute("SerializedFlg").equals("Y"))
        {return true;}
        return false;
    }
    
    public boolean isLotItmSerialized()
    {
        ViewObjectImpl lotvo = getStkItmLot1();
        Row curr = lotvo.getCurrentRow();
       if(curr.getAttribute("SerializedFlg").equals("Y"))
        {return true;}
        return false;
    }
    
    public void executeStkItmBinVo()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getStkItm1();
        ViewObjectImpl lotvo = getStkItmLot1();
        
        Row curr = lotvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmBin1();
        ViewCriteria vc = vo.getViewCriteria("StkItmBinVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    public void executeStkItmSrVo()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getStkItm1();
        ViewObjectImpl lotvo = getStkItmLot1();
        ViewObjectImpl binvo = getStkItmBin1();
        
        Row curr = binvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmSr1();
        ViewCriteria vc = vo.getViewCriteria("StkItmSrVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindBinId",curr.getAttribute("BinId"));
        vo.executeQuery();

    }
    
    
    // Execute When Bin is Not Used 
    
    public void executeStkItmLotSrVo()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getStkItm1();
        ViewObjectImpl lotvo = getStkItmLot1();
        
        Row curr = lotvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmSr1();
        ViewCriteria vc = vo.getViewCriteria("StkItmSrVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    
    public String evaluateEL(String el) 
    {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el,Object.class);
    String retVal = exp.getValue(elContext).toString();
    return retVal;
    }

    /**
     * Container's getter for Uom1.
     * @return Uom1
     */
    public ViewObjectImpl getUom1() {
        return (ViewObjectImpl)findViewObject("Uom1");
    }

    /**
     * Container's getter for PoVw1.
     * @return PoVw1
     */
    public ViewObjectImpl getPoVw1() {
        return (ViewObjectImpl)findViewObject("PoVw1");
    }
    
    
    
    public void executePoVo(String voName,String voCriteria)
    {
        
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getStkItm1();
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        ViewCriteria vc = vo.getViewCriteria(voCriteria);
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    public void executeResvVo(String voName,String voCriteria)
    {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        
        
        
        ViewObjectImpl itmvo = getStkItm1();
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        ViewCriteria vc = vo.getViewCriteria(voCriteria);
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", orgId);
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));
        
        
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
       // vo.setNamedWhereClauseParam("bindFyId",getSrchTrns1().getCurrentRow().getAttribute("financialYear"));
       
        vo.setNamedWhereClauseParam("bindFyId",fyid);
        
        System.out.println(fyid +" "+cldId +" "+slocId+" "+orgId+" "+curr.getAttribute("ItmId")+" "+curr.getAttribute("WhId"));
        
        vo.executeQuery();
      
    }

    /**
     * Container's getter for SrchTrns1.
     * @return SrchTrns1
     */
    public ViewObjectImpl getSrchTrns1() {
        return (ViewObjectImpl)findViewObject("SrchTrns1");
    }

    /**
     * Container's getter for WH1.
     * @return WH1
     */
    public ViewObjectImpl getWH1() {
        return (ViewObjectImpl)findViewObject("WH1");
    }

    /**
     * Container's getter for Item1.
     * @return Item1
     */
    public ViewObjectImpl getItem1() {
        return (ViewObjectImpl)findViewObject("Item1");
    }

    /**
     * Container's getter for ResvVw1.
     * @return ResvVw1
     */
    public ViewObjectImpl getResvVw1() {
        return (ViewObjectImpl)findViewObject("ResvVw1");
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
                return st.getObject(1);

            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {st.close();} catch (SQLException e) {

                    }
                }
            }
        }

    /**
     * Container's getter for ComRcpt1.
     * @return ComRcpt1
     */
    public ViewObjectImpl getComRcpt1() {
        return (ViewObjectImpl)findViewObject("ComRcpt1");
    }

    /**
     * Container's getter for ComIssu1.
     * @return ComIssu1
     */
    public ViewObjectImpl getComIssu1() {
        return (ViewObjectImpl)findViewObject("ComIssu1");
    }

    /**
     * Container's getter for ItmGrp1.
     * @return ItmGrp1
     */
    public ViewObjectImpl getItmGrp1() {
        return (ViewObjectImpl)findViewObject("ItmGrp1");
    }

    /**
     * Container's getter for ItmMov1.
     * @return ItmMov1
     */
    public ViewObjectImpl getItmMov1() {
        return (ViewObjectImpl)findViewObject("ItmMov1");
    }

    /**
     * Container's getter for srchItmMov1.
     * @return srchItmMov1
     */
    public ViewObjectImpl getsrchItmMov1() {
        return (ViewObjectImpl)findViewObject("srchItmMov1");
    }
    
    
    public void executeItmMovVo(String voName,String voCriteria)
    {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        //String slocIdStr=(String);
        Integer slocId=Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl itmvo = getsrchItmMov1();
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        ViewCriteria vc = vo.getViewCriteria(voCriteria);
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", curr.getAttribute("orgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("whId"));
        vo.setNamedWhereClauseParam("bindFromDate",curr.getAttribute("fromDate"));
        vo.setNamedWhereClauseParam("bindToDate",curr.getAttribute("toDate"));
        vo.executeQuery();

    }
    
    public String Isssuedetail(){
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer slocId=Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        Integer fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        Row curr=getTransSearch1().getCurrentRow();  
         Row mainCurr=this.getMmMain1().getCurrentRow();
        
        ViewObjectImpl issueVo=this.getMmIssueDetail();
        issueVo.setNamedWhereClauseParam("bindCldId", cldId);
        issueVo.setNamedWhereClauseParam("bindOrgId", curr.getAttribute("OrgId"));
        issueVo.setNamedWhereClauseParam("bindSlocId", slocId);
        issueVo.setNamedWhereClauseParam("bindWhId", null);
        issueVo.setNamedWhereClauseParam("Bindfyid", fyid);
        issueVo.setNamedWhereClauseParam("BinItmId", mainCurr.getAttribute("ItmId"));
        issueVo.executeQuery();
        return null;
    }
    public String MmissueReord(){
           String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
           String slocId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        //   String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
           Row Curr=this.getTransSearch1().getCurrentRow();
           ViewObjectImpl issueVo=this.getMmIssueDetail();
        //   Integer fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
           
           ViewObjectImpl issuerecord=getMMIssue();
           issuerecord.setNamedWhereClauseParam("BindCldId", cldId);
           issuerecord.setNamedWhereClauseParam("BindSlocId", slocId);
           issuerecord.setNamedWhereClauseParam("BindOrgId", Curr.getAttribute("OrgId"));
           issuerecord.setNamedWhereClauseParam("BindEoId", issueVo.getCurrentRow().getAttribute("IssuSrcId"));
           issuerecord.setNamedWhereClauseParam("BindItmId", issueVo.getCurrentRow().getAttribute("ItmId"));
           issuerecord.executeQuery();
           return null;
       }
    
    public void MmreservedDetail(){
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        Integer fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        Row currMain=this.getMmMain1().getCurrentRow();
        Row curr=this.getTransSearch1().getCurrentRow();
        
        ViewObjectImpl resvVO=this.getResvDetail();
        resvVO.setNamedWhereClauseParam("Bindcldid", cldId);
        resvVO.setNamedWhereClauseParam("Bindorgid", curr.getAttribute("OrgId"));
        resvVO.setNamedWhereClauseParam("Bindslocid", slocId);
        resvVO.setNamedWhereClauseParam("Binditmid", currMain.getAttribute("ItmId"));
        resvVO.setNamedWhereClauseParam("BindFyId", fyid);
        resvVO.executeQuery();
    }
    public BigDecimal getStockValue(Timestamp date)
    {
        Timestamp date_p=null;
        
         if(date == null)
         {date_p=new Timestamp(System.currentTimeMillis());}
         else
         {date_p=date;}
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        ViewObjectImpl srchItmVo = getsrchItmMov1();
        String whId=(String)srchItmVo.getCurrentRow().getAttribute("whId");
        String ItmId=(String)srchItmVo.getCurrentRow().getAttribute("ItmId");
        
        BigDecimal stckValue=(BigDecimal)(callStoredFunction(Types.NUMERIC,"MM.MM_AS_ON_STK(?,?,?,?,?,?)", new Object[] {cldId,slocId,orgId,whId,ItmId,date_p}));
              return stckValue;
    }

    /**
     * Container's getter for FinYr1.
     * @return FinYr1
     */
    public ViewObjectImpl getFinYr1() {
        return (ViewObjectImpl)findViewObject("FinYr1");
    }

    /**
     * Container's getter for RCPT_DTL_VW1.
     * @return RCPT_DTL_VW1
     */
    public ViewObjectImpl getRCPT_DTL_VW1() {
        return (ViewObjectImpl)findViewObject("RCPT_DTL_VW1");
    }

    /**
     * Container's getter for ComRcpt2.
     * @return ComRcpt2
     */
    public ViewObjectImpl getComRcpt2() {
        return (ViewObjectImpl)findViewObject("ComRcpt2");
    }

    /**
     * Container's getter for RCPT_DTL_VW2.
     * @return RCPT_DTL_VW2
     */
    public ViewObjectImpl getRCPT_DTL_VW2() {
        return (ViewObjectImpl)findViewObject("RCPT_DTL_VW2");
    }

    /**
     * Container's getter for RCPT_PO_VL.
     * @return RCPT_PO_VL
     */
    public ViewLinkImpl getRCPT_PO_VL() {
        return (ViewLinkImpl)findViewLink("RCPT_PO_VL");
    }

    /**
     * Container's getter for RCPT_PO_VL1.
     * @return RCPT_PO_VL1
     */
    public ViewLinkImpl getRCPT_PO_VL1() {
        return (ViewLinkImpl)findViewLink("RCPT_PO_VL1");
    }

    /**
     * Container's getter for TransSearch1.
     * @return TransSearch1
     */
    public ViewObjectImpl getTransSearch1() {
        return (ViewObjectImpl)findViewObject("TransSearch1");
    }

    /**
     * Container's getter for Org1.
     * @return Org1
     */
    public ViewObjectImpl getOrg1() {
        return (ViewObjectImpl)findViewObject("Org1");
    }

    /**
     * Container's getter for Supplier1.
     * @return Supplier1
     */
    public ViewObjectImpl getSupplier1() {
        return (ViewObjectImpl)findViewObject("Supplier1");
    }

    /**
     * Container's getter for ItmPrf1.
     * @return ItmPrf1
     */
    public ViewObjectImpl getItmPrf1() {
        return (ViewObjectImpl)findViewObject("ItmPrf1");
    }


/*

    public void searchMainAction(String voName,String voCriteria,Boolean includeParam)
    {
      
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
       
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        String org_Id = (String)row.getAttribute("OrgId");
        String whId = (String)row.getAttribute("WhId");
        String supplier = (String)row.getAttribute("Supplier");
        String itm = (String)row.getAttribute("ItmId");
        String itmGrp = (String)row.getAttribute("ItmGrp");
        String reOrdLvl = (String)row.getAttribute("isBelowReOrdLvl");
        String saftyLvl = (String)row.getAttribute("isBelowSafetyLvl");
        String slsItm = (String)row.getAttribute("isSaleItm");
        String purItm = (String)row.getAttribute("isPurchaseItm");
        String wipItm = (String)row.getAttribute("isWipItm");
        
        
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject("MainSrch1");
        ViewCriteria vc = vo.getViewCriteria("MainSrchVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", org_Id);
        vo.setNamedWhereClauseParam("bindHoOrgId",hoOrgId);
        vo.setNamedWhereClauseParam("bindItm",itm);
        vo.setNamedWhereClauseParam("bindItmGrp",itmGrp);
        vo.setNamedWhereClauseParam("bindSupplier",supplier);
        vo.setNamedWhereClauseParam("bindWhId",whId);
        
        if(reOrdLvl != null && reOrdLvl.equals("Y"))
            vo.setNamedWhereClauseParam("bindBlwReorderLvl",BigDecimal.ZERO);
        else
            vo.setNamedWhereClauseParam("bindBlwReorderLvl",null);  
        
        if(saftyLvl != null && saftyLvl.equals("Y")) 
            vo.setNamedWhereClauseParam("bindSaftyLvl",BigDecimal.ZERO);
        else
            vo.setNamedWhereClauseParam("bindSaftyLvl",null); 
        
        
        if(!includeParam)
        {
          if(purItm != null)
                vo.setNamedWhereClauseParam("bindPurItm",purItm);
          if(slsItm != null)
                vo.setNamedWhereClauseParam("bindSlsItm",slsItm);
          if(wipItm != null)
                vo.setNamedWhereClauseParam("bindWipItm",wipItm);
          
          else if(wipItm == null)
               {vo.setNamedWhereClauseParam("bindWipItm","NA");}
       }
        else
        { vo.setNamedWhereClauseParam("bindPurItm",null);
                vo.setNamedWhereClauseParam("bindSlsItm",null);
                        vo.setNamedWhereClauseParam("bindWipItm",null);
            }
   
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        vo.setNamedWhereClauseParam("bindFyId",fyId);
        vo.executeQuery();
        
    }

*/

    /**
     * Container's getter for Graph1.
     * @return Graph1
     */
    public ViewObjectImpl getGraph1() {
        return (ViewObjectImpl)findViewObject("Graph1");
    }


    /**
     * Container's getter for EoItm1.
     * @return EoItm1
     */
    public ViewObjectImpl getEoItm1() {
        return (ViewObjectImpl)findViewObject("EoItm1");
    }


    /*

    public void executeReceiptVo(String voName,String voCriteria)
    {  //  System.out.println("executeReceiptVo");
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        ViewObjectImpl itmvo = (ViewObjectImpl)findViewObject("MainSrch1");
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        ViewCriteria vc = vo.getViewCriteria(voCriteria);
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", curr.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",curr.getAttribute("WhId"));

    //    System.out.println(cldId +" "+slocId+" "+orgId+" "+curr.getAttribute("ItmId")+" "+curr.getAttribute("WhId"));

        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        vo.setNamedWhereClauseParam("bindFyId",fyid);
        vo.executeQuery();

    }

*/

    /**
     * Container's getter for Rcpt1.
     * @return Rcpt1
     */
    public ViewObjectImpl getRcpt1() {
        return (ViewObjectImpl)findViewObject("Rcpt1");
    }

    /**
     * Container's getter for MmMain1.
     * @return MmMain1
     */
    public MmMainVOImpl getMmMain1() {
        return (MmMainVOImpl)findViewObject("MmMain1");
    }
    
    
    
    public boolean isItmSerialized_1()
    {
        ViewObjectImpl itmvo = getMmMain1();
        Row curr = itmvo.getCurrentRow();
        if(curr.getAttribute("SerializedFlg").equals("Y"))
        {return true;}
        return false;
    }
    
    public void executeReceiptVo(String voName,String voCriteria)
    {  //  System.out.println("executeReceiptVo");
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        ViewObjectImpl itmvo = (ViewObjectImpl)findViewObject("MmMain1");
        Row curr = itmvo.getCurrentRow();
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        
       // System.out.println(cldId+" "+slocId+" "+row.getAttribute("OrgId")+" "+curr.getAttribute("ItmId")+" "+row.getAttribute("WhId"));
        
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        ViewCriteria vc = vo.getViewCriteria(voCriteria);
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        vo.setNamedWhereClauseParam("bindFyId",fyid);
        vo.executeQuery();
      
    }
    
    public void searchMainAction(String voName,String voCriteria,Boolean includeParam,String bindFlg)
    {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");    
        
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        String org_Id = (String)row.getAttribute("OrgId");
        String whId = (String)row.getAttribute("WhId");
        //String supplier = (String)row.getAttribute("Supplier");
        String itm = (String)row.getAttribute("ItmId");
        String itmGrp = (String)row.getAttribute("ItmGrp");
        String reOrdLvl = (String)row.getAttribute("isBelowReOrdLvl");
        String saftyLvl = (String)row.getAttribute("isBelowSafetyLvl");
        String slsItm = (String)row.getAttribute("isSaleItm");
        String purItm = (String)row.getAttribute("isPurchaseItm");
        String wipItm = (String)row.getAttribute("isWipItm");
        
       // System.out.println("includeParam : "+includeParam);
        
      // System.out.println(cldId +"  "+slocId+" "+org_Id);
       ViewObjectImpl vo = (ViewObjectImpl)findViewObject("MmMain1");
        
       System.out.println(whId+" "+itm+" "+itmGrp+"  "+wipItm+" "+slsItm+" "+purItm);
        
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", org_Id);
        vo.setNamedWhereClauseParam("bindItmId",itm);
        vo.setNamedWhereClauseParam("bindGrpId",itmGrp);
       // vo.setNamedWhereClauseParam("bindEoId",supplier);
        vo.setNamedWhereClauseParam("bindWhId",whId);

        vo.setNamedWhereClauseParam("BINDFLAG",bindFlg=="NONE"?null:bindFlg);
        
       // System.out.println("BIND FLG : "+bindFlg);
        
//        System.out.println("includeParam : "+includeParam);
//        System.out.println("bindWipItmFlg : "+wipItm);
//        System.out.println("bindSlsItmFlg : "+slsItm);
//        System.out.println("bindPurItmFlg : "+purItm);
//        
        if(includeParam)
        {
            vo.setNamedWhereClauseParam("bindChkSpwFlg","Y");
            vo.setNamedWhereClauseParam("bindWipItmFlg",wipItm == null?"N":wipItm);
            vo.setNamedWhereClauseParam("bindSlsItmFlg",slsItm == null?"N":slsItm);
            vo.setNamedWhereClauseParam("bindPurItmFlg",purItm == null?"N":purItm);
        }
        else
        {
            vo.setNamedWhereClauseParam("bindChkSpwFlg",null);
            vo.setNamedWhereClauseParam("bindWipItmFlg",null);
            vo.setNamedWhereClauseParam("bindSlsItmFlg",null);
            vo.setNamedWhereClauseParam("bindPurItmFlg",null);
         
        }
        vo.setNamedWhereClauseParam("bindMinDt",row.getAttribute("ModifyDateFrom"));
        vo.setNamedWhereClauseParam("bindMaxDt",row.getAttribute("ModifyDateTo"));
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,hoOrgId,new Timestamp(System.currentTimeMillis())}));
        
         if(row.getAttribute("financialYearId") == null)
            vo.setNamedWhereClauseParam("bindFyId",fyid);
        else
            vo.setNamedWhereClauseParam("bindFyId",row.getAttribute("financialYearId"));
        
        vo.executeQuery();
        
      
    }

    public boolean executeStkItmLotVo_1()
    {
        
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        
        ViewObjectImpl itmvo = getMmMain1();
        Row curr = itmvo.getCurrentRow();
        ViewObjectImpl vo = getItmLot1();
        //ViewCriteria vc = vo.getViewCriteria("StkItmLotVOCriteria");
       // vo.applyViewCriteria(vc);
         
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        vo.executeQuery();
        
        if(row.getAttribute("OrgId") == null || row.getAttribute("WhId") == null)
         {return false;}
        
        return true;

    }
    
    
    public boolean isLotItmSerialized_1()
    {
        ViewObjectImpl lotvo = getItmLot1();
        Row curr = lotvo.getCurrentRow();
       if(curr.getAttribute("SerializedFlg").equals("Y"))
        {return true;}
        return false;
    }
    
    public void executeStkItmBinVo_1()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        
       // ViewObjectImpl itmvo = getItmLot1();
        ViewObjectImpl lotvo = getItmLot1();
        
        Row curr = lotvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmBin1();
        ViewCriteria vc = vo.getViewCriteria("StkItmBinVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    
    public void executeStkItmSrVo_1()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        
        ViewObjectImpl itmvo = getStkItm1();
        ViewObjectImpl lotvo = getStkItmLot1();
        ViewObjectImpl binvo = getStkItmBin1();
        
        Row curr = binvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmSr1();
        ViewCriteria vc = vo.getViewCriteria("StkItmSrVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindBinId",curr.getAttribute("BinId"));
        vo.executeQuery();

    }
    
    
    public void executeStkItmLotSrVo_1()
    {
        
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        ViewObjectImpl itmvo = getStkItm1();
        ViewObjectImpl lotvo = getItmLot1();
        
        Row curr = lotvo.getCurrentRow();
        ViewObjectImpl vo = getStkItmSr1();
        ViewCriteria vc = vo.getViewCriteria("StkItmSrVOCriteria");
        vo.applyViewCriteria(vc);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindLotId",curr.getAttribute("LotId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        vo.executeQuery();

    }
    
    
    public void executeReceiptVo_1(String voName)
    {  //  System.out.println("executeReceiptVo");
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        ViewObjectImpl itmvo = (ViewObjectImpl)findViewObject("MmMain1");
        Row curr = itmvo.getCurrentRow();
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
        vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        vo.setNamedWhereClauseParam("bindFyId",fyid);
        vo.executeQuery();
      
    }

    /**
     * Container's getter for ItmLot1.
     * @return ItmLot1
     */
    public ViewObjectImpl getItmLot1() {
        return (ViewObjectImpl)findViewObject("ItmLot1");
    }

    /**
     * Container's getter for Receipt1.
     * @return Receipt1
     */
    public ViewObjectImpl getReceipt1() {
        return (ViewObjectImpl)findViewObject("Receipt1");
    }

    /**
     * Container's getter for SupplierVW1.
     * @return SupplierVW1
     */
    public ViewObjectImpl getSupplierVW1() {
        return (ViewObjectImpl)findViewObject("SupplierVW1");
    }
    
    public void executeSupplier(String voName)
    {  //  System.out.println("executeReceiptVo");
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(slocIdStr);
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        ViewObjectImpl rcptvo = (ViewObjectImpl)findViewObject("Receipt1");
        Row curr = rcptvo.getCurrentRow();
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        ViewObjectImpl vo = (ViewObjectImpl)findViewObject(voName);
        vo.setNamedWhereClauseParam("bindCldId", cldId);
        vo.setNamedWhereClauseParam("bindSlocId", slocId);
        vo.setNamedWhereClauseParam("bindOrgId", row.getAttribute("OrgId"));
       // vo.setNamedWhereClauseParam("bindItmId",curr.getAttribute("ItmId"));
        vo.setNamedWhereClauseParam("bindWhId",row.getAttribute("WhId"));
        vo.setNamedWhereClauseParam("bindRcptSrcId",curr.getAttribute("RcptSrcId"));
        Integer fyid=1;
        fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {cldId,orgId,new Timestamp(System.currentTimeMillis())}));
        vo.setNamedWhereClauseParam("bindFyId",fyid);
        vo.executeQuery();
      
    }

    public String executeReceiptDetail(){
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String slocId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Row Curr=this.getTransSearch1().getCurrentRow();
        ViewObjectImpl rcptVo=this.getReceipt1();
        String eoId=rcptVo.getCurrentRow().getAttribute("RcptSrcId").toString();
        String ItmId=rcptVo.getCurrentRow().getAttribute("ItmId").toString();
        
        ViewObjectImpl rcptDetailVo=this.getReceiptDetail();
        rcptDetailVo.setNamedWhereClauseParam("BindCldId", cldId);
        rcptDetailVo.setNamedWhereClauseParam("BindSlocId", slocId);
        rcptDetailVo.setNamedWhereClauseParam("BindOrgId", Curr.getAttribute("OrgId"));
        rcptDetailVo.setNamedWhereClauseParam("BindEoId", eoId);
        rcptDetailVo.setNamedWhereClauseParam("BindItmId", ItmId);
        rcptDetailVo.executeQuery();
        
        return null;
        
    }
    
  
    /**
     * Container's getter for Graph2.
     * @return Graph2
     */
    public ViewObjectImpl getGraph2() {
        return (ViewObjectImpl)findViewObject("Graph2");
    }

    /**
     * Container's getter for MMMainGraphVL1.
     * @return MMMainGraphVL1
     */
    public ViewLinkImpl getMMMainGraphVL1() {
        return (ViewLinkImpl)findViewLink("MMMainGraphVL1");
    }


    /**
     * Container's getter for EoItm2.
     * @return EoItm2
     */
    public ViewObjectImpl getEoItm2() {
        return (ViewObjectImpl)findViewObject("EoItm2");
    }

    /**
     * Container's getter for EoVwSupplierVwVL1.
     * @return EoVwSupplierVwVL1
     */
    public ViewLinkImpl getEoVwSupplierVwVL1() {
        return (ViewLinkImpl)findViewLink("EoVwSupplierVwVL1");
    }
    
    
    public void resetAction()
    {
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        
        ViewObjectImpl trnsVo = (ViewObjectImpl)findViewObject("TransSearch1");
        Row row = trnsVo.getCurrentRow();
        row.setAttribute("ItmId", null);
        row.setAttribute("Supplier", null);
        row.setAttribute("ItmGrp", null);
        row.setAttribute("OrgId", orgId);
        row.setAttribute("WhId", null);
        row.setAttribute("ModifyDateFrom", null);
        row.setAttribute("ModifyDateTo", null);
        
        row.setAttribute("isBelowReOrdLvl", null);
        row.setAttribute("isBelowSafetyLvl", null);
        row.setAttribute("isPurchaseItm", null);
        row.setAttribute("isSaleItm", null);
        row.setAttribute("isWipItm", null);
    }
    
    public void resetAction_1()
    {
       String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
       
        ViewObjectImpl trnsVo = (ViewObjectImpl)this.getsrchItmMov1();
        Row row = trnsVo.getCurrentRow();
        row.setAttribute("orgId", orgId);
        row.setAttribute("whId", null);
        row.setAttribute("ItmId", null);
        row.setAttribute("fromDate", null);
        row.setAttribute("toDate", null);
   }

    /**
     * Container's getter for EoItm3.
     * @return EoItm3
     */
    public ViewObjectImpl getEoItm3() {
        return (ViewObjectImpl)findViewObject("EoItm3");
    }

    /**
     * Container's getter for MMtoEOVL1.
     * @return MMtoEOVL1
     */
    public ViewLinkImpl getMMtoEOVL1() {
        return (ViewLinkImpl)findViewLink("MMtoEOVL1");
    }

    /**
     * Container's getter for PriceMov1.
     * @return PriceMov1
     */
    public ViewObjectImpl getPriceMov1() {
        return (ViewObjectImpl)findViewObject("PriceMov1");
    }

    /**
     * Container's getter for PriceMov2.
     * @return PriceMov2
     */
    public ViewObjectImpl getPriceMov2() {
        return (ViewObjectImpl)findViewObject("PriceMov2");
    }

    /**
     * Container's getter for PriceMovVL1.
     * @return PriceMovVL1
     */
    public ViewLinkImpl getPriceMovVL1() {
        return (ViewLinkImpl)findViewLink("PriceMovVL1");
    }

    /**
     * Container's getter for FinYear1.
     * @return FinYear1
     */
    public ViewObjectImpl getFinYear1() {
        return (ViewObjectImpl)findViewObject("FinYear1");
    }

    /**
     * Container's getter for TopSupplier1.
     * @return TopSupplier1
     */
    public ViewObjectImpl getTopSupplier1() {
        return (ViewObjectImpl)findViewObject("TopSupplier1");
    }

    /**
     * Container's getter for ItmToTopSuppVL1.
     * @return ItmToTopSuppVL1
     */
    public ViewLinkImpl getItmToTopSuppVL1() {
        return (ViewLinkImpl)findViewLink("ItmToTopSuppVL1");
    }

    /**
     * Container's getter for BottomSup1.
     * @return BottomSup1
     */
    public ViewObjectImpl getBottomSup1() {
        return (ViewObjectImpl)findViewObject("BottomSup1");
    }

    /**
     * Container's getter for ItmToBottomSuppVL1.
     * @return ItmToBottomSuppVL1
     */
    public ViewLinkImpl getItmToBottomSuppVL1() {
        return (ViewLinkImpl)findViewLink("ItmToBottomSuppVL1");
    }

    /**
     * Container's getter for ReceiptDetail.
     * @return ReceiptDetail
     */
    public ViewObjectImpl getReceiptDetail() {
        return (ViewObjectImpl)findViewObject("ReceiptDetail");
    }

    /**
     * Container's getter for MMIssue.
     * @return MMIssue
     */
    public ViewObjectImpl getMMIssue() {
        return (ViewObjectImpl)findViewObject("MMIssue");
    }

    /**
     * Container's getter for MmIssueDetail.
     * @return MmIssueDetail
     */
    public ViewObjectImpl getMmIssueDetail() {
        return (ViewObjectImpl)findViewObject("MmIssueDetail");
    }

    /**
     * Container's getter for ResvDetail.
     * @return ResvDetail
     */
    public ViewObjectImpl getResvDetail() {
        return (ViewObjectImpl)findViewObject("ResvDetail");
    }
}
