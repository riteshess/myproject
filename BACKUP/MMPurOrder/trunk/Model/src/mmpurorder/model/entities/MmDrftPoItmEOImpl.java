package mmpurorder.model.entities;


import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 01 15:39:35 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoItmEOImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
    Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC1}"));
        String p_org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String p_cld_id=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID1}");
        String p_doc_id=getMmDrftPo().getDocId();
        System.out.println("docid in eoimpl="+p_doc_id);
        setSlocId(SlocId);
        setOrgId(p_org_id);
        setCldId(p_cld_id);
        setDocId(p_doc_id);
        super.create(attributeList);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        OrdQty {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTlrncQtyType((String)value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTlrncQtyVal((Number)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        DiscType {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        RejAlwd {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getRejAlwd();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setRejAlwd((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        AmdNo {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setAmdNo((Integer)value);
            }
        }
        ,
        AmdDt {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setAmdDt((Date)value);
            }
        }
        ,
        MarkedForDelete {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getMarkedForDelete();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setMarkedForDelete((Boolean)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        BalQty {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getBalQty();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setBalQty((Number)value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmPriceBs((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setDiscAmtBs((Number)value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setDiscAmtSp((Number)value);
            }
        }
        ,
        TotDiscAmtBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTotDiscAmtBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTotDiscAmtBs((Number)value);
            }
        }
        ,
        TotDiscAmtSp {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTotDiscAmtSp();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTotDiscAmtSp((Number)value);
            }
        }
        ,
        TransCurrConvFctr {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTransCurrConvFctr();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTransCurrConvFctr((Number)value);
            }
        }
        ,
        TransItmAmtBs {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTransItmAmtBs();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTransItmAmtBs((Number)value);
            }
        }
        ,
        TransItmAmtSp {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTransItmAmtSp();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTransItmAmtSp((Number)value);
            }
        }
        ,
        TransEoIdFromPo {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getTransEoIdFromPo();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setTransEoIdFromPo((Integer)value);
            }
        }
        ,
        MmDrftPo {
            public Object get(MmDrftPoItmEOImpl obj) {
                return obj.getMmDrftPo();
            }

            public void put(MmDrftPoItmEOImpl obj, Object value) {
                obj.setMmDrftPo((MmDrftPoEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmDrftPoItmEOImpl object);

        public abstract void put(MmDrftPoItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int REJALWD = AttributesEnum.RejAlwd.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int MARKEDFORDELETE = AttributesEnum.MarkedForDelete.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int TOTDISCAMTBS = AttributesEnum.TotDiscAmtBs.index();
    public static final int TOTDISCAMTSP = AttributesEnum.TotDiscAmtSp.index();
    public static final int TRANSCURRCONVFCTR = AttributesEnum.TransCurrConvFctr.index();
    public static final int TRANSITMAMTBS = AttributesEnum.TransItmAmtBs.index();
    public static final int TRANSITMAMTSP = AttributesEnum.TransItmAmtSp.index();
    public static final int TRANSEOIDFROMPO = AttributesEnum.TransEoIdFromPo.index();
    public static final int MMDRFTPO = AttributesEnum.MmDrftPo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmpurorder.model.entities.MmDrftPoItmEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for OrdQty, using the alias name OrdQty.
     * @return the value of OrdQty
     */
    public Number getOrdQty() {
        return (Number)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQty.
     * @param value value to set the OrdQty
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for TlrncQtyType, using the alias name TlrncQtyType.
     * @return the value of TlrncQtyType
     */
    public String getTlrncQtyType() {
        return (String)getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyType.
     * @param value value to set the TlrncQtyType
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TlrncQtyVal, using the alias name TlrncQtyVal.
     * @return the value of TlrncQtyVal
     */
    public Number getTlrncQtyVal() {
        return (Number)getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyVal.
     * @param value value to set the TlrncQtyVal
     */
    public void setTlrncQtyVal(Number value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for RejAlwd, using the alias name RejAlwd.
     * @return the value of RejAlwd
     */
    public String getRejAlwd() {
        return (String)getAttributeInternal(REJALWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejAlwd.
     * @param value value to set the RejAlwd
     */
    public void setRejAlwd(String value) {
        setAttributeInternal(REJALWD, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number)getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp, using the alias name ItmAmtSp.
     * @return the value of ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number)getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp.
     * @param value value to set the ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for MarkedForDelete, using the alias name MarkedForDelete.
     * @return the value of MarkedForDelete
     */
    public Boolean getMarkedForDelete() {
        return (Boolean)getAttributeInternal(MARKEDFORDELETE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MarkedForDelete.
     * @param value value to set the MarkedForDelete
     */
    public void setMarkedForDelete(Boolean value) {
        setAttributeInternal(MARKEDFORDELETE, value);
    }

    /**
     * Gets the attribute value for TransCurrConvFctr, using the alias name TransCurrConvFctr.
     * @return the value of TransCurrConvFctr
     */
    public Number getTransCurrConvFctr() {
        return (Number)getAttributeInternal(TRANSCURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransCurrConvFctr.
     * @param value value to set the TransCurrConvFctr
     */
    public void setTransCurrConvFctr(Number value) {
        setAttributeInternal(TRANSCURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for TransItmAmtBs, using the alias name TransItmAmtBs.
     * @return the value of TransItmAmtBs
     */
    public Number getTransItmAmtBs() {
        return (Number)getAttributeInternal(TRANSITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransItmAmtBs.
     * @param value value to set the TransItmAmtBs
     */
    public void setTransItmAmtBs(Number value) {
        setAttributeInternal(TRANSITMAMTBS, value);
    }

    /**
     * Gets the attribute value for TransItmAmtSp, using the alias name TransItmAmtSp.
     * @return the value of TransItmAmtSp
     */
    public Number getTransItmAmtSp() {
        return (Number)getAttributeInternal(TRANSITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransItmAmtSp.
     * @param value value to set the TransItmAmtSp
     */
    public void setTransItmAmtSp(Number value) {
        setAttributeInternal(TRANSITMAMTSP, value);
    }

    /**
     * Gets the attribute value for TransEoIdFromPo, using the alias name TransEoIdFromPo.
     * @return the value of TransEoIdFromPo
     */
    public Integer getTransEoIdFromPo() {
        return (Integer)getAttributeInternal(TRANSEOIDFROMPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransEoIdFromPo.
     * @param value value to set the TransEoIdFromPo
     */
    public void setTransEoIdFromPo(Integer value) {
        setAttributeInternal(TRANSEOIDFROMPO, value);
    }


    /**
     * Gets the attribute value for TotDiscAmtBs, using the alias name TotDiscAmtBs.
     * @return the value of TotDiscAmtBs
     */
    public Number getTotDiscAmtBs() {
        return (Number)getAttributeInternal(TOTDISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotDiscAmtBs.
     * @param value value to set the TotDiscAmtBs
     */
    public void setTotDiscAmtBs(Number value) {
        setAttributeInternal(TOTDISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TotDiscAmtSp, using the alias name TotDiscAmtSp.
     * @return the value of TotDiscAmtSp
     */
    public Number getTotDiscAmtSp() {
        return (Number)getAttributeInternal(TOTDISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotDiscAmtSp.
     * @param value value to set the TotDiscAmtSp
     */
    public void setTotDiscAmtSp(Number value) {
        setAttributeInternal(TOTDISCAMTSP, value);
    }

    /**
     * Gets the attribute value for BalQty, using the alias name BalQty.
     * @return the value of BalQty
     */
    public Number getBalQty() {
        return (Number)getAttributeInternal(BALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BalQty.
     * @param value value to set the BalQty
     */
    public void setBalQty(Number value) {
        setAttributeInternal(BALQTY, value);
    }

    /**
     * Gets the attribute value for ItmPriceBs, using the alias name ItmPriceBs.
     * @return the value of ItmPriceBs
     */
    public Number getItmPriceBs() {
        return (Number)getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceBs.
     * @param value value to set the ItmPriceBs
     */
    public void setItmPriceBs(Number value) {
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number)getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtSp, using the alias name DiscAmtSp.
     * @return the value of DiscAmtSp
     */
    public Number getDiscAmtSp() {
        return (Number)getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtSp.
     * @param value value to set the DiscAmtSp
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for AmdNo, using the alias name AmdNo.
     * @return the value of AmdNo
     */
    public Integer getAmdNo() {
        return (Integer)getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdNo.
     * @param value value to set the AmdNo
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for AmdDt, using the alias name AmdDt.
     * @return the value of AmdDt
     */
    public Date getAmdDt() {
        return (Date)getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdDt.
     * @param value value to set the AmdDt
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public MmDrftPoEOImpl getMmDrftPo() {
        return (MmDrftPoEOImpl)getAttributeInternal(MMDRFTPO);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMmDrftPo(MmDrftPoEOImpl value) {
        setAttributeInternal(MMDRFTPO, value);
    }


    /**
     * @param slocId key constituent
     * @param cldId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String cldId, String orgId, String docId, String itmId,
                                       String itmUom) {
        return new Key(new Object[]{slocId, cldId, orgId, docId, itmId, itmUom});
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock(); Commented Due to Problem in RateContract PO @Ashish kumar-04-05-2013
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
       
        if(operation==DML_UPDATE){
               Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
               
               setUsrIdMod(UserId);
               getMmDrftPo().setUsrIdModDt((Date)Date.getCurrentDate());
        }
        if(operation!=DML_DELETE){
        if(getOrdQty()!=null)
        setBalQty(getOrdQty());
        else
            setBalQty(new Number(0));
        
        if(getItmPrice()!=null && getMmDrftPo().getCurrConvFctr()!=null)
        {
            Number ccf=getMmDrftPo().getCurrConvFctr();
            Number price=getItmPrice();
            setItmPriceBs(price.multiply(ccf));
            }
        else
            setItmPriceBs(new Number(0));  
        }
        super.doDML(operation, e);
    }
    
    public String resolvEl(String data){
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message=valueExp.getValue(elContext).toString();
           return Message;
         }

}
