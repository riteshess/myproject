package pmssiterecordapp.model.entities;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import pmssiterecordapp.model.services.PMSSiteRecordAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 25 15:42:26 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PmsSiteRcdEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        FyId,
        DocId,
        PrjId,
        EoId,
        SelBasis,
        RefCoaId,
        AmtSp,
        AmtBs,
        CurrIdSp,
        CurrConvRate,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        RcdId,
        RcdDt,
        RcdStat,
        PmsSiteRcdIr;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int SELBASIS = AttributesEnum.SelBasis.index();
    public static final int REFCOAID = AttributesEnum.RefCoaId.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int RCDID = AttributesEnum.RcdId.index();
    public static final int RCDDT = AttributesEnum.RcdDt.index();
    public static final int RCDSTAT = AttributesEnum.RcdStat.index();
    public static final int PMSSITERCDIR = AttributesEnum.PmsSiteRcdIr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PmsSiteRcdEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pmssiterecordapp.model.entities.PmsSiteRcdEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for SelBasis, using the alias name SelBasis.
     * @return the value of SelBasis
     */
    public String getSelBasis() {
        return (String) getAttributeInternal(SELBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for SelBasis.
     * @param value value to set the SelBasis
     */
    public void setSelBasis(String value) {
        setAttributeInternal(SELBASIS, value);
    }

    /**
     * Gets the attribute value for RefCoaId, using the alias name RefCoaId.
     * @return the value of RefCoaId
     */
    public Integer getRefCoaId() {
        return (Integer) getAttributeInternal(REFCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefCoaId.
     * @param value value to set the RefCoaId
     */
    public void setRefCoaId(Integer value) {
        setAttributeInternal(REFCOAID, value);
    }

    /**
     * Gets the attribute value for AmtSp, using the alias name AmtSp.
     * @return the value of AmtSp
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmtSp.
     * @param value value to set the AmtSp
     */
    public void setAmtSp(Number value) {
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for AmtBs, using the alias name AmtBs.
     * @return the value of AmtBs
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmtBs.
     * @param value value to set the AmtBs
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConvRate, using the alias name CurrConvRate.
     * @return the value of CurrConvRate
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvRate.
     * @param value value to set the CurrConvRate
     */
    public void setCurrConvRate(Number value) {
        setAttributeInternal(CURRCONVRATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for RcdId, using the alias name RcdId.
     * @return the value of RcdId
     */
    public String getRcdId() {
        return (String) getAttributeInternal(RCDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcdId.
     * @param value value to set the RcdId
     */
    public void setRcdId(String value) {
        setAttributeInternal(RCDID, value);
    }


    /**
     * Gets the attribute value for RcdDt, using the alias name RcdDt.
     * @return the value of RcdDt
     */
    public Timestamp getRcdDt() {
        return (Timestamp) getAttributeInternal(RCDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcdDt.
     * @param value value to set the RcdDt
     */
    public void setRcdDt(Timestamp value) {
        setAttributeInternal(RCDDT, value);
    }

    /**
     * Gets the attribute value for RcdStat, using the alias name RcdStat.
     * @return the value of RcdStat
     */
    public Integer getRcdStat() {
        return (Integer) getAttributeInternal(RCDSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcdStat.
     * @param value value to set the RcdStat
     */
    public void setRcdStat(Integer value) {
        setAttributeInternal(RCDSTAT, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getPmsSiteRcdIr() {
        return (RowIterator) getAttributeInternal(PMSSITERCDIR);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setOrgId(EbizParams.GLBL_APP_USR_ORG());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(StaticValue.getCurrDtWidTimestamp());
        setRcdDt(StaticValue.getCurrDtWidTimestamp());
        PMSSiteRecordAMImpl am =
            (PMSSiteRecordAMImpl) ADFModelUtils.resolvEl("#{data.PMSSiteRecordAMDataControl.dataProvider}");
        setDocId(am.genTxnId());
        setFyId(EbizParams.getFyIdOnCurrDtAndCurrOrg(am));
        System.out.println("Project Allowed? =" + ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ALW}"));
        System.out.println("Project Id Set =" + ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ID}"));
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ALW}") != null &&
            ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ALW}").toString().equals("Y"))
            setPrjId(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ID}").toString());
        else
            setPrjId("PROJ0000");
        this.setSelBasis("R");
        this.setRcdStat(1);
        if (am.eoIdFromUsrId(EbizParams.GLBL_APP_USR()) != null) {
            this.setEoId(am.eoIdFromUsrId(EbizParams.GLBL_APP_USR()));
        }
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(EbizParams.GLBL_APP_USR());
            this.setUsrIdModDt(StaticValue.getCurrDtWidTimestamp());
        }
        super.doDML(operation, e);
    }
}

