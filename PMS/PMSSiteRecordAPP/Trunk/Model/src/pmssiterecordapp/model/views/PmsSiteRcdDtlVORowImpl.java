package pmssiterecordapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;

import pmssiterecordapp.model.entities.PmsSiteRcdDtlEOImpl;
import pmssiterecordapp.model.services.PMSSiteRecordAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 26 17:38:35 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PmsSiteRcdDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_PMSSITERCDDTLEO = 0;
    private Number zero = new Number(0);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        PrjId,
        IrDocId,
        TypeFlg,
        SrNo,
        CoaId,
        AmtSp,
        AmtBs,
        AmtTyp,
        BillDtlFlg,
        Remarks,
        SelBasis,
        TaxFlg,
        TdsFlg,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        GlVouId,
        CcId,
        TransExpCoaNm,
        TransIrDispNo,
        TransCurrRate,
        PmsSiteRcdBillDtl,
        PmsSiteRcdBillDtl1,
        LovCoaOtherTypeVO1,
        LovAmtTypeVO1,
        LovTypeFlgVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int IRDOCID = AttributesEnum.IrDocId.index();
    public static final int TYPEFLG = AttributesEnum.TypeFlg.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTTYP = AttributesEnum.AmtTyp.index();
    public static final int BILLDTLFLG = AttributesEnum.BillDtlFlg.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SELBASIS = AttributesEnum.SelBasis.index();
    public static final int TAXFLG = AttributesEnum.TaxFlg.index();
    public static final int TDSFLG = AttributesEnum.TdsFlg.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int GLVOUID = AttributesEnum.GlVouId.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int TRANSEXPCOANM = AttributesEnum.TransExpCoaNm.index();
    public static final int TRANSIRDISPNO = AttributesEnum.TransIrDispNo.index();
    public static final int TRANSCURRRATE = AttributesEnum.TransCurrRate.index();
    public static final int PMSSITERCDBILLDTL = AttributesEnum.PmsSiteRcdBillDtl.index();
    public static final int PMSSITERCDBILLDTL1 = AttributesEnum.PmsSiteRcdBillDtl1.index();
    public static final int LOVCOAOTHERTYPEVO1 = AttributesEnum.LovCoaOtherTypeVO1.index();
    public static final int LOVAMTTYPEVO1 = AttributesEnum.LovAmtTypeVO1.index();
    public static final int LOVTYPEFLGVO1 = AttributesEnum.LovTypeFlgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PmsSiteRcdDtlVORowImpl() {
    }

    /**
     * Gets PmsSiteRcdDtlEO entity object.
     * @return the PmsSiteRcdDtlEO
     */
    public PmsSiteRcdDtlEOImpl getPmsSiteRcdDtlEO() {
        return (PmsSiteRcdDtlEOImpl) getEntity(ENTITY_PMSSITERCDDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for IR_DOC_ID using the alias name IrDocId.
     * @return the IR_DOC_ID
     */
    public String getIrDocId() {
        return (String) getAttributeInternal(IRDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for IR_DOC_ID using the alias name IrDocId.
     * @param value value to set the IR_DOC_ID
     */
    public void setIrDocId(String value) {
        setAttributeInternal(IRDOCID, value);
    }

    /**
     * Gets the attribute value for TYPE_FLG using the alias name TypeFlg.
     * @return the TYPE_FLG
     */
    public String getTypeFlg() {
        return (String) getAttributeInternal(TYPEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE_FLG using the alias name TypeFlg.
     * @param value value to set the TYPE_FLG
     */
    public void setTypeFlg(String value) {
        setAttributeInternal(TYPEFLG, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        if (value != null) {
            PMSSiteRecordAMImpl amimpl = (PMSSiteRecordAMImpl) this.getApplicationModule();
            Row fr[] = amimpl.getPmsSiteRcdExpDtl().getFilteredRows("CoaId", value);
            if (fr.length > 0) {
                this.setTdsFlg((String) fr[0].getAttribute("TdsFlg"));
                this.setTaxFlg((String) fr[0].getAttribute("TaxFlg"));
                this.setBillDtlFlg((String) fr[0].getAttribute("BillDtlFlg"));
            }
        } else {
            this.setTdsFlg("N");
            this.setTaxFlg("N");
            this.setBillDtlFlg("Y");
        }
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        if (value == null)
            value = zero;
        Number rate = zero;
        if (this.getTransCurrRate() != null)
            rate = this.getTransCurrRate();
        this.setAmtBs(value.multiply(rate));
        PMSSiteRecordAMImpl amimpl = (PMSSiteRecordAMImpl) this.getApplicationModule();
        if (this.getCcId() != null) {
            amimpl.updateCostCenterAmt();
        } else {
            if (amimpl.chkCcApplicableOrNot()) {
                String ccId = amimpl.generateCcId();
                this.setCcId((ccId == null || ccId.equals("0")) ? null : ccId);
            }
        }
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_TYP using the alias name AmtTyp.
     * @return the AMT_TYP
     */
    public String getAmtTyp() {
        return (String) getAttributeInternal(AMTTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_TYP using the alias name AmtTyp.
     * @param value value to set the AMT_TYP
     */
    public void setAmtTyp(String value) {
        setAttributeInternal(AMTTYP, value);
    }

    /**
     * Gets the attribute value for BILL_DTL_FLG using the alias name BillDtlFlg.
     * @return the BILL_DTL_FLG
     */
    public String getBillDtlFlg() {
        return (String) getAttributeInternal(BILLDTLFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_DTL_FLG using the alias name BillDtlFlg.
     * @param value value to set the BILL_DTL_FLG
     */
    public void setBillDtlFlg(String value) {
        setAttributeInternal(BILLDTLFLG, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SEL_BASIS using the alias name SelBasis.
     * @return the SEL_BASIS
     */
    public String getSelBasis() {
        return (String) getAttributeInternal(SELBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SEL_BASIS using the alias name SelBasis.
     * @param value value to set the SEL_BASIS
     */
    public void setSelBasis(String value) {
        setAttributeInternal(SELBASIS, value);
    }

    /**
     * Gets the attribute value for TAX_FLG using the alias name TaxFlg.
     * @return the TAX_FLG
     */
    public String getTaxFlg() {
        return (String) getAttributeInternal(TAXFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_FLG using the alias name TaxFlg.
     * @param value value to set the TAX_FLG
     */
    public void setTaxFlg(String value) {
        setAttributeInternal(TAXFLG, value);
    }

    /**
     * Gets the attribute value for TDS_FLG using the alias name TdsFlg.
     * @return the TDS_FLG
     */
    public String getTdsFlg() {
        return (String) getAttributeInternal(TDSFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TDS_FLG using the alias name TdsFlg.
     * @param value value to set the TDS_FLG
     */
    public void setTdsFlg(String value) {
        setAttributeInternal(TDSFLG, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for GL_VOU_ID using the alias name GlVouId.
     * @return the GL_VOU_ID
     */
    public String getGlVouId() {
        return (String) getAttributeInternal(GLVOUID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_VOU_ID using the alias name GlVouId.
     * @param value value to set the GL_VOU_ID
     */
    public void setGlVouId(String value) {
        setAttributeInternal(GLVOUID, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExpCoaNm.
     * @return the TransExpCoaNm
     */
    public String getTransExpCoaNm() {
        if (getAttributeInternal(TRANSEXPCOANM) != null)
            return (String) getAttributeInternal(TRANSEXPCOANM);
        else {
            Row[] fr = this.getLovCoaOtherTypeVO1().getFilteredRows("CoaId", this.getCoaId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("CoaNm");
        }
        return (String) getAttributeInternal(TRANSEXPCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExpCoaNm.
     * @param value value to set the  TransExpCoaNm
     */
    public void setTransExpCoaNm(String value) {
        setAttributeInternal(TRANSEXPCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIrDispNo.
     * @return the TransIrDispNo
     */
    public String getTransIrDispNo() {
        if (getAttributeInternal(TRANSIRDISPNO) != null)
            return (String) getAttributeInternal(TRANSIRDISPNO);
        else {
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            am.getLovIrIdDisp().setNamedWhereClauseParam("irDocIdBind", this.getIrDocId());
            am.getLovIrIdDisp().executeQuery();
            Row[] fr = am.getLovIrIdDisp().getFilteredRows("DocId", this.getIrDocId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("IrId");
            else
                return "Default";
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrRate.
     * @return the TransCurrRate
     */
    public Number getTransCurrRate() {
        if (getAttributeInternal(TRANSCURRRATE) != null)
            return (Number) getAttributeInternal(TRANSCURRRATE);
        else {
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            if (am.getPmsSiteRcd().getCurrentRow() != null)
                return (Number) am.getPmsSiteRcd().getCurrentRow().getAttribute("CurrConvRate");
        }
        return (Number) getAttributeInternal(TRANSCURRRATE);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdBillDtl.
     */
    public RowIterator getPmsSiteRcdBillDtl() {
        return (RowIterator) getAttributeInternal(PMSSITERCDBILLDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdBillDtl1.
     */
    public RowIterator getPmsSiteRcdBillDtl1() {
        return (RowIterator) getAttributeInternal(PMSSITERCDBILLDTL1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaOtherTypeVO1.
     */
    public RowSet getLovCoaOtherTypeVO1() {
        return (RowSet) getAttributeInternal(LOVCOAOTHERTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAmtTypeVO1.
     */
    public RowSet getLovAmtTypeVO1() {
        return (RowSet) getAttributeInternal(LOVAMTTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTypeFlgVO1.
     */
    public RowSet getLovTypeFlgVO1() {
        return (RowSet) getAttributeInternal(LOVTYPEFLGVO1);
    }
}

