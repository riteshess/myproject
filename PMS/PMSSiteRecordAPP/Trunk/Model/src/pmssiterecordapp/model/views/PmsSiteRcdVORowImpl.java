package pmssiterecordapp.model.views;

import adf.utils.ebiz.EbizParamsAPPUtils;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;

import pmssiterecordapp.model.entities.PmsSiteRcdEOImpl;
import pmssiterecordapp.model.services.PMSSiteRecordAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 26 13:52:20 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PmsSiteRcdVORowImpl extends ViewRowImpl {


    public static final int ENTITY_PMSSITERCDEO = 0;
    private Number zero = new Number(0);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AmtBs,
        AmtSp,
        CldId,
        CurrConvRate,
        CurrIdSp,
        DocId,
        EoId,
        FyId,
        HoOrgId,
        OrgId,
        PrjId,
        RcdDt,
        RcdId,
        RcdStat,
        RefCoaId,
        SelBasis,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransEoNm,
        TransCurrDesc,
        TransCoaNm,
        TransIrNoExp,
        TransIrDocIdExp,
        TransTotAmtSp,
        TransTypeFlg,
        TransTaxableAmt,
        TransTdsableAmt,
        TransOpBalOut,
        TransDrAmt,
        TransCrAmt,
        TransClBalPostOut,
        TransProjAmtOut,
        TransUnpostAmtOut,
        TransClBalOut,
        TransClBalProj,
        TransClBalProjNum,
        PmsSiteRcdIr,
        PmsSiteRcdDtl,
        PmsSiteRcdBillDtl,
        PmsSiteRcdTr,
        PmsSiteRcdTdsRule,
        LovSelBasisVO1,
        LovCurrencyVO1,
        LovCoaIdVO1,
        LovEoNmVO1,
        LovUsrIdVO1,
        LovUsrIdVO2,
        LovPrjIdVO1,
        LovIrIdVO1,
        LovTypeFlgVO1,
        LovRcdStatVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int RCDDT = AttributesEnum.RcdDt.index();
    public static final int RCDID = AttributesEnum.RcdId.index();
    public static final int RCDSTAT = AttributesEnum.RcdStat.index();
    public static final int REFCOAID = AttributesEnum.RefCoaId.index();
    public static final int SELBASIS = AttributesEnum.SelBasis.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSCURRDESC = AttributesEnum.TransCurrDesc.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSIRNOEXP = AttributesEnum.TransIrNoExp.index();
    public static final int TRANSIRDOCIDEXP = AttributesEnum.TransIrDocIdExp.index();
    public static final int TRANSTOTAMTSP = AttributesEnum.TransTotAmtSp.index();
    public static final int TRANSTYPEFLG = AttributesEnum.TransTypeFlg.index();
    public static final int TRANSTAXABLEAMT = AttributesEnum.TransTaxableAmt.index();
    public static final int TRANSTDSABLEAMT = AttributesEnum.TransTdsableAmt.index();
    public static final int TRANSOPBALOUT = AttributesEnum.TransOpBalOut.index();
    public static final int TRANSDRAMT = AttributesEnum.TransDrAmt.index();
    public static final int TRANSCRAMT = AttributesEnum.TransCrAmt.index();
    public static final int TRANSCLBALPOSTOUT = AttributesEnum.TransClBalPostOut.index();
    public static final int TRANSPROJAMTOUT = AttributesEnum.TransProjAmtOut.index();
    public static final int TRANSUNPOSTAMTOUT = AttributesEnum.TransUnpostAmtOut.index();
    public static final int TRANSCLBALOUT = AttributesEnum.TransClBalOut.index();
    public static final int TRANSCLBALPROJ = AttributesEnum.TransClBalProj.index();
    public static final int TRANSCLBALPROJNUM = AttributesEnum.TransClBalProjNum.index();
    public static final int PMSSITERCDIR = AttributesEnum.PmsSiteRcdIr.index();
    public static final int PMSSITERCDDTL = AttributesEnum.PmsSiteRcdDtl.index();
    public static final int PMSSITERCDBILLDTL = AttributesEnum.PmsSiteRcdBillDtl.index();
    public static final int PMSSITERCDTR = AttributesEnum.PmsSiteRcdTr.index();
    public static final int PMSSITERCDTDSRULE = AttributesEnum.PmsSiteRcdTdsRule.index();
    public static final int LOVSELBASISVO1 = AttributesEnum.LovSelBasisVO1.index();
    public static final int LOVCURRENCYVO1 = AttributesEnum.LovCurrencyVO1.index();
    public static final int LOVCOAIDVO1 = AttributesEnum.LovCoaIdVO1.index();
    public static final int LOVEONMVO1 = AttributesEnum.LovEoNmVO1.index();
    public static final int LOVUSRIDVO1 = AttributesEnum.LovUsrIdVO1.index();
    public static final int LOVUSRIDVO2 = AttributesEnum.LovUsrIdVO2.index();
    public static final int LOVPRJIDVO1 = AttributesEnum.LovPrjIdVO1.index();
    public static final int LOVIRIDVO1 = AttributesEnum.LovIrIdVO1.index();
    public static final int LOVTYPEFLGVO1 = AttributesEnum.LovTypeFlgVO1.index();
    public static final int LOVRCDSTATVO1 = AttributesEnum.LovRcdStatVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PmsSiteRcdVORowImpl() {
    }

    /**
     * Gets PmsSiteRcdEO entity object.
     * @return the PmsSiteRcdEO
     */
    public PmsSiteRcdEOImpl getPmsSiteRcdEO() {
        return (PmsSiteRcdEOImpl) getEntity(ENTITY_PMSSITERCDEO);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        if (value == null)
            value = zero;
        Number rate = zero;
        if (this.getCurrConvRate() != null)
            rate = this.getCurrConvRate();
        this.setAmtBs(value.multiply(rate));
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @return the CURR_CONV_RATE
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @param value value to set the CURR_CONV_RATE
     */
    public void setCurrConvRate(Number value) {
        setAttributeInternal(CURRCONVRATE, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        if (value == null)
            this.setCurrConvRate(new Number(0));
        else {
            Number rate = zero;
            if (EbizParamsAPPUtils.getCurrRateForCurrId(((PMSSiteRecordAMImpl) this.getApplicationModule()), value) !=
                null)
                rate =
                    EbizParamsAPPUtils.getCurrRateForCurrId(((PMSSiteRecordAMImpl) this.getApplicationModule()), value);
            this.setCurrConvRate(rate);
            System.out.println("Currency rate =" + rate);
        }
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for RCD_DT using the alias name RcdDt.
     * @return the RCD_DT
     */
    public Timestamp getRcdDt() {
        return (Timestamp) getAttributeInternal(RCDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for RCD_DT using the alias name RcdDt.
     * @param value value to set the RCD_DT
     */
    public void setRcdDt(Timestamp value) {
        setAttributeInternal(RCDDT, value);
    }

    /**
     * Gets the attribute value for RCD_ID using the alias name RcdId.
     * @return the RCD_ID
     */
    public String getRcdId() {
        return (String) getAttributeInternal(RCDID);
    }

    /**
     * Sets <code>value</code> as attribute value for RCD_ID using the alias name RcdId.
     * @param value value to set the RCD_ID
     */
    public void setRcdId(String value) {
        setAttributeInternal(RCDID, value);
    }

    /**
     * Gets the attribute value for RCD_STAT using the alias name RcdStat.
     * @return the RCD_STAT
     */
    public Integer getRcdStat() {
        return (Integer) getAttributeInternal(RCDSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for RCD_STAT using the alias name RcdStat.
     * @param value value to set the RCD_STAT
     */
    public void setRcdStat(Integer value) {
        setAttributeInternal(RCDSTAT, value);
    }

    /**
     * Gets the attribute value for REF_COA_ID using the alias name RefCoaId.
     * @return the REF_COA_ID
     */
    public Integer getRefCoaId() {
        return (Integer) getAttributeInternal(REFCOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_COA_ID using the alias name RefCoaId.
     * @param value value to set the REF_COA_ID
     */
    public void setRefCoaId(Integer value) {
        this.setTransIrDocIdExp(null);
        this.setTransIrNoExp(null);
        setAttributeInternal(REFCOAID, value);
    }

    /**
     * Gets the attribute value for SEL_BASIS using the alias name SelBasis.
     * @return the SEL_BASIS
     */
    public String getSelBasis() {
        return (String) getAttributeInternal(SELBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SEL_BASIS using the alias name SelBasis.
     * @param value value to set the SEL_BASIS
     */
    public void setSelBasis(String value) {
        setAttributeInternal(SELBASIS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if (getAttributeInternal(TRANSEONM) != null)
            return (String) getAttributeInternal(TRANSEONM);
        else {
            Row fr[] = this.getLovEoNmVO1().getFilteredRows("EoId", this.getEoId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("EoNm");
        }
        return (String) getAttributeInternal(TRANSEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrDesc.
     * @return the TransCurrDesc
     */
    public String getTransCurrDesc() {
        if (getAttributeInternal(TRANSCURRDESC) != null)
            return (String) getAttributeInternal(TRANSCURRDESC);
        else {
            Row fr[] = this.getLovCurrencyVO1().getFilteredRows("CcCurrIdTxn", this.getCurrIdSp());
            System.out.println("No. of Filtered Rows for Currency =" + this.getCurrIdSp() + " Desc=" + fr.length);
            if (fr.length > 0)
                return (String) fr[0].getAttribute("CurrDescTxn");
        }
        return (String) getAttributeInternal(TRANSCURRDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrDesc.
     * @param value value to set the  TransCurrDesc
     */
    public void setTransCurrDesc(String value) {
        setAttributeInternal(TRANSCURRDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the TransCoaNm
     */
    public String getTransCoaNm() {
        if (getAttributeInternal(TRANSCOANM) != null)
            return (String) getAttributeInternal(TRANSCOANM);
        else {
            Row fr[] = this.getLovCoaIdVO1().getFilteredRows("CoaId", this.getRefCoaId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("CoaNm");
        }
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value) {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIrNoExp.
     * @return the TransIrNoExp
     */
    public String getTransIrNoExp() {
        if (getAttributeInternal(TRANSIRNOEXP) != null)
            return (String) getAttributeInternal(TRANSIRNOEXP);
        PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
        Row fr[] = am.getPmsSiteRcdIr().getFilteredRows("DocId", this.getDocId());
        String irDocId = "0";
        if (fr.length > 0) {
            irDocId = (String) fr[0].getAttribute("IrDocId");

            am.getLovIrIdDisp().setNamedWhereClauseParam("irDocIdBind", irDocId);
            am.getLovIrIdDisp().executeQuery();

            Row irrow[] = am.getLovIrIdDisp().getFilteredRows("DocId", irDocId);
            if (irrow.length > 0)
                return (String) irrow[0].getAttribute("IrId");
            else
                return "Default";
        }
        return (String) getAttributeInternal(TRANSIRNOEXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIrNoExp.
     * @param value value to set the  TransIrNoExp
     */
    public void setTransIrNoExp(String value) {
        setAttributeInternal(TRANSIRNOEXP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIrDocIdExp.
     * @return the TransIrDocIdExp
     */
    public String getTransIrDocIdExp() {
        if(getAttributeInternal(TRANSIRDOCIDEXP)!=null)
        return (String) getAttributeInternal(TRANSIRDOCIDEXP);
        PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
        Row fr[] = am.getPmsSiteRcdIr().getFilteredRows("DocId", this.getDocId());
        if (fr.length > 0) {
            return (String) fr[0].getAttribute("IrDocId");
        }
        return (String) getAttributeInternal(TRANSIRDOCIDEXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIrDocIdExp.
     * @param value value to set the  TransIrDocIdExp
     */
    public void setTransIrDocIdExp(String value) {
        setAttributeInternal(TRANSIRDOCIDEXP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotAmtSp.
     * @return the TransTotAmtSp
     */
    public Number getTransTotAmtSp() {
        PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
        Row[] fr = am.getPmsSiteRcdDtl().getFilteredRows("DocId", this.getDocId());
        if (fr.length > 0) {
            Number drAmt = zero;
            Number crAmt = zero;
            Number taxAmt = zero;
            Number tdsAmt = zero;
            for (Row row : fr) {
                if (row.getAttribute("AmtTyp") != null && row.getAttribute("AmtTyp").toString().equals("Dr"))
                    drAmt = drAmt.add((Number) row.getAttribute("AmtSp"));
                else
                    crAmt = crAmt.add((Number) row.getAttribute("AmtSp"));
            }

            //Tax Amt
            Row taxRows[] = am.getPmsSiteRcdTr().getFilteredRows("DocId", this.getDocId());
            if (taxRows.length > 0 && taxRows[0].getAttribute("TaxAmtSp") != null)
                taxAmt = (Number) taxRows[0].getAttribute("TaxAmtSp");

            //TDS Amt
            Row tdsRows[] = am.getPmsSiteRcdTdsRule().getFilteredRows("DocId", this.getDocId());
            if (tdsRows.length > 0 && tdsRows[0].getAttribute("TdsAmtSp") != null)
                tdsAmt = (Number) tdsRows[0].getAttribute("TdsAmtSp");

            setAmtSp(drAmt.subtract(crAmt).add(taxAmt).subtract(tdsAmt));
            return drAmt.subtract(crAmt).add(taxAmt).subtract(tdsAmt);
        }
        return (Number) getAttributeInternal(TRANSTOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotAmtSp.
     * @param value value to set the  TransTotAmtSp
     */
    public void setTransTotAmtSp(Number value) {
        setAttributeInternal(TRANSTOTAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTypeFlg.
     * @return the TransTypeFlg
     */
    public String getTransTypeFlg() {
        /*  if (getAttributeInternal(TRANSTYPEFLG) != null)
            return (String) getAttributeInternal(TRANSTYPEFLG);
        else {
            String val = "E";
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            if (am.getPmsSiteRcdExpDtl().getEstimatedRowCount() > 0 &&
                am.getPmsSiteRcdExpDtl().getCurrentRow() != null &&
                am.getPmsSiteRcdExpDtl().getCurrentRow().getAttribute("TypeFlg") != null)
                val = (String) am.getPmsSiteRcdExpDtl().getCurrentRow().getAttribute("TypeFlg");
            return val;
        } */
        return "P";

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTypeFlg.
     * @param value value to set the  TransTypeFlg
     */
    public void setTransTypeFlg(String value) {
        setAttributeInternal(TRANSTYPEFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxableAmt.
     * @return the TransTaxableAmt
     */
    public Number getTransTaxableAmt() {
        if (getAttributeInternal(TRANSTAXABLEAMT) != null)
            return (Number) getAttributeInternal(TRANSTAXABLEAMT);
        else {
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            RowQualifier rq = new RowQualifier(am.getPmsSiteRcdExpDtl());
            rq.setWhereClause("DocId='" + this.getDocId() + "' and  TaxFlg= 'Y' ");
            Row taxableRows[] = am.getPmsSiteRcdExpDtl().getFilteredRows(rq);
            Number taxableAmt = new Number(0);
            for (Row row : taxableRows) {

                Number amt = (row.getAttribute("AmtSp") != null ? (Number) row.getAttribute("AmtSp") : zero);
                taxableAmt = taxableAmt.add(amt);
            }
            return taxableAmt;
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxableAmt.
     * @param value value to set the  TransTaxableAmt
     */
    public void setTransTaxableAmt(Number value) {
        setAttributeInternal(TRANSTAXABLEAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTdsableAmt.
     * @return the TransTdsableAmt
     */
    public Number getTransTdsableAmt() {
        if (getAttributeInternal(TRANSTDSABLEAMT) != null)
            return (Number) getAttributeInternal(TRANSTDSABLEAMT);
        else {
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            RowQualifier rq = new RowQualifier(am.getPmsSiteRcdExpDtl());
            rq.setWhereClause("DocId='" + this.getDocId() + "' and  TdsFlg= 'Y' ");
            Row tdsableRows[] = am.getPmsSiteRcdExpDtl().getFilteredRows(rq);
            Number tdsableAmt = new Number(0);
            for (Row row : tdsableRows) {

                Number amt = (row.getAttribute("AmtSp") != null ? (Number) row.getAttribute("AmtSp") : zero);
                tdsableAmt = tdsableAmt.add(amt);
            }
            return tdsableAmt;
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTdsableAmt.
     * @param value value to set the  TransTdsableAmt
     */
    public void setTransTdsableAmt(Number value) {
        setAttributeInternal(TRANSTDSABLEAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpBalOut.
     * @return the TransOpBalOut
     */
    public String getTransOpBalOut() {
        return (String) getAttributeInternal(TRANSOPBALOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpBalOut.
     * @param value value to set the  TransOpBalOut
     */
    public void setTransOpBalOut(String value) {
        setAttributeInternal(TRANSOPBALOUT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDrAmt.
     * @return the TransDrAmt
     */
    public String getTransDrAmt() {
        return (String) getAttributeInternal(TRANSDRAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDrAmt.
     * @param value value to set the  TransDrAmt
     */
    public void setTransDrAmt(String value) {
        setAttributeInternal(TRANSDRAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCrAmt.
     * @return the TransCrAmt
     */
    public String getTransCrAmt() {
        return (String) getAttributeInternal(TRANSCRAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCrAmt.
     * @param value value to set the  TransCrAmt
     */
    public void setTransCrAmt(String value) {
        setAttributeInternal(TRANSCRAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClBalPostOut.
     * @return the TransClBalPostOut
     */
    public String getTransClBalPostOut() {
        return (String) getAttributeInternal(TRANSCLBALPOSTOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClBalPostOut.
     * @param value value to set the  TransClBalPostOut
     */
    public void setTransClBalPostOut(String value) {
        setAttributeInternal(TRANSCLBALPOSTOUT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProjAmtOut.
     * @return the TransProjAmtOut
     */
    public String getTransProjAmtOut() {
        return (String) getAttributeInternal(TRANSPROJAMTOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjAmtOut.
     * @param value value to set the  TransProjAmtOut
     */
    public void setTransProjAmtOut(String value) {
        setAttributeInternal(TRANSPROJAMTOUT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUnpostAmtOut.
     * @return the TransUnpostAmtOut
     */
    public String getTransUnpostAmtOut() {
        return (String) getAttributeInternal(TRANSUNPOSTAMTOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUnpostAmtOut.
     * @param value value to set the  TransUnpostAmtOut
     */
    public void setTransUnpostAmtOut(String value) {
        setAttributeInternal(TRANSUNPOSTAMTOUT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClBalOut.
     * @return the TransClBalOut
     */
    public String getTransClBalOut() {
        return (String) getAttributeInternal(TRANSCLBALOUT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClBalOut.
     * @param value value to set the  TransClBalOut
     */
    public void setTransClBalOut(String value) {
        setAttributeInternal(TRANSCLBALOUT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClBalProj.
     * @return the TransClBalProj
     */
    public String getTransClBalProj() {
        return (String) getAttributeInternal(TRANSCLBALPROJ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClBalProj.
     * @param value value to set the  TransClBalProj
     */
    public void setTransClBalProj(String value) {
        setAttributeInternal(TRANSCLBALPROJ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClBalProjNum.
     * @return the TransClBalProjNum
     */
    public Number getTransClBalProjNum() {
        return (Number) getAttributeInternal(TRANSCLBALPROJNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClBalProjNum.
     * @param value value to set the  TransClBalProjNum
     */
    public void setTransClBalProjNum(Number value) {
        setAttributeInternal(TRANSCLBALPROJNUM, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdIr.
     */
    public RowIterator getPmsSiteRcdIr() {
        return (RowIterator) getAttributeInternal(PMSSITERCDIR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdDtl.
     */
    public RowIterator getPmsSiteRcdDtl() {
        return (RowIterator) getAttributeInternal(PMSSITERCDDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdBillDtl.
     */
    public RowIterator getPmsSiteRcdBillDtl() {
        return (RowIterator) getAttributeInternal(PMSSITERCDBILLDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdTr.
     */
    public RowIterator getPmsSiteRcdTr() {
        return (RowIterator) getAttributeInternal(PMSSITERCDTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PmsSiteRcdTdsRule.
     */
    public RowIterator getPmsSiteRcdTdsRule() {
        return (RowIterator) getAttributeInternal(PMSSITERCDTDSRULE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSelBasisVO1.
     */
    public RowSet getLovSelBasisVO1() {
        return (RowSet) getAttributeInternal(LOVSELBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO1.
     */
    public RowSet getLovCurrencyVO1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaIdVO1.
     */
    public RowSet getLovCoaIdVO1() {
        return (RowSet) getAttributeInternal(LOVCOAIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoNmVO1.
     */
    public RowSet getLovEoNmVO1() {
        return (RowSet) getAttributeInternal(LOVEONMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO1.
     */
    public RowSet getLovUsrIdVO1() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO2.
     */
    public RowSet getLovUsrIdVO2() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPrjIdVO1.
     */
    public RowSet getLovPrjIdVO1() {
        return (RowSet) getAttributeInternal(LOVPRJIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIrIdVO1.
     */
    public RowSet getLovIrIdVO1() {
        return (RowSet) getAttributeInternal(LOVIRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTypeFlgVO1.
     */
    public RowSet getLovTypeFlgVO1() {
        return (RowSet) getAttributeInternal(LOVTYPEFLGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRcdStatVO1.
     */
    public RowSet getLovRcdStatVO1() {
        return (RowSet) getAttributeInternal(LOVRCDSTATVO1);
    }
}

