package pmssiterecordapp.model.views;

import java.sql.SQLException;

import java.util.Calendar;
import java.util.Date;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;

import pmssiterecordapp.model.entities.PmsSiteRcdBillDtlEOImpl;
import pmssiterecordapp.model.services.PMSSiteRecordAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 26 20:23:18 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PmsSiteRcdBillDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_PMSSITERCDBILLDTLEO = 0;
    private Number zero = new Number(0);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        PrjId,
        SrDestNo,
        SrNo,
        TypeFlg,
        RefCoaId,
        InvNo,
        InvDt,
        DueDt,
        AmtSp,
        AmtBs,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransRefCoaNm,
        TransCurrRate,
        LovCoaIdBillVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int SRDESTNO = AttributesEnum.SrDestNo.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int TYPEFLG = AttributesEnum.TypeFlg.index();
    public static final int REFCOAID = AttributesEnum.RefCoaId.index();
    public static final int INVNO = AttributesEnum.InvNo.index();
    public static final int INVDT = AttributesEnum.InvDt.index();
    public static final int DUEDT = AttributesEnum.DueDt.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSREFCOANM = AttributesEnum.TransRefCoaNm.index();
    public static final int TRANSCURRRATE = AttributesEnum.TransCurrRate.index();
    public static final int LOVCOAIDBILLVO1 = AttributesEnum.LovCoaIdBillVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PmsSiteRcdBillDtlVORowImpl() {
    }

    /**
     * Gets PmsSiteRcdBillDtlEO entity object.
     * @return the PmsSiteRcdBillDtlEO
     */
    public PmsSiteRcdBillDtlEOImpl getPmsSiteRcdBillDtlEO() {
        return (PmsSiteRcdBillDtlEOImpl) getEntity(ENTITY_PMSSITERCDBILLDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for SR_DEST_NO using the alias name SrDestNo.
     * @return the SR_DEST_NO
     */
    public Integer getSrDestNo() {
        return (Integer) getAttributeInternal(SRDESTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_DEST_NO using the alias name SrDestNo.
     * @param value value to set the SR_DEST_NO
     */
    public void setSrDestNo(Integer value) {
        setAttributeInternal(SRDESTNO, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for TYPE_FLG using the alias name TypeFlg.
     * @return the TYPE_FLG
     */
    public String getTypeFlg() {
        return (String) getAttributeInternal(TYPEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE_FLG using the alias name TypeFlg.
     * @param value value to set the TYPE_FLG
     */
    public void setTypeFlg(String value) {
        setAttributeInternal(TYPEFLG, value);
    }

    /**
     * Gets the attribute value for REF_COA_ID using the alias name RefCoaId.
     * @return the REF_COA_ID
     */
    public Integer getRefCoaId() {
        return (Integer) getAttributeInternal(REFCOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_COA_ID using the alias name RefCoaId.
     * @param value value to set the REF_COA_ID
     */
    public void setRefCoaId(Integer value) {
        if (value != null && this.getInvDt() != null) {
            Row fr[] = this.getLovCoaIdBillVO1().getFilteredRows("CoaId", value);
            Integer days = 0;
            if (fr.length > 0)
                days = (Integer) fr[0].getAttribute("AvgCrDays");
            oracle.jbo.domain.Date invDate = null;


            try {
                invDate = new oracle.jbo.domain.Date(this.getInvDt().dateValue());
            } catch (SQLException e) {
                System.out.println("Cast Exception=" + e.getMessage());
            }


            Calendar cal = Calendar.getInstance();
            cal.setTime(new java.util.Date(invDate.timestampValue().getTime()));
            cal.add(Calendar.DATE, days);
            cal.clear(Calendar.HOUR);
            cal.clear(Calendar.MINUTE);
            cal.clear(Calendar.SECOND);
            cal.clear(Calendar.MILLISECOND);
            try {
                Date newDate = new Date(cal.getTimeInMillis());
                this.setDueDt(new Timestamp(newDate));
            } catch (Exception e) {
                System.out.println("Exception=" + e.getMessage());
            }

        }
        setAttributeInternal(REFCOAID, value);
    }

    /**
     * Gets the attribute value for INV_NO using the alias name InvNo.
     * @return the INV_NO
     */
    public String getInvNo() {
        return (String) getAttributeInternal(INVNO);
    }

    /**
     * Sets <code>value</code> as attribute value for INV_NO using the alias name InvNo.
     * @param value value to set the INV_NO
     */
    public void setInvNo(String value) {
        setAttributeInternal(INVNO, value);
    }

    /**
     * Gets the attribute value for INV_DT using the alias name InvDt.
     * @return the INV_DT
     */
    public Timestamp getInvDt() {
        return (Timestamp) getAttributeInternal(INVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INV_DT using the alias name InvDt.
     * @param value value to set the INV_DT
     */
    public void setInvDt(Timestamp value) {
        if (value != null && this.getRefCoaId() != null) {
            Row fr[] = this.getLovCoaIdBillVO1().getFilteredRows("CoaId", this.getRefCoaId());
            Integer days = 0;
            if (fr.length > 0)
                days = (Integer) fr[0].getAttribute("AvgCrDays");
            oracle.jbo.domain.Date valueDate = null;


            try {
                valueDate = new oracle.jbo.domain.Date(value.dateValue());
            } catch (SQLException e) {
                System.out.println("Cast Exception=" + e.getMessage());
            }


            Calendar cal = Calendar.getInstance();
            cal.setTime(new java.util.Date(valueDate.timestampValue().getTime()));
            cal.add(Calendar.DATE, days);
            cal.clear(Calendar.HOUR);
            cal.clear(Calendar.MINUTE);
            cal.clear(Calendar.SECOND);
            cal.clear(Calendar.MILLISECOND);
            try {
                Date newDate = new Date(cal.getTimeInMillis());
                this.setDueDt(new Timestamp(newDate));
            } catch (Exception e) {
                System.out.println("Exception=" + e.getMessage());
            }

        }
        setAttributeInternal(INVDT, value);
    }

    /**
     * Gets the attribute value for DUE_DT using the alias name DueDt.
     * @return the DUE_DT
     */
    public Timestamp getDueDt() {
        return (Timestamp) getAttributeInternal(DUEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DUE_DT using the alias name DueDt.
     * @param value value to set the DUE_DT
     */
    public void setDueDt(Timestamp value) {
        setAttributeInternal(DUEDT, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        if (value == null)
            value = zero;
        Number rate = zero;
        if (this.getTransCurrRate() != null)
            rate = this.getTransCurrRate();
        this.setAmtBs(value.multiply(rate));
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRefCoaNm.
     * @return the TransRefCoaNm
     */
    public String getTransRefCoaNm() {
        if (getAttributeInternal(TRANSREFCOANM) != null)
            return (String) getAttributeInternal(TRANSREFCOANM);
        else {
            Row fr[] = this.getLovCoaIdBillVO1().getFilteredRows("CoaId", this.getRefCoaId());
            if (fr.length > 0) {
                return (String) fr[0].getAttribute("CoaNm");
            }
        }
        return (String) getAttributeInternal(TRANSREFCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRefCoaNm.
     * @param value value to set the  TransRefCoaNm
     */
    public void setTransRefCoaNm(String value) {
        setAttributeInternal(TRANSREFCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrRate.
     * @return the TransCurrRate
     */
    public Number getTransCurrRate() {
        if (getAttributeInternal(TRANSCURRRATE) != null)
            return (Number) getAttributeInternal(TRANSCURRRATE);
        else {
            PMSSiteRecordAMImpl am = (PMSSiteRecordAMImpl) this.getApplicationModule();
            if (am.getPmsSiteRcd().getCurrentRow() != null)
                return (Number) am.getPmsSiteRcd().getCurrentRow().getAttribute("CurrConvRate");
        }
        return (Number) getAttributeInternal(TRANSCURRRATE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaIdBillVO1.
     */
    public RowSet getLovCoaIdBillVO1() {
        return (RowSet) getAttributeInternal(LOVCOAIDBILLVO1);
    }
}

