package svctatApp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svctatApp.model.entities.svcEscHrcyEOImpl;
import svctatApp.model.services.svcTatAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 11 13:00:04 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class svcEscHcyVORowImpl extends ViewRowImpl {
    public static final int ENTITY_SVCESCHRCYEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        CrtDt,
        EscLvl,
        HoOrgId,
        ModDt,
        OrgId,
        SlocId,
        UsrId,
        UsrIdCrt,
        UsrIdMod,
        TranUsrNme,
        LOVUsrNameVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int ESCLVL = AttributesEnum.EscLvl.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int TRANUSRNME = AttributesEnum.TranUsrNme.index();
    public static final int LOVUSRNAMEVO1 = AttributesEnum.LOVUsrNameVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public svcEscHcyVORowImpl() {
    }

    /**
     * Gets svcEscHrcyEO entity object.
     * @return the svcEscHrcyEO
     */
    public svcEscHrcyEOImpl getsvcEscHrcyEO() {
        return (svcEscHrcyEOImpl) getEntity(ENTITY_SVCESCHRCYEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for ESC_LVL using the alias name EscLvl.
     * @return the ESC_LVL
     */
    public Integer getEscLvl() {
        return (Integer) getAttributeInternal(ESCLVL);
    }

    /**
     * Sets <code>value</code> as attribute value for ESC_LVL using the alias name EscLvl.
     * @param value value to set the ESC_LVL
     */
    public void setEscLvl(Integer value) {
        setAttributeInternal(ESCLVL, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID using the alias name UsrId.
     * @return the USR_ID
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID using the alias name UsrId.
     * @param value value to set the USR_ID
     */
    public void setUsrId(Integer value) {
        setAttributeInternal(USRID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranUsrNme.
     * @return the TranUsrNme
     */
    String usernme = null;

    public String getTranUsrNme() {
        if (getUsrId() != null) {

            ViewObjectImpl impl = getAM().getLOVUsrNameVO1();

            Row[] filteredRows = impl.getFilteredRows("UsrId", getUsrId());
           // System.out.println("--usrId--" + getUsrId() + " filtererow count " + filteredRows.length);
            if (filteredRows.length > 0) {
                if (filteredRows[0].getAttribute("UsrName") != null) {
                    usernme = filteredRows[0].getAttribute("UsrName").toString();
                   // System.out.println("usernme name is : " + usernme);
                }
            }
            return usernme;
        }

        return (String) getAttributeInternal(TRANUSRNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranUsrNme.
     * @param value value to set the  TranUsrNme
     */
    public void setTranUsrNme(String value) {
        setAttributeInternal(TRANUSRNME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUsrNameVO1.
     */
    public RowSet getLOVUsrNameVO1() {
        return (RowSet) getAttributeInternal(LOVUSRNAMEVO1);
    }

    /**
     * Function to get current Application Module Instance
     * **/
    public svcTatAppModuleImpl getAM() {
        return (svcTatAppModuleImpl) this.getApplicationModule();
    }

}

