package svctatApp.model.views;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 01 14:26:00 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchLocationVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Cldid,
        Slocid,
        Hoorgid,
        Orgid,
        LocationId,
        LocationNme,
        LabelNme,
        LabelId,
        LOVSearchLocation,
        LOVSearchLabelVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.Cldid.index();
    public static final int SLOCID = AttributesEnum.Slocid.index();
    public static final int HOORGID = AttributesEnum.Hoorgid.index();
    public static final int ORGID = AttributesEnum.Orgid.index();
    public static final int LOCATIONID = AttributesEnum.LocationId.index();
    public static final int LOCATIONNME = AttributesEnum.LocationNme.index();
    public static final int LABELNME = AttributesEnum.LabelNme.index();
    public static final int LABELID = AttributesEnum.LabelId.index();
    public static final int LOVSEARCHLOCATION = AttributesEnum.LOVSearchLocation.index();
    public static final int LOVSEARCHLABELVO = AttributesEnum.LOVSearchLabelVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchLocationVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Cldid.
     * @return the Cldid
     */
    public String getCldid() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute Slocid.
     * @return the Slocid
     */
    public String getSlocid() {
        return (String) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute Hoorgid.
     * @return the Hoorgid
     */
    public String getHoorgid() {
        System.out.println("-------srch location----" + (String) getAttributeInternal(HOORGID));
        return (String) getAttributeInternal(HOORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute Orgid.
     * @return the Orgid
     */
    public String getOrgid() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute LocationId.
     * @return the LocationId
     */
    public String getLocationId() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocationId.
     * @param value value to set the  LocationId
     */
    public void setLocationId(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LocationNme.
     * @return the LocationNme
     */
    public String getLocationNme() {
        return (String) getAttributeInternal(LOCATIONNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocationNme.
     * @param value value to set the  LocationNme
     */
    public void setLocationNme(String value) {
        setAttributeInternal(LOCATIONNME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LabelNme.
     * @return the LabelNme
     */
    public String getLabelNme() {
        return (String) getAttributeInternal(LABELNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LabelNme.
     * @param value value to set the  LabelNme
     */
    public void setLabelNme(String value) {
        setAttributeInternal(LABELNME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LabelId.
     * @return the LabelId
     */
    public String getLabelId() {
        return (String) getAttributeInternal(LABELID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LabelId.
     * @param value value to set the  LabelId
     */
    public void setLabelId(String value) {
        setAttributeInternal(LABELID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSearchLocation.
     */
    public RowSet getLOVSearchLocation() {
        return (RowSet) getAttributeInternal(LOVSEARCHLOCATION);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSearchLabelVO.
     */
    public RowSet getLOVSearchLabelVO() {
        return (RowSet) getAttributeInternal(LOVSEARCHLABELVO);
    }
}

