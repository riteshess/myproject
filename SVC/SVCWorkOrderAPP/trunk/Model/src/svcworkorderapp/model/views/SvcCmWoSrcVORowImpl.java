package svcworkorderapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcworkorderapp.model.entities.SvcCmWoSrcEOImpl;
import svcworkorderapp.model.services.SVCWorkOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 31 11:04:53 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmWoSrcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCCMWOSRCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DfctIdSrc,
        DocId,
        DocIdSrc,
        HoOrgId,
        ItmIdSrc,
        OrgId,
        SlocId,
        TransItmName,
        TransDfctNm,
        TransItmDesc,
        TransSrFlg,
        SvcCmWoItm,
        SvcCmWoAsgn,
        LovItmDescVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DFCTIDSRC = AttributesEnum.DfctIdSrc.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMIDSRC = AttributesEnum.ItmIdSrc.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int TRANSDFCTNM = AttributesEnum.TransDfctNm.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSSRFLG = AttributesEnum.TransSrFlg.index();
    public static final int SVCCMWOITM = AttributesEnum.SvcCmWoItm.index();
    public static final int SVCCMWOASGN = AttributesEnum.SvcCmWoAsgn.index();
    public static final int LOVITMDESCVO1 = AttributesEnum.LovItmDescVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmWoSrcVORowImpl() {
    }

    /**
     * Gets SvcCmWoSrcEO entity object.
     * @return the SvcCmWoSrcEO
     */
    public SvcCmWoSrcEOImpl getSvcCmWoSrcEO() {
        return (SvcCmWoSrcEOImpl) getEntity(ENTITY_SVCCMWOSRCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DFCT_ID_SRC using the alias name DfctIdSrc.
     * @return the DFCT_ID_SRC
     */
    public Integer getDfctIdSrc() {
        return (Integer) getAttributeInternal(DFCTIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DFCT_ID_SRC using the alias name DfctIdSrc.
     * @param value value to set the DFCT_ID_SRC
     */
    public void setDfctIdSrc(Integer value) {
        setAttributeInternal(DFCTIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_ID_SRC using the alias name ItmIdSrc.
     * @return the ITM_ID_SRC
     */
    public String getItmIdSrc() {
        return (String) getAttributeInternal(ITMIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID_SRC using the alias name ItmIdSrc.
     * @param value value to set the ITM_ID_SRC
     */
    public void setItmIdSrc(String value) {
        setAttributeInternal(ITMIDSRC, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
//        SVCWorkOrderAMImpl am =
//                (SVCWorkOrderAMImpl)this.getApplicationModule();
//        if(getItmIdSrc()!=null) {
//            ViewObjectImpl itm=am.getLovItmDesc1();
//            itm.setNamedWhereClauseParam("BindCldIdVar", getCldId());
//            itm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
//            itm.setNamedWhereClauseParam("BindOrgIdVar", getOrgId());
//            itm.setNamedWhereClauseParam("BindSlocIdVar", getSlocId());
//            itm.executeQuery();
//            Row r[]=am.getLovItmDesc1().getFilteredRows("ItmId",getItmIdSrc());
//            if(r.length>0) {
//                String name=r[0].getAttribute("ItmDesc").toString();
//            return name;
//            }
//           
//        }
        return (String) getAttributeInternal(TRANSITMNAME);
    }
        
    

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDfctNm.
     * @return the TransDfctNm
     */
    public String getTransDfctNm() {
      //  System.out.println(" in the getter  src defect nm");
        SVCWorkOrderAMImpl am =
                (SVCWorkOrderAMImpl)this.getApplicationModule();
        if(getDfctIdSrc()!=null) {
            //System.out.println("Defect id:"+getDfctIdSrc());
            Row r[]=am.getLovDfctNm2().getFilteredRows("DfctId",getDfctIdSrc());
            //System.out.println(r.length);
            if(r.length>0) {
                String name=r[0].getAttribute("DfctNm").toString();
               // System.out.println("Defect name:"+name);
            return name;
            }
        }
        return (String) getAttributeInternal(TRANSDFCTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDfctNm.
     * @param value value to set the  TransDfctNm
     */
    public void setTransDfctNm(String value) {
        setAttributeInternal(TRANSDFCTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        SVCWorkOrderAMImpl am =
                        (SVCWorkOrderAMImpl)this.getApplicationModule();
                if(getItmIdSrc()!=null ) {
                    ViewObjectImpl itm=am.getLovItmDesc1();
                    itm.setNamedWhereClauseParam("BindCldIdVar", getCldId());
                    itm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                    itm.setNamedWhereClauseParam("BindOrgIdVar", getOrgId());
                    itm.setNamedWhereClauseParam("BindSlocIdVar", getSlocId());
                    itm.executeQuery();
                    Row r[]=am.getLovItmDesc1().getFilteredRows("ItmId",getItmIdSrc());
                    if(r.length>0) {
                        String name=r[0].getAttribute("ItmDesc").toString();
                    //    System.out.println(" item desc---->> "+name);
                    return name;
                    }
                   
                }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrFlg.
     * @return the TransSrFlg
     */
    public String getTransSrFlg() {
        SVCWorkOrderAMImpl am =
                        (SVCWorkOrderAMImpl)this.getApplicationModule();
                if(getItmIdSrc()!=null) {
                    ViewObjectImpl itm=am.getLovItmDesc1();
                    itm.setNamedWhereClauseParam("BindCldIdVar", getCldId());
                    itm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                    itm.setNamedWhereClauseParam("BindOrgIdVar", getOrgId());
                    itm.setNamedWhereClauseParam("BindSlocIdVar", getSlocId());
                    itm.executeQuery();
                    Row r[]=am.getLovItmDesc1().getFilteredRows("ItmId",getItmIdSrc());
                    if(r.length>0) {
                        String name=r[0].getAttribute("SerializedFlg").toString();
                  //      System.out.println("--serialized flag---"+name);
                    return name;
                    }
                   
                }
        return (String) getAttributeInternal(TRANSSRFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrFlg.
     * @param value value to set the  TransSrFlg
     */
    public void setTransSrFlg(String value) {
        setAttributeInternal(TRANSSRFLG, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmWoItm.
     */
    public RowIterator getSvcCmWoItm() {
        return (RowIterator) getAttributeInternal(SVCCMWOITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmWoAsgn.
     */
    public RowIterator getSvcCmWoAsgn() {
        return (RowIterator) getAttributeInternal(SVCCMWOASGN);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmDescVO1.
     */
    public RowSet getLovItmDescVO1() {
        return (RowSet) getAttributeInternal(LOVITMDESCVO1);
    }
}

