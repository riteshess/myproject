package svcworkorderapp.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 03 12:08:22 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmWoItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ItmId,
        ItmUom,
        ItmQty,
        ItmPrice,
        FocItm,
        DiscType,
        DiscVal,
        DiscAmtSp,
        TaxableAmtSp,
        TaxAmtSp,
        ItmAmtSp,
        DiscAmtBs,
        TaxableAmtBs,
        TaxAmtBs,
        ItmAmtBs,
        SvcItmFlg,
        DocIdSrc,
        ItmIdSrc,
        DfctIdSrc,
        SvcCmWoAsgn,
        SvcCmWo,
        SvcCmWoTrLines,
        SvcCmWoLot;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int FOCITM = AttributesEnum.FocItm.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int TAXABLEAMTSP = AttributesEnum.TaxableAmtSp.index();
    public static final int TAXAMTSP = AttributesEnum.TaxAmtSp.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int SVCITMFLG = AttributesEnum.SvcItmFlg.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int ITMIDSRC = AttributesEnum.ItmIdSrc.index();
    public static final int DFCTIDSRC = AttributesEnum.DfctIdSrc.index();
    public static final int SVCCMWOASGN = AttributesEnum.SvcCmWoAsgn.index();
    public static final int SVCCMWO = AttributesEnum.SvcCmWo.index();
    public static final int SVCCMWOTRLINES = AttributesEnum.SvcCmWoTrLines.index();
    public static final int SVCCMWOLOT = AttributesEnum.SvcCmWoLot.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmWoItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcworkorderapp.model.entities.SvcCmWoItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for FocItm, using the alias name FocItm.
     * @return the value of FocItm
     */
    public String getFocItm() {
        return (String) getAttributeInternal(FOCITM);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocItm.
     * @param value value to set the FocItm
     */
    public void setFocItm(String value) {
        setAttributeInternal(FOCITM, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for DiscAmtSp, using the alias name DiscAmtSp.
     * @return the value of DiscAmtSp
     */
    public Number getDiscAmtSp() {
        return (Number) getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtSp.
     * @param value value to set the DiscAmtSp
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for TaxableAmtSp, using the alias name TaxableAmtSp.
     * @return the value of TaxableAmtSp
     */
    public Number getTaxableAmtSp() {
        return (Number) getAttributeInternal(TAXABLEAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtSp.
     * @param value value to set the TaxableAmtSp
     */
    public void setTaxableAmtSp(Number value) {
        setAttributeInternal(TAXABLEAMTSP, value);
    }

    /**
     * Gets the attribute value for TaxAmtSp, using the alias name TaxAmtSp.
     * @return the value of TaxAmtSp
     */
    public Number getTaxAmtSp() {
        return (Number) getAttributeInternal(TAXAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtSp.
     * @param value value to set the TaxAmtSp
     */
    public void setTaxAmtSp(Number value) {
        setAttributeInternal(TAXAMTSP, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp, using the alias name ItmAmtSp.
     * @return the value of ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp.
     * @param value value to set the ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxableAmtBs, using the alias name TaxableAmtBs.
     * @return the value of TaxableAmtBs
     */
    public Number getTaxableAmtBs() {
        return (Number) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtBs.
     * @param value value to set the TaxableAmtBs
     */
    public void setTaxableAmtBs(Number value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxAmtBs, using the alias name TaxAmtBs.
     * @return the value of TaxAmtBs
     */
    public Number getTaxAmtBs() {
        return (Number) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtBs.
     * @param value value to set the TaxAmtBs
     */
    public void setTaxAmtBs(Number value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for SvcItmFlg, using the alias name SvcItmFlg.
     * @return the value of SvcItmFlg
     */
    public String getSvcItmFlg() {
        return (String) getAttributeInternal(SVCITMFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SvcItmFlg.
     * @param value value to set the SvcItmFlg
     */
    public void setSvcItmFlg(String value) {
        setAttributeInternal(SVCITMFLG, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for ItmIdSrc, using the alias name ItmIdSrc.
     * @return the value of ItmIdSrc
     */
    public String getItmIdSrc() {
        return (String) getAttributeInternal(ITMIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmIdSrc.
     * @param value value to set the ItmIdSrc
     */
    public void setItmIdSrc(String value) {
        setAttributeInternal(ITMIDSRC, value);
    }

    /**
     * Gets the attribute value for DfctIdSrc, using the alias name DfctIdSrc.
     * @return the value of DfctIdSrc
     */
    public String getDfctIdSrc() {
        return (String) getAttributeInternal(DFCTIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DfctIdSrc.
     * @param value value to set the DfctIdSrc
     */
    public void setDfctIdSrc(String value) {
        setAttributeInternal(DFCTIDSRC, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmWoAsgn() {
        return (RowIterator) getAttributeInternal(SVCCMWOASGN);
    }

    /**
     * @return the associated entity SvcCmWoEOImpl.
     */
    public SvcCmWoEOImpl getSvcCmWo() {
        return (SvcCmWoEOImpl) getAttributeInternal(SVCCMWO);
    }

    /**
     * Sets <code>value</code> as the associated entity SvcCmWoEOImpl.
     */
    public void setSvcCmWo(SvcCmWoEOImpl value) {
        setAttributeInternal(SVCCMWO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmWoTrLines() {
        return (RowIterator) getAttributeInternal(SVCCMWOTRLINES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmWoLot() {
        return (RowIterator) getAttributeInternal(SVCCMWOLOT);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param docIdSrc key constituent
     * @param itmIdSrc key constituent
     * @param dfctIdSrc key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String itmId,
                                       String docIdSrc, String itmIdSrc, String dfctIdSrc) {
        return new Key(new Object[] { cldId, slocId, orgId, docId, itmId, docIdSrc, itmIdSrc, dfctIdSrc });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

