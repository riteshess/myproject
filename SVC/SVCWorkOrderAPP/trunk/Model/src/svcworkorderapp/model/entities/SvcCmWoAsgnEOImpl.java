package svcworkorderapp.model.entities;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 03 12:07:50 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmWoAsgnEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        RqmtAreaId,
        EmpCode,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        DocIdSrc,
        ItmIdSrc,
        DfctIdSrc,
        SvcCmWoItm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int ITMIDSRC = AttributesEnum.ItmIdSrc.index();
    public static final int DFCTIDSRC = AttributesEnum.DfctIdSrc.index();
    public static final int SVCCMWOITM = AttributesEnum.SvcCmWoItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmWoAsgnEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcworkorderapp.model.entities.SvcCmWoAsgnEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for RqmtAreaId, using the alias name RqmtAreaId.
     * @return the value of RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaId.
     * @param value value to set the RqmtAreaId
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for EmpCode, using the alias name EmpCode.
     * @return the value of EmpCode
     */
    public Integer getEmpCode() {
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpCode.
     * @param value value to set the EmpCode
     */
    public void setEmpCode(Integer value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for UsrIdCrt, using the alias name UsrIdCrt.
     * @return the value of UsrIdCrt
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCrt.
     * @param value value to set the UsrIdCrt
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CrtDt, using the alias name CrtDt.
     * @return the value of CrtDt
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtDt.
     * @param value value to set the CrtDt
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for ModDt, using the alias name ModDt.
     * @return the value of ModDt
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModDt.
     * @param value value to set the ModDt
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for ItmIdSrc, using the alias name ItmIdSrc.
     * @return the value of ItmIdSrc
     */
    public String getItmIdSrc() {
        return (String) getAttributeInternal(ITMIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmIdSrc.
     * @param value value to set the ItmIdSrc
     */
    public void setItmIdSrc(String value) {
        setAttributeInternal(ITMIDSRC, value);
    }

    /**
     * Gets the attribute value for DfctIdSrc, using the alias name DfctIdSrc.
     * @return the value of DfctIdSrc
     */
    public Integer getDfctIdSrc() {
        return (Integer) getAttributeInternal(DFCTIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DfctIdSrc.
     * @param value value to set the DfctIdSrc
     */
    public void setDfctIdSrc(Integer value) {
        setAttributeInternal(DFCTIDSRC, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public SvcCmWoItmEOImpl getSvcCmWoItm() {
        return (SvcCmWoItmEOImpl) getAttributeInternal(SVCCMWOITM);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSvcCmWoItm(SvcCmWoItmEOImpl value) {
        setAttributeInternal(SVCCMWOITM, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param rqmtAreaId key constituent
     * @param empCode key constituent
     * @param docIdSrc key constituent
     * @param itmIdSrc key constituent
     * @param dfctIdSrc key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, Integer rqmtAreaId,
                                       Integer empCode, String docIdSrc, String itmIdSrc, Integer dfctIdSrc) {
        return new Key(new Object[] {
                       cldId, slocId, orgId, docId, rqmtAreaId, empCode, docIdSrc, itmIdSrc, dfctIdSrc });
    }

    public String resolvEl(String data) {
             FacesContext fc = FacesContext.getCurrentInstance();
             Application app = fc.getApplication();
             ExpressionFactory elFactory = app.getExpressionFactory();
             ELContext elContext = fc.getELContext();
             ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
             String msg = valueExp.getValue(elContext).toString();
             return msg;
         }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
//        Integer usrId=Integer.parseInt( resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
//               String CldId= resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
//               String OrgId= resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
//               String HoOrgId= resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
//               Integer SlocId=Integer.parseInt( resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
//               System.out.println("User Id:"+usrId+" "+CldId+" "+OrgId+" "+HoOrgId+" "+SlocId); 
//              // /** for work order don num is  230004**/
//               
//               
//               
//               
//               ///setDocDt(new Timestamp(System.currentTimeMillis()));
//               setModDt(new Timestamp(System.currentTimeMillis()));
//               setUsrIdMod(usrId);
//               setOrgId(OrgId);
//               setCldId(CldId);
//               setSlocId(SlocId);
//               setHoOrgId(HoOrgId);
//               setUsrIdCrt(usrId);
//               setCrtDt(new Timestamp(System.currentTimeMillis()));
              super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }
                

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

