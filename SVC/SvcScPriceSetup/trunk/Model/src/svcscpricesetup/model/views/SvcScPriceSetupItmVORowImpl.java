package svcscpricesetup.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcscpricesetup.model.entities.SvcScPriceSetupItmEOImpl;
import svcscpricesetup.model.services.SvcScPriceAMImpl;
import svcscpricesetup.model.views.common.SvcScPriceSetupItmVORow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 27 03:20:14 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScPriceSetupItmVORowImpl extends ViewRowImpl implements SvcScPriceSetupItmVORow {


    public static final int ENTITY_SVCSCPRICESETUPITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        AddsLocId,
        GrpId,
        ItmId,
        EoId,
        PriceType,
        PriceVal,
        TransItmDesc,
        TransLocLbl,
        TransEoName,
        TransGrpDesc,
        TransOrgId,
        TransOrgDesc,
        LovItmId1,
        OrgVO1,
        LovPriceTypeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ADDSLOCID = AttributesEnum.AddsLocId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int PRICETYPE = AttributesEnum.PriceType.index();
    public static final int PRICEVAL = AttributesEnum.PriceVal.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSLOCLBL = AttributesEnum.TransLocLbl.index();
    public static final int TRANSEONAME = AttributesEnum.TransEoName.index();
    public static final int TRANSGRPDESC = AttributesEnum.TransGrpDesc.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSORGDESC = AttributesEnum.TransOrgDesc.index();
    public static final int LOVITMID1 = AttributesEnum.LovItmId1.index();
    public static final int ORGVO1 = AttributesEnum.OrgVO1.index();
    public static final int LOVPRICETYPEVO1 = AttributesEnum.LovPriceTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScPriceSetupItmVORowImpl() {
    }

    /**
     * Gets SvcScPriceSetupItmEO entity object.
     * @return the SvcScPriceSetupItmEO
     */
    public SvcScPriceSetupItmEOImpl getSvcScPriceSetupItmEO() {
        return (SvcScPriceSetupItmEOImpl) getEntity(ENTITY_SVCSCPRICESETUPITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ADDS_LOC_ID using the alias name AddsLocId.
     * @return the ADDS_LOC_ID
     */
    public String getAddsLocId() {
        return (String) getAttributeInternal(ADDSLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDS_LOC_ID using the alias name AddsLocId.
     * @param value value to set the ADDS_LOC_ID
     */
    public void setAddsLocId(String value) {
        setAttributeInternal(ADDSLOCID, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for PRICE_TYPE using the alias name PriceType.
     * @return the PRICE_TYPE
     */
    public String getPriceType() {
        return (String) getAttributeInternal(PRICETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRICE_TYPE using the alias name PriceType.
     * @param value value to set the PRICE_TYPE
     */
    public void setPriceType(String value) {
        setAttributeInternal(PRICETYPE, value);
    }

    /**
     * Gets the attribute value for PRICE_VAL using the alias name PriceVal.
     * @return the PRICE_VAL
     */
    public Number getPriceVal() {
        return (Number) getAttributeInternal(PRICEVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for PRICE_VAL using the alias name PriceVal.
     * @param value value to set the PRICE_VAL
     */
    public void setPriceVal(Number value) {
        setAttributeInternal(PRICEVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        if (getAttributeInternal(TRANSITMDESC)!= null) {
            return (String) getAttributeInternal(TRANSITMDESC);
        } else {
            if (getItmId() != null) {
                SvcScPriceAMImpl am = (SvcScPriceAMImpl) this.getApplicationModule();
                ViewObjectImpl itmvo=am.getLovItmId();
                itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
                itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
                itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                itmvo.setNamedWhereClauseParam("bindItmId", getItmId());
                itmvo.executeQuery();
                Row[] rr = itmvo.getFilteredRows("ItmId", getItmId());
              //  System.out.println("----------------length "+rr.length+"----"+getItmId());
                if (rr.length > 0) {
                //    System.out.println("----------------"+rr[0].getAttribute("ItmDesc").toString());
                    return rr[0].getAttribute("ItmDesc").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransLocLbl.
     * @return the TransLocLbl
     */
    public String getTransLocLbl() {
        if (getAttributeInternal(TRANSLOCLBL) != null) {
            return (String) getAttributeInternal(TRANSLOCLBL);
        } else {
            if (getAddsLocId() != null) {
                SvcScPriceAMImpl am = (SvcScPriceAMImpl) this.getApplicationModule();
                ViewObjectImpl locvo=am.getLovAppLblValue();
                locvo.setNamedWhereClauseParam("bindCldId", getCldId());
                locvo.setNamedWhereClauseParam("bindLblId", null);
                locvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                locvo.setNamedWhereClauseParam("bindLocId", getAddsLocId());
                //bindLocId
                locvo.executeQuery();

                Row[] rr = locvo.getFilteredRows("LocId", getAddsLocId());
                if (rr.length > 0) {
                    return rr[0].getAttribute("AddsLoc").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSLOCLBL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocLbl.
     * @param value value to set the  TransLocLbl
     */
    public void setTransLocLbl(String value) {
        setAttributeInternal(TRANSLOCLBL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoName.
     * @return the TransEoName
     */
    public String getTransEoName() {
        if (getAttributeInternal(TRANSEONAME) != null) {
            return (String)getAttributeInternal(TRANSEONAME);
        } else {
            if (getEoId() != null) {
                SvcScPriceAMImpl am = (SvcScPriceAMImpl) this.getApplicationModule();
                ViewObjectImpl cstmrvo = am.getLovCustomer();
                cstmrvo.setNamedWhereClauseParam("bindCldId", getCldId());
                cstmrvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
                cstmrvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                cstmrvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                cstmrvo.setNamedWhereClauseParam("bindEoId", getEoId());
                //bindEoId
                cstmrvo.executeQuery();
                
                Row[] rr = am.getLovCustomer().getFilteredRows("EoId", getEoId());
                if (rr.length > 0) {
                    return rr[0].getAttribute("EoNm").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSEONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoName.
     * @param value value to set the  TransEoName
     */
    public void setTransEoName(String value) {
        setAttributeInternal(TRANSEONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpDesc.
     * @return the TransGrpDesc
     */
    public String getTransGrpDesc() {
        if (getAttributeInternal(TRANSGRPDESC) != null) {
            return (String) getAttributeInternal(TRANSGRPDESC);
        } else {
            if (getGrpId() != null) {
                SvcScPriceAMImpl am = (SvcScPriceAMImpl) this.getApplicationModule();
//bindGrpId
                ViewObjectImpl grp = am.getLovItmGrp();
                grp.setNamedWhereClauseParam("bindGrpId", getGrpId());
                grp.setNamedWhereClauseParam("bindCldId", getCldId());
                grp.setNamedWhereClauseParam("bindSlocId", getSlocId());
                grp.setNamedWhereClauseParam("bindOrgId", getOrgId());
                grp.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
                grp.executeQuery();
                Row[] rr = grp.getFilteredRows("GrpId", getGrpId());
                if (rr.length > 0) {
                    return rr[0].getAttribute("GrpNm").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSGRPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpDesc.
     * @param value value to set the  TransGrpDesc
     */
    public void setTransGrpDesc(String value) {
        setAttributeInternal(TRANSGRPDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgDesc.
     * @return the TransOrgDesc
     */
    public String getTransOrgDesc() {
        return (String) getAttributeInternal(TRANSORGDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgDesc.
     * @param value value to set the  TransOrgDesc
     */
    public void setTransOrgDesc(String value) {
        setAttributeInternal(TRANSORGDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmId1.
     */
    public RowSet getLovItmId1() {
        return (RowSet) getAttributeInternal(LOVITMID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgVO1.
     */
    public RowSet getOrgVO1() {
        return (RowSet) getAttributeInternal(ORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPriceTypeVO1.
     */
    public RowSet getLovPriceTypeVO1() {
        return (RowSet) getAttributeInternal(LOVPRICETYPEVO1);
    }
}

