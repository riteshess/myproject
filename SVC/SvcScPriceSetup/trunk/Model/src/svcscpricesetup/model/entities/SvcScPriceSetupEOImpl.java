package svcscpricesetup.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
//import java.sql.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 26 10:11:24 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScPriceSetupEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        SetupNo,
        SetupDt,
        AddsLblId,
        AddsLocId,
        GrpId,
        ApplyToSubGrp,
        EoType,
        EoId,
        EoCat,
        PriceType,
        PriceVal,
        DocStat,
        AuthStat,
        AuthDt,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        LocFlg,
        EoFlg,
        GrpFlg,
        ApplyToEoCat,
        ItmId,
        SvcScPriceSetupItm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SETUPNO = AttributesEnum.SetupNo.index();
    public static final int SETUPDT = AttributesEnum.SetupDt.index();
    public static final int ADDSLBLID = AttributesEnum.AddsLblId.index();
    public static final int ADDSLOCID = AttributesEnum.AddsLocId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int APPLYTOSUBGRP = AttributesEnum.ApplyToSubGrp.index();
    public static final int EOTYPE = AttributesEnum.EoType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EOCAT = AttributesEnum.EoCat.index();
    public static final int PRICETYPE = AttributesEnum.PriceType.index();
    public static final int PRICEVAL = AttributesEnum.PriceVal.index();
    public static final int DOCSTAT = AttributesEnum.DocStat.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int AUTHDT = AttributesEnum.AuthDt.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int LOCFLG = AttributesEnum.LocFlg.index();
    public static final int EOFLG = AttributesEnum.EoFlg.index();
    public static final int GRPFLG = AttributesEnum.GrpFlg.index();
    public static final int APPLYTOEOCAT = AttributesEnum.ApplyToEoCat.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int SVCSCPRICESETUPITM = AttributesEnum.SvcScPriceSetupItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScPriceSetupEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcscpricesetup.model.entities.SvcScPriceSetupEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for SetupNo, using the alias name SetupNo.
     * @return the value of SetupNo
     */
    public String getSetupNo() {
        return (String) getAttributeInternal(SETUPNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SetupNo.
     * @param value value to set the SetupNo
     */
    public void setSetupNo(String value) {
        setAttributeInternal(SETUPNO, value);
    }

    /**
     * Gets the attribute value for SetupDt, using the alias name SetupDt.
     * @return the value of SetupDt
     */
    public Timestamp getSetupDt() {
        return (Timestamp) getAttributeInternal(SETUPDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SetupDt.
     * @param value value to set the SetupDt
     */
    public void setSetupDt(Timestamp value) {
        setAttributeInternal(SETUPDT, value);
    }

    /**
     * Gets the attribute value for AddsLblId, using the alias name AddsLblId.
     * @return the value of AddsLblId
     */
    public String getAddsLblId() {
        return (String) getAttributeInternal(ADDSLBLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsLblId.
     * @param value value to set the AddsLblId
     */
    public void setAddsLblId(String value) {
        setAttributeInternal(ADDSLBLID, value);
    }

    /**
     * Gets the attribute value for AddsLocId, using the alias name AddsLocId.
     * @return the value of AddsLocId
     */
    public String getAddsLocId() {
        return (String) getAttributeInternal(ADDSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsLocId.
     * @param value value to set the AddsLocId
     */
    public void setAddsLocId(String value) {
        setAttributeInternal(ADDSLOCID, value);
    }

    /**
     * Gets the attribute value for GrpId, using the alias name GrpId.
     * @return the value of GrpId
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrpId.
     * @param value value to set the GrpId
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for ApplyToSubGrp, using the alias name ApplyToSubGrp.
     * @return the value of ApplyToSubGrp
     */
    public String getApplyToSubGrp() {
        return (String) getAttributeInternal(APPLYTOSUBGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplyToSubGrp.
     * @param value value to set the ApplyToSubGrp
     */
    public void setApplyToSubGrp(String value) {
        setAttributeInternal(APPLYTOSUBGRP, value);
    }

    /**
     * Gets the attribute value for EoType, using the alias name EoType.
     * @return the value of EoType
     */
    public Integer getEoType() {
        return (Integer) getAttributeInternal(EOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoType.
     * @param value value to set the EoType
     */
    public void setEoType(Integer value) {
        setAttributeInternal(EOTYPE, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for EoCat, using the alias name EoCat.
     * @return the value of EoCat
     */
    public Integer getEoCat() {
        return (Integer) getAttributeInternal(EOCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoCat.
     * @param value value to set the EoCat
     */
    public void setEoCat(Integer value) {
        setAttributeInternal(EOCAT, value);
    }

    /**
     * Gets the attribute value for PriceType, using the alias name PriceType.
     * @return the value of PriceType
     */
    public String getPriceType() {
        return (String) getAttributeInternal(PRICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceType.
     * @param value value to set the PriceType
     */
    public void setPriceType(String value) {
        setAttributeInternal(PRICETYPE, value);
    }

    /**
     * Gets the attribute value for PriceVal, using the alias name PriceVal.
     * @return the value of PriceVal
     */
    public Number getPriceVal() {
        return (Number) getAttributeInternal(PRICEVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for PriceVal.
     * @param value value to set the PriceVal
     */
    public void setPriceVal(Number value) {
        setAttributeInternal(PRICEVAL, value);
    }

    /**
     * Gets the attribute value for DocStat, using the alias name DocStat.
     * @return the value of DocStat
     */
    public Integer getDocStat() {
        return (Integer) getAttributeInternal(DOCSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocStat.
     * @param value value to set the DocStat
     */
    public void setDocStat(Integer value) {
        setAttributeInternal(DOCSTAT, value);
    }

    /**
     * Gets the attribute value for AuthStat, using the alias name AuthStat.
     * @return the value of AuthStat
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthStat.
     * @param value value to set the AuthStat
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for AuthDt, using the alias name AuthDt.
     * @return the value of AuthDt
     */
    public Timestamp getAuthDt() {
        return (Timestamp) getAttributeInternal(AUTHDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthDt.
     * @param value value to set the AuthDt
     */
    public void setAuthDt(Timestamp value) {
        setAttributeInternal(AUTHDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCrt, using the alias name UsrIdCrt.
     * @return the value of UsrIdCrt
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCrt.
     * @param value value to set the UsrIdCrt
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CrtDt, using the alias name CrtDt.
     * @return the value of CrtDt
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtDt.
     * @param value value to set the CrtDt
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for ModDt, using the alias name ModDt.
     * @return the value of ModDt
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModDt.
     * @param value value to set the ModDt
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for LocFlg, using the alias name LocFlg.
     * @return the value of LocFlg
     */
    public String getLocFlg() {
        return (String) getAttributeInternal(LOCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocFlg.
     * @param value value to set the LocFlg
     */
    public void setLocFlg(String value) {
        setAttributeInternal(LOCFLG, value);
    }

    /**
     * Gets the attribute value for EoFlg, using the alias name EoFlg.
     * @return the value of EoFlg
     */
    public String getEoFlg() {
        return (String) getAttributeInternal(EOFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoFlg.
     * @param value value to set the EoFlg
     */
    public void setEoFlg(String value) {
        setAttributeInternal(EOFLG, value);
    }

    /**
     * Gets the attribute value for GrpFlg, using the alias name GrpFlg.
     * @return the value of GrpFlg
     */
    public String getGrpFlg() {
        return (String) getAttributeInternal(GRPFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrpFlg.
     * @param value value to set the GrpFlg
     */
    public void setGrpFlg(String value) {
        setAttributeInternal(GRPFLG, value);
    }

    /**
     * Gets the attribute value for ApplyToEoCat, using the alias name ApplyToEoCat.
     * @return the value of ApplyToEoCat
     */
    public String getApplyToEoCat() {
        return (String) getAttributeInternal(APPLYTOEOCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplyToEoCat.
     * @param value value to set the ApplyToEoCat
     */
    public void setApplyToEoCat(String value) {
        setAttributeInternal(APPLYTOEOCAT, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcScPriceSetupItm() {
        return (RowIterator) getAttributeInternal(SVCSCPRICESETUPITM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
    }

    protected void create(AttributeList attributeList) {
        String usrId = resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString();
        String orgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String hoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        setOrgId(orgId);
        setSlocId(slocId);
        setCldId(cldId);
        setHoOrgId(hoOrgId);
        String docId = (String) (callStoredFunction(Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] {
                                                    cldId, slocId, orgId, usrId, 23011, new Integer(0)
        }));
        setDocId(docId);
        setAuthStat("N");
        setDocDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setSetupDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setCrtDt((new oracle.jbo.domain.Timestamp(System.currentTimeMillis())));
        // setDocTypeSrc(769);
        setUsrIdCrt(Integer.parseInt(usrId));

        //setUsrId; oracle.jbo.domain.Timestamp(System.currentTimeMillis()));

        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

