package svcservicereqregistration.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 20 16:31:25 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmAttchEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        FlNm,
        FlExtn,
        FlPath,
        AttchFl,
        DispFlNm,
        Remarks,
        SvcCm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FLNM = AttributesEnum.FlNm.index();
    public static final int FLEXTN = AttributesEnum.FlExtn.index();
    public static final int FLPATH = AttributesEnum.FlPath.index();
    public static final int ATTCHFL = AttributesEnum.AttchFl.index();
    public static final int DISPFLNM = AttributesEnum.DispFlNm.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SVCCM = AttributesEnum.SvcCm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmAttchEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FlNm, using the alias name FlNm.
     * @return the value of FlNm
     */
    public String getFlNm() {
        return (String) getAttributeInternal(FLNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlNm.
     * @param value value to set the FlNm
     */
    public void setFlNm(String value) {
        setAttributeInternal(FLNM, value);
    }

    /**
     * Gets the attribute value for FlExtn, using the alias name FlExtn.
     * @return the value of FlExtn
     */
    public String getFlExtn() {
        return (String) getAttributeInternal(FLEXTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlExtn.
     * @param value value to set the FlExtn
     */
    public void setFlExtn(String value) {
        setAttributeInternal(FLEXTN, value);
    }

    /**
     * Gets the attribute value for FlPath, using the alias name FlPath.
     * @return the value of FlPath
     */
    public String getFlPath() {
        return (String) getAttributeInternal(FLPATH);
    }

    /**
     * Sets <code>value</code> as the attribute value for FlPath.
     * @param value value to set the FlPath
     */
    public void setFlPath(String value) {
        setAttributeInternal(FLPATH, value);
    }

    /**
     * Gets the attribute value for AttchFl, using the alias name AttchFl.
     * @return the value of AttchFl
     */
    public BFileDomain getAttchFl() {
        return (BFileDomain) getAttributeInternal(ATTCHFL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttchFl.
     * @param value value to set the AttchFl
     */
    public void setAttchFl(BFileDomain value) {
        setAttributeInternal(ATTCHFL, value);
    }

    /**
     * Gets the attribute value for DispFlNm, using the alias name DispFlNm.
     * @return the value of DispFlNm
     */
    public String getDispFlNm() {
        return (String) getAttributeInternal(DISPFLNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for DispFlNm.
     * @param value value to set the DispFlNm
     */
    public void setDispFlNm(String value) {
        setAttributeInternal(DISPFLNM, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * @return the associated entity SvcCmEOImpl.
     */
    public SvcCmEOImpl getSvcCm() {
        return (SvcCmEOImpl) getAttributeInternal(SVCCM);
    }

    /**
     * Sets <code>value</code> as the associated entity SvcCmEOImpl.
     */
    public void setSvcCm(SvcCmEOImpl value) {
        setAttributeInternal(SVCCM, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param flNm key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String flNm) {
        return new Key(new Object[] { cldId, slocId, orgId, docId, flNm });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcservicereqregistration.model.entities.SvcCmAttchEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

