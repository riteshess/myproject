package svcservicereqregistration.model.entities;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 27 14:08:43 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        CallNo,
        CallDt,
        TktNo,
        TktDt,
        CallThru,
        AutoLogd,
        CallRefType,
        DocIdRef,
        EoId,
        AddsIdBill,
        EoNm,
        EoAddsText,
        CoaId,
        CallStat,
        CallValid,
        CustBdgt,
        RepairType,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        PhyVerDone,
        LocRefId,
        LocAddsId,
        SvcCmDfct,
        SvcCmPhyVer,
        SvcCmAttch,
        SvcCmItm,
        SvcCmAsgn;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int CALLNO = AttributesEnum.CallNo.index();
    public static final int CALLDT = AttributesEnum.CallDt.index();
    public static final int TKTNO = AttributesEnum.TktNo.index();
    public static final int TKTDT = AttributesEnum.TktDt.index();
    public static final int CALLTHRU = AttributesEnum.CallThru.index();
    public static final int AUTOLOGD = AttributesEnum.AutoLogd.index();
    public static final int CALLREFTYPE = AttributesEnum.CallRefType.index();
    public static final int DOCIDREF = AttributesEnum.DocIdRef.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ADDSIDBILL = AttributesEnum.AddsIdBill.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int EOADDSTEXT = AttributesEnum.EoAddsText.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CALLSTAT = AttributesEnum.CallStat.index();
    public static final int CALLVALID = AttributesEnum.CallValid.index();
    public static final int CUSTBDGT = AttributesEnum.CustBdgt.index();
    public static final int REPAIRTYPE = AttributesEnum.RepairType.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int PHYVERDONE = AttributesEnum.PhyVerDone.index();
    public static final int LOCREFID = AttributesEnum.LocRefId.index();
    public static final int LOCADDSID = AttributesEnum.LocAddsId.index();
    public static final int SVCCMDFCT = AttributesEnum.SvcCmDfct.index();
    public static final int SVCCMPHYVER = AttributesEnum.SvcCmPhyVer.index();
    public static final int SVCCMATTCH = AttributesEnum.SvcCmAttch.index();
    public static final int SVCCMITM = AttributesEnum.SvcCmItm.index();
    public static final int SVCCMASGN = AttributesEnum.SvcCmAsgn.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcservicereqregistration.model.entities.SvcCmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for CallNo, using the alias name CallNo.
     * @return the value of CallNo
     */
    public String getCallNo() {
        return (String) getAttributeInternal(CALLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallNo.
     * @param value value to set the CallNo
     */
    public void setCallNo(String value) {
        setAttributeInternal(CALLNO, value);
    }

    /**
     * Gets the attribute value for CallDt, using the alias name CallDt.
     * @return the value of CallDt
     */
    public Timestamp getCallDt() {
        return (Timestamp) getAttributeInternal(CALLDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallDt.
     * @param value value to set the CallDt
     */
    public void setCallDt(Timestamp value) {
        setAttributeInternal(CALLDT, value);
    }

    /**
     * Gets the attribute value for TktNo, using the alias name TktNo.
     * @return the value of TktNo
     */
    public String getTktNo() {
        return (String) getAttributeInternal(TKTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TktNo.
     * @param value value to set the TktNo
     */
    public void setTktNo(String value) {
        setAttributeInternal(TKTNO, value);
    }

    /**
     * Gets the attribute value for TktDt, using the alias name TktDt.
     * @return the value of TktDt
     */
    public Timestamp getTktDt() {
        return (Timestamp) getAttributeInternal(TKTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TktDt.
     * @param value value to set the TktDt
     */
    public void setTktDt(Timestamp value) {
        setAttributeInternal(TKTDT, value);
    }

    /**
     * Gets the attribute value for CallThru, using the alias name CallThru.
     * @return the value of CallThru
     */
    public Integer getCallThru() {
        return (Integer) getAttributeInternal(CALLTHRU);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallThru.
     * @param value value to set the CallThru
     */
    public void setCallThru(Integer value) {
        setAttributeInternal(CALLTHRU, value);
    }

    /**
     * Gets the attribute value for AutoLogd, using the alias name AutoLogd.
     * @return the value of AutoLogd
     */
    public String getAutoLogd() {
        return (String) getAttributeInternal(AUTOLOGD);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoLogd.
     * @param value value to set the AutoLogd
     */
    public void setAutoLogd(String value) {
        setAttributeInternal(AUTOLOGD, value);
    }

    /**
     * Gets the attribute value for CallRefType, using the alias name CallRefType.
     * @return the value of CallRefType
     */
    public Integer getCallRefType() {
        return (Integer) getAttributeInternal(CALLREFTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallRefType.
     * @param value value to set the CallRefType
     */
    public void setCallRefType(Integer value) {
        setAttributeInternal(CALLREFTYPE, value);
    }

    /**
     * Gets the attribute value for DocIdRef, using the alias name DocIdRef.
     * @return the value of DocIdRef
     */
    public String getDocIdRef() {
        return (String) getAttributeInternal(DOCIDREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdRef.
     * @param value value to set the DocIdRef
     */
    public void setDocIdRef(String value) {
        setAttributeInternal(DOCIDREF, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for AddsIdBill, using the alias name AddsIdBill.
     * @return the value of AddsIdBill
     */
    public String getAddsIdBill() {
        return (String) getAttributeInternal(ADDSIDBILL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsIdBill.
     * @param value value to set the AddsIdBill
     */
    public void setAddsIdBill(String value) {
        setAttributeInternal(ADDSIDBILL, value);
    }

    /**
     * Gets the attribute value for EoNm, using the alias name EoNm.
     * @return the value of EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoNm.
     * @param value value to set the EoNm
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for EoAddsText, using the alias name EoAddsText.
     * @return the value of EoAddsText
     */
    public String getEoAddsText() {
        return (String) getAttributeInternal(EOADDSTEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoAddsText.
     * @param value value to set the EoAddsText
     */
    public void setEoAddsText(String value) {
        setAttributeInternal(EOADDSTEXT, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for CallStat, using the alias name CallStat.
     * @return the value of CallStat
     */
    public Integer getCallStat() {
        return (Integer) getAttributeInternal(CALLSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallStat.
     * @param value value to set the CallStat
     */
    public void setCallStat(Integer value) {
        setAttributeInternal(CALLSTAT, value);
    }

    /**
     * Gets the attribute value for CallValid, using the alias name CallValid.
     * @return the value of CallValid
     */
    public String getCallValid() {
        return (String) getAttributeInternal(CALLVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CallValid.
     * @param value value to set the CallValid
     */
    public void setCallValid(String value) {
        setAttributeInternal(CALLVALID, value);
    }

    /**
     * Gets the attribute value for CustBdgt, using the alias name CustBdgt.
     * @return the value of CustBdgt
     */
    public Number getCustBdgt() {
        return (Number) getAttributeInternal(CUSTBDGT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustBdgt.
     * @param value value to set the CustBdgt
     */
    public void setCustBdgt(Number value) {
        setAttributeInternal(CUSTBDGT, value);
    }

    /**
     * Gets the attribute value for RepairType, using the alias name RepairType.
     * @return the value of RepairType
     */
    public Integer getRepairType() {
        return (Integer) getAttributeInternal(REPAIRTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RepairType.
     * @param value value to set the RepairType
     */
    public void setRepairType(Integer value) {
        setAttributeInternal(REPAIRTYPE, value);
    }

    /**
     * Gets the attribute value for UsrIdCrt, using the alias name UsrIdCrt.
     * @return the value of UsrIdCrt
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCrt.
     * @param value value to set the UsrIdCrt
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CrtDt, using the alias name CrtDt.
     * @return the value of CrtDt
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtDt.
     * @param value value to set the CrtDt
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for ModDt, using the alias name ModDt.
     * @return the value of ModDt
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModDt.
     * @param value value to set the ModDt
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for PhyVerDone, using the alias name PhyVerDone.
     * @return the value of PhyVerDone
     */
    public String getPhyVerDone() {
        return (String) getAttributeInternal(PHYVERDONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhyVerDone.
     * @param value value to set the PhyVerDone
     */
    public void setPhyVerDone(String value) {
        setAttributeInternal(PHYVERDONE, value);
    }

    /**
     * Gets the attribute value for LocRefId, using the alias name LocRefId.
     * @return the value of LocRefId
     */
    public String getLocRefId() {
        return (String) getAttributeInternal(LOCREFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocRefId.
     * @param value value to set the LocRefId
     */
    public void setLocRefId(String value) {
        setAttributeInternal(LOCREFID, value);
    }

    /**
     * Gets the attribute value for LocAddsId, using the alias name LocAddsId.
     * @return the value of LocAddsId
     */
    public String getLocAddsId() {
        return (String) getAttributeInternal(LOCADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocAddsId.
     * @param value value to set the LocAddsId
     */
    public void setLocAddsId(String value) {
        setAttributeInternal(LOCADDSID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmDfct() {
        return (RowIterator) getAttributeInternal(SVCCMDFCT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmPhyVer() {
        return (RowIterator) getAttributeInternal(SVCCMPHYVER);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmAttch() {
        return (RowIterator) getAttributeInternal(SVCCMATTCH);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmItm() {
        return (RowIterator) getAttributeInternal(SVCCMITM);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcCmAsgn() {
        return (RowIterator) getAttributeInternal(SVCCMASGN);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation ==DML_UPDATE ){
            Integer p_useId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(p_useId);
            setModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

