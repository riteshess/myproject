package svcservicereqregistration.model.views;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicereqregistration.model.entities.SvcCmItmDfctEOImpl;
import svcservicereqregistration.model.services.ServiceRequstRegistAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 18 14:43:44 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmItmDfctVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCCMITMDFCTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ItmId,
        DfctId,
        Remarks,
        EmpCode,
        LogDt,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        TransDefectNm,
        TransEmpNm,
        TransDefectNmDisp;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int DFCTID = AttributesEnum.DfctId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int LOGDT = AttributesEnum.LogDt.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int TRANSDEFECTNM = AttributesEnum.TransDefectNm.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSDEFECTNMDISP = AttributesEnum.TransDefectNmDisp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmItmDfctVORowImpl() {
    }

    /**
     * Gets SvcCmItmDfctEO entity object.
     * @return the SvcCmItmDfctEO
     */
    public SvcCmItmDfctEOImpl getSvcCmItmDfctEO() {
        return (SvcCmItmDfctEOImpl) getEntity(ENTITY_SVCCMITMDFCTEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for DFCT_ID using the alias name DfctId.
     * @return the DFCT_ID
     */
    public Integer getDfctId() {
        return (Integer) getAttributeInternal(DFCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DFCT_ID using the alias name DfctId.
     * @param value value to set the DFCT_ID
     */
    public void setDfctId(Integer value) {
        setAttributeInternal(DFCTID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for EMP_CODE using the alias name EmpCode.
     * @return the EMP_CODE
     */
    public Integer getEmpCode() {
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_CODE using the alias name EmpCode.
     * @param value value to set the EMP_CODE
     */
    public void setEmpCode(Integer value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for LOG_DT using the alias name LogDt.
     * @return the LOG_DT
     */
    public Timestamp getLogDt() {
        return (Timestamp) getAttributeInternal(LOGDT);
    }

    /**
     * Sets <code>value</code> as attribute value for LOG_DT using the alias name LogDt.
     * @param value value to set the LOG_DT
     */
    public void setLogDt(Timestamp value) {
        setAttributeInternal(LOGDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDefectNm.
     * @return the TransDefectNm
     */
    public String getTransDefectNm() {
        if(getDfctId()!=null){
          ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
          ViewObjectImpl voItm =am.getLovDefectIdForDisp();
          voItm.setNamedWhereClauseParam("BindCldId", getCldId());
          voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
          voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
          voItm.setNamedWhereClauseParam("BindDfctId", getDfctId());
          voItm.executeQuery();
          Row []rr = voItm.getFilteredRows("DfctId", getDfctId());
          if(rr.length>0){
              return rr[0].getAttribute("DfctNm").toString();
          }
          else{
              return (String) getAttributeInternal(TRANSDEFECTNM);
          }
        
        }else{
        return (String) getAttributeInternal(TRANSDEFECTNM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDefectNm.
     * @param value value to set the  TransDefectNm
     */
    public void setTransDefectNm(String value) {
        setAttributeInternal(TRANSDEFECTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        if(getEmpCode()!=null){
        ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
          ViewObjectImpl voItm =am.getLovEmpNameForDisp();
          voItm.setNamedWhereClauseParam("BindCldId", getCldId());
          voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
          voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
          voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
          voItm.setNamedWhereClauseParam("BindEmpCode", getEmpCode());
          voItm.executeQuery();
          Row []rr = voItm.getFilteredRows("EmpCode", getEmpCode());
          if(rr.length>0){
              return rr[0].getAttribute("EmpNm").toString();
          }
          else{
              return (String) getAttributeInternal(TRANSEMPNM);
          }
        
        }else{
        return (String) getAttributeInternal(TRANSEMPNM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDefectNmDisp.
     * @return the TransDefectNmDisp
     */
    public String getTransDefectNmDisp() {
        if(getDfctId()!=null){
          ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
          ViewObjectImpl voItm =am.getLovDefectIdForDisp();
          voItm.setNamedWhereClauseParam("BindCldId", getCldId());
          voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
          voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
          voItm.setNamedWhereClauseParam("BindDfctId", getDfctId());
          voItm.executeQuery();
          Row []rr = voItm.getFilteredRows("DfctId", getDfctId());
          System.out.println(voItm.getRowCount()+"  getTransDefectNmDisp  "+rr.length);
          if(rr.length>0){
              System.out.println("if ::::::");
              return rr[0].getAttribute("DfctNm").toString();
          }
          else{
              System.out.println("else ::::::");
              return (String) getAttributeInternal(TRANSDEFECTNMDISP);
          }
        
        }else{
            System.out.println("gggv else ::::::");
        return (String) getAttributeInternal(TRANSDEFECTNMDISP);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDefectNmDisp.
     * @param value value to set the  TransDefectNmDisp
     */
    public void setTransDefectNmDisp(String value) {
        setAttributeInternal(TRANSDEFECTNMDISP, value);
    }
}

