package svcservicereqregistration.model.views;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicereqregistration.model.entities.SvcCmItmEOImpl;
import svcservicereqregistration.model.services.ServiceRequstRegistAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 18 10:40:21 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCCMITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ItmId,
        ItmRcvd,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        TransItmName,
        TransItmNameDisp,
        TransItmSerialFlg,
        TransItmSrNo,
        TransItmManualSrNo,
        TransCallRefDocId,
        SvcCmItmDfct,
        SvcCmPhyVer,
        SvcCmItmSr,
        LovScItmSrVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMRCVD = AttributesEnum.ItmRcvd.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int TRANSITMNAMEDISP = AttributesEnum.TransItmNameDisp.index();
    public static final int TRANSITMSERIALFLG = AttributesEnum.TransItmSerialFlg.index();
    public static final int TRANSITMSRNO = AttributesEnum.TransItmSrNo.index();
    public static final int TRANSITMMANUALSRNO = AttributesEnum.TransItmManualSrNo.index();
    public static final int TRANSCALLREFDOCID = AttributesEnum.TransCallRefDocId.index();
    public static final int SVCCMITMDFCT = AttributesEnum.SvcCmItmDfct.index();
    public static final int SVCCMPHYVER = AttributesEnum.SvcCmPhyVer.index();
    public static final int SVCCMITMSR = AttributesEnum.SvcCmItmSr.index();
    public static final int LOVSCITMSRVO = AttributesEnum.LovScItmSrVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmItmVORowImpl() {
    }

    /**
     * Gets SvcCmItmEO entity object.
     * @return the SvcCmItmEO
     */
    public SvcCmItmEOImpl getSvcCmItmEO() {
        return (SvcCmItmEOImpl) getEntity(ENTITY_SVCCMITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_RCVD using the alias name ItmRcvd.
     * @return the ITM_RCVD
     */
    public String getItmRcvd() {
        return (String) getAttributeInternal(ITMRCVD);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RCVD using the alias name ItmRcvd.
     * @param value value to set the ITM_RCVD
     */
    public void setItmRcvd(String value) {
        setAttributeInternal(ITMRCVD, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
        if(getItmId()!=null){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovItmIdForDisp();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
            voItm.setNamedWhereClauseParam("BindItmId", getItmId());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("ItmId", getItmId());
            System.out.println(voItm.getRowCount()+ "   :: getTransItmName    :: "+rr.length);
            if(rr.length>0){
                return rr[0].getAttribute("ItmDesc").toString();
            }
            else{
                System.out.println("lenth null Itm id null :::::");
                return (String) getAttributeInternal(TRANSITMNAME);
            }
        }else{
            System.out.println("Itm id null :::::");
           return (String) getAttributeInternal(TRANSITMNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNameDisp.
     * @return the TransItmNameDisp
     */
    public String getTransItmNameDisp() {
        if(getItmId()!=null){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovItmIdForDisp();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
            voItm.setNamedWhereClauseParam("BindItmId", getItmId());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("ItmId", getItmId());
            System.out.println(voItm.getRowCount()+ "   :: getTransItmName    :: "+rr.length);
            if(rr.length>0){
                return rr[0].getAttribute("ItmDesc").toString();
            }
            else{
                System.out.println("lenth null Itm id null :::::");
                return (String) getAttributeInternal(TRANSITMNAMEDISP);
            }
        }else{
            System.out.println("Itm id null :::::");
        return (String) getAttributeInternal(TRANSITMNAMEDISP);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNameDisp.
     * @param value value to set the  TransItmNameDisp
     */
    public void setTransItmNameDisp(String value) {
        setAttributeInternal(TRANSITMNAMEDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerialFlg.
     * @return the TransItmSerialFlg
     */
    public String getTransItmSerialFlg() {
        if(getItmId()!=null){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovItmIdForDisp();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
            voItm.setNamedWhereClauseParam("BindItmId", getItmId());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("ItmId", getItmId());
            System.out.println(voItm.getRowCount()+ "   :: getTransItmName    :: "+rr.length);
            if(rr.length>0 && rr[0].getAttribute("SerializedFlg")!=null){
                return rr[0].getAttribute("SerializedFlg").toString();
            }else{
            return "N";
            }
            
        }else{
            return "N";
        }
        
        
        //return (String) getAttributeInternal(TRANSITMSERIALFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerialFlg.
     * @param value value to set the  TransItmSerialFlg
     */
    public void setTransItmSerialFlg(String value) {
        setAttributeInternal(TRANSITMSERIALFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSrNo.
     * @return the TransItmSrNo
     */
    public String getTransItmSrNo() {
        return (String) getAttributeInternal(TRANSITMSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSrNo.
     * @param value value to set the  TransItmSrNo
     */
    public void setTransItmSrNo(String value) {
        setAttributeInternal(TRANSITMSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmManualSrNo.
     * @return the TransItmManualSrNo
     */
    public String getTransItmManualSrNo() {
        return (String) getAttributeInternal(TRANSITMMANUALSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmManualSrNo.
     * @param value value to set the  TransItmManualSrNo
     */
    public void setTransItmManualSrNo(String value) {
        setAttributeInternal(TRANSITMMANUALSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCallRefDocId.
     * @return the TransCallRefDocId
     */
    public String getTransCallRefDocId() {
        ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
        ViewObjectImpl vo = am.getSvcCm();
        Row rr = vo.getCurrentRow();
        if(rr!=null){
            if(rr.getAttribute("DocIdRef")!=null){
                return rr.getAttribute("DocIdRef").toString();
            }else{
                return (String) getAttributeInternal(TRANSCALLREFDOCID);
            }
        }else{
        return (String) getAttributeInternal(TRANSCALLREFDOCID);
    }
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmItmDfct.
     */
    public RowIterator getSvcCmItmDfct() {
        return (RowIterator) getAttributeInternal(SVCCMITMDFCT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmPhyVer.
     */
    public RowIterator getSvcCmPhyVer() {
        return (RowIterator) getAttributeInternal(SVCCMPHYVER);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmItmSr.
     */
    public RowIterator getSvcCmItmSr() {
        return (RowIterator) getAttributeInternal(SVCCMITMSR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovScItmSrVO.
     */
    public RowSet getLovScItmSrVO() {
        return (RowSet) getAttributeInternal(LOVSCITMSRVO);
    }
}

