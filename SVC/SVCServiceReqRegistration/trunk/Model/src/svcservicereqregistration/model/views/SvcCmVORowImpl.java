package svcservicereqregistration.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;

import java.sql.Types;

import oracle.dms.table.TableName;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicereqregistration.model.entities.SvcCmEOImpl;
import svcservicereqregistration.model.services.ServiceRequstRegistAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Nov 01 13:12:40 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCCMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        CallNo,
        CallDt,
        TktNo,
        TktDt,
        CallThru,
        AutoLogd,
        CallRefType,
        DocIdRef,
        EoId,
        AddsIdBill,
        EoNm,
        EoAddsText,
        CoaId,
        CallStat,
        CallValid,
        CustBdgt,
        RepairType,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt,
        PhyVerDone,
        TransEoNm,
        TransBillingAdds,
        TransItmName,
        TransDefectNm,
        TransItmSwicherExp,
        TransItmId,
        TransRemarks,
        TransEmpName,
        TransEmpNameForRecord,
        TransDefectNmForRecord,
        TransRemarksForRecord,
        TransEmpCodeValue,
        TransDocIdRef,
        LocAddsId,
        LocRefId,
        TransAddsId,
        TransOsAmt,
        TransSrNo,
        TransManualSrNo,
        TransItmSerializeFlg,
        SvcCmDfct,
        SvcCmAsgn,
        SvcCmPhyVer,
        SvcCmAttch,
        SvcCmItm,
        LovCallRefTypeVO,
        LovUsrIdVO,
        LovRepaireTypeVO,
        LovCustomerIdVO,
        LovOrgIdVO,
        LovItmIdVO,
        LovDefectIdVO,
        LovContractItmIdVO,
        LovContractNoVO,
        LovCallStatusVO,
        LovCallThruVO,
        LovEmpCodeVO,
        LovScLocationVO,
        LovScItmSrVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int CALLNO = AttributesEnum.CallNo.index();
    public static final int CALLDT = AttributesEnum.CallDt.index();
    public static final int TKTNO = AttributesEnum.TktNo.index();
    public static final int TKTDT = AttributesEnum.TktDt.index();
    public static final int CALLTHRU = AttributesEnum.CallThru.index();
    public static final int AUTOLOGD = AttributesEnum.AutoLogd.index();
    public static final int CALLREFTYPE = AttributesEnum.CallRefType.index();
    public static final int DOCIDREF = AttributesEnum.DocIdRef.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ADDSIDBILL = AttributesEnum.AddsIdBill.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int EOADDSTEXT = AttributesEnum.EoAddsText.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CALLSTAT = AttributesEnum.CallStat.index();
    public static final int CALLVALID = AttributesEnum.CallValid.index();
    public static final int CUSTBDGT = AttributesEnum.CustBdgt.index();
    public static final int REPAIRTYPE = AttributesEnum.RepairType.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int PHYVERDONE = AttributesEnum.PhyVerDone.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSBILLINGADDS = AttributesEnum.TransBillingAdds.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int TRANSDEFECTNM = AttributesEnum.TransDefectNm.index();
    public static final int TRANSITMSWICHEREXP = AttributesEnum.TransItmSwicherExp.index();
    public static final int TRANSITMID = AttributesEnum.TransItmId.index();
    public static final int TRANSREMARKS = AttributesEnum.TransRemarks.index();
    public static final int TRANSEMPNAME = AttributesEnum.TransEmpName.index();
    public static final int TRANSEMPNAMEFORRECORD = AttributesEnum.TransEmpNameForRecord.index();
    public static final int TRANSDEFECTNMFORRECORD = AttributesEnum.TransDefectNmForRecord.index();
    public static final int TRANSREMARKSFORRECORD = AttributesEnum.TransRemarksForRecord.index();
    public static final int TRANSEMPCODEVALUE = AttributesEnum.TransEmpCodeValue.index();
    public static final int TRANSDOCIDREF = AttributesEnum.TransDocIdRef.index();
    public static final int LOCADDSID = AttributesEnum.LocAddsId.index();
    public static final int LOCREFID = AttributesEnum.LocRefId.index();
    public static final int TRANSADDSID = AttributesEnum.TransAddsId.index();
    public static final int TRANSOSAMT = AttributesEnum.TransOsAmt.index();
    public static final int TRANSSRNO = AttributesEnum.TransSrNo.index();
    public static final int TRANSMANUALSRNO = AttributesEnum.TransManualSrNo.index();
    public static final int TRANSITMSERIALIZEFLG = AttributesEnum.TransItmSerializeFlg.index();
    public static final int SVCCMDFCT = AttributesEnum.SvcCmDfct.index();
    public static final int SVCCMASGN = AttributesEnum.SvcCmAsgn.index();
    public static final int SVCCMPHYVER = AttributesEnum.SvcCmPhyVer.index();
    public static final int SVCCMATTCH = AttributesEnum.SvcCmAttch.index();
    public static final int SVCCMITM = AttributesEnum.SvcCmItm.index();
    public static final int LOVCALLREFTYPEVO = AttributesEnum.LovCallRefTypeVO.index();
    public static final int LOVUSRIDVO = AttributesEnum.LovUsrIdVO.index();
    public static final int LOVREPAIRETYPEVO = AttributesEnum.LovRepaireTypeVO.index();
    public static final int LOVCUSTOMERIDVO = AttributesEnum.LovCustomerIdVO.index();
    public static final int LOVORGIDVO = AttributesEnum.LovOrgIdVO.index();
    public static final int LOVITMIDVO = AttributesEnum.LovItmIdVO.index();
    public static final int LOVDEFECTIDVO = AttributesEnum.LovDefectIdVO.index();
    public static final int LOVCONTRACTITMIDVO = AttributesEnum.LovContractItmIdVO.index();
    public static final int LOVCONTRACTNOVO = AttributesEnum.LovContractNoVO.index();
    public static final int LOVCALLSTATUSVO = AttributesEnum.LovCallStatusVO.index();
    public static final int LOVCALLTHRUVO = AttributesEnum.LovCallThruVO.index();
    public static final int LOVEMPCODEVO = AttributesEnum.LovEmpCodeVO.index();
    public static final int LOVSCLOCATIONVO = AttributesEnum.LovScLocationVO.index();
    public static final int LOVSCITMSRVO = AttributesEnum.LovScItmSrVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcCmVORowImpl() {
    }

    /**
     * Gets SvcCmEO entity object.
     * @return the SvcCmEO
     */
    public SvcCmEOImpl getSvcCmEO() {
        return (SvcCmEOImpl) getEntity(ENTITY_SVCCMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for CALL_NO using the alias name CallNo.
     * @return the CALL_NO
     */
    public String getCallNo() {
        return (String) getAttributeInternal(CALLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_NO using the alias name CallNo.
     * @param value value to set the CALL_NO
     */
    public void setCallNo(String value) {
        setAttributeInternal(CALLNO, value);
    }

    /**
     * Gets the attribute value for CALL_DT using the alias name CallDt.
     * @return the CALL_DT
     */
    public Timestamp getCallDt() {
        return (Timestamp) getAttributeInternal(CALLDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_DT using the alias name CallDt.
     * @param value value to set the CALL_DT
     */
    public void setCallDt(Timestamp value) {
        setAttributeInternal(CALLDT, value);
    }

    /**
     * Gets the attribute value for TKT_NO using the alias name TktNo.
     * @return the TKT_NO
     */
    public String getTktNo() {
        return (String) getAttributeInternal(TKTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for TKT_NO using the alias name TktNo.
     * @param value value to set the TKT_NO
     */
    public void setTktNo(String value) {
        setAttributeInternal(TKTNO, value);
    }

    /**
     * Gets the attribute value for TKT_DT using the alias name TktDt.
     * @return the TKT_DT
     */
    public Timestamp getTktDt() {
        return (Timestamp) getAttributeInternal(TKTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for TKT_DT using the alias name TktDt.
     * @param value value to set the TKT_DT
     */
    public void setTktDt(Timestamp value) {
        setAttributeInternal(TKTDT, value);
    }

    /**
     * Gets the attribute value for CALL_THRU using the alias name CallThru.
     * @return the CALL_THRU
     */
    public Integer getCallThru() {
        return (Integer) getAttributeInternal(CALLTHRU);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_THRU using the alias name CallThru.
     * @param value value to set the CALL_THRU
     */
    public void setCallThru(Integer value) {
        setAttributeInternal(CALLTHRU, value);
    }

    /**
     * Gets the attribute value for AUTO_LOGD using the alias name AutoLogd.
     * @return the AUTO_LOGD
     */
    public String getAutoLogd() {
        return (String) getAttributeInternal(AUTOLOGD);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTO_LOGD using the alias name AutoLogd.
     * @param value value to set the AUTO_LOGD
     */
    public void setAutoLogd(String value) {
        setAttributeInternal(AUTOLOGD, value);
    }

    /**
     * Gets the attribute value for CALL_REF_TYPE using the alias name CallRefType.
     * @return the CALL_REF_TYPE
     */
    public Integer getCallRefType() {
        return (Integer) getAttributeInternal(CALLREFTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_REF_TYPE using the alias name CallRefType.
     * @param value value to set the CALL_REF_TYPE
     */
    public void setCallRefType(Integer value) {
        setAttributeInternal(CALLREFTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_ID_REF using the alias name DocIdRef.
     * @return the DOC_ID_REF
     */
    public String getDocIdRef() {
    System.out.println("current docIdref is ++++++++++++ "+ getAttributeInternal(DOCIDREF));
        return (String) getAttributeInternal(DOCIDREF);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_REF using the alias name DocIdRef.
     * @param value value to set the DOC_ID_REF
     */
    public void setDocIdRef(String value) {
        setAttributeInternal(DOCIDREF, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ADDS_ID_BILL using the alias name AddsIdBill.
     * @return the ADDS_ID_BILL
     */
    public String getAddsIdBill() {
        return (String) getAttributeInternal(ADDSIDBILL);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDS_ID_BILL using the alias name AddsIdBill.
     * @param value value to set the ADDS_ID_BILL
     */
    public void setAddsIdBill(String value) {
        setAttributeInternal(ADDSIDBILL, value);
    }

    /**
     * Gets the attribute value for EO_NM using the alias name EoNm.
     * @return the EO_NM
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_NM using the alias name EoNm.
     * @param value value to set the EO_NM
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for EO_ADDS_TEXT using the alias name EoAddsText.
     * @return the EO_ADDS_TEXT
     */
    public String getEoAddsText() {
        return (String) getAttributeInternal(EOADDSTEXT);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ADDS_TEXT using the alias name EoAddsText.
     * @param value value to set the EO_ADDS_TEXT
     */
    public void setEoAddsText(String value) {
        setAttributeInternal(EOADDSTEXT, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for CALL_STAT using the alias name CallStat.
     * @return the CALL_STAT
     */
    public Integer getCallStat() {
        return (Integer) getAttributeInternal(CALLSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_STAT using the alias name CallStat.
     * @param value value to set the CALL_STAT
     */
    public void setCallStat(Integer value) {
        setAttributeInternal(CALLSTAT, value);
    }

    /**
     * Gets the attribute value for CALL_VALID using the alias name CallValid.
     * @return the CALL_VALID
     */
    public String getCallValid() {
        return (String) getAttributeInternal(CALLVALID);
    }

    /**
     * Sets <code>value</code> as attribute value for CALL_VALID using the alias name CallValid.
     * @param value value to set the CALL_VALID
     */
    public void setCallValid(String value) {
        setAttributeInternal(CALLVALID, value);
    }

    /**
     * Gets the attribute value for CUST_BDGT using the alias name CustBdgt.
     * @return the CUST_BDGT
     */
    public Number getCustBdgt() {
        return (Number) getAttributeInternal(CUSTBDGT);
    }

    /**
     * Sets <code>value</code> as attribute value for CUST_BDGT using the alias name CustBdgt.
     * @param value value to set the CUST_BDGT
     */
    public void setCustBdgt(Number value) {
        setAttributeInternal(CUSTBDGT, value);
    }

    /**
     * Gets the attribute value for REPAIR_TYPE using the alias name RepairType.
     * @return the REPAIR_TYPE
     */
    public Integer getRepairType() {
        return (Integer) getAttributeInternal(REPAIRTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REPAIR_TYPE using the alias name RepairType.
     * @param value value to set the REPAIR_TYPE
     */
    public void setRepairType(Integer value) {
        setAttributeInternal(REPAIRTYPE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for PHY_VER_DONE using the alias name PhyVerDone.
     * @return the PHY_VER_DONE
     */
    public String getPhyVerDone() {
        return (String) getAttributeInternal(PHYVERDONE);
    }

    /**
     * Sets <code>value</code> as attribute value for PHY_VER_DONE using the alias name PhyVerDone.
     * @param value value to set the PHY_VER_DONE
     */
    public void setPhyVerDone(String value) {
        setAttributeInternal(PHYVERDONE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if(getEoId()!=null ){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovCustomerId1();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("EoId", getEoId());
            if(rr.length>0){
                return rr[0].getAttribute("EoNm").toString();
            }
            else{
                return (String) getAttributeInternal(TRANSEONM);
            }
        }else{
        return (String) getAttributeInternal(TRANSEONM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBillingAdds.
     * @return the TransBillingAdds
     */
    public String getTransBillingAdds() {
        if(getAddsIdBill()!=null ){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovAddressId();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindAddsId", getAddsIdBill());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("AddsId", getAddsIdBill());
            if(rr.length>0){
                return rr[0].getAttribute("AddDesc").toString();
            }
            else{
                return (String) getAttributeInternal(TRANSBILLINGADDS);
            }
        }else{
        return (String) getAttributeInternal(TRANSBILLINGADDS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBillingAdds.
     * @param value value to set the  TransBillingAdds
     */
    public void setTransBillingAdds(String value) {
        setAttributeInternal(TRANSBILLINGADDS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
        return (String) getAttributeInternal(TRANSITMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDefectNm.
     * @return the TransDefectNm
     */
    public String getTransDefectNm() {
        return (String) getAttributeInternal(TRANSDEFECTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDefectNm.
     * @param value value to set the  TransDefectNm
     */
    public void setTransDefectNm(String value) {
        setAttributeInternal(TRANSDEFECTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSwicherExp.
     * @return the TransItmSwicherExp
     */
    public String getTransItmSwicherExp() {
        return (String) getAttributeInternal(TRANSITMSWICHEREXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSwicherExp.
     * @param value value to set the  TransItmSwicherExp
     */
    public void setTransItmSwicherExp(String value) {
        setAttributeInternal(TRANSITMSWICHEREXP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmId.
     * @return the TransItmId
     */
    public String getTransItmId() {
        return (String) getAttributeInternal(TRANSITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmId.
     * @param value value to set the  TransItmId
     */
    public void setTransItmId(String value) {
        setAttributeInternal(TRANSITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRemarks.
     * @return the TransRemarks
     */
    public String getTransRemarks() {
        return (String) getAttributeInternal(TRANSREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRemarks.
     * @param value value to set the  TransRemarks
     */
    public void setTransRemarks(String value) {
        setAttributeInternal(TRANSREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpName.
     * @return the TransEmpName
     */
    public String getTransEmpName() {
        return (String) getAttributeInternal(TRANSEMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpName.
     * @param value value to set the  TransEmpName
     */
    public void setTransEmpName(String value) {
        setAttributeInternal(TRANSEMPNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNameForRecord.
     * @return the TransEmpNameForRecord
     */
    public String getTransEmpNameForRecord() {
        return (String) getAttributeInternal(TRANSEMPNAMEFORRECORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNameForRecord.
     * @param value value to set the  TransEmpNameForRecord
     */
    public void setTransEmpNameForRecord(String value) {
        setAttributeInternal(TRANSEMPNAMEFORRECORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDefectNmForRecord.
     * @return the TransDefectNmForRecord
     */
    public String getTransDefectNmForRecord() {
        return (String) getAttributeInternal(TRANSDEFECTNMFORRECORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDefectNmForRecord.
     * @param value value to set the  TransDefectNmForRecord
     */
    public void setTransDefectNmForRecord(String value) {
        setAttributeInternal(TRANSDEFECTNMFORRECORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRemarksForRecord.
     * @return the TransRemarksForRecord
     */
    public String getTransRemarksForRecord() {
        return (String) getAttributeInternal(TRANSREMARKSFORRECORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRemarksForRecord.
     * @param value value to set the  TransRemarksForRecord
     */
    public void setTransRemarksForRecord(String value) {
        setAttributeInternal(TRANSREMARKSFORRECORD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpCodeValue.
     * @return the TransEmpCodeValue
     */
    public Integer getTransEmpCodeValue() {
        return (Integer) getAttributeInternal(TRANSEMPCODEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpCodeValue.
     * @param value value to set the  TransEmpCodeValue
     */
    public void setTransEmpCodeValue(Integer value) {
        setAttributeInternal(TRANSEMPCODEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocIdRef.
     * @return the TransDocIdRef
     */
    public String getTransDocIdRef() {
        System.out.println("getTransDocIdRef ---------------------- "+getAttributeInternal(TRANSDOCIDREF));
        /*  if (getAttributeInternal(TRANSDOCIDREF) != null) {
            return (String) getAttributeInternal(TRANSDOCIDREF);
        } else {
            if (getDocIdRef() != null) {
                ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl) this.getApplicationModule();
                ViewObjectImpl scvo = am.getLovContractNoVO();
                scvo.setNamedWhereClauseParam("BindCldId", getCldId());
                scvo.setNamedWhereClauseParam("BindEoId", getEoId());
                scvo.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                scvo.setNamedWhereClauseParam("BindOrgId", getOrgId());
                scvo.setNamedWhereClauseParam("BindScType", getCallRefType());
                scvo.setNamedWhereClauseParam("BindSlocId", getSlocId());
                scvo.executeQuery();
                Row[] rr = scvo.getFilteredRows("DocId", getDocIdRef());
                if (rr.length > 0) {
                    return rr[0].getAttribute("ScNo").toString();
                }
                return (String) getAttributeInternal(TRANSDOCIDREF);
            }
        } */
        return (String) getAttributeInternal(TRANSDOCIDREF);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocIdRef.
     * @param value value to set the  TransDocIdRef
     */
    public void setTransDocIdRef(String value) {
                setAttributeInternal(TRANSDOCIDREF, value);
    }

    /**
     * Gets the attribute value for LOC_ADDS_ID using the alias name LocAddsId.
     * @return the LOC_ADDS_ID
     */
    public String getLocAddsId() {
        return (String) getAttributeInternal(LOCADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_ADDS_ID using the alias name LocAddsId.
     * @param value value to set the LOC_ADDS_ID
     */
    public void setLocAddsId(String value) {
        setAttributeInternal(LOCADDSID, value);
    }

    /**
     * Gets the attribute value for LOC_REF_ID using the alias name LocRefId.
     * @return the LOC_REF_ID
     */
    public String getLocRefId() {
        return (String) getAttributeInternal(LOCREFID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_REF_ID using the alias name LocRefId.
     * @param value value to set the LOC_REF_ID
     */
    public void setLocRefId(String value) {
        setAttributeInternal(LOCREFID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAddsId.
     * @return the TransAddsId
     */
    public String getTransAddsId() {
        return (String) getAttributeInternal(TRANSADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAddsId.
     * @param value value to set the  TransAddsId
     */
    public void setTransAddsId(String value) {
        setAttributeInternal(TRANSADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOsAmt.
     * @return the TransOsAmt
     */
    public Number getTransOsAmt() {
        Number ret = new Number(0);

        if (getEoId() != null && getEoId() != 0) {

            BigDecimal ret33 = (BigDecimal) callStoredFunction(Types.NUMERIC, "APP.fn_get_eo_os_amt(?,?,?,?,?)", new Object[] {
                                                               getCldId(), getSlocId(), getHoOrgId(), getOrgId(), getEoId(),


            });
            if (ret33 != null) {
                try {
                    ret = new Number(ret33);
                } catch (Exception e) {

                }
            }
        }
        return ret;
    
        //  return (Number) getAttributeInternal(TRANSOSAMT);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);

            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
           // _log.info("Function return " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOsAmt.
     * @param value value to set the  TransOsAmt
     */
    public void setTransOsAmt(Number value) {
        setAttributeInternal(TRANSOSAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrNo.
     * @return the TransSrNo
     */
    public String getTransSrNo() {
        return (String) getAttributeInternal(TRANSSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrNo.
     * @param value value to set the  TransSrNo
     */
    public void setTransSrNo(String value) {
        setAttributeInternal(TRANSSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransManualSrNo.
     * @return the TransManualSrNo
     */
    public String getTransManualSrNo() {
        return (String) getAttributeInternal(TRANSMANUALSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransManualSrNo.
     * @param value value to set the  TransManualSrNo
     */
    public void setTransManualSrNo(String value) {
        setAttributeInternal(TRANSMANUALSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerializeFlg.
     * @return the TransItmSerializeFlg
     */
    public String getTransItmSerializeFlg() {
        if(getTransItmId()!=null){
            ServiceRequstRegistAMImpl am = (ServiceRequstRegistAMImpl)this.getApplicationModule();
            ViewObjectImpl voItm =am.getLovItmIdForDisp();
            voItm.setNamedWhereClauseParam("BindCldId", getCldId());
            voItm.setNamedWhereClauseParam("BindSlocId", getSlocId());
            voItm.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            voItm.setNamedWhereClauseParam("BindOrgId", getOrgId());
            voItm.setNamedWhereClauseParam("BindItmId", getTransItmId());
            voItm.executeQuery();
            Row []rr = voItm.getFilteredRows("ItmId", getTransItmId());
            System.out.println(voItm.getRowCount()+ "   :: getTransItmName    :: "+rr.length);
            if(rr.length>0 && rr[0].getAttribute("SerializedFlg")!=null){
                return rr[0].getAttribute("SerializedFlg").toString();
            }else{
            return "N";
            }
            
        }else{
            return "N";
        }
        //return (String) getAttributeInternal(TRANSITMSERIALIZEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerializeFlg.
     * @param value value to set the  TransItmSerializeFlg
     */
    public void setTransItmSerializeFlg(String value) {
        setAttributeInternal(TRANSITMSERIALIZEFLG, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmDfct.
     */
    public RowIterator getSvcCmDfct() {
        return (RowIterator) getAttributeInternal(SVCCMDFCT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmAsgn.
     */
    public RowIterator getSvcCmAsgn() {
        return (RowIterator) getAttributeInternal(SVCCMASGN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmPhyVer.
     */
    public RowIterator getSvcCmPhyVer() {
        return (RowIterator) getAttributeInternal(SVCCMPHYVER);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmAttch.
     */
    public RowIterator getSvcCmAttch() {
        return (RowIterator) getAttributeInternal(SVCCMATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcCmItm.
     */
    public RowIterator getSvcCmItm() {
        return (RowIterator) getAttributeInternal(SVCCMITM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCallRefTypeVO.
     */
    public RowSet getLovCallRefTypeVO() {
        return (RowSet) getAttributeInternal(LOVCALLREFTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO.
     */
    public RowSet getLovUsrIdVO() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRepaireTypeVO.
     */
    public RowSet getLovRepaireTypeVO() {
        return (RowSet) getAttributeInternal(LOVREPAIRETYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustomerIdVO.
     */
    public RowSet getLovCustomerIdVO() {
        return (RowSet) getAttributeInternal(LOVCUSTOMERIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO.
     */
    public RowSet getLovOrgIdVO() {
        return (RowSet) getAttributeInternal(LOVORGIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO.
     */
    public RowSet getLovItmIdVO() {
        return (RowSet) getAttributeInternal(LOVITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDefectIdVO.
     */
    public RowSet getLovDefectIdVO() {
        return (RowSet) getAttributeInternal(LOVDEFECTIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovContractItmIdVO.
     */
    public RowSet getLovContractItmIdVO() {
        return (RowSet) getAttributeInternal(LOVCONTRACTITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovContractNoVO.
     */
    public RowSet getLovContractNoVO() {
        return (RowSet) getAttributeInternal(LOVCONTRACTNOVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCallStatusVO.
     */
    public RowSet getLovCallStatusVO() {
        return (RowSet) getAttributeInternal(LOVCALLSTATUSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCallThruVO.
     */
    public RowSet getLovCallThruVO() {
        return (RowSet) getAttributeInternal(LOVCALLTHRUVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEmpCodeVO.
     */
    public RowSet getLovEmpCodeVO() {
        return (RowSet) getAttributeInternal(LOVEMPCODEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovScLocationVO.
     */
    public RowSet getLovScLocationVO() {
        return (RowSet) getAttributeInternal(LOVSCLOCATIONVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovScItmSrVO.
     */
    public RowSet getLovScItmSrVO() {
        return (RowSet) getAttributeInternal(LOVSCITMSRVO);
    }
}

