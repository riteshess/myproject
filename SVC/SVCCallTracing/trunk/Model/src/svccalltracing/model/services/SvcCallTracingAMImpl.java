package svccalltracing.model.services;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import svccalltracing.model.services.common.SvcCallTracingAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 22 12:39:50 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcCallTracingAMImpl extends ApplicationModuleImpl implements SvcCallTracingAM {
    /**
     * This is the default constructor (do not remove).
     */
     ADFLogger adfLog=(ADFLogger)ADFLogger.createADFLogger(SvcCallTracingAMImpl.class);
    String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
    Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
    String orgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
    String hoOrgId=resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    public SvcCallTracingAMImpl() {
    }

    /**
     * Container's getter for TransSrch.
     * @return TransSrch
     */
    public ViewObjectImpl getTransSrch() {
        return (ViewObjectImpl) findViewObject("TransSrch");
    }

    /**
     * Container's getter for SvcCm1.
     * @return SvcCm1
     */
    public ViewObjectImpl getSvcCm() {
        return (ViewObjectImpl) findViewObject("SvcCm");
    }

    /**
     * Container's getter for SvcCmCallTrc1.
     * @return SvcCmCallTrc1
     */
    public ViewObjectImpl getSvcCmCallTrc() {
        return (ViewObjectImpl) findViewObject("SvcCmCallTrc");
    }

    public String setSrNo(){
        ViewObjectImpl trcvo=this.getSvcCmCallTrc();
        String docId=null;
        Integer count=0;
        
        if(this.getSvcCm().getCurrentRow().getAttribute("DocId")!=null)
        docId=this.getSvcCm().getCurrentRow().getAttribute("DocId").toString();
        RowQualifier rq=new RowQualifier(trcvo);
        rq.setWhereClause("CldId= '"+cldId+"' and SlocId="+ slocId +" and OrgId='"+ orgId +"' and HoOrgId='"+ hoOrgId +"' and DocId= '"+docId+"'");
        Row [] rr=trcvo.getFilteredRows(rq);
        adfLog.info("total length "+rr.length);
        if(rr.length>0){
          //  count=1;
            if(rr.length==1){
                this.getSvcCmCallTrc().getCurrentRow().setAttribute("TrcSeqNo", new Integer(1));
            }else{
            for(Row r: rr){
              count++;
               adfLog.info("count value is inside for  "+count);
            }
            adfLog.info("count value is  "+count);
            this.getSvcCmCallTrc().getCurrentRow().setAttribute("TrcSeqNo", count);
            }
        }else{
            count= new Integer(1);
            this.getSvcCmCallTrc().getCurrentRow().setAttribute("TrcSeqNo", count);
        }
       
    //   System.out.println(count+"  sequence no is "+this.getSvcCmCallTrc().getCurrentRow().getAttribute("TrcSeqNo")+rq.getExprStr());
        //getSvcCmCallTrc().executeQuery();
    
        return null;
    }
    
    public String searchAction(){
    Row trncrw=this.getTransSrch().getCurrentRow();
    
    ViewObjectImpl CmVo=this.getSvcCm();
        CmVo.setNamedWhereClauseParam("bindCldId", cldId);
        CmVo.setNamedWhereClauseParam("bindHoOrgId", hoOrgId);
        CmVo.setNamedWhereClauseParam("bindOrgId", orgId);
        CmVo.setNamedWhereClauseParam("bindSlocId", slocId);
        CmVo.setNamedWhereClauseParam("bindCallNo", trncrw.getAttribute("TransClNo"));
        CmVo.setNamedWhereClauseParam("bindEoId",trncrw.getAttribute("TransCustId"));
        CmVo.setNamedWhereClauseParam("bindTktNo",trncrw.getAttribute("TransTktNo"));
        CmVo.setNamedWhereClauseParam("binfFrmdt", trncrw.getAttribute("TransFrmDt"));
        CmVo.setNamedWhereClauseParam("bindTodt", trncrw.getAttribute("TransToDt"));
        CmVo.executeQuery();
        return null;
    }
    
    public String resetAction(){
        ViewObjectImpl CmVo=this.getSvcCm();
            CmVo.setNamedWhereClauseParam("bindCldId", cldId);
            CmVo.setNamedWhereClauseParam("bindHoOrgId", hoOrgId);
            CmVo.setNamedWhereClauseParam("bindOrgId", orgId);
            CmVo.setNamedWhereClauseParam("bindSlocId", slocId);
            CmVo.setNamedWhereClauseParam("bindCallNo", null);
            CmVo.setNamedWhereClauseParam("bindEoId",null);
            CmVo.setNamedWhereClauseParam("bindTktNo",null);
            CmVo.setNamedWhereClauseParam("binfFrmdt", null);
            CmVo.setNamedWhereClauseParam("bindTodt", null);
            CmVo.executeQuery();
        return null;
    }
    
    public void setBindVar(){
        ViewObjectImpl CmVo=this.getSvcCm();
            CmVo.setNamedWhereClauseParam("bindCldId", cldId);
            CmVo.setNamedWhereClauseParam("bindHoOrgId", hoOrgId);
            CmVo.setNamedWhereClauseParam("bindOrgId", orgId);
            CmVo.setNamedWhereClauseParam("bindSlocId", slocId);
            CmVo.setNamedWhereClauseParam("bindCallNo", null);
            CmVo.setNamedWhereClauseParam("bindEoId",null);
            CmVo.setNamedWhereClauseParam("bindTktNo",null);
            CmVo.setNamedWhereClauseParam("binfFrmdt", null);
            CmVo.setNamedWhereClauseParam("bindTodt", null);
            CmVo.executeQuery();
        
    }

    /**
     * Container's getter for SvcCmtoSvcCmTrcCallTrcVL1.
     * @return SvcCmtoSvcCmTrcCallTrcVL1
     */
    public ViewLinkImpl getSvcCmtoSvcCmTrcCallTrcVL1() {
        return (ViewLinkImpl) findViewLink("SvcCmtoSvcCmTrcCallTrcVL1");
    }

    /**
     * Container's getter for SvcCmCallTrc1.
     * @return SvcCmCallTrc1
     */
    public ViewObjectImpl getSvcCmCallTrc1() {
        return (ViewObjectImpl) findViewObject("SvcCmCallTrc1");
    }
}

