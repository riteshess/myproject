package svcinvoiceapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 14 13:13:46 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class transSearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        transInvcNo,
        transInvcType,
        transCurrencyType,
        transCustomerName,
        transFromDate,
        transToDate,
        fromSpAmt,
        ToSpAmt,
        transEoId,
        invcId,
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        LovInvcTypeVO1,
        LovInvcVO1,
        LovCustSearchVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSINVCNO = AttributesEnum.transInvcNo.index();
    public static final int TRANSINVCTYPE = AttributesEnum.transInvcType.index();
    public static final int TRANSCURRENCYTYPE = AttributesEnum.transCurrencyType.index();
    public static final int TRANSCUSTOMERNAME = AttributesEnum.transCustomerName.index();
    public static final int TRANSFROMDATE = AttributesEnum.transFromDate.index();
    public static final int TRANSTODATE = AttributesEnum.transToDate.index();
    public static final int FROMSPAMT = AttributesEnum.fromSpAmt.index();
    public static final int TOSPAMT = AttributesEnum.ToSpAmt.index();
    public static final int TRANSEOID = AttributesEnum.transEoId.index();
    public static final int INVCID = AttributesEnum.invcId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LOVINVCTYPEVO1 = AttributesEnum.LovInvcTypeVO1.index();
    public static final int LOVINVCVO1 = AttributesEnum.LovInvcVO1.index();
    public static final int LOVCUSTSEARCHVO1 = AttributesEnum.LovCustSearchVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public transSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute transInvcNo.
     * @return the transInvcNo
     */
    public String gettransInvcNo() {
        return (String) getAttributeInternal(TRANSINVCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transInvcNo.
     * @param value value to set the  transInvcNo
     */
    public void settransInvcNo(String value) {
        setAttributeInternal(TRANSINVCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transInvcType.
     * @return the transInvcType
     */
    public Integer gettransInvcType() {
        return (Integer) getAttributeInternal(TRANSINVCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transInvcType.
     * @param value value to set the  transInvcType
     */
    public void settransInvcType(Integer value) {
        setAttributeInternal(TRANSINVCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transCurrencyType.
     * @return the transCurrencyType
     */
    public Integer gettransCurrencyType() {
        return (Integer) getAttributeInternal(TRANSCURRENCYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transCurrencyType.
     * @param value value to set the  transCurrencyType
     */
    public void settransCurrencyType(Integer value) {
        setAttributeInternal(TRANSCURRENCYTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transCustomerName.
     * @return the transCustomerName
     */
    public String gettransCustomerName() {
        return (String) getAttributeInternal(TRANSCUSTOMERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transCustomerName.
     * @param value value to set the  transCustomerName
     */
    public void settransCustomerName(String value) {
        setAttributeInternal(TRANSCUSTOMERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transFromDate.
     * @return the transFromDate
     */
    public Date gettransFromDate() {
        return (Date) getAttributeInternal(TRANSFROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transFromDate.
     * @param value value to set the  transFromDate
     */
    public void settransFromDate(Date value) {
        setAttributeInternal(TRANSFROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transToDate.
     * @return the transToDate
     */
    public Date gettransToDate() {
        return (Date) getAttributeInternal(TRANSTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transToDate.
     * @param value value to set the  transToDate
     */
    public void settransToDate(Date value) {
        setAttributeInternal(TRANSTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute fromSpAmt.
     * @return the fromSpAmt
     */
    public Number getfromSpAmt() {
        return (Number) getAttributeInternal(FROMSPAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fromSpAmt.
     * @param value value to set the  fromSpAmt
     */
    public void setfromSpAmt(Number value) {
        setAttributeInternal(FROMSPAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToSpAmt.
     * @return the ToSpAmt
     */
    public Number getToSpAmt() {
        return (Number) getAttributeInternal(TOSPAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToSpAmt.
     * @param value value to set the  ToSpAmt
     */
    public void setToSpAmt(Number value) {
        setAttributeInternal(TOSPAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEoId.
     * @return the transEoId
     */
    public Integer gettransEoId() {
        return (Integer) getAttributeInternal(TRANSEOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEoId.
     * @param value value to set the  transEoId
     */
    public void settransEoId(Integer value) {
        setAttributeInternal(TRANSEOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute invcId.
     * @return the invcId
     */
    public String getinvcId() {
        return (String) getAttributeInternal(INVCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute invcId.
     * @param value value to set the  invcId
     */
    public void setinvcId(String value) {
        setAttributeInternal(INVCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        if (resolveEL("#{pageFlowScope.GLBL_APP_CLD_ID}")!= null) {
            return (String)resolveEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        if(resolveEL("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
            return Integer.parseInt(resolveEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        if (resolveEL("#{pageFlowScope.GLBL_APP_USR_ORG}")!= null) {
            return (String)resolveEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        if (resolveEL("#{pageFlowScope.GLBL_HO_ORG_ID}")!=null) {
            return (String) resolveEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
        }
        return (String) getAttributeInternal(HOORGID);
    }
    public static Object resolveEL(String el) {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =
    facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el, Object.class);
    return exp.getValue(elContext);
    }
    
    /**
     * Gets the view accessor <code>RowSet</code> LovInvcTypeVO1.
     */
    public RowSet getLovInvcTypeVO1() {
        return (RowSet) getAttributeInternal(LOVINVCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovInvcVO1.
     */
    public RowSet getLovInvcVO1() {
        return (RowSet) getAttributeInternal(LOVINVCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustSearchVO1.
     */
    public RowSet getLovCustSearchVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTSEARCHVO1);
    }


}

