package svcservicecontract.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import oracle.jbo.domain.Timestamp;

import java.sql.Types;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicecontract.model.entities.SvcScEOImpl;
import svcservicecontract.model.services.AppModuleAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 14 11:01:49 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScVORowImpl extends ViewRowImpl {

    public static final int ENTITY_SVCSCEO = 0;
    private static ADFLogger _log=(ADFLogger)ADFLogger.createADFLogger(SvcScVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        FyId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        ScNo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getScNo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setScNo((String) value);
            }
        }
        ,
        ScDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getScDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setScDt((Timestamp) value);
            }
        }
        ,
        QuotNo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getQuotNo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setQuotNo((String) value);
            }
        }
        ,
        QuotDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getQuotDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setQuotDt((Timestamp) value);
            }
        }
        ,
        SsNo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSsNo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setSsNo((String) value);
            }
        }
        ,
        SsDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSsDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setSsDt((Timestamp) value);
            }
        }
        ,
        ScType {
            public Object get(SvcScVORowImpl obj) {
                return obj.getScType();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setScType((Integer) value);
            }
        }
        ,
        EoId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        AddsIdEo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getAddsIdEo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAddsIdEo((String) value);
            }
        }
        ,
        CoaId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        }
        ,
        BillCycle {
            public Object get(SvcScVORowImpl obj) {
                return obj.getBillCycle();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setBillCycle((Integer) value);
            }
        }
        ,
        SvcCycle {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcCycle();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setSvcCycle((Integer) value);
            }
        }
        ,
        PrdFm {
            public Object get(SvcScVORowImpl obj) {
                return obj.getPrdFm();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setPrdFm((Timestamp) value);
            }
        }
        ,
        PrdTo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getPrdTo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setPrdTo((Timestamp) value);
            }
        }
        ,
        CtcInitType {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCtcInitType();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCtcInitType((Integer) value);
            }
        }
        ,
        DocIdPrev {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocIdPrev();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocIdPrev((String) value);
            }
        }
        ,
        DocTypeSrc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocTypeSrc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocTypeSrc((Integer) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        RepairType {
            public Object get(SvcScVORowImpl obj) {
                return obj.getRepairType();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setRepairType((Integer) value);
            }
        }
        ,
        DiscType {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        TotAmtSp {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTotAmtSp((Number) value);
            }
        }
        ,
        TotAmtBs {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTotAmtBs((Number) value);
            }
        }
        ,
        CurrIdSp {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        }
        ,
        UsrIdCrt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getUsrIdCrt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setUsrIdCrt((Integer) value);
            }
        }
        ,
        CrtDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCrtDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCrtDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SvcScVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        ModDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getModDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setModDt((Timestamp) value);
            }
        }
        ,
        SCTypeTrans {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSCTypeTrans();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setSCTypeTrans((String) value);
            }
        }
        ,
        TranscstmrNm {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTranscstmrNm();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTranscstmrNm((String) value);
            }
        }
        ,
        TransCoaNm {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransCoaNm();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransCoaNm((String) value);
            }
        }
        ,
        TransAddsDesc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransAddsDesc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransAddsDesc((String) value);
            }
        }
        ,
        CurrNmTrans {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCurrNmTrans();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCurrNmTrans((String) value);
            }
        }
        ,
        CcIdTrans {
            public Object get(SvcScVORowImpl obj) {
                return obj.getCcIdTrans();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setCcIdTrans((Integer) value);
            }
        }
        ,
        TransItemNm {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransItemNm();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransItemNm((String) value);
            }
        }
        ,
        TransItmId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransItmId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransItmId((String) value);
            }
        }
        ,
        TransQuotSCNo {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransQuotSCNo();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransQuotSCNo((String) value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String) value);
            }
        }
        ,
        transtaxRule {
            public Object get(SvcScVORowImpl obj) {
                return obj.gettranstaxRule();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.settranstaxRule((Integer) value);
            }
        }
        ,
        TransTaxEmptd {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransTaxEmptd();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransTaxEmptd((String) value);
            }
        }
        ,
        DocStat {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocStat();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocStat((Integer) value);
            }
        }
        ,
        AuthStat {
            public Object get(SvcScVORowImpl obj) {
                return obj.getAuthStat();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAuthStat((String) value);
            }
        }
        ,
        DocType {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocType();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocType((Integer) value);
            }
        }
        ,
        AuthStatDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getAuthStatDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAuthStatDt((Timestamp) value);
            }
        }
        ,
        DocStatDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDocStatDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setDocStatDt((Timestamp) value);
            }
        }
        ,
        TransTotalPmtAmt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransTotalPmtAmt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransTotalPmtAmt((Number) value);
            }
        }
        ,
        TransSvcShdlDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransSvcShdlDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransSvcShdlDt((Timestamp) value);
            }
        }
        ,
        TransScNoDocId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransScNoDocId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransScNoDocId((String) value);
            }
        }
        ,
        TransEoLoc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransEoLoc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransEoLoc((String) value);
            }
        }
        ,
        TransEoLocId {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransEoLocId();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransEoLocId((String) value);
            }
        }
        ,
        TransRmksLoc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransRmksLoc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransRmksLoc((String) value);
            }
        }
        ,
        TransLocStrtDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransLocStrtDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransLocStrtDt((Timestamp) value);
            }
        }
        ,
        TransLocToDt {
            public Object get(SvcScVORowImpl obj) {
                return obj.getTransLocToDt();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setTransLocToDt((Timestamp) value);
            }
        }
        ,
        lovScNoSwitcher {
            public Object get(SvcScVORowImpl obj) {
                return obj.getlovScNoSwitcher();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScItm {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScItm();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScOc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScOc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScPmtSchdl {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScPmtSchdl();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScSvcSchdl {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScSvcSchdl();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScAttch {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScAttch();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScLoc {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSvcScLoc();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DualVO1 {
            public Object get(SvcScVORowImpl obj) {
                return obj.getDualVO1();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCstmrVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovCstmrVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTypeVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovDiscTypeVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCurrVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovCurrVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SCTypeVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getSCTypeVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCtcCycleVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovCtcCycleVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCycleVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovCycleVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCtcTypeVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovCtcTypeVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovItmVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRqrTypeVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovRqrTypeVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDoctypeVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovDoctypeVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQuotNScNoVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovQuotNScNoVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAuthStatVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovAuthStatVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgIdVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovOrgIdVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovUsrVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAppEoAddsVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovAppEoAddsVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovBfrExpiryVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovBfrExpiryVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRplctPrevCntrctVO {
            public Object get(SvcScVORowImpl obj) {
                return obj.getLovRplctPrevCntrctVO();
            }

            public void put(SvcScVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SvcScVORowImpl object);

        public abstract void put(SvcScVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int SCNO = AttributesEnum.ScNo.index();
    public static final int SCDT = AttributesEnum.ScDt.index();
    public static final int QUOTNO = AttributesEnum.QuotNo.index();
    public static final int QUOTDT = AttributesEnum.QuotDt.index();
    public static final int SSNO = AttributesEnum.SsNo.index();
    public static final int SSDT = AttributesEnum.SsDt.index();
    public static final int SCTYPE = AttributesEnum.ScType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ADDSIDEO = AttributesEnum.AddsIdEo.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int BILLCYCLE = AttributesEnum.BillCycle.index();
    public static final int SVCCYCLE = AttributesEnum.SvcCycle.index();
    public static final int PRDFM = AttributesEnum.PrdFm.index();
    public static final int PRDTO = AttributesEnum.PrdTo.index();
    public static final int CTCINITTYPE = AttributesEnum.CtcInitType.index();
    public static final int DOCIDPREV = AttributesEnum.DocIdPrev.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int REPAIRTYPE = AttributesEnum.RepairType.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int SCTYPETRANS = AttributesEnum.SCTypeTrans.index();
    public static final int TRANSCSTMRNM = AttributesEnum.TranscstmrNm.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSADDSDESC = AttributesEnum.TransAddsDesc.index();
    public static final int CURRNMTRANS = AttributesEnum.CurrNmTrans.index();
    public static final int CCIDTRANS = AttributesEnum.CcIdTrans.index();
    public static final int TRANSITEMNM = AttributesEnum.TransItemNm.index();
    public static final int TRANSITMID = AttributesEnum.TransItmId.index();
    public static final int TRANSQUOTSCNO = AttributesEnum.TransQuotSCNo.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int TRANSTAXRULE = AttributesEnum.transtaxRule.index();
    public static final int TRANSTAXEMPTD = AttributesEnum.TransTaxEmptd.index();
    public static final int DOCSTAT = AttributesEnum.DocStat.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int AUTHSTATDT = AttributesEnum.AuthStatDt.index();
    public static final int DOCSTATDT = AttributesEnum.DocStatDt.index();
    public static final int TRANSTOTALPMTAMT = AttributesEnum.TransTotalPmtAmt.index();
    public static final int TRANSSVCSHDLDT = AttributesEnum.TransSvcShdlDt.index();
    public static final int TRANSSCNODOCID = AttributesEnum.TransScNoDocId.index();
    public static final int TRANSEOLOC = AttributesEnum.TransEoLoc.index();
    public static final int TRANSEOLOCID = AttributesEnum.TransEoLocId.index();
    public static final int TRANSRMKSLOC = AttributesEnum.TransRmksLoc.index();
    public static final int TRANSLOCSTRTDT = AttributesEnum.TransLocStrtDt.index();
    public static final int TRANSLOCTODT = AttributesEnum.TransLocToDt.index();
    public static final int LOVSCNOSWITCHER = AttributesEnum.lovScNoSwitcher.index();
    public static final int SVCSCITM = AttributesEnum.SvcScItm.index();
    public static final int SVCSCOC = AttributesEnum.SvcScOc.index();
    public static final int SVCSCPMTSCHDL = AttributesEnum.SvcScPmtSchdl.index();
    public static final int SVCSCSVCSCHDL = AttributesEnum.SvcScSvcSchdl.index();
    public static final int SVCSCATTCH = AttributesEnum.SvcScAttch.index();
    public static final int SVCSCLOC = AttributesEnum.SvcScLoc.index();
    public static final int DUALVO1 = AttributesEnum.DualVO1.index();
    public static final int LOVCSTMRVO = AttributesEnum.LovCstmrVO.index();
    public static final int LOVDISCTYPEVO = AttributesEnum.LovDiscTypeVO.index();
    public static final int LOVCURRVO = AttributesEnum.LovCurrVO.index();
    public static final int SCTYPEVO = AttributesEnum.SCTypeVO.index();
    public static final int LOVCTCCYCLEVO = AttributesEnum.LovCtcCycleVO.index();
    public static final int LOVCYCLEVO = AttributesEnum.LovCycleVO.index();
    public static final int LOVCTCTYPEVO = AttributesEnum.LovCtcTypeVO.index();
    public static final int LOVITMVO = AttributesEnum.LovItmVO.index();
    public static final int LOVRQRTYPEVO = AttributesEnum.LovRqrTypeVO.index();
    public static final int LOVDOCTYPEVO = AttributesEnum.LovDoctypeVO.index();
    public static final int LOVQUOTNSCNOVO = AttributesEnum.LovQuotNScNoVO.index();
    public static final int LOVAUTHSTATVO = AttributesEnum.LovAuthStatVO.index();
    public static final int LOVORGIDVO = AttributesEnum.LovOrgIdVO.index();
    public static final int LOVUSRVO = AttributesEnum.LovUsrVO.index();
    public static final int LOVAPPEOADDSVO = AttributesEnum.LovAppEoAddsVO.index();
    public static final int LOVBFREXPIRYVO = AttributesEnum.LovBfrExpiryVO.index();
    public static final int LOVRPLCTPREVCNTRCTVO = AttributesEnum.LovRplctPrevCntrctVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScVORowImpl() {
    }

    /**
     * Gets SvcScEO entity object.
     * @return the SvcScEO
     */
    public SvcScEOImpl getSvcScEO() {
        return (SvcScEOImpl) getEntity(ENTITY_SVCSCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
    return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
       return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for SC_NO using the alias name ScNo.
     * @return the SC_NO
     */
    public String getScNo() {
        return (String) getAttributeInternal(SCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_NO using the alias name ScNo.
     * @param value value to set the SC_NO
     */
    public void setScNo(String value) {
        setAttributeInternal(SCNO, value);
    }

    /**
     * Gets the attribute value for SC_DT using the alias name ScDt.
     * @return the SC_DT
     */
    public Timestamp getScDt() {
        return (Timestamp) getAttributeInternal(SCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_DT using the alias name ScDt.
     * @param value value to set the SC_DT
     */
    public void setScDt(Timestamp value) {
        setAttributeInternal(SCDT, value);
    }

    /**
     * Gets the attribute value for QUOT_NO using the alias name QuotNo.
     * @return the QUOT_NO
     */
    public String getQuotNo() {
        return (String) getAttributeInternal(QUOTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_NO using the alias name QuotNo.
     * @param value value to set the QUOT_NO
     */
    public void setQuotNo(String value) {
        setAttributeInternal(QUOTNO, value);
    }

    /**
     * Gets the attribute value for QUOT_DT using the alias name QuotDt.
     * @return the QUOT_DT
     */
    public Timestamp getQuotDt() {
        return (Timestamp) getAttributeInternal(QUOTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_DT using the alias name QuotDt.
     * @param value value to set the QUOT_DT
     */
    public void setQuotDt(Timestamp value) {
        setAttributeInternal(QUOTDT, value);
    }

    /**
     * Gets the attribute value for SS_NO using the alias name SsNo.
     * @return the SS_NO
     */
    public String getSsNo() {
        return (String) getAttributeInternal(SSNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SS_NO using the alias name SsNo.
     * @param value value to set the SS_NO
     */
    public void setSsNo(String value) {
        setAttributeInternal(SSNO, value);
    }

    /**
     * Gets the attribute value for SS_DT using the alias name SsDt.
     * @return the SS_DT
     */
    public Timestamp getSsDt() {
        return (Timestamp) getAttributeInternal(SSDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SS_DT using the alias name SsDt.
     * @param value value to set the SS_DT
     */
    public void setSsDt(Timestamp value) {
        setAttributeInternal(SSDT, value);
    }

    /**
     * Gets the attribute value for SC_TYPE using the alias name ScType.
     * @return the SC_TYPE
     */
    public Integer getScType() {
        return (Integer) getAttributeInternal(SCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_TYPE using the alias name ScType.
     * @param value value to set the SC_TYPE
     */
    public void setScType(Integer value) {
        setAttributeInternal(SCTYPE, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ADDS_ID_EO using the alias name AddsIdEo.
     * @return the ADDS_ID_EO
     */
    public String getAddsIdEo() {
        return (String) getAttributeInternal(ADDSIDEO);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDS_ID_EO using the alias name AddsIdEo.
     * @param value value to set the ADDS_ID_EO
     */
    public void setAddsIdEo(String value) {
        setAttributeInternal(ADDSIDEO, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
   //     _log.info("current coa id is------------ "+ getAttributeInternal(COAID));
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for BILL_CYCLE using the alias name BillCycle.
     * @return the BILL_CYCLE
     */
    public Integer getBillCycle() {
        return (Integer) getAttributeInternal(BILLCYCLE);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_CYCLE using the alias name BillCycle.
     * @param value value to set the BILL_CYCLE
     */
    public void setBillCycle(Integer value) {
        setAttributeInternal(BILLCYCLE, value);
    }

    /**
     * Gets the attribute value for SVC_CYCLE using the alias name SvcCycle.
     * @return the SVC_CYCLE
     */
    public Integer getSvcCycle() {
        return (Integer) getAttributeInternal(SVCCYCLE);
    }

    /**
     * Sets <code>value</code> as attribute value for SVC_CYCLE using the alias name SvcCycle.
     * @param value value to set the SVC_CYCLE
     */
    public void setSvcCycle(Integer value) {
        setAttributeInternal(SVCCYCLE, value);
    }

    /**
     * Gets the attribute value for PRD_FM using the alias name PrdFm.
     * @return the PRD_FM
     */
    public Timestamp getPrdFm() {
        return (Timestamp) getAttributeInternal(PRDFM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_FM using the alias name PrdFm.
     * @param value value to set the PRD_FM
     */
    public void setPrdFm(Timestamp value) {
        if(value !=null){
            setTransLocStrtDt(value);
        }
        setAttributeInternal(PRDFM, value);
    }

    /**
     * Gets the attribute value for PRD_TO using the alias name PrdTo.
     * @return the PRD_TO
     */
    public Timestamp getPrdTo() {
        return (Timestamp) getAttributeInternal(PRDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_TO using the alias name PrdTo.
     * @param value value to set the PRD_TO
     */
    public void setPrdTo(Timestamp value) {
        if(value!=null){
            setTransLocToDt(value);
        }
        setAttributeInternal(PRDTO, value);
    }

    /**
     * Gets the attribute value for CTC_INIT_TYPE using the alias name CtcInitType.
     * @return the CTC_INIT_TYPE
     */
    public Integer getCtcInitType() {
        return (Integer) getAttributeInternal(CTCINITTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CTC_INIT_TYPE using the alias name CtcInitType.
     * @param value value to set the CTC_INIT_TYPE
     */
    public void setCtcInitType(Integer value) {
        setAttributeInternal(CTCINITTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_ID_PREV using the alias name DocIdPrev.
     * @return the DOC_ID_PREV
     */
    public String getDocIdPrev() {
        return (String) getAttributeInternal(DOCIDPREV);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_PREV using the alias name DocIdPrev.
     * @param value value to set the DOC_ID_PREV
     */
    public void setDocIdPrev(String value) {
        setAttributeInternal(DOCIDPREV, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for REPAIR_TYPE using the alias name RepairType.
     * @return the REPAIR_TYPE
     */
    public Integer getRepairType() {
        return (Integer) getAttributeInternal(REPAIRTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for REPAIR_TYPE using the alias name RepairType.
     * @param value value to set the REPAIR_TYPE
     */
    public void setRepairType(Integer value) {
        setAttributeInternal(REPAIRTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public oracle.jbo.domain.Number getDiscVal() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(oracle.jbo.domain.Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public oracle.jbo.domain.Number getTotAmtSp() {
        return (oracle.jbo.domain.Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(oracle.jbo.domain.Number value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public oracle.jbo.domain.Number getTotAmtBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public Integer getUsrIdCrt() {
        return (Integer) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(Integer value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SCTypeTrans.
     * @return the SCTypeTrans
     */
    public String getSCTypeTrans() {
        return (String) getAttributeInternal(SCTYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SCTypeTrans.
     * @param value value to set the  SCTypeTrans
     */
    public void setSCTypeTrans(String value) {
        setAttributeInternal(SCTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranscstmrNm.
     * @return the TranscstmrNm
     */
    public String getTranscstmrNm() {
        if(getAttributeInternal(TRANSCSTMRNM)!=null){
        return (String) getAttributeInternal(TRANSCSTMRNM);
        }else{
            if(getEoId()!=null){
                AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
                ViewObjectImpl vo= am.getLovCstmr();
                vo.setNamedWhereClauseParam("bindCldId", getCldId());
                vo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
                vo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                vo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                
                //bindOrgId
                vo.executeQuery();
                
               Row [] rr=vo.getFilteredRows("EoId", getEoId());
               if(rr.length>0){
                   return rr[0].getAttribute("EoNm").toString();
               }
            }
        }
        return (String) getAttributeInternal(TRANSCSTMRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranscstmrNm.
     * @param value value to set the  TranscstmrNm
     */
    public void setTranscstmrNm(String value) {
        setAttributeInternal(TRANSCSTMRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the Tran sCoaNm
     */
    public String getTransCoaNm() {
        if(getCoaId()!=null){
        AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
        ViewObjectImpl coavo= am.getLovCoa1();
        coavo.setNamedWhereClauseParam("bindcoaId", getCoaId());
            coavo.executeQuery();
        Row [] rr1=coavo.getFilteredRows("CoaId", getCoaId());
        if(rr1.length>0){
            return rr1[0].getAttribute("CoaNm").toString();
        }
        }
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value) {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAddsDesc.
     * @return the TransAddsDesc
     */
    public String getTransAddsDesc() {
        _log.info("current addds id is "+getAddsIdEo());
        if(getAddsIdEo()!=null){
        AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            _log.info("current addds id is "+getAddsIdEo());
             ViewObjectImpl addsvo= am.getLovAdds1();
            addsvo.setNamedWhereClauseParam("bindCldId", getCldId());
            addsvo.setNamedWhereClauseParam("bindAddsId", getAddsIdEo());
            addsvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            addsvo.executeQuery();
            Row [] rr1=addsvo.getFilteredRows("AddsId", getAddsIdEo());
        if(rr1.length>0){
            return rr1[0].getAttribute("Adds").toString();
        }
        }
        return (String) getAttributeInternal(TRANSADDSDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAddsDesc.
     * @param value value to set the  TransAddsDesc
     */
    public void setTransAddsDesc(String value) {
        setAttributeInternal(TRANSADDSDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNmTrans.
     * @return the CurrNmTrans
     */
    public String getCurrNmTrans() {
        if(getCurrIdSp()!=null){
        AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
        ViewObjectImpl currVO=am.getLovCurr1();
        currVO.setNamedWhereClauseParam("bindCldId", getCldId());
        currVO.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
        currVO.setNamedWhereClauseParam("bindOrgId", getOrgId());
        currVO.setNamedWhereClauseParam("bindCcId", getCurrIdSp());
        currVO.executeQuery();
        
        Row [] rr1=currVO.getFilteredRows("CcCurrIdTxn", getCurrIdSp());
        if(rr1.length>0){
       //     _log.info("current currency id is "+rr1[0].getAttribute("CurrDescTxn"));

            return rr1[0].getAttribute("CurrDescTxn").toString();
        }
        }else{
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl currVO=am.getLovCurr1();
            currVO.setNamedWhereClauseParam("bindCldId", getCldId());
            currVO.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            currVO.setNamedWhereClauseParam("bindOrgId", getOrgId());
            currVO.setNamedWhereClauseParam("bindCcId", getCcIdTrans());
            currVO.executeQuery();
            Row [] rr1=currVO.getFilteredRows("CcCurrIdTxn", getCcIdTrans());
            if(rr1.length>0){
       //         _log.info("current currency id is "+rr1[0].getAttribute("CurrDescTxn"));
                setCurrIdSp(getCcIdTrans());
                setCurrConvFctr(new Number(1));
                return rr1[0].getAttribute("CurrDescTxn").toString();
            }
        }
      
        return (String) getAttributeInternal(CURRNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNmTrans.
     * @param value value to set the  CurrNmTrans
     */
    public void setCurrNmTrans(String value) {
        setAttributeInternal(CURRNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CcIdTrans.
     * @return the CcIdTrans
     */
    public Integer getCcIdTrans() {
        Integer ret=(Integer)(callStoredFunction(Types.INTEGER, "MM.MM_GET_ORG_BS_CURR(?,?)", new Object[]{this.getCldId(),this.getOrgId()}));
        if(ret != null){return ret;}
        return (Integer) getAttributeInternal(CCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CcIdTrans.
     * @param value value to set the  CcIdTrans
     */
    public void setCcIdTrans(Integer value) {
        setAttributeInternal(CCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemNm.
     * @return the TransItemNm
     */
    public String getTransItemNm() {
        return (String) getAttributeInternal(TRANSITEMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemNm.
     * @param value value to set the  TransItemNm
     */
    public void setTransItemNm(String value) {
        setAttributeInternal(TRANSITEMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmId.
     * @return the TransItmId
     */
    public String getTransItmId() {
        return (String) getAttributeInternal(TRANSITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmId.
     * @param value value to set the  TransItmId
     */
    public void setTransItmId(String value) {
        setAttributeInternal(TRANSITMID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransQuotSCNo.
     * @return the TransQuotSCNo
     */
    public String getTransQuotSCNo() {
        return (String) getAttributeInternal(TRANSQUOTSCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransQuotSCNo.
     * @param value value to set the  TransQuotSCNo
     */
    public void setTransQuotSCNo(String value) {
        setAttributeInternal(TRANSQUOTSCNO, value);
    }

    /**
     * Gets the attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @return the TAX_AFTER_DISC_FLG
     */
    public String getTaxAfterDiscFlg() {
        return (String) getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @param value value to set the TAX_AFTER_DISC_FLG
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transtaxRule.
     * @return the transtaxRule
     */
    public Integer gettranstaxRule() {
        return (Integer) getAttributeInternal(TRANSTAXRULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transtaxRule.
     * @param value value to set the  transtaxRule
     */
    public void settranstaxRule(Integer value) {
        setAttributeInternal(TRANSTAXRULE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxEmptd.
     * @return the TransTaxEmptd
     */
    public String getTransTaxEmptd() {
        return (String) getAttributeInternal(TRANSTAXEMPTD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxEmptd.
     * @param value value to set the  TransTaxEmptd
     */
    public void setTransTaxEmptd(String value) {
        setAttributeInternal(TRANSTAXEMPTD, value);
    }

    /**
     * Gets the attribute value for DOC_STAT using the alias name DocStat.
     * @return the DOC_STAT
     */
    public Integer getDocStat() {
        return (Integer) getAttributeInternal(DOCSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_STAT using the alias name DocStat.
     * @param value value to set the DOC_STAT
     */
    public void setDocStat(Integer value) {
        setAttributeInternal(DOCSTAT, value);
    }

    /**
     * Gets the attribute value for AUTH_STAT using the alias name AuthStat.
     * @return the AUTH_STAT
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT using the alias name AuthStat.
     * @param value value to set the AUTH_STAT
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }


    /**
     * Gets the attribute value for DOC_TYPE using the alias name DocType.
     * @return the DOC_TYPE
     */
    public Integer getDocType() {
        return (Integer) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE using the alias name DocType.
     * @param value value to set the DOC_TYPE
     */
    public void setDocType(Integer value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for AUTH_STAT_DT using the alias name AuthStatDt.
     * @return the AUTH_STAT_DT
     */
    public Timestamp getAuthStatDt() {
        return (Timestamp) getAttributeInternal(AUTHSTATDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT_DT using the alias name AuthStatDt.
     * @param value value to set the AUTH_STAT_DT
     */
    public void setAuthStatDt(Timestamp value) {
        setAttributeInternal(AUTHSTATDT, value);
    }

    /**
     * Gets the attribute value for DOC_STAT_DT using the alias name DocStatDt.
     * @return the DOC_STAT_DT
     */
    public Timestamp getDocStatDt() {
        return (Timestamp) getAttributeInternal(DOCSTATDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_STAT_DT using the alias name DocStatDt.
     * @param value value to set the DOC_STAT_DT
     */
    public void setDocStatDt(Timestamp value) {
        setAttributeInternal(DOCSTATDT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransTotalPmtAmt.
     * @return the TransTotalPmtAmt
     */
    public Number getTransTotalPmtAmt() {
        if(getAttributeInternal(TRANSTOTALPMTAMT)!=null){
            Number conv=new Number(1);
            if(getCurrConvFctr()!=null)
              conv=getCurrConvFctr();
             Number totalAmt=(Number)(((Number)getAttributeInternal(TRANSTOTALPMTAMT)).multiply(conv)).round(6);
            setTotAmtSp((Number)getAttributeInternal(TRANSTOTALPMTAMT));
            setTotAmtBs(totalAmt);
        return (Number) getAttributeInternal(TRANSTOTALPMTAMT);
        }else {
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getSvcScItm2();
            RowQualifier rq=new RowQualifier(itmvo);
            rq.setWhereClause("DocId= '"+getDocId()+"' and SvcItmFlg= 'Y'");
            Row [] rr1=itmvo.getFilteredRows(rq);
            Number sum=new Number(0);
            Number itmQty=new Number(0);
            Number itmPrice=new Number(0);
            Number taxAmt=new Number(0);
            Number discAmt=new Number(0);
                Number totAmt=new Number(0);
            if(rr1.length>0){
                for(Row r : rr1){
                    if(r.getAttribute("ItmQty")!=null)
                        itmQty=(Number)r.getAttribute("ItmQty");
                    if(r.getAttribute("ItmPrice")!=null)
                        itmPrice=(Number)r.getAttribute("ItmPrice");
                    if(r.getAttribute("TaxAmt")!=null)
                        taxAmt=(Number)r.getAttribute("TaxAmt");
                    if(r.getAttribute("DiscAmt")!=null)
                        discAmt=(Number)r.getAttribute("DiscAmt");
                    
                    totAmt=(Number)((Number)itmQty.multiply(itmPrice).add(taxAmt).minus(discAmt)).round(6);
                    sum=sum.add(totAmt);
                }
                _log.info("total sum is ---------------------------------- "+sum);
               
               // AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
                Number conv=new Number(1);
                if(getCurrConvFctr()!=null)
                  conv=getCurrConvFctr();
                Number totalAmt=(Number)(sum.multiply(conv)).round(6);
                setTotAmtSp(sum);
                setTotAmtBs(totalAmt);
                
               return sum;
            }
            
        }
        return (Number) getAttributeInternal(TRANSTOTALPMTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalPmtAmt.
     * @param value value to set the  TransTotalPmtAmt
     */
    public void setTransTotalPmtAmt(Number value) {
        setAttributeInternal(TRANSTOTALPMTAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSvcShdlDt.
     * @return the TransSvcShdlDt
     */
    public Timestamp getTransSvcShdlDt() {
        return (Timestamp) getAttributeInternal(TRANSSVCSHDLDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSvcShdlDt.
     * @param value value to set the  TransSvcShdlDt
     */
    public void setTransSvcShdlDt(Timestamp value) {
        setAttributeInternal(TRANSSVCSHDLDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransScNoDocId.
     * @return the TransScNoDocId
     */
    public String getTransScNoDocId() {
        return (String) getAttributeInternal(TRANSSCNODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScNoDocId.
     * @param value value to set the  TransScNoDocId
     */
    public void setTransScNoDocId(String value) {
        setAttributeInternal(TRANSSCNODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoLoc.
     * @return the TransEoLoc
     */
    public String getTransEoLoc() {
        return (String) getAttributeInternal(TRANSEOLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoLoc.
     * @param value value to set the  TransEoLoc
     */
    public void setTransEoLoc(String value) {
        setAttributeInternal(TRANSEOLOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoLocId.
     * @return the TransEoLocId
     */
    public String getTransEoLocId() {
        return (String) getAttributeInternal(TRANSEOLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoLocId.
     * @param value value to set the  TransEoLocId
     */
    public void setTransEoLocId(String value) {
        setAttributeInternal(TRANSEOLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRmksLoc.
     * @return the TransRmksLoc
     */
    public String getTransRmksLoc() {
        return (String) getAttributeInternal(TRANSRMKSLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRmksLoc.
     * @param value value to set the  TransRmksLoc
     */
    public void setTransRmksLoc(String value) {
        setAttributeInternal(TRANSRMKSLOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocStrtDt.
     * @return the TransLocStrtDt
     */
    public Timestamp getTransLocStrtDt() {
        if(getAttributeInternal(TRANSLOCSTRTDT)!=null){
          return (Timestamp) getAttributeInternal(TRANSLOCSTRTDT);
        }else{
            return getPrdFm();
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocStrtDt.
     * @param value value to set the  TransLocStrtDt
     */
    public void setTransLocStrtDt(Timestamp value) {
        setAttributeInternal(TRANSLOCSTRTDT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransLocToDt.
     * @return the TransLocToDt
     */
    public Timestamp getTransLocToDt() {
        if(getAttributeInternal(TRANSLOCTODT)!=null)
        return (Timestamp) getAttributeInternal(TRANSLOCTODT);
        else
        return getPrdTo();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocToDt.
     * @param value value to set the  TransLocToDt
     */
    public void setTransLocToDt(Timestamp value) {
        setAttributeInternal(TRANSLOCTODT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute lovScNoSwitcher.
     * @return the lovScNoSwitcher
     */
    public String getlovScNoSwitcher() {
        return (String) getAttributeInternal(LOVSCNOSWITCHER);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
          CallableStatement st = null;
          try {
               st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               st.registerOutParameter(1, sqlReturnType);
              if (bindVars != null) {
                  for (int z = 0; z < bindVars.length; z++) {
                      st.setObject(z + 2, bindVars[z]);
                  }
              }
              st.executeUpdate();

              return st.getObject(1);
          } catch (SQLException e) {
              
             int end = e.getMessage().indexOf("\n");
              //  throw new JboException(e.getMessage().substring(11, end));
              String msg = e.getMessage();
              FacesMessage ermsg = new FacesMessage(msg);
              ermsg.setSeverity(FacesMessage.SEVERITY_ERROR);
              FacesContext.getCurrentInstance().addMessage(null, ermsg);
            //  throw new JboException(e);
              return null;
          } finally {
              if (st != null) {
                  try {
                      st.close();
                  } catch (SQLException e) {
                        e.printStackTrace();}
              }
          }
      }
    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScItm.
     */
    public RowIterator getSvcScItm() {
        return (RowIterator) getAttributeInternal(SVCSCITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScOc.
     */
    public RowIterator getSvcScOc() {
        return (RowIterator) getAttributeInternal(SVCSCOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScPmtSchdl.
     */
    public RowIterator getSvcScPmtSchdl() {
        return (RowIterator) getAttributeInternal(SVCSCPMTSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScSvcSchdl.
     */
    public RowIterator getSvcScSvcSchdl() {
        return (RowIterator) getAttributeInternal(SVCSCSVCSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScAttch.
     */
    public RowIterator getSvcScAttch() {
        return (RowIterator) getAttributeInternal(SVCSCATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScLoc.
     */
    public RowIterator getSvcScLoc() {
        return (RowIterator) getAttributeInternal(SVCSCLOC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DualVO1.
     */
    public RowSet getDualVO1() {
        return (RowSet) getAttributeInternal(DUALVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCstmrVO.
     */
    public RowSet getLovCstmrVO() {
        return (RowSet) getAttributeInternal(LOVCSTMRVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTypeVO.
     */
    public RowSet getLovDiscTypeVO() {
        return (RowSet) getAttributeInternal(LOVDISCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrVO.
     */
    public RowSet getLovCurrVO() {
        return (RowSet) getAttributeInternal(LOVCURRVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SCTypeVO.
     */
    public RowSet getSCTypeVO() {
        return (RowSet) getAttributeInternal(SCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCtcCycleVO.
     */
    public RowSet getLovCtcCycleVO() {
        return (RowSet) getAttributeInternal(LOVCTCCYCLEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCycleVO.
     */
    public RowSet getLovCycleVO() {
        return (RowSet) getAttributeInternal(LOVCYCLEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCtcTypeVO.
     */
    public RowSet getLovCtcTypeVO() {
        return (RowSet) getAttributeInternal(LOVCTCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmVO.
     */
    public RowSet getLovItmVO() {
        return (RowSet) getAttributeInternal(LOVITMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRqrTypeVO.
     */
    public RowSet getLovRqrTypeVO() {
        return (RowSet) getAttributeInternal(LOVRQRTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDoctypeVO.
     */
    public RowSet getLovDoctypeVO() {
        return (RowSet) getAttributeInternal(LOVDOCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotNScNoVO.
     */
    public RowSet getLovQuotNScNoVO() {
        return (RowSet) getAttributeInternal(LOVQUOTNSCNOVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAuthStatVO.
     */
    public RowSet getLovAuthStatVO() {
        return (RowSet) getAttributeInternal(LOVAUTHSTATVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO.
     */
    public RowSet getLovOrgIdVO() {
        return (RowSet) getAttributeInternal(LOVORGIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrVO.
     */
    public RowSet getLovUsrVO() {
        return (RowSet) getAttributeInternal(LOVUSRVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppEoAddsVO.
     */
    public RowSet getLovAppEoAddsVO() {
        return (RowSet) getAttributeInternal(LOVAPPEOADDSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBfrExpiryVO.
     */
    public RowSet getLovBfrExpiryVO() {
        return (RowSet) getAttributeInternal(LOVBFREXPIRYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRplctPrevCntrctVO.
     */
    public RowSet getLovRplctPrevCntrctVO() {
        return (RowSet) getAttributeInternal(LOVRPLCTPREVCNTRCTVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

