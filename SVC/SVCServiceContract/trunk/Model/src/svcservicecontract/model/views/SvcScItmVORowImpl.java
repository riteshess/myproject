package svcservicecontract.model.views;

//import java.sql.Timestamp;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.HashMap;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
//import oracle.jbo.domain.Date;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.domain.Timestamp;

import oracle.sql.NUMBER;

import svcservicecontract.model.entities.SvcScItmEOImpl;
import svcservicecontract.model.services.AppModuleAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 16 19:17:25 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCSCITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmNmBill {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmNmBill();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmNmBill((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmQty {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmQty();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmQty((Number) value);
            }
        }
        ,
        ItmPrice {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number) value);
            }
        }
        ,
        DiscType {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        DiscAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getDiscAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setDiscAmt((Number) value);
            }
        }
        ,
        TaxAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTaxAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTaxAmt((Number) value);
            }
        }
        ,
        ItmAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmAmt((Number) value);
            }
        }
        ,
        PrdFm {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getPrdFm();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setPrdFm((Timestamp) value);
            }
        }
        ,
        PrdTo {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getPrdTo();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setPrdTo((Timestamp) value);
            }
        }
        ,
        InstlDt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getInstlDt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setInstlDt((Timestamp) value);
            }
        }
        ,
        OwnSupplied {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getOwnSupplied();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setOwnSupplied((String) value);
            }
        }
        ,
        PartyNm {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getPartyNm();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setPartyNm((String) value);
            }
        }
        ,
        ItmStatOnSs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmStatOnSs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmStatOnSs((Integer) value);
            }
        }
        ,
        RplcRpr {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getRplcRpr();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setRplcRpr((String) value);
            }
        }
        ,
        FullRplc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getFullRplc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setFullRplc((String) value);
            }
        }
        ,
        SvcFoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcFoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setSvcFoc((String) value);
            }
        }
        ,
        SpareFoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSpareFoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setSpareFoc((String) value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmPriceBs((Number) value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setDiscAmtBs((Number) value);
            }
        }
        ,
        TaxAmtBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTaxAmtBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTaxAmtBs((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmNmTrans {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmNmTrans();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmNmTrans((String) value);
            }
        }
        ,
        UomNmTrans {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getUomNmTrans();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setUomNmTrans((String) value);
            }
        }
        ,
        TaxableAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTaxableAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTaxableAmt((Number) value);
            }
        }
        ,
        TaxableAmtBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTaxableAmtBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTaxableAmtBs((Number) value);
            }
        }
        ,
        TransItmNm {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransItmNm();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransItmNm((String) value);
            }
        }
        ,
        TransItmAmtSp {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransItmAmtSp();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransItmAmtSp((Number) value);
            }
        }
        ,
        TransTaxAmtSp {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransTaxAmtSp();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransTaxAmtSp((Number) value);
            }
        }
        ,
        TransTaxRule {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransTaxRule();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransTaxRule((Integer) value);
            }
        }
        ,
        TransTaxRuleId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransTaxRuleId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransTaxRuleId((Integer) value);
            }
        }
        ,
        TranstaxEmpt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTranstaxEmpt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTranstaxEmpt((String) value);
            }
        }
        ,
        TransPayMode {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransPayMode();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransPayMode((Integer) value);
            }
        }
        ,
        TransPayDate {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransPayDate();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransPayDate((Timestamp) value);
            }
        }
        ,
        TransPayAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransPayAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransPayAmt((Number) value);
            }
        }
        ,
        TransTotAmt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransTotAmt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransTotAmt((Number) value);
            }
        }
        ,
        TransTotsum {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransTotsum();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransTotsum((Number) value);
            }
        }
        ,
        TransRqmtArea {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransRqmtArea();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransRqmtArea((Integer) value);
            }
        }
        ,
        TransEmpNm {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransEmpNm();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransEmpNm((String) value);
            }
        }
        ,
        TransEmpCode {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransEmpCode();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransEmpCode((Integer) value);
            }
        }
        ,
        SvcItmFlg {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcItmFlg();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setSvcItmFlg((String) value);
            }
        }
        ,
        ItmExists {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmExists();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmExists((String) value);
            }
        }
        ,
        AmcMovFlg {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getAmcMovFlg();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAmcMovFlg((String) value);
            }
        }
        ,
        AmcFlg {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getAmcFlg();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAmcFlg((String) value);
            }
        }
        ,
        ScCalcType {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScCalcType();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScCalcType((String) value);
            }
        }
        ,
        ScCalcVal {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScCalcVal();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScCalcVal((Number) value);
            }
        }
        ,
        ScRateBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScRateBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScRateBs((Number) value);
            }
        }
        ,
        ScRateSp {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScRateSp();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScRateSp((Number) value);
            }
        }
        ,
        ScAmtBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScAmtBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScAmtBs((Number) value);
            }
        }
        ,
        ScAmtSp {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScAmtSp();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScAmtSp((Number) value);
            }
        }
        ,
        ScAmtNetSp {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScAmtNetSp();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScAmtNetSp((Number) value);
            }
        }
        ,
        ScAmtNetBs {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getScAmtNetBs();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setScAmtNetBs((Number) value);
            }
        }
        ,
        TransIsItemFoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransIsItemFoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransIsItemFoc((String) value);
            }
        }
        ,
        TransItmLoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransItmLoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransItmLoc((String) value);
            }
        }
        ,
        TransLocId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransLocId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransLocId((String) value);
            }
        }
        ,
        TransLocAddsId {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransLocAddsId();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransLocAddsId((String) value);
            }
        }
        ,
        TransLocDesc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransLocDesc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransLocDesc((String) value);
            }
        }
        ,
        TransStartDt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransStartDt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransStartDt((Timestamp) value);
            }
        }
        ,
        TransToDt {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransToDt();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransToDt((Timestamp) value);
            }
        }
        ,
        TransAddsLocNm {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransAddsLocNm();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransAddsLocNm((String) value);
            }
        }
        ,
        PendQty {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        }
        ,
        ItmSrTrans {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getItmSrTrans();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setItmSrTrans((String) value);
            }
        }
        ,
        TransItmSerialFlg {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getTransItmSerialFlg();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setTransItmSerialFlg((String) value);
            }
        }
        ,
        SvcScItmFoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcScItmFoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScSvcAsgn {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcScSvcAsgn();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScTr {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcScTr();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScItmLoc {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcScItmLoc();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScItmSr {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getSvcScItmSr();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovItmVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTypeVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovDiscTypeVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmStatusSSVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovItmStatusSSVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxRuleVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovTaxRuleVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPaymentModeVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovPaymentModeVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEmpCodeVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovEmpCodeVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRqmtAreaVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovRqmtAreaVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRplcVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovRplcVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LocSvcScLocVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLocSvcScLocVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAddsVO {
            public Object get(SvcScItmVORowImpl obj) {
                return obj.getLovAddsVO();
            }

            public void put(SvcScItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SvcScItmVORowImpl object);

        public abstract void put(SvcScItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    ADFLogger adfLog=(ADFLogger)ADFLogger.createADFLogger(SvcScItmVORowImpl.class);


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMNMBILL = AttributesEnum.ItmNmBill.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int DISCAMT = AttributesEnum.DiscAmt.index();
    public static final int TAXAMT = AttributesEnum.TaxAmt.index();
    public static final int ITMAMT = AttributesEnum.ItmAmt.index();
    public static final int PRDFM = AttributesEnum.PrdFm.index();
    public static final int PRDTO = AttributesEnum.PrdTo.index();
    public static final int INSTLDT = AttributesEnum.InstlDt.index();
    public static final int OWNSUPPLIED = AttributesEnum.OwnSupplied.index();
    public static final int PARTYNM = AttributesEnum.PartyNm.index();
    public static final int ITMSTATONSS = AttributesEnum.ItmStatOnSs.index();
    public static final int RPLCRPR = AttributesEnum.RplcRpr.index();
    public static final int FULLRPLC = AttributesEnum.FullRplc.index();
    public static final int SVCFOC = AttributesEnum.SvcFoc.index();
    public static final int SPAREFOC = AttributesEnum.SpareFoc.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int UOMNMTRANS = AttributesEnum.UomNmTrans.index();
    public static final int TAXABLEAMT = AttributesEnum.TaxableAmt.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSITMAMTSP = AttributesEnum.TransItmAmtSp.index();
    public static final int TRANSTAXAMTSP = AttributesEnum.TransTaxAmtSp.index();
    public static final int TRANSTAXRULE = AttributesEnum.TransTaxRule.index();
    public static final int TRANSTAXRULEID = AttributesEnum.TransTaxRuleId.index();
    public static final int TRANSTAXEMPT = AttributesEnum.TranstaxEmpt.index();
    public static final int TRANSPAYMODE = AttributesEnum.TransPayMode.index();
    public static final int TRANSPAYDATE = AttributesEnum.TransPayDate.index();
    public static final int TRANSPAYAMT = AttributesEnum.TransPayAmt.index();
    public static final int TRANSTOTAMT = AttributesEnum.TransTotAmt.index();
    public static final int TRANSTOTSUM = AttributesEnum.TransTotsum.index();
    public static final int TRANSRQMTAREA = AttributesEnum.TransRqmtArea.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSEMPCODE = AttributesEnum.TransEmpCode.index();
    public static final int SVCITMFLG = AttributesEnum.SvcItmFlg.index();
    public static final int ITMEXISTS = AttributesEnum.ItmExists.index();
    public static final int AMCMOVFLG = AttributesEnum.AmcMovFlg.index();
    public static final int AMCFLG = AttributesEnum.AmcFlg.index();
    public static final int SCCALCTYPE = AttributesEnum.ScCalcType.index();
    public static final int SCCALCVAL = AttributesEnum.ScCalcVal.index();
    public static final int SCRATEBS = AttributesEnum.ScRateBs.index();
    public static final int SCRATESP = AttributesEnum.ScRateSp.index();
    public static final int SCAMTBS = AttributesEnum.ScAmtBs.index();
    public static final int SCAMTSP = AttributesEnum.ScAmtSp.index();
    public static final int SCAMTNETSP = AttributesEnum.ScAmtNetSp.index();
    public static final int SCAMTNETBS = AttributesEnum.ScAmtNetBs.index();
    public static final int TRANSISITEMFOC = AttributesEnum.TransIsItemFoc.index();
    public static final int TRANSITMLOC = AttributesEnum.TransItmLoc.index();
    public static final int TRANSLOCID = AttributesEnum.TransLocId.index();
    public static final int TRANSLOCADDSID = AttributesEnum.TransLocAddsId.index();
    public static final int TRANSLOCDESC = AttributesEnum.TransLocDesc.index();
    public static final int TRANSSTARTDT = AttributesEnum.TransStartDt.index();
    public static final int TRANSTODT = AttributesEnum.TransToDt.index();
    public static final int TRANSADDSLOCNM = AttributesEnum.TransAddsLocNm.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int ITMSRTRANS = AttributesEnum.ItmSrTrans.index();
    public static final int TRANSITMSERIALFLG = AttributesEnum.TransItmSerialFlg.index();
    public static final int SVCSCITMFOC = AttributesEnum.SvcScItmFoc.index();
    public static final int SVCSCSVCASGN = AttributesEnum.SvcScSvcAsgn.index();
    public static final int SVCSCTR = AttributesEnum.SvcScTr.index();
    public static final int SVCSCITMLOC = AttributesEnum.SvcScItmLoc.index();
    public static final int SVCSCITMSR = AttributesEnum.SvcScItmSr.index();
    public static final int LOVITMVO = AttributesEnum.LovItmVO.index();
    public static final int LOVDISCTYPEVO = AttributesEnum.LovDiscTypeVO.index();
    public static final int LOVITMSTATUSSSVO = AttributesEnum.LovItmStatusSSVO.index();
    public static final int LOVTAXRULEVO = AttributesEnum.LovTaxRuleVO.index();
    public static final int LOVPAYMENTMODEVO = AttributesEnum.LovPaymentModeVO.index();
    public static final int LOVEMPCODEVO = AttributesEnum.LovEmpCodeVO.index();
    public static final int LOVRQMTAREAVO = AttributesEnum.LovRqmtAreaVO.index();
    public static final int LOVRPLCVO = AttributesEnum.LovRplcVO.index();
    public static final int LOCSVCSCLOCVO = AttributesEnum.LocSvcScLocVO.index();
    public static final int LOVADDSVO = AttributesEnum.LovAddsVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScItmVORowImpl() {
    }
    
    /**
     * Gets SvcScItmEO entity object.
     * @return the SvcScItmEO
     */
    public SvcScItmEOImpl getSvcScItmEO() {
        return (SvcScItmEOImpl) getEntity(ENTITY_SVCSCITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_NM_BILL using the alias name ItmNmBill.
     * @return the ITM_NM_BILL
     */
    public String getItmNmBill() {
        return (String) getAttributeInternal(ITMNMBILL);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_NM_BILL using the alias name ItmNmBill.
     * @param value value to set the ITM_NM_BILL
     */
    public void setItmNmBill(String value) {
        setAttributeInternal(ITMNMBILL, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        /* if(getItmPrice()!=null){
            Number itmprice=(Number)getItmPrice();
            Number total=(Number)itmprice.multiply(value).round(2);
            //value=total;
            setTaxableAmt(total);
            setTransTotAmt(total);
        
          //  System.out.println("get taxable amount is "+getTaxableAmt());
        } */
        
        if (value != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            String flag = am.getSvcSc1().getCurrentRow().getAttribute("TaxAfterDiscFlg").toString();
            setPendQty(value);
            if (value != null && getItmPrice() != null) {
                
            HashMap hm=am.getTotalAndTaxableAmt(flag, value, getItmPrice(), getDiscVal(), getDiscType());
          //  adfLog.info("taxable-------- "+hm.get("TaxableAmount")+" total amount value is--------- "+hm.get("TotalAmt")+"discount amount is "+hm.get("DiscountAmt"));
           
             setDiscAmt((Number)hm.get("DiscountAmt"));
             setTransTotAmt((Number)hm.get("TotalAmt"));
             setTaxableAmt((Number)hm.get("TaxableAmount"));
        
                Row curr=am.getSvcSc1().getCurrentRow();     
                BigDecimal bg = callStoredFunctionLatest("SVC.FN_GET_AMC_ITM_PRICE(?,?,?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                                          getCldId(),getSlocId(), getOrgId(),getDocId(), 
                                                          curr.getAttribute("AddsIdEo"),curr.getAttribute("EoId"),getItmId(),curr.getAttribute("CurrIdSp"),
                                                          getScCalcType(),(Number)getScCalcVal()
                });
           
            }
        }else{
            setAttributeInternal(ITMQTY, new Number(0)); 
        }
        setAttributeInternal(ITMQTY, value);
    }
    
    /**procedure to return value for sc amt sp and sc amt bs*/
    private static int NUMBER = Types.NUMERIC;
    private static int VARCHAR = Types.VARCHAR;
    protected BigDecimal callStoredFunctionLatest(String stmt, Object[] bindVars) {
        //used to get latest price
        CallableStatement st = null;
        try {
            /** 1. Create a JDBC CallabledStatement */
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            st = am.getDBTransaction().createCallableStatement("begin " + stmt + ";end;", 0);
            /** 2. Register the first bind variable for the return value. and last 2 variable for output variable of function. */
            st.setObject(1, bindVars[0]);
            st.setObject(2, bindVars[1]);
            st.setObject(3, bindVars[2]);
            st.setObject(4, bindVars[3]);
            st.setObject(5, bindVars[4]);
            st.setObject(6, bindVars[5]);
            st.setObject(7, bindVars[6]);
            st.setObject(8, bindVars[7]);
            st.setObject(9, bindVars[8]);
            st.setObject(10, bindVars[9]);
            st.registerOutParameter(11, NUMBER);
            st.registerOutParameter(12, NUMBER);
            /** 5. Set the value of user-supplied bind vars in the stmt */
            st.executeUpdate();
            BigDecimal bb = new BigDecimal(0);
            try {
                if (st.getObject(5) != null) {
                    bb = (BigDecimal) st.getObject(5);
                }
                setScAmtSp((Number)st.getObject(11));
                setScAmtBs((Number)st.getObject(12));
                //setTransLatestDate(st.getObject(7).toString());
                //setTransLatestSupp(st.getObject(6).toString());
                /*       setLatestPrice((BigDecimal)st.getObject(4));
                setSuppNmlatest((st.getObject(5).toString()));
                setDatelatest(st.getObject(6).toString());

           */
            } catch (NullPointerException e) {
                System.out.println(e);
                e.printStackTrace();
            }

            return bb;
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    /** 7. Close the statement */
                    st.close();
                } catch (SQLException e) {

                }
            }
        }
    }



    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        if(getAttributeInternal(ITMPRICE)!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            
            Number conv=new Number(1);
            if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
              conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
            Number itmpricebs=(Number)(((Number)getAttributeInternal(ITMPRICE)).multiply(conv)).round(6);
            setItmPriceBs(itmpricebs);
        }
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
       // if(getItmQty()!=null){
            /*  Number itmQty=(Number)getItmQty();
            Number total=(Number)itmQty.multiply(value).round(2);
            //value=total;
            setTaxableAmt(total);
            setTransTotAmt(total); */
            if (value != null) {
                AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
                String flag = am.getSvcSc1().getCurrentRow().getAttribute("TaxAfterDiscFlg").toString();
                if (value != null && getItmQty() != null) {
                    HashMap hm=am.getTotalAndTaxableAmt(flag, getItmQty(), value, getDiscVal(), getDiscType());
             //       adfLog.info("taxable-------- "+hm.get("TaxableAmount")+" total amount value is--------- "+hm.get("TotalAmt")+"discount amount is "+hm.get("DiscountAmt"));
                    
                     setDiscAmt((Number)hm.get("DiscountAmt"));
                     setTransTotAmt((Number)hm.get("TotalAmt"));
                     setTaxableAmt((Number)hm.get("TaxableAmount"));
                }
                //ArrayList ar=am.getTotalAndTaxableAmt();
         //   }
        
          //  System.out.println("get taxable amount is "+getTaxableAmt());
            }else{
                setAttributeInternal(ITMPRICE, new Number(0));
            }
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        if (value != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            String flag = am.getSvcSc1().getCurrentRow().getAttribute("TaxAfterDiscFlg").toString();
            if (value != null && getItmPrice() != null && getItmQty()!=null) {
                
            HashMap hm=am.getTotalAndTaxableAmt(flag, getItmQty(), getItmPrice(), getDiscVal(), value);
           // adfLog.info("taxable-------- "+hm.get("TaxableAmount")+" total amount value is--------- "+hm.get("TotalAmt")+"discount amount is "+hm.get("DiscountAmt"));
           
             setDiscAmt((Number)hm.get("DiscountAmt"));
             setTransTotAmt((Number)hm.get("TotalAmt"));
             setTaxableAmt((Number)hm.get("TaxableAmount"));
            }
        }
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
        if (value != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            String flag = am.getSvcSc1().getCurrentRow().getAttribute("TaxAfterDiscFlg").toString();
            if (value != null && getItmPrice() != null && getItmQty()!=null) {
                
            HashMap hm=am.getTotalAndTaxableAmt(flag, getItmQty(), getItmPrice(), value, getDiscType());
          //  adfLog.info("taxable-------- "+hm.get("TaxableAmount")+" total amount value is--------- "+hm.get("TotalAmt")+"discount amount is "+hm.get("DiscountAmt"));
        
             setDiscAmt((Number)hm.get("DiscountAmt"));
             setTransTotAmt((Number)hm.get("TotalAmt"));
             setTaxableAmt((Number)hm.get("TaxableAmount"));
            }
        }else {
            setAttributeInternal(DISCVAL, new Number(0));
        }
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for DISC_AMT using the alias name DiscAmt.
     * @return the DISC_AMT
     */
    public Number getDiscAmt() {
        if(getAttributeInternal(DISCAMT)!=null){
        Number conv=new Number(1);
        AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
        if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
           conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
        Number discbs=(Number)(((Number)getAttributeInternal(DISCAMT)).multiply(conv)).round(6);
        //  setTaxableAmtBs(taxableAmtBS);
        setDiscAmtBs(discbs);
        
        }
        return (Number) getAttributeInternal(DISCAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT using the alias name DiscAmt.
     * @param value value to set the DISC_AMT
     */
    public void setDiscAmt(Number value) {
        /*  if (value != null) {
          //  this.getDBTransaction().postChanges();
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            ViewObjectImpl svcvo = am.getSvcSc1();
            if (svcvo.getCurrentRow().getAttribute("TaxAfterDiscFlg") != null) {
                String taxflg = svcvo.getCurrentRow().getAttribute("TaxAfterDiscFlg").toString();
                 Number newtot =new Number(0);
                if ("Y".equalsIgnoreCase(taxflg)) {
                    if("A".equalsIgnoreCase(getDiscType())){
                   newtot =(Number) getItmQty().multiply(getItmPrice()).minus(value);
                    setTaxableAmt(newtot);
                    setDiscVal(value);
                    }else if("P".equalsIgnoreCase(getDiscType())){
                       newtot = (Number)getItmPrice().multiply(getItmQty()).multiply(value).divide(new Number(100)).round(6);
                       setTaxableAmt((Number)getItmPrice().multiply(getItmQty()).minus(newtot));
                        setDiscVal(newtot);
                    }
                }else{
                    if("A".equalsIgnoreCase(getDiscType())){
                    newtot =(Number) getItmQty().multiply(getItmPrice()).minus(value);
                    setTransTotAmt(newtot);
                    setDiscVal(value);
                    }else if("P".equalsIgnoreCase(getDiscType())){
                       newtot = (Number)getItmPrice().multiply(getItmQty()).multiply(value).divide(new Number(100)).round(6);
                       setTransTotAmt((Number)getItmQty().multiply(getItmPrice()).minus(newtot));
                       setDiscVal(newtot);
                    }
                }
                if(getTaxAmt()!=null){
                    if("A".equalsIgnoreCase(getDiscType())){
                    newtot =(Number) getTaxAmt().add(getItmQty().multiply(getItmPrice())).minus(value);
                    setTransTotAmt(newtot);
                  //  setDiscVal(value);
                    }else if("P".equalsIgnoreCase(getDiscType())){
                       newtot = (Number)getItmPrice().multiply(getItmQty()).multiply(value).divide(new Number(100)).round(6);
                       setTransTotAmt((Number)getTaxAmt().add(getItmQty().multiply(getItmPrice())).minus(newtot));
                    //   setDiscVal(newtot);
                    }   
                    
                 /*   Number totamt = (Number) getTaxAmt().add(getItmPrice().multiply(getItmQty())).minus(value);
                 setTransTotAmt(totamt); 
                }
             }
        */   
        setAttributeInternal(DISCAMT, value);
       // }
    }

    /**
     * Gets the attribute value for TAX_AMT using the alias name TaxAmt.
     * @return the TAX_AMT
     */
    public Number getTaxAmt() {
        if(getAttributeInternal(TAXAMT)!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            
            Number conv=new Number(1);
            if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
              conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
            Number taxbase=(Number)(((Number)getAttributeInternal(TAXAMT)).multiply(conv)).round(6);
           // setItmPriceBs(itmpricebs);
            setTaxAmtBs(taxbase);
        }
        return (Number) getAttributeInternal(TAXAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT using the alias name TaxAmt.
     * @param value value to set the TAX_AMT
     */
    public void setTaxAmt(Number value) {
        setAttributeInternal(TAXAMT, value);
    }

    /**
     * Gets the attribute value for ITM_AMT using the alias name ItmAmt.
     * @return the ITM_AMT
     */
    public Number getItmAmt() {
        if(getAttributeInternal(ITMAMT)!=null){
            Number conv=new Number(1);
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            
            if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
              conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
            Number itmamtbs=(Number)(((Number)getAttributeInternal(ITMAMT)).multiply(conv)).round(6);
           // setItmPriceBs(itmpricebs);
            setItmAmtBs(itmamtbs);
        }
        return (Number) getAttributeInternal(ITMAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT using the alias name ItmAmt.
     * @param value value to set the ITM_AMT
     */
    public void setItmAmt(Number value) {
        setAttributeInternal(ITMAMT, value);
    }

    /**
     * Gets the attribute value for PRD_FM using the alias name PrdFm.
     * @return the PRD_FM
     */
    public Timestamp getPrdFm() {
        return (Timestamp) getAttributeInternal(PRDFM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_FM using the alias name PrdFm.
     * @param value value to set the PRD_FM
     */
    public void setPrdFm(Timestamp value) {
        setAttributeInternal(PRDFM, value);
    }

    /**
     * Gets the attribute value for PRD_TO using the alias name PrdTo.
     * @return the PRD_TO
     */
    public Timestamp getPrdTo() {
        return (Timestamp) getAttributeInternal(PRDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_TO using the alias name PrdTo.
     * @param value value to set the PRD_TO
     */
    public void setPrdTo(Timestamp value) {
        setAttributeInternal(PRDTO, value);
    }

    /**
     * Gets the attribute value for INSTL_DT using the alias name InstlDt.
     * @return the INSTL_DT
     */
    public Timestamp getInstlDt() {
        return (Timestamp) getAttributeInternal(INSTLDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INSTL_DT using the alias name InstlDt.
     * @param value value to set the INSTL_DT
     */
    public void setInstlDt(Timestamp value) {
        setAttributeInternal(INSTLDT, value);
    }

    /**
     * Gets the attribute value for OWN_SUPPLIED using the alias name OwnSupplied.
     * @return the OWN_SUPPLIED
     */
    public String getOwnSupplied() {
        return (String) getAttributeInternal(OWNSUPPLIED);
    }

    /**
     * Sets <code>value</code> as attribute value for OWN_SUPPLIED using the alias name OwnSupplied.
     * @param value value to set the OWN_SUPPLIED
     */
    public void setOwnSupplied(String value) {
        setAttributeInternal(OWNSUPPLIED, value);
    }

    /**
     * Gets the attribute value for PARTY_NM using the alias name PartyNm.
     * @return the PARTY_NM
     */
    public String getPartyNm() {
        return (String) getAttributeInternal(PARTYNM);
    }

    /**
     * Sets <code>value</code> as attribute value for PARTY_NM using the alias name PartyNm.
     * @param value value to set the PARTY_NM
     */
    public void setPartyNm(String value) {
        setAttributeInternal(PARTYNM, value);
    }

    /**
     * Gets the attribute value for ITM_STAT_ON_SS using the alias name ItmStatOnSs.
     * @return the ITM_STAT_ON_SS
     */
    public Integer getItmStatOnSs() {
        return (Integer) getAttributeInternal(ITMSTATONSS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_STAT_ON_SS using the alias name ItmStatOnSs.
     * @param value value to set the ITM_STAT_ON_SS
     */
    public void setItmStatOnSs(Integer value) {
        setAttributeInternal(ITMSTATONSS, value);
    }

    /**
     * Gets the attribute value for RPLC_RPR using the alias name RplcRpr.
     * @return the RPLC_RPR
     */
    public String getRplcRpr() {
        return (String) getAttributeInternal(RPLCRPR);
    }

    /**
     * Sets <code>value</code> as attribute value for RPLC_RPR using the alias name RplcRpr.
     * @param value value to set the RPLC_RPR
     */
    public void setRplcRpr(String value) {
        setAttributeInternal(RPLCRPR, value);
    }

    /**
     * Gets the attribute value for FULL_RPLC using the alias name FullRplc.
     * @return the FULL_RPLC
     */
    public String getFullRplc() {
        return (String) getAttributeInternal(FULLRPLC);
    }

    /**
     * Sets <code>value</code> as attribute value for FULL_RPLC using the alias name FullRplc.
     * @param value value to set the FULL_RPLC
     */
    public void setFullRplc(String value) {
        setAttributeInternal(FULLRPLC, value);
    }

    /**
     * Gets the attribute value for SVC_FOC using the alias name SvcFoc.
     * @return the SVC_FOC
     */
    public String getSvcFoc() {
        return (String) getAttributeInternal(SVCFOC);
    }

    /**
     * Sets <code>value</code> as attribute value for SVC_FOC using the alias name SvcFoc.
     * @param value value to set the SVC_FOC
     */
    public void setSvcFoc(String value) {
        setAttributeInternal(SVCFOC, value);
    }

    /**
     * Gets the attribute value for SPARE_FOC using the alias name SpareFoc.
     * @return the SPARE_FOC
     */
    public String getSpareFoc() {
        return (String) getAttributeInternal(SPAREFOC);
    }

    /**
     * Sets <code>value</code> as attribute value for SPARE_FOC using the alias name SpareFoc.
     * @param value value to set the SPARE_FOC
     */
    public void setSpareFoc(String value) {
        setAttributeInternal(SPAREFOC, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @return the ITM_PRICE_BS
     */
    public Number getItmPriceBs() {
        return (Number) getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @param value value to set the ITM_PRICE_BS
     */
    public void setItmPriceBs(Number value) {
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @return the DISC_AMT_BS
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @param value value to set the DISC_AMT_BS
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @return the TAX_AMT_BS
     */
    public Number getTaxAmtBs() {
        return (Number) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @param value value to set the TAX_AMT_BS
     */
    public void setTaxAmtBs(Number value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    public String getItmNmTrans() {
      
        return (String) getAttributeInternal(ITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
     
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomNmTrans.
     * @return the UomNmTrans
     */
    public String getUomNmTrans() {
        if(getItmUom()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl uomvo=am.getLovUom();
            uomvo.setNamedWhereClauseParam("bindCldId", getCldId());
            uomvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            uomvo.setNamedWhereClauseParam("bindUomId", getItmUom());
            uomvo.executeQuery();
            
            Row [] rr=uomvo.getFilteredRows("UomId", getItmUom());
            if(rr.length>0){
                return rr[0].getAttribute("UomDesc").toString();
            }
        }
        return (String) getAttributeInternal(UOMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomNmTrans.
     * @param value value to set the  UomNmTrans
     */
    public void setUomNmTrans(String value) {
        setAttributeInternal(UOMNMTRANS, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT using the alias name TaxableAmt.
     * @return the TAXABLE_AMT
     */
    public Number getTaxableAmt() {
        if(getAttributeInternal(TAXABLEAMT)!=null){
            Number conv=new Number(1);
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            
            if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
              conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
            Number taxbase=(Number)(((Number)getAttributeInternal(TAXABLEAMT)).multiply(conv)).round(6);
           // setItmPriceBs(itmpricebs);
            setTaxableAmtBs(taxbase);
        }
        return (Number) getAttributeInternal(TAXABLEAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT using the alias name TaxableAmt.
     * @param value value to set the TAXABLE_AMT
     */
    public void setTaxableAmt(Number value) {
        setAttributeInternal(TAXABLEAMT, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT_BS using the alias name TaxableAmtBs.
     * @return the TAXABLE_AMT_BS
     */
    public Number getTaxableAmtBs() {
        return (Number) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT_BS using the alias name TaxableAmtBs.
     * @param value value to set the TAXABLE_AMT_BS
     */
    public void setTaxableAmtBs(Number value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        String itmNm=null;
        if(getItmId()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            itmvo.executeQuery();
            Row [] rr1=itmvo.getFilteredRows("ItmId", getItmId());
            if(rr1.length>0){
                return rr1[0].getAttribute("ItmDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmAmtSp.
     * @return the TransItmAmtSp
     */
    public Number getTransItmAmtSp() {
        return (Number) getAttributeInternal(TRANSITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmAmtSp.
     * @param value value to set the  TransItmAmtSp
     */
    public void setTransItmAmtSp(Number value) {
        setAttributeInternal(TRANSITMAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxAmtSp.
     * @return the TransTaxAmtSp
     */
    public Number getTransTaxAmtSp() {
        return (Number) getAttributeInternal(TRANSTAXAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxAmtSp.
     * @param value value to set the  TransTaxAmtSp
     */
    public void setTransTaxAmtSp(Number value) {
        setAttributeInternal(TRANSTAXAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRule.
     * @return the TransTaxRule
     */
    public Integer getTransTaxRule() {
        return (Integer) getAttributeInternal(TRANSTAXRULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRule.
     * @param value value to set the  TransTaxRule
     */
    public void setTransTaxRule(Integer value) {
        setAttributeInternal(TRANSTAXRULE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRuleId.
     * @return the TransTaxRuleId
     */
    public Integer getTransTaxRuleId() {
        if( getAttributeInternal(TRANSTAXRULEID)!=null){
        return (Integer) getAttributeInternal(TRANSTAXRULEID);
        }else{
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmvo.executeQuery();
            
            Row [] rr=itmvo.getFilteredRows("ItmId", getItmId());
            if(rr.length>0){
               return (Integer)rr[0].getAttribute("TaxRuleId");
            }
        }
        return (Integer) getAttributeInternal(TRANSTAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuleId.
     * @param value value to set the  TransTaxRuleId
     */
    public void setTransTaxRuleId(Integer value) {
        setAttributeInternal(TRANSTAXRULEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranstaxEmpt.
     * @return the TranstaxEmpt
     */
    public String getTranstaxEmpt() {
        
        if(getAttributeInternal(TRANSTAXEMPT)!=null){
         return (String) getAttributeInternal(TRANSTAXEMPT);
        }else{
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmvo.executeQuery();
            
            Row [] rr=itmvo.getFilteredRows("ItmId", getItmId());
            if(rr.length>0){
               return rr[0].getAttribute("TaxExmptFlg").toString();
            }
            
        }
        return (String) getAttributeInternal(TRANSTAXEMPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranstaxEmpt.
     * @param value value to set the  TranstaxEmpt
     */
    public void setTranstaxEmpt(String value) {
        setAttributeInternal(TRANSTAXEMPT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPayMode.
     * @return the TransPayMode
     */
    public Integer getTransPayMode() {
        return (Integer) getAttributeInternal(TRANSPAYMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPayMode.
     * @param value value to set the  TransPayMode
     */
    public void setTransPayMode(Integer value) {
        setAttributeInternal(TRANSPAYMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPayDate.
     * @return the TransPayDate
     */
    public oracle.jbo.domain.Timestamp getTransPayDate() {
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(TRANSPAYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPayDate.
     * @param value value to set the  TransPayDate
     */
    public void setTransPayDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(TRANSPAYDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPayAmt.
     * @return the TransPayAmt
     */
    public Number getTransPayAmt() {
        return (Number) getAttributeInternal(TRANSPAYAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPayAmt.
     * @param value value to set the  TransPayAmt
     */
    public void setTransPayAmt(Number value) {
        setAttributeInternal(TRANSPAYAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotAmt.
     * @return the TransTotAmt
     */
    public Number getTransTotAmt() {
        if(getAttributeInternal(TRANSTOTAMT)!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            
            Number conv=new Number(1);
            if(am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr")!=null)
              conv=(Number)am.getSvcSc1().getCurrentRow().getAttribute("CurrConvFctr");
            Number itmAmtbs=(Number)(((Number)getAttributeInternal(TRANSTOTAMT)).multiply(conv)).round(6);
            setItmAmt((Number) getAttributeInternal(TRANSTOTAMT));
            setItmAmtBs(itmAmtbs);
         return (Number) getAttributeInternal(TRANSTOTAMT);
        }else{
            if(getItmPrice()!=null && getItmQty()!=null){
            Number taxAmt=new Number(0);
            Number discAmt=new Number(0);
            Number itmprice=new Number(0);
            Number itmQty=new Number(0);
            if(getTaxAmt()!=null)
                taxAmt=getTaxAmt();
            
            if(getDiscAmt()!=null)
                discAmt=getDiscAmt();
            
            if(getItmPrice()!=null)
                itmprice=getItmPrice();
            if(getItmQty()!=null)
                itmQty=getItmQty();
            
            Number totAmt=(Number)((Number)itmprice.multiply(itmQty).add(taxAmt).minus(discAmt)).round(6);
            adfLog.info("total amount calculation is "+totAmt);
            return totAmt;
            }
        }
        return (Number) getAttributeInternal(TRANSTOTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotAmt.
     * @param value value to set the  TransTotAmt
     */
    public void setTransTotAmt(Number value) {
        setAttributeInternal(TRANSTOTAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotsum.
     * @return the TransTotsum
     */
    public Number getTransTotsum() {
        return (Number) getAttributeInternal(TRANSTOTSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotsum.
     * @param value value to set the  TransTotsum
     */
    public void setTransTotsum(Number value) {
        setAttributeInternal(TRANSTOTSUM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRqmtArea.
     * @return the TransRqmtArea
     */
    public Integer getTransRqmtArea() {
        return (Integer) getAttributeInternal(TRANSRQMTAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRqmtArea.
     * @param value value to set the  TransRqmtArea
     */
    public void setTransRqmtArea(Integer value) {
        setAttributeInternal(TRANSRQMTAREA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpCode.
     * @return the TransEmpCode
     */
    public Integer getTransEmpCode() {
        return (Integer) getAttributeInternal(TRANSEMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpCode.
     * @param value value to set the  TransEmpCode
     */
    public void setTransEmpCode(Integer value) {
        setAttributeInternal(TRANSEMPCODE, value);
    }

    /**
     * Gets the attribute value for SVC_ITM_FLG using the alias name SvcItmFlg.
     * @return the SVC_ITM_FLG
     */
    public String getSvcItmFlg() {
        return (String) getAttributeInternal(SVCITMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SVC_ITM_FLG using the alias name SvcItmFlg.
     * @param value value to set the SVC_ITM_FLG
     */
    public void setSvcItmFlg(String value) {
        setAttributeInternal(SVCITMFLG, value);
    }

    /**
     * Gets the attribute value for ITM_EXISTS using the alias name ItmExists.
     * @return the ITM_EXISTS
     */
    public String getItmExists() {
        return (String) getAttributeInternal(ITMEXISTS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_EXISTS using the alias name ItmExists.
     * @param value value to set the ITM_EXISTS
     */
    public void setItmExists(String value) {
        setAttributeInternal(ITMEXISTS, value);
    }

    /**
     * Gets the attribute value for AMC_MOV_FLG using the alias name AmcMovFlg.
     * @return the AMC_MOV_FLG
     */
    public String getAmcMovFlg() {
        return (String) getAttributeInternal(AMCMOVFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_MOV_FLG using the alias name AmcMovFlg.
     * @param value value to set the AMC_MOV_FLG
     */
    public void setAmcMovFlg(String value) {
        setAttributeInternal(AMCMOVFLG, value);
    }

    /**
     * Gets the attribute value for AMC_FLG using the alias name AmcFlg.
     * @return the AMC_FLG
     */
    public String getAmcFlg() {
        return (String) getAttributeInternal(AMCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_FLG using the alias name AmcFlg.
     * @param value value to set the AMC_FLG
     */
    public void setAmcFlg(String value) {
        setAttributeInternal(AMCFLG, value);
    }

    /**
     * Gets the attribute value for SC_CALC_TYPE using the alias name ScCalcType.
     * @return the SC_CALC_TYPE
     */
    public String getScCalcType() {
        return (String) getAttributeInternal(SCCALCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_CALC_TYPE using the alias name ScCalcType.
     * @param value value to set the SC_CALC_TYPE
     */
    public void setScCalcType(String value) {
        setAttributeInternal(SCCALCTYPE, value);
    }

    /**
     * Gets the attribute value for SC_CALC_VAL using the alias name ScCalcVal.
     * @return the SC_CALC_VAL
     */
    public Number getScCalcVal() {
        return (Number) getAttributeInternal(SCCALCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_CALC_VAL using the alias name ScCalcVal.
     * @param value value to set the SC_CALC_VAL
     */
    public void setScCalcVal(Number value) {
        if(value==null){
            setAttributeInternal(SCCALCVAL, new Number(0));
        }
        setAttributeInternal(SCCALCVAL, value);
    }

    /**
     * Gets the attribute value for SC_RATE_BS using the alias name ScRateBs.
     * @return the SC_RATE_BS
     */
    public Number getScRateBs() {
        return (Number) getAttributeInternal(SCRATEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_RATE_BS using the alias name ScRateBs.
     * @param value value to set the SC_RATE_BS
     */
    public void setScRateBs(Number value) {
        setAttributeInternal(SCRATEBS, value);
    }

    /**
     * Gets the attribute value for SC_RATE_SP using the alias name ScRateSp.
     * @return the SC_RATE_SP
     */
    public Number getScRateSp() {
        return (Number) getAttributeInternal(SCRATESP);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_RATE_SP using the alias name ScRateSp.
     * @param value value to set the SC_RATE_SP
     */
    public void setScRateSp(Number value) {
        setAttributeInternal(SCRATESP, value);
    }

    /**
     * Gets the attribute value for SC_AMT_BS using the alias name ScAmtBs.
     * @return the SC_AMT_BS
     */
    public Number getScAmtBs() {
        return (Number) getAttributeInternal(SCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_AMT_BS using the alias name ScAmtBs.
     * @param value value to set the SC_AMT_BS
     */
    public void setScAmtBs(Number value) {
        setAttributeInternal(SCAMTBS, value);
    }

    /**
     * Gets the attribute value for SC_AMT_SP using the alias name ScAmtSp.
     * @return the SC_AMT_SP
     */
    public Number getScAmtSp() {
        return (Number) getAttributeInternal(SCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_AMT_SP using the alias name ScAmtSp.
     * @param value value to set the SC_AMT_SP
     */
    public void setScAmtSp(Number value) {
        setAttributeInternal(SCAMTSP, value);
    }

    /**
     * Gets the attribute value for SC_AMT_NET_SP using the alias name ScAmtNetSp.
     * @return the SC_AMT_NET_SP
     */
    public Number getScAmtNetSp() {
        return (Number) getAttributeInternal(SCAMTNETSP);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_AMT_NET_SP using the alias name ScAmtNetSp.
     * @param value value to set the SC_AMT_NET_SP
     */
    public void setScAmtNetSp(Number value) {
        setAttributeInternal(SCAMTNETSP, value);
    }

    /**
     * Gets the attribute value for SC_AMT_NET_BS using the alias name ScAmtNetBs.
     * @return the SC_AMT_NET_BS
     */
    public Number getScAmtNetBs() {
        return (Number) getAttributeInternal(SCAMTNETBS);
    }

    /**
     * Sets <code>value</code> as attribute value for SC_AMT_NET_BS using the alias name ScAmtNetBs.
     * @param value value to set the SC_AMT_NET_BS
     */
    public void setScAmtNetBs(Number value) {
        setAttributeInternal(SCAMTNETBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsItemFoc.
     * @return the TransIsItemFoc
     */
    public String getTransIsItemFoc() {
        
      //  if(getAttributeInternal(TRANSISITEMFOC)!=null){
        return (String) getAttributeInternal(TRANSISITEMFOC);
      //  }
      /* else{
            if(getDocId()!=null){
             
                
            }
        } */
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsItemFoc.
     * @param value value to set the  TransIsItemFoc
     */
    public void setTransIsItemFoc(String value) {
        setAttributeInternal(TRANSISITEMFOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmLoc.
     * @return the TransItmLoc
     */
    public String getTransItmLoc() {
        return (String) getAttributeInternal(TRANSITMLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmLoc.
     * @param value value to set the  TransItmLoc
     */
    public void setTransItmLoc(String value) {
        setAttributeInternal(TRANSITMLOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocId.
     * @return the TransLocId
     */
    public String getTransLocId() {
        return (String) getAttributeInternal(TRANSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocId.
     * @param value value to set the  TransLocId
     */
    public void setTransLocId(String value) {
        setAttributeInternal(TRANSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocAddsId.
     * @return the TransLocAddsId
     */
    public String getTransLocAddsId() {
        return (String) getAttributeInternal(TRANSLOCADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocAddsId.
     * @param value value to set the  TransLocAddsId
     */
    public void setTransLocAddsId(String value) {
        setAttributeInternal(TRANSLOCADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocDesc.
     * @return the TransLocDesc
     */
    public String getTransLocDesc() {
        return (String) getAttributeInternal(TRANSLOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocDesc.
     * @param value value to set the  TransLocDesc
     */
    public void setTransLocDesc(String value) {
        setAttributeInternal(TRANSLOCDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStartDt.
     * @return the TransStartDt
     */
    public Timestamp getTransStartDt() {
        return (Timestamp) getAttributeInternal(TRANSSTARTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStartDt.
     * @param value value to set the  TransStartDt
     */
    public void setTransStartDt(Timestamp value) {
        setAttributeInternal(TRANSSTARTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransToDt.
     * @return the TransToDt
     */
    public Timestamp getTransToDt() {
        return (Timestamp) getAttributeInternal(TRANSTODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransToDt.
     * @param value value to set the  TransToDt
     */
    public void setTransToDt(Timestamp value) {
        setAttributeInternal(TRANSTODT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAddsLocNm.
     * @return the TransAddsLocNm
     */
    public String getTransAddsLocNm() {
        return (String) getAttributeInternal(TRANSADDSLOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAddsLocNm.
     * @param value value to set the  TransAddsLocNm
     */
    public void setTransAddsLocNm(String value) {
        setAttributeInternal(TRANSADDSLOCNM, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public Number getPendQty() {
        if (getAttributeInternal(PENDQTY) != null)
            return (Number) getAttributeInternal(PENDQTY);
        else
            return getItmQty();
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSrTrans.
     * @return the ItmSrTrans
     */
    public String getItmSrTrans() {
        return (String) getAttributeInternal(ITMSRTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmSrTrans.
     * @param value value to set the  ItmSrTrans
     */
    public void setItmSrTrans(String value) {
        setAttributeInternal(ITMSRTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerialFlg.
     * @return the TransItmSerialFlg
     */
    public String getTransItmSerialFlg() {
        
        String srFlg = "N";
        if(getItmId()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            itmvo.executeQuery();
            Row [] rr1= itmvo.getFilteredRows("ItmId", getItmId());
            if(rr1.length>0){
                adfLog.info("-----inside getter ser flg----"+rr1.length+"----"+rr1[0].getAttribute("SerializedFlg").toString());
                srFlg = rr1[0].getAttribute("SerializedFlg").toString();
                return srFlg;
            }
        }
        adfLog.info("--------return vaue of "+srFlg);
        return srFlg;
       // return (String) getAttributeInternal(TRANSITMSERIALFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerialFlg.
     * @param value value to set the  TransItmSerialFlg
     */
    public void setTransItmSerialFlg(String value) {
        setAttributeInternal(TRANSITMSERIALFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmloc.
     * @return the TransItmloc
     */
    public String getTransItmloc() {
        return (String) getAttributeInternal(TRANSITMLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmloc.
     * @param value value to set the  TransItmloc
     */
    public void setTransItmloc(String value) {
        setAttributeInternal(TRANSITMLOC, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScItmFoc.
     */
    public RowIterator getSvcScItmFoc() {
        return (RowIterator) getAttributeInternal(SVCSCITMFOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScSvcAsgn.
     */
    public RowIterator getSvcScSvcAsgn() {
        return (RowIterator) getAttributeInternal(SVCSCSVCASGN);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScTr.
     */
    public RowIterator getSvcScTr() {
        return (RowIterator) getAttributeInternal(SVCSCTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScItmLoc.
     */
    public RowIterator getSvcScItmLoc() {
        return (RowIterator) getAttributeInternal(SVCSCITMLOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SvcScItmSr.
     */
    public RowIterator getSvcScItmSr() {
        return (RowIterator) getAttributeInternal(SVCSCITMSR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmVO.
     */
    public RowSet getLovItmVO() {
        return (RowSet) getAttributeInternal(LOVITMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTypeVO.
     */
    public RowSet getLovDiscTypeVO() {
        return (RowSet) getAttributeInternal(LOVDISCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmStatusSSVO.
     */
    public RowSet getLovItmStatusSSVO() {
        return (RowSet) getAttributeInternal(LOVITMSTATUSSSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleVO.
     */
    public RowSet getLovTaxRuleVO() {
        return (RowSet) getAttributeInternal(LOVTAXRULEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPaymentModeVO.
     */
    public RowSet getLovPaymentModeVO() {
        return (RowSet) getAttributeInternal(LOVPAYMENTMODEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEmpCodeVO.
     */
    public RowSet getLovEmpCodeVO() {
        return (RowSet) getAttributeInternal(LOVEMPCODEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRqmtAreaVO.
     */
    public RowSet getLovRqmtAreaVO() {
        return (RowSet) getAttributeInternal(LOVRQMTAREAVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRplcVO.
     */
    public RowSet getLovRplcVO() {
        return (RowSet) getAttributeInternal(LOVRPLCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LocSvcScLocVO.
     */
    public RowSet getLocSvcScLocVO() {
        return (RowSet) getAttributeInternal(LOCSVCSCLOCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddsVO.
     */
    public RowSet getLovAddsVO() {
        return (RowSet) getAttributeInternal(LOVADDSVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

