package svcservicecontract.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicecontract.model.entities.SvcScItmFocEOImpl;
import svcservicecontract.model.services.AppModuleAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 18 16:25:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScItmFocVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SVCSCITMFOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmIdFoc {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getItmIdFoc();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setItmIdFoc((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmQty {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getItmQty();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setItmQty((Number) value);
            }
        }
        ,
        PrdFm {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getPrdFm();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setPrdFm((Date) value);
            }
        }
        ,
        TransItmDesc {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getTransItmDesc();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setTransItmDesc((String) value);
            }
        }
        ,
        TranItmNmFoc {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getTranItmNmFoc();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setTranItmNmFoc((String) value);
            }
        }
        ,
        TransItmUom {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getTransItmUom();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setTransItmUom((String) value);
            }
        }
        ,
        TransItmNm {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getTransItmNm();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setTransItmNm((String) value);
            }
        }
        ,
        LovItmIdFocVO {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getLovItmIdFocVO();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmVO {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getLovItmVO();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOnlyItmFocVO {
            public Object get(SvcScItmFocVORowImpl obj) {
                return obj.getLovOnlyItmFocVO();
            }

            public void put(SvcScItmFocVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SvcScItmFocVORowImpl object);

        public abstract void put(SvcScItmFocVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMIDFOC = AttributesEnum.ItmIdFoc.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int PRDFM = AttributesEnum.PrdFm.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANITMNMFOC = AttributesEnum.TranItmNmFoc.index();
    public static final int TRANSITMUOM = AttributesEnum.TransItmUom.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int LOVITMIDFOCVO = AttributesEnum.LovItmIdFocVO.index();
    public static final int LOVITMVO = AttributesEnum.LovItmVO.index();
    public static final int LOVONLYITMFOCVO = AttributesEnum.LovOnlyItmFocVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScItmFocVORowImpl() {
    }

    /**
     * Gets SvcScItmFocEO entity object.
     * @return the SvcScItmFocEO
     */
    public SvcScItmFocEOImpl getSvcScItmFocEO() {
        return (SvcScItmFocEOImpl) getEntity(ENTITY_SVCSCITMFOCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_ID_FOC using the alias name ItmIdFoc.
     * @return the ITM_ID_FOC
     */
    public String getItmIdFoc() {
        return (String) getAttributeInternal(ITMIDFOC);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID_FOC using the alias name ItmIdFoc.
     * @param value value to set the ITM_ID_FOC
     */
    public void setItmIdFoc(String value) {
        setAttributeInternal(ITMIDFOC, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for PRD_FM using the alias name PrdFm.
     * @return the PRD_FM
     */
    public Date getPrdFm() {
        return (Date) getAttributeInternal(PRDFM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_FM using the alias name PrdFm.
     * @param value value to set the PRD_FM
     */
    public void setPrdFm(Date value) {
        setAttributeInternal(PRDFM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        if (getAttributeInternal(TRANSITMDESC) != null) {
            return (String) getAttributeInternal(TRANSITMDESC);
        } else {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            ViewObjectImpl itmvo = am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            Row[] rr1 = itmvo.getFilteredRows("ItmId", getItmId());
            if (rr1.length > 0) {
                return rr1[0].getAttribute("ItmDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranItmNmFoc.
     * @return the TranItmNmFoc
     */
    public String getTranItmNmFoc() {
        if(getAttributeInternal(TRANITMNMFOC)!=null){
            return (String) getAttributeInternal(TRANITMNMFOC);
        }else{
            if(getItmIdFoc()!=null){
                AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
                ViewObjectImpl itmvo=am.getLovItm1();
                itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
                itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
                itmvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                itmvo.executeQuery();
                Row [] rr1=itmvo.getFilteredRows("ItmId", getItmIdFoc());
                if(rr1.length>0){
                    return rr1[0].getAttribute("ItmDesc").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANITMNMFOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranItmNmFoc.
     * @param value value to set the  TranItmNmFoc
     */
    public void setTranItmNmFoc(String value) {
        setAttributeInternal(TRANITMNMFOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUom.
     * @return the TransItmUom
     */
    public String getTransItmUom() {
        if(getItmUom()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl uomvo=am.getLovUom();
            uomvo.setNamedWhereClauseParam("bindCldId", getCldId());
            uomvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            uomvo.setNamedWhereClauseParam("bindUomId", getItmUom());
            uomvo.executeQuery();
            
            Row [] rr=uomvo.getFilteredRows("UomId", getItmUom());
            if(rr.length>0){
                return rr[0].getAttribute("UomDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUom.
     * @param value value to set the  TransItmUom
     */
    public void setTransItmUom(String value) {
        setAttributeInternal(TRANSITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        String itmNm=null;
        if(getItmId()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl itmvo=am.getLovItm1();
            itmvo.setNamedWhereClauseParam("bindCldId", getCldId());
            itmvo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            itmvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmvo.executeQuery();
            Row [] rr1=itmvo.getFilteredRows("ItmId", getItmId());
            if(rr1.length>0){
                return rr1[0].getAttribute("ItmDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdFocVO.
     */
    public RowSet getLovItmIdFocVO() {
        return (RowSet) getAttributeInternal(LOVITMIDFOCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmVO.
     */
    public RowSet getLovItmVO() {
        return (RowSet) getAttributeInternal(LOVITMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOnlyItmFocVO.
     */
    public RowSet getLovOnlyItmFocVO() {
        return (RowSet) getAttributeInternal(LOVONLYITMFOCVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

