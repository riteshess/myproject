package svcservicecontract.model.views;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import svcservicecontract.model.services.AppModuleAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 30 15:12:23 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScLocVORowImpl extends ViewRowImpl {

    public static final int ENTITY_SVCSCLOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        EndDt {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getEndDt();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setEndDt((Timestamp) value);
            }
        }
        ,
        EoId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        LocAddsId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getLocAddsId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setLocAddsId((String) value);
            }
        }
        ,
        LocRefId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getLocRefId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setLocRefId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        Remarks {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        StrtDt {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getStrtDt();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setStrtDt((Timestamp) value);
            }
        }
        ,
        SelectAddsFlg {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getSelectAddsFlg();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setSelectAddsFlg((String) value);
            }
        }
        ,
        TransEoNm {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getTransEoNm();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setTransEoNm((String) value);
            }
        }
        ,
        TransEoadds {
            public Object get(SvcScLocVORowImpl obj) {
                return obj.getTransEoadds();
            }

            public void put(SvcScLocVORowImpl obj, Object value) {
                obj.setTransEoadds((String) value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SvcScLocVORowImpl object);

        public abstract void put(SvcScLocVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LOCADDSID = AttributesEnum.LocAddsId.index();
    public static final int LOCREFID = AttributesEnum.LocRefId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int SELECTADDSFLG = AttributesEnum.SelectAddsFlg.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSEOADDS = AttributesEnum.TransEoadds.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScLocVORowImpl() {
    }

    /**
     * Gets SvcScLocEO entity object.
     * @return the SvcScLocEO
     */
    public EntityImpl getSvcScLocEO() {
        return (EntityImpl) getEntity(ENTITY_SVCSCLOCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for END_DT using the alias name EndDt.
     * @return the END_DT
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DT using the alias name EndDt.
     * @param value value to set the END_DT
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for LOC_ADDS_ID using the alias name LocAddsId.
     * @return the LOC_ADDS_ID
     */
    public String getLocAddsId() {
        return (String) getAttributeInternal(LOCADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_ADDS_ID using the alias name LocAddsId.
     * @param value value to set the LOC_ADDS_ID
     */
    public void setLocAddsId(String value) {
        setAttributeInternal(LOCADDSID, value);
    }

    /**
     * Gets the attribute value for LOC_REF_ID using the alias name LocRefId.
     * @return the LOC_REF_ID
     */
    public String getLocRefId() {
        return (String) getAttributeInternal(LOCREFID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_REF_ID using the alias name LocRefId.
     * @param value value to set the LOC_REF_ID
     */
    public void setLocRefId(String value) {
        setAttributeInternal(LOCREFID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRT_DT using the alias name StrtDt.
     * @return the STRT_DT
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_DT using the alias name StrtDt.
     * @param value value to set the STRT_DT
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for SELECT_ADDS_FLG using the alias name SelectAddsFlg.
     * @return the SELECT_ADDS_FLG
     */
    public String getSelectAddsFlg() {
        return (String) getAttributeInternal(SELECTADDSFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SELECT_ADDS_FLG using the alias name SelectAddsFlg.
     * @param value value to set the SELECT_ADDS_FLG
     */
    public void setSelectAddsFlg(String value) {
        setAttributeInternal(SELECTADDSFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if(getEoId()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl vo= am.getLovCstmr();
            vo.setNamedWhereClauseParam("bindCldId", getCldId());
            vo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            vo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            vo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            
            //bindOrgId
            vo.executeQuery();
            
           Row [] rr=vo.getFilteredRows("EoId", getEoId());
           if(rr.length>0){
               return rr[0].getAttribute("EoNm").toString();
           }
        }
        return (String) getAttributeInternal(TRANSEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoadds.
     * @return the TransEoadds
     */
    public String getTransEoadds() {
        if(getLocAddsId()!=null){
            AppModuleAMImpl am=(AppModuleAMImpl)this.getApplicationModule();
            ViewObjectImpl vo= am.getLovAppEoAdds();
            vo.setNamedWhereClauseParam("bindCldId", getCldId());
            vo.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            vo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            vo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            vo.setNamedWhereClauseParam("bindAddsId", null);
            vo.setNamedWhereClauseParam("bindEoId", null);
            //bindOrgId
            vo.executeQuery();
            
           Row [] rr=vo.getFilteredRows("AddsId", getLocAddsId());
           if(rr.length>0){
               return rr[0].getAttribute("Adds").toString();
           }
        }
        return (String) getAttributeInternal(TRANSEOADDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoadds.
     * @param value value to set the  TransEoadds
     */
    public void setTransEoadds(String value) {
        setAttributeInternal(TRANSEOADDS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

