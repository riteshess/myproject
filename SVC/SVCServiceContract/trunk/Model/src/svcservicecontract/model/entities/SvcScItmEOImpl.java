package svcservicecontract.model.entities;

//import java.sql.Timestamp;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 27 11:50:22 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SvcScItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmNmBill {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmNmBill();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmNmBill((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmQty {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmQty();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmQty((Number) value);
            }
        }
        ,
        ItmPrice {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmPrice((Number) value);
            }
        }
        ,
        DiscType {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        DiscAmt {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getDiscAmt();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setDiscAmt((Number) value);
            }
        }
        ,
        TaxAmt {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getTaxAmt();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setTaxAmt((Number) value);
            }
        }
        ,
        ItmAmt {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmAmt();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmAmt((Number) value);
            }
        }
        ,
        PrdFm {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getPrdFm();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setPrdFm((Timestamp) value);
            }
        }
        ,
        PrdTo {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getPrdTo();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setPrdTo((Timestamp) value);
            }
        }
        ,
        InstlDt {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getInstlDt();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setInstlDt((Timestamp) value);
            }
        }
        ,
        OwnSupplied {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getOwnSupplied();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setOwnSupplied((String) value);
            }
        }
        ,
        PartyNm {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getPartyNm();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setPartyNm((String) value);
            }
        }
        ,
        ItmStatOnSs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmStatOnSs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmStatOnSs((Integer) value);
            }
        }
        ,
        RplcRpr {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getRplcRpr();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setRplcRpr((String) value);
            }
        }
        ,
        FullRplc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getFullRplc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setFullRplc((String) value);
            }
        }
        ,
        SvcFoc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcFoc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSvcFoc((String) value);
            }
        }
        ,
        SpareFoc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSpareFoc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSpareFoc((String) value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmPriceBs((Number) value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setDiscAmtBs((Number) value);
            }
        }
        ,
        TaxAmtBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getTaxAmtBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setTaxAmtBs((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        TaxableAmt {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getTaxableAmt();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setTaxableAmt((Number) value);
            }
        }
        ,
        TaxableAmtBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getTaxableAmtBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setTaxableAmtBs((Number) value);
            }
        }
        ,
        SvcItmFlg {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcItmFlg();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSvcItmFlg((String) value);
            }
        }
        ,
        ItmExists {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getItmExists();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setItmExists((String) value);
            }
        }
        ,
        PendQty {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getPendQty();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        }
        ,
        AmcFlg {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getAmcFlg();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAmcFlg((String) value);
            }
        }
        ,
        AmcMovFlg {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getAmcMovFlg();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAmcMovFlg((String) value);
            }
        }
        ,
        ScCalcType {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScCalcType();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScCalcType((String) value);
            }
        }
        ,
        ScCalcVal {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScCalcVal();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScCalcVal((Number) value);
            }
        }
        ,
        ScRateSp {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScRateSp();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScRateSp((Number) value);
            }
        }
        ,
        ScRateBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScRateBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScRateBs((Number) value);
            }
        }
        ,
        ScAmtSp {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScAmtSp();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScAmtSp((Number) value);
            }
        }
        ,
        ScAmtBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScAmtBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScAmtBs((Number) value);
            }
        }
        ,
        ScAmtNetSp {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScAmtNetSp();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScAmtNetSp((Number) value);
            }
        }
        ,
        ScAmtNetBs {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getScAmtNetBs();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setScAmtNetBs((Number) value);
            }
        }
        ,
        SvcSc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcSc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSvcSc((SvcScEOImpl) value);
            }
        }
        ,
        SvcScItmFoc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcScItmFoc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScSvcAsgn {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcScSvcAsgn();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScTr {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcScTr();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setSvcScTr((SvcScTrEOImpl) value);
            }
        }
        ,
        SvcScItmLoc {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcScItmLoc();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SvcScItmSr {
            public Object get(SvcScItmEOImpl obj) {
                return obj.getSvcScItmSr();
            }

            public void put(SvcScItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SvcScItmEOImpl object);

        public abstract void put(SvcScItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMNMBILL = AttributesEnum.ItmNmBill.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int DISCAMT = AttributesEnum.DiscAmt.index();
    public static final int TAXAMT = AttributesEnum.TaxAmt.index();
    public static final int ITMAMT = AttributesEnum.ItmAmt.index();
    public static final int PRDFM = AttributesEnum.PrdFm.index();
    public static final int PRDTO = AttributesEnum.PrdTo.index();
    public static final int INSTLDT = AttributesEnum.InstlDt.index();
    public static final int OWNSUPPLIED = AttributesEnum.OwnSupplied.index();
    public static final int PARTYNM = AttributesEnum.PartyNm.index();
    public static final int ITMSTATONSS = AttributesEnum.ItmStatOnSs.index();
    public static final int RPLCRPR = AttributesEnum.RplcRpr.index();
    public static final int FULLRPLC = AttributesEnum.FullRplc.index();
    public static final int SVCFOC = AttributesEnum.SvcFoc.index();
    public static final int SPAREFOC = AttributesEnum.SpareFoc.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int TAXABLEAMT = AttributesEnum.TaxableAmt.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int SVCITMFLG = AttributesEnum.SvcItmFlg.index();
    public static final int ITMEXISTS = AttributesEnum.ItmExists.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int AMCFLG = AttributesEnum.AmcFlg.index();
    public static final int AMCMOVFLG = AttributesEnum.AmcMovFlg.index();
    public static final int SCCALCTYPE = AttributesEnum.ScCalcType.index();
    public static final int SCCALCVAL = AttributesEnum.ScCalcVal.index();
    public static final int SCRATESP = AttributesEnum.ScRateSp.index();
    public static final int SCRATEBS = AttributesEnum.ScRateBs.index();
    public static final int SCAMTSP = AttributesEnum.ScAmtSp.index();
    public static final int SCAMTBS = AttributesEnum.ScAmtBs.index();
    public static final int SCAMTNETSP = AttributesEnum.ScAmtNetSp.index();
    public static final int SCAMTNETBS = AttributesEnum.ScAmtNetBs.index();
    public static final int SVCSC = AttributesEnum.SvcSc.index();
    public static final int SVCSCITMFOC = AttributesEnum.SvcScItmFoc.index();
    public static final int SVCSCSVCASGN = AttributesEnum.SvcScSvcAsgn.index();
    public static final int SVCSCTR = AttributesEnum.SvcScTr.index();
    public static final int SVCSCITMLOC = AttributesEnum.SvcScItmLoc.index();
    public static final int SVCSCITMSR = AttributesEnum.SvcScItmSr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SvcScItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("svcservicecontract.model.entities.SvcScItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmNmBill, using the alias name ItmNmBill.
     * @return the value of ItmNmBill
     */
    public String getItmNmBill() {
        return (String) getAttributeInternal(ITMNMBILL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmNmBill.
     * @param value value to set the ItmNmBill
     */
    public void setItmNmBill(String value) {
        setAttributeInternal(ITMNMBILL, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for DiscAmt, using the alias name DiscAmt.
     * @return the value of DiscAmt
     */
    public Number getDiscAmt() {
        return (Number) getAttributeInternal(DISCAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmt.
     * @param value value to set the DiscAmt
     */
    public void setDiscAmt(Number value) {
        setAttributeInternal(DISCAMT, value);
    }

    /**
     * Gets the attribute value for TaxAmt, using the alias name TaxAmt.
     * @return the value of TaxAmt
     */
    public Number getTaxAmt() {
        return (Number) getAttributeInternal(TAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmt.
     * @param value value to set the TaxAmt
     */
    public void setTaxAmt(Number value) {
        setAttributeInternal(TAXAMT, value);
    }

    /**
     * Gets the attribute value for ItmAmt, using the alias name ItmAmt.
     * @return the value of ItmAmt
     */
    public Number getItmAmt() {
        return (Number) getAttributeInternal(ITMAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmt.
     * @param value value to set the ItmAmt
     */
    public void setItmAmt(Number value) {
        setAttributeInternal(ITMAMT, value);
    }

    /**
     * Gets the attribute value for PrdFm, using the alias name PrdFm.
     * @return the value of PrdFm
     */
    public Timestamp getPrdFm() {
        return (Timestamp) getAttributeInternal(PRDFM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrdFm.
     * @param value value to set the PrdFm
     */
    public void setPrdFm(Timestamp value) {
        setAttributeInternal(PRDFM, value);
    }

    /**
     * Gets the attribute value for PrdTo, using the alias name PrdTo.
     * @return the value of PrdTo
     */
    public Timestamp getPrdTo() {
        return (Timestamp) getAttributeInternal(PRDTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrdTo.
     * @param value value to set the PrdTo
     */
    public void setPrdTo(Timestamp value) {
        setAttributeInternal(PRDTO, value);
    }

    /**
     * Gets the attribute value for InstlDt, using the alias name InstlDt.
     * @return the value of InstlDt
     */
    public Timestamp getInstlDt() {
        return (Timestamp) getAttributeInternal(INSTLDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InstlDt.
     * @param value value to set the InstlDt
     */
    public void setInstlDt(Timestamp value) {
        setAttributeInternal(INSTLDT, value);
    }

    /**
     * Gets the attribute value for OwnSupplied, using the alias name OwnSupplied.
     * @return the value of OwnSupplied
     */
    public String getOwnSupplied() {
        return (String) getAttributeInternal(OWNSUPPLIED);
    }

    /**
     * Sets <code>value</code> as the attribute value for OwnSupplied.
     * @param value value to set the OwnSupplied
     */
    public void setOwnSupplied(String value) {
        setAttributeInternal(OWNSUPPLIED, value);
    }

    /**
     * Gets the attribute value for PartyNm, using the alias name PartyNm.
     * @return the value of PartyNm
     */
    public String getPartyNm() {
        return (String) getAttributeInternal(PARTYNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PartyNm.
     * @param value value to set the PartyNm
     */
    public void setPartyNm(String value) {
        setAttributeInternal(PARTYNM, value);
    }

    /**
     * Gets the attribute value for ItmStatOnSs, using the alias name ItmStatOnSs.
     * @return the value of ItmStatOnSs
     */
    public Integer getItmStatOnSs() {
        return (Integer) getAttributeInternal(ITMSTATONSS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmStatOnSs.
     * @param value value to set the ItmStatOnSs
     */
    public void setItmStatOnSs(Integer value) {
        setAttributeInternal(ITMSTATONSS, value);
    }

    /**
     * Gets the attribute value for RplcRpr, using the alias name RplcRpr.
     * @return the value of RplcRpr
     */
    public String getRplcRpr() {
        return (String) getAttributeInternal(RPLCRPR);
    }

    /**
     * Sets <code>value</code> as the attribute value for RplcRpr.
     * @param value value to set the RplcRpr
     */
    public void setRplcRpr(String value) {
        setAttributeInternal(RPLCRPR, value);
    }

    /**
     * Gets the attribute value for FullRplc, using the alias name FullRplc.
     * @return the value of FullRplc
     */
    public String getFullRplc() {
        return (String) getAttributeInternal(FULLRPLC);
    }

    /**
     * Sets <code>value</code> as the attribute value for FullRplc.
     * @param value value to set the FullRplc
     */
    public void setFullRplc(String value) {
        setAttributeInternal(FULLRPLC, value);
    }

    /**
     * Gets the attribute value for SvcFoc, using the alias name SvcFoc.
     * @return the value of SvcFoc
     */
    public String getSvcFoc() {
        return (String) getAttributeInternal(SVCFOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SvcFoc.
     * @param value value to set the SvcFoc
     */
    public void setSvcFoc(String value) {
        setAttributeInternal(SVCFOC, value);
    }

    /**
     * Gets the attribute value for SpareFoc, using the alias name SpareFoc.
     * @return the value of SpareFoc
     */
    public String getSpareFoc() {
        return (String) getAttributeInternal(SPAREFOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SpareFoc.
     * @param value value to set the SpareFoc
     */
    public void setSpareFoc(String value) {
        setAttributeInternal(SPAREFOC, value);
    }

    /**
     * Gets the attribute value for ItmPriceBs, using the alias name ItmPriceBs.
     * @return the value of ItmPriceBs
     */
    public Number getItmPriceBs() {
        return (Number) getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceBs.
     * @param value value to set the ItmPriceBs
     */
    public void setItmPriceBs(Number value) {
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxAmtBs, using the alias name TaxAmtBs.
     * @return the value of TaxAmtBs
     */
    public Number getTaxAmtBs() {
        return (Number) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtBs.
     * @param value value to set the TaxAmtBs
     */
    public void setTaxAmtBs(Number value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxableAmt, using the alias name TaxableAmt.
     * @return the value of TaxableAmt
     */
    public Number getTaxableAmt() {
        return (Number) getAttributeInternal(TAXABLEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmt.
     * @param value value to set the TaxableAmt
     */
    public void setTaxableAmt(Number value) {
        setAttributeInternal(TAXABLEAMT, value);
    }

    /**
     * Gets the attribute value for TaxableAmtBs, using the alias name TaxableAmtBs.
     * @return the value of TaxableAmtBs
     */
    public Number getTaxableAmtBs() {
        return (Number) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtBs.
     * @param value value to set the TaxableAmtBs
     */
    public void setTaxableAmtBs(Number value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * Gets the attribute value for SvcItmFlg, using the alias name SvcItmFlg.
     * @return the value of SvcItmFlg
     */
    public String getSvcItmFlg() {
        return (String) getAttributeInternal(SVCITMFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SvcItmFlg.
     * @param value value to set the SvcItmFlg
     */
    public void setSvcItmFlg(String value) {
        setAttributeInternal(SVCITMFLG, value);
    }

    /**
     * Gets the attribute value for ItmExists, using the alias name ItmExists.
     * @return the value of ItmExists
     */
    public String getItmExists() {
        return (String) getAttributeInternal(ITMEXISTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmExists.
     * @param value value to set the ItmExists
     */
    public void setItmExists(String value) {
        setAttributeInternal(ITMEXISTS, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for AmcFlg, using the alias name AmcFlg.
     * @return the value of AmcFlg
     */
    public String getAmcFlg() {
        return (String) getAttributeInternal(AMCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmcFlg.
     * @param value value to set the AmcFlg
     */
    public void setAmcFlg(String value) {
        setAttributeInternal(AMCFLG, value);
    }

    /**
     * Gets the attribute value for AmcMovFlg, using the alias name AmcMovFlg.
     * @return the value of AmcMovFlg
     */
    public String getAmcMovFlg() {
        return (String) getAttributeInternal(AMCMOVFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmcMovFlg.
     * @param value value to set the AmcMovFlg
     */
    public void setAmcMovFlg(String value) {
        setAttributeInternal(AMCMOVFLG, value);
    }

    /**
     * Gets the attribute value for ScCalcType, using the alias name ScCalcType.
     * @return the value of ScCalcType
     */
    public String getScCalcType() {
        return (String) getAttributeInternal(SCCALCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScCalcType.
     * @param value value to set the ScCalcType
     */
    public void setScCalcType(String value) {
        setAttributeInternal(SCCALCTYPE, value);
    }

    /**
     * Gets the attribute value for ScCalcVal, using the alias name ScCalcVal.
     * @return the value of ScCalcVal
     */
    public Number getScCalcVal() {
        return (Number) getAttributeInternal(SCCALCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScCalcVal.
     * @param value value to set the ScCalcVal
     */
    public void setScCalcVal(Number value) {
        setAttributeInternal(SCCALCVAL, value);
    }

    /**
     * Gets the attribute value for ScRateSp, using the alias name ScRateSp.
     * @return the value of ScRateSp
     */
    public Number getScRateSp() {
        return (Number) getAttributeInternal(SCRATESP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScRateSp.
     * @param value value to set the ScRateSp
     */
    public void setScRateSp(Number value) {
        setAttributeInternal(SCRATESP, value);
    }

    /**
     * Gets the attribute value for ScRateBs, using the alias name ScRateBs.
     * @return the value of ScRateBs
     */
    public Number getScRateBs() {
        return (Number) getAttributeInternal(SCRATEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScRateBs.
     * @param value value to set the ScRateBs
     */
    public void setScRateBs(Number value) {
        setAttributeInternal(SCRATEBS, value);
    }

    /**
     * Gets the attribute value for ScAmtSp, using the alias name ScAmtSp.
     * @return the value of ScAmtSp
     */
    public Number getScAmtSp() {
        return (Number) getAttributeInternal(SCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScAmtSp.
     * @param value value to set the ScAmtSp
     */
    public void setScAmtSp(Number value) {
        setAttributeInternal(SCAMTSP, value);
    }

    /**
     * Gets the attribute value for ScAmtBs, using the alias name ScAmtBs.
     * @return the value of ScAmtBs
     */
    public Number getScAmtBs() {
        return (Number) getAttributeInternal(SCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScAmtBs.
     * @param value value to set the ScAmtBs
     */
    public void setScAmtBs(Number value) {
        setAttributeInternal(SCAMTBS, value);
    }

    /**
     * Gets the attribute value for ScAmtNetSp, using the alias name ScAmtNetSp.
     * @return the value of ScAmtNetSp
     */
    public Number getScAmtNetSp() {
        return (Number) getAttributeInternal(SCAMTNETSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScAmtNetSp.
     * @param value value to set the ScAmtNetSp
     */
    public void setScAmtNetSp(Number value) {
        setAttributeInternal(SCAMTNETSP, value);
    }

    /**
     * Gets the attribute value for ScAmtNetBs, using the alias name ScAmtNetBs.
     * @return the value of ScAmtNetBs
     */
    public Number getScAmtNetBs() {
        return (Number) getAttributeInternal(SCAMTNETBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScAmtNetBs.
     * @param value value to set the ScAmtNetBs
     */
    public void setScAmtNetBs(Number value) {
        setAttributeInternal(SCAMTNETBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity SvcScEOImpl.
     */
    public SvcScEOImpl getSvcSc() {
        return (SvcScEOImpl) getAttributeInternal(SVCSC);
    }

    /**
     * Sets <code>value</code> as the associated entity SvcScEOImpl.
     */
    public void setSvcSc(SvcScEOImpl value) {
        setAttributeInternal(SVCSC, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcScItmFoc() {
        return (RowIterator) getAttributeInternal(SVCSCITMFOC);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcScSvcAsgn() {
        return (RowIterator) getAttributeInternal(SVCSCSVCASGN);
    }

    /**
     * @return the associated entity SvcScTrEOImpl.
     */
    public SvcScTrEOImpl getSvcScTr() {
        return (SvcScTrEOImpl) getAttributeInternal(SVCSCTR);
    }

    /**
     * Sets <code>value</code> as the associated entity SvcScTrEOImpl.
     */
    public void setSvcScTr(SvcScTrEOImpl value) {
        setAttributeInternal(SVCSCTR, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcScItmLoc() {
        return (RowIterator) getAttributeInternal(SVCSCITMLOC);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSvcScItmSr() {
        return (RowIterator) getAttributeInternal(SVCSCITMSR);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param prdFm key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String itmId,
                                       Timestamp prdFm) {
        return new Key(new Object[] { cldId, slocId, orgId, docId, itmId, prdFm });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

