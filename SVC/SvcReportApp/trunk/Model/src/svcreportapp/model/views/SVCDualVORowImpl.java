package svcreportapp.model.views;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;

import svcreportapp.model.views.common.SVCDualVORow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 10 11:59:52 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SVCDualVORowImpl extends ViewRowImpl implements SVCDualVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        OrgDescTrans,
        CldIdTrans,
        SlocIdTrans,
        HoOrgIdTrans,
        StartDateTrans,
        EndDateTrans,
        EoIdTrans,
        EoNmTrans,
        FileTypeTrans,
        SvcContTypTrans,
        SvcCntrctStatusTrans,
        SCChkTrans,
        ScmCalTypTrans,
        ScmCallStatTrans,
        ScmChkTrans,
        WoDocTypTrans,
        WoStatTrans,
        WoChkTrans,
        InvTypTrans,
        INVInvIdTrans,
        INVInvNoTrans,
        INVInvChkTrans,
        SvcContTypIdTrans,
        SvcCntrctStatusIdTrans,
        ScContrtNo,
        ScContrtId,
        scmCallNoTrans,
        scmDocIdForCalNoTrans,
        woDocIdForDocNoTrans,
        woDocNO,
        scSvcExecChkTrans,
        scmCallTracTrans,
        BillCycleTrans,
        BillCycleChkTrans,
        RptNmTrans,
        RptInfoOnPopUpTrans,
        RptFileNmTrans,
        DownloadedRptChk,
        OrgNmSideViewChk,
        BgColorTrans,
        HeadColorTrans,
        LOVOrgVO1,
        LOVEoVO1,
        LOVFileSelectionVO1,
        SvcConttTypVO1,
        SvcCntrctStatusVO1,
        LOVScmCallTypVO1,
        LOVScmCalStatVO1,
        LOVWoDocTypVO1,
        LOVWoStatVO1,
        LOVInvNoVO1,
        LOVInvTypVO1,
        LOVScContratNoVO1,
        LOVScmCallNOVO1,
        LOVWoDocNoVO1,
        LOVScBillCycleVO1,
        LOVAppRptVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int ORGDESCTRANS = AttributesEnum.OrgDescTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int STARTDATETRANS = AttributesEnum.StartDateTrans.index();
    public static final int ENDDATETRANS = AttributesEnum.EndDateTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int FILETYPETRANS = AttributesEnum.FileTypeTrans.index();
    public static final int SVCCONTTYPTRANS = AttributesEnum.SvcContTypTrans.index();
    public static final int SVCCNTRCTSTATUSTRANS = AttributesEnum.SvcCntrctStatusTrans.index();
    public static final int SCCHKTRANS = AttributesEnum.SCChkTrans.index();
    public static final int SCMCALTYPTRANS = AttributesEnum.ScmCalTypTrans.index();
    public static final int SCMCALLSTATTRANS = AttributesEnum.ScmCallStatTrans.index();
    public static final int SCMCHKTRANS = AttributesEnum.ScmChkTrans.index();
    public static final int WODOCTYPTRANS = AttributesEnum.WoDocTypTrans.index();
    public static final int WOSTATTRANS = AttributesEnum.WoStatTrans.index();
    public static final int WOCHKTRANS = AttributesEnum.WoChkTrans.index();
    public static final int INVTYPTRANS = AttributesEnum.InvTypTrans.index();
    public static final int INVINVIDTRANS = AttributesEnum.INVInvIdTrans.index();
    public static final int INVINVNOTRANS = AttributesEnum.INVInvNoTrans.index();
    public static final int INVINVCHKTRANS = AttributesEnum.INVInvChkTrans.index();
    public static final int SVCCONTTYPIDTRANS = AttributesEnum.SvcContTypIdTrans.index();
    public static final int SVCCNTRCTSTATUSIDTRANS = AttributesEnum.SvcCntrctStatusIdTrans.index();
    public static final int SCCONTRTNO = AttributesEnum.ScContrtNo.index();
    public static final int SCCONTRTID = AttributesEnum.ScContrtId.index();
    public static final int SCMCALLNOTRANS = AttributesEnum.scmCallNoTrans.index();
    public static final int SCMDOCIDFORCALNOTRANS = AttributesEnum.scmDocIdForCalNoTrans.index();
    public static final int WODOCIDFORDOCNOTRANS = AttributesEnum.woDocIdForDocNoTrans.index();
    public static final int WODOCNO = AttributesEnum.woDocNO.index();
    public static final int SCSVCEXECCHKTRANS = AttributesEnum.scSvcExecChkTrans.index();
    public static final int SCMCALLTRACTRANS = AttributesEnum.scmCallTracTrans.index();
    public static final int BILLCYCLETRANS = AttributesEnum.BillCycleTrans.index();
    public static final int BILLCYCLECHKTRANS = AttributesEnum.BillCycleChkTrans.index();
    public static final int RPTNMTRANS = AttributesEnum.RptNmTrans.index();
    public static final int RPTINFOONPOPUPTRANS = AttributesEnum.RptInfoOnPopUpTrans.index();
    public static final int RPTFILENMTRANS = AttributesEnum.RptFileNmTrans.index();
    public static final int DOWNLOADEDRPTCHK = AttributesEnum.DownloadedRptChk.index();
    public static final int ORGNMSIDEVIEWCHK = AttributesEnum.OrgNmSideViewChk.index();
    public static final int BGCOLORTRANS = AttributesEnum.BgColorTrans.index();
    public static final int HEADCOLORTRANS = AttributesEnum.HeadColorTrans.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();
    public static final int LOVEOVO1 = AttributesEnum.LOVEoVO1.index();
    public static final int LOVFILESELECTIONVO1 = AttributesEnum.LOVFileSelectionVO1.index();
    public static final int SVCCONTTTYPVO1 = AttributesEnum.SvcConttTypVO1.index();
    public static final int SVCCNTRCTSTATUSVO1 = AttributesEnum.SvcCntrctStatusVO1.index();
    public static final int LOVSCMCALLTYPVO1 = AttributesEnum.LOVScmCallTypVO1.index();
    public static final int LOVSCMCALSTATVO1 = AttributesEnum.LOVScmCalStatVO1.index();
    public static final int LOVWODOCTYPVO1 = AttributesEnum.LOVWoDocTypVO1.index();
    public static final int LOVWOSTATVO1 = AttributesEnum.LOVWoStatVO1.index();
    public static final int LOVINVNOVO1 = AttributesEnum.LOVInvNoVO1.index();
    public static final int LOVINVTYPVO1 = AttributesEnum.LOVInvTypVO1.index();
    public static final int LOVSCCONTRATNOVO1 = AttributesEnum.LOVScContratNoVO1.index();
    public static final int LOVSCMCALLNOVO1 = AttributesEnum.LOVScmCallNOVO1.index();
    public static final int LOVWODOCNOVO1 = AttributesEnum.LOVWoDocNoVO1.index();
    public static final int LOVSCBILLCYCLEVO1 = AttributesEnum.LOVScBillCycleVO1.index();
    public static final int LOVAPPRPTVO1 = AttributesEnum.LOVAppRptVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SVCDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgDescTrans.
     * @return the OrgDescTrans
     */
    public String getOrgDescTrans() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}") != null) {
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        } else
            return (String) getAttributeInternal(ORGDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgDescTrans.
     * @param value value to set the  OrgDescTrans
     */
    public void setOrgDescTrans(String value) {
        setAttributeInternal(ORGDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}") != null) {
            return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        } else
            return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}") != null) {
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        } else
            return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        if (resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}") != null) {
            //System.out.println("*****"+resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        } else
            return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute StartDateTrans.
     * @return the StartDateTrans
     */
    public Date getStartDateTrans() {
        return (Date) getAttributeInternal(STARTDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StartDateTrans.
     * @param value value to set the  StartDateTrans
     */
    public void setStartDateTrans(Date value) {
        setAttributeInternal(STARTDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDateTrans.
     * @return the EndDateTrans
     */
    public Date getEndDateTrans() {
        return (Date) getAttributeInternal(ENDDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EndDateTrans.
     * @param value value to set the  EndDateTrans
     */
    public void setEndDateTrans(Date value) {
        setAttributeInternal(ENDDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaIdTrans.
     * @return the CoaIdTrans
     */
    public Integer getEoIdTrans() {
        return (Integer) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaIdTrans.
     * @param value value to set the  CoaIdTrans
     */
    public void setEoIdTrans(Integer value) {
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmTrans.
     * @return the EoNmTrans
     */
    public String getEoNmTrans() {
        return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNmTrans.
     * @param value value to set the  EoNmTrans
     */
    public void setEoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileTypeTrans.
     * @return the FileTypeTrans
     */
    public String getFileTypeTrans() {
        if (getAttributeInternal(FILETYPETRANS) == null) {
            return "PDF";
        } else
            return (String) getAttributeInternal(FILETYPETRANS);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileTypeTrans.
     * @param value value to set the  FileTypeTrans
     */
    public void setFileTypeTrans(String value) {
        setAttributeInternal(FILETYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcContTypTrans.
     * @return the SvcContTypTrans
     */
    public Integer getSvcContTypTrans() {
        return (Integer) getAttributeInternal(SVCCONTTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SvcContTypTrans.
     * @param value value to set the  SvcContTypTrans
     */
    public void setSvcContTypTrans(Integer value) {
        setAttributeInternal(SVCCONTTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcCntrctStatusTrans.
     * @return the SvcCntrctStatusTrans
     */
    public Integer getSvcCntrctStatusTrans() {
        return (Integer) getAttributeInternal(SVCCNTRCTSTATUSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SvcCntrctStatusTrans.
     * @param value value to set the  SvcCntrctStatusTrans
     */
    public void setSvcCntrctStatusTrans(Integer value) {
        setAttributeInternal(SVCCNTRCTSTATUSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SCChkTrans.
     * @return the SCChkTrans
     */
    public String getSCChkTrans() {
        return (String) getAttributeInternal(SCCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SCChkTrans.
     * @param value value to set the  SCChkTrans
     */
    public void setSCChkTrans(String value) {
        setAttributeInternal(SCCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ScmCalTypTrans.
     * @return the ScmCalTypTrans
     */
    public Integer getScmCalTypTrans() {
        return (Integer) getAttributeInternal(SCMCALTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ScmCalTypTrans.
     * @param value value to set the  ScmCalTypTrans
     */
    public void setScmCalTypTrans(Integer value) {
        setAttributeInternal(SCMCALTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ScmCallStatTrans.
     * @return the ScmCallStatTrans
     */
    public Integer getScmCallStatTrans() {
        return (Integer) getAttributeInternal(SCMCALLSTATTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ScmCallStatTrans.
     * @param value value to set the  ScmCallStatTrans
     */
    public void setScmCallStatTrans(Integer value) {
        setAttributeInternal(SCMCALLSTATTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ScmChkTrans.
     * @return the ScmChkTrans
     */
    public String getScmChkTrans() {
        return (String) getAttributeInternal(SCMCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ScmChkTrans.
     * @param value value to set the  ScmChkTrans
     */
    public void setScmChkTrans(String value) {
        setAttributeInternal(SCMCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WoDocTypTrans.
     * @return the WoDocTypTrans
     */
    public Integer getWoDocTypTrans() {
        return (Integer) getAttributeInternal(WODOCTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WoDocTypTrans.
     * @param value value to set the  WoDocTypTrans
     */
    public void setWoDocTypTrans(Integer value) {
        setAttributeInternal(WODOCTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WoStatTrans.
     * @return the WoStatTrans
     */
    public Integer getWoStatTrans() {
        return (Integer) getAttributeInternal(WOSTATTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WoStatTrans.
     * @param value value to set the  WoStatTrans
     */
    public void setWoStatTrans(Integer value) {
        setAttributeInternal(WOSTATTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WoChkTrans.
     * @return the WoChkTrans
     */
    public String getWoChkTrans() {
        return (String) getAttributeInternal(WOCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WoChkTrans.
     * @param value value to set the  WoChkTrans
     */
    public void setWoChkTrans(String value) {
        setAttributeInternal(WOCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvTypTrans.
     * @return the InvTypTrans
     */
    public Integer getInvTypTrans() {
        return (Integer) getAttributeInternal(INVTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvTypTrans.
     * @param value value to set the  InvTypTrans
     */
    public void setInvTypTrans(Integer value) {
        setAttributeInternal(INVTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute INVInvId.
     * @return the INVInvId
     */
    public String getINVInvIdTrans() {
        return (String) getAttributeInternal(INVINVIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute INVInvId.
     * @param value value to set the  INVInvId
     */
    public void setINVInvIdTrans(String value) {
        setAttributeInternal(INVINVIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute INVInvNoTrans.
     * @return the INVInvNoTrans
     */
    public String getINVInvNoTrans() {
        return (String) getAttributeInternal(INVINVNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute INVInvNoTrans.
     * @param value value to set the  INVInvNoTrans
     */
    public void setINVInvNoTrans(String value) {
        setAttributeInternal(INVINVNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute INVInvChkTrans.
     * @return the INVInvChkTrans
     */
    public String getINVInvChkTrans() {
        return (String) getAttributeInternal(INVINVCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute INVInvChkTrans.
     * @param value value to set the  INVInvChkTrans
     */
    public void setINVInvChkTrans(String value) {
        setAttributeInternal(INVINVCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcContTypIdTrans.
     * @return the SvcContTypIdTrans
     */
    public Integer getSvcContTypIdTrans() {
        return (Integer) getAttributeInternal(SVCCONTTYPIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcCntrctStatusIdTrans.
     * @return the SvcCntrctStatusIdTrans
     */
    public Integer getSvcCntrctStatusIdTrans() {
        return (Integer) getAttributeInternal(SVCCNTRCTSTATUSIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute ScContrtNo.
     * @return the ScContrtNo
     */
    public String getScContrtNo() {
        return (String) getAttributeInternal(SCCONTRTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ScContrtNo.
     * @param value value to set the  ScContrtNo
     */
    public void setScContrtNo(String value) {
        setAttributeInternal(SCCONTRTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ScContrtId.
     * @return the ScContrtId
     */
    public String getScContrtId() {
        return (String) getAttributeInternal(SCCONTRTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ScContrtId.
     * @param value value to set the  ScContrtId
     */
    public void setScContrtId(String value) {
        setAttributeInternal(SCCONTRTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute scmCallNoTrans.
     * @return the scmCallNoTrans
     */
    public String getscmCallNoTrans() {
        return (String) getAttributeInternal(SCMCALLNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute scmCallNoTrans.
     * @param value value to set the  scmCallNoTrans
     */
    public void setscmCallNoTrans(String value) {
        setAttributeInternal(SCMCALLNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute scmDocIdForCalNoTrans.
     * @return the scmDocIdForCalNoTrans
     */
    public String getscmDocIdForCalNoTrans() {
        return (String) getAttributeInternal(SCMDOCIDFORCALNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute scmDocIdForCalNoTrans.
     * @param value value to set the  scmDocIdForCalNoTrans
     */
    public void setscmDocIdForCalNoTrans(String value) {
        setAttributeInternal(SCMDOCIDFORCALNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute woDocIdForDocNoTrans.
     * @return the woDocIdForDocNoTrans
     */
    public String getwoDocIdForDocNoTrans() {
        return (String) getAttributeInternal(WODOCIDFORDOCNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute woDocIdForDocNoTrans.
     * @param value value to set the  woDocIdForDocNoTrans
     */
    public void setwoDocIdForDocNoTrans(String value) {
        setAttributeInternal(WODOCIDFORDOCNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute woDocNO.
     * @return the woDocNO
     */
    public String getwoDocNO() {
        return (String) getAttributeInternal(WODOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute woDocNO.
     * @param value value to set the  woDocNO
     */
    public void setwoDocNO(String value) {
        setAttributeInternal(WODOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute scSvcExecChkTrans.
     * @return the scSvcExecChkTrans
     */
    public String getscSvcExecChkTrans() {
        return (String) getAttributeInternal(SCSVCEXECCHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute scSvcExecChkTrans.
     * @param value value to set the  scSvcExecChkTrans
     */
    public void setscSvcExecChkTrans(String value) {
        setAttributeInternal(SCSVCEXECCHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute scmCallTracTrans.
     * @return the scmCallTracTrans
     */
    public String getscmCallTracTrans() {
        return (String) getAttributeInternal(SCMCALLTRACTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute scmCallTracTrans.
     * @param value value to set the  scmCallTracTrans
     */
    public void setscmCallTracTrans(String value) {
        setAttributeInternal(SCMCALLTRACTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BillCycleTrans.
     * @return the BillCycleTrans
     */
    public Integer getBillCycleTrans() {
        return (Integer) getAttributeInternal(BILLCYCLETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BillCycleTrans.
     * @param value value to set the  BillCycleTrans
     */
    public void setBillCycleTrans(Integer value) {
        setAttributeInternal(BILLCYCLETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BillCycleChkTrans.
     * @return the BillCycleChkTrans
     */
    public String getBillCycleChkTrans() {
        return (String) getAttributeInternal(BILLCYCLECHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BillCycleChkTrans.
     * @param value value to set the  BillCycleChkTrans
     */
    public void setBillCycleChkTrans(String value) {
        setAttributeInternal(BILLCYCLECHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptNmTrans.
     * @return the RptNmTrans
     */
    public String getRptNmTrans() {
        return (String) getAttributeInternal(RPTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptNmTrans.
     * @param value value to set the  RptNmTrans
     */
    public void setRptNmTrans(String value) {
        setAttributeInternal(RPTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptInfoOnPopUpTrans.
     * @return the RptInfoOnPopUpTrans
     */
    public String getRptInfoOnPopUpTrans() {
        return (String) getAttributeInternal(RPTINFOONPOPUPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptInfoOnPopUpTrans.
     * @param value value to set the  RptInfoOnPopUpTrans
     */
    public void setRptInfoOnPopUpTrans(String value) {
        setAttributeInternal(RPTINFOONPOPUPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptFileNmTrans.
     * @return the RptFileNmTrans
     */
    public String getRptFileNmTrans() {
        return (String) getAttributeInternal(RPTFILENMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptFileNmTrans.
     * @param value value to set the  RptFileNmTrans
     */
    public void setRptFileNmTrans(String value) {
        setAttributeInternal(RPTFILENMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DownloadedRptChk.
     * @return the DownloadedRptChk
     */
    public String getDownloadedRptChk() {
        return (String) getAttributeInternal(DOWNLOADEDRPTCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DownloadedRptChk.
     * @param value value to set the  DownloadedRptChk
     */
    public void setDownloadedRptChk(String value) {
        setAttributeInternal(DOWNLOADEDRPTCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgNmSideViewChk.
     * @return the OrgNmSideViewChk
     */
    public String getOrgNmSideViewChk() {
        return (String) getAttributeInternal(ORGNMSIDEVIEWCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgNmSideViewChk.
     * @param value value to set the  OrgNmSideViewChk
     */
    public void setOrgNmSideViewChk(String value) {
        setAttributeInternal(ORGNMSIDEVIEWCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BgColorTrans.
     * @return the BgColorTrans
     */
    public String getBgColorTrans() {
        if (getAttributeInternal(BGCOLORTRANS) == null) {
            return "D";
        } else
            return (String) getAttributeInternal(BGCOLORTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BgColorTrans.
     * @param value value to set the  BgColorTrans
     */
    public void setBgColorTrans(String value) {
        setAttributeInternal(BGCOLORTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HeadColorTrans.
     * @return the HeadColorTrans
     */
    public String getHeadColorTrans() {
        if (getAttributeInternal(HEADCOLORTRANS) == null) {
            return "D";
        } else
            return (String) getAttributeInternal(HEADCOLORTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeadColorTrans.
     * @param value value to set the  HeadColorTrans
     */
    public void setHeadColorTrans(String value) {
        setAttributeInternal(HEADCOLORTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet) getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoVO1.
     */
    public RowSet getLOVEoVO1() {
        return (RowSet) getAttributeInternal(LOVEOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFileSelectionVO1.
     */
    public RowSet getLOVFileSelectionVO1() {
        return (RowSet) getAttributeInternal(LOVFILESELECTIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SvcConttTypVO1.
     */
    public RowSet getSvcConttTypVO1() {
        return (RowSet) getAttributeInternal(SVCCONTTTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SvcCntrctStatusVO1.
     */
    public RowSet getSvcCntrctStatusVO1() {
        return (RowSet) getAttributeInternal(SVCCNTRCTSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScmCallTypVO1.
     */
    public RowSet getLOVScmCallTypVO1() {
        return (RowSet) getAttributeInternal(LOVSCMCALLTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScmCalStatVO1.
     */
    public RowSet getLOVScmCalStatVO1() {
        return (RowSet) getAttributeInternal(LOVSCMCALSTATVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWoDocTypVO1.
     */
    public RowSet getLOVWoDocTypVO1() {
        return (RowSet) getAttributeInternal(LOVWODOCTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWoStatVO1.
     */
    public RowSet getLOVWoStatVO1() {
        return (RowSet) getAttributeInternal(LOVWOSTATVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVInvNoVO1.
     */
    public RowSet getLOVInvNoVO1() {
        return (RowSet) getAttributeInternal(LOVINVNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVInvTypVO1.
     */
    public RowSet getLOVInvTypVO1() {
        return (RowSet) getAttributeInternal(LOVINVTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScContratNoVO1.
     */
    public RowSet getLOVScContratNoVO1() {
        return (RowSet) getAttributeInternal(LOVSCCONTRATNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScmCallNOVO1.
     */
    public RowSet getLOVScmCallNOVO1() {
        return (RowSet) getAttributeInternal(LOVSCMCALLNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWoDocNoVO1.
     */
    public RowSet getLOVWoDocNoVO1() {
        return (RowSet) getAttributeInternal(LOVWODOCNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScBillCycleVO1.
     */
    public RowSet getLOVScBillCycleVO1() {
        return (RowSet) getAttributeInternal(LOVSCBILLCYCLEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAppRptVO1.
     */
    public RowSet getLOVAppRptVO1() {
        return (RowSet) getAttributeInternal(LOVAPPRPTVO1);
    }
    /**
     * Method which refresh rows present in Lov's
     */
    public void refreshLovData() {
        this.getLOVAppRptVO1().executeQuery();
        this.getLOVEoVO1().executeQuery();
        this.getLOVFileSelectionVO1();
        this.getLOVInvNoVO1().executeQuery();
        this.getLOVOrgVO1().executeQuery();
        this.getLOVScBillCycleVO1().executeQuery();
        this.getLOVScContratNoVO1().executeQuery();
        this.getLOVScmCalStatVO1().executeQuery();
        this.getLOVScmCallNOVO1().executeQuery();
        this.getLOVWoDocNoVO1().executeQuery();
        this.getLOVWoDocTypVO1().executeQuery();
        this.getLOVWoStatVO1().executeQuery();
        this.getSvcCntrctStatusVO1().executeQuery();
        this.getSvcConttTypVO1().executeQuery();
    }

    /** Resolve El for getting PageFlow Values. **/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        javax.faces.application.Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;

    }
}

