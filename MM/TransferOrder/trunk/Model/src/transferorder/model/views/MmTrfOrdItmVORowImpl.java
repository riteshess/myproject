package transferorder.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import transferorder.model.entities.MmTrfOrdItmEOImpl;
import transferorder.model.services.TransferOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 04 09:56:06 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmTrfOrdItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMTRFORDITMEO = 0;
    private static ADFLogger adfLog = (ADFLogger) ADFLogger.createADFLogger(MmTrfOrdItmVORowImpl.class);
    ADFLogger adf_log = (ADFLogger) ADFLogger.createADFLogger(MmTrfOrdItmVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AuthQty {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getAuthQty();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAuthQty((Number) value);
            }
        },
        AuthQtyBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getAuthQtyBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAuthQtyBs((Number) value);
            }
        },
        CldId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        CnclItm {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getCnclItm();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setCnclItm((String) value);
            }
        },
        DocId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        ItmId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmUom {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        },
        ItmUomBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        },
        OrdQty {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setOrdQty((Number) value);
            }
        },
        OrdQtyBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getOrdQtyBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setOrdQtyBs((Number) value);
            }
        },
        OrgId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        PendQty {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        },
        PendQtyBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setPendQtyBs((Number) value);
            }
        },
        SlocId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        StkResvQty {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getStkResvQty();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setStkResvQty((Number) value);
            }
        },
        StkResvQtyBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getStkResvQtyBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setStkResvQtyBs((Number) value);
            }
        },
        TrfQty {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTrfQty();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTrfQty((Number) value);
            }
        },
        TrfQtyBs {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTrfQtyBs();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTrfQtyBs((Number) value);
            }
        },
        UomConvFctr {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        },
        TransItemforMRS {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransItemforMRS();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTransItemforMRS((String) value);
            }
        },
        TransItemDesc {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransItemDesc();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTransItemDesc((String) value);
            }
        },
        TransAvlStk {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransAvlStk();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransHoOrgId {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        },
        TransItmGrpDesc {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransItmGrpDesc();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransItmAttDesc {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransItmAttDesc();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmRemarks {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getItmRemarks();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setItmRemarks((String) value);
            }
        },
        TransAvlStkFm {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransAvlStkFm();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransUomDesc {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getTransUomDesc();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setTransUomDesc((String) value);
            }
        },
        MmItmVwVO1 {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getMmItmVwVO1();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LOVItmUomVO1 {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getLOVItmUomVO1();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MmMrsItmVO1 {
            public Object get(MmTrfOrdItmVORowImpl obj) {
                return obj.getMmMrsItmVO1();
            }

            public void put(MmTrfOrdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static int firstIndex = 0;

        public abstract Object get(MmTrfOrdItmVORowImpl object);

        public abstract void put(MmTrfOrdItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AUTHQTY = AttributesEnum.AuthQty.index();
    public static final int AUTHQTYBS = AttributesEnum.AuthQtyBs.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CNCLITM = AttributesEnum.CnclItm.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int ORDQTYBS = AttributesEnum.OrdQtyBs.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STKRESVQTY = AttributesEnum.StkResvQty.index();
    public static final int STKRESVQTYBS = AttributesEnum.StkResvQtyBs.index();
    public static final int TRFQTY = AttributesEnum.TrfQty.index();
    public static final int TRFQTYBS = AttributesEnum.TrfQtyBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int TRANSITEMFORMRS = AttributesEnum.TransItemforMRS.index();
    public static final int TRANSITEMDESC = AttributesEnum.TransItemDesc.index();
    public static final int TRANSAVLSTK = AttributesEnum.TransAvlStk.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSITMGRPDESC = AttributesEnum.TransItmGrpDesc.index();
    public static final int TRANSITMATTDESC = AttributesEnum.TransItmAttDesc.index();
    public static final int ITMREMARKS = AttributesEnum.ItmRemarks.index();
    public static final int TRANSAVLSTKFM = AttributesEnum.TransAvlStkFm.index();
    public static final int TRANSUOMDESC = AttributesEnum.TransUomDesc.index();
    public static final int MMITMVWVO1 = AttributesEnum.MmItmVwVO1.index();
    public static final int LOVITMUOMVO1 = AttributesEnum.LOVItmUomVO1.index();
    public static final int MMMRSITMVO1 = AttributesEnum.MmMrsItmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmTrfOrdItmVORowImpl() {
    }

    /**
     * Gets MmTrfOrdItmEO entity object.
     * @return the MmTrfOrdItmEO
     */
    public MmTrfOrdItmEOImpl getMmTrfOrdItmEO() {
        return (MmTrfOrdItmEOImpl) getEntity(ENTITY_MMTRFORDITMEO);
    }

    /**
     * Gets the attribute value for AUTH_QTY using the alias name AuthQty.
     * @return the AUTH_QTY
     */
    public Number getAuthQty() {
        if (getAttributeInternal(AUTHQTY) != null)
            return (Number) getAttributeInternal(AUTHQTY);
        else
            return new Number(0);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_QTY using the alias name AuthQty.
     * @param value value to set the AUTH_QTY
     */
    public void setAuthQty(Number value) {
        setAttributeInternal(AUTHQTY, value);
    }

    /**
     * Gets the attribute value for AUTH_QTY_BS using the alias name AuthQtyBs.
     * @return the AUTH_QTY_BS
     */
    public Number getAuthQtyBs() {
        return (Number) getAttributeInternal(AUTHQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_QTY_BS using the alias name AuthQtyBs.
     * @param value value to set the AUTH_QTY_BS
     */
    public void setAuthQtyBs(Number value) {
        setAttributeInternal(AUTHQTYBS, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CNCL_ITM using the alias name CnclItm.
     * @return the CNCL_ITM
     */
    public String getCnclItm() {
        return (String) getAttributeInternal(CNCLITM);
    }

    /**
     * Sets <code>value</code> as attribute value for CNCL_ITM using the alias name CnclItm.
     * @param value value to set the CNCL_ITM
     */
    public void setCnclItm(String value) {
        setAttributeInternal(CNCLITM, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        /* if(getAttributeInternal(ITMID) != null)
        {
                if(getAttributeInternal(TRANSAVLSTK)==null)
                {
                   TransferOrderAMImpl am = (TransferOrderAMImpl)resolvElDC("TransferOrderAMDataControl");
                   ViewObjectImpl vo=am.getMmTrfOrd1();
                   RowQualifier rq=new RowQualifier(vo);
                   rq.setWhereClause("upper(DocId) like '"+getDocId().toUpperCase()+"' and upper(OrgId) like '"+getOrgId().toUpperCase()+"' and upper(CldId) like '"+getCldId().toUpperCase()+"' and SlocId = "+getSlocId());
                   Row[] r=vo.getFilteredRows(rq);
                   String WhId = (String)r[0].getAttribute("WhIdSrc");
                   String OrgId=(String)r[0].getAttribute("OrgIdSrc");
                   Integer fyid=(Integer)r[0].getAttribute("FyId");
                   String avlstk =(String)(callStoredFunction(Types.VARCHAR, "MM.mm_get_avail_stk(?,?,?,?,?,?,?)",new Object[] {getCldId(),getSlocId(),OrgId,(String) getAttributeInternal(ITMID),WhId,fyid,"18519"}));
                   setTransAvlStk(avlstk);
                    }
            } */
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ORD_QTY using the alias name OrdQty.
     * @return the ORD_QTY
     */
    public Number getOrdQty() {
        return (Number) getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ORD_QTY using the alias name OrdQty.
     * @param value value to set the ORD_QTY
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for ORD_QTY_BS using the alias name OrdQtyBs.
     * @return the ORD_QTY_BS
     */
    public Number getOrdQtyBs() {
        return (Number) getAttributeInternal(ORDQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ORD_QTY_BS using the alias name OrdQtyBs.
     * @param value value to set the ORD_QTY_BS
     */
    public void setOrdQtyBs(Number value) {
        setAttributeInternal(ORDQTYBS, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @return the PEND_QTY_BS
     */
    public Number getPendQtyBs() {
        return (Number) getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @param value value to set the PEND_QTY_BS
     */
    public void setPendQtyBs(Number value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STK_RESV_QTY using the alias name StkResvQty.
     * @return the STK_RESV_QTY
     */
    public Number getStkResvQty() {
        if (getAttributeInternal(STKRESVQTY) != null)
            return (Number) getAttributeInternal(STKRESVQTY);
        else
            return new Number(0);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_RESV_QTY using the alias name StkResvQty.
     * @param value value to set the STK_RESV_QTY
     */
    public void setStkResvQty(Number value) {
        setAttributeInternal(STKRESVQTY, value);
    }

    /**
     * Gets the attribute value for STK_RESV_QTY_BS using the alias name StkResvQtyBs.
     * @return the STK_RESV_QTY_BS
     */
    public Number getStkResvQtyBs() {
        return (Number) getAttributeInternal(STKRESVQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_RESV_QTY_BS using the alias name StkResvQtyBs.
     * @param value value to set the STK_RESV_QTY_BS
     */
    public void setStkResvQtyBs(Number value) {
        setAttributeInternal(STKRESVQTYBS, value);
    }

    /**
     * Gets the attribute value for TRF_QTY using the alias name TrfQty.
     * @return the TRF_QTY
     */
    public Number getTrfQty() {
        return (Number) getAttributeInternal(TRFQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TRF_QTY using the alias name TrfQty.
     * @param value value to set the TRF_QTY
     */
    public void setTrfQty(Number value) {
        setAttributeInternal(TRFQTY, value);
    }

    /**
     * Gets the attribute value for TRF_QTY_BS using the alias name TrfQtyBs.
     * @return the TRF_QTY_BS
     */
    public Number getTrfQtyBs() {
        return (Number) getAttributeInternal(TRFQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRF_QTY_BS using the alias name TrfQtyBs.
     * @param value value to set the TRF_QTY_BS
     */
    public void setTrfQtyBs(Number value) {
        setAttributeInternal(TRFQTYBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemforMRS.
     * @return the TransItemforMRS
     */
    public String getTransItemforMRS() {
        return (String) getAttributeInternal(TRANSITEMFORMRS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemforMRS.
     * @param value value to set the  TransItemforMRS
     */
    public void setTransItemforMRS(String value) {
        setAttributeInternal(TRANSITEMFORMRS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemDesc.
     * @return the TransItemDesc
     */
    public String getTransItemDesc() {
        if ((String) getAttributeInternal(TRANSITEMDESC) != null)
            return (String) getAttributeInternal(TRANSITEMDESC);
        else {
            if (getItmId() != null) {
                TransferOrderAMImpl am = (TransferOrderAMImpl) this.getApplicationModule();
                ViewObjectImpl tunevo = am.getAppItmTune();
                tunevo.setNamedWhereClauseParam("bindItmId", getItmId());
                tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
                tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
                tunevo.executeQuery();
                Row[] r = tunevo.getFilteredRows("ItmId", getItmId());
                adf_log.info("trf ord tiemprofile loading----------- " + r.length);

                if (r.length > 0)
                    return r[0].getAttribute("ItmDesc").toString();
                else
                    return (String) getAttributeInternal(TRANSITEMDESC);

            } else
                return (String) getAttributeInternal(TRANSITEMDESC);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemDesc.
     * @param value value to set the  TransItemDesc
     */
    public void setTransItemDesc(String value) {
        setAttributeInternal(TRANSITEMDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransAvlStk.
     * @return the TransAvlStk
     */
    public String getTransAvlStk() {
        if ((String) getAttributeInternal(TRANSAVLSTK) != null)
            return (String) getAttributeInternal(TRANSAVLSTK);
        else {
            TransferOrderAMImpl am = (TransferOrderAMImpl) resolvElDC("TransferOrderAMDataControl");
            ViewObjectImpl vo = am.getMmTrfOrd1();
            RowQualifier rq = new RowQualifier(vo);
            rq.setWhereClause("upper(DocId) like '" + getDocId().toUpperCase() + "' and upper(OrgId) like '" +
                              getOrgId().toUpperCase() + "' and upper(CldId) like '" + getCldId().toUpperCase() +
                              "' and SlocId = " + getSlocId());
            Row[] r = vo.getFilteredRows(rq);
            String WhId = (String) r[0].getAttribute("WhIdSrc");
            //   String OrgId=(String)r[0].getAttribute("OrgIdSrc");
            String OrgId = (String) r[0].getAttribute("OrgIdDest"); //changed according to new rqmt.
            Integer fyid = (Integer) r[0].getAttribute("FyId");
            //   System.out.println("fy id in rowimpl="+WhId+" "+OrgId+" "+fyid);
            String avlstk = (String) (callStoredFunction(Types.VARCHAR, "MM.mm_get_avail_stk(?,?,?,?,?,?,?)", new Object[] {
                                                         getCldId(), getSlocId(), OrgId, getItmId(), WhId, fyid,
                                                         getDocId()
            }));
            return avlstk;
        }

    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            TransferOrderAMImpl am = (TransferOrderAMImpl) resolvElDC("TransferOrderAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }


    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();

        // return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmGrpDesc.
     * @return the TransItmGrpDesc
     */
    public String getTransItmGrpDesc() {
        adfLog.info("get item id is " + /* getTransItmGrpId()+*/"  " + getCldId() + " " + getSlocId() + " " +
                    getTransHoOrgId() + " " + getItmId());

        if (getItmId() != null) {
            TransferOrderAMImpl am = (TransferOrderAMImpl) this.getApplicationModule();
            //            RowQualifier rq=new RowQualifier(am.getMmItmVw1());
            //            rq.setWhereClause("CldId ='" +getCldId() +"' and SlocId = "+ getSlocId()+" and HoOrgId = '"+getTransHoOrgId()+"' and ItmId= '"+ getItmId()+"'");
            //            Row [] rr1=am.getMmItmVw1().getFilteredRows(rq);
            //            Object attdetail=null;
            //            adfLog.info("grp id length is "+rr1.length);
            ViewObjectImpl apptune = am.getAppItmTune();
            apptune.setNamedWhereClauseParam("bindItmId", getItmId());
            apptune.setNamedWhereClauseParam("bindCldId", getCldId());
            apptune.setNamedWhereClauseParam("bindSlocId", getSlocId());
            apptune.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            // apptune.setNamedWhereClauseParam("bindGrpId",null);
            apptune.executeQuery();
            RowQualifier rq = new RowQualifier(apptune);
            rq.setWhereClause("CldId ='" + getCldId() + "' and SlocId = " + getSlocId() + " and HoOrgId = '" +
                              getTransHoOrgId() + "' and ItmId= '" + getItmId() + "'");
            Row[] rr1 = apptune.getFilteredRows(rq);
            Object attdetail = null;
            if (rr1.length > 0) {
                adfLog.info("Group Id :" + rr1[0].getAttribute("GrpId").toString());
                attdetail = callStoredFunction(Types.VARCHAR, "APP.GET_ITM_GRP_PATH(?,?,?,?)", new Object[] {
                                               getSlocId(), getCldId(), getTransHoOrgId(), rr1[0].getAttribute("GrpId")
                });
                adfLog.info("function return " + attdetail + " grp and itm id is " /*+*getTransItmGrpId()*/ + " " +
                            getItmId());

            }
            if (attdetail != null) {
                return attdetail.toString();
            } else {
                return (String) getAttributeInternal(TRANSITMGRPDESC);
            }
        } else {
            return (String) getAttributeInternal(TRANSITMGRPDESC);
        }
        //return (String) getAttributeInternal(TRANSITMGRPDESC);
    }


    /**
     * Gets the attribute value for the calculated attribute TransItmAttDesc.
     * @return the TransItmAttDesc
     */
    public String getTransItmAttDesc() {
        adfLog.info("get item id is " + getItmId() + getCldId() + " " + getSlocId() + " " + getTransHoOrgId());
        if (getItmId() != null) {

            Object attdetail = callStoredFunction(Types.VARCHAR, "APP.FN_GET_ITM_ATT(?,?,?,?,?,?)", new Object[] {
                                                  getCldId(), getSlocId(), getTransHoOrgId(), getItmId(), "R", ","
            });
            adfLog.info("function return " + attdetail + " " + getItmId());
            if (attdetail != null) {
                return attdetail.toString();
            } else {
                return "None";
            }
        } else {
            return "None";
        }
        //return (String) getAttributeInternal(TRANSITMATTDESC);
    }


    /**
     * Gets the attribute value for ITM_REMARKS using the alias name ItmRemarks.
     * @return the ITM_REMARKS
     */
    public String getItmRemarks() {
        return (String) getAttributeInternal(ITMREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_REMARKS using the alias name ItmRemarks.
     * @param value value to set the ITM_REMARKS
     */
    public void setItmRemarks(String value) {
        setAttributeInternal(ITMREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAvlStkFm.
     * @return the TransAvlStkFm
     */
    public String getTransAvlStkFm() {
        TransferOrderAMImpl am = (TransferOrderAMImpl) resolvElDC("TransferOrderAMDataControl");
        ViewObjectImpl vo = am.getMmTrfOrd1();
        RowQualifier rq = new RowQualifier(vo);
        rq.setWhereClause("upper(DocId) like '" + getDocId().toUpperCase() + "' and upper(OrgId) like '" +
                          getOrgId().toUpperCase() + "' and upper(CldId) like '" + getCldId().toUpperCase() +
                          "' and SlocId = " + getSlocId());
        Row[] r = vo.getFilteredRows(rq);
        String WhId = (String) r[0].getAttribute("WhIdSrc");
        String OrgId = (String) r[0].getAttribute("OrgIdSrc");
        // String OrgId=(String)r[0].getAttribute("OrgIdDest");
        Integer fyid = (Integer) r[0].getAttribute("FyId");
        String avlstk = (String) (callStoredFunction(Types.VARCHAR, "MM.mm_get_avail_stk(?,?,?,?,?,?,?)", new Object[] {
                                                     getCldId(), getSlocId(), OrgId, getItmId(), WhId, fyid, getDocId()
        }));
        // return avlstk;

        return ((String) getAttributeInternal(TRANSAVLSTKFM) == null ? avlstk :
                (String) getAttributeInternal(TRANSAVLSTKFM));
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomDesc.
     * @return the TransUomDesc
     */
    public String getTransUomDesc() {
        if (getItmUom() != null) {
            TransferOrderAMImpl am = (TransferOrderAMImpl) this.getApplicationModule();
            LovDispUomDescVOImpl vo = (LovDispUomDescVOImpl) am.getLovDispUomDesc1();
            vo.setBindCldId(getCldId());
            vo.setBindSlocId(getSlocId());
            vo.setBindUomId(getItmUom());
            vo.executeQuery();
            //   adfLog.info("---uomId--- " + getItmUom() + " desc " + vo.getRowCount());
            Row[] rr = vo.getFilteredRows("UomId", getItmUom());
            // Row[] rr1 = vo.getAllRowsInRange();
            adfLog.info("---uomId--- " + getItmUom() + " desc " + vo.getRowCount() + " length " + rr.length + " " +
                        rr.length + " ");
            if (rr.length > 0) {
                //     adfLog.info("---uom Desc--- " + (String) rr[0].getAttribute("UomDesc"));
                return (String) rr[0].getAttribute("UomDesc");
            } else
                return (String) getAttributeInternal(TRANSUOMDESC);
        } else
            return (String) getAttributeInternal(TRANSUOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomDesc.
     * @param value value to set the  TransUomDesc
     */
    public void setTransUomDesc(String value) {
        setAttributeInternal(TRANSUOMDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmItmVwVO1.
     */
    public RowSet getMmItmVwVO1() {
        return (RowSet) getAttributeInternal(MMITMVWVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItmUomVO1.
     */
    public RowSet getLOVItmUomVO1() {
        return (RowSet) getAttributeInternal(LOVITMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmMrsItmVO1.
     */
    public RowSet getMmMrsItmVO1() {
        return (RowSet) getAttributeInternal(MMMRSITMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
