package mmappwhprf.model.entities;

//import java.sql.Timestamp;
import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Feb 20 09:52:32 PST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class APPBinLoctEOImpl extends EntityImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getCldId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        HoOrgId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        OrgId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        WhId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getWhId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        },
        LocId {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getLocId();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setLocId((String) value);
            }
        },
        LocNm {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getLocNm();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setLocNm((String) value);
            }
        },
        LocDesc {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getLocDesc();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setLocDesc((String) value);
            }
        },
        LocIdParent {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getLocIdParent();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setLocIdParent((String) value);
            }
        },
        UsrIdCreate {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        AppWhOrg {
            public Object get(APPBinLoctEOImpl obj) {
                return obj.getAppWhOrg();
            }

            public void put(APPBinLoctEOImpl obj, Object value) {
                obj.setAppWhOrg((AppWhOrgEOImpl) value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(APPBinLoctEOImpl object);

        public abstract void put(APPBinLoctEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int LOCID = AttributesEnum.LocId.index();
    public static final int LOCNM = AttributesEnum.LocNm.index();
    public static final int LOCDESC = AttributesEnum.LocDesc.index();
    public static final int LOCIDPARENT = AttributesEnum.LocIdParent.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APPWHORG = AttributesEnum.AppWhOrg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public APPBinLoctEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmappwhprf.model.entities.APPBinLoctEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for LocId, using the alias name LocId.
     * @return the value of LocId
     */
    public String getLocId() {
        return (String) getAttributeInternal(LOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocId.
     * @param value value to set the LocId
     */
    public void setLocId(String value) {
        setAttributeInternal(LOCID, value);
    }

    /**
     * Gets the attribute value for LocNm, using the alias name LocNm.
     * @return the value of LocNm
     */
    public String getLocNm() {
        return (String) getAttributeInternal(LOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocNm.
     * @param value value to set the LocNm
     */
    public void setLocNm(String value) {
        setAttributeInternal(LOCNM, value);
    }

    /**
     * Gets the attribute value for LocDesc, using the alias name LocDesc.
     * @return the value of LocDesc
     */
    public String getLocDesc() {
        return (String) getAttributeInternal(LOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocDesc.
     * @param value value to set the LocDesc
     */
    public void setLocDesc(String value) {
        setAttributeInternal(LOCDESC, value);
    }

    /**
     * Gets the attribute value for LocIdParent, using the alias name LocIdParent.
     * @return the value of LocIdParent
     */
    public String getLocIdParent() {
        return (String) getAttributeInternal(LOCIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocIdParent.
     * @param value value to set the LocIdParent
     */
    public void setLocIdParent(String value) {
        setAttributeInternal(LOCIDPARENT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppWhOrgEOImpl.
     */
    public AppWhOrgEOImpl getAppWhOrg() {
        return (AppWhOrgEOImpl) getAttributeInternal(APPWHORG);
    }

    /**
     * Sets <code>value</code> as the associated entity AppWhOrgEOImpl.
     */
    public void setAppWhOrg(AppWhOrgEOImpl value) {
        setAttributeInternal(APPWHORG, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param locId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String whId,
                                       String locId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, whId, locId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }
        /*  try {
            setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()).dateValue());
        } catch (Exception e) {
            System.out.println(e);
        } */
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        Object loc = callStoredFunction(Types.VARCHAR, "FN_APP_GEN_ID(?,?,?,?,?,?)", new Object[] {
                                        this.getSlocId(), this.getCldId(), this.getHoOrgId(), this.getOrgId(),
                                        "APP$BIN$LOC", null
        });
        setLocId(loc == null ? null : loc.toString());
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //     super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
                setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
                setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
            }
        }
        /*  if (operation == DML_INSERT || operation == DML_UPDATE) {
            System.out.println("came");
            if (this.getLocIdParent() == null) {
                System.out.println("is null");
                this.setLocIdParent("0");
            }
        } */
    }

    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);

                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
}

