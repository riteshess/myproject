package stockprofilesetup.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import stockprofilesetup.model.entities.MmStkTakePrfEOImpl;
import stockprofilesetup.model.services.StockProfileStpAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 05 10:36:48 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmStkTakePrfVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSTKTAKEPRFEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MtlSelCrt {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getMtlSelCrt();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setMtlSelCrt((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        PrfDesc {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getPrfDesc();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setPrfDesc((String)value);
            }
        }
        ,
        PrfDflt {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getPrfDflt();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setPrfDflt((String)value);
            }
        }
        ,
        PrfId {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getPrfId();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setPrfId((String)value);
            }
        }
        ,
        PrfNm {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getPrfNm();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setPrfNm((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        StkTakeCycle {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getStkTakeCycle();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setStkTakeCycle((Integer)value);
            }
        }
        ,
        StkTakeCycleMnths {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getStkTakeCycleMnths();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setStkTakeCycleMnths((Float)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        Months_Trans {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getMonths_Trans();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setMonths_Trans((String)value);
            }
        }
        ,
        prfNmTrans {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getprfNmTrans();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setprfNmTrans((String)value);
            }
        }
        ,
        MaterialSelectCrtVO1 {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getMaterialSelectCrtVO1();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        stockTakeCycleVO1 {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getstockTakeCycleVO1();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProfileDefaultVO1 {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getProfileDefaultVO1();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmStkTakePrfVO1 {
            public Object get(MmStkTakePrfVORowImpl obj) {
                return obj.getMmStkTakePrfVO1();
            }

            public void put(MmStkTakePrfVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmStkTakePrfVORowImpl object);

        public abstract void put(MmStkTakePrfVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MTLSELCRT = AttributesEnum.MtlSelCrt.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRFDESC = AttributesEnum.PrfDesc.index();
    public static final int PRFDFLT = AttributesEnum.PrfDflt.index();
    public static final int PRFID = AttributesEnum.PrfId.index();
    public static final int PRFNM = AttributesEnum.PrfNm.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STKTAKECYCLE = AttributesEnum.StkTakeCycle.index();
    public static final int STKTAKECYCLEMNTHS = AttributesEnum.StkTakeCycleMnths.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int MONTHS_TRANS = AttributesEnum.Months_Trans.index();
    public static final int PRFNMTRANS = AttributesEnum.prfNmTrans.index();
    public static final int MATERIALSELECTCRTVO1 = AttributesEnum.MaterialSelectCrtVO1.index();
    public static final int STOCKTAKECYCLEVO1 = AttributesEnum.stockTakeCycleVO1.index();
    public static final int PROFILEDEFAULTVO1 = AttributesEnum.ProfileDefaultVO1.index();
    public static final int MMSTKTAKEPRFVO1 = AttributesEnum.MmStkTakePrfVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmStkTakePrfVORowImpl() {
    }

    /**
     * Gets MmStkTakePrfEO entity object.
     * @return the MmStkTakePrfEO
     */
    public MmStkTakePrfEOImpl getMmStkTakePrfEO() {
        return (MmStkTakePrfEOImpl)getEntity(ENTITY_MMSTKTAKEPRFEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for MTL_SEL_CRT using the alias name MtlSelCrt.
     * @return the MTL_SEL_CRT
     */
    public Integer getMtlSelCrt() {
        return (Integer) getAttributeInternal(MTLSELCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for MTL_SEL_CRT using the alias name MtlSelCrt.
     * @param value value to set the MTL_SEL_CRT
     */
    public void setMtlSelCrt(Integer value) {
        setAttributeInternal(MTLSELCRT, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRF_DESC using the alias name PrfDesc.
     * @return the PRF_DESC
     */
    public String getPrfDesc() {
        return (String) getAttributeInternal(PRFDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for PRF_DESC using the alias name PrfDesc.
     * @param value value to set the PRF_DESC
     */
    public void setPrfDesc(String value) {
        setAttributeInternal(PRFDESC, value);
    }

    /**
     * Gets the attribute value for PRF_DFLT using the alias name PrfDflt.
     * @return the PRF_DFLT
     */
    public String getPrfDflt() {
        return (String) getAttributeInternal(PRFDFLT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRF_DFLT using the alias name PrfDflt.
     * @param value value to set the PRF_DFLT
     */
    public void setPrfDflt(String value) {
        setAttributeInternal(PRFDFLT, value);
    }

    /**
     * Gets the attribute value for PRF_ID using the alias name PrfId.
     * @return the PRF_ID
     */
    public String getPrfId() {
        return (String) getAttributeInternal(PRFID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRF_ID using the alias name PrfId.
     * @param value value to set the PRF_ID
     */
    public void setPrfId(String value) {
        setAttributeInternal(PRFID, value);
    }

    /**
     * Gets the attribute value for PRF_NM using the alias name PrfNm.
     * @return the PRF_NM
     */
    public String getPrfNm() {
        return (String) getAttributeInternal(PRFNM);
    }

    /**
     * Sets <code>value</code> as attribute value for PRF_NM using the alias name PrfNm.
     * @param value value to set the PRF_NM
     */
    public void setPrfNm(String value) {
        setAttributeInternal(PRFNM, value.toUpperCase());
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STK_TAKE_CYCLE using the alias name StkTakeCycle.
     * @return the STK_TAKE_CYCLE
     */
    public Integer getStkTakeCycle() {
        return (Integer) getAttributeInternal(STKTAKECYCLE);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_TAKE_CYCLE using the alias name StkTakeCycle.
     * @param value value to set the STK_TAKE_CYCLE
     */
    public void setStkTakeCycle(Integer value) {
        setAttributeInternal(STKTAKECYCLE, value);
    }

    /**
     * Gets the attribute value for STK_TAKE_CYCLE_MNTHS using the alias name StkTakeCycleMnths.
     * @return the STK_TAKE_CYCLE_MNTHS
     */
    public Float getStkTakeCycleMnths() {
        return (Float) getAttributeInternal(STKTAKECYCLEMNTHS);
    }

    /**
     * Sets <code>value</code> as attribute value for STK_TAKE_CYCLE_MNTHS using the alias name StkTakeCycleMnths.
     * @param value value to set the STK_TAKE_CYCLE_MNTHS
     */
    public void setStkTakeCycleMnths(Float value) {
        setAttributeInternal(STKTAKECYCLEMNTHS, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }
    
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =   elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute Months_Trans.
     * @return the Months_Trans
     */
    public String getMonths_Trans() {
        StockProfileStpAMImpl am = (StockProfileStpAMImpl)resolvElDC("StockProfileStpAMDataControl");
        float input = 0.0f;
        String itemDesc = "0 days";
        try{
        input = getStkTakeCycleMnths();
        
        }catch(NullPointerException npe){
            npe.printStackTrace();
        }
        if(input>0){
        Row[] xx = am.getMmStkTakePrf1().getFilteredRows("StkTakeCycleMnths", input);
        
        if(xx.length>0){
            
       // itemDesc= xx[0].getAttribute("PrfDflt").toString();
        String s = xx[0].getAttribute("StkTakeCycleMnths").toString();
        
        int a = 0;
       // System.out.println("++++++++++++++++"+i);
        if(s.equals("12.0"))
            a = 12;
        if(s.equals("6.0"))
            a = 6;
        if(s.equals("3.0"))
            a = 3;
        if(s.equals("2.0"))
            a = 2;
        if(s.equals("1.0"))
            a = 1;
        if(s.equals("0.5"))
            a = 15;
        if(s.equals("0.0"))
            a = 123;
        
            switch(a) {
            
                case 12:
               
                itemDesc = "12 Months";
               
            break;
            
                case 6:
            
                itemDesc = "6 Months";
            
                break;
                case 3:
            
                itemDesc = "4 Months";
            
                break;
                case 2:
            
                itemDesc = "2 Months";
            
                break;
                case 1:
            
                itemDesc = "1 Month";
            
                break;
                case 15:
            
                itemDesc = "15 Days";
            
                break;
                case 123:
            
                itemDesc = "0 Days";
            
                break;
            
            }
            
        }
        return itemDesc;
        }else{
        return (String) getAttributeInternal(MONTHS_TRANS);
        }
        //return (String) getAttributeInternal(MONTHS_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Months_Trans.
     * @param value value to set the  Months_Trans
     */
    public void setMonths_Trans(String value) {
        setAttributeInternal(MONTHS_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute prfNmTrans.
     * @return the prfNmTrans
     */
    public String getprfNmTrans() {
        return (String) getAttributeInternal(PRFNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute prfNmTrans.
     * @param value value to set the  prfNmTrans
     */
    public void setprfNmTrans(String value) {
        setAttributeInternal(PRFNMTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MaterialSelectCrtVO1.
     */
    public RowSet getMaterialSelectCrtVO1() {
        return (RowSet)getAttributeInternal(MATERIALSELECTCRTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> stockTakeCycleVO1.
     */
    public RowSet getstockTakeCycleVO1() {
        return (RowSet)getAttributeInternal(STOCKTAKECYCLEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProfileDefaultVO1.
     */
    public RowSet getProfileDefaultVO1() {
        return (RowSet)getAttributeInternal(PROFILEDEFAULTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmStkTakePrfVO1.
     */
    public RowSet getMmStkTakePrfVO1() {
        return (RowSet)getAttributeInternal(MMSTKTAKEPRFVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
