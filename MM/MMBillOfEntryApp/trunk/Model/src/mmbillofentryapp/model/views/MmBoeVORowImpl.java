package mmbillofentryapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.sql.Types;

import mmbillofentryapp.model.entities.MmBoeEOImpl;
import mmbillofentryapp.model.services.BillOfEntryAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 02 14:26:49 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmBoeVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMBOEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        DocId,
        DocDt,
        DocType,
        BoeNo,
        FyId,
        DocTypeSrc,
        DocIdSrc,
        DlvSchdlNo,
        FileNo,
        EoId,
        CurrIdSp,
        CurrConvFctr,
        EoIdShp,
        AddsIdShp,
        InvcNoSrc,
        InvcDtSrc,
        BoeStat,
        AuthStat,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransEoNm,
        TransPoNo,
        TransCurrencyName,
        TransEoShpNm,
        TransEoShpAddress,
        TransHoOrgId,
        TransDocNo,
        TransSchdlNo,
        TransPoDocId,
        TransCurrIdBs,
        TransOcOtherSp,
        TransOcFrtOfCost,
        TransOcInsSp,
        TransPartOfAmountOc,
        TransSumOcAmount,
        MmBoeItm,
        MmBoeOc,
        MmBoeSrc,
        LovBOETypeVO,
        LovBOEStatusVO,
        LovSupplierViewVO,
        LovShippingCompanyVO,
        LovVO,
        LovPoNoVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int BOENO = AttributesEnum.BoeNo.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int FILENO = AttributesEnum.FileNo.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int EOIDSHP = AttributesEnum.EoIdShp.index();
    public static final int ADDSIDSHP = AttributesEnum.AddsIdShp.index();
    public static final int INVCNOSRC = AttributesEnum.InvcNoSrc.index();
    public static final int INVCDTSRC = AttributesEnum.InvcDtSrc.index();
    public static final int BOESTAT = AttributesEnum.BoeStat.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSPONO = AttributesEnum.TransPoNo.index();
    public static final int TRANSCURRENCYNAME = AttributesEnum.TransCurrencyName.index();
    public static final int TRANSEOSHPNM = AttributesEnum.TransEoShpNm.index();
    public static final int TRANSEOSHPADDRESS = AttributesEnum.TransEoShpAddress.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSDOCNO = AttributesEnum.TransDocNo.index();
    public static final int TRANSSCHDLNO = AttributesEnum.TransSchdlNo.index();
    public static final int TRANSPODOCID = AttributesEnum.TransPoDocId.index();
    public static final int TRANSCURRIDBS = AttributesEnum.TransCurrIdBs.index();
    public static final int TRANSOCOTHERSP = AttributesEnum.TransOcOtherSp.index();
    public static final int TRANSOCFRTOFCOST = AttributesEnum.TransOcFrtOfCost.index();
    public static final int TRANSOCINSSP = AttributesEnum.TransOcInsSp.index();
    public static final int TRANSPARTOFAMOUNTOC = AttributesEnum.TransPartOfAmountOc.index();
    public static final int TRANSSUMOCAMOUNT = AttributesEnum.TransSumOcAmount.index();
    public static final int MMBOEITM = AttributesEnum.MmBoeItm.index();
    public static final int MMBOEOC = AttributesEnum.MmBoeOc.index();
    public static final int MMBOESRC = AttributesEnum.MmBoeSrc.index();
    public static final int LOVBOETYPEVO = AttributesEnum.LovBOETypeVO.index();
    public static final int LOVBOESTATUSVO = AttributesEnum.LovBOEStatusVO.index();
    public static final int LOVSUPPLIERVIEWVO = AttributesEnum.LovSupplierViewVO.index();
    public static final int LOVSHIPPINGCOMPANYVO = AttributesEnum.LovShippingCompanyVO.index();
    public static final int LOVVO = AttributesEnum.LovVO.index();
    public static final int LOVPONOVO = AttributesEnum.LovPoNoVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmBoeVORowImpl() {
    }

    /**
     * Gets MmBoeEO entity object.
     * @return the MmBoeEO
     */
    public MmBoeEOImpl getMmBoeEO() {
        return (MmBoeEOImpl) getEntity(ENTITY_MMBOEEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE using the alias name DocType.
     * @return the DOC_TYPE
     */
    public Integer getDocType() {
        return (Integer) getAttributeInternal(DOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE using the alias name DocType.
     * @param value value to set the DOC_TYPE
     */
    public void setDocType(Integer value) {
        setAttributeInternal(DOCTYPE, value);
    }

    /**
     * Gets the attribute value for BOE_NO using the alias name BoeNo.
     * @return the BOE_NO
     */
    public String getBoeNo() {
        return (String) getAttributeInternal(BOENO);
    }

    /**
     * Sets <code>value</code> as attribute value for BOE_NO using the alias name BoeNo.
     * @param value value to set the BOE_NO
     */
    public void setBoeNo(String value) {
        setAttributeInternal(BOENO, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for FILE_NO using the alias name FileNo.
     * @return the FILE_NO
     */
    public String getFileNo() {
        return (String) getAttributeInternal(FILENO);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_NO using the alias name FileNo.
     * @param value value to set the FILE_NO
     */
    public void setFileNo(String value) {
        setAttributeInternal(FILENO, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for EO_ID_SHP using the alias name EoIdShp.
     * @return the EO_ID_SHP
     */
    public Integer getEoIdShp() {
        return (Integer) getAttributeInternal(EOIDSHP);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID_SHP using the alias name EoIdShp.
     * @param value value to set the EO_ID_SHP
     */
    public void setEoIdShp(Integer value) {
        setAttributeInternal(EOIDSHP, value);
    }

    /**
     * Gets the attribute value for ADDS_ID_SHP using the alias name AddsIdShp.
     * @return the ADDS_ID_SHP
     */
    public String getAddsIdShp() {
        return (String) getAttributeInternal(ADDSIDSHP);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDS_ID_SHP using the alias name AddsIdShp.
     * @param value value to set the ADDS_ID_SHP
     */
    public void setAddsIdShp(String value) {
        setAttributeInternal(ADDSIDSHP, value);
    }

    /**
     * Gets the attribute value for INVC_NO_SRC using the alias name InvcNoSrc.
     * @return the INVC_NO_SRC
     */
    public String getInvcNoSrc() {
        return (String) getAttributeInternal(INVCNOSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_NO_SRC using the alias name InvcNoSrc.
     * @param value value to set the INVC_NO_SRC
     */
    public void setInvcNoSrc(String value) {
        setAttributeInternal(INVCNOSRC, value);
    }

    /**
     * Gets the attribute value for INVC_DT_SRC using the alias name InvcDtSrc.
     * @return the INVC_DT_SRC
     */
    public Timestamp getInvcDtSrc() {
        return (Timestamp) getAttributeInternal(INVCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_DT_SRC using the alias name InvcDtSrc.
     * @param value value to set the INVC_DT_SRC
     */
    public void setInvcDtSrc(Timestamp value) {
        setAttributeInternal(INVCDTSRC, value);
    }

    /**
     * Gets the attribute value for BOE_STAT using the alias name BoeStat.
     * @return the BOE_STAT
     */
    public Integer getBoeStat() {
        return (Integer) getAttributeInternal(BOESTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for BOE_STAT using the alias name BoeStat.
     * @param value value to set the BOE_STAT
     */
    public void setBoeStat(Integer value) {
        setAttributeInternal(BOESTAT, value);
    }

    /**
     * Gets the attribute value for AUTH_STAT using the alias name AuthStat.
     * @return the AUTH_STAT
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT using the alias name AuthStat.
     * @param value value to set the AUTH_STAT
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if (getEoId() != null) {
            BillOfEntryAMImpl am = (BillOfEntryAMImpl) this.getApplicationModule();
            am.getLovSupplierView().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
            am.getLovSupplierView().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
            am.getLovSupplierView().setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
            am.getLovSupplierView().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
            am.getLovSupplierView().executeQuery();
            Row[] rr = am.getLovSupplierView().getFilteredRows("EoId", getEoId());
            if (rr.length > 0 && rr[0].getAttribute("EoNm") != null) {
                return rr[0].getAttribute("EoNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSEONM);
            }
        } else {
            return (String) getAttributeInternal(TRANSEONM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoNo.
     * @return the TransPoNo
     */
    public String getTransPoNo() {
        if (getDocIdSrc() != null) {
            BillOfEntryAMImpl am = (BillOfEntryAMImpl) this.getApplicationModule();
            am.getLov().setNamedWhereClauseParam("OrgIdBind", getOrgId());
            am.getLov().setNamedWhereClauseParam("CldIdBind", getCldId());
            am.getLov().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            am.getLov().setNamedWhereClauseParam("DocIdBind", getDocIdSrc());
            am.getLov().executeQuery();
            Row[] rr = am.getLov().getFilteredRows("DocId", getDocIdSrc());
            if (rr.length > 0 && rr[0].getAttribute("AuthPoNo") != null) {
                return rr[0].getAttribute("AuthPoNo").toString();
            } else {
                return (String) getAttributeInternal(TRANSPONO);
            }
        } else {

            return (String) getAttributeInternal(TRANSPONO);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoNo.
     * @param value value to set the  TransPoNo
     */
    public void setTransPoNo(String value) {
        setAttributeInternal(TRANSPONO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrencyName.
     * @return the TransCurrencyName
     */
    public String getTransCurrencyName() {
        if (getCurrIdSp() != null) {
            BillOfEntryAMImpl am = (BillOfEntryAMImpl) this.getApplicationModule();
            Row[] rr = am.getLovCurrId().getFilteredRows("CurrId", getCurrIdSp());
            if (rr.length > 0 && rr[0].getAttribute("CurrDesc") != null) {
                return rr[0].getAttribute("CurrDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSCURRENCYNAME);
            }
        } else {
            return (String) getAttributeInternal(TRANSCURRENCYNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrencyName.
     * @param value value to set the  TransCurrencyName
     */
    public void setTransCurrencyName(String value) {
        setAttributeInternal(TRANSCURRENCYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoShpNm.
     * @return the TransEoShpNm
     */
    public String getTransEoShpNm() {
        return (String) getAttributeInternal(TRANSEOSHPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoShpNm.
     * @param value value to set the  TransEoShpNm
     */
    public void setTransEoShpNm(String value) {
        setAttributeInternal(TRANSEOSHPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoShpAddress.
     * @return the TransEoShpAddress
     */
    public String getTransEoShpAddress() {
        return (String) getAttributeInternal(TRANSEOSHPADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoShpAddress.
     * @param value value to set the  TransEoShpAddress
     */
    public void setTransEoShpAddress(String value) {
        setAttributeInternal(TRANSEOSHPADDRESS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocNo.
     * @return the TransDocNo
     */
    public String getTransDocNo() {
        return (String) getAttributeInternal(TRANSDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocNo.
     * @param value value to set the  TransDocNo
     */
    public void setTransDocNo(String value) {
        setAttributeInternal(TRANSDOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSchdlNo.
     * @return the TransSchdlNo
     */
    public Integer getTransSchdlNo() {
        return (Integer) getAttributeInternal(TRANSSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSchdlNo.
     * @param value value to set the  TransSchdlNo
     */
    public void setTransSchdlNo(Integer value) {
        setAttributeInternal(TRANSSCHDLNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoDocId.
     * @return the TransPoDocId
     */
    public String getTransPoDocId() {
        return (String) getAttributeInternal(TRANSPODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoDocId.
     * @param value value to set the  TransPoDocId
     */
    public void setTransPoDocId(String value) {
        setAttributeInternal(TRANSPODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdBs.
     * @return the TransCurrIdBs
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            BillOfEntryAMImpl am = (BillOfEntryAMImpl) this.getApplicationModule();
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    public Integer getTransCurrIdBs() {
        if (getAttributeInternal(TRANSCURRIDBS) != null)
            return (Integer) getAttributeInternal(TRANSCURRIDBS);
        else {

            Integer currId = (Integer) (callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                                           getOrgId() }));

            return currId;
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcOtherSp.
     * @return the TransOcOtherSp
     */
    public Number getTransOcOtherSp() {
        Number ocAmt = this.ocAmountsum(180);
        //System.out.println(" is 180 type " + ocAmt);
        if (ocAmt != null) {
            return ocAmt;
        } else {
            return new Number(0);
        }
        //return (Number) getAttributeInternal(TRANSOCOTHERSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcOtherSp.
     * @param value value to set the  TransOcOtherSp
     */
    public void setTransOcOtherSp(Number value) {
        setAttributeInternal(TRANSOCOTHERSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcFrtOfCost.
     * @return the TransOcFrtOfCost
     */
    public Number getTransOcFrtOfCost() {
        Number ocAmt = this.ocAmountsum(742);
        //  System.out.println(" is 742 type " + ocAmt);
        if (ocAmt != null) {
            return ocAmt;
        } else {
            return new Number(0);
        }
        //return (Number) getAttributeInternal(TRANSOCFRTOFCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcFrtOfCost.
     * @param value value to set the  TransOcFrtOfCost
     */
    public void setTransOcFrtOfCost(Number value) {
        setAttributeInternal(TRANSOCFRTOFCOST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcInsSp.
     * @return the TransOcInsSp
     */
    public Number getTransOcInsSp() {
        Number ocAmt = this.ocAmountsum(743);
        // System.out.println(" is 743 type " + ocAmt);
        if (ocAmt != null) {
            return ocAmt;
        } else {
            return new Number(0);
        }
        // return (Number) getAttributeInternal(TRANSOCINSSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcInsSp.
     * @param value value to set the  TransOcInsSp
     */
    public void setTransOcInsSp(Number value) {
        setAttributeInternal(TRANSOCINSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPartOfAmountOc.
     * @return the TransPartOfAmountOc
     */
    public Number getTransPartOfAmountOc() {
        Number ocAmt = this.ocAmountsum(11111);
        // System.out.println(" is 11111 type " + ocAmt);
        if (ocAmt != null) {
            return ocAmt;
        } else {
            return new Number(0);
        }
        // return (Number) getAttributeInternal(TRANSPARTOFAMOUNTOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPartOfAmountOc.
     * @param value value to set the  TransPartOfAmountOc
     */
    public void setTransPartOfAmountOc(Number value) {
        setAttributeInternal(TRANSPARTOFAMOUNTOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOcAmount.
     * @return the TransSumOcAmount
     */
    public Number getTransSumOcAmount() {
        return (Number) getAttributeInternal(TRANSSUMOCAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOcAmount.
     * @param value value to set the  TransSumOcAmount
     */
    public void setTransSumOcAmount(Number value) {
        setAttributeInternal(TRANSSUMOCAMOUNT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmBoeItm.
     */
    public RowIterator getMmBoeItm() {
        return (RowIterator) getAttributeInternal(MMBOEITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmBoeOc.
     */
    public RowIterator getMmBoeOc() {
        return (RowIterator) getAttributeInternal(MMBOEOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmBoeSrc.
     */
    public RowIterator getMmBoeSrc() {
        return (RowIterator) getAttributeInternal(MMBOESRC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBOETypeVO.
     */
    public RowSet getLovBOETypeVO() {
        return (RowSet) getAttributeInternal(LOVBOETYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBOEStatusVO.
     */
    public RowSet getLovBOEStatusVO() {
        return (RowSet) getAttributeInternal(LOVBOESTATUSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSupplierViewVO.
     */
    public RowSet getLovSupplierViewVO() {
        return (RowSet) getAttributeInternal(LOVSUPPLIERVIEWVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShippingCompanyVO.
     */
    public RowSet getLovShippingCompanyVO() {
        return (RowSet) getAttributeInternal(LOVSHIPPINGCOMPANYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovVO.
     */
    public RowSet getLovVO() {
        return (RowSet) getAttributeInternal(LOVVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPoNoVO.
     */
    public RowSet getLovPoNoVO() {
        return (RowSet) getAttributeInternal(LOVPONOVO);
    }

    public Number ocAmountsum(Integer ocType) {
        Number ocAmt = new Number(0);
        BillOfEntryAMImpl am = (BillOfEntryAMImpl) this.getApplicationModule();
        ViewObjectImpl vo = am.getMmBoeOc();
        if (ocType.compareTo(new Integer(180)) == 0) {
            RowQualifier rq = new RowQualifier(vo);
            rq.setWhereClause("OrgId ='" + getOrgId() + "' and CldId ='" + getCldId() + "' and SlocId =" + getSlocId() +
                              " and DocId ='" + getDocId() + "' and OcCat =" + ocType + " ");
            Row[] rr = vo.getFilteredRows(rq);
            if (rr.length > 0) {
                for (Row rr1 : rr) {
                    am.getOcForImportPoView().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
                    am.getOcForImportPoView().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocIdBind", 18539);
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocTypeIdBind", 0);
                    am.getOcForImportPoView().executeQuery();
                    Row[] rrN = am.getOcForImportPoView().getFilteredRows("OcId", rr1.getAttribute("OcId"));
                    // System.out.println(rrN.length + " rrN.length  " + ocType);
                    if (rrN.length > 0) {
                        if (rrN[0].getAttribute("CustomDecl") != null) {
                            if ("Y".equalsIgnoreCase(rrN[0].getAttribute("CustomDecl").toString())) {
                                //    System.out.println(ocType + "rr1.getAttribute(\"OcAmtSp\") " +
                                //         rr1.getAttribute("OcAmtSp"));
                                ocAmt = ocAmt.add((Number) rr1.getAttribute("OcAmtSp"));
                            }
                        }
                    }
                }
            }
        } else if (ocType.compareTo(new Integer(742)) == 0 || ocType.compareTo(new Integer(743)) == 0) {
            RowQualifier rq = new RowQualifier(vo);
            rq.setWhereClause("OrgId ='" + getOrgId() + "' and CldId ='" + getCldId() + "' and SlocId =" + getSlocId() +
                              " and DocId ='" + getDocId() + "' and OcCat =" + ocType + " ");

            Row[] rr = vo.getFilteredRows(rq);
            // System.out.println(rr.length + " rr.lenth " + rq.getExprStr());
            if (rr.length > 0) {
                for (Row rr1 : rr) {
                    am.getOcForImportPoView().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
                    am.getOcForImportPoView().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocIdBind", 18539);
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocTypeIdBind", 0);
                    am.getOcForImportPoView().executeQuery();
                    Row[] rrN = am.getOcForImportPoView().getFilteredRows("OcId", rr1.getAttribute("OcId"));
                    // System.out.println(rrN.length + " rrN.length  " + ocType);
                    if (rrN.length > 0) {
                        //                        if (rrN[0].getAttribute("PartOfCost") != null) {
                        //                            if ("Y".equalsIgnoreCase(rrN[0].getAttribute("PartOfCost").toString())) {
                        //                                /*        System.out.println(ocType + "rr1.getAttribute(\"OcAmtSp\") " +
                        //                                                   rr1.getAttribute("OcAmtSp"));
                        //                          */
                        ocAmt = ocAmt.add((Number) rr1.getAttribute("OcAmtSp"));
                        //  }
                        // }

                    }
                }
            }

            // System.out.println(ocType + "oc amount " + ocAmt);
        } else if (ocType.compareTo(new Integer(11111)) == 0) {
            RowQualifier rq = new RowQualifier(vo);
            rq.setWhereClause("OrgId ='" + getOrgId() + "' and CldId ='" + getCldId() + "' and SlocId =" + getSlocId() +
                              " and DocId ='" + getDocId() + "' ");
            Row[] rr = vo.getFilteredRows(rq);
            //  System.out.println(ocType + "oc amount " + ocAmt);
            if (rr.length > 0) {
                for (Row rr1 : rr) {
                    am.getOcForImportPoView().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
                    am.getOcForImportPoView().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocIdBind", 18539);
                    am.getOcForImportPoView().setNamedWhereClauseParam("DocTypeIdBind", 0);
                    am.getOcForImportPoView().executeQuery();
                    Row[] rrN = am.getOcForImportPoView().getFilteredRows("OcId", rr1.getAttribute("OcId"));
                    if (rrN.length > 0 && rrN[0].getAttribute("PartOfCost") != null) {
                        if ("Y".equalsIgnoreCase(rrN[0].getAttribute("PartOfCost").toString()))
                            ocAmt = ocAmt.add((Number) rr1.getAttribute("OcAmtSp"));
                    }
                }
            }
        }
        return ocAmt;
    }
}

