package mmbillofentryapp.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 15 10:59:40 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmBoeItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        DocId,
        DocIdSrc,
        DlvSchdlNo,
        ItmId,
        ItmUom,
        PendQty,
        DlvQty,
        ItmUomBs,
        UomConvFctr,
        DlvQtyBs,
        LndPrice,
        PurPrice,
        PurPriceBs,
        LndPriceBs,
        TaxableAmtSp,
        TaxableAmtBs,
        DiscAmtSp,
        DiscAmtBs,
        TotTaxAmtSp,
        TotTaxAmtBs,
        RecTaxAmtSp,
        RecTaxAmtBs,
        OcAmtSp,
        OcAmtBs,
        TaxableAmtSpOrig,
        TaxableAmtBsOrig,
        MmBoe,
        MmBoeTr,
        MmBoeSrc;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int DLVQTY = AttributesEnum.DlvQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int DLVQTYBS = AttributesEnum.DlvQtyBs.index();
    public static final int LNDPRICE = AttributesEnum.LndPrice.index();
    public static final int PURPRICE = AttributesEnum.PurPrice.index();
    public static final int PURPRICEBS = AttributesEnum.PurPriceBs.index();
    public static final int LNDPRICEBS = AttributesEnum.LndPriceBs.index();
    public static final int TAXABLEAMTSP = AttributesEnum.TaxableAmtSp.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int TOTTAXAMTSP = AttributesEnum.TotTaxAmtSp.index();
    public static final int TOTTAXAMTBS = AttributesEnum.TotTaxAmtBs.index();
    public static final int RECTAXAMTSP = AttributesEnum.RecTaxAmtSp.index();
    public static final int RECTAXAMTBS = AttributesEnum.RecTaxAmtBs.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int TAXABLEAMTSPORIG = AttributesEnum.TaxableAmtSpOrig.index();
    public static final int TAXABLEAMTBSORIG = AttributesEnum.TaxableAmtBsOrig.index();
    public static final int MMBOE = AttributesEnum.MmBoe.index();
    public static final int MMBOETR = AttributesEnum.MmBoeTr.index();
    public static final int MMBOESRC = AttributesEnum.MmBoeSrc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmBoeItmEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for DlvQty, using the alias name DlvQty.
     * @return the value of DlvQty
     */
    public Number getDlvQty() {
        return (Number) getAttributeInternal(DLVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvQty.
     * @param value value to set the DlvQty
     */
    public void setDlvQty(Number value) {
        setAttributeInternal(DLVQTY, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for DlvQtyBs, using the alias name DlvQtyBs.
     * @return the value of DlvQtyBs
     */
    public Number getDlvQtyBs() {
        return (Number) getAttributeInternal(DLVQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvQtyBs.
     * @param value value to set the DlvQtyBs
     */
    public void setDlvQtyBs(Number value) {
        setAttributeInternal(DLVQTYBS, value);
    }

    /**
     * Gets the attribute value for LndPrice, using the alias name LndPrice.
     * @return the value of LndPrice
     */
    public Number getLndPrice() {
        return (Number) getAttributeInternal(LNDPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LndPrice.
     * @param value value to set the LndPrice
     */
    public void setLndPrice(Number value) {
        setAttributeInternal(LNDPRICE, value);
    }

    /**
     * Gets the attribute value for PurPrice, using the alias name PurPrice.
     * @return the value of PurPrice
     */
    public Number getPurPrice() {
        return (Number) getAttributeInternal(PURPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PurPrice.
     * @param value value to set the PurPrice
     */
    public void setPurPrice(Number value) {
        setAttributeInternal(PURPRICE, value);
    }

    /**
     * Gets the attribute value for PurPriceBs, using the alias name PurPriceBs.
     * @return the value of PurPriceBs
     */
    public Number getPurPriceBs() {
        return (Number) getAttributeInternal(PURPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PurPriceBs.
     * @param value value to set the PurPriceBs
     */
    public void setPurPriceBs(Number value) {
        setAttributeInternal(PURPRICEBS, value);
    }

    /**
     * Gets the attribute value for LndPriceBs, using the alias name LndPriceBs.
     * @return the value of LndPriceBs
     */
    public Number getLndPriceBs() {
        return (Number) getAttributeInternal(LNDPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LndPriceBs.
     * @param value value to set the LndPriceBs
     */
    public void setLndPriceBs(Number value) {
        setAttributeInternal(LNDPRICEBS, value);
    }

    /**
     * Gets the attribute value for TaxableAmtSp, using the alias name TaxableAmtSp.
     * @return the value of TaxableAmtSp
     */
    public Number getTaxableAmtSp() {
        return (Number) getAttributeInternal(TAXABLEAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtSp.
     * @param value value to set the TaxableAmtSp
     */
    public void setTaxableAmtSp(Number value) {
        setAttributeInternal(TAXABLEAMTSP, value);
    }

    /**
     * Gets the attribute value for TaxableAmtBs, using the alias name TaxableAmtBs.
     * @return the value of TaxableAmtBs
     */
    public Number getTaxableAmtBs() {
        return (Number) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtBs.
     * @param value value to set the TaxableAmtBs
     */
    public void setTaxableAmtBs(Number value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtSp, using the alias name DiscAmtSp.
     * @return the value of DiscAmtSp
     */
    public Number getDiscAmtSp() {
        return (Number) getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtSp.
     * @param value value to set the DiscAmtSp
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TotTaxAmtSp, using the alias name TotTaxAmtSp.
     * @return the value of TotTaxAmtSp
     */
    public Number getTotTaxAmtSp() {
        return (Number) getAttributeInternal(TOTTAXAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotTaxAmtSp.
     * @param value value to set the TotTaxAmtSp
     */
    public void setTotTaxAmtSp(Number value) {
        setAttributeInternal(TOTTAXAMTSP, value);
    }

    /**
     * Gets the attribute value for TotTaxAmtBs, using the alias name TotTaxAmtBs.
     * @return the value of TotTaxAmtBs
     */
    public Number getTotTaxAmtBs() {
        return (Number) getAttributeInternal(TOTTAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotTaxAmtBs.
     * @param value value to set the TotTaxAmtBs
     */
    public void setTotTaxAmtBs(Number value) {
        setAttributeInternal(TOTTAXAMTBS, value);
    }

    /**
     * Gets the attribute value for RecTaxAmtSp, using the alias name RecTaxAmtSp.
     * @return the value of RecTaxAmtSp
     */
    public Number getRecTaxAmtSp() {
        return (Number) getAttributeInternal(RECTAXAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecTaxAmtSp.
     * @param value value to set the RecTaxAmtSp
     */
    public void setRecTaxAmtSp(Number value) {
        setAttributeInternal(RECTAXAMTSP, value);
    }

    /**
     * Gets the attribute value for RecTaxAmtBs, using the alias name RecTaxAmtBs.
     * @return the value of RecTaxAmtBs
     */
    public Number getRecTaxAmtBs() {
        return (Number) getAttributeInternal(RECTAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecTaxAmtBs.
     * @param value value to set the RecTaxAmtBs
     */
    public void setRecTaxAmtBs(Number value) {
        setAttributeInternal(RECTAXAMTBS, value);
    }

    /**
     * Gets the attribute value for OcAmtSp, using the alias name OcAmtSp.
     * @return the value of OcAmtSp
     */
    public Number getOcAmtSp() {
        return (Number) getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtSp.
     * @param value value to set the OcAmtSp
     */
    public void setOcAmtSp(Number value) {
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for OcAmtBs, using the alias name OcAmtBs.
     * @return the value of OcAmtBs
     */
    public Number getOcAmtBs() {
        return (Number) getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcAmtBs.
     * @param value value to set the OcAmtBs
     */
    public void setOcAmtBs(Number value) {
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxableAmtSpOrig, using the alias name TaxableAmtSpOrig.
     * @return the value of TaxableAmtSpOrig
     */
    public Number getTaxableAmtSpOrig() {
        return (Number) getAttributeInternal(TAXABLEAMTSPORIG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtSpOrig.
     * @param value value to set the TaxableAmtSpOrig
     */
    public void setTaxableAmtSpOrig(Number value) {
        setAttributeInternal(TAXABLEAMTSPORIG, value);
    }

    /**
     * Gets the attribute value for TaxableAmtBsOrig, using the alias name TaxableAmtBsOrig.
     * @return the value of TaxableAmtBsOrig
     */
    public Number getTaxableAmtBsOrig() {
        return (Number) getAttributeInternal(TAXABLEAMTBSORIG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtBsOrig.
     * @param value value to set the TaxableAmtBsOrig
     */
    public void setTaxableAmtBsOrig(Number value) {
        setAttributeInternal(TAXABLEAMTBSORIG, value);
    }

    /**
     * @return the associated entity MmBoeEOImpl.
     */
    public MmBoeEOImpl getMmBoe() {
        return (MmBoeEOImpl) getAttributeInternal(MMBOE);
    }

    /**
     * Sets <code>value</code> as the associated entity MmBoeEOImpl.
     */
    public void setMmBoe(MmBoeEOImpl value) {
        setAttributeInternal(MMBOE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmBoeTr() {
        return (RowIterator) getAttributeInternal(MMBOETR);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getMmBoeSrc() {
        return (EntityImpl) getAttributeInternal(MMBOESRC);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMmBoeSrc(EntityImpl value) {
        setAttributeInternal(MMBOESRC, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param docIdSrc key constituent
     * @param dlvSchdlNo key constituent
     * @param itmId key constituent
     * @param itmUom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String docIdSrc,
                                       Integer dlvSchdlNo, String itmId, String itmUom) {
        return new Key(new Object[] { cldId, slocId, orgId, docId, docIdSrc, dlvSchdlNo, itmId, itmUom });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmbillofentryapp.model.entities.MmBoeItmEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
     //   super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

