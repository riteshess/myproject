package mmqcprocess.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 26 10:59:18 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransQcSearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QcItmTypeTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getQcItmTypeTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setQcItmTypeTrans((Integer) value);
            }
        }
        ,
        ItemNmTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getItemNmTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setItemNmTrans((String) value);
            }
        }
        ,
        ReceiptNoTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getReceiptNoTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setReceiptNoTrans((String) value);
            }
        }
        ,
        FromDTTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getFromDTTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setFromDTTrans((Date) value);
            }
        }
        ,
        ToDttrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getToDttrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setToDttrans((Date) value);
            }
        }
        ,
        CldIdTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setCldIdTrans((String) value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer) value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String) value);
            }
        }
        ,
        ItmIdTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getItmIdTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setItmIdTrans((String) value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setHoOrgIdTrans((String) value);
            }
        }
        ,
        QcNoTrans {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getQcNoTrans();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setQcNoTrans((String) value);
            }
        }
        ,
        TransQcStatus {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getTransQcStatus();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setTransQcStatus((String) value);
            }
        }
        ,
        LovQcItmTypeVO {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getLovQcItmTypeVO();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdO {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getLovItmIdO();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQcStatusVO1 {
            public Object get(TransQcSearchVORowImpl obj) {
                return obj.getLovQcStatusVO1();
            }

            public void put(TransQcSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TransQcSearchVORowImpl object);

        public abstract void put(TransQcSearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int QCITMTYPETRANS = AttributesEnum.QcItmTypeTrans.index();
    public static final int ITEMNMTRANS = AttributesEnum.ItemNmTrans.index();
    public static final int RECEIPTNOTRANS = AttributesEnum.ReceiptNoTrans.index();
    public static final int FROMDTTRANS = AttributesEnum.FromDTTrans.index();
    public static final int TODTTRANS = AttributesEnum.ToDttrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int ITMIDTRANS = AttributesEnum.ItmIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int QCNOTRANS = AttributesEnum.QcNoTrans.index();
    public static final int TRANSQCSTATUS = AttributesEnum.TransQcStatus.index();
    public static final int LOVQCITMTYPEVO = AttributesEnum.LovQcItmTypeVO.index();
    public static final int LOVITMIDO = AttributesEnum.LovItmIdO.index();
    public static final int LOVQCSTATUSVO1 = AttributesEnum.LovQcStatusVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransQcSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }


    /**
     * Gets the attribute value for the calculated attribute QcItmTypeTrans.
     * @return the QcItmTypeTrans
     */
    public Integer getQcItmTypeTrans() {
        return (Integer) getAttributeInternal(QCITMTYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcItmTypeTrans.
     * @param value value to set the  QcItmTypeTrans
     */
    public void setQcItmTypeTrans(Integer value) {
        setAttributeInternal(QCITMTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNmTrans.
     * @return the ItemNmTrans
     */
    public String getItemNmTrans() {
        return (String) getAttributeInternal(ITEMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNmTrans.
     * @param value value to set the  ItemNmTrans
     */
    public void setItemNmTrans(String value) {
        setAttributeInternal(ITEMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReceiptNoTrans.
     * @return the ReceiptNoTrans
     */
    public String getReceiptNoTrans() {
        return (String) getAttributeInternal(RECEIPTNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReceiptNoTrans.
     * @param value value to set the  ReceiptNoTrans
     */
    public void setReceiptNoTrans(String value) {
        setAttributeInternal(RECEIPTNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDTTrans.
     * @return the FromDTTrans
     */
    public Date getFromDTTrans() {
        return (Date) getAttributeInternal(FROMDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDTTrans.
     * @param value value to set the  FromDTTrans
     */
    public void setFromDTTrans(Date value) {
        setAttributeInternal(FROMDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDttrans.
     * @return the ToDttrans
     */
    public Date getToDttrans() {
        return (Date) getAttributeInternal(TODTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDttrans.
     * @param value value to set the  ToDttrans
     */
    public void setToDttrans(Date value) {
        setAttributeInternal(TODTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
     public String resolvEl(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
    public String getCldIdTrans() {
        if(getAttributeInternal(CLDIDTRANS)==null){
           String paramCldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
            return paramCldId;
        }else{
        return (String) getAttributeInternal(CLDIDTRANS);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if(getAttributeInternal(SLOCIDTRANS)==null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        }else{
            return (Integer) getAttributeInternal(SLOCIDTRANS);
        }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        if(getAttributeInternal(ORGIDTRANS)==null){
            String paramOrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
            return paramOrgId;
        }else{
        return (String) getAttributeInternal(ORGIDTRANS);
        }
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmIdTrans.
     * @return the ItmIdTrans
     */
    public String getItmIdTrans() {
        return (String) getAttributeInternal(ITMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmIdTrans.
     * @param value value to set the  ItmIdTrans
     */
    public void setItmIdTrans(String value) {
        setAttributeInternal(ITMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        if(getAttributeInternal(HOORGIDTRANS) == null){
            String hoOrg =resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
            return hoOrg;
        }else
        return (String) getAttributeInternal(HOORGIDTRANS);
         
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcNoTrans.
     * @return the QcNoTrans
     */
    public String getQcNoTrans() {
        return (String) getAttributeInternal(QCNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QcNoTrans.
     * @param value value to set the  QcNoTrans
     */
    public void setQcNoTrans(String value) {
        setAttributeInternal(QCNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransQcStatus.
     * @return the TransQcStatus
     */
    public String getTransQcStatus() {
        return (String) getAttributeInternal(TRANSQCSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransQcStatus.
     * @param value value to set the  TransQcStatus
     */
    public void setTransQcStatus(String value) {
        setAttributeInternal(TRANSQCSTATUS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQcItmTypeVO.
     */
    public RowSet getLovQcItmTypeVO() {
        return (RowSet)getAttributeInternal(LOVQCITMTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdO.
     */
    public RowSet getLovItmIdO() {
        return (RowSet)getAttributeInternal(LOVITMIDO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQcStatusVO1.
     */
    public RowSet getLovQcStatusVO1() {
        return (RowSet) getAttributeInternal(LOVQCSTATUSVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
