package mmqcprocess.model.views;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 20 17:01:08 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovMnfRcOpItmVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OpId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getOpId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OpSrNo {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getOpSrNo();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmType {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getItmType();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmUom {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmQty {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getItmQty();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PdoId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getPdoId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RqmtAreaId {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getRqmtAreaId();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QcReqdFlg {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getQcReqdFlg();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        QcOverrideFlg {
            public Object get(LovMnfRcOpItmVORowImpl obj) {
                return obj.getQcOverrideFlg();
            }

            public void put(LovMnfRcOpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LovMnfRcOpItmVORowImpl object);

        public abstract void put(LovMnfRcOpItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int PDOID = AttributesEnum.PdoId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int QCREQDFLG = AttributesEnum.QcReqdFlg.index();
    public static final int QCOVERRIDEFLG = AttributesEnum.QcOverrideFlg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovMnfRcOpItmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpId.
     * @return the OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNo.
     * @return the OpSrNo
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmType.
     * @return the ItmType
     */
    public Integer getItmType() {
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmQty.
     * @return the ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute PdoId.
     * @return the PdoId
     */
    public String getPdoId() {
        return (String) getAttributeInternal(PDOID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaId.
     * @return the RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Gets the attribute value for the calculated attribute QcReqdFlg.
     * @return the QcReqdFlg
     */
    public String getQcReqdFlg() {
        return "Y";
    }

    /**
     * Gets the attribute value for the calculated attribute QcOverrideFlg.
     * @return the QcOverrideFlg
     */
    public String getQcOverrideFlg() {
        return "N";
    }
    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

