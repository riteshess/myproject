package MMMtlMis.model.view;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 15 12:48:58 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrchTrnsVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        whId {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getwhId();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setwhId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmDesc {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setItmDesc((String) value);
            }
        }
        ,
        cldId {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getcldId();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setcldId((String) value);
            }
        }
        ,
        slocId {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getslocId();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setslocId((Integer) value);
            }
        }
        ,
        orgId {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getorgId();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setorgId((String) value);
            }
        }
        ,
        ItmGrp {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getItmGrp();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setItmGrp((String) value);
            }
        }
        ,
        fromDate {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getfromDate();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setfromDate((Timestamp) value);
            }
        }
        ,
        toDate {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.gettoDate();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.settoDate((Timestamp) value);
            }
        }
        ,
        financialYear {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getfinancialYear();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setfinancialYear((Integer) value);
            }
        }
        ,
        hoOrgIdTrans {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.gethoOrgIdTrans();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.sethoOrgIdTrans((String) value);
            }
        }
        ,
        WHVO1 {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getWHVO1();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemVO1 {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getItemVO1();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmGrpVO1 {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getItmGrpVO1();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FinYrVO1 {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getFinYrVO1();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgVO1 {
            public Object get(SrchTrnsVORowImpl obj) {
                return obj.getOrgVO1();
            }

            public void put(SrchTrnsVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SrchTrnsVORowImpl object);

        public abstract void put(SrchTrnsVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int WHID = AttributesEnum.whId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int CLDID = AttributesEnum.cldId.index();
    public static final int SLOCID = AttributesEnum.slocId.index();
    public static final int ORGID = AttributesEnum.orgId.index();
    public static final int ITMGRP = AttributesEnum.ItmGrp.index();
    public static final int FROMDATE = AttributesEnum.fromDate.index();
    public static final int TODATE = AttributesEnum.toDate.index();
    public static final int FINANCIALYEAR = AttributesEnum.financialYear.index();
    public static final int HOORGIDTRANS = AttributesEnum.hoOrgIdTrans.index();
    public static final int WHVO1 = AttributesEnum.WHVO1.index();
    public static final int ITEMVO1 = AttributesEnum.ItemVO1.index();
    public static final int ITMGRPVO1 = AttributesEnum.ItmGrpVO1.index();
    public static final int FINYRVO1 = AttributesEnum.FinYrVO1.index();
    public static final int ORGVO1 = AttributesEnum.OrgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrchTrnsVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }


    /**
     * Gets the attribute value for the calculated attribute whId.
     * @return the whId
     */
    public String getwhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute whId.
     * @param value value to set the  whId
     */
    public void setwhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cldId.
     * @return the cldId
     */
    public String getcldId() {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        System.out.println("---------------------------------------------"+cldId);
        if(cldId != null)
        {return cldId;}
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cldId.
     * @param value value to set the  cldId
     */
    public void setcldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute slocId.
     * @return the slocId
     */
    public Integer getslocId() {
        String SerLocId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        Integer slocId=Integer.parseInt(SerLocId);
        if(slocId != null)
        {return slocId;}
        
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute slocId.
     * @param value value to set the  slocId
     */
    public void setslocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute orgId.
     * @return the orgId
     */
    public String getorgId() {
     //   String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
      //  if(orgId != null)
      //  {return orgId;}
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute orgId.
     * @param value value to set the  orgId
     */
    public void setorgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrp.
     * @return the ItmGrp
     */
    public String getItmGrp() {
        return (String) getAttributeInternal(ITMGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrp.
     * @param value value to set the  ItmGrp
     */
    public void setItmGrp(String value) {
        setAttributeInternal(ITMGRP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute fromDate.
     * @return the fromDate
     */
    public Timestamp getfromDate() {
        return (Timestamp) getAttributeInternal(FROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fromDate.
     * @param value value to set the  fromDate
     */
    public void setfromDate(Timestamp value) {
        setAttributeInternal(FROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute toDate.
     * @return the toDate
     */
    public oracle.jbo.domain.Timestamp gettoDate() {
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(TODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute toDate.
     * @param value value to set the  toDate
     */
    public void settoDate(Timestamp value) {
        setAttributeInternal(TODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute financialYear.
     * @return the financialYear
     */
    public Integer getfinancialYear() {
     
        if((Integer)getAttributeInternal(FINANCIALYEAR) == null)
        { Integer fyid=(Integer)(callStoredFunction(Types.INTEGER,"APP.GET_ORG_FY_ID (?,?,?)", new Object[] {getcldId(),getorgId(),new Timestamp(System.currentTimeMillis())}));
            return fyid;
        }
      else
        return (Integer) getAttributeInternal(FINANCIALYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute financialYear.
     * @param value value to set the  financialYear
     */
    public void setfinancialYear(Integer value) {
           setAttributeInternal(FINANCIALYEAR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute hoOrgIdTrans.
     * @return the hoOrgIdTrans
     */
    public String gethoOrgIdTrans() {
        
        String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
        System.out.println("--------------------------------------------->>>>>"+hoOrgId);
        /*  if(hoOrgId != null)
        {return hoOrgId;} */
        return ((String) getAttributeInternal(HOORGIDTRANS) == null ? hoOrgId : (String) getAttributeInternal(HOORGIDTRANS));
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute hoOrgIdTrans.
     * @param value value to set the  hoOrgIdTrans
     */
    public void sethoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WHVO1.
     */
    public RowSet getWHVO1() {
        return (RowSet)getAttributeInternal(WHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemVO1.
     */
    public RowSet getItemVO1() {
        return (RowSet)getAttributeInternal(ITEMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmGrpVO1.
     */
    public RowSet getItmGrpVO1() {
        return (RowSet)getAttributeInternal(ITMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FinYrVO1.
     */
    public RowSet getFinYrVO1() {
        return (RowSet)getAttributeInternal(FINYRVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgVO1.
     */
    public RowSet getOrgVO1() {
        return (RowSet)getAttributeInternal(ORGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public static String evaluateEL(String el) {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el,Object.class);
    String retVal = exp.getValue(elContext).toString();
    return retVal;
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
                return st.getObject(1);

            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {st.close();} catch (SQLException e) {e.printStackTrace();}
                }
            }
        }
}
