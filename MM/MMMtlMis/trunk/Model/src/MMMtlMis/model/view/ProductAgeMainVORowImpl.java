package MMMtlMis.model.view;

//import MMMtlMis.model.view.common.Type;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 29 15:13:03 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductAgeMainVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    Number zero=new Number(0);
    public enum AttributesEnum {
        Hoorgid {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getHoorgid();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Orgid {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getOrgid();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Whid {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getWhid();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Itmid {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getItmid();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Grpid {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getGrpid();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Itmdesc {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getItmdesc();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setItmdesc((String) value);
            }
        }
        ,
        Uomdesc {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getUomdesc();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UomNm {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getUomNm();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Osdays {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getOsdays();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TotStk {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TotVal {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getTotVal();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range1 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange1();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range2 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange2();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range3 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange3();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range4 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange4();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range5 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange5();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range6 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange6();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range1val {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange1val();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange1val((Number) value);
            }
        }
        ,
        Range2val {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange2val();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range3val {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange3val();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range4val {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange4val();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range5val {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange5val();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Rangeval6 {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRangeval6();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Range2Percent {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange2Percent();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange2Percent((Number) value);
            }
        }
        ,
        Range3Percent {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange3Percent();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange3Percent((Number) value);
            }
        }
        ,
        Range4Percent {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange4Percent();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange4Percent((Number) value);
            }
        }
        ,
        Range5Percent {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange5Percent();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange5Percent((Number) value);
            }
        }
        ,
        Range6Percent {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getRange6Percent();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setRange6Percent((Number) value);
            }
        }
        ,
        TransCurrNm {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getTransCurrNm();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setTransCurrNm((String) value);
            }
        }
        ,
        TransCheck {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getTransCheck();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setTransCheck((String) value);
            }
        }
        ,
        ProductAgeLot {
            public Object get(ProductAgeMainVORowImpl obj) {
                return obj.getProductAgeLot();
            }

            public void put(ProductAgeMainVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ProductAgeMainVORowImpl object);

        public abstract void put(ProductAgeMainVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HOORGID = AttributesEnum.Hoorgid.index();
    public static final int ORGID = AttributesEnum.Orgid.index();
    public static final int WHID = AttributesEnum.Whid.index();
    public static final int ITMID = AttributesEnum.Itmid.index();
    public static final int GRPID = AttributesEnum.Grpid.index();
    public static final int ITMDESC = AttributesEnum.Itmdesc.index();
    public static final int UOMDESC = AttributesEnum.Uomdesc.index();
    public static final int UOMNM = AttributesEnum.UomNm.index();
    public static final int OSDAYS = AttributesEnum.Osdays.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int TOTVAL = AttributesEnum.TotVal.index();
    public static final int RANGE1 = AttributesEnum.Range1.index();
    public static final int RANGE2 = AttributesEnum.Range2.index();
    public static final int RANGE3 = AttributesEnum.Range3.index();
    public static final int RANGE4 = AttributesEnum.Range4.index();
    public static final int RANGE5 = AttributesEnum.Range5.index();
    public static final int RANGE6 = AttributesEnum.Range6.index();
    public static final int RANGE1VAL = AttributesEnum.Range1val.index();
    public static final int RANGE2VAL = AttributesEnum.Range2val.index();
    public static final int RANGE3VAL = AttributesEnum.Range3val.index();
    public static final int RANGE4VAL = AttributesEnum.Range4val.index();
    public static final int RANGE5VAL = AttributesEnum.Range5val.index();
    public static final int RANGEVAL6 = AttributesEnum.Rangeval6.index();
    public static final int RANGE2PERCENT = AttributesEnum.Range2Percent.index();
    public static final int RANGE3PERCENT = AttributesEnum.Range3Percent.index();
    public static final int RANGE4PERCENT = AttributesEnum.Range4Percent.index();
    public static final int RANGE5PERCENT = AttributesEnum.Range5Percent.index();
    public static final int RANGE6PERCENT = AttributesEnum.Range6Percent.index();
    public static final int TRANSCURRNM = AttributesEnum.TransCurrNm.index();
    public static final int TRANSCHECK = AttributesEnum.TransCheck.index();
    public static final int PRODUCTAGELOT = AttributesEnum.ProductAgeLot.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductAgeMainVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Hoorgid.
     * @return the Hoorgid
     */
    public String getHoorgid() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute Orgid.
     * @return the Orgid
     */
    public String getOrgid() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute Whid.
     * @return the Whid
     */
    public String getWhid() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute Itmid.
     * @return the Itmid
     */
    public String getItmid() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute Grpid.
     * @return the Grpid
     */
    public String getGrpid() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute Itmdesc.
     * @return the Itmdesc
     */
    public String getItmdesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Itmdesc.
     * @param value value to set the  Itmdesc
     */
    public void setItmdesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Uomdesc.
     * @return the Uomdesc
     */
    public String getUomdesc() {
        return (String) getAttributeInternal(UOMDESC);
    }


    /**
     * Gets the attribute value for the calculated attribute UomNm.
     * @return the UomNm
     */
    public String getUomNm() {
        return (String) getAttributeInternal(UOMNM);
    }

    /**
     * Gets the attribute value for the calculated attribute Osdays.
     * @return the Osdays
     */
    public Number getOsdays() {
        return (Number) getAttributeInternal(OSDAYS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public Number getTotStk() {
        return (Number) getAttributeInternal(TOTSTK);
    }

    /**
     * Gets the attribute value for the calculated attribute TotVal.
     * @return the TotVal
     */
    public Number getTotVal() {
        return (Number) getAttributeInternal(TOTVAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Range1.
     * @return the Range1
     */
    public Number getRange1() {
        return (Number) getAttributeInternal(RANGE1);
    }


    /**
     * Gets the attribute value for the calculated attribute Range2.
     * @return the Range2
     */
    public Number getRange2() {
        return (Number) getAttributeInternal(RANGE2);
    }


    /**
     * Gets the attribute value for the calculated attribute Range3.
     * @return the Range3
     */
    public Number getRange3() {
        return (Number) getAttributeInternal(RANGE3);
    }


    /**
     * Gets the attribute value for the calculated attribute Range4.
     * @return the Range4
     */
    public Number getRange4() {
        return (Number) getAttributeInternal(RANGE4);
    }


    /**
     * Gets the attribute value for the calculated attribute Range5.
     * @return the Range5
     */
    public Number getRange5() {
        return (Number) getAttributeInternal(RANGE5);
    }


    /**
     * Gets the attribute value for the calculated attribute Range6.
     * @return the Range6
     */
    public Number getRange6() {
        return (Number) getAttributeInternal(RANGE6);
    }


    /**
     * Gets the attribute value for the calculated attribute Range1val.
     * @return the Range1val
     */
    public Number getRange1val() {
        return (Number) getAttributeInternal(RANGE1VAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range1val.
     * @param value value to set the  Range1val
     */
    public void setRange1val(Number value) {
        setAttributeInternal(RANGE1VAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Range2val.
     * @return the Range2val
     */
    public Number getRange2val() {
        return (Number) getAttributeInternal(RANGE2VAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Range3val.
     * @return the Range3val
     */
    public Number getRange3val() {
        return (Number) getAttributeInternal(RANGE3VAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Range4val.
     * @return the Range4val
     */
    public Number getRange4val() {
        return (Number) getAttributeInternal(RANGE4VAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Range5val.
     * @return the Range5val
     */
    public Number getRange5val() {
        return (Number) getAttributeInternal(RANGE5VAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Rangeval6.
     * @return the Rangeval6
     */
    public Number getRangeval6() {
        return (Number) getAttributeInternal(RANGEVAL6);
    }

    /**
     * Gets the attribute value for the calculated attribute Range1Percent.
     * @return the Range1Percent
     */
    public Number getRange2Percent() {
        Number r1= new Number(0);
        if(getRange2()!=null && getTotStk()!=zero) {
            r1=getRange2().divide(getTotStk());
            return (Number)r1.multiply(new Number(100)).round(2);
        }
        else
        {
        return (Number) getAttributeInternal(RANGE2PERCENT);
        }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range1Percent.
     * @param value value to set the  Range1Percent
     */
    public void setRange2Percent(Number value) {
        setAttributeInternal(RANGE2PERCENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Range3Percent.
     * @return the Range3Percent
     */
    public Number getRange3Percent() {
        Number r1= new Number(0);
        if(getRange3()!=null && getTotStk()!=zero) {
            r1=getRange3().divide(getTotStk());
            return (Number)r1.multiply(new Number(100)).round(2);
        }
        else
        return (Number) getAttributeInternal(RANGE3PERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range3Percent.
     * @param value value to set the  Range3Percent
     */
    public void setRange3Percent(Number value) {
        setAttributeInternal(RANGE3PERCENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Range4Percent.
     * @return the Range4Percent
     */
    public Number getRange4Percent() {
        Number r1= new Number(0);
        if(getRange4()!=null && getTotStk()!=zero) {
            r1=getRange4().divide(getTotStk());
            return (Number)r1.multiply(new Number(100)).round(2);
        }
        else
        return (Number) getAttributeInternal(RANGE4PERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range4Percent.
     * @param value value to set the  Range4Percent
     */
    public void setRange4Percent(Number value) {
        setAttributeInternal(RANGE4PERCENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Range5Percent.
     * @return the Range5Percent
     */
    public Number getRange5Percent() {
        Number r1= new Number(0);
        if(getRange5()!=null && getTotStk()!=zero) {
            r1=getRange5().divide(getTotStk());
            return (Number)r1.multiply(new Number(100)).round(2);
        }
        else
        return (Number) getAttributeInternal(RANGE5PERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range5Percent.
     * @param value value to set the  Range5Percent
     */
    public void setRange5Percent(Number value) {
        setAttributeInternal(RANGE5PERCENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Range6Percent.
     * @return the Range6Percent
     */
    public Number getRange6Percent() {
        Number r1= new Number(0);
        if(getRange6()!=null && getTotStk()!=zero) {
            r1=getRange6().divide(getTotStk());
            return (Number)r1.multiply(new Number(100)).round(2);
        }
        else
        return (Number) getAttributeInternal(RANGE6PERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Range6Percent.
     * @param value value to set the  Range6Percent
     */
    public void setRange6Percent(Number value) {
        setAttributeInternal(RANGE6PERCENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrNm.
     * @return the TransCurrNm
     */
    public String getTransCurrNm() {
        return (String) getAttributeInternal(TRANSCURRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrNm.
     * @param value value to set the  TransCurrNm
     */
    public void setTransCurrNm(String value) {
        setAttributeInternal(TRANSCURRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCheck.
     * @return the TransCheck
     */
    public String getTransCheck() {
        return (String) getAttributeInternal(TRANSCHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCheck.
     * @param value value to set the  TransCheck
     */
    public void setTransCheck(String value) {
        setAttributeInternal(TRANSCHECK, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ProductAgeLot.
     */
    public RowIterator getProductAgeLot() {
        return (RowIterator) getAttributeInternal(PRODUCTAGELOT);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

