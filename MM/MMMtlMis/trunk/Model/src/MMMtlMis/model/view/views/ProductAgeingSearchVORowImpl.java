package MMMtlMis.model.view.views;

import MMMtlMis.model.service.MMMtlMisAMImpl;
import MMMtlMis.model.view.views.common.ProductAgeingSearchVORow;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 27 16:10:33 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductAgeingSearchVORowImpl extends ViewRowImpl implements ProductAgeingSearchVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
    String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
    String slocIdStr=(String)evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}");
    Integer slocId=Integer.parseInt(slocIdStr);
    String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");

    public enum AttributesEnum {
        Dummy {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmDesc {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setItmDesc((String) value);
            }
        }
        ,
        CldId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmGrpNm {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmGrpNm();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setItmGrpNm((String) value);
            }
        }
        ,
        ItmGrpId {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmGrpId();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setItmGrpId((String) value);
            }
        }
        ,
        TransCurrNm {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getTransCurrNm();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TempNm {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getTempNm();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setTempNm((String) value);
            }
        }
        ,
        RangeType {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getRangeType();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setRangeType((String) value);
            }
        }
        ,
        WHVO1 {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getWHVO1();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgVO1 {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getOrgVO1();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmPrfVO1 {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmPrfVO1();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmGrpVO1 {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getItmGrpVO1();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDataRangeTypeVO1 {
            public Object get(ProductAgeingSearchVORowImpl obj) {
                return obj.getLovDataRangeTypeVO1();
            }

            public void put(ProductAgeingSearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ProductAgeingSearchVORowImpl object);

        public abstract void put(ProductAgeingSearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static String evaluateEL(String el) {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el,Object.class);
    String retVal = exp.getValue(elContext).toString();
    return retVal;
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ITMGRPNM = AttributesEnum.ItmGrpNm.index();
    public static final int ITMGRPID = AttributesEnum.ItmGrpId.index();
    public static final int TRANSCURRNM = AttributesEnum.TransCurrNm.index();
    public static final int TEMPNM = AttributesEnum.TempNm.index();
    public static final int RANGETYPE = AttributesEnum.RangeType.index();
    public static final int WHVO1 = AttributesEnum.WHVO1.index();
    public static final int ORGVO1 = AttributesEnum.OrgVO1.index();
    public static final int ITMPRFVO1 = AttributesEnum.ItmPrfVO1.index();
    public static final int ITMGRPVO1 = AttributesEnum.ItmGrpVO1.index();
    public static final int LOVDATARANGETYPEVO1 = AttributesEnum.LovDataRangeTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductAgeingSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return cldId;
        //return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return hoOrgId;
        //return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return slocId;
        //return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpNm.
     * @return the ItmGrpNm
     */
    public String getItmGrpNm() {
        return (String) getAttributeInternal(ITMGRPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpNm.
     * @param value value to set the  ItmGrpNm
     */
    public void setItmGrpNm(String value) {
        setAttributeInternal(ITMGRPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpId.
     * @return the ItmGrpId
     */
    public String getItmGrpId() {
        return (String) getAttributeInternal(ITMGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpId.
     * @param value value to set the  ItmGrpId
     */
    public void setItmGrpId(String value) {
        setAttributeInternal(ITMGRPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrNm.
     * @return the TransCurrNm
     */
    public String getTransCurrNm() {
       return (String) getAttributeInternal(TRANSCURRNM);
    }

    /**
     * Gets the attribute value for the calculated attribute TempNm.
     * @return the TempNm
     */
    public String getTempNm() {
        return (String) getAttributeInternal(TEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TempNm.
     * @param value value to set the  TempNm
     */
    public void setTempNm(String value) {
        if(value!=null)
        {
       
          MMMtlMisAMImpl am=(MMMtlMisAMImpl)this.getApplicationModule();
        System.out.println("Value :----------: "+value);
        Row r[]=am.getMmAgTempl1().getFilteredRows("TmplNm", value);
        if(r.length>0) {
            String org=(String)r[0].getAttribute("OrgId");
            Integer type=(Integer)r[0].getAttribute("BktRangeType");
             setOrgId(org);
             setRangeType(type.toString());
         }
        }
          setAttributeInternal(TEMPNM, value);
    } 

    /**
     * Gets the attribute value for the calculated attribute RangeType.
     * @return the RangeType
     */
    public String getRangeType() {
        return (String) getAttributeInternal(RANGETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RangeType.
     * @param value value to set the  RangeType
     */
    public void setRangeType(String value) {
        if(value!=null) {
            Integer type=Integer.parseInt(value);
            //System.out.println("Value in RangeType:::"+value);
        MMMtlMisAMImpl am=(MMMtlMisAMImpl)this.getApplicationModule();
        ViewObjectImpl  calc=am.getRangeCalc1();
       
        calc.setNamedWhereClauseParam("BindOrgId",getOrgId());
        calc.setNamedWhereClauseParam("BindCldId",getCldId());
        calc.setNamedWhereClauseParam("BindRangeType",type);
        calc.executeQuery();
         Row rr[]=calc.getAllRowsInRange();
         
         if(rr.length>0) {
           Number r1 =(Number)rr[0].getAttribute("Range1");
           Number r2 =(Number)rr[0].getAttribute("Range2");
           Number r3 =(Number)rr[0].getAttribute("Range3");
           Number r4 =(Number)rr[0].getAttribute("Range4");
           Number r5 =(Number)rr[0].getAttribute("Range5");
           
           Row r=am.getMmAgBkt1().getCurrentRow();
           r.setAttribute("BktDaysTo",r1);
           r.setAttribute("BktRange2",r2);
           r.setAttribute("BktRange3",r3);
           r.setAttribute("BktRange4",r4);
           r.setAttribute("BktRange5",r5);
         }
        
        }
     
        
        setAttributeInternal(RANGETYPE, value);
   
    }

    /**
     * Gets the view accessor <code>RowSet</code> WHVO1.
     */
    public RowSet getWHVO1() {
        return (RowSet) getAttributeInternal(WHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgVO1.
     */
    public RowSet getOrgVO1() {
        return (RowSet) getAttributeInternal(ORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmPrfVO1.
     */
    public RowSet getItmPrfVO1() {
        return (RowSet) getAttributeInternal(ITMPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmGrpVO1.
     */
    public RowSet getItmGrpVO1() {
        return (RowSet) getAttributeInternal(ITMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDataRangeTypeVO1.
     */
    public RowSet getLovDataRangeTypeVO1() {
        return (RowSet) getAttributeInternal(LOVDATARANGETYPEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

