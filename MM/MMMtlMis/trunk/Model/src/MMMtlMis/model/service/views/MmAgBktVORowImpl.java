package MMMtlMis.model.service.views;


import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 03 19:08:40 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmAgBktVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrId {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getUsrId();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BktFor {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktFor();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktFor((String) value);
            }
        }
        ,
        BktDaysFm {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktDaysFm();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktDaysFm((Number) value);
            }
        }
        ,
        BktDaysTo {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktDaysTo();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktDaysTo((Number) value);
            }
        }
        ,
        BktRange2 {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktRange2();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktRange2((Number) value);
            }
        }
        ,
        BktRange3 {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktRange3();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktRange3((Number) value);
            }
        }
        ,
        BktRange4 {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktRange4();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktRange4((Number) value);
            }
        }
        ,
        BktRange5 {
            public Object get(MmAgBktVORowImpl obj) {
                return obj.getBktRange5();
            }

            public void put(MmAgBktVORowImpl obj, Object value) {
                obj.setBktRange5((Number) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MmAgBktVORowImpl object);

        public abstract void put(MmAgBktVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int BKTFOR = AttributesEnum.BktFor.index();
    public static final int BKTDAYSFM = AttributesEnum.BktDaysFm.index();
    public static final int BKTDAYSTO = AttributesEnum.BktDaysTo.index();
    public static final int BKTRANGE2 = AttributesEnum.BktRange2.index();
    public static final int BKTRANGE3 = AttributesEnum.BktRange3.index();
    public static final int BKTRANGE4 = AttributesEnum.BktRange4.index();
    public static final int BKTRANGE5 = AttributesEnum.BktRange5.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmAgBktVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrId.
     * @return the UsrId
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Gets the attribute value for the calculated attribute BktFor.
     * @return the BktFor
     */
    public String getBktFor() {
        return (String) getAttributeInternal(BKTFOR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktFor.
     * @param value value to set the  BktFor
     */
    public void setBktFor(String value) {
        setAttributeInternal(BKTFOR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BktDaysFm.
     * @return the BktDaysFm
     */
    public Number getBktDaysFm() {
        if(getAttributeInternal(BKTDAYSFM)==null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(BKTDAYSFM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktDaysFm.
     * @param value value to set the  BktDaysFm
     */
    public void setBktDaysFm(Number value) {
        setAttributeInternal(BKTDAYSFM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BktDaysTo.
     * @return the BktDaysTo
     */
    public Number getBktDaysTo() {
        if(getAttributeInternal(BKTDAYSTO)==null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(BKTDAYSTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktDaysTo.
     * @param value value to set the  BktDaysTo
     */
    public void setBktDaysTo(Number value) {
        setAttributeInternal(BKTDAYSTO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BktRange2.
     * @return the BktRange2
     */
    public Number getBktRange2() {
        if(getAttributeInternal(BKTRANGE2)==null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(BKTRANGE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktRange2.
     * @param value value to set the  BktRange2
     */
    public void setBktRange2(Number value) {
        setAttributeInternal(BKTRANGE2, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BktRange3.
     * @return the BktRange3
     */
    public Number getBktRange3() {
          if( getAttributeInternal(BKTRANGE3)==null) {
              return new Number(0);
          }
        return (Number) getAttributeInternal(BKTRANGE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktRange3.
     * @param value value to set the  BktRange3
     */
    public void setBktRange3(Number value) {
        setAttributeInternal(BKTRANGE3, value);
    }


    /**
     * Gets the attribute value for the calculated attribute BktRange4.
     * @return the BktRange4
     */
    public Number getBktRange4() {
        if( getAttributeInternal(BKTRANGE4)==null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(BKTRANGE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktRange4.
     * @param value value to set the  BktRange4
     */
    public void setBktRange4(Number value) {
        setAttributeInternal(BKTRANGE4, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BktRange5.
     * @return the BktRange5
     */
    public Number getBktRange5() {
        if(getAttributeInternal(BKTRANGE5)==null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(BKTRANGE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BktRange5.
     * @param value value to set the  BktRange5
     */
    public void setBktRange5(Number value) {
        setAttributeInternal(BKTRANGE5, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

