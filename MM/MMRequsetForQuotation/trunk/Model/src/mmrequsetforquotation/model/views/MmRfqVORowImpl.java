package mmrequsetforquotation.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmrequsetforquotation.model.entities.MmRfqEOImpl;
import mmrequsetforquotation.model.services.mmRfqAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 10 18:07:58 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRfqVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMRFQEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        CldId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setDocDt((Date) value);
            }
        }
        ,
        DlvAddsId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getDlvAddsId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setDlvAddsId((String) value);
            }
        }
        ,
        RfqId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getRfqId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setRfqId((String) value);
            }
        }
        ,
        DlvDays {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getDlvDays();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setDlvDays((Number) value);
            }
        }
        ,
        EntityId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        ReplyVia {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getReplyVia();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setReplyVia((Integer) value);
            }
        }
        ,
        RfqStatus {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getRfqStatus();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setRfqStatus((Integer) value);
            }
        }
        ,
        SlocId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VldtDt {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getVldtDt();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setVldtDt((Date) value);
            }
        }
        ,
        Remarks {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        PreferedCurr {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getPreferedCurr();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setPreferedCurr((Integer) value);
            }
        }
        ,
        FyId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        RfqSrcType {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getRfqSrcType();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setRfqSrcType((Integer) value);
            }
        }
        ,
        AddressTrans {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getAddressTrans();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAddressTrans((String) value);
            }
        }
        ,
        TransSrcDocNo {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getTransSrcDocNo();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setTransSrcDocNo((String) value);
            }
        }
        ,
        TransCurrId {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getTransCurrId();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setTransCurrId((Integer) value);
            }
        }
        ,
        TransCurrNot {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getTransCurrNot();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setTransCurrNot((String) value);
            }
        }
        ,
        TransCurrAl {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getTransCurrAl();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqEo {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getMmRfqEo();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqItm {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getMmRfqItm();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqTnc {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getMmRfqTnc();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqFlx {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getMmRfqFlx();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        sgstdOrdrLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getsgstdOrdrLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        userLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getuserLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgIdLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getOrgIdLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ReplyViaLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getReplyViaLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RfqStatusLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getRfqStatusLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AddressLOV1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getAddressLOV1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAddsId1 {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getLovAddsId1();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRfqSrcTypeVO {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getLovRfqSrcTypeVO();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPRDocNoVO {
            public Object get(MmRfqVORowImpl obj) {
                return obj.getLovPRDocNoVO();
            }

            public void put(MmRfqVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmRfqVORowImpl object);

        public abstract void put(MmRfqVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DLVADDSID = AttributesEnum.DlvAddsId.index();
    public static final int RFQID = AttributesEnum.RfqId.index();
    public static final int DLVDAYS = AttributesEnum.DlvDays.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int REPLYVIA = AttributesEnum.ReplyVia.index();
    public static final int RFQSTATUS = AttributesEnum.RfqStatus.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VLDTDT = AttributesEnum.VldtDt.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int PREFEREDCURR = AttributesEnum.PreferedCurr.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int RFQSRCTYPE = AttributesEnum.RfqSrcType.index();
    public static final int ADDRESSTRANS = AttributesEnum.AddressTrans.index();
    public static final int TRANSSRCDOCNO = AttributesEnum.TransSrcDocNo.index();
    public static final int TRANSCURRID = AttributesEnum.TransCurrId.index();
    public static final int TRANSCURRNOT = AttributesEnum.TransCurrNot.index();
    public static final int TRANSCURRAL = AttributesEnum.TransCurrAl.index();
    public static final int MMRFQEO = AttributesEnum.MmRfqEo.index();
    public static final int MMRFQITM = AttributesEnum.MmRfqItm.index();
    public static final int MMRFQTNC = AttributesEnum.MmRfqTnc.index();
    public static final int MMRFQFLX = AttributesEnum.MmRfqFlx.index();
    public static final int SGSTDORDRLOV1 = AttributesEnum.sgstdOrdrLOV1.index();
    public static final int USERLOV1 = AttributesEnum.userLOV1.index();
    public static final int ORGIDLOV1 = AttributesEnum.OrgIdLOV1.index();
    public static final int REPLYVIALOV1 = AttributesEnum.ReplyViaLOV1.index();
    public static final int RFQSTATUSLOV1 = AttributesEnum.RfqStatusLOV1.index();
    public static final int ADDRESSLOV1 = AttributesEnum.AddressLOV1.index();
    public static final int LOVADDSID1 = AttributesEnum.LovAddsId1.index();
    public static final int LOVRFQSRCTYPEVO = AttributesEnum.LovRfqSrcTypeVO.index();
    public static final int LOVPRDOCNOVO = AttributesEnum.LovPRDocNoVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRfqVORowImpl() {
    }

    /**
     * Gets MmRfqEO entity object.
     * @return the MmRfqEO
     */
    public MmRfqEOImpl getMmRfqEO() {
        return (MmRfqEOImpl) getEntity(ENTITY_MMRFQEO);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Date getDocDt() {
        return (Date) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Date value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DLV_ADDS_ID using the alias name DlvAddsId.
     * @return the DLV_ADDS_ID
     */
    public String getDlvAddsId() {
        return (String) getAttributeInternal(DLVADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_ADDS_ID using the alias name DlvAddsId.
     * @param value value to set the DLV_ADDS_ID
     */
    public void setDlvAddsId(String value) {
        setAttributeInternal(DLVADDSID, value);
    }

    /**
     * Gets the attribute value for RFQ_ID using the alias name RfqId.
     * @return the RFQ_ID
     */
    public String getRfqId() {
        return (String) getAttributeInternal(RFQID);
    }

    /**
     * Sets <code>value</code> as attribute value for RFQ_ID using the alias name RfqId.
     * @param value value to set the RFQ_ID
     */
    public void setRfqId(String value) {
        setAttributeInternal(RFQID, value);
    }

    /**
     * Gets the attribute value for DLV_DAYS using the alias name DlvDays.
     * @return the DLV_DAYS
     */
    public oracle.jbo.domain.Number getDlvDays() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DLVDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_DAYS using the alias name DlvDays.
     * @param value value to set the DLV_DAYS
     */
    public void setDlvDays(oracle.jbo.domain.Number value) {
        setAttributeInternal(DLVDAYS, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for REPLY_VIA using the alias name ReplyVia.
     * @return the REPLY_VIA
     */
    public Integer getReplyVia() {
        return (Integer) getAttributeInternal(REPLYVIA);
    }

    /**
     * Sets <code>value</code> as attribute value for REPLY_VIA using the alias name ReplyVia.
     * @param value value to set the REPLY_VIA
     */
    public void setReplyVia(Integer value) {
        setAttributeInternal(REPLYVIA, value);
    }

    /**
     * Gets the attribute value for RFQ_STATUS using the alias name RfqStatus.
     * @return the RFQ_STATUS
     */
    public Integer getRfqStatus() {
        return (Integer) getAttributeInternal(RFQSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for RFQ_STATUS using the alias name RfqStatus.
     * @param value value to set the RFQ_STATUS
     */
    public void setRfqStatus(Integer value) {
        setAttributeInternal(RFQSTATUS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for VLDT_DT using the alias name VldtDt.
     * @return the VLDT_DT
     */
    public Date getVldtDt() {
        return (Date) getAttributeInternal(VLDTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VLDT_DT using the alias name VldtDt.
     * @param value value to set the VLDT_DT
     */
    public void setVldtDt(Date value) {
        setAttributeInternal(VLDTDT, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for PREFERED_CURR using the alias name PreferedCurr.
     * @return the PREFERED_CURR
     */
    public Integer getPreferedCurr() {
        return (Integer) getAttributeInternal(PREFEREDCURR);
    }

    /**
     * Sets <code>value</code> as attribute value for PREFERED_CURR using the alias name PreferedCurr.
     * @param value value to set the PREFERED_CURR
     */
    public void setPreferedCurr(Integer value) {
        setAttributeInternal(PREFEREDCURR, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddressTrans.
     * @return the AddressTrans
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    public String getAddressTrans() {
        mmRfqAMImpl am = (mmRfqAMImpl) resolvElDC("mmRfqAMDataControl");

        String inputAdd = null;
        String addDesc = null;
        try {
            inputAdd = getDlvAddsId();
            //x.getAttribute("TvouCoaId");
        } catch (NullPointerException npe) {

        }
        if (inputAdd != null) {
            am.getLovAddsId1().executeQuery();
            Row[] xx = am.getLovAddsId1().getFilteredRows("AddsId", inputAdd);
            // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
            if (xx.length > 0) {
                addDesc = xx[0].getAttribute("Adds").toString();
            }
            return addDesc;
        } else {
            return (String) getAttributeInternal(ADDRESSTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddressTrans.
     * @param value value to set the  AddressTrans
     */
    public void setAddressTrans(String value) {
        setAttributeInternal(ADDRESSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrcDocNo.
     * @return the TransSrcDocNo
     */
    public String getTransSrcDocNo() {
        String srcDocId = this.getDocIdSrc();

        mmRfqAMImpl am = (mmRfqAMImpl) this.getApplicationModule();
        ViewObjectImpl prdvo = am.getLovPrdViewDocNo();
        RowQualifier rq = new RowQualifier(prdvo);
        rq.setWhereClause("CldId ='" + getCldId() + "' and SlocId = " + getSlocId() + " and OrgId= '" + getOrgId() +
                          "' and PrTxnId = '" + getDocIdSrc() + "' ");
        Row[] prRow = prdvo.getFilteredRows(rq);
        if (prRow.length > 0) {
            String prNo = prRow[0].getAttribute("PrNo").toString();
            return prNo;
        } else
            return (String) getAttributeInternal(TRANSSRCDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrcDocNo.
     * @param value value to set the  TransSrcDocNo
     */
    public void setTransSrcDocNo(String value) {
        setAttributeInternal(TRANSSRCDOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrId.
     * @return the TransCurrId
     */
    public Integer getTransCurrId() {
        if (this.getOrgId() != null) {
            Integer currId = (Integer) (callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                                           getOrgId() }));
            return currId;

        }
        return (Integer) getAttributeInternal(TRANSCURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrId.
     * @param value value to set the  TransCurrId
     */
    public void setTransCurrId(Integer value) {
        setAttributeInternal(TRANSCURRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrNot.
     * @return the TransCurrNot
     */
    public String getTransCurrNot() {
        if (this.getTransCurrId() != null) {
            mmRfqAMImpl am = (mmRfqAMImpl) this.getApplicationModule();
            String notNm = (String) am.getCurrNot(this.getTransCurrId(), "N");
            return notNm;
        }
        return (String) getAttributeInternal(TRANSCURRNOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrNot.
     * @param value value to set the  TransCurrNot
     */
    public void setTransCurrNot(String value) {
        setAttributeInternal(TRANSCURRNOT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrAl.
     * @return the TransCurrAl
     */
    public String getTransCurrAl() {
        if (this.getTransCurrId() != null) {
            mmRfqAMImpl am = (mmRfqAMImpl) this.getApplicationModule();
            String notNm = (String) am.getCurrNot(this.getTransCurrId(), "A");
            return notNm;
        }
        return (String) getAttributeInternal(TRANSCURRAL);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for RFQ_SRC_TYPE using the alias name RfqSrcType.
     * @return the RFQ_SRC_TYPE
     */
    public Integer getRfqSrcType() {
        return (Integer) getAttributeInternal(RFQSRCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for RFQ_SRC_TYPE using the alias name RfqSrcType.
     * @param value value to set the RFQ_SRC_TYPE
     */
    public void setRfqSrcType(Integer value) {
        setAttributeInternal(RFQSRCTYPE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmRfqEo.
     */
    public RowIterator getMmRfqEo() {
        return (RowIterator) getAttributeInternal(MMRFQEO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmRfqItm.
     */
    public RowIterator getMmRfqItm() {
        return (RowIterator) getAttributeInternal(MMRFQITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmRfqTnc.
     */
    public RowIterator getMmRfqTnc() {
        return (RowIterator) getAttributeInternal(MMRFQTNC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmRfqFlx.
     */
    public RowIterator getMmRfqFlx() {
        return (RowIterator) getAttributeInternal(MMRFQFLX);
    }

    /**
     * Gets the view accessor <code>RowSet</code> sgstdOrdrLOV1.
     */
    public RowSet getsgstdOrdrLOV1() {
        return (RowSet) getAttributeInternal(SGSTDORDRLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> userLOV1.
     */
    public RowSet getuserLOV1() {
        return (RowSet) getAttributeInternal(USERLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgIdLOV1.
     */
    public RowSet getOrgIdLOV1() {
        return (RowSet) getAttributeInternal(ORGIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ReplyViaLOV1.
     */
    public RowSet getReplyViaLOV1() {
        return (RowSet) getAttributeInternal(REPLYVIALOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RfqStatusLOV1.
     */
    public RowSet getRfqStatusLOV1() {
        return (RowSet) getAttributeInternal(RFQSTATUSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AddressLOV1.
     */
    public RowSet getAddressLOV1() {
        return (RowSet) getAttributeInternal(ADDRESSLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddsId1.
     */
    public RowSet getLovAddsId1() {
        return (RowSet) getAttributeInternal(LOVADDSID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRfqSrcTypeVO.
     */
    public RowSet getLovRfqSrcTypeVO() {
        return (RowSet) getAttributeInternal(LOVRFQSRCTYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPRDocNoVO.
     */
    public RowSet getLovPRDocNoVO() {
        return (RowSet) getAttributeInternal(LOVPRDOCNOVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            mmRfqAMImpl am = (mmRfqAMImpl) resolvElDC("mmRfqAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);

                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
}
