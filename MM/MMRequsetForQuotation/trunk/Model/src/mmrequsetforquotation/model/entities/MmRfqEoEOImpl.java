package mmrequsetforquotation.model.entities;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 20 14:30:56 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRfqEoEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        EoId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        RfqAmtBase {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getRfqAmtBase();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setRfqAmtBase((Number) value);
            }
        }
        ,
        RfqAmtSp {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getRfqAmtSp();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setRfqAmtSp((Number) value);
            }
        }
        ,
        CldId {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        EoType {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getEoType();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setEoType((Integer) value);
            }
        }
        ,
        MmRfq {
            public Object get(MmRfqEoEOImpl obj) {
                return obj.getMmRfq();
            }

            public void put(MmRfqEoEOImpl obj, Object value) {
                obj.setMmRfq((MmRfqEOImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmRfqEoEOImpl object);

        public abstract void put(MmRfqEoEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int RFQAMTBASE = AttributesEnum.RfqAmtBase.index();
    public static final int RFQAMTSP = AttributesEnum.RfqAmtSp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int EOTYPE = AttributesEnum.EoType.index();
    public static final int MMRFQ = AttributesEnum.MmRfq.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRfqEoEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmrequsetforquotation.model.entities.MmRfqEoEO");
    }


    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        System.out.println("Setting EO id "+value);
        setAttributeInternal(EOID, value);
        System.out.println("Getting EO id "+(Integer)getAttributeInternal(EOID));
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer)getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConvFctr, using the alias name CurrConvFctr.
     * @return the value of CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number)getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvFctr.
     * @param value value to set the CurrConvFctr
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }


    /**
     * Gets the attribute value for RfqAmtBase, using the alias name RfqAmtBase.
     * @return the value of RfqAmtBase
     */
    public Number getRfqAmtBase() {
        return (Number)getAttributeInternal(RFQAMTBASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqAmtBase.
     * @param value value to set the RfqAmtBase
     */
    public void setRfqAmtBase(Number value) {
        setAttributeInternal(RFQAMTBASE, value);
    }

    /**
     * Gets the attribute value for RfqAmtSp, using the alias name RfqAmtSp.
     * @return the value of RfqAmtSp
     */
    public Number getRfqAmtSp() {
        return (Number)getAttributeInternal(RFQAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqAmtSp.
     * @param value value to set the RfqAmtSp
     */
    public void setRfqAmtSp(Number value) {
        setAttributeInternal(RFQAMTSP, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for EoType, using the alias name EoType.
     * @return the value of EoType
     */
    public Integer getEoType() {
        return (Integer)getAttributeInternal(EOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoType.
     * @param value value to set the EoType
     */
    public void setEoType(Integer value) {
        setAttributeInternal(EOTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmRfqEOImpl.
     */
    public MmRfqEOImpl getMmRfq() {
        return (MmRfqEOImpl)getAttributeInternal(MMRFQ);
    }

    /**
     * Sets <code>value</code> as the associated entity MmRfqEOImpl.
     */
    public void setMmRfq(MmRfqEOImpl value) {
        setAttributeInternal(MMRFQ, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param eoId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, Integer eoId, String cldId) {
        return new Key(new Object[] { slocId, orgId, docId, eoId, cldId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    protected void create(AttributeList attributeList) {
        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        Integer slocid = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String orgid = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        setUsrIdCreate(userId);
        setOrgId(orgid);
        setSlocId(slocid);
        setCldId(cldId);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            Integer userIdmod = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(userIdmod);
            getMmRfq().setUsrIdMod(userIdmod);
        }
        super.doDML(operation, e);
    }
}
