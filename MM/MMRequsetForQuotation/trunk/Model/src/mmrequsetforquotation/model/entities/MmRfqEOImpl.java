package mmrequsetforquotation.model.entities;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmrequsetforquotation.model.services.mmRfqAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 20 12:12:14 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRfqEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        CldId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(MmRfqEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setDocDt((Date) value);
            }
        }
        ,
        RfqId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getRfqId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setRfqId((String) value);
            }
        }
        ,
        DlvDays {
            public Object get(MmRfqEOImpl obj) {
                return obj.getDlvDays();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setDlvDays((Number) value);
            }
        }
        ,
        VldtDt {
            public Object get(MmRfqEOImpl obj) {
                return obj.getVldtDt();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setVldtDt((Date) value);
            }
        }
        ,
        DlvAddsId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getDlvAddsId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setDlvAddsId((String) value);
            }
        }
        ,
        RfqStatus {
            public Object get(MmRfqEOImpl obj) {
                return obj.getRfqStatus();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setRfqStatus((Integer) value);
            }
        }
        ,
        ReplyVia {
            public Object get(MmRfqEOImpl obj) {
                return obj.getReplyVia();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setReplyVia((Integer) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmRfqEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmRfqEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmRfqEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmRfqEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        EntityId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        PreferedCurr {
            public Object get(MmRfqEOImpl obj) {
                return obj.getPreferedCurr();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setPreferedCurr((Integer) value);
            }
        }
        ,
        Remarks {
            public Object get(MmRfqEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        FyId {
            public Object get(MmRfqEOImpl obj) {
                return obj.getFyId();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        RfqSrcType {
            public Object get(MmRfqEOImpl obj) {
                return obj.getRfqSrcType();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setRfqSrcType((Integer) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmRfqEOImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        MmRfqEo {
            public Object get(MmRfqEOImpl obj) {
                return obj.getMmRfqEo();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqItm {
            public Object get(MmRfqEOImpl obj) {
                return obj.getMmRfqItm();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqTnc {
            public Object get(MmRfqEOImpl obj) {
                return obj.getMmRfqTnc();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRfqFlx {
            public Object get(MmRfqEOImpl obj) {
                return obj.getMmRfqFlx();
            }

            public void put(MmRfqEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmRfqEOImpl object);

        public abstract void put(MmRfqEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int RFQID = AttributesEnum.RfqId.index();
    public static final int DLVDAYS = AttributesEnum.DlvDays.index();
    public static final int VLDTDT = AttributesEnum.VldtDt.index();
    public static final int DLVADDSID = AttributesEnum.DlvAddsId.index();
    public static final int RFQSTATUS = AttributesEnum.RfqStatus.index();
    public static final int REPLYVIA = AttributesEnum.ReplyVia.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int PREFEREDCURR = AttributesEnum.PreferedCurr.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int RFQSRCTYPE = AttributesEnum.RfqSrcType.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int MMRFQEO = AttributesEnum.MmRfqEo.index();
    public static final int MMRFQITM = AttributesEnum.MmRfqItm.index();
    public static final int MMRFQTNC = AttributesEnum.MmRfqTnc.index();
    public static final int MMRFQFLX = AttributesEnum.MmRfqFlx.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRfqEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmrequsetforquotation.model.entities.MmRfqEO");
    }


    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Date getDocDt() {
        return (Date)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Date value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for RfqId, using the alias name RfqId.
     * @return the value of RfqId
     */
    public String getRfqId() {
        return (String)getAttributeInternal(RFQID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqId.
     * @param value value to set the RfqId
     */
    public void setRfqId(String value) {
        setAttributeInternal(RFQID, value);
    }


    /**
     * Gets the attribute value for DlvDays, using the alias name DlvDays.
     * @return the value of DlvDays
     */
    public oracle.jbo.domain.Number getDlvDays() {
        return (oracle.jbo.domain.Number)getAttributeInternal(DLVDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvDays.
     * @param value value to set the DlvDays
     */
    public void setDlvDays(oracle.jbo.domain.Number value) {
        setAttributeInternal(DLVDAYS, value);
    }

    /**
     * Gets the attribute value for VldtDt, using the alias name VldtDt.
     * @return the value of VldtDt
     */
    public Date getVldtDt() {
        return (Date)getAttributeInternal(VLDTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VldtDt.
     * @param value value to set the VldtDt
     */
    public void setVldtDt(Date value) {
        setAttributeInternal(VLDTDT, value);
    }

    /**
     * Gets the attribute value for DlvAddsId, using the alias name DlvAddsId.
     * @return the value of DlvAddsId
     */
    public String getDlvAddsId() {
        return (String)getAttributeInternal(DLVADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvAddsId.
     * @param value value to set the DlvAddsId
     */
    public void setDlvAddsId(String value) {
        setAttributeInternal(DLVADDSID, value);
    }

    /**
     * Gets the attribute value for RfqStatus, using the alias name RfqStatus.
     * @return the value of RfqStatus
     */
    public Integer getRfqStatus() {
        return (Integer)getAttributeInternal(RFQSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqStatus.
     * @param value value to set the RfqStatus
     */
    public void setRfqStatus(Integer value) {
        setAttributeInternal(RFQSTATUS, value);
    }

    /**
     * Gets the attribute value for ReplyVia, using the alias name ReplyVia.
     * @return the value of ReplyVia
     */
    public Integer getReplyVia() {
        return (Integer)getAttributeInternal(REPLYVIA);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReplyVia.
     * @param value value to set the ReplyVia
     */
    public void setReplyVia(Integer value) {
        setAttributeInternal(REPLYVIA, value);
    }


    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }
   
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }
    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }


    /**
     * Gets the attribute value for PreferedCurr, using the alias name PreferedCurr.
     * @return the value of PreferedCurr
     */
    public Integer getPreferedCurr() {
        return (Integer)getAttributeInternal(PREFEREDCURR);
    }

    /**
     * Sets <code>value</code> as the attribute value for PreferedCurr.
     * @param value value to set the PreferedCurr
     */
    public void setPreferedCurr(Integer value) {
        setAttributeInternal(PREFEREDCURR, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for RfqSrcType, using the alias name RfqSrcType.
     * @return the value of RfqSrcType
     */
    public Integer getRfqSrcType() {
        return (Integer)getAttributeInternal(RFQSRCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RfqSrcType.
     * @param value value to set the RfqSrcType
     */
    public void setRfqSrcType(Integer value) {
        setAttributeInternal(RFQSRCTYPE, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String)getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmRfqEo() {
        return (RowIterator)getAttributeInternal(MMRFQEO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmRfqItm() {
        return (RowIterator)getAttributeInternal(MMRFQITM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmRfqTnc() {
        return (RowIterator)getAttributeInternal(MMRFQTNC);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmRfqFlx() {
        return (RowIterator) getAttributeInternal(MMRFQFLX);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param cldId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String cldId, String docId) {
        return new Key(new Object[] { slocId, orgId, cldId, docId });
    }

    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param cldId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
     public Object resolvElDC(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp =
             elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
         return valueExp.getValue(elContext);

     }
     public String getDocIdFun(Integer userid, String OrgId, Integer slocid, Integer docId,String cldId) {
         /** call db function "pkg_app.get_txn_id" */
//         return (String)callStoredFunction(Types.VARCHAR, "app.pkg_app.get_txn_id(?,?,?,?,?)",
//                                           new Object[] { userid, OrgId, slocid, docId,cldId });
         
                  return (String)callStoredFunction(Types.VARCHAR, "APP.get_txn_id(?,?,?,?,?,?)",
                                           new Object[] {cldId,slocid ,OrgId,userid,docId,0});
         
     }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            mmRfqAMImpl am = (mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
       ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
        return Message;
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    
    
    protected void create(AttributeList attributeList) {
        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        Integer slocid = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String orgid = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String doc_id = getDocIdFun(userId, orgid, slocid, 18502,cldId);
        setUsrIdCreate(userId);
        setOrgId(orgid);
        setSlocId(slocid);
        setCldId(cldId);
        Date dt=(Date)Date.getCurrentDate();
        setDocDt(dt);
        setDocId(doc_id);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
         //  mmRfqAMImpl am =(mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");
          // am.openReportUpdate(null, null);
          /*   if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
                System.out.println("inside resolve el------------");
            }else{
                System.out.println("outside resolve el------------");
            } */
           // if(resolvEl("#{pageFlowScope.GLBL_APP_USR}")!=null){
                //Integer usridMod = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
                 
                // Integer usridMod=Integer.parseInt(ADFContext.getCurrent().getSecurityContext().getUserName());
                // System.out.println("usridMod--------"+usridMod);
               //  setUsrIdMod(usridMod);
           // }
            Date dt=(Date)Date.getCurrentDate();
            Timestamp dts=null;
            dts=new Timestamp(dt.timestampValue());
           
            setUsrIdModDt(dts);
        }
        if(operation==DML_INSERT){
            setUsrIdModDt(null);
        }
        super.doDML(operation, e);
    }
}
