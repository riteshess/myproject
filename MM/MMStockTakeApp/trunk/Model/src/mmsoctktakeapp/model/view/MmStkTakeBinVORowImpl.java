package mmsoctktakeapp.model.view;

import java.math.BigDecimal;

import mmsoctktakeapp.model.entity.MmStkTakeBinEOImpl;


import mmsoctktakeapp.model.services.MMStkTakeAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 11 14:19:37 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmStkTakeBinVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSTKTAKEBINEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BinId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setBinId((String) value);
            }
        }
        ,
        CldId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DiffQty {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getDiffQty();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setDiffQty((BigDecimal) value);
            }
        }
        ,
        DiffType {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getDiffType();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setDiffType((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        LotId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setLotId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        PhyQty {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getPhyQty();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setPhyQty((BigDecimal) value);
            }
        }
        ,
        SlocId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        TotQty {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getTotQty();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setTotQty((BigDecimal) value);
            }
        }
        ,
        RwkQty {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getRwkQty();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setRwkQty((BigDecimal) value);
            }
        }
        ,
        ScrpQty {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getScrpQty();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setScrpQty((BigDecimal) value);
            }
        }
        ,
        WhId {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        TransBinNm {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getTransBinNm();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setTransBinNm((String) value);
            }
        }
        ,
        BinRemarks {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getBinRemarks();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setBinRemarks((String) value);
            }
        }
        ,
        MmStkTakeSr {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getMmStkTakeSr();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmStkTakeSr1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getMmStkTakeSr1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmStkSummBinVO1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getMmStkSummBinVO1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmPrfVO1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getItmPrfVO1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WarehouseVO1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getWarehouseVO1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmStkTakeBinVO1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getMmStkTakeBinVO1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppBinVO1 {
            public Object get(MmStkTakeBinVORowImpl obj) {
                return obj.getAppBinVO1();
            }

            public void put(MmStkTakeBinVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmStkTakeBinVORowImpl object);

        public abstract void put(MmStkTakeBinVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BINID = AttributesEnum.BinId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DIFFQTY = AttributesEnum.DiffQty.index();
    public static final int DIFFTYPE = AttributesEnum.DiffType.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PHYQTY = AttributesEnum.PhyQty.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TOTQTY = AttributesEnum.TotQty.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int SCRPQTY = AttributesEnum.ScrpQty.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int TRANSBINNM = AttributesEnum.TransBinNm.index();
    public static final int BINREMARKS = AttributesEnum.BinRemarks.index();
    public static final int MMSTKTAKESR = AttributesEnum.MmStkTakeSr.index();
    public static final int MMSTKTAKESR1 = AttributesEnum.MmStkTakeSr1.index();
    public static final int MMSTKSUMMBINVO1 = AttributesEnum.MmStkSummBinVO1.index();
    public static final int ITMPRFVO1 = AttributesEnum.ItmPrfVO1.index();
    public static final int WAREHOUSEVO1 = AttributesEnum.WarehouseVO1.index();
    public static final int MMSTKTAKEBINVO1 = AttributesEnum.MmStkTakeBinVO1.index();
    public static final int APPBINVO1 = AttributesEnum.AppBinVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmStkTakeBinVORowImpl() {
    }

    /**
     * Gets MmStkTakeBinEO entity object.
     * @return the MmStkTakeBinEO
     */
    public MmStkTakeBinEOImpl getMmStkTakeBinEO() {
        return (MmStkTakeBinEOImpl)getEntity(ENTITY_MMSTKTAKEBINEO);
    }

    /**
     * Gets the attribute value for BIN_ID using the alias name BinId.
     * @return the BIN_ID
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as attribute value for BIN_ID using the alias name BinId.
     * @param value value to set the BIN_ID
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value); 
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DIFF_QTY using the alias name DiffQty.
     * @return the DIFF_QTY
     */
    public BigDecimal getDiffQty() {
        return (BigDecimal) getAttributeInternal(DIFFQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for DIFF_QTY using the alias name DiffQty.
     * @param value value to set the DIFF_QTY
     */
    public void setDiffQty(BigDecimal value) {
        setAttributeInternal(DIFFQTY, value);
    }

    /**
     * Gets the attribute value for DIFF_TYPE using the alias name DiffType.
     * @return the DIFF_TYPE
     */
    public String getDiffType() {
        return (String) getAttributeInternal(DIFFTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DIFF_TYPE using the alias name DiffType.
     * @param value value to set the DIFF_TYPE
     */
    public void setDiffType(String value) {
        setAttributeInternal(DIFFTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for LOT_ID using the alias name LotId.
     * @return the LOT_ID
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOT_ID using the alias name LotId.
     * @param value value to set the LOT_ID
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PHY_QTY using the alias name PhyQty.
     * @return the PHY_QTY
     */
    public BigDecimal getPhyQty() {
        return (BigDecimal) getAttributeInternal(PHYQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PHY_QTY using the alias name PhyQty.
     * @param value value to set the PHY_QTY
     */
    public void setPhyQty(BigDecimal value) {
        setAttributeInternal(PHYQTY, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TOT_QTY using the alias name TotQty.
     * @return the TOT_QTY
     */
    public BigDecimal getTotQty() {
        return (BigDecimal) getAttributeInternal(TOTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_QTY using the alias name TotQty.
     * @param value value to set the TOT_QTY
     */
    public void setTotQty(BigDecimal value) {
        setAttributeInternal(TOTQTY, value);
    }

    /**
     * Gets the attribute value for RWK_QTY using the alias name RwkQty.
     * @return the RWK_QTY
     */
    public BigDecimal getRwkQty() {
        if((BigDecimal) getAttributeInternal(RWKQTY)!=null)
        return (BigDecimal) getAttributeInternal(RWKQTY);
        else
            return BigDecimal.ZERO;
    }

    /**
     * Sets <code>value</code> as attribute value for RWK_QTY using the alias name RwkQty.
     * @param value value to set the RWK_QTY
     */
    public void setRwkQty(BigDecimal value) {
    
        setAttributeInternal(RWKQTY, value);
    }

    /**
     * Gets the attribute value for SCRP_QTY using the alias name ScrpQty.
     * @return the SCRP_QTY
     */
    public BigDecimal getScrpQty() {
        if((BigDecimal) getAttributeInternal(SCRPQTY)!=null)
        return (BigDecimal) getAttributeInternal(SCRPQTY);
        else
            return BigDecimal.ZERO;
    }

    /**
     * Sets <code>value</code> as attribute value for SCRP_QTY using the alias name ScrpQty.
     * @param value value to set the SCRP_QTY
     */
    public void setScrpQty(BigDecimal value) {
     
        setAttributeInternal(SCRPQTY, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBinNm.
     * @return the TransBinNm
     */
    public String getTransBinNm() {
        if(getAttributeInternal(TRANSBINNM)!=null)
        return (String) getAttributeInternal(TRANSBINNM);
        else
        {
           MMStkTakeAMImpl am = (MMStkTakeAMImpl)this.getApplicationModule();
            ViewObjectImpl vo=am.getAppBin1();
            ViewObjectImpl vosearch=am.getTransSearchItm1();
                String wh=null;
            RowQualifier rq=new RowQualifier(vo);
            if(vosearch.getCurrentRow().getAttribute("WhId")!=null)
             wh = (String)vosearch.getCurrentRow().getAttribute("WhId");
            if(wh!=null)
            {
               rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and OrgId='"+getOrgId()+"' and WhId='"+wh+"' and BinId='"+getBinId()+"'");
                }
            else
            {
                    rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and OrgId='"+getOrgId()+"' and BinId='"+getBinId()+"'"); 
                }
            Row[] r=vo.getFilteredRows(rq);
            if(r.length>0)
                return (String)r[0].getAttribute("BinNm");
            }
        return (String) getAttributeInternal(TRANSBINNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBinNm.
     * @param value value to set the  TransBinNm
     */
    public void setTransBinNm(String value) {
        setAttributeInternal(TRANSBINNM, value);
    }

    /**
     * Gets the attribute value for BIN_REMARKS using the alias name BinRemarks.
     * @return the BIN_REMARKS
     */
    public String getBinRemarks() {
        return (String) getAttributeInternal(BINREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for BIN_REMARKS using the alias name BinRemarks.
     * @param value value to set the BIN_REMARKS
     */
    public void setBinRemarks(String value) {
        setAttributeInternal(BINREMARKS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmStkTakeSr.
     */
    public RowIterator getMmStkTakeSr() {
        return (RowIterator)getAttributeInternal(MMSTKTAKESR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmStkTakeSr1.
     */
    public RowIterator getMmStkTakeSr1() {
        return (RowIterator)getAttributeInternal(MMSTKTAKESR1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmStkSummBinVO1.
     */
    public RowSet getMmStkSummBinVO1() {
        return (RowSet)getAttributeInternal(MMSTKSUMMBINVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmPrfVO1.
     */
    public RowSet getItmPrfVO1() {
        return (RowSet)getAttributeInternal(ITMPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WarehouseVO1.
     */
    public RowSet getWarehouseVO1() {
        return (RowSet)getAttributeInternal(WAREHOUSEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmStkTakeBinVO1.
     */
    public RowSet getMmStkTakeBinVO1() {
        return (RowSet)getAttributeInternal(MMSTKTAKEBINVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppBinVO1.
     */
    public RowSet getAppBinVO1() {
        return (RowSet)getAttributeInternal(APPBINVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
