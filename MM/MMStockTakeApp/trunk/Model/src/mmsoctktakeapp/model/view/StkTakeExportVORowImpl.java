package mmsoctktakeapp.model.view;

import java.math.BigDecimal;

import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 23 15:25:41 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StkTakeExportVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SrNo {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmUom {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PhyQty {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getPhyQty();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RwkQty {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getRwkQty();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ScrpQty {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getScrpQty();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LotId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BinId {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgDesc {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getOrgDesc();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhNm {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getWhNm();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmDesc {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UomDesc {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getUomDesc();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BinNm {
            public Object get(StkTakeExportVORowImpl obj) {
                return obj.getBinNm();
            }

            public void put(StkTakeExportVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(StkTakeExportVORowImpl object);

        public abstract void put(StkTakeExportVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PHYQTY = AttributesEnum.PhyQty.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int SCRPQTY = AttributesEnum.ScrpQty.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int BINID = AttributesEnum.BinId.index();
    public static final int ORGDESC = AttributesEnum.OrgDesc.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int UOMDESC = AttributesEnum.UomDesc.index();
    public static final int BINNM = AttributesEnum.BinNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StkTakeExportVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute SrNo.
     * @return the SrNo
     */
    public String getSrNo() {
        return (String) getAttributeInternal(SRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute PhyQty.
     * @return the PhyQty
     */
    public oracle.jbo.domain.Number getPhyQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PHYQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute RwkQty.
     * @return the RwkQty
     */
    public Number getRwkQty() {
        return (Number) getAttributeInternal(RWKQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute ScrpQty.
     * @return the ScrpQty
     */
    public Number getScrpQty() {
        return (Number) getAttributeInternal(SCRPQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute LotId.
     * @return the LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Gets the attribute value for the calculated attribute BinId.
     * @return the BinId
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgDesc.
     * @return the OrgDesc
     */
    public String getOrgDesc() {
        return (String) getAttributeInternal(ORGDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        return (String) getAttributeInternal(WHNM);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute UomDesc.
     * @return the UomDesc
     */
    public String getUomDesc() {
        return (String) getAttributeInternal(UOMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute BinNm.
     * @return the BinNm
     */
    public String getBinNm() {
        return (String) getAttributeInternal(BINNM);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

