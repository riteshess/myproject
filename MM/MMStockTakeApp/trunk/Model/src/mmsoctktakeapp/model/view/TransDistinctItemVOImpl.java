package mmsoctktakeapp.model.view;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 10 18:15:39 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransDistinctItemVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public TransDistinctItemVOImpl() {
    }

    /**
     * Returns the variable value for ItemName.
     * @return variable value for ItemName
     */
    public String getItemName() {
        return (String) ensureVariableManager().getVariableValue("ItemName");
    }

    /**
     * Sets <code>value</code> for variable ItemName.
     * @param value value to bind as ItemName
     */
    public void setItemName(String value) {
        ensureVariableManager().setVariableValue("ItemName", value);
    }

    /**
     * Returns the variable value for fyId.
     * @return variable value for fyId
     */
    public Integer getfyId() {
        return (Integer) ensureVariableManager().getVariableValue("fyId");
    }

    /**
     * Sets <code>value</code> for variable fyId.
     * @param value value to bind as fyId
     */
    public void setfyId(Integer value) {
        ensureVariableManager().setVariableValue("fyId", value);
    }

    /**
     * Returns the variable value for org_idBind.
     * @return variable value for org_idBind
     */
    public String getorg_idBind() {
        return (String) ensureVariableManager().getVariableValue("org_idBind");
    }

    /**
     * Sets <code>value</code> for variable org_idBind.
     * @param value value to bind as org_idBind
     */
    public void setorg_idBind(String value) {
        ensureVariableManager().setVariableValue("org_idBind", value);
    }

    /**
     * Returns the bind variable value for bindHoOrgId.
     * @return bind variable value for bindHoOrgId
     */
    public String getbindHoOrgId() {
        return (String) getNamedWhereClauseParam("bindHoOrgId");
    }

    /**
     * Sets <code>value</code> for bind variable bindHoOrgId.
     * @param value value to bind as bindHoOrgId
     */
    public void setbindHoOrgId(String value) {
        setNamedWhereClauseParam("bindHoOrgId", value);
    }

    /**
     * Returns the bind variable value for bindOrgId.
     * @return bind variable value for bindOrgId
     */
    public String getbindOrgId() {
        return (String) getNamedWhereClauseParam("bindOrgId");
    }

    /**
     * Sets <code>value</code> for bind variable bindOrgId.
     * @param value value to bind as bindOrgId
     */
    public void setbindOrgId(String value) {
        setNamedWhereClauseParam("bindOrgId", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
}

