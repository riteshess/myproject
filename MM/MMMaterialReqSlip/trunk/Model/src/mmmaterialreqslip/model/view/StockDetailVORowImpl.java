package mmmaterialreqslip.model.view;

import java.math.BigDecimal;

import mmmaterialreqslip.model.view.common.StockDetailVORow;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 02 16:51:57 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StockDetailVORowImpl extends ViewRowImpl implements StockDetailVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgDesc {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getOrgDesc();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhId {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WhNm {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getWhNm();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FyId {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmId {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmDesc {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmUomBs {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrdStk {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getOrdStk();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TotStk {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AvlStk {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getAvlStk();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RejStk {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getRejStk();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ReqStk {
            public Object get(StockDetailVORowImpl obj) {
                return obj.getReqStk();
            }

            public void put(StockDetailVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(StockDetailVORowImpl object);

        public abstract void put(StockDetailVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGDESC = AttributesEnum.OrgDesc.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ORDSTK = AttributesEnum.OrdStk.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int AVLSTK = AttributesEnum.AvlStk.index();
    public static final int REJSTK = AttributesEnum.RejStk.index();
    public static final int REQSTK = AttributesEnum.ReqStk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StockDetailVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgDesc.
     * @return the OrgDesc
     */
    public String getOrgDesc() {
        return (String) getAttributeInternal(ORGDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        return (String) getAttributeInternal(WHNM);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        
        
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdStk.
     * @return the OrdStk
     */
    public BigDecimal getOrdStk() {
        return (BigDecimal) getAttributeInternal(ORDSTK);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public BigDecimal getTotStk() {
        return (BigDecimal) getAttributeInternal(TOTSTK);
    }

    /**
     * Gets the attribute value for the calculated attribute AvlStk.
     * @return the AvlStk
     */
    public BigDecimal getAvlStk() {
        return (BigDecimal) getAttributeInternal(AVLSTK);
    }

    /**
     * Gets the attribute value for the calculated attribute RejStk.
     * @return the RejStk
     */
    public BigDecimal getRejStk() {
        return (BigDecimal) getAttributeInternal(REJSTK);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqStk.
     * @return the ReqStk
     */
    public BigDecimal getReqStk() {
        return (BigDecimal) getAttributeInternal(REQSTK);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

