package appwfservice.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 16 11:51:05 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualUserVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        J1 {
            public Object get(DualUserVORowImpl obj) {
                return obj.getJ1();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setJ1((Integer)value);
            }
        }
        ,
        RevertUsr {
            public Object get(DualUserVORowImpl obj) {
                return obj.getRevertUsr();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setRevertUsr((Integer)value);
            }
        }
        ,
        RvrtUsrLast {
            public Object get(DualUserVORowImpl obj) {
                return obj.getRvrtUsrLast();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setRvrtUsrLast((Integer)value);
            }
        }
        ,
        RvrtLvlTo {
            public Object get(DualUserVORowImpl obj) {
                return obj.getRvrtLvlTo();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setRvrtLvlTo((Integer)value);
            }
        }
        ,
        TransCldId {
            public Object get(DualUserVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setTransCldId((String)value);
            }
        }
        ,
        TransSlocId {
            public Object get(DualUserVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setTransSlocId((Integer)value);
            }
        }
        ,
        TransOrgId {
            public Object get(DualUserVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setTransOrgId((String)value);
            }
        }
        ,
        TransDocId {
            public Object get(DualUserVORowImpl obj) {
                return obj.getTransDocId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setTransDocId((Integer)value);
            }
        }
        ,
        transDocTypeId {
            public Object get(DualUserVORowImpl obj) {
                return obj.gettransDocTypeId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.settransDocTypeId((Integer)value);
            }
        }
        ,
        TransTxnId {
            public Object get(DualUserVORowImpl obj) {
                return obj.getTransTxnId();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setTransTxnId((String)value);
            }
        }
        ,
        LvlUserSelectVO1 {
            public Object get(DualUserVORowImpl obj) {
                return obj.getLvlUserSelectVO1();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRevertUsrVO1 {
            public Object get(DualUserVORowImpl obj) {
                return obj.getLovRevertUsrVO1();
            }

            public void put(DualUserVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DualUserVORowImpl object);

        public abstract void put(DualUserVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int J1 = AttributesEnum.J1.index();
    public static final int REVERTUSR = AttributesEnum.RevertUsr.index();
    public static final int RVRTUSRLAST = AttributesEnum.RvrtUsrLast.index();
    public static final int RVRTLVLTO = AttributesEnum.RvrtLvlTo.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSDOCID = AttributesEnum.TransDocId.index();
    public static final int TRANSDOCTYPEID = AttributesEnum.transDocTypeId.index();
    public static final int TRANSTXNID = AttributesEnum.TransTxnId.index();
    public static final int LVLUSERSELECTVO1 = AttributesEnum.LvlUserSelectVO1.index();
    public static final int LOVREVERTUSRVO1 = AttributesEnum.LovRevertUsrVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualUserVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute J1.
     * @return the J1
     */
    public Integer getJ1() {
        return (Integer) getAttributeInternal(J1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute J1.
     * @param value value to set the  J1
     */
    public void setJ1(Integer value) {
        setAttributeInternal(J1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RevertUsr.
     * @return the RevertUsr
     */
    public Integer getRevertUsr() {
        return (Integer) getAttributeInternal(REVERTUSR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RevertUsr.
     * @param value value to set the  RevertUsr
     */
    public void setRevertUsr(Integer value) {
        setAttributeInternal(REVERTUSR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RvrtUsrLast.
     * @return the RvrtUsrLast
     */
    public Integer getRvrtUsrLast() {
        return (Integer) getAttributeInternal(RVRTUSRLAST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RvrtUsrLast.
     * @param value value to set the  RvrtUsrLast
     */
    public void setRvrtUsrLast(Integer value) {
        setAttributeInternal(RVRTUSRLAST, value);
    }

    public Object resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
       // System.out.println("In resolvel="+valueExp.getValue(elContext));
        Object msg =  valueExp.getValue(elContext);
        return msg;
    }


    /**
     * Gets the attribute value for the calculated attribute RvrtLvlTo.
     * @return the RvrtLvlTo
     */
    public Integer getRvrtLvlTo() {
        return (Integer) getAttributeInternal(RVRTLVLTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RvrtLvlTo.
     * @param value value to set the  RvrtLvlTo
     */
    public void setRvrtLvlTo(Integer value) {
        setAttributeInternal(RVRTLVLTO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return (String)resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
       // return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
      return Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")).toString());
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
       return (String)resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
       // return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocId.
     * @return the TransDocId
     */
    public Integer getTransDocId() {
       // return (Integer) getAttributeInternal(TRANSDOCID);
      return Integer.parseInt(resolvEl("#{pageFlowScope.Doc_id}").toString());
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocId.
     * @param value value to set the  TransDocId
     */
    public void setTransDocId(Integer value) {
        setAttributeInternal(TRANSDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transDocTypeId.
     * @return the transDocTypeId
     */
    public Integer gettransDocTypeId() {
        
        return Integer.parseInt(resolvEl("#{pageFlowScope.Doc_type_id}").toString());
       // return (Integer) getAttributeInternal(TRANSDOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDocTypeId.
     * @param value value to set the  transDocTypeId
     */
    public void settransDocTypeId(Integer value) {
        setAttributeInternal(TRANSDOCTYPEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTxnId.
     * @return the TransTxnId
     */
    public String getTransTxnId() {
        return resolvEl("#{pageFlowScope.Doc_txn_id}").toString();
       // return (String) getAttributeInternal(TRANSTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTxnId.
     * @param value value to set the  TransTxnId
     */
    public void setTransTxnId(String value) {
        setAttributeInternal(TRANSTXNID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LvlUserSelectVO1.
     */
    public RowSet getLvlUserSelectVO1() {
        return (RowSet)getAttributeInternal(LVLUSERSELECTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRevertUsrVO1.
     */
    public RowSet getLovRevertUsrVO1() {
        return (RowSet)getAttributeInternal(LOVREVERTUSRVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
