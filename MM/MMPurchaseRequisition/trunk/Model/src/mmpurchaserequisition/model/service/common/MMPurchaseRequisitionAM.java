package mmpurchaserequisition.model.service.common;

import java.math.BigDecimal;

import java.util.ArrayList;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 19 12:22:39 IST 2013
// ---------------------------------------------------------------------
public interface MMPurchaseRequisitionAM extends ApplicationModule {
    void setPrItems(String txnId);

    void Commit_MM_PR_VO();

    boolean checkPendingQty(BigDecimal qty);

    void updatePendingQty(BigDecimal quantity);

    void search();


    String getCurrentPrTnxId();

    String getCurrentPrTnxIdTF();

    Integer getFYid();

    Integer on_load_page();


    Integer getPRStatus();

    void checkUncheckAll(String tnxId, Boolean b, Integer prStatus);

    boolean isAllCheckBoxMark();

    void setStatus(Integer prStatus);

    void resetAction();

    void executePR();

    String getModifiedUser();

    void setTxnIdForCurrentRow(Integer UsrId, String CldId, Integer SlocId, String OrgId);

    String addMmPrItem();

    Integer getUsrLvl(Integer SlocId, String CldId, String OrgId, Integer UsrId, String WfNo, String DocNo);

    String getWfNo(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    Integer insIntoTxn(Integer SlocId, String CldId, String OrgId, Integer DocNo, String WfNo, Integer usr_idFrm,
                       Integer usr_idTo, Integer levelTo, Integer levelFrm, String action, String remark,
                       oracle.jbo.domain.Number amount);

    String setauthStat(String wfreturn);

    String genPrNo();

    Integer pendingCheck(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    String ItemNameDuplicate();

    String getFlexiFieldFilter();

    String latestPriceUpdate();

    void cancelPrAuth();

    String valiadateBdgAmt();

    String isValidDocument();

    String createAttchmntRow(String contentTyp, String fileNm, String extn);

    String chkAttchRqd();

    Boolean chkCcApplicableOrNot();

    void generateCostCenterHeaderWise();

    void declareGlblValuesForCC();

    void deleteCostCenterItem();

    void updateCostCenterAmt();

    void sendDataFromTempCcToPRCc();

    ArrayList validateFlexi();

    String ccFinalizedCheck();

    String getTopWFUsr();

    String viewWFData();
}
