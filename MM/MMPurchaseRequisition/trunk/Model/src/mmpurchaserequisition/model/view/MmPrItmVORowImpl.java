package mmpurchaserequisition.model.view;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmpurchaserequisition.model.entity.MmPrItmEOImpl;
import mmpurchaserequisition.model.service.MMPurchaseRequisitionAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.domain.Number;
//import mmpurchaserequisition.model.service.MMPurchaseRequisitionAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 22 11:13:50 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmPrItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMPRITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        PendQty {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        }
        ,
        PoQty {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPoQty();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPoQty((Number) value);
            }
        }
        ,
        PrQty {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPrQty();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPrQty((Number) value);
            }
        }
        ,
        PrTxnId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPrTxnId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPrTxnId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        WhId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        ItmdescId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmdescId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CnclItm {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getCnclItm();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setCnclItm((String) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPendQtyBs((Number) value);
            }
        }
        ,
        PoQtyBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPoQtyBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPoQtyBs((Number) value);
            }
        }
        ,
        PrQtyBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getPrQtyBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setPrQtyBs((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmAmtBsCrnt {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmAmtBsCrnt();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmAmtBsCrnt((Number) value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmPriceBs((Number) value);
            }
        }
        ,
        ItmPriceBsCrnt {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmPriceBsCrnt();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setItmPriceBsCrnt((Number) value);
            }
        }
        ,
        BdgAmtBal {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getBdgAmtBal();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setBdgAmtBal((Number) value);
            }
        }
        ,
        TransItmName {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransItmName();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransItmName((String) value);
            }
        }
        ,
        TransItemQty {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransItemQty();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransItemQty((Integer) value);
            }
        }
        ,
        TransItemId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransItemId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransItemId((String) value);
            }
        }
        ,
        TransItmUom {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransItmUom();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransItmUom((String) value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        }
        ,
        TransLtstPrice {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransLtstPrice();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransLtstPrice((Number) value);
            }
        }
        ,
        TransBalAmt {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransBalAmt();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransBalAmt((Number) value);
            }
        }
        ,
        TransItmGrp {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getTransItmGrp();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setTransItmGrp((String) value);
            }
        }
        ,
        CcId {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getCcId();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setCcId((String) value);
            }
        }
        ,
        ItmLOVVO1 {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getItmLOVVO1();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UomVO1 {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getUomVO1();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmNmVO1 {
            public Object get(MmPrItmVORowImpl obj) {
                return obj.getLovItmNmVO1();
            }

            public void put(MmPrItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmPrItmVORowImpl object);

        public abstract void put(MmPrItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int POQTY = AttributesEnum.PoQty.index();
    public static final int PRQTY = AttributesEnum.PrQty.index();
    public static final int PRTXNID = AttributesEnum.PrTxnId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITMDESCID = AttributesEnum.ItmdescId.index();
    public static final int CNCLITM = AttributesEnum.CnclItm.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int POQTYBS = AttributesEnum.PoQtyBs.index();
    public static final int PRQTYBS = AttributesEnum.PrQtyBs.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTBSCRNT = AttributesEnum.ItmAmtBsCrnt.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int ITMPRICEBSCRNT = AttributesEnum.ItmPriceBsCrnt.index();
    public static final int BDGAMTBAL = AttributesEnum.BdgAmtBal.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int TRANSITEMQTY = AttributesEnum.TransItemQty.index();
    public static final int TRANSITEMID = AttributesEnum.TransItemId.index();
    public static final int TRANSITMUOM = AttributesEnum.TransItmUom.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSLTSTPRICE = AttributesEnum.TransLtstPrice.index();
    public static final int TRANSBALAMT = AttributesEnum.TransBalAmt.index();
    public static final int TRANSITMGRP = AttributesEnum.TransItmGrp.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int ITMLOVVO1 = AttributesEnum.ItmLOVVO1.index();
    public static final int UOMVO1 = AttributesEnum.UomVO1.index();
    public static final int LOVITMNMVO1 = AttributesEnum.LovItmNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmPrItmVORowImpl() {
    }

    /**
     * Gets MmPrItmEO entity object.
     * @return the MmPrItmEO
     */
    public MmPrItmEOImpl getMmPrItmEO() {
        return (MmPrItmEOImpl) getEntity(ENTITY_MMPRITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public oracle.jbo.domain.Number getPendQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(oracle.jbo.domain.Number value) {

        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for PO_QTY using the alias name PoQty.
     * @return the PO_QTY
     */
    public oracle.jbo.domain.Number getPoQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(POQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_QTY using the alias name PoQty.
     * @param value value to set the PO_QTY
     */
    public void setPoQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(POQTY, value);
    }

    /**
     * Gets the attribute value for PR_QTY using the alias name PrQty.
     * @return the PR_QTY
     */
    public oracle.jbo.domain.Number getPrQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PRQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PR_QTY using the alias name PrQty.
     * @param value value to set the PR_QTY
     */
    public void setPrQty(oracle.jbo.domain.Number value) {
        Number zero = new Number(0);
        if (value == null) {
            setAttributeInternal(PRQTY, zero);
        } else {
            MMPurchaseRequisitionAMImpl am = (MMPurchaseRequisitionAMImpl) this.getApplicationModule();
            setPendQty(value);
            setPoQty(new Number(0));
            setPoQtyBs(new Number(0));
            setPendQtyBs(value);
            Number price = new Number(0);
            //if(curr.getAttribute("ItmId")!=null){
            BigDecimal pric =
                (BigDecimal) (callStoredFunction(Types.NUMERIC, "MM.MM_GET_ITM_LATEST_PRICE (?,?,?,?,?,?)", new Object[] {
                                                 getCldId(), getOrgId(), getSlocId(), getTransHoOrgId(), getItmId(), "P"
            }));
            //System.out.println("current latest price is "+pric);
            try {
                price = new Number(pric);
            } catch (Exception e) {
                e.printStackTrace();
            }
            setItmPriceBsCrnt((Number)price.round(6));
            setItmPriceBs((Number)price.round(6));
            Number baseAmt = (Number) value.multiply((Number)price.round(6));
            setItmAmtBs(baseAmt);
            System.out.println("-------------- setter --- "+baseAmt+ "Price "+price +"  qty "+value);
            if (am.getMmPr2().getCurrentRow() != null &&
                am.getMmPr2().getCurrentRow().getAttribute("TransBdgFlg") != null &&
                ("Y").equalsIgnoreCase(am.getMmPr2().getCurrentRow().getAttribute("TransBdgFlg").toString())) {
                ViewObjectImpl coaItm = am.getLovCoaItm();

                coaItm.setNamedWhereClauseParam("bindItmId", getItmId());
                coaItm.executeQuery();

                Row[] rr = coaItm.getFilteredRows("ItmId", getItmId());
                if (rr.length > 0) {
                    Number price1 = new Number(0);
                    BigDecimal pric1 =
                        (BigDecimal) (callStoredFunction(Types.NUMERIC, "MM.MM_BAL_OF_ACTUAL_VS_BUDGET (?,?,?)", new Object[] {
                                                         getCldId(), getOrgId(), rr[0].getAttribute("CoaId")


                    }));
                    try {
                        price1 = new Number(pric1);
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                    setBdgAmtBal((Number)price1.round(6));

                    /* 
                    if (getItmPriceBs() != null) {
                        Number baseAmt = (Number) value.multiply(getItmPriceBs()).round(6);
                        setItmAmtBs(baseAmt);
                    } */


                    System.out.println("get item price bas ans base current " + getItmPriceBs() + " " +
                                       getItmPriceBsCrnt()+ " "+getItmAmtBs());
                }
            }
        }
        setAttributeInternal(PRQTY, value);

    }

    /**
     * Gets the attribute value for PR_TXN_ID using the alias name PrTxnId.
     * @return the PR_TXN_ID
     */
    public String getPrTxnId() {
        return (String) getAttributeInternal(PRTXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for PR_TXN_ID using the alias name PrTxnId.
     * @param value value to set the PR_TXN_ID
     */
    public void setPrTxnId(String value) {
        setAttributeInternal(PRTXNID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmdescId.
     * @return the ItmdescId
     */
    public String getItmdescId() {

        String name = null;
        Row rows[] = getItmLOVVO1().getFilteredRows("ItmId", getItmId());
        if (rows.length > 0) {
            if (rows[0].getAttribute("ItmDesc") != null) {
                name = rows[0].getAttribute("ItmDesc").toString();
            }
        }
        if (name != null) {
            return name;
        } else {
            return (String) getAttributeInternal(ITMDESCID);
        }


        //     return (String) getAttributeInternal(ITMDESCID);
    }


    /**
     * Gets the attribute value for CNCL_ITM using the alias name CnclItm.
     * @return the CNCL_ITM
     */
    public String getCnclItm() {
        return (String) getAttributeInternal(CNCLITM);
    }

    /**
     * Sets <code>value</code> as attribute value for CNCL_ITM using the alias name CnclItm.
     * @param value value to set the CNCL_ITM
     */
    public void setCnclItm(String value) {
        setAttributeInternal(CNCLITM, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public oracle.jbo.domain.Number getUomConvFctr() {
        return (oracle.jbo.domain.Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(oracle.jbo.domain.Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @return the PEND_QTY_BS
     */
    public oracle.jbo.domain.Number getPendQtyBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @param value value to set the PEND_QTY_BS
     */
    public void setPendQtyBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for PO_QTY_BS using the alias name PoQtyBs.
     * @return the PO_QTY_BS
     */
    public oracle.jbo.domain.Number getPoQtyBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(POQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_QTY_BS using the alias name PoQtyBs.
     * @param value value to set the PO_QTY_BS
     */
    public void setPoQtyBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(POQTYBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for PR_QTY_BS using the alias name PrQtyBs.
     * @return the PR_QTY_BS
     */
    public oracle.jbo.domain.Number getPrQtyBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PRQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PR_QTY_BS using the alias name PrQtyBs.
     * @param value value to set the PR_QTY_BS
     */
    public void setPrQtyBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(PRQTYBS, value);
    }


    /**
     * Gets the attribute value for ITM_AMT_BS_CRNT using the alias name ItmAmtBsCrnt.
     * @return the ITM_AMT_BS_CRNT
     */
    public Number getItmAmtBsCrnt() {
        return (Number) getAttributeInternal(ITMAMTBSCRNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS_CRNT using the alias name ItmAmtBsCrnt.
     * @param value value to set the ITM_AMT_BS_CRNT
     */
    public void setItmAmtBsCrnt(Number value) {
        setAttributeInternal(ITMAMTBSCRNT, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @return the ITM_PRICE_BS
     */
    public Number getItmPriceBs() {
        return (Number) getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @param value value to set the ITM_PRICE_BS
     */
    public void setItmPriceBs(Number value) {
        if(value!=null){
            if(getPrQty()!=null){
                Number baseAmt=(Number)value.multiply(getPrQty()).round(6);
                setItmAmtBs(baseAmt);
            }
        }
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS_CRNT using the alias name ItmPriceBsCrnt.
     * @return the ITM_PRICE_BS_CRNT
     */
    public Number getItmPriceBsCrnt() {
        return (Number) getAttributeInternal(ITMPRICEBSCRNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS_CRNT using the alias name ItmPriceBsCrnt.
     * @param value value to set the ITM_PRICE_BS_CRNT
     */
    public void setItmPriceBsCrnt(Number value) {
        setAttributeInternal(ITMPRICEBSCRNT, value);
    }

    /**
     * Gets the attribute value for BDG_AMT_BAL using the alias name BdgAmtBal.
     * @return the BDG_AMT_BAL
     */
    public Number getBdgAmtBal() {
        return (Number) getAttributeInternal(BDGAMTBAL);
    }

    /**
     * Sets <code>value</code> as attribute value for BDG_AMT_BAL using the alias name BdgAmtBal.
     * @param value value to set the BDG_AMT_BAL
     */
    public void setBdgAmtBal(Number value) {
        setAttributeInternal(BDGAMTBAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
        if (getItmId() != null) {
            MMPurchaseRequisitionAMImpl am = (MMPurchaseRequisitionAMImpl) this.getApplicationModule();
            ViewObjectImpl itmnm = am.getLovItmNm1();
            itmnm.setNamedWhereClauseParam("bindCldId", getCldId());
            itmnm.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            itmnm.setNamedWhereClauseParam("bindSlocId", getSlocId());
            itmnm.executeQuery();
            Row rr[] = itmnm.getFilteredRows("ItmId", getItmId());
            //System.out.println("size" + rr.length);
            if (rr.length > 0) {
                String name = (String) rr[0].getAttribute("ItmDesc");
                //System.out.println("ItmNm" + name);
                return name;
            }
        }

        return (String) getAttributeInternal(TRANSITMNAME);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        if (getTransItmUom() != null) {
            setTransItmUom(getTransItmUom());
            if(getItmId()!=null){
                Number price=new Number(0);
            BigDecimal pric = (BigDecimal) (callStoredFunction(Types.NUMERIC, "MM.MM_GET_ITM_LATEST_PRICE (?,?,?,?,?,?)", new Object[] {
                                                       getCldId(), getOrgId(), getSlocId(),getTransHoOrgId(),getItmId(),"P"
            }));
            //System.out.println("current latest price is "+pric);
            try{
                price=new Number(pric);
            }catch (Exception e){
                e.printStackTrace();
            }
            setItmPriceBsCrnt(price);
            setItmPriceBs(price);
            }
        }
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemQty.
     * @return the TransItemQty
     */
    public Integer getTransItemQty() {
        return (Integer) getAttributeInternal(TRANSITEMQTY);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemQty.
     * @param value value to set the  TransItemQty
     */
    public void setTransItemQty(Integer value) {
        setAttributeInternal(TRANSITEMQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemId.
     * @return the TransItemId
     */
    public String getTransItemId() {
        return (String) getAttributeInternal(TRANSITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemId.
     * @param value value to set the  TransItemId
     */
    public void setTransItemId(String value) {
        setAttributeInternal(TRANSITEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUom.
     * @return the TransItmUom
     */
    public String getTransItmUom() {
        return (String) getAttributeInternal(TRANSITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUom.
     * @param value value to set the  TransItmUom
     */
    public void setTransItmUom(String value) {
        setAttributeInternal(TRANSITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        String HoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        return HoOrgId;
        //return (String) getAttributeInternal(TRANSHOORGID);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLtstPrice.
     * @return the TransLtstPrice
     */
    public Number getTransLtstPrice() {
        if(getItmId()!=null){
    
             /*  Number price=new Number(0);
              //if(curr.getAttribute("ItmId")!=null){
              BigDecimal pric = (BigDecimal) (callStoredFunction(Types.NUMERIC, "MM.MM_GET_ITM_LATEST_PRICE (?,?,?,?,?,?)", new Object[] {
                                                         getCldId(), getOrgId(), getSlocId(),getTransHoOrgId(),getItmId(),"P"
              }));
              //System.out.println("current latest price is "+pric);
              try{
                  price=new Number(pric);
              }catch (Exception e){
                  e.printStackTrace();
              }
              setItmAmtBs(price);
              setItmPriceBsCrnt(price); */
           //   curr.setAttribute("ItmAmtBs", price);
             //    curr.setAttribute("ItmAmtBsCrnt", price);
             //} 
             // return price;
        }
       // if(getItmAmtBs()!=null && getItmAmtBs().compareTo(0)==1){
            return (Number) getAttributeInternal(TRANSLTSTPRICE);
        //}
//        }else{
//          
//            return price;
//        
//        }
         
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }



    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLtstPrice.
     * @param value value to set the  TransLtstPrice
     */
    public void setTransLtstPrice(Number value) {
        setAttributeInternal(TRANSLTSTPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBalAmt.
     * @return the TransBalAmt
     */
    public Number getTransBalAmt() {
        /* 
         if(getBdgAmtBal()!=null || getBdgAmtBal().compareTo(0)==1){
             return (Number) getAttributeInternal(TRANSBALAMT);
         }else{
             Number price=new Number(0);
               BigDecimal pric = (BigDecimal) (callStoredFunction(Types.NUMERIC, "MM.MM_BAL_OF_ACTUAL_VS_BUDGET (?,?,?,?,?,?)", new Object[] {
                                                           getCldId(), getOrgId(), getSlocId(),getTransHoOrgId(),getItmId(),"P"
              }));
              try{
                  price=new Number(pric);
              }catch (Exception e){
                  e.printStackTrace();
              }
           setBdgAmtBal(price); 
             return price;
         }  */
        return (Number) getAttributeInternal(TRANSBALAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBalAmt.
     * @param value value to set the  TransBalAmt
     */
    public void setTransBalAmt(Number value) {
        setAttributeInternal(TRANSBALAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmGrp.
     * @return the TransItmGrp
     */
    public String getTransItmGrp() {
        MMPurchaseRequisitionAMImpl am=(MMPurchaseRequisitionAMImpl)this.getApplicationModule();
       if(am.getMmPr2().getCurrentRow()!=null && am.getMmPr2().getCurrentRow().getAttribute("GrpId")!=null)
       { 
           Row currentRow = am.getMmPr2().getCurrentRow();
            String grpId=currentRow.getAttribute("GrpId").toString();
            return grpId;
        }
        return (String) getAttributeInternal(TRANSITMGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmGrp.
     * @param value value to set the  TransItmGrp
     */
    public void setTransItmGrp(String value) {
        setAttributeInternal(TRANSITMGRP, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmLOVVO1.
     */
    public RowSet getItmLOVVO1() {
        return (RowSet) getAttributeInternal(ITMLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UomVO1.
     */
    public RowSet getUomVO1() {
        return (RowSet) getAttributeInternal(UOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmNmVO1.
     */
    public RowSet getLovItmNmVO1() {
        return (RowSet) getAttributeInternal(LOVITMNMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
