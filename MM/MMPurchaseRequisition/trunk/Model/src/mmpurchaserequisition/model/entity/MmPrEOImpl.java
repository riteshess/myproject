package mmpurchaserequisition.model.entity;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 16:36:32 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmPrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmPrEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmPrEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmPrEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        PrTxnId {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrTxnId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrTxnId((String) value);
            }
        }
        ,
        PrTxnDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrTxnDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrTxnDt((Timestamp) value);
            }
        }
        ,
        FyId {
            public Object get(MmPrEOImpl obj) {
                return obj.getFyId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        PrNo {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrNo();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrNo((String) value);
            }
        }
        ,
        PrDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrDt((Timestamp) value);
            }
        }
        ,
        RqmtAreaId {
            public Object get(MmPrEOImpl obj) {
                return obj.getRqmtAreaId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setRqmtAreaId((Integer) value);
            }
        }
        ,
        PrType {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrType();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrType((Integer) value);
            }
        }
        ,
        PrStat {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrStat();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrStat((Integer) value);
            }
        }
        ,
        AuthStat {
            public Object get(MmPrEOImpl obj) {
                return obj.getAuthStat();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setAuthStat((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmPrEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmPrEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        WhId {
            public Object get(MmPrEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        ReqdDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getReqdDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setReqdDt((Timestamp) value);
            }
        }
        ,
        PrStatDt {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrStatDt();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrStatDt((Timestamp) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmPrEOImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmPrEOImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp) value);
            }
        }
        ,
        PrjId {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrjId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        }
        ,
        Remarks {
            public Object get(MmPrEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        PrCatg {
            public Object get(MmPrEOImpl obj) {
                return obj.getPrCatg();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setPrCatg((Integer) value);
            }
        }
        ,
        GrpId {
            public Object get(MmPrEOImpl obj) {
                return obj.getGrpId();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setGrpId((String) value);
            }
        }
        ,
        TotAmtBs {
            public Object get(MmPrEOImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setTotAmtBs((Number) value);
            }
        }
        ,
        ProcType {
            public Object get(MmPrEOImpl obj) {
                return obj.getProcType();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setProcType((String) value);
            }
        }
        ,
        ImportPo {
            public Object get(MmPrEOImpl obj) {
                return obj.getImportPo();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setImportPo((String) value);
            }
        }
        ,
        MmPrItm {
            public Object get(MmPrEOImpl obj) {
                return obj.getMmPrItm();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmPrAttch {
            public Object get(MmPrEOImpl obj) {
                return obj.getMmPrAttch();
            }

            public void put(MmPrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmPrEOImpl object);

        public abstract void put(MmPrEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRTXNID = AttributesEnum.PrTxnId.index();
    public static final int PRTXNDT = AttributesEnum.PrTxnDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int PRNO = AttributesEnum.PrNo.index();
    public static final int PRDT = AttributesEnum.PrDt.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int PRTYPE = AttributesEnum.PrType.index();
    public static final int PRSTAT = AttributesEnum.PrStat.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int REQDDT = AttributesEnum.ReqdDt.index();
    public static final int PRSTATDT = AttributesEnum.PrStatDt.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int PRCATG = AttributesEnum.PrCatg.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int PROCTYPE = AttributesEnum.ProcType.index();
    public static final int IMPORTPO = AttributesEnum.ImportPo.index();
    public static final int MMPRITM = AttributesEnum.MmPrItm.index();
    public static final int MMPRATTCH = AttributesEnum.MmPrAttch.index();

    /**
     * This is the default constructor (do not remove).
     */


    public MmPrEOImpl() {


    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmpurchaserequisition.model.entity.MmPrEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PrTxnId, using the alias name PrTxnId.
     * @return the value of PrTxnId
     */
    public String getPrTxnId() {
        return (String) getAttributeInternal(PRTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrTxnId.
     * @param value value to set the PrTxnId
     */
    public void setPrTxnId(String value) {
        setAttributeInternal(PRTXNID, value);
    }

    /**
     * Gets the attribute value for PrTxnDt, using the alias name PrTxnDt.
     * @return the value of PrTxnDt
     */
    public Timestamp getPrTxnDt() {
        return (Timestamp) getAttributeInternal(PRTXNDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrTxnDt.
     * @param value value to set the PrTxnDt
     */
    public void setPrTxnDt(Timestamp value) {
        setAttributeInternal(PRTXNDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for PrNo, using the alias name PrNo.
     * @return the value of PrNo
     */
    public String getPrNo() {
        return (String) getAttributeInternal(PRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrNo.
     * @param value value to set the PrNo
     */
    public void setPrNo(String value) {
        setAttributeInternal(PRNO, value);
    }

    /**
     * Gets the attribute value for PrDt, using the alias name PrDt.
     * @return the value of PrDt
     */
    public Timestamp getPrDt() {
        return (Timestamp) getAttributeInternal(PRDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrDt.
     * @param value value to set the PrDt
     */
    public void setPrDt(Timestamp value) {
        setAttributeInternal(PRDT, value);
    }

    /**
     * Gets the attribute value for RqmtAreaId, using the alias name RqmtAreaId.
     * @return the value of RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaId.
     * @param value value to set the RqmtAreaId
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for PrType, using the alias name PrType.
     * @return the value of PrType
     */
    public Integer getPrType() {
        return (Integer) getAttributeInternal(PRTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrType.
     * @param value value to set the PrType
     */
    public void setPrType(Integer value) {
        setAttributeInternal(PRTYPE, value);
    }


    /**
     * Gets the attribute value for PrStat, using the alias name PrStat.
     * @return the value of PrStat
     */
    public Integer getPrStat() {
        return (Integer) getAttributeInternal(PRSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrStat.
     * @param value value to set the PrStat
     */
    public void setPrStat(Integer value) {
        setAttributeInternal(PRSTAT, value);
    }

    /**
     * Gets the attribute value for AuthStat, using the alias name AuthStat.
     * @return the value of AuthStat
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthStat.
     * @param value value to set the AuthStat
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for ReqdDt, using the alias name ReqdDt.
     * @return the value of ReqdDt
     */
    public Timestamp getReqdDt() {
        return (Timestamp) getAttributeInternal(REQDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqdDt.
     * @param value value to set the ReqdDt
     */
    public void setReqdDt(Timestamp value) {
        setAttributeInternal(REQDDT, value);
    }

    /**
     * Gets the attribute value for PrStatDt, using the alias name PrStatDt.
     * @return the value of PrStatDt
     */
    public Timestamp getPrStatDt() {
        return (Timestamp) getAttributeInternal(PRSTATDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrStatDt.
     * @param value value to set the PrStatDt
     */
    public void setPrStatDt(Timestamp value) {
        setAttributeInternal(PRSTATDT, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DocDtSrc, using the alias name DocDtSrc.
     * @return the value of DocDtSrc
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDtSrc.
     * @param value value to set the DocDtSrc
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for PrCatg, using the alias name PrCatg.
     * @return the value of PrCatg
     */
    public Integer getPrCatg() {
        return (Integer) getAttributeInternal(PRCATG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrCatg.
     * @param value value to set the PrCatg
     */
    public void setPrCatg(Integer value) {
        setAttributeInternal(PRCATG, value);
    }

    /**
     * Gets the attribute value for GrpId, using the alias name GrpId.
     * @return the value of GrpId
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrpId.
     * @param value value to set the GrpId
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for TotAmtBs, using the alias name TotAmtBs.
     * @return the value of TotAmtBs
     */
    public oracle.jbo.domain.Number getTotAmtBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtBs.
     * @param value value to set the TotAmtBs
     */
    public void setTotAmtBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for ProcType, using the alias name ProcType.
     * @return the value of ProcType
     */
    public String getProcType() {
        return (String) getAttributeInternal(PROCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProcType.
     * @param value value to set the ProcType
     */
    public void setProcType(String value) {
        setAttributeInternal(PROCTYPE, value);
    }

    /**
     * Gets the attribute value for ImportPo, using the alias name ImportPo.
     * @return the value of ImportPo
     */
    public String getImportPo() {
        return (String) getAttributeInternal(IMPORTPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ImportPo.
     * @param value value to set the ImportPo
     */
    public void setImportPo(String value) {
        setAttributeInternal(IMPORTPO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmPrItm() {
        return (RowIterator) getAttributeInternal(MMPRITM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmPrAttch() {
        return (RowIterator) getAttributeInternal(MMPRATTCH);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param prTxnId key constituent
     * @param whId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String prTxnId, String whId) {
        return new Key(new Object[] { cldId, slocId, orgId, prTxnId, whId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        System.out.println(" in the create method of MmPr");
        Integer sloc_id = Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String org_id = (String) evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cld_id = (String) evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer userId = Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_USR}").toString());
        //        String txnId = (String) (callStoredFunction(Types.VARCHAR, "app.pkg_app.get_txn_id (?,?,?,?,?)", new Object[] {
        //                                                    userId, org_id, sloc_id, new Integer(18514), cld_id
        //        }));
        setSlocId(sloc_id);
        setAuthStat("N");
        setOrgId(org_id);
        setCldId(cld_id);
        // setFyId(1);
        // setPrTxnId(txnId);
        setPrDt(new Timestamp(System.currentTimeMillis()));
        setPrTxnDt(new Timestamp(System.currentTimeMillis()));

        //        //String whId = (String) (callStoredFunction(Types.VARCHAR, "MM.GET_WH_ID(?,?,?,?)", new Object[] {
        //                                                   cld_id, sloc_id, org_id, userId
        //       // }));
        //        setWhId(whId);
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Integer userId = Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_USR}").toString());
        Integer sloc_id = Integer.valueOf(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String org_id = (String) evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cld_id = (String) evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Timestamp ts = new Timestamp(System.currentTimeMillis());

        if (operation == DML_INSERT) {
            Integer fyId = (Integer) (callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {
                                                         cld_id, org_id, ts
            }));
            System.out.println("fy::" + fyId);
            String tableName = "MM$PR";
            System.out.println("category id is "+ getPrCatg());
            
            String prNo = (String) (callStoredFunction(Types.VARCHAR, "MM.FN_MM_GEN_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                       sloc_id, cld_id, org_id, tableName, null, fyId,18514,getPrCatg(),null
            }));
            
            System.out.println("current gen id is "+prNo);
            setDocIdSrc("0");
            setPrNo(prNo);
            setUsrIdCreate(userId);
            setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
            setUsrIdMod(userId);
            setPrStatDt(new Timestamp(System.currentTimeMillis()));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }

        if (operation == DML_UPDATE) {
            setDocIdSrc("0");
            setUsrIdMod(Integer.valueOf(userId));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
            if(getDocDtSrc() == null) {
                setDocDtSrc(new Timestamp(System.currentTimeMillis()));
            }
        }

        super.doDML(operation, e);


    }

    public static Object evaluateEL(String el) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, el, Object.class);
        return exp.getValue(elContext);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
