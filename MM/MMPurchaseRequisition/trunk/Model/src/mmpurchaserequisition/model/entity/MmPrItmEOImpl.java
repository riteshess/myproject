package mmpurchaserequisition.model.entity;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 19 11:45:15 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmPrItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        PrTxnId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPrTxnId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPrTxnId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        PrQty {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPrQty();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPrQty((Number) value);
            }
        }
        ,
        PoQty {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPoQty();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPoQty((Number) value);
            }
        }
        ,
        PendQty {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        }
        ,
        WhId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        CnclItm {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getCnclItm();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setCnclItm((String) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        PrQtyBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPrQtyBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPrQtyBs((Number) value);
            }
        }
        ,
        PoQtyBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPoQtyBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPoQtyBs((Number) value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setPendQtyBs((Number) value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmPriceBs((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmPriceBsCrnt {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmPriceBsCrnt();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmPriceBsCrnt((Number) value);
            }
        }
        ,
        ItmAmtBsCrnt {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getItmAmtBsCrnt();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setItmAmtBsCrnt((Number) value);
            }
        }
        ,
        BdgAmtBal {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getBdgAmtBal();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setBdgAmtBal((Number) value);
            }
        }
        ,
        CcId {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getCcId();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setCcId((String) value);
            }
        }
        ,
        MmPr {
            public Object get(MmPrItmEOImpl obj) {
                return obj.getMmPr();
            }

            public void put(MmPrItmEOImpl obj, Object value) {
                obj.setMmPr((MmPrEOImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmPrItmEOImpl object);

        public abstract void put(MmPrItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRTXNID = AttributesEnum.PrTxnId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PRQTY = AttributesEnum.PrQty.index();
    public static final int POQTY = AttributesEnum.PoQty.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int CNCLITM = AttributesEnum.CnclItm.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int PRQTYBS = AttributesEnum.PrQtyBs.index();
    public static final int POQTYBS = AttributesEnum.PoQtyBs.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMPRICEBSCRNT = AttributesEnum.ItmPriceBsCrnt.index();
    public static final int ITMAMTBSCRNT = AttributesEnum.ItmAmtBsCrnt.index();
    public static final int BDGAMTBAL = AttributesEnum.BdgAmtBal.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int MMPR = AttributesEnum.MmPr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmPrItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmpurchaserequisition.model.entity.MmPrItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PrTxnId, using the alias name PrTxnId.
     * @return the value of PrTxnId
     */
    public String getPrTxnId() {
        return (String) getAttributeInternal(PRTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrTxnId.
     * @param value value to set the PrTxnId
     */
    public void setPrTxnId(String value) {
        setAttributeInternal(PRTXNID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PrQty, using the alias name PrQty.
     * @return the value of PrQty
     */
    public Number getPrQty() {
        return (Number) getAttributeInternal(PRQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrQty.
     * @param value value to set the PrQty
     */
    public void setPrQty(Number value) {
        setAttributeInternal(PRQTY, value);
    }

    /**
     * Gets the attribute value for PoQty, using the alias name PoQty.
     * @return the value of PoQty
     */
    public Number getPoQty() {
        return (Number) getAttributeInternal(POQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoQty.
     * @param value value to set the PoQty
     */
    public void setPoQty(Number value) {
        setAttributeInternal(POQTY, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for CnclItm, using the alias name CnclItm.
     * @return the value of CnclItm
     */
    public String getCnclItm() {
        return (String) getAttributeInternal(CNCLITM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CnclItm.
     * @param value value to set the CnclItm
     */
    public void setCnclItm(String value) {
        setAttributeInternal(CNCLITM, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for PrQtyBs, using the alias name PrQtyBs.
     * @return the value of PrQtyBs
     */
    public Number getPrQtyBs() {
        return (Number) getAttributeInternal(PRQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrQtyBs.
     * @param value value to set the PrQtyBs
     */
    public void setPrQtyBs(Number value) {
        setAttributeInternal(PRQTYBS, value);
    }

    /**
     * Gets the attribute value for PoQtyBs, using the alias name PoQtyBs.
     * @return the value of PoQtyBs
     */
    public Number getPoQtyBs() {
        return (Number) getAttributeInternal(POQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoQtyBs.
     * @param value value to set the PoQtyBs
     */
    public void setPoQtyBs(Number value) {
        setAttributeInternal(POQTYBS, value);
    }

    /**
     * Gets the attribute value for PendQtyBs, using the alias name PendQtyBs.
     * @return the value of PendQtyBs
     */
    public Number getPendQtyBs() {
        return (Number) getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQtyBs.
     * @param value value to set the PendQtyBs
     */
    public void setPendQtyBs(Number value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for ItmPriceBs, using the alias name ItmPriceBs.
     * @return the value of ItmPriceBs
     */
    public Number getItmPriceBs() {
        return (Number) getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceBs.
     * @param value value to set the ItmPriceBs
     */
    public void setItmPriceBs(Number value) {
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmPriceBsCrnt, using the alias name ItmPriceBsCrnt.
     * @return the value of ItmPriceBsCrnt
     */
    public Number getItmPriceBsCrnt() {
        return (Number) getAttributeInternal(ITMPRICEBSCRNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceBsCrnt.
     * @param value value to set the ItmPriceBsCrnt
     */
    public void setItmPriceBsCrnt(Number value) {
        setAttributeInternal(ITMPRICEBSCRNT, value);
    }

    /**
     * Gets the attribute value for ItmAmtBsCrnt, using the alias name ItmAmtBsCrnt.
     * @return the value of ItmAmtBsCrnt
     */
    public Number getItmAmtBsCrnt() {
        return (Number) getAttributeInternal(ITMAMTBSCRNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBsCrnt.
     * @param value value to set the ItmAmtBsCrnt
     */
    public void setItmAmtBsCrnt(Number value) {
        setAttributeInternal(ITMAMTBSCRNT, value);
    }

    /**
     * Gets the attribute value for BdgAmtBal, using the alias name BdgAmtBal.
     * @return the value of BdgAmtBal
     */
    public Number getBdgAmtBal() {
        return (Number) getAttributeInternal(BDGAMTBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BdgAmtBal.
     * @param value value to set the BdgAmtBal
     */
    public void setBdgAmtBal(Number value) {
        setAttributeInternal(BDGAMTBAL, value);
    }

    /**
     * Gets the attribute value for CcId, using the alias name CcId.
     * @return the value of CcId
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcId.
     * @param value value to set the CcId
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmPrEOImpl.
     */
    public MmPrEOImpl getMmPr() {
        return (MmPrEOImpl) getAttributeInternal(MMPR);
    }

    /**
     * Sets <code>value</code> as the associated entity MmPrEOImpl.
     */
    public void setMmPr(MmPrEOImpl value) {
        setAttributeInternal(MMPR, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param prTxnId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent
     * @param whId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String prTxnId, String itmId,
                                       String itmUom, String whId) {
        return new Key(new Object[] { cldId, slocId, orgId, prTxnId, itmId, itmUom, whId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCcId(this.getHexDocNoFromFun());
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    public String resolvEl(String data){
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message=valueExp.getValue(elContext).toString();
           return Message;
         }
    
    public String getHexDocNoFromFun() {
            Integer  userId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            String hexDocIdFromFun = "0";
            try {
                hexDocIdFromFun = this.callStoredFunction(Types.VARCHAR, "APP.GET_TXN_ID_CC(?,?,?,?,?,?,?)", new Object[] {
                                                          this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                          userId, 18514, 84901,0
                }).toString();
            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("ERROR IN CALLING FUNCTION GET_TXN_ID at BdgEoBudgetEoImpl :" + e.getMessage());
            }
            System.out.println("===========" + hexDocIdFromFun);
            return hexDocIdFromFun;
        }   
        
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);

            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            //  System.out.println("Function return " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            //  throw new JboException(e.getMessage().substring(11, end));
            String msg = e.getMessage(); //.substring(11, end);

            FacesMessage ermsg = new FacesMessage(msg);
            ermsg.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, ermsg);
            return null;
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }
}
