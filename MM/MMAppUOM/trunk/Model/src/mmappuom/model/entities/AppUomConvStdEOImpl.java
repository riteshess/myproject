package mmappuom.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 28 11:20:59 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppUomConvStdEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        UomId {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUomId();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUomId((String)value);
            }
        }
        ,
        UomNm {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUomNm();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUomNm((String)value);
            }
        }
        ,
        UomDesc {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUomDesc();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUomDesc((String)value);
            }
        }
        ,
        UomClass {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUomClass();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUomClass((Integer)value);
            }
        }
        ,
        BaseUom {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getBaseUom();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setBaseUom((String)value);
            }
        }
        ,
        ConvFctr {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getConvFctr();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setConvFctr((Number)value);
            }
        }
        ,
        Actv {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getActv();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UomStdEntId {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getUomStdEntId();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setUomStdEntId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        AppUomCls {
            public Object get(AppUomConvStdEOImpl obj) {
                return obj.getAppUomCls();
            }

            public void put(AppUomConvStdEOImpl obj, Object value) {
                obj.setAppUomCls((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppUomConvStdEOImpl object);

        public abstract void put(AppUomConvStdEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int UOMID = AttributesEnum.UomId.index();
    public static final int UOMNM = AttributesEnum.UomNm.index();
    public static final int UOMDESC = AttributesEnum.UomDesc.index();
    public static final int UOMCLASS = AttributesEnum.UomClass.index();
    public static final int BASEUOM = AttributesEnum.BaseUom.index();
    public static final int CONVFCTR = AttributesEnum.ConvFctr.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int UOMSTDENTID = AttributesEnum.UomStdEntId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int APPUOMCLS = AttributesEnum.AppUomCls.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppUomConvStdEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmappuom.model.entities.AppUomConvStdEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for UomId, using the alias name UomId.
     * @return the value of UomId
     */
    public String getUomId() {
        return (String)getAttributeInternal(UOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomId.
     * @param value value to set the UomId
     */
    public void setUomId(String value) {
        setAttributeInternal(UOMID, value);
    }

    /**
     * Gets the attribute value for UomNm, using the alias name UomNm.
     * @return the value of UomNm
     */
    public String getUomNm() {
        return (String)getAttributeInternal(UOMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomNm.
     * @param value value to set the UomNm
     */
    public void setUomNm(String value) {
        setAttributeInternal(UOMNM, value);
    }

    /**
     * Gets the attribute value for UomDesc, using the alias name UomDesc.
     * @return the value of UomDesc
     */
    public String getUomDesc() {
        return (String)getAttributeInternal(UOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomDesc.
     * @param value value to set the UomDesc
     */
    public void setUomDesc(String value) {
        setAttributeInternal(UOMDESC, value);
    }

    /**
     * Gets the attribute value for UomClass, using the alias name UomClass.
     * @return the value of UomClass
     */
    public Integer getUomClass() {
        return (Integer)getAttributeInternal(UOMCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomClass.
     * @param value value to set the UomClass
     */
    public void setUomClass(Integer value) {
        setAttributeInternal(UOMCLASS, value);
    }

    /**
     * Gets the attribute value for BaseUom, using the alias name BaseUom.
     * @return the value of BaseUom
     */
    public String getBaseUom() {
        return (String)getAttributeInternal(BASEUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for BaseUom.
     * @param value value to set the BaseUom
     */
    public void setBaseUom(String value) {
        setAttributeInternal(BASEUOM, value);
    }

    /**
     * Gets the attribute value for ConvFctr, using the alias name ConvFctr.
     * @return the value of ConvFctr
     */
    public Number getConvFctr() {
        return (Number)getAttributeInternal(CONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConvFctr.
     * @param value value to set the ConvFctr
     */
    public void setConvFctr(Number value) {
        setAttributeInternal(CONVFCTR, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Date getInactvDt() {
        return (Date)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }
    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }
    
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for UomStdEntId, using the alias name UomStdEntId.
     * @return the value of UomStdEntId
     */
    public Integer getUomStdEntId() {
        return (Integer)getAttributeInternal(UOMSTDENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomStdEntId.
     * @param value value to set the UomStdEntId
     */
    public void setUomStdEntId(Integer value) {
        setAttributeInternal(UOMSTDENTID, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAppUomCls() {
        return (EntityImpl)getAttributeInternal(APPUOMCLS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAppUomCls(EntityImpl value) {
        setAttributeInternal(APPUOMCLS, value);
    }


    /**
     * @param slocId key constituent
     * @param uomId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String uomId, String cldId) {
       
    //setUsrIdCreateDt((Date)dt);
        
        return new Key(new Object[]{slocId, uomId, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Date dt=(Date)Date.getCurrentDate();
       // System.out.println(" date in dt  "+dt);
         setUsrIdCreateDt(dt);
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }
    public String resolveEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation == DML_UPDATE){
            Integer userid = Integer.parseInt(resolveEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(userid);
            Date dt=(Date)Date.getCurrentDate();
            // System.out.println(" date in dt  "+dt);
             setUsrIdModDt(dt);
        }
        super.doDML(operation, e);
    }
}
