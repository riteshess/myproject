package itemprofile.model.services;


import itemprofile.model.services.common.AppModule;

import itemprofile.model.views.AppRptVOImpl;
import itemprofile.model.views.DualVOImpl;

import itemprofile.model.views.LOVGrpVOImpl;

import itemprofile.model.views.LOVItmPrfVOImpl;

import itemprofile.model.views.LOVUOMConvStdVOImpl;

import java.sql.Types;
import java.sql.CallableStatement;

import java.sql.SQLException;

import java.sql.Types;

import java.util.Map;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;


import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import java.util.Map;

import javax.el.ELContext;

import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 26 10:02:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    
    public static int VARCHAR = Types.VARCHAR;
       String add_mode = null;
       String edit_mode = null;
       String view_mode = null;
       String del_mode = null;
    /**
     * This is the default constructor (do not remove).
     */
    
    public AppModuleImpl() {
    }

    /**
     * Container's getter for DualVO1.
     * @return DualVO1
     */
    public DualVOImpl getDualVO1() {
        return (DualVOImpl) findViewObject("DualVO1");
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.registerOutParameter(7, VARCHAR);
                st.registerOutParameter(8, VARCHAR);
                st.registerOutParameter(9, VARCHAR);
                st.registerOutParameter(10, VARCHAR);
                st.executeUpdate();
                try {
                    setAdd_mode(st.getObject(7).toString());
                    setEdit_mode((st.getObject(8).toString()));
                    setView_mode(st.getObject(9).toString());
                    setDel_mode(st.getObject(10).toString());
                } catch (NullPointerException e) {
                    System.out.println(e);
                    e.printStackTrace();
                }
                return st.getObject(1);

            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {

                    }
                }
            }
        }


    
    public Integer on_load_page()
            {  int count = 0;
            String cld_id =  resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString(); 
            Integer sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()); 
            String org_id =  resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString(); 
            Integer usr_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()); 
            callStoredFunction(VARCHAR,"APP.fn_get_usr_doc_access_param(?,?,?,?,?,?,?,?,?)",
                                       new Object[] { cld_id, sloc_id, org_id, 1,usr_id});
            String calledFrom =  resolvEl("#{pageFlowScope.PARAM_PG_CALLED}").toString(); 
            if(add_mode.equalsIgnoreCase("Y") == false && add_mode.equalsIgnoreCase("N") == false)
            {            count = 1;
                }
            else if(edit_mode.equalsIgnoreCase("Y") == false && edit_mode.equalsIgnoreCase("N") == false)
            {
                count = 1;
                }
            else if(view_mode.equalsIgnoreCase("Y") == false && view_mode.equalsIgnoreCase("N") == false)
            {
               count = 1; 
                }
            else if (del_mode.equalsIgnoreCase("Y") == false && del_mode.equalsIgnoreCase("N") == false)
            {
               count = 1; 
                }
             else if(calledFrom.equalsIgnoreCase("P") == false && calledFrom.equalsIgnoreCase("M") == false)
            {
               count = 1; 
                }
            Map paramMap = ADFContext.getCurrent().getPageFlowScope();
            paramMap.put("PARAM_PG_ADD_MD", add_mode); 
            paramMap.put("PARAM_PG_EDIT_MD", edit_mode); 
            paramMap.put("PARAM_PG_VIEW_MD", view_mode); 
            paramMap.put("PARAM_PG_DEL_MD", del_mode); 
            
                  
      return count;
        }
    public String resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
                ELContext elContext = adfCtx.getELContext();
                ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
                Object Message = valueExp.getValue(elContext).toString();
                return Message.toString();
    }

        public void ResetAction(){
        ViewObjectImpl vo = this.getDualVO1();
        System.out.println("vo after getdaul test");
        vo.getCurrentRow().setAttribute("ActvTrans", "Both");
        vo.getCurrentRow().setAttribute("AttIdTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("AttListofItemCBTrans", null);
        vo.getCurrentRow().setAttribute("BgColorTrans", "D");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("BinsCapacityCBTrans", null);
        vo.getCurrentRow().setAttribute("BlackListedTrans", "Both");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("CapitalGoodTrans", "Both");
        vo.getCurrentRow().setAttribute("CashPurchaseItmTrans", "Both");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ConsumableTrans", "Both");
        vo.getCurrentRow().setAttribute("DownloadReptCBTrans", null);
        vo.getCurrentRow().setAttribute("FileTypeTrans", "PDF");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("GrpWiseListOfItemsCBTrans", null);
        vo.getCurrentRow().setAttribute("HeadColorTrans", "D");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ItemGroupChartCbTrans", null);
        vo.getCurrentRow().setAttribute("ItmGrpIdTrans", null);
        vo.getCurrentRow().setAttribute("ItmGrpNmTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ItmIdTrans", null);
        vo.getCurrentRow().setAttribute("ItmImageTrans", null);
        vo.getCurrentRow().setAttribute("ItmLegCode", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ItmNmTrans", null);
        vo.getCurrentRow().setAttribute("ItmTechNm", null);
        vo.getCurrentRow().setAttribute("KItmIdTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("KItmNmTrans", null);
        vo.getCurrentRow().setAttribute("ListofAlternateItemsCbTrans", null);
        vo.getCurrentRow().setAttribute("ListofBinsCBTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ListOfItemAttSPCBTrans", null);
        vo.getCurrentRow().setAttribute("ListOfItemGroupCBTrans", null);
        vo.getCurrentRow().setAttribute("ListOfItemsCBTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ListofItemsPriceCBTrans", null);
        vo.getCurrentRow().setAttribute("ListofKitItemsCbTrans", null);
        vo.getCurrentRow().setAttribute("ListOfPerfCBTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ListOfSupplierCBTrans", null);
        vo.getCurrentRow().setAttribute("ListOfUnitsCBTrans", null);
        vo.getCurrentRow().setAttribute("ListOfUnitsConvCBTrans", null);
        vo.getCurrentRow().setAttribute("ListofWarehouseCBTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("MaxStk", "Do Not Check");
        vo.getCurrentRow().setAttribute("MinStk", "Do Not Check");
        vo.getCurrentRow().setAttribute("OnHoldTrans", "Both");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ParamSetNm", null);
        vo.getCurrentRow().setAttribute("OrgDescTrans", null);
        vo.getCurrentRow().setAttribute("PramSetId", null);
        System.out.println("vo test");
     
        vo.getCurrentRow().setAttribute("PrintBarcodeCBTrans", null);
        vo.getCurrentRow().setAttribute("PurchaseItmTrans", "Both");
        vo.getCurrentRow().setAttribute("ReorderLvlTrans", "Do Not Check");
        vo.getCurrentRow().setAttribute("ReportFileNameTrans", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("ReportNameTrans", null);
        vo.getCurrentRow().setAttribute("ReportPopUpTrans", null);
        vo.getCurrentRow().setAttribute("SafeQty", "Do Not Check");
        vo.getCurrentRow().setAttribute("SafeStk", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("SalesItmTrans", "Both");
        vo.getCurrentRow().setAttribute("ServiceItmTrans", "Both");
        vo.getCurrentRow().setAttribute("StockableFlgTrans", "Both");
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("SuppWiseListOfItemsCBTrans", null);
        vo.getCurrentRow().setAttribute("TaxExmptdTrans", "Both");
        vo.getCurrentRow().setAttribute("UOMBasic", null);
        vo.getCurrentRow().setAttribute("UOMBasicId", null);
        
        vo.getCurrentRow().setAttribute("UomClassNm", null);
        vo.getCurrentRow().setAttribute("UOMPurchase", null);
        vo.getCurrentRow().setAttribute("UOMPurchaseId", null);
        vo.getCurrentRow().setAttribute("UOMSales", null);
        System.out.println("vo test");
        vo.getCurrentRow().setAttribute("UOMSalesId", null);
        vo.getCurrentRow().setAttribute("WhDescTrans", null);
        vo.getCurrentRow().setAttribute("WhId", null);
        vo.getCurrentRow().setAttribute("WIPItmTrans", null);
        System.out.println("vo end test");
        vo.executeQuery();
        System.out.println("vo after execute query test");
        
    }  

    public void setAdd_mode(String add_mode) {
        this.add_mode = add_mode;
    }

    public String getAdd_mode() {
        return add_mode;
    }

    public void setEdit_mode(String edit_mode) {
        this.edit_mode = edit_mode;
    }

    public String getEdit_mode() {
        return edit_mode;
    }

    public void setView_mode(String view_mode) {
        this.view_mode = view_mode;
    }

    public String getView_mode() {
        return view_mode;
    }

    public void setDel_mode(String del_mode) {
        this.del_mode = del_mode;
    }

    public String getDel_mode() {
        return del_mode;
    }

    /**
     * Container's getter for LOVGrpVO1.
     * @return LOVGrpVO1
     */
    public LOVGrpVOImpl getLOVGrpVO1() {
        return (LOVGrpVOImpl) findViewObject("LOVGrpVO1");
    }

    /**
     * Container's getter for LOVItmPrfVO1.
     * @return LOVItmPrfVO1
     */
    public LOVItmPrfVOImpl getLOVItmPrfVO1() {
        return (LOVItmPrfVOImpl) findViewObject("LOVItmPrfVO1");
    }

    /**
     * Container's getter for LOVUOMConvStdVO1.
     * @return LOVUOMConvStdVO1
     */
    public LOVUOMConvStdVOImpl getLOVUOMConvStdVO1() {
        return (LOVUOMConvStdVOImpl) findViewObject("LOVUOMConvStdVO1");
    }
    public void addpartialattributeNamAm() 
    {
        this.getDualVO1().getCurrentRow().setAttribute("AttrTypeNameTrans", null);
        this.getDualVO1().getCurrentRow().setAttribute("AttrValTrans", null);
    }

    /**
     * Container's getter for AppRpt1.
     * @return AppRpt1
     */
    public AppRptVOImpl getAppRpt1() {
        return (AppRptVOImpl) findViewObject("AppRpt1");
    }
}

