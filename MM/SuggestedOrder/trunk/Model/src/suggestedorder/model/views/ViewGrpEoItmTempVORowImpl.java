package suggestedorder.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 20 15:05:13 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ViewGrpEoItmTempVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        EoId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmUom {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OrdQty {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlocId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OrgId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SoGrpId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getSoGrpId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CldId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransHoId {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getTransHoId();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ViewItemLov1 {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getViewItemLov1();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ViewUomLov1 {
            public Object get(ViewGrpEoItmTempVORowImpl obj) {
                return obj.getViewUomLov1();
            }

            public void put(ViewGrpEoItmTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(ViewGrpEoItmTempVORowImpl object);

        public abstract void put(ViewGrpEoItmTempVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SOGRPID = AttributesEnum.SoGrpId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int TRANSHOID = AttributesEnum.TransHoId.index();
    public static final int VIEWITEMLOV1 = AttributesEnum.ViewItemLov1.index();
    public static final int VIEWUOMLOV1 = AttributesEnum.ViewUomLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ViewGrpEoItmTempVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdQty.
     * @return the OrdQty
     */
    public Number getOrdQty() {
        return (Number) getAttributeInternal(ORDQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute SoGrpId.
     * @return the SoGrpId
     */
    public String getSoGrpId() {
        return (String) getAttributeInternal(SOGRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoId.
     * @return the TransHoId
     */
    public String getTransHoId() {
        String hoId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        return hoId;
        //return (String) getAttributeInternal(TRANSHOID);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the view accessor <code>RowSet</code> ViewItemLov1.
     */
    public RowSet getViewItemLov1() {
        return (RowSet) getAttributeInternal(VIEWITEMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ViewUomLov1.
     */
    public RowSet getViewUomLov1() {
        return (RowSet) getAttributeInternal(VIEWUOMLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

