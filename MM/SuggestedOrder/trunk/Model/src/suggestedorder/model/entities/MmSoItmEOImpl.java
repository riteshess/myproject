package suggestedorder.model.entities;

import java.math.BigDecimal;

import java.math.BigInteger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 18 16:28:45 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmSoItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        EoId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        ItmId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ReorderLvl {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getReorderLvl();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setReorderLvl((Number) value);
            }
        }
        ,
        SafetyQty {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getSafetyQty();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setSafetyQty((Number) value);
            }
        }
        ,
        CurrentStk {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getCurrentStk();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setCurrentStk((Number) value);
            }
        }
        ,
        DlvDays {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getDlvDays();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setDlvDays((Integer) value);
            }
        }
        ,
        ReqQty {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getReqQty();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setReqQty((Number) value);
            }
        }
        ,
        SoQty {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getSoQty();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setSoQty((Number) value);
            }
        }
        ,
        ReqDt {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getReqDt();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setReqDt((Date) value);
            }
        }
        ,
        SoGrpId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getSoGrpId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setSoGrpId((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        OrdPoDocId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getOrdPoDocId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setOrdPoDocId((String) value);
            }
        }
        ,
        OrdQty {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setOrdQty((Number) value);
            }
        }
        ,
        TranEoScore {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getTranEoScore();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setTranEoScore((Number) value);
            }
        }
        ,
        TranCheck {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getTranCheck();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setTranCheck((Boolean) value);
            }
        }
        ,
        TranEoNm {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getTranEoNm();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setTranEoNm((String) value);
            }
        }
        ,
        TranItmName {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getTranItmName();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setTranItmName((String) value);
            }
        }
        ,
        EntityId {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        MmSo {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getMmSo();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setMmSo((MmSoEOImpl) value);
            }
        }
        ,
        ViewItemPoVO {
            public Object get(MmSoItmEOImpl obj) {
                return obj.getViewItemPoVO();
            }

            public void put(MmSoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmSoItmEOImpl object);

        public abstract void put(MmSoItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int REORDERLVL = AttributesEnum.ReorderLvl.index();
    public static final int SAFETYQTY = AttributesEnum.SafetyQty.index();
    public static final int CURRENTSTK = AttributesEnum.CurrentStk.index();
    public static final int DLVDAYS = AttributesEnum.DlvDays.index();
    public static final int REQQTY = AttributesEnum.ReqQty.index();
    public static final int SOQTY = AttributesEnum.SoQty.index();
    public static final int REQDT = AttributesEnum.ReqDt.index();
    public static final int SOGRPID = AttributesEnum.SoGrpId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORDPODOCID = AttributesEnum.OrdPoDocId.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int TRANEOSCORE = AttributesEnum.TranEoScore.index();
    public static final int TRANCHECK = AttributesEnum.TranCheck.index();
    public static final int TRANEONM = AttributesEnum.TranEoNm.index();
    public static final int TRANITMNAME = AttributesEnum.TranItmName.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int MMSO = AttributesEnum.MmSo.index();
    public static final int VIEWITEMPOVO = AttributesEnum.ViewItemPoVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmSoItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("suggestedorder.model.entities.MmSoItmEO");
    }


    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ReorderLvl, using the alias name ReorderLvl.
     * @return the value of ReorderLvl
     */
    public Number getReorderLvl() {
        return (Number)getAttributeInternal(REORDERLVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReorderLvl.
     * @param value value to set the ReorderLvl
     */
    public void setReorderLvl(Number value) {
        setAttributeInternal(REORDERLVL, value);
    }

    /**
     * Gets the attribute value for SafetyQty, using the alias name SafetyQty.
     * @return the value of SafetyQty
     */
    public Number getSafetyQty() {
        return (Number)getAttributeInternal(SAFETYQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SafetyQty.
     * @param value value to set the SafetyQty
     */
    public void setSafetyQty(Number value) {
        setAttributeInternal(SAFETYQTY, value);
    }

    /**
     * Gets the attribute value for CurrentStk, using the alias name CurrentStk.
     * @return the value of CurrentStk
     */
    public Number getCurrentStk() {
        return (Number)getAttributeInternal(CURRENTSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrentStk.
     * @param value value to set the CurrentStk
     */
    public void setCurrentStk(Number value) {
        setAttributeInternal(CURRENTSTK, value);
    }

    /**
     * Gets the attribute value for DlvDays, using the alias name DlvDays.
     * @return the value of DlvDays
     */
    public Integer getDlvDays() {
        return (Integer)getAttributeInternal(DLVDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvDays.
     * @param value value to set the DlvDays
     */
    public void setDlvDays(Integer value) {
        setAttributeInternal(DLVDAYS, value);
    }

    /**
     * Gets the attribute value for ReqQty, using the alias name ReqQty.
     * @return the value of ReqQty
     */
    public Number getReqQty() {
        return (Number)getAttributeInternal(REQQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqQty.
     * @param value value to set the ReqQty
     */
    public void setReqQty(Number value) {
        setAttributeInternal(REQQTY, value);
    }

    /**
     * Gets the attribute value for SoQty, using the alias name SoQty.
     * @return the value of SoQty
     */
    public Number getSoQty() {
        return (Number)getAttributeInternal(SOQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoQty.
     * @param value value to set the SoQty
     */
    public void setSoQty(Number value) {
        setAttributeInternal(SOQTY, value);
    }

    /**
     * Gets the attribute value for ReqDt, using the alias name ReqDt.
     * @return the value of ReqDt
     */
    public Date getReqDt() {
        return (Date)getAttributeInternal(REQDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqDt.
     * @param value value to set the ReqDt
     */
    public void setReqDt(Date value) {
        setAttributeInternal(REQDT, value);
    }

    /**
     * Gets the attribute value for SoGrpId, using the alias name SoGrpId.
     * @return the value of SoGrpId
     */
    public String getSoGrpId() {
        return (String)getAttributeInternal(SOGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoGrpId.
     * @param value value to set the SoGrpId
     */
    public void setSoGrpId(String value) {
        setAttributeInternal(SOGRPID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }


    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }


    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for TranCheck, using the alias name TranCheck.
     * @return the value of TranCheck
     */
    public Boolean getTranCheck() {
        return (Boolean)getAttributeInternal(TRANCHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranCheck.
     * @param value value to set the TranCheck
     */
    public void setTranCheck(Boolean value) {
        setAttributeInternal(TRANCHECK, value);
    }

    /**
     * Gets the attribute value for TranEoScore, using the alias name TranEoScore.
     * @return the value of TranEoScore
     */
    public Number getTranEoScore() {
        return (Number)getAttributeInternal(TRANEOSCORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranEoScore.
     * @param value value to set the TranEoScore
     */
    public void setTranEoScore(Number value) {
        setAttributeInternal(TRANEOSCORE, value);
    }

    /**
     * Gets the attribute value for TranEoNm, using the alias name TranEoNm.
     * @return the value of TranEoNm
     */
    public String getTranEoNm() {
        return (String)getAttributeInternal(TRANEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranEoNm.
     * @param value value to set the TranEoNm
     */
    public void setTranEoNm(String value) {
        setAttributeInternal(TRANEONM, value);
    }

    /**
     * Gets the attribute value for TranItmName, using the alias name TranItmName.
     * @return the value of TranItmName
     */
    public String getTranItmName() {
        return (String) getItemDesc(getAttributeInternal(ITMID));
    }

    /**
     * Sets <code>value</code> as the attribute value for TranItmName.
     * @param value value to set the TranItmName
     */
    public void setTranItmName(String value) {
        setAttributeInternal(TRANITMNAME, value);
    }


    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for OrdPoDocId, using the alias name OrdPoDocId.
     * @return the value of OrdPoDocId
     */
    public String getOrdPoDocId() {
        return (String)getAttributeInternal(ORDPODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdPoDocId.
     * @param value value to set the OrdPoDocId
     */
    public void setOrdPoDocId(String value) {
        setAttributeInternal(ORDPODOCID, value);
    }

    /**
     * Gets the attribute value for OrdQty, using the alias name OrdQty.
     * @return the value of OrdQty
     */
    public Number getOrdQty() {
        return (Number)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQty.
     * @param value value to set the OrdQty
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmSoEOImpl.
     */
    public MmSoEOImpl getMmSo() {
        return (MmSoEOImpl)getAttributeInternal(MMSO);
    }

    /**
     * Sets <code>value</code> as the associated entity MmSoEOImpl.
     */
    public void setMmSo(MmSoEOImpl value) {
        setAttributeInternal(MMSO, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> ViewItemPoVO.
     */
    public RowSet getViewItemPoVO() {
        return (RowSet)getAttributeInternal(VIEWITEMPOVO);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, String itmId, String itmUom,
                                       String cldId) {
        return new Key(new Object[] { slocId, orgId, docId, itmId, itmUom, cldId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        super.doDML(operation, e);
    }
    
    public Object getItemDesc(Object itemId) {
        Key key = null;
        Object name = null;     
        if (itemId != null) {
            try {
                key = new Key(new Object[] { itemId });
                name = getViewItemPoVO().getRow(key).getAttribute("ItmDesc");              
            } catch (Exception e) {
               
            }
           
            return name;

        } else
            return null;

    }
}
