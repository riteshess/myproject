package suggestedorder.model.entities;

import java.math.BigDecimal;

import java.math.BigInteger;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 26 11:57:14 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmSoItmPoEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        PoDocId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getPoDocId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setPoDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        OrdQty {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setOrdQty((BigDecimal) value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setTlrncQtyType((String) value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setTlrncQtyVal((BigDecimal) value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setItmPrice((BigDecimal) value);
            }
        }
        ,
        DiscType {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        RejAlwd {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getRejAlwd();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setRejAlwd((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setItmAmtSp((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        CldId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        EoId {
            public Object get(MmSoItmPoEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmSoItmPoEOImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmSoItmPoEOImpl object);

        public abstract void put(MmSoItmPoEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PODOCID = AttributesEnum.PoDocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int REJALWD = AttributesEnum.RejAlwd.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int EOID = AttributesEnum.EoId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmSoItmPoEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("suggestedorder.model.entities.MmSoItmPoEO");
    }


    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PoDocId, using the alias name PoDocId.
     * @return the value of PoDocId
     */
    public String getPoDocId() {
        return (String)getAttributeInternal(PODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoDocId.
     * @param value value to set the PoDocId
     */
    public void setPoDocId(String value) {
        setAttributeInternal(PODOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for OrdQty, using the alias name OrdQty.
     * @return the value of OrdQty
     */
    public BigDecimal getOrdQty() {
        return (BigDecimal)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQty.
     * @param value value to set the OrdQty
     */
    public void setOrdQty(BigDecimal value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for TlrncQtyType, using the alias name TlrncQtyType.
     * @return the value of TlrncQtyType
     */
    public String getTlrncQtyType() {
        return (String)getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyType.
     * @param value value to set the TlrncQtyType
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TlrncQtyVal, using the alias name TlrncQtyVal.
     * @return the value of TlrncQtyVal
     */
    public BigDecimal getTlrncQtyVal() {
        return (BigDecimal)getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyVal.
     * @param value value to set the TlrncQtyVal
     */
    public void setTlrncQtyVal(BigDecimal value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public BigDecimal getItmPrice() {
        return (BigDecimal)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(BigDecimal value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for RejAlwd, using the alias name RejAlwd.
     * @return the value of RejAlwd
     */
    public String getRejAlwd() {
        return (String)getAttributeInternal(REJALWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejAlwd.
     * @param value value to set the RejAlwd
     */
    public void setRejAlwd(String value) {
        setAttributeInternal(REJALWD, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp, using the alias name ItmAmtSp.
     * @return the value of ItmAmtSp
     */
    public oracle.jbo.domain.Number getItmAmtSp() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp.
     * @param value value to set the ItmAmtSp
     */
    public void setItmAmtSp(oracle.jbo.domain.Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param poDocId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, String poDocId, String itmId,
                                       String itmUom, String cldId) {
        return new Key(new Object[] { slocId, orgId, docId, poDocId, itmId, itmUom, cldId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
