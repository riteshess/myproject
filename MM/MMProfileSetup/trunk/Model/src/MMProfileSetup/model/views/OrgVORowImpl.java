package MMProfileSetup.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 17 20:02:14 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgCldId {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgCldId();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setOrgCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        OrgType {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgType();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setOrgType((Integer)value);
            }
        }
        ,
        OrgDesc {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgDesc();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setOrgDesc((String)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(OrgVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        OrgMmPrf {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgMmPrf();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgVO1 {
            public Object get(OrgVORowImpl obj) {
                return obj.getOrgVO1();
            }

            public void put(OrgVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrgVORowImpl object);

        public abstract void put(OrgVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGCLDID = AttributesEnum.OrgCldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGTYPE = AttributesEnum.OrgType.index();
    public static final int ORGDESC = AttributesEnum.OrgDesc.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int ORGMMPRF = AttributesEnum.OrgMmPrf.index();
    public static final int ORGVO1 = AttributesEnum.OrgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCldId.
     * @return the OrgCldId
     */
    public String getOrgCldId() {
        return (String) getAttributeInternal(ORGCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCldId.
     * @param value value to set the  OrgCldId
     */
    public void setOrgCldId(String value) {
        setAttributeInternal(ORGCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgType.
     * @return the OrgType
     */
    public Integer getOrgType() {
        return (Integer) getAttributeInternal(ORGTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgType.
     * @param value value to set the  OrgType
     */
    public void setOrgType(Integer value) {
        setAttributeInternal(ORGTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgDesc.
     * @return the OrgDesc
     */
    public String getOrgDesc() {
        return (String) getAttributeInternal(ORGDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgDesc.
     * @param value value to set the  OrgDesc
     */
    public void setOrgDesc(String value) {
        setAttributeInternal(ORGDESC, value);
    }
    public String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }
    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgMmPrf.
     */
    public RowIterator getOrgMmPrf() {
        return (RowIterator)getAttributeInternal(ORGMMPRF);
    }

    /**
     * Gets the view accessor <code>RowSet</code> OrgVO1.
     */
    public RowSet getOrgVO1() {
        return (RowSet)getAttributeInternal(ORGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
