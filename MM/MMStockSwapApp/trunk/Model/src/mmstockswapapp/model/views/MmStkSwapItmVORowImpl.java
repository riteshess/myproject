package mmstockswapapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmstockswapapp.model.entities.MmStkSwapItmEOImpl;
import mmstockswapapp.model.services.AppModuleAMImpl;
import mmstockswapapp.model.views.common.MmStkSwapItmVORow;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 05 12:32:18 PST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmStkSwapItmVORowImpl extends ViewRowImpl implements MmStkSwapItmVORow {


    public static final int ENTITY_MMSTKSWAPITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        WhId,
        DocId,
        ItmId,
        ItmUom,
        ItmQty,
        ItmIdMv,
        ItmUomMv,
        UomConvFctr,
        ItmQtyMv,
        TransItmNm,
        TransItmNmMv,
        TransHoOrgId,
        Transfyid,
        TransUomNm,
        MmStkSwap,
        MmStkSwapLot,
        LovItmIdStkVO1,
        LovItmIdVO1,
        LovUomIdVO1,
        LovUomMvVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMIDMV = AttributesEnum.ItmIdMv.index();
    public static final int ITMUOMMV = AttributesEnum.ItmUomMv.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMQTYMV = AttributesEnum.ItmQtyMv.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSITMNMMV = AttributesEnum.TransItmNmMv.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSFYID = AttributesEnum.Transfyid.index();
    public static final int TRANSUOMNM = AttributesEnum.TransUomNm.index();
    public static final int MMSTKSWAP = AttributesEnum.MmStkSwap.index();
    public static final int MMSTKSWAPLOT = AttributesEnum.MmStkSwapLot.index();
    public static final int LOVITMIDSTKVO1 = AttributesEnum.LovItmIdStkVO1.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVUOMMVVO1 = AttributesEnum.LovUomMvVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmStkSwapItmVORowImpl() {
    }

    /**
     * Gets MmStkSwapItmEO entity object.
     * @return the MmStkSwapItmEO
     */
    public MmStkSwapItmEOImpl getMmStkSwapItmEO() {
        return (MmStkSwapItmEOImpl) getEntity(ENTITY_MMSTKSWAPITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setItmQtyMv(value);
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_ID_MV using the alias name ItmIdMv.
     * @return the ITM_ID_MV
     */
    public String getItmIdMv() {
        return (String) getAttributeInternal(ITMIDMV);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID_MV using the alias name ItmIdMv.
     * @param value value to set the ITM_ID_MV
     */
    public void setItmIdMv(String value) {
        setAttributeInternal(ITMIDMV, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_MV using the alias name ItmUomMv.
     * @return the ITM_UOM_MV
     */
    public String getItmUomMv() {
        return (String) getAttributeInternal(ITMUOMMV);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_MV using the alias name ItmUomMv.
     * @param value value to set the ITM_UOM_MV
     */
    public void setItmUomMv(String value) {
        setAttributeInternal(ITMUOMMV, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Integer getUomConvFctr() {
        return (Integer) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Integer value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_MV using the alias name ItmQtyMv.
     * @return the ITM_QTY_MV
     */
    public Number getItmQtyMv() {
        return (Number) getAttributeInternal(ITMQTYMV);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_MV using the alias name ItmQtyMv.
     * @param value value to set the ITM_QTY_MV
     */
    public void setItmQtyMv(Number value) {
        setAttributeInternal(ITMQTYMV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        if (getItmId() != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            ViewObjectImpl stk = am.getLovItmNmView();
            stk.setNamedWhereClauseParam("CldIdBind", getCldId());
            stk.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            stk.setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            stk.setNamedWhereClauseParam("OrgIdBind", getOrgId());
            stk.setNamedWhereClauseParam("ItmIdBind", getItmId());
            stk.executeQuery();
            Row r1[] = stk.getFilteredRows("ItmId", getItmId());
            if (r1.length > 0 && r1[0].getAttribute("ItmDesc") != null) {
                return r1[0].getAttribute("ItmDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSITMNM);
            }
        } else {
            return (String) getAttributeInternal(TRANSITMNM);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNmMv.
     * @return the TransItmNmMv
     */
    public String getTransItmNmMv() {
        if (getItmIdMv() != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            ViewObjectImpl stk = am.getLovItmNmView();
            stk.setNamedWhereClauseParam("CldIdBind", getCldId());
            stk.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            stk.setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            stk.setNamedWhereClauseParam("OrgIdBind", getOrgId());
            stk.setNamedWhereClauseParam("ItmIdBind", getItmIdMv());
            stk.executeQuery();
            Row r1[] = stk.getFilteredRows("ItmId", getItmIdMv());
            if (r1.length > 0 && r1[0].getAttribute("ItmDesc") != null) {
                return r1[0].getAttribute("ItmDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSITMNMMV);
            }
        } else {
            return (String) getAttributeInternal(TRANSITMNMMV);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNmMv.
     * @param value value to set the  TransItmNmMv
     */
    public void setTransItmNmMv(String value) {
        setAttributeInternal(TRANSITMNMMV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        String hoorg = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        return hoorg;
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Transfyid.
     * @return the Transfyid
     */
    public Integer getTransfyid() {
        Timestamp ts = new Timestamp(System.currentTimeMillis());
        Integer fyId = (Integer) (callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {
                                                     getCldId(), getOrgId(), ts
        }));
        return fyId;
        // return (Integer) getAttributeInternal(TRANSFYID);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Transfyid.
     * @param value value to set the  Transfyid
     */
    public void setTransfyid(Integer value) {
        setAttributeInternal(TRANSFYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomNm.
     * @return the TransUomNm
     */
    public String getTransUomNm() {
        if (getItmUom() != null) {
            AppModuleAMImpl am = (AppModuleAMImpl) this.getApplicationModule();
            ViewObjectImpl stk = am.getLovUomNmView();
            stk.setNamedWhereClauseParam("bindCldId", getCldId());
            stk.setNamedWhereClauseParam("bindSlocId", getSlocId());
            stk.setNamedWhereClauseParam("bindUomId", getItmUom());
            stk.executeQuery();
            Row r1[] = stk.getFilteredRows("UomId", getItmUom());
            if (r1.length > 0 && r1[0].getAttribute("UomDesc") != null) {
                return r1[0].getAttribute("UomDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSUOMNM);
            }
        } else {
            return (String) getAttributeInternal(TRANSUOMNM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomNm.
     * @param value value to set the  TransUomNm
     */
    public void setTransUomNm(String value) {
        setAttributeInternal(TRANSUOMNM, value);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MmStkSwap.
     */
    public Row getMmStkSwap() {
        return (Row) getAttributeInternal(MMSTKSWAP);
    }

    /**
     * Sets the master-detail link MmStkSwap between this object and <code>value</code>.
     */
    public void setMmStkSwap(Row value) {
        setAttributeInternal(MMSTKSWAP, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmStkSwapLot.
     */
    public RowIterator getMmStkSwapLot() {
        return (RowIterator) getAttributeInternal(MMSTKSWAPLOT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdStkVO1.
     */
    public RowSet getLovItmIdStkVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDSTKVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomMvVO1.
     */
    public RowSet getLovUomMvVO1() {
        return (RowSet) getAttributeInternal(LOVUOMMVVO1);
    }
}

