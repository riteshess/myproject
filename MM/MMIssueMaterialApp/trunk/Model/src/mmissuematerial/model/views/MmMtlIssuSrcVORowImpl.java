package mmissuematerial.model.views;

import mmissuematerial.model.service.MaterialIsseAMImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 05 11:14:03 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlIssuSrcVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMMTLISSUSRCEO = 0;
    private static ADFLogger adflog = ADFLogger.createADFLogger(MmMtlIssuSrcVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        WhId {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        },
        DocId {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        IssuDocType {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getIssuDocType();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setIssuDocType((Integer) value);
            }
        },
        DocIdSrc {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        },
        DocDtSrc {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp) value);
            }
        },
        DocIdSrcDisp {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getDocIdSrcDisp();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setDocIdSrcDisp((String) value);
            }
        },
        MmMtlIssuItm {
            public Object get(MmMtlIssuSrcVORowImpl obj) {
                return obj.getMmMtlIssuItm();
            }

            public void put(MmMtlIssuSrcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlIssuSrcVORowImpl object);

        public abstract void put(MmMtlIssuSrcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ISSUDOCTYPE = AttributesEnum.IssuDocType.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DOCIDSRCDISP = AttributesEnum.DocIdSrcDisp.index();
    public static final int MMMTLISSUITM = AttributesEnum.MmMtlIssuItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlIssuSrcVORowImpl() {
    }

    /**
     * Gets MmMtlIssuSrcEO entity object.
     * @return the MmMtlIssuSrcEO
     */
    public EntityImpl getMmMtlIssuSrcEO() {
        return (EntityImpl) getEntity(ENTITY_MMMTLISSUSRCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ISSU_DOC_TYPE using the alias name IssuDocType.
     * @return the ISSU_DOC_TYPE
     */
    public Integer getIssuDocType() {
        return (Integer) getAttributeInternal(ISSUDOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_DOC_TYPE using the alias name IssuDocType.
     * @param value value to set the ISSU_DOC_TYPE
     */
    public void setIssuDocType(Integer value) {
        setAttributeInternal(ISSUDOCTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdSrcDisp.
     * @return the DocIdSrcDisp
     */
    public String getDocIdSrcDisp() {
        String docSrcId = null;
        String docSrcIdDisp = null;
        try {
            if (getDocIdSrc() != null) {
                docSrcId = getDocIdSrc();
            }
        } catch (NullPointerException npe) {

        }
        adflog.info("docId src " + docSrcId);
        if (docSrcId != null && getIssuDocType() != null) {
            MaterialIsseAMImpl am = (MaterialIsseAMImpl) this.getApplicationModule();
            if (getIssuDocType() == 326) {
                Row[] rrMrs = am.getLovDispMrsDocNo1().getFilteredRows("MrsTxnId", docSrcId);
                if (rrMrs.length > 0) {
                    docSrcIdDisp = rrMrs[0].getAttribute("MrsNo").toString();
                }
            } else if (getIssuDocType() == 330 || getIssuDocType() == 366) {
                Row[] rrTr = am.getTransferOrderDisp1().getFilteredRows("DocId", docSrcId);
                if (rrTr.length > 0) {
                    docSrcIdDisp = rrTr[0].getAttribute("TrfNo").toString();
                }
            } else if (getIssuDocType() == 329) {
                Row[] rrSo = am.getLovSlsSoNo().getFilteredRows("DocId", docSrcId);
                if (rrSo.length > 0) {
                    docSrcIdDisp = rrSo[0].getAttribute("SoId").toString();
                }
            } else if (getIssuDocType() == 432) {
                Row[] rrShip = am.getLovSlsShipmntNo().getFilteredRows("DocId", docSrcId);
                if (rrShip.length > 0) {
                    docSrcIdDisp = rrShip[0].getAttribute("ShipmntId").toString();
                }
            } else if (getIssuDocType() == 543) {
                Row[] rrKit = am.getLovKitProd().getFilteredRows("DocId", docSrcId);
                if (rrKit.length > 0) {
                    docSrcIdDisp = rrKit[0].getAttribute("KitProdNo").toString();
                }
            } else if (getIssuDocType() == 776) {
                Row[] rrswap = am.getLovStkSwap().getFilteredRows("DocId", docSrcId);
                if (rrswap.length > 0) {
                    docSrcIdDisp = rrswap[0].getAttribute("SwapId").toString();
                }
            } else if (getIssuDocType() == 800) {
                //bindCldId
                ViewObjectImpl scvo = am.getLovScNo();
                scvo.setNamedWhereClauseParam("bindCldId", getCldId());
                scvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                scvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                scvo.setNamedWhereClauseParam("bindEoId", null);
                scvo.executeQuery();
                Row[] rrswap = scvo.getFilteredRows("DocId", docSrcId);
                if (rrswap.length > 0) {
                    docSrcIdDisp = rrswap[0].getAttribute("ScNo").toString();
                }
            } else if (getIssuDocType() == 837) {
                Row[] rrMrs = am.getLovMrsExtrnl().getFilteredRows("MrsTxnId", docSrcId);
                if (rrMrs.length > 0) {
                    docSrcIdDisp = rrMrs[0].getAttribute("MrsNo").toString();
                }
            } else if (getIssuDocType() == 327) {
                ViewObjectImpl cIssueVO1 = am.getLOVSCIssueVO1();
                cIssueVO1.setNamedWhereClauseParam("CldIdBind", getCldId());
                cIssueVO1.setNamedWhereClauseParam("DocIdBind", docSrcId);
                cIssueVO1.setNamedWhereClauseParam("OrgIdBind", getOrgId());
                cIssueVO1.setNamedWhereClauseParam("SlocIdBind", getSlocId());
                cIssueVO1.executeQuery();
                Row[] allRowsInRange = cIssueVO1.getAllRowsInRange();
                if (allRowsInRange.length > 0) {
                    docSrcIdDisp = allRowsInRange[0].getAttribute("IssuNo").toString();
                }
            }
        }
        if (docSrcIdDisp != null) {
            return docSrcIdDisp;
        } else {
            return (String) getAttributeInternal(DOCIDSRCDISP);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdSrcDisp.
     * @param value value to set the  DocIdSrcDisp
     */
    public void setDocIdSrcDisp(String value) {
        setAttributeInternal(DOCIDSRCDISP, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlIssuItm.
     */
    public RowIterator getMmMtlIssuItm() {
        return (RowIterator) getAttributeInternal(MMMTLISSUITM);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
