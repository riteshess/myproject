package mmreceiptmtl.model.entities;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 28 15:05:35 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlRcptSrcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        WhId {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        DocTypeSrc {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocTypeSrc();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocTypeSrc((Integer) value);
            }
        }
        ,
        DocId {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp) value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer) value);
            }
        }
        ,
        DocIdSrcDisp {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocIdSrcDisp();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocIdSrcDisp((String) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String) value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDiscAmtSp((Number) value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDiscAmtBs((Number) value);
            }
        }
        ,
        PoAmtSp {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getPoAmtSp();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setPoAmtSp((Number) value);
            }
        }
        ,
        PoAmtBs {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getPoAmtBs();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setPoAmtBs((Number) value);
            }
        }
        ,
        DocIdIssu {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getDocIdIssu();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setDocIdIssu((String) value);
            }
        }
        ,
        MmMtlRcptItm {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getMmMtlRcptItm();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlRcpt {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getMmMtlRcpt();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setMmMtlRcpt((MmMtlRcptEOImpl) value);
            }
        }
        ,
        MmMtlRcptItmBc {
            public Object get(MmMtlRcptSrcEOImpl obj) {
                return obj.getMmMtlRcptItmBc();
            }

            public void put(MmMtlRcptSrcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlRcptSrcEOImpl object);

        public abstract void put(MmMtlRcptSrcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int DOCIDSRCDISP = AttributesEnum.DocIdSrcDisp.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int POAMTSP = AttributesEnum.PoAmtSp.index();
    public static final int POAMTBS = AttributesEnum.PoAmtBs.index();
    public static final int DOCIDISSU = AttributesEnum.DocIdIssu.index();
    public static final int MMMTLRCPTITM = AttributesEnum.MmMtlRcptItm.index();
    public static final int MMMTLRCPT = AttributesEnum.MmMtlRcpt.index();
    public static final int MMMTLRCPTITMBC = AttributesEnum.MmMtlRcptItmBc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlRcptSrcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmreceiptmtl.model.entities.MmMtlRcptSrcEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocTypeSrc, using the alias name DocTypeSrc.
     * @return the value of DocTypeSrc
     */
    public Integer getDocTypeSrc() {
        return (Integer)getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypeSrc.
     * @param value value to set the DocTypeSrc
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String)getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DocDtSrc, using the alias name DocDtSrc.
     * @return the value of DocDtSrc
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp)getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDtSrc.
     * @param value value to set the DocDtSrc
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer)getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for DocIdSrcDisp, using the alias name DocIdSrcDisp.
     * @return the value of DocIdSrcDisp
     */
    public String getDocIdSrcDisp() {
        return (String)getAttributeInternal(DOCIDSRCDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrcDisp.
     * @param value value to set the DocIdSrcDisp
     */
    public void setDocIdSrcDisp(String value) {
        setAttributeInternal(DOCIDSRCDISP, value);
    }

    /**
     * Gets the attribute value for TaxRuleFlg, using the alias name TaxRuleFlg.
     * @return the value of TaxRuleFlg
     */
    public String getTaxRuleFlg() {
        return (String)getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleFlg.
     * @param value value to set the TaxRuleFlg
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for TaxAfterDiscFlg, using the alias name TaxAfterDiscFlg.
     * @return the value of TaxAfterDiscFlg
     */
    public String getTaxAfterDiscFlg() {
        return (String)getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAfterDiscFlg.
     * @param value value to set the TaxAfterDiscFlg
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for DiscAmtSp, using the alias name DiscAmtSp.
     * @return the value of DiscAmtSp
     */
    public oracle.jbo.domain.Number getDiscAmtSp() {
        return (oracle.jbo.domain.Number)getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtSp.
     * @param value value to set the DiscAmtSp
     */
    public void setDiscAmtSp(oracle.jbo.domain.Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number)getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for PoAmtSp, using the alias name PoAmtSp.
     * @return the value of PoAmtSp
     */
    public Number getPoAmtSp() {
        return (Number)getAttributeInternal(POAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoAmtSp.
     * @param value value to set the PoAmtSp
     */
    public void setPoAmtSp(Number value) {
        setAttributeInternal(POAMTSP, value);
    }

    /**
     * Gets the attribute value for PoAmtBs, using the alias name PoAmtBs.
     * @return the value of PoAmtBs
     */
    public Number getPoAmtBs() {
        return (Number)getAttributeInternal(POAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoAmtBs.
     * @param value value to set the PoAmtBs
     */
    public void setPoAmtBs(Number value) {
        setAttributeInternal(POAMTBS, value);
    }

    /**
     * Gets the attribute value for DocIdIssu, using the alias name DocIdIssu.
     * @return the value of DocIdIssu
     */
    public String getDocIdIssu() {
        return (String) getAttributeInternal(DOCIDISSU);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdIssu.
     * @param value value to set the DocIdIssu
     */
    public void setDocIdIssu(String value) {
        setAttributeInternal(DOCIDISSU, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmMtlRcptItm() {
        return (RowIterator)getAttributeInternal(MMMTLRCPTITM);
    }

    /**
     * @return the associated entity MmMtlRcptEOImpl.
     */
    public MmMtlRcptEOImpl getMmMtlRcpt() {
        return (MmMtlRcptEOImpl)getAttributeInternal(MMMTLRCPT);
    }

    /**
     * Sets <code>value</code> as the associated entity MmMtlRcptEOImpl.
     */
    public void setMmMtlRcpt(MmMtlRcptEOImpl value) {
        setAttributeInternal(MMMTLRCPT, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmMtlRcptItmBc() {
        return (RowIterator) getAttributeInternal(MMMTLRCPTITMBC);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent
     * @param docIdSrc key constituent
     * @param dlvSchdlNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId,
                                       String docIdSrc, Integer dlvSchdlNo) {
        return new Key(new Object[] { cldId, slocId, orgId, whId, docId, docIdSrc, dlvSchdlNo });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
