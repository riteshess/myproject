package mmreceiptmtl.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmreceiptmtl.model.services.MMReceiptMtlAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 02 17:56:12 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMRmdaItmVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        RejQty {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getRejQty();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setRejQty((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        RejQtyBs {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getRejQtyBs();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setRejQtyBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        TransItmName {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getTransItmName();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setTransItmName((String)value);
            }
        }
        ,
        LovItmIdVO1 {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getLovItmIdVO1();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomVO1 {
            public Object get(MMRmdaItmVORowImpl obj) {
                return obj.getLovUomVO1();
            }

            public void put(MMRmdaItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMRmdaItmVORowImpl object);

        public abstract void put(MMRmdaItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int REJQTY = AttributesEnum.RejQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();
    public static final int LOVUOMVO1 = AttributesEnum.LovUomVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMRmdaItmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUom.
     * @param value value to set the  ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RejQty.
     * @return the RejQty
     */
    public Number getRejQty() {
        return (Number) getAttributeInternal(REJQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RejQty.
     * @param value value to set the  RejQty
     */
    public void setRejQty(Number value) {
        setAttributeInternal(REJQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomBs.
     * @param value value to set the  ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomConvFctr.
     * @return the UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomConvFctr.
     * @param value value to set the  UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RejQtyBs.
     * @return the RejQtyBs
     */
    public Number getRejQtyBs() {
        return (Number) getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RejQtyBs.
     * @param value value to set the  RejQtyBs
     */
    public void setRejQtyBs(Number value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSp.
     * @return the ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtSp.
     * @param value value to set the  ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtBs.
     * @param value value to set the  ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
              
              String inputitm=null;
              String itmDesc=null;
              try{
                  inputitm=getItmId();
                 //x.getAttribute("TvouCoaId");
                 }catch(NullPointerException npe){
                    
              }
              if(inputitm!=null){
                  am.getLovItmForDisp().setNamedWhereClauseParam("slocIdBind", getSlocId());
                  am.getLovItmForDisp().setNamedWhereClauseParam("cldIdBind", getCldId());
                  am.getLovItmForDisp().setNamedWhereClauseParam("orgIdBind", getOrgId());
                  am.getLovItmForDisp().setNamedWhereClauseParam("hoOrgIdBind",resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}") );
                  am.getLovItmForDisp().setNamedWhereClauseParam("itmIdBind",inputitm);
                  am.getLovItmForDisp().setNamedWhereClauseParam("itmNameBind",null);
                  am.getLovItmForDisp().executeQuery();
                 Row[] xx=am.getLovItmForDisp().getFilteredRows("ItmId", inputitm);
              // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
                 if(xx.length>0){
                       itmDesc= xx[0].getAttribute("ItmDesc").toString();
                 }
                 return itmDesc;
              
              }else{
        
                  return (String) getAttributeInternal(TRANSITMNAME);
              }
    }
    
    
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet)getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomVO1.
     */
    public RowSet getLovUomVO1() {
        return (RowSet)getAttributeInternal(LOVUOMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
