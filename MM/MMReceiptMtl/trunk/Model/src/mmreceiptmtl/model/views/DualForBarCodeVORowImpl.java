package mmreceiptmtl.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmreceiptmtl.model.services.MMReceiptMtlAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 16 15:08:36 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualForBarCodeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setDummy((String) value);
            }
        },
        TransCldId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransCldId((String) value);
            }
        },
        TransSlocId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransSlocId((Integer) value);
            }
        },
        TransHoOrgId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        },
        TransOrgId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransOrgId((String) value);
            }
        },
        TransItmId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmId((String) value);
            }
        },
        TransItmNm {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmNm();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmNm((String) value);
            }
        },
        TransSrNo {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransSrNo();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransSrNo((String) value);
            }
        },
        TransDelvQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransDelvQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransDelvQty((Number) value);
            }
        },
        TransRejectedQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRejectedQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRejectedQty((Number) value);
            }
        },
        TransRwrkQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRwrkQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRwrkQty((Number) value);
            }
        },
        TransRcptQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRcptQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRcptQty((Number) value);
            }
        },
        TransItmUom {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmUom();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmUom((String) value);
            }
        },
        TransUomConvFctr {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransUomConvFctr();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransUomConvFctr((Number) value);
            }
        },
        TransDelvQtyBs {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransDelvQtyBs();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransDelvQtyBs((Number) value);
            }
        },
        TransRejectedQtyBs {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRejectedQtyBs();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRejectedQtyBs((Number) value);
            }
        },
        TransRwrkQtyBs {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRwrkQtyBs();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRwrkQtyBs((Number) value);
            }
        },
        TransRcptQtyBs {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRcptQtyBs();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRcptQtyBs((Number) value);
            }
        },
        TransSrlizeItmChk {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransSrlizeItmChk();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransSrlizeItmChk((String) value);
            }
        },
        TransItmUomBs {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmUomBs();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmUomBs((String) value);
            }
        },
        TransChkItemInBc {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransChkItemInBc();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransChkItemInBc((String) value);
            }
        },
        TransRcptDocId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRcptDocId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRcptDocId((String) value);
            }
        },
        TransPoDocId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransPoDocId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransPoDocId((String) value);
            }
        },
        TransDelvSchdl {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransDelvSchdl();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransItmUomBar {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmUomBar();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmUomBar((String) value);
            }
        },
        LovItemForBarCodeVO1 {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getLovItemForBarCodeVO1();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovUomIdVO1 {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getLovUomIdVO1();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovNewUomIdVO1 {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getLovNewUomIdVO1();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DualForBarCodeVORowImpl object);

        public abstract void put(DualForBarCodeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSITMID = AttributesEnum.TransItmId.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSSRNO = AttributesEnum.TransSrNo.index();
    public static final int TRANSDELVQTY = AttributesEnum.TransDelvQty.index();
    public static final int TRANSREJECTEDQTY = AttributesEnum.TransRejectedQty.index();
    public static final int TRANSRWRKQTY = AttributesEnum.TransRwrkQty.index();
    public static final int TRANSRCPTQTY = AttributesEnum.TransRcptQty.index();
    public static final int TRANSITMUOM = AttributesEnum.TransItmUom.index();
    public static final int TRANSUOMCONVFCTR = AttributesEnum.TransUomConvFctr.index();
    public static final int TRANSDELVQTYBS = AttributesEnum.TransDelvQtyBs.index();
    public static final int TRANSREJECTEDQTYBS = AttributesEnum.TransRejectedQtyBs.index();
    public static final int TRANSRWRKQTYBS = AttributesEnum.TransRwrkQtyBs.index();
    public static final int TRANSRCPTQTYBS = AttributesEnum.TransRcptQtyBs.index();
    public static final int TRANSSRLIZEITMCHK = AttributesEnum.TransSrlizeItmChk.index();
    public static final int TRANSITMUOMBS = AttributesEnum.TransItmUomBs.index();
    public static final int TRANSCHKITEMINBC = AttributesEnum.TransChkItemInBc.index();
    public static final int TRANSRCPTDOCID = AttributesEnum.TransRcptDocId.index();
    public static final int TRANSPODOCID = AttributesEnum.TransPoDocId.index();
    public static final int TRANSDELVSCHDL = AttributesEnum.TransDelvSchdl.index();
    public static final int TRANSITMUOMBAR = AttributesEnum.TransItmUomBar.index();
    public static final int LOVITEMFORBARCODEVO1 = AttributesEnum.LovItemForBarCodeVO1.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVNEWUOMIDVO1 = AttributesEnum.LovNewUomIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualForBarCodeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        //return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        //return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmId.
     * @return the TransItmId
     */
    public String getTransItmId() {
        return (String) getAttributeInternal(TRANSITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmId.
     * @param value value to set the  TransItmId
     */
    public void setTransItmId(String value) {
        setAttributeInternal(TRANSITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrNo.
     * @return the TransSrNo
     */
    public String getTransSrNo() {
        return (String) getAttributeInternal(TRANSSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrNo.
     * @param value value to set the  TransSrNo
     */
    public void setTransSrNo(String value) {
        setAttributeInternal(TRANSSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvQty.
     * @return the TransDelvQty
     */
    public Number getTransDelvQty() {
        return (Number) getAttributeInternal(TRANSDELVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvQty.
     * @param value value to set the  TransDelvQty
     */
    public void setTransDelvQty(Number value) {
        if (value != null && getTransUomConvFctr() != null) {
            value = value.multiply(getTransUomConvFctr());
            setTransDelvQtyBs(value);
        }
        setAttributeInternal(TRANSDELVQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRejectedQty.
     * @return the TransRejectedQty
     */
    public Number getTransRejectedQty() {
        return (Number) getAttributeInternal(TRANSREJECTEDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRejectedQty.
     * @param value value to set the  TransRejectedQty
     */
    public void setTransRejectedQty(Number value) {
        if (value != null && getTransUomConvFctr() != null) {
            value = value.multiply(getTransUomConvFctr());
            setTransRejectedQtyBs(value);
        }
        setAttributeInternal(TRANSREJECTEDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRwrkQty.
     * @return the TransRwrkQty
     */
    public Number getTransRwrkQty() {
        return (Number) getAttributeInternal(TRANSRWRKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRwrkQty.
     * @param value value to set the  TransRwrkQty
     */
    public void setTransRwrkQty(Number value) {
        if (value != null && getTransUomConvFctr() != null) {
            value = value.multiply(getTransUomConvFctr());
            setTransRwrkQtyBs(value);
        }
        setAttributeInternal(TRANSRWRKQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptQty.
     * @return the TransRcptQty
     */
    public Number getTransRcptQty() {
        return (Number) getAttributeInternal(TRANSRCPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptQty.
     * @param value value to set the  TransRcptQty
     */
    public void setTransRcptQty(Number value) {
        if (value != null && getTransUomConvFctr() != null) {
            value = value.multiply(getTransUomConvFctr());
            setTransRcptQtyBs(value);
        }
        setAttributeInternal(TRANSRCPTQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUom.
     * @return the TransItmUom
     */
    public String getTransItmUom() {
        /* if (getTransItmId() != null) {
            MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
            ViewObjectImpl uomVO = am.getLovUomIdVO1();
            Row[] filteredRows = am.getMmMtlRcptItm().getFilteredRows("ItmId", getTransItmId());
            while (filteredRows.length > 0) {
                for (Row r : filteredRows) {
                    Object itmUomId = r.getAttribute("ItmUom");
                    Row[] fRow = uomVO.getFilteredRows("UomId", itmUomId);
                    return fRow[0].getAttribute("UomNm").toString();
                }
            }
        }*/
        return (String) getAttributeInternal(TRANSITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUom.
     * @param value value to set the  TransItmUom
     */
    public void setTransItmUom(String value) {
        setAttributeInternal(TRANSITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomConvFctr.
     * @return the TransUomConvFctr
     */
    public Number getTransUomConvFctr() {
        /*if (getTransItmUom() != null && getTransItmUomBs() != null) {
            if (getTransItmUom() != getTransItmUomBs()) {
                MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
                am.getConvFctorForBarCodeVO1().setNamedWhereClauseParam("bindCldId", getTransCldId());
                am.getConvFctorForBarCodeVO1().setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
                am.getConvFctorForBarCodeVO1().setNamedWhereClauseParam("bindItmId", getTransItmId());
                am.getConvFctorForBarCodeVO1().setNamedWhereClauseParam("bindOrgId", getTransOrgId());
                am.getConvFctorForBarCodeVO1().setNamedWhereClauseParam("bindSlocId", getTransSlocId());

                am.getConvFctorForBarCodeVO1().executeQuery();
                RowQualifier rq = new RowQualifier(am.getConvFctorForBarCodeVO1());
                rq.setWhereClause("UomIdSrc='" + getTransItmUom() + " and UomIdDest='" + getTransItmUomBs() + "'");
                Row[] filteredRows = am.getConvFctorForBarCodeVO1().getFilteredRows(rq);
                if (filteredRows.length > 0) {
                    return (Number) filteredRows[0].getAttribute("ConvFctr");
                }
            } else
                return new Number(1);
        }*/
        return (Number) getAttributeInternal(TRANSUOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomConvFctr.
     * @param value value to set the  TransUomConvFctr
     */
    public void setTransUomConvFctr(Number value) {
        setAttributeInternal(TRANSUOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvQtyBs.
     * @return the TransDelvQtyBs
     */
    public Number getTransDelvQtyBs() {

        return (Number) getAttributeInternal(TRANSDELVQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvQtyBs.
     * @param value value to set the  TransDelvQtyBs
     */
    public void setTransDelvQtyBs(Number value) {
        setAttributeInternal(TRANSDELVQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRejectedQtyBs.
     * @return the TransRejectedQtyBs
     */
    public Number getTransRejectedQtyBs() {
        return (Number) getAttributeInternal(TRANSREJECTEDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRejectedQtyBs.
     * @param value value to set the  TransRejectedQtyBs
     */
    public void setTransRejectedQtyBs(Number value) {
        setAttributeInternal(TRANSREJECTEDQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRwrkQtyBs.
     * @return the TransRwrkQtyBs
     */
    public Number getTransRwrkQtyBs() {
        return (Number) getAttributeInternal(TRANSRWRKQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRwrkQtyBs.
     * @param value value to set the  TransRwrkQtyBs
     */
    public void setTransRwrkQtyBs(Number value) {
        setAttributeInternal(TRANSRWRKQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptQtyBs.
     * @return the TransRcptQtyBs
     */
    public Number getTransRcptQtyBs() {
        return (Number) getAttributeInternal(TRANSRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptQtyBs.
     * @param value value to set the  TransRcptQtyBs
     */
    public void setTransRcptQtyBs(Number value) {
        setAttributeInternal(TRANSRCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrlizeItmChk.
     * @return the TransSrlizeItmChk
     */
    public String getTransSrlizeItmChk() {
        return (String) getAttributeInternal(TRANSSRLIZEITMCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrlizeItmChk.
     * @param value value to set the  TransSrlizeItmChk
     */
    public void setTransSrlizeItmChk(String value) {
        setAttributeInternal(TRANSSRLIZEITMCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomBs.
     * @return the TransItmUomBs
     */
    public String getTransItmUomBs() {

        return (String) getAttributeInternal(TRANSITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomBs.
     * @param value value to set the  TransItmUomBs
     */
    public void setTransItmUomBs(String value) {
        setAttributeInternal(TRANSITMUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkItemInBc.
     * @return the TransChkItemInBc
     */
    public String getTransChkItemInBc() {
        if (getTransItmId() != null) {
            MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getMmMtlRcptItmBcVO1().getFilteredRows("ItmId", getTransItmId());
            if (filteredRows.length > 0) {
                return "Y";
            } else
                return "N";
        }
        return (String) getAttributeInternal(TRANSCHKITEMINBC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkItemInBc.
     * @param value value to set the  TransChkItemInBc
     */
    public void setTransChkItemInBc(String value) {
        setAttributeInternal(TRANSCHKITEMINBC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptDocId.
     * @return the TransRcptDocId
     */
    public String getTransRcptDocId() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
        System.out.println("RcptDocid Is--->" + am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DocId").toString());
        return am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DocId").toString();
        //return (String) getAttributeInternal(TRANSRCPTDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptDocId.
     * @param value value to set the  TransRcptDocId
     */
    public void setTransRcptDocId(String value) {
        setAttributeInternal(TRANSRCPTDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoDocId.
     * @return the TransPoDocId
     */
    public String getTransPoDocId() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
        System.out.println("poDocId is---" + am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DocIdSrc").toString());
        return am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DocIdSrc").toString();
        //return (String) getAttributeInternal(TRANSPODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoDocId.
     * @param value value to set the  TransPoDocId
     */
    public void setTransPoDocId(String value) {
        setAttributeInternal(TRANSPODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvSchdl.
     * @return the TransDelvSchdl
     */
    public Integer getTransDelvSchdl() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl) this.getApplicationModule();
        System.out.println("delvSchdl---" +
                           Integer.parseInt(am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DlvSchdlNo").toString()));
        return Integer.parseInt(am.getMmMtlRcptSrc().getCurrentRow().getAttribute("DlvSchdlNo").toString());
        //return (Integer) getAttributeInternal(TRANSDELVSCHDL);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomBar.
     * @return the TransItmUomBar
     */
    public String getTransItmUomBar() {
        return (String) getAttributeInternal(TRANSITMUOMBAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomBar.
     * @param value value to set the  TransItmUomBar
     */
    public void setTransItmUomBar(String value) {
        setAttributeInternal(TRANSITMUOMBAR, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItemForBarCodeVO1.
     */
    public RowSet getLovItemForBarCodeVO1() {
        return (RowSet) getAttributeInternal(LOVITEMFORBARCODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovNewUomIdVO1.
     */
    public RowSet getLovNewUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVNEWUOMIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

