package mmidfapp.model.views;

import oracle.jbo.domain.BFileDomain;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 29 15:52:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmIpoIdfAttchVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMIPOIDFATTCHEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AttchFl {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getAttchFl();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setAttchFl((BFileDomain) value);
            }
        }
        ,
        CldId {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DispFlNm {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getDispFlNm();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setDispFlNm((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        FlExtn {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getFlExtn();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setFlExtn((String) value);
            }
        }
        ,
        FlNm {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getFlNm();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setFlNm((String) value);
            }
        }
        ,
        FlPath {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getFlPath();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setFlPath((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        Remarks {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        TransKey {
            public Object get(MmIpoIdfAttchVORowImpl obj) {
                return obj.getTransKey();
            }

            public void put(MmIpoIdfAttchVORowImpl obj, Object value) {
                obj.setTransKey((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MmIpoIdfAttchVORowImpl object);

        public abstract void put(MmIpoIdfAttchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ATTCHFL = AttributesEnum.AttchFl.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DISPFLNM = AttributesEnum.DispFlNm.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FLEXTN = AttributesEnum.FlExtn.index();
    public static final int FLNM = AttributesEnum.FlNm.index();
    public static final int FLPATH = AttributesEnum.FlPath.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRANSKEY = AttributesEnum.TransKey.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmIpoIdfAttchVORowImpl() {
    }

    /**
     * Gets MmIpoIdfAttchEO entity object.
     * @return the MmIpoIdfAttchEO
     */
    public EntityImpl getMmIpoIdfAttchEO() {
        return (EntityImpl) getEntity(ENTITY_MMIPOIDFATTCHEO);
    }

    /**
     * Gets the attribute value for ATTCH_FL using the alias name AttchFl.
     * @return the ATTCH_FL
     */
    public BFileDomain getAttchFl() {
        return (BFileDomain) getAttributeInternal(ATTCHFL);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTCH_FL using the alias name AttchFl.
     * @param value value to set the ATTCH_FL
     */
    public void setAttchFl(BFileDomain value) {
        setAttributeInternal(ATTCHFL, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DISP_FL_NM using the alias name DispFlNm.
     * @return the DISP_FL_NM
     */
    public String getDispFlNm() {
        return (String) getAttributeInternal(DISPFLNM);
    }

    /**
     * Sets <code>value</code> as attribute value for DISP_FL_NM using the alias name DispFlNm.
     * @param value value to set the DISP_FL_NM
     */
    public void setDispFlNm(String value) {
        setAttributeInternal(DISPFLNM, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FL_EXTN using the alias name FlExtn.
     * @return the FL_EXTN
     */
    public String getFlExtn() {
        return (String) getAttributeInternal(FLEXTN);
    }

    /**
     * Sets <code>value</code> as attribute value for FL_EXTN using the alias name FlExtn.
     * @param value value to set the FL_EXTN
     */
    public void setFlExtn(String value) {
        setAttributeInternal(FLEXTN, value);
    }

    /**
     * Gets the attribute value for FL_NM using the alias name FlNm.
     * @return the FL_NM
     */
    public String getFlNm() {
        return (String) getAttributeInternal(FLNM);
    }

    /**
     * Sets <code>value</code> as attribute value for FL_NM using the alias name FlNm.
     * @param value value to set the FL_NM
     */
    public void setFlNm(String value) {
        setAttributeInternal(FLNM, value);
    }

    /**
     * Gets the attribute value for FL_PATH using the alias name FlPath.
     * @return the FL_PATH
     */
    public String getFlPath() {
        return (String) getAttributeInternal(FLPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for FL_PATH using the alias name FlPath.
     * @param value value to set the FL_PATH
     */
    public void setFlPath(String value) {
        setAttributeInternal(FLPATH, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransKey.
     * @return the TransKey
     */
    public String getTransKey() {
        System.out.println("Value of Key"+this.getKey().toString());
        return this.getKey().toString();
        //return (String) getAttributeInternal(TRANSKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransKey.
     * @param value value to set the  TransKey
     */
    public void setTransKey(String value) {
        setAttributeInternal(TRANSKEY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

