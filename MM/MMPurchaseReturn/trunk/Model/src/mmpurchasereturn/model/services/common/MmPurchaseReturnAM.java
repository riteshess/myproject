package mmpurchasereturn.model.services.common;

import java.util.ArrayList;

import java.util.HashSet;

import oracle.jbo.ApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 12 16:32:48 IST 2013
// ---------------------------------------------------------------------
public interface MmPurchaseReturnAM extends ApplicationModule {
    void AddItmToPurRetItm();

    void AddMrnNoToSrc();

    void ResetTrans();

    String ChkDuplicateMrn();

    Integer getUsrLvl(Integer SlocId, String CldId, String OrgId, Integer UsrId, String WfNo, String DocNo);

    String getWfNo(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    Integer insIntoTxn(Integer SlocId, String CldId, String OrgId, Integer DocNo, String WfNo, Integer usr_idFrm,
                       Integer usr_idTo, Integer levelTo, Integer levelFrm, String action, String remark,
                       oracle.jbo.domain.Number amount);

    Integer pendingCheck(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    void updateAuthstat(String retValue);

    void generatePRNo();

    String GenerateFyId();

    void setsearchValues();

    void ResetSearch();

    void SearchPurchaseReturn();

    void PurRetnViewQuery();

    void executeVO();

    String MrnValid();

    String getUserName(Integer usrId);

    void addPurRtnItm();

    String checkDupItem();

    void generateTempDocId();

    void executeLotBinSuppVO();

    void executeLotSrSuppVO();

    void executeLotSuppVO();

    void populateItemFromLot();


    void populateFromLotBin();

    void populateFromLotBinSr();

    HashSet validateLotBinQty();

    Integer checkStockQtyBfrSaved();

    HashSet validateLotQty();

    void setLotSuppValue();

    void deleteAftrUpdateLot();

    void deleteStktableRow();

    void setLotBinSuppValue();

    void setLotSRSuppValue();

    String ccFinalizedCheck();

    Boolean chkCcApplicableOrNot();

    void declareGlblValuesForCC();

    void deleteCostCenterItem();

    void generateCostCenterHeaderWise();

    void sendDataFromTempCcToPRCc();

    void updateCostCenterAmt();
}
