package mmdashboardapp.model.views;

import java.sql.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 07 18:32:01 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WfViewBoeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocDt {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocType {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDocType();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocTypeNm {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDocTypeNm();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BoeNo {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getBoeNo();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FyId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocTypeSrc {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDocTypeSrc();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AuthPoNo {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getAuthPoNo();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FileNo {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getFileNo();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EoId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EoNm {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getEoNm();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrId {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getUsrId();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OpType {
            public Object get(WfViewBoeVORowImpl obj) {
                return obj.getOpType();
            }

            public void put(WfViewBoeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(WfViewBoeVORowImpl object);

        public abstract void put(WfViewBoeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DOCTYPE = AttributesEnum.DocType.index();
    public static final int DOCTYPENM = AttributesEnum.DocTypeNm.index();
    public static final int BOENO = AttributesEnum.BoeNo.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int AUTHPONO = AttributesEnum.AuthPoNo.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int FILENO = AttributesEnum.FileNo.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int OPTYPE = AttributesEnum.OpType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WfViewBoeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute DocType.
     * @return the DocType
     */
    public Integer getDocType() {
        return (Integer) getAttributeInternal(DOCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeNm.
     * @return the DocTypeNm
     */
    public String getDocTypeNm() {
        return (String) getAttributeInternal(DOCTYPENM);
    }

    /**
     * Gets the attribute value for the calculated attribute BoeNo.
     * @return the BoeNo
     */
    public String getBoeNo() {
        return (String) getAttributeInternal(BOENO);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public String getFyId() {
        return (String) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeSrc.
     * @return the DocTypeSrc
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthPoNo.
     * @return the AuthPoNo
     */
    public Integer getAuthPoNo() {
        return (Integer) getAttributeInternal(AUTHPONO);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvSchdlNo.
     * @return the DlvSchdlNo
     */
    public String getDlvSchdlNo() {
        return (String) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Gets the attribute value for the calculated attribute FileNo.
     * @return the FileNo
     */
    public Integer getFileNo() {
        return (Integer) getAttributeInternal(FILENO);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public String getEoId() {
        return (String) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public Integer getEoNm() {
        return (Integer) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrId.
     * @return the UsrId
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpType.
     * @return the OpType
     */
    public String getOpType() {
        return (String) getAttributeInternal(OPTYPE);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

