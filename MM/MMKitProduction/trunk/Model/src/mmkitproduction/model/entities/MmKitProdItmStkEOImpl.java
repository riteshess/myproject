package mmkitproduction.model.entities;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 19 19:17:34 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmKitProdItmStkEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        OpItmId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getOpItmId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setOpItmId((String)value);
            }
        }
        ,
        OpSrNo {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getOpSrNo();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setOpSrNo((String)value);
            }
        }
        ,
        IpItmId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getIpItmId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setIpItmId((String)value);
            }
        }
        ,
        IpItmUom {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getIpItmUom();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setIpItmUom((String)value);
            }
        }
        ,
        LotId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getLotId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        BinId {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getBinId();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setBinId((String)value);
            }
        }
        ,
        SrNo {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        StkActn {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getStkActn();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setStkActn((String)value);
            }
        }
        ,
        TotQty {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getTotQty();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setTotQty((Number)value);
            }
        }
        ,
        OkQty {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getOkQty();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setOkQty((Number)value);
            }
        }
        ,
        RwkQty {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getRwkQty();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setRwkQty((Number)value);
            }
        }
        ,
        ScrpQty {
            public Object get(MmKitProdItmStkEOImpl obj) {
                return obj.getScrpQty();
            }

            public void put(MmKitProdItmStkEOImpl obj, Object value) {
                obj.setScrpQty((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmKitProdItmStkEOImpl object);

        public abstract void put(MmKitProdItmStkEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPITMID = AttributesEnum.OpItmId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int IPITMID = AttributesEnum.IpItmId.index();
    public static final int IPITMUOM = AttributesEnum.IpItmUom.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int BINID = AttributesEnum.BinId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int STKACTN = AttributesEnum.StkActn.index();
    public static final int TOTQTY = AttributesEnum.TotQty.index();
    public static final int OKQTY = AttributesEnum.OkQty.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int SCRPQTY = AttributesEnum.ScrpQty.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmKitProdItmStkEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmkitproduction.model.entities.MmKitProdItmStkEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for OpItmId, using the alias name OpItmId.
     * @return the value of OpItmId
     */
    public String getOpItmId() {
        return (String)getAttributeInternal(OPITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpItmId.
     * @param value value to set the OpItmId
     */
    public void setOpItmId(String value) {
        setAttributeInternal(OPITMID, value);
    }

    /**
     * Gets the attribute value for OpSrNo, using the alias name OpSrNo.
     * @return the value of OpSrNo
     */
    public String getOpSrNo() {
        return (String)getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpSrNo.
     * @param value value to set the OpSrNo
     */
    public void setOpSrNo(String value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for IpItmId, using the alias name IpItmId.
     * @return the value of IpItmId
     */
    public String getIpItmId() {
        return (String)getAttributeInternal(IPITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IpItmId.
     * @param value value to set the IpItmId
     */
    public void setIpItmId(String value) {
        setAttributeInternal(IPITMID, value);
    }

    /**
     * Gets the attribute value for IpItmUom, using the alias name IpItmUom.
     * @return the value of IpItmUom
     */
    public String getIpItmUom() {
        return (String)getAttributeInternal(IPITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for IpItmUom.
     * @param value value to set the IpItmUom
     */
    public void setIpItmUom(String value) {
        setAttributeInternal(IPITMUOM, value);
    }

    /**
     * Gets the attribute value for LotId, using the alias name LotId.
     * @return the value of LotId
     */
    public String getLotId() {
        return (String)getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotId.
     * @param value value to set the LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for BinId, using the alias name BinId.
     * @return the value of BinId
     */
    public String getBinId() {
        return (String)getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BinId.
     * @param value value to set the BinId
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for SrNo, using the alias name SrNo.
     * @return the value of SrNo
     */
    public String getSrNo() {
        return (String)getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrNo.
     * @param value value to set the SrNo
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for StkActn, using the alias name StkActn.
     * @return the value of StkActn
     */
    public String getStkActn() {
        return (String)getAttributeInternal(STKACTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkActn.
     * @param value value to set the StkActn
     */
    public void setStkActn(String value) {
        setAttributeInternal(STKACTN, value);
    }

    /**
     * Gets the attribute value for TotQty, using the alias name TotQty.
     * @return the value of TotQty
     */
    public Number getTotQty() {
        return (Number)getAttributeInternal(TOTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotQty.
     * @param value value to set the TotQty
     */
    public void setTotQty(Number value) {
        setAttributeInternal(TOTQTY, value);
    }

    /**
     * Gets the attribute value for OkQty, using the alias name OkQty.
     * @return the value of OkQty
     */
    public Number getOkQty() {
        return (Number)getAttributeInternal(OKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OkQty.
     * @param value value to set the OkQty
     */
    public void setOkQty(Number value) {
        setAttributeInternal(OKQTY, value);
    }

    /**
     * Gets the attribute value for RwkQty, using the alias name RwkQty.
     * @return the value of RwkQty
     */
    public Number getRwkQty() {
        return (Number)getAttributeInternal(RWKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwkQty.
     * @param value value to set the RwkQty
     */
    public void setRwkQty(Number value) {
        setAttributeInternal(RWKQTY, value);
    }

    /**
     * Gets the attribute value for ScrpQty, using the alias name ScrpQty.
     * @return the value of ScrpQty
     */
    public Number getScrpQty() {
        return (Number)getAttributeInternal(SCRPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScrpQty.
     * @param value value to set the ScrpQty
     */
    public void setScrpQty(Number value) {
        setAttributeInternal(SCRPQTY, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent
     * @param opItmId key constituent
     * @param opSrNo key constituent
     * @param ipItmId key constituent
     * @param lotId key constituent
     * @param binId key constituent
     * @param srNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId,
                                       String opItmId, String opSrNo, String ipItmId, String lotId, String binId,
                                       String srNo) {
        return new Key(new Object[]{cldId, slocId, orgId, whId, docId, opItmId, opSrNo, ipItmId, lotId, binId, srNo});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        super.create(attributeList);
        //setSrNo("0");
    }
}
