package defineworkflowapp.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 29 17:05:38 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWfEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppWfEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        CldId {
            public Object get(AppWfEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        OrgId {
            public Object get(AppWfEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        WfId {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfId((String) value);
            }
        },
        WfNm {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfNm();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfNm((String) value);
            }
        },
        WfFmDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfFmDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfFmDt((Timestamp) value);
            }
        },
        WfToDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfToDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfToDt((Timestamp) value);
            }
        },
        WfMaxLvl {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfMaxLvl();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfMaxLvl((Integer) value);
            }
        },
        UsrIdCreate {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        AppWfLvlEO {
            public Object get(AppWfEOImpl obj) {
                return obj.getAppWfLvlEO();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppWfEOImpl object);

        public abstract void put(AppWfEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WFID = AttributesEnum.WfId.index();
    public static final int WFNM = AttributesEnum.WfNm.index();
    public static final int WFFMDT = AttributesEnum.WfFmDt.index();
    public static final int WFTODT = AttributesEnum.WfToDt.index();
    public static final int WFMAXLVL = AttributesEnum.WfMaxLvl.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APPWFLVLEO = AttributesEnum.AppWfLvlEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppWfEOImpl() {
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WfId, using the alias name WfId.
     * @return the value of WfId
     */
    public String getWfId() {
        return (String) getAttributeInternal(WFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfId.
     * @param value value to set the WfId
     */
    public void setWfId(String value) {
        setAttributeInternal(WFID, value);
    }

    /**
     * Gets the attribute value for WfNm, using the alias name WfNm.
     * @return the value of WfNm
     */
    public String getWfNm() {
        return (String) getAttributeInternal(WFNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfNm.
     * @param value value to set the WfNm
     */
    public void setWfNm(String value) {
        setAttributeInternal(WFNM, value);
    }

    /**
     * Gets the attribute value for WfFmDt, using the alias name WfFmDt.
     * @return the value of WfFmDt
     */
    public Timestamp getWfFmDt() {
        return (Timestamp) getAttributeInternal(WFFMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfFmDt.
     * @param value value to set the WfFmDt
     */
    public void setWfFmDt(Timestamp value) {
        setAttributeInternal(WFFMDT, value);
    }

    /**
     * Gets the attribute value for WfToDt, using the alias name WfToDt.
     * @return the value of WfToDt
     */
    public Timestamp getWfToDt() {
        return (Timestamp) getAttributeInternal(WFTODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfToDt.
     * @param value value to set the WfToDt
     */
    public void setWfToDt(Timestamp value) {
        setAttributeInternal(WFTODT, value);
    }

    /**
     * Gets the attribute value for WfMaxLvl, using the alias name WfMaxLvl.
     * @return the value of WfMaxLvl
     */
    public Integer getWfMaxLvl() {
        return (Integer) getAttributeInternal(WFMAXLVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfMaxLvl.
     * @param value value to set the WfMaxLvl
     */
    public void setWfMaxLvl(Integer value) {
        setAttributeInternal(WFMAXLVL, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppWfLvlEO() {
        return (RowIterator) getAttributeInternal(APPWFLVLEO);
    }

    /**
     * @param slocId key constituent
     * @param cldId key constituent
     * @param orgId key constituent
     * @param wfId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String cldId, String orgId, String wfId) {
        return new Key(new Object[] { slocId, cldId, orgId, wfId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("defineworkflowapp.model.entities.AppWfEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setWfFmDt(new Timestamp(System.currentTimeMillis()));
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
