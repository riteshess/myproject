package defineworkflowapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 29 19:27:21 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualAddDocumentVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        TransCldId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransCldId((String)value);
            }
        }
        ,
        TransSlocId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransSlocId((Integer)value);
            }
        }
        ,
        TransOrgId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransOrgId((String)value);
            }
        }
        ,
        TransDocId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransDocId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransDocId((Integer)value);
            }
        }
        ,
        TransDocNm {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransDocNm();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransDocNm((String)value);
            }
        }
        ,
        TransDocTypeId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransDocTypeId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransDocTypeId((Integer)value);
            }
        }
        ,
        TransDocTypeNm {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getTransDocTypeNm();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setTransDocTypeNm((String)value);
            }
        }
        ,
        LovDocType {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getLovDocType();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDocId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getLovDocId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrId {
            public Object get(DualAddDocumentVORowImpl obj) {
                return obj.getLovUsrId();
            }

            public void put(DualAddDocumentVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DualAddDocumentVORowImpl object);

        public abstract void put(DualAddDocumentVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSDOCID = AttributesEnum.TransDocId.index();
    public static final int TRANSDOCNM = AttributesEnum.TransDocNm.index();
    public static final int TRANSDOCTYPEID = AttributesEnum.TransDocTypeId.index();
    public static final int TRANSDOCTYPENM = AttributesEnum.TransDocTypeNm.index();
    public static final int LOVDOCTYPE = AttributesEnum.LovDocType.index();
    public static final int LOVDOCID = AttributesEnum.LovDocId.index();
    public static final int LOVUSRID = AttributesEnum.LovUsrId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualAddDocumentVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
       // return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
       // return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
      //  return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocId.
     * @return the TransDocId
     */
    public Integer getTransDocId() {
        return (Integer) getAttributeInternal(TRANSDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocId.
     * @param value value to set the  TransDocId
     */
    public void setTransDocId(Integer value) {
        setAttributeInternal(TRANSDOCID, value);
    }


    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    
    
    
    /**
     * Gets the attribute value for the calculated attribute TransDocNm.
     * @return the TransDocNm
     */
    public String getTransDocNm() {
        return (String) getAttributeInternal(TRANSDOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocNm.
     * @param value value to set the  TransDocNm
     */
    public void setTransDocNm(String value) {
        setAttributeInternal(TRANSDOCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocTypeId.
     * @return the TransDocTypeId
     */
    public Integer getTransDocTypeId() {
        if(getAttributeInternal(TRANSDOCTYPEID)!=null)
        return (Integer) getAttributeInternal(TRANSDOCTYPEID);
        else
            return new Integer(0);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocTypeId.
     * @param value value to set the  TransDocTypeId
     */
    public void setTransDocTypeId(Integer value) {
        if(value==null)
            value=new Integer(0);
        setAttributeInternal(TRANSDOCTYPEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocTypeNm.
     * @return the TransDocTypeNm
     */
    public String getTransDocTypeNm() {
        return (String) getAttributeInternal(TRANSDOCTYPENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocTypeNm.
     * @param value value to set the  TransDocTypeNm
     */
    public void setTransDocTypeNm(String value) {
        setAttributeInternal(TRANSDOCTYPENM, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovDocType.
     */
    public RowSet getLovDocType() {
        return (RowSet)getAttributeInternal(LOVDOCTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDocId.
     */
    public RowSet getLovDocId() {
        return (RowSet)getAttributeInternal(LOVDOCID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId.
     */
    public RowSet getLovUsrId() {
        return (RowSet)getAttributeInternal(LOVUSRID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
