package mminvoice.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mminvoice.model.entities.MmInvcPmtSchdlEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 31 13:14:49 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvcPmtSchdlVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMINVCPMTSCHDLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AdvFlg {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getAdvFlg();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setAdvFlg((String)value);
            }
        }
        ,
        CldId {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        PayAmtBs {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getPayAmtBs();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setPayAmtBs((Number)value);
            }
        }
        ,
        PayAmtSp {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getPayAmtSp();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setPayAmtSp((Number)value);
            }
        }
        ,
        PayDt {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getPayDt();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setPayDt((Timestamp)value);
            }
        }
        ,
        PayMode {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getPayMode();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setPayMode((Integer)value);
            }
        }
        ,
        SlocId {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        SrNo {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setSrNo((Integer)value);
            }
        }
        ,
        TotAmtBs {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setTotAmtBs((Number)value);
            }
        }
        ,
        TotAmtSp {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setTotAmtSp((Number)value);
            }
        }
        ,
        AdjFlg {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getAdjFlg();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setAdjFlg((String)value);
            }
        }
        ,
        LovPayModeVO {
            public Object get(MmInvcPmtSchdlVORowImpl obj) {
                return obj.getLovPayModeVO();
            }

            public void put(MmInvcPmtSchdlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmInvcPmtSchdlVORowImpl object);

        public abstract void put(MmInvcPmtSchdlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ADVFLG = AttributesEnum.AdvFlg.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PAYAMTBS = AttributesEnum.PayAmtBs.index();
    public static final int PAYAMTSP = AttributesEnum.PayAmtSp.index();
    public static final int PAYDT = AttributesEnum.PayDt.index();
    public static final int PAYMODE = AttributesEnum.PayMode.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int ADJFLG = AttributesEnum.AdjFlg.index();
    public static final int LOVPAYMODEVO = AttributesEnum.LovPayModeVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvcPmtSchdlVORowImpl() {
    }

    /**
     * Gets MmInvcPmtSchdlEO entity object.
     * @return the MmInvcPmtSchdlEO
     */
    public MmInvcPmtSchdlEOImpl getMmInvcPmtSchdlEO() {
        return (MmInvcPmtSchdlEOImpl)getEntity(ENTITY_MMINVCPMTSCHDLEO);
    }

    /**
     * Gets the attribute value for ADV_FLG using the alias name AdvFlg.
     * @return the ADV_FLG
     */
    public String getAdvFlg() {
        return (String) getAttributeInternal(ADVFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ADV_FLG using the alias name AdvFlg.
     * @param value value to set the ADV_FLG
     */
    public void setAdvFlg(String value) {
        setAttributeInternal(ADVFLG, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PAY_AMT_BS using the alias name PayAmtBs.
     * @return the PAY_AMT_BS
     */
    public Number getPayAmtBs() {
        return (Number) getAttributeInternal(PAYAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_AMT_BS using the alias name PayAmtBs.
     * @param value value to set the PAY_AMT_BS
     */
    public void setPayAmtBs(Number value) {
        if(value != null)
        {setAttributeInternal(PAYAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(PAYAMTBS, value);}
    }

    /**
     * Gets the attribute value for PAY_AMT_SP using the alias name PayAmtSp.
     * @return the PAY_AMT_SP
     */
    public Number getPayAmtSp() {
        return (Number) getAttributeInternal(PAYAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_AMT_SP using the alias name PayAmtSp.
     * @param value value to set the PAY_AMT_SP
     */
    public void setPayAmtSp(Number value) {
        if(value != null)
        {setAttributeInternal(PAYAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(PAYAMTSP, value);}
    }

    /**
     * Gets the attribute value for PAY_DT using the alias name PayDt.
     * @return the PAY_DT
     */
    public Timestamp getPayDt() {
        return (Timestamp) getAttributeInternal(PAYDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_DT using the alias name PayDt.
     * @param value value to set the PAY_DT
     */
    public void setPayDt(Timestamp value) {
        setAttributeInternal(PAYDT, value);
    }

    /**
     * Gets the attribute value for PAY_MODE using the alias name PayMode.
     * @return the PAY_MODE
     */
    public Integer getPayMode() {
        return (Integer) getAttributeInternal(PAYMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_MODE using the alias name PayMode.
     * @param value value to set the PAY_MODE
     */
    public void setPayMode(Integer value) {
        setAttributeInternal(PAYMODE, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(Number value) {
        if(value != null)
        {setAttributeInternal(TOTAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TOTAMTBS, value);}
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(Number value) {
       if(value != null)
       {setAttributeInternal(TOTAMTSP, value.round(getAmtRoundOff()));}
        else
       {setAttributeInternal(TOTAMTSP, value);}
    }

    /**
     * Gets the attribute value for ADJ_FLG using the alias name AdjFlg.
     * @return the ADJ_FLG
     */
    public String getAdjFlg() {
        return (String) getAttributeInternal(ADJFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJ_FLG using the alias name AdjFlg.
     * @param value value to set the ADJ_FLG
     */
    public void setAdjFlg(String value) {
        setAttributeInternal(ADJFLG, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPayModeVO.
     */
    public RowSet getLovPayModeVO() {
        return (RowSet)getAttributeInternal(LOVPAYMODEVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    private String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }
    
    private Integer getAmtRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}").toString()); 
        return roundOff;
    }
    
    private Integer getCurrRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}").toString()); 
        return roundOff;
    }
}
