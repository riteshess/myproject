package mminvoice.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import mminvoice.model.entities.MmInvcEOImpl;

import mminvoice.model.services.MMInvoiceAMImpl;

import mminvoice.model.services.common.MMInvoiceAM;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 29 16:19:37 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMINVCEO = 0;
    ADFLogger adfLog = ADFLogger.createADFLogger(MmInvcVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        DocId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        DocDt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        },
        FyId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        },
        InvcType {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getInvcType();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setInvcType((Integer) value);
            }
        },
        InvcNo {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getInvcNo();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setInvcNo((String) value);
            }
        },
        InvcDt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getInvcDt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setInvcDt((Timestamp) value);
            }
        },
        EoIdSrc {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getEoIdSrc();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setEoIdSrc((Integer) value);
            }
        },
        BillAddsId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getBillAddsId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setBillAddsId((String) value);
            }
        },
        CurrIdSp {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        },
        CurrConvFctr {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        },
        AuthStat {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getAuthStat();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAuthStat((String) value);
            }
        },
        UsrIdCreate {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        CoaId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        },
        TotAmtBs {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTotAmtBs((Number) value);
            }
        },
        TotAmtSp {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTotAmtSp((Number) value);
            }
        },
        ExtDocDt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getExtDocDt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setExtDocDt((Timestamp) value);
            }
        },
        ExtDocNo {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getExtDocNo();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setExtDocNo((String) value);
            }
        },
        GlVouId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getGlVouId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setGlVouId((String) value);
            }
        },
        WhIdSrc {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getWhIdSrc();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setWhIdSrc((String) value);
            }
        },
        OrgIdSrc {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getOrgIdSrc();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setOrgIdSrc((String) value);
            }
        },
        PrjId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getPrjId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        },
        TransEoName {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransEoName();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransEoName((String) value);
            }
        },
        TransCurrName {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransCurrName();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransCurrName((String) value);
            }
        },
        TransDocName {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransDocName();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransDocName((String) value);
            }
        },
        TransSrcDocId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransSrcDocId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransSrcDocId((String) value);
            }
        },
        TransInvcAmtSp {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransInvcAmtSp();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransInvcAmtSp((Number) value);
            }
        },
        TransPmtAmtSp {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransPmtAmtSp();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransPmtAmtSp((Number) value);
            }
        },
        TransAdvFlg {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransAdvFlg();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransAdvFlg((String) value);
            }
        },
        TransPayDate {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransPayDate();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransPayDate((Timestamp) value);
            }
        },
        TransPayMode {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransPayMode();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransPayMode((Integer) value);
            }
        },
        LovSwitcher {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovSwitcher();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setLovSwitcher((String) value);
            }
        },
        TransHoOrgId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        },
        TransCCId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransCCId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransCCId((Integer) value);
            }
        },
        TransVouId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransVouId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransVouId((String) value);
            }
        },
        TransSupAdd {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransSupAdd();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransSupAdd((String) value);
            }
        },
        Remarks {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        },
        LovWhSwitcher {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovWhSwitcher();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOrgSrcSwitcher {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovOrgSrcSwitcher();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransTotalOcAmt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransTotalOcAmt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransTotalOcAmt((Number) value);
            }
        },
        InvcStat {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getInvcStat();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setInvcStat((Integer) value);
            }
        },
        TransCheckUsrLvl {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransCheckUsrLvl();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransCheckUsrLvl((String) value);
            }
        },
        ImportPur {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getImportPur();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setImportPur((String) value);
            }
        },
        TransTotTaxAmt {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getTransTotTaxAmt();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setTransTotTaxAmt((Number) value);
            }
        },
        MmInvcDtl {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMmInvcDtl();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MMInvcAdj {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMMInvcAdj();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MmInvcCalc {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMmInvcCalc();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MmInvcPmtSchdl {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMmInvcPmtSchdl();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MmInvcSupple {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMmInvcSupple();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        MmInvcAttch {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getMmInvcAttch();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOrgIdVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovOrgIdVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovUsrIdVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovUsrIdVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovSupplierVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovSupplierVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovCurrencyVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovCurrencyVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovInvoiceTypeVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovInvoiceTypeVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovRcptVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovRcptVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovPayModeVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovPayModeVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovIssuVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovIssuVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovSrcOrgVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovSrcOrgVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovWhVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovWhVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CPOVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCPOVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovRcptCPOVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovRcptCPOVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOcCoaVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovOcCoaVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        COAVWVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getCOAVWVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovAddsVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovAddsVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovFrSrvcInvc {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovFrSrvcInvc();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovFrCnsmblVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovFrCnsmblVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovTrfRcptVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovTrfRcptVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovRcptWhSrcVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovRcptWhSrcVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOrgRcptSrcVO {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovOrgRcptSrcVO();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovPrjctId {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovPrjctId();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovInvcStatVO1 {
            public Object get(MmInvcVORowImpl obj) {
                return obj.getLovInvcStatVO1();
            }

            public void put(MmInvcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static int firstIndex = 0;

        public abstract Object get(MmInvcVORowImpl object);

        public abstract void put(MmInvcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int INVCTYPE = AttributesEnum.InvcType.index();
    public static final int INVCNO = AttributesEnum.InvcNo.index();
    public static final int INVCDT = AttributesEnum.InvcDt.index();
    public static final int EOIDSRC = AttributesEnum.EoIdSrc.index();
    public static final int BILLADDSID = AttributesEnum.BillAddsId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int EXTDOCDT = AttributesEnum.ExtDocDt.index();
    public static final int EXTDOCNO = AttributesEnum.ExtDocNo.index();
    public static final int GLVOUID = AttributesEnum.GlVouId.index();
    public static final int WHIDSRC = AttributesEnum.WhIdSrc.index();
    public static final int ORGIDSRC = AttributesEnum.OrgIdSrc.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int TRANSEONAME = AttributesEnum.TransEoName.index();
    public static final int TRANSCURRNAME = AttributesEnum.TransCurrName.index();
    public static final int TRANSDOCNAME = AttributesEnum.TransDocName.index();
    public static final int TRANSSRCDOCID = AttributesEnum.TransSrcDocId.index();
    public static final int TRANSINVCAMTSP = AttributesEnum.TransInvcAmtSp.index();
    public static final int TRANSPMTAMTSP = AttributesEnum.TransPmtAmtSp.index();
    public static final int TRANSADVFLG = AttributesEnum.TransAdvFlg.index();
    public static final int TRANSPAYDATE = AttributesEnum.TransPayDate.index();
    public static final int TRANSPAYMODE = AttributesEnum.TransPayMode.index();
    public static final int LOVSWITCHER = AttributesEnum.LovSwitcher.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSCCID = AttributesEnum.TransCCId.index();
    public static final int TRANSVOUID = AttributesEnum.TransVouId.index();
    public static final int TRANSSUPADD = AttributesEnum.TransSupAdd.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LOVWHSWITCHER = AttributesEnum.LovWhSwitcher.index();
    public static final int LOVORGSRCSWITCHER = AttributesEnum.LovOrgSrcSwitcher.index();
    public static final int TRANSTOTALOCAMT = AttributesEnum.TransTotalOcAmt.index();
    public static final int INVCSTAT = AttributesEnum.InvcStat.index();
    public static final int TRANSCHECKUSRLVL = AttributesEnum.TransCheckUsrLvl.index();
    public static final int IMPORTPUR = AttributesEnum.ImportPur.index();
    public static final int TRANSTOTTAXAMT = AttributesEnum.TransTotTaxAmt.index();
    public static final int MMINVCDTL = AttributesEnum.MmInvcDtl.index();
    public static final int MMINVCADJ = AttributesEnum.MMInvcAdj.index();
    public static final int MMINVCCALC = AttributesEnum.MmInvcCalc.index();
    public static final int MMINVCPMTSCHDL = AttributesEnum.MmInvcPmtSchdl.index();
    public static final int MMINVCSUPPLE = AttributesEnum.MmInvcSupple.index();
    public static final int MMINVCATTCH = AttributesEnum.MmInvcAttch.index();
    public static final int LOVORGIDVO = AttributesEnum.LovOrgIdVO.index();
    public static final int LOVUSRIDVO = AttributesEnum.LovUsrIdVO.index();
    public static final int LOVSUPPLIERVO = AttributesEnum.LovSupplierVO.index();
    public static final int LOVCURRENCYVO = AttributesEnum.LovCurrencyVO.index();
    public static final int LOVINVOICETYPEVO = AttributesEnum.LovInvoiceTypeVO.index();
    public static final int LOVRCPTVO = AttributesEnum.LovRcptVO.index();
    public static final int LOVPAYMODEVO1 = AttributesEnum.LovPayModeVO1.index();
    public static final int LOVISSUVO1 = AttributesEnum.LovIssuVO1.index();
    public static final int LOVSRCORGVO1 = AttributesEnum.LovSrcOrgVO1.index();
    public static final int LOVWHVO1 = AttributesEnum.LovWhVO1.index();
    public static final int CPOVO1 = AttributesEnum.CPOVO1.index();
    public static final int LOVRCPTCPOVO1 = AttributesEnum.LovRcptCPOVO1.index();
    public static final int LOVOCCOAVO1 = AttributesEnum.LovOcCoaVO1.index();
    public static final int COAVWVO1 = AttributesEnum.COAVWVO1.index();
    public static final int LOVADDSVO1 = AttributesEnum.LovAddsVO1.index();
    public static final int LOVFRSRVCINVC = AttributesEnum.LovFrSrvcInvc.index();
    public static final int LOVFRCNSMBLVO = AttributesEnum.LovFrCnsmblVO.index();
    public static final int LOVTRFRCPTVO = AttributesEnum.LovTrfRcptVO.index();
    public static final int LOVRCPTWHSRCVO = AttributesEnum.LovRcptWhSrcVO.index();
    public static final int LOVORGRCPTSRCVO = AttributesEnum.LovOrgRcptSrcVO.index();
    public static final int LOVPRJCTID = AttributesEnum.LovPrjctId.index();
    public static final int LOVINVCSTATVO1 = AttributesEnum.LovInvcStatVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvcVORowImpl() {
    }

    /**
     * Gets MmInvcEO entity object.
     * @return the MmInvcEO
     */
    public MmInvcEOImpl getMmInvcEO() {
        return (MmInvcEOImpl) getEntity(ENTITY_MMINVCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for INVC_TYPE using the alias name InvcType.
     * @return the INVC_TYPE
     */
    public Integer getInvcType() {
        return (Integer) getAttributeInternal(INVCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_TYPE using the alias name InvcType.
     * @param value value to set the INVC_TYPE
     */
    public void setInvcType(Integer value) {
        setAttributeInternal(INVCTYPE, value);
    }

    /**
     * Gets the attribute value for INVC_NO using the alias name InvcNo.
     * @return the INVC_NO
     */
    public String getInvcNo() {
        return (String) getAttributeInternal(INVCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_NO using the alias name InvcNo.
     * @param value value to set the INVC_NO
     */
    public void setInvcNo(String value) {
        setAttributeInternal(INVCNO, value);
    }

    /**
     * Gets the attribute value for INVC_DT using the alias name InvcDt.
     * @return the INVC_DT
     */
    public Timestamp getInvcDt() {
        return (Timestamp) getAttributeInternal(INVCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_DT using the alias name InvcDt.
     * @param value value to set the INVC_DT
     */
    public void setInvcDt(Timestamp value) {
        setAttributeInternal(INVCDT, value);
    }

    /**
     * Gets the attribute value for EO_ID_SRC using the alias name EoIdSrc.
     * @return the EO_ID_SRC
     */
    public Integer getEoIdSrc() {
        return (Integer) getAttributeInternal(EOIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID_SRC using the alias name EoIdSrc.
     * @param value value to set the EO_ID_SRC
     */
    public void setEoIdSrc(Integer value) {
        setAttributeInternal(EOIDSRC, value);
    }

    /**
     * Gets the attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @return the BILL_ADDS_ID
     */
    public String getBillAddsId() {
        return (String) getAttributeInternal(BILLADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @param value value to set the BILL_ADDS_ID
     */
    public void setBillAddsId(String value) {
        setAttributeInternal(BILLADDSID, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        if (value != null) {
            setAttributeInternal(CURRCONVFCTR, value.round(getCurrRoundOff()));
        } else {
            setAttributeInternal(CURRCONVFCTR, value);
        }
    }

    /**
     * Gets the attribute value for AUTH_STAT using the alias name AuthStat.
     * @return the AUTH_STAT
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT using the alias name AuthStat.
     * @param value value to set the AUTH_STAT
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoName.
     * @return the TransEoName
     */
    public String getTransEoName() {
        if ((String) getAttributeInternal(TRANSEONAME) == null) {
            Integer eoId = this.getEoIdSrc();
            adfLog.info("eo name is " + eoId);
            // System.out.println(eoId +" Entity");
            if (eoId != null) {
                MMInvoiceAMImpl am = (MMInvoiceAMImpl) this.getApplicationModule();
                ViewObjectImpl vo = am.getLovSupVw();
                vo.setNamedWhereClauseParam("bindCldId", this.getCldId());
                vo.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
                vo.setNamedWhereClauseParam("bindOrgId", this.getOrgId());
                vo.setNamedWhereClauseParam("bindEoId", eoId);
                vo.setNamedWhereClauseParam("bindHoOrdId", this.getTransHoOrgId());
                vo.executeQuery();
                Row[] filRw = vo.getFilteredRows("EoId", eoId);
                adfLog.info("total eo id is " + filRw.length);
                //  Row[] filRw= am.getLovSupplier1().getFilteredRows(new RowQualifier("EoId="+eoId+" and SlocId="+this.getSlocId()+" and OrgId='"+this.getOrgId()+"' and CldId='"+this.getCldId()+"'"));
                if (filRw.length > 0) {
                    return filRw[0].getAttribute("EoNm").toString();
                } else {
                    return (String) getAttributeInternal(TRANSEONAME);
                }
            } else {
                return (String) getAttributeInternal(TRANSEONAME);
            }
        }
        return (String) getAttributeInternal(TRANSEONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoName.
     * @param value value to set the  TransEoName
     */
    public void setTransEoName(String value) {
        setAttributeInternal(TRANSEONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrName.
     * @return the TransCurrName
     */
    public String getTransCurrName() {
        Integer curId = this.getCurrIdSp();
        MMInvoiceAMImpl am = (MMInvoiceAMImpl) this.getApplicationModule();
        ViewObjectImpl CurrVo = am.getLovCurrency();
        CurrVo.setNamedWhereClauseParam("bindCldId", this.getCldId());
        CurrVo.setNamedWhereClauseParam("bindOrgId", this.getOrgId());
        CurrVo.setNamedWhereClauseParam("bindHoOrgId", this.getTransHoOrgId());
        CurrVo.setNamedWhereClauseParam("bindCcId", this.getTransCCId());
        CurrVo.executeQuery();
        Row[] rw = CurrVo.getFilteredRows("CcCurrIdTxn", curId);
        adfLog.info("currency name is " + rw.length);
        if (rw.length > 0) {
            return rw[0].getAttribute("CurrDescTxn").toString();
        } else {
            return (String) getAttributeInternal(TRANSCURRNAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrName.
     * @param value value to set the  TransCurrName
     */
    public void setTransCurrName(String value) {
        setAttributeInternal(TRANSCURRNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocName.
     * @return the TransDocName
     */
    public String getTransDocName() {
        // MMInvoiceAMImpl am=(MMInvoiceAMImpl)this.getApplicationModule();
        //am.getLovRcpt().executeQuery();
        return (String) getAttributeInternal(TRANSDOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocName.
     * @param value value to set the  TransDocName
     */
    public void setTransDocName(String value) {
        setAttributeInternal(TRANSDOCNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrcDocId.
     * @return the TransSrcDocId
     */
    public String getTransSrcDocId() {
        return (String) getAttributeInternal(TRANSSRCDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrcDocId.
     * @param value value to set the  TransSrcDocId
     */
    public void setTransSrcDocId(String value) {
        setAttributeInternal(TRANSSRCDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransInvcAmtSp.
     * @return the TransInvcAmtSp
     */
    public Number getTransInvcAmtSp() {
        Number n = new Number(0);
        MMInvoiceAMImpl applicationModule = (MMInvoiceAMImpl) this.getApplicationModule();
        ViewObjectImpl impl = applicationModule.getMmInvcDtl();
        RowSetIterator dtl = impl.createRowSetIterator(null);
        while (dtl.hasNext()) {
            Row next = dtl.next();
            if (next != null && next.getAttribute("TransRcptAmtSp") != null) {
                n = n.add((Number) next.getAttribute("TransRcptAmtSp"));
            }
        }
        dtl.closeRowSetIterator();

        Number ocAmt = new Number(0);
        Number TtlocAmtCalc = new Number(0);
        ViewObjectImpl invcOc1 = applicationModule.getMmInvcOc1();
        ViewObjectImpl ocDoc = applicationModule.getLovOcDoc();
        Row[] rr = invcOc1.getFilteredRows("DocId", getDocId());
        adfLog.info("invc oc length is " + rr.length);
        String thrdParty = "N";
        String partCost = "N";
        if (rr.length > 0) {
            for (Row r : rr) {
                String ocId = null;
                if (r.getAttribute("OcId") != null) {
                    ocId = r.getAttribute("OcId").toString();
                    ocAmt = (Number) r.getAttribute("OcAmtSp");
                    RowQualifier rq = new RowQualifier(ocDoc);
                    rq.setWhereClause("CldId='" + getCldId() + "' and HoOrgId= '" + getTransHoOrgId() + "' and DocId=" +
                                      18521 + " and SlocId=" + getSlocId() + " and OcId='" + ocId +
                                      "' and DocTypeId =" + getInvcType() + " ");
                    Row[] ocrr = ocDoc.getFilteredRows(rq);
                    adfLog.info("oc rr length is " + ocrr.length + " oc expression is:  " + rq.getExprStr());
                    if (ocrr.length > 0) {
                        thrdParty = ocrr[0].getAttribute("ThirdParty").toString();
                        partCost = ocrr[0].getAttribute("PartOfCost").toString();
                    }
                    adfLog.info(partCost + " oc amount is " + ocAmt + "third party value is " + thrdParty);

                    if ("Y".equalsIgnoreCase(thrdParty)) {
                        TtlocAmtCalc = TtlocAmtCalc.add(ocAmt);
                    }
                }
            }
            adfLog.info("total oc mt is  " + TtlocAmtCalc);
        }

        // Number retVal = (Number)n.round(getAmtRoundOff());
        adfLog.info("total invoice amount is " + n.minus(TtlocAmtCalc));
        Number retVal = (Number) n.minus(TtlocAmtCalc);
        return retVal;
        //return (Number) getAttributeInternal(TRANSINVCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInvcAmtSp.
     * @param value value to set the  TransInvcAmtSp
     */
    public void setTransInvcAmtSp(Number value) {
        if (value != null) {
            setAttributeInternal(TRANSINVCAMTSP, value.round(getAmtRoundOff()));
        } else {
            setAttributeInternal(TRANSINVCAMTSP, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransPmtAmtSp.
     * @return the TransPmtAmtSp
     */
    public Number getTransPmtAmtSp() {
        Number num = (Number) getAttributeInternal(TRANSPMTAMTSP);
        if (num != null && num.compareTo(0) < 0) {
            return new Number(0);
        }

        return (Number) getAttributeInternal(TRANSPMTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPmtAmtSp.
     * @param value value to set the  TransPmtAmtSp
     */
    public void setTransPmtAmtSp(Number value) {
        if (value != null) {
            setAttributeInternal(TRANSPMTAMTSP, value.round(getAmtRoundOff()));
        } else {
            setAttributeInternal(TRANSPMTAMTSP, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransAdvFlg.
     * @return the TransAdvFlg
     */
    public String getTransAdvFlg() {
        return (String) getAttributeInternal(TRANSADVFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAdvFlg.
     * @param value value to set the  TransAdvFlg
     */
    public void setTransAdvFlg(String value) {
        setAttributeInternal(TRANSADVFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPayDate.
     * @return the TransPayDate
     */
    public Timestamp getTransPayDate() {
        if (getInvcType() != null) {
            if (getInvcType() == 457) {
                return new Timestamp(System.currentTimeMillis());
            }

        }
        return (Timestamp) getAttributeInternal(TRANSPAYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPayDate.
     * @param value value to set the  TransPayDate
     */
    public void setTransPayDate(Timestamp value) {
        setAttributeInternal(TRANSPAYDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPayMode.
     * @return the TransPayMode
     */
    public Integer getTransPayMode() {
        return (Integer) getAttributeInternal(TRANSPAYMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPayMode.
     * @param value value to set the  TransPayMode
     */
    public void setTransPayMode(Integer value) {
        setAttributeInternal(TRANSPAYMODE, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(Number value) {
        if (value != null) {
            setAttributeInternal(TOTAMTBS, value.round(getAmtRoundOff()));
        } else {
            setAttributeInternal(TOTAMTBS, value);
        }
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(Number value) {
        if (value != null) {
            setAttributeInternal(TOTAMTSP, value.round(getAmtRoundOff()));
        } else {
            setAttributeInternal(TOTAMTSP, value);
        }
    }

    /**
     * Gets the attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @return the EXT_DOC_DT
     */
    public Timestamp getExtDocDt() {
        return (Timestamp) getAttributeInternal(EXTDOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @param value value to set the EXT_DOC_DT
     */
    public void setExtDocDt(Timestamp value) {
        setAttributeInternal(EXTDOCDT, value);
    }

    /**
     * Gets the attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @return the EXT_DOC_NO
     */
    public String getExtDocNo() {
        return (String) getAttributeInternal(EXTDOCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @param value value to set the EXT_DOC_NO
     */
    public void setExtDocNo(String value) {
        setAttributeInternal(EXTDOCNO, value);
    }

    /**
     * Gets the attribute value for GL_VOU_ID using the alias name GlVouId.
     * @return the GL_VOU_ID
     */
    public String getGlVouId() {
        return (String) getAttributeInternal(GLVOUID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_VOU_ID using the alias name GlVouId.
     * @param value value to set the GL_VOU_ID
     */
    public void setGlVouId(String value) {
        setAttributeInternal(GLVOUID, value);
    }

    /**
     * Gets the attribute value for WH_ID_SRC using the alias name WhIdSrc.
     * @return the WH_ID_SRC
     */
    public String getWhIdSrc() {
        return (String) getAttributeInternal(WHIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID_SRC using the alias name WhIdSrc.
     * @param value value to set the WH_ID_SRC
     */
    public void setWhIdSrc(String value) {
        setAttributeInternal(WHIDSRC, value);
    }

    /**
     * Gets the attribute value for ORG_ID_SRC using the alias name OrgIdSrc.
     * @return the ORG_ID_SRC
     */
    public String getOrgIdSrc() {
        return (String) getAttributeInternal(ORGIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID_SRC using the alias name OrgIdSrc.
     * @param value value to set the ORG_ID_SRC
     */
    public void setOrgIdSrc(String value) {
        setAttributeInternal(ORGIDSRC, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LovSwitcher.
     * @return the LovSwitcher
     */
    public String getLovSwitcher() {
        // System.out.println((String) getAttributeInternal(LOVSWITCHER));
        return (String) getAttributeInternal(LOVSWITCHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LovSwitcher.
     * @param value value to set the  LovSwitcher
     */
    public void setLovSwitcher(String value) {
        setAttributeInternal(LOVSWITCHER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {

        String paramHoOrdId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        if (paramHoOrdId != null) {
            return paramHoOrdId;
        }
        return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCCId.
     * @return the TransCCId
     */
    public Integer getTransCCId() {
        Integer ret = (Integer) (callStoredFunction(Types.INTEGER, "MM.MM_GET_ORG_BS_CURR(?,?)", new Object[] {
                                                    this.getCldId(), this.getOrgId()
        }));
        if (ret != null) {
            return ret;
        }
        return (Integer) getAttributeInternal(TRANSCCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCCId.
     * @param value value to set the  TransCCId
     */
    public void setTransCCId(Integer value) {
        setAttributeInternal(TRANSCCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVouId.
     * @return the TransVouId
     */
    public String getTransVouId() {
        if (getGlVouId() != null) {
            Object dispId = (Object) (callStoredFunction(Types.VARCHAR, "MM.MM_GET_INVC_VOU_NO(?,?,?,?)", new Object[] {
                                                         this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                         this.getDocId()
            }));
            if (dispId != null) {
                return dispId.toString();
            }

            /*    MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
          ViewObjectImpl vo = am.getAppDocTxn1();
            vo.setNamedWhereClauseParam("bindCldId", this.getCldId());
            vo.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            vo.setNamedWhereClauseParam("bindOrgId", this.getOrgId());
            vo.setNamedWhereClauseParam("bindVouId", this.getGlVouId());
            Row r[]=vo.getAllRowsInRange();
            if(r.length>0)
                {return r[0].getAttribute("DocTxnIdDisp").toString().substring(2);}
            else
                {return (String) getAttributeInternal(TRANSVOUID);}*/
        }

        return (String) getAttributeInternal(TRANSVOUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVouId.
     * @param value value to set the  TransVouId
     */
    public void setTransVouId(String value) {
        setAttributeInternal(TRANSVOUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSupAdd.
     * @return the TransSupAdd
     */
    public String getTransSupAdd() {

        String addId = this.getBillAddsId();
        if (addId != null) {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl) this.getApplicationModule();
            ViewObjectImpl addVo = am.getLovAdds1();
            addVo.setNamedWhereClauseParam("bindCldId", this.getCldId());
            addVo.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            Row[] rw = addVo.getFilteredRows("AddsId", addId);


            if (rw.length > 0) {
                return rw[0].getAttribute("Adds").toString();
            } else {
                return null;
                //return (String) getAttributeInternal(TRANSSUPADD);
            }
        } else {
            return null;
            // return (String) getAttributeInternal(TRANSSUPADD);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSupAdd.
     * @param value value to set the  TransSupAdd
     */
    public void setTransSupAdd(String value) {
        setAttributeInternal(TRANSSUPADD, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LovWhSwitcher.
     * @return the LovWhSwitcher
     */
    public String getLovWhSwitcher() {
        return (String) getAttributeInternal(LOVWHSWITCHER);
    }

    /**
     * Gets the attribute value for the calculated attribute LovOrgSrcSwitcher.
     * @return the LovOrgSrcSwitcher
     */
    public String getLovOrgSrcSwitcher() {
        return (String) getAttributeInternal(LOVORGSRCSWITCHER);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalOcAmt.
     * @return the TransTotalOcAmt
     */
    public Number getTransTotalOcAmt() {

        /*  MMInvoiceAMImpl am = (MMInvoiceAMImpl) this.getApplicationModule();
        ViewObjectImpl invcOc1 = am.getMmInvcOc1();

        ViewObjectImpl ocDoc = am.getLovOcDoc();
        Row[] rr = invcOc1.getFilteredRows("DocId", getDocId());

        Number ocAmt = new Number(0);
        Number TtlocAmtCalc = new Number(0);
        String thrdParty = "N";
        if (rr.length > 0) {
            for (Row r : rr) {
                String ocId = null;
                if (r.getAttribute("OcId") != null) {
                    ocId = r.getAttribute("OcId").toString();
                    ocAmt = (Number) r.getAttribute("OcAmtSp");
                    RowQualifier rq = new RowQualifier(ocDoc);
                    rq.setWhereClause("CldId='" + getCldId() + "' and HoOrgId= '" + getTransHoOrgId() + "' and DocId=" +
                                      18521 + " and SlocId=" + getSlocId() + " and OcId='" + ocId + "'");
                    Row[] ocrr = ocDoc.getFilteredRows(rq);
                    if (ocrr.length > 0) {
                        thrdParty = ocrr[0].getAttribute("PartOfCost").toString();
                    }

                    if ("Y".equalsIgnoreCase(thrdParty)) {
                        TtlocAmtCalc = TtlocAmtCalc.add(ocAmt);
                    }
                }
            }
            return TtlocAmtCalc;//this need to be inserted according to po wise
        } */

        return (Number) getAttributeInternal(TRANSTOTALOCAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalOcAmt.
     * @param value value to set the  TransTotalOcAmt
     */
    public void setTransTotalOcAmt(Number value) {
        setAttributeInternal(TRANSTOTALOCAMT, value);
    }

    /**
     * Gets the attribute value for INVC_STAT using the alias name InvcStat.
     * @return the INVC_STAT
     */
    public Integer getInvcStat() {
        return (Integer) getAttributeInternal(INVCSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for INVC_STAT using the alias name InvcStat.
     * @param value value to set the INVC_STAT
     */
    public void setInvcStat(Integer value) {
        setAttributeInternal(INVCSTAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCheckUsrLvl.
     * @return the TransCheckUsrLvl
     */
    public String getTransCheckUsrLvl() {
        return (String) getAttributeInternal(TRANSCHECKUSRLVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCheckUsrLvl.
     * @param value value to set the  TransCheckUsrLvl
     */
    public void setTransCheckUsrLvl(String value) {
        setAttributeInternal(TRANSCHECKUSRLVL, value);
    }

    /**
     * Gets the attribute value for IMPORT_PUR using the alias name ImportPur.
     * @return the IMPORT_PUR
     */
    public String getImportPur() {
        return (String) getAttributeInternal(IMPORTPUR);
    }

    /**
     * Sets <code>value</code> as attribute value for IMPORT_PUR using the alias name ImportPur.
     * @param value value to set the IMPORT_PUR
     */
    public void setImportPur(String value) {
        setAttributeInternal(IMPORTPUR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotTaxAmt.
     * @return the TransTotTaxAmt
     */
    public Number getTransTotTaxAmt() {
        return (Number) getAttributeInternal(TRANSTOTTAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotTaxAmt.
     * @param value value to set the  TransTotTaxAmt
     */
    public void setTransTotTaxAmt(Number value) {
        setAttributeInternal(TRANSTOTTAXAMT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcDtl.
     */
    public RowIterator getMmInvcDtl() {
        return (RowIterator) getAttributeInternal(MMINVCDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MMInvcAdj.
     */
    public RowIterator getMMInvcAdj() {
        return (RowIterator) getAttributeInternal(MMINVCADJ);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcCalc.
     */
    public RowIterator getMmInvcCalc() {
        return (RowIterator) getAttributeInternal(MMINVCCALC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcPmtSchdl.
     */
    public RowIterator getMmInvcPmtSchdl() {
        return (RowIterator) getAttributeInternal(MMINVCPMTSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcSupple.
     */
    public RowIterator getMmInvcSupple() {
        return (RowIterator) getAttributeInternal(MMINVCSUPPLE);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcAttch.
     */
    public RowIterator getMmInvcAttch() {
        return (RowIterator) getAttributeInternal(MMINVCATTCH);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO.
     */
    public RowSet getLovOrgIdVO() {
        return (RowSet) getAttributeInternal(LOVORGIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO.
     */
    public RowSet getLovUsrIdVO() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSupplierVO.
     */
    public RowSet getLovSupplierVO() {
        return (RowSet) getAttributeInternal(LOVSUPPLIERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO.
     */
    public RowSet getLovCurrencyVO() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovInvoiceTypeVO.
     */
    public RowSet getLovInvoiceTypeVO() {
        return (RowSet) getAttributeInternal(LOVINVOICETYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRcptVO.
     */
    public RowSet getLovRcptVO() {
        return (RowSet) getAttributeInternal(LOVRCPTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPayModeVO1.
     */
    public RowSet getLovPayModeVO1() {
        return (RowSet) getAttributeInternal(LOVPAYMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIssuVO1.
     */
    public RowSet getLovIssuVO1() {
        return (RowSet) getAttributeInternal(LOVISSUVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSrcOrgVO1.
     */
    public RowSet getLovSrcOrgVO1() {
        return (RowSet) getAttributeInternal(LOVSRCORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhVO1.
     */
    public RowSet getLovWhVO1() {
        return (RowSet) getAttributeInternal(LOVWHVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CPOVO1.
     */
    public RowSet getCPOVO1() {
        return (RowSet) getAttributeInternal(CPOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRcptCPOVO1.
     */
    public RowSet getLovRcptCPOVO1() {
        return (RowSet) getAttributeInternal(LOVRCPTCPOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcCoaVO1.
     */
    public RowSet getLovOcCoaVO1() {
        return (RowSet) getAttributeInternal(LOVOCCOAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> COAVWVO1.
     */
    public RowSet getCOAVWVO1() {
        return (RowSet) getAttributeInternal(COAVWVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddsVO1.
     */
    public RowSet getLovAddsVO1() {
        return (RowSet) getAttributeInternal(LOVADDSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovFrSrvcInvc.
     */
    public RowSet getLovFrSrvcInvc() {
        return (RowSet) getAttributeInternal(LOVFRSRVCINVC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovFrCnsmblVO.
     */
    public RowSet getLovFrCnsmblVO() {
        return (RowSet) getAttributeInternal(LOVFRCNSMBLVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTrfRcptVO.
     */
    public RowSet getLovTrfRcptVO() {
        return (RowSet) getAttributeInternal(LOVTRFRCPTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRcptWhSrcVO.
     */
    public RowSet getLovRcptWhSrcVO() {
        return (RowSet) getAttributeInternal(LOVRCPTWHSRCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgRcptSrcVO.
     */
    public RowSet getLovOrgRcptSrcVO() {
        return (RowSet) getAttributeInternal(LOVORGRCPTSRCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPrjctId.
     */
    public RowSet getLovPrjctId() {
        return (RowSet) getAttributeInternal(LOVPRJCTID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovInvcStatVO1.
     */
    public RowSet getLovInvcStatVO1() {
        return (RowSet) getAttributeInternal(LOVINVCSTATVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {

            int end = e.getMessage().indexOf("\n");
            //  throw new JboException(e.getMessage().substring(11, end));
            String msg = e.getMessage();
            FacesMessage ermsg = new FacesMessage(msg);
            ermsg.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, ermsg);
            //  throw new JboException(e);
            return null;
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private Integer getAmtRoundOff() {
        Integer roundOff = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}").toString());
        return roundOff;
    }

    private Integer getCurrRoundOff() {
        Integer roundOff = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}").toString());
        return roundOff;
    }
}
