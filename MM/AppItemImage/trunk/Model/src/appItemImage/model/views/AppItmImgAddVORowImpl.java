package appItemImage.model.views;

import appItemImage.model.entities.AppItmImgEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 04 17:35:03 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppItmImgAddVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPITMIMGEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ImgId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgId((String)value);
            }
        }
        ,
        ImgFileNm {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgFileNm();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgFileNm((String)value);
            }
        }
        ,
        ImgFileType {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgFileType();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgFileType((String)value);
            }
        }
        ,
        ImgDflt {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgDflt();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgDflt((String)value);
            }
        }
        ,
        ImgDesc {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgDesc();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgDesc((String)value);
            }
        }
        ,
        ImgPath {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgPath();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgPath((String)value);
            }
        }
        ,
        ImgBlob {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgBlob();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgBlob((BlobDomain)value);
            }
        }
        ,
        ImgBfile {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getImgBfile();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setImgBfile((BFileDomain)value);
            }
        }
        ,
        Actv {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getActv();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getInactvResn();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getInactvDt();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        ItmImgEntId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getItmImgEntId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setItmImgEntId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        ItemLOV1 {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getItemLOV1();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserLOV1 {
            public Object get(AppItmImgAddVORowImpl obj) {
                return obj.getUserLOV1();
            }

            public void put(AppItmImgAddVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppItmImgAddVORowImpl object);

        public abstract void put(AppItmImgAddVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int IMGID = AttributesEnum.ImgId.index();
    public static final int IMGFILENM = AttributesEnum.ImgFileNm.index();
    public static final int IMGFILETYPE = AttributesEnum.ImgFileType.index();
    public static final int IMGDFLT = AttributesEnum.ImgDflt.index();
    public static final int IMGDESC = AttributesEnum.ImgDesc.index();
    public static final int IMGPATH = AttributesEnum.ImgPath.index();
    public static final int IMGBLOB = AttributesEnum.ImgBlob.index();
    public static final int IMGBFILE = AttributesEnum.ImgBfile.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMIMGENTID = AttributesEnum.ItmImgEntId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITEMLOV1 = AttributesEnum.ItemLOV1.index();
    public static final int USERLOV1 = AttributesEnum.UserLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppItmImgAddVORowImpl() {
    }

    /**
     * Gets AppItmImgEO entity object.
     * @return the AppItmImgEO
     */
    public AppItmImgEOImpl getAppItmImgEO() {
        return (AppItmImgEOImpl)getEntity(ENTITY_APPITMIMGEO);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for IMG_ID using the alias name ImgId.
     * @return the IMG_ID
     */
    public String getImgId() {
        return (String) getAttributeInternal(IMGID);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_ID using the alias name ImgId.
     * @param value value to set the IMG_ID
     */
    public void setImgId(String value) {
        setAttributeInternal(IMGID, value);
    }

    /**
     * Gets the attribute value for IMG_FILE_NM using the alias name ImgFileNm.
     * @return the IMG_FILE_NM
     */
    public String getImgFileNm() {
        return (String) getAttributeInternal(IMGFILENM);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_FILE_NM using the alias name ImgFileNm.
     * @param value value to set the IMG_FILE_NM
     */
    public void setImgFileNm(String value) {
        setAttributeInternal(IMGFILENM, value.toUpperCase());
    }

    /**
     * Gets the attribute value for IMG_FILE_TYPE using the alias name ImgFileType.
     * @return the IMG_FILE_TYPE
     */
    public String getImgFileType() {
        return (String) getAttributeInternal(IMGFILETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_FILE_TYPE using the alias name ImgFileType.
     * @param value value to set the IMG_FILE_TYPE
     */
    public void setImgFileType(String value) {
        setAttributeInternal(IMGFILETYPE, value);
    }

    /**
     * Gets the attribute value for IMG_DFLT using the alias name ImgDflt.
     * @return the IMG_DFLT
     */
    public String getImgDflt() {
        return (String) getAttributeInternal(IMGDFLT);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_DFLT using the alias name ImgDflt.
     * @param value value to set the IMG_DFLT
     */
    public void setImgDflt(String value) {
        setAttributeInternal(IMGDFLT, value);
    }

    /**
     * Gets the attribute value for IMG_DESC using the alias name ImgDesc.
     * @return the IMG_DESC
     */
    public String getImgDesc() {
        return (String) getAttributeInternal(IMGDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_DESC using the alias name ImgDesc.
     * @param value value to set the IMG_DESC
     */
    public void setImgDesc(String value) {
        setAttributeInternal(IMGDESC, value);
    }

    /**
     * Gets the attribute value for IMG_PATH using the alias name ImgPath.
     * @return the IMG_PATH
     */
    public String getImgPath() {
        return (String) getAttributeInternal(IMGPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_PATH using the alias name ImgPath.
     * @param value value to set the IMG_PATH
     */
    public void setImgPath(String value) {
        setAttributeInternal(IMGPATH, value);
    }

    /**
     * Gets the attribute value for IMG_BLOB using the alias name ImgBlob.
     * @return the IMG_BLOB
     */
    public BlobDomain getImgBlob() {
        return (BlobDomain) getAttributeInternal(IMGBLOB);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_BLOB using the alias name ImgBlob.
     * @param value value to set the IMG_BLOB
     */
    public void setImgBlob(BlobDomain value) {
        setAttributeInternal(IMGBLOB, value);
    }

    /**
     * Gets the attribute value for IMG_BFILE using the alias name ImgBfile.
     * @return the IMG_BFILE
     */
    public BFileDomain getImgBfile() {
        return (BFileDomain) getAttributeInternal(IMGBFILE);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG_BFILE using the alias name ImgBfile.
     * @param value value to set the IMG_BFILE
     */
    public void setImgBfile(BFileDomain value) {
        setAttributeInternal(IMGBFILE, value);
    }

    /**
     * Gets the attribute value for ACTV using the alias name Actv.
     * @return the ACTV
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV using the alias name Actv.
     * @param value value to set the ACTV
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for INACTV_RESN using the alias name InactvResn.
     * @return the INACTV_RESN
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_RESN using the alias name InactvResn.
     * @param value value to set the INACTV_RESN
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Date getInactvDt() {
        return (Date) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ITM_IMG_ENT_ID using the alias name ItmImgEntId.
     * @return the ITM_IMG_ENT_ID
     */
    public Integer getItmImgEntId() {
        return (Integer) getAttributeInternal(ITMIMGENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_IMG_ENT_ID using the alias name ItmImgEntId.
     * @param value value to set the ITM_IMG_ENT_ID
     */
    public void setItmImgEntId(Integer value) {
        setAttributeInternal(ITMIMGENTID, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemLOV1.
     */
    public RowSet getItemLOV1() {
        return (RowSet)getAttributeInternal(ITEMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserLOV1.
     */
    public RowSet getUserLOV1() {
        return (RowSet)getAttributeInternal(USERLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
