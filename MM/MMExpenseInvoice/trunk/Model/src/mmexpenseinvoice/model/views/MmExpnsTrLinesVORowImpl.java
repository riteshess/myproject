package mmexpenseinvoice.model.views;

import adf.utils.ebiz.EbizParams;

import mmexpenseinvoice.model.services.MMExpenseInvoiceAMImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 07 16:08:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmExpnsTrLinesVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMEXPNSTRLINESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        DocId,
        DocIdSrc,
        ExpType,
        ExpId,
        TaxRuleId,
        TaxRuleFlg,
        TaxType,
        TaxCoaId,
        TaxAmtSp,
        TaxAmtBs,
        TaxPer,
        TaxRuleSlno,
        TaxRulePriority,
        TransTaxTypeNm,
        TransTaxCoaId,
        TransHoOrgId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int EXPTYPE = AttributesEnum.ExpType.index();
    public static final int EXPID = AttributesEnum.ExpId.index();
    public static final int TAXRULEID = AttributesEnum.TaxRuleId.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int TAXTYPE = AttributesEnum.TaxType.index();
    public static final int TAXCOAID = AttributesEnum.TaxCoaId.index();
    public static final int TAXAMTSP = AttributesEnum.TaxAmtSp.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int TAXPER = AttributesEnum.TaxPer.index();
    public static final int TAXRULESLNO = AttributesEnum.TaxRuleSlno.index();
    public static final int TAXRULEPRIORITY = AttributesEnum.TaxRulePriority.index();
    public static final int TRANSTAXTYPENM = AttributesEnum.TransTaxTypeNm.index();
    public static final int TRANSTAXCOAID = AttributesEnum.TransTaxCoaId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmExpnsTrLinesVORowImpl() {
    }

    /**
     * Gets MmExpnsTrLinesEO entity object.
     * @return the MmExpnsTrLinesEO
     */
    public EntityImpl getMmExpnsTrLinesEO() {
        return (EntityImpl) getEntity(ENTITY_MMEXPNSTRLINESEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for EXP_TYPE using the alias name ExpType.
     * @return the EXP_TYPE
     */
    public Integer getExpType() {
        return (Integer) getAttributeInternal(EXPTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_TYPE using the alias name ExpType.
     * @param value value to set the EXP_TYPE
     */
    public void setExpType(Integer value) {
        setAttributeInternal(EXPTYPE, value);
    }

    /**
     * Gets the attribute value for EXP_ID using the alias name ExpId.
     * @return the EXP_ID
     */
    public String getExpId() {
        return (String) getAttributeInternal(EXPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_ID using the alias name ExpId.
     * @param value value to set the EXP_ID
     */
    public void setExpId(String value) {
        setAttributeInternal(EXPID, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_ID using the alias name TaxRuleId.
     * @return the TAX_RULE_ID
     */
    public Integer getTaxRuleId() {
        return (Integer) getAttributeInternal(TAXRULEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_ID using the alias name TaxRuleId.
     * @param value value to set the TAX_RULE_ID
     */
    public void setTaxRuleId(Integer value) {
        setAttributeInternal(TAXRULEID, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE using the alias name TaxType.
     * @return the TAX_TYPE
     */
    public Integer getTaxType() {
        return (Integer) getAttributeInternal(TAXTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE using the alias name TaxType.
     * @param value value to set the TAX_TYPE
     */
    public void setTaxType(Integer value) {
        setAttributeInternal(TAXTYPE, value);
    }

    /**
     * Gets the attribute value for TAX_COA_ID using the alias name TaxCoaId.
     * @return the TAX_COA_ID
     */
    public Integer getTaxCoaId() {
        return (Integer) getAttributeInternal(TAXCOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_COA_ID using the alias name TaxCoaId.
     * @param value value to set the TAX_COA_ID
     */
    public void setTaxCoaId(Integer value) {
        setAttributeInternal(TAXCOAID, value);
    }

    /**
     * Gets the attribute value for TAX_AMT_SP using the alias name TaxAmtSp.
     * @return the TAX_AMT_SP
     */
    public Number getTaxAmtSp() {
        return (Number) getAttributeInternal(TAXAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT_SP using the alias name TaxAmtSp.
     * @param value value to set the TAX_AMT_SP
     */
    public void setTaxAmtSp(Number value) {
        setAttributeInternal(TAXAMTSP, value);
    }

    /**
     * Gets the attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @return the TAX_AMT_BS
     */
    public Number getTaxAmtBs() {
        return (Number) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @param value value to set the TAX_AMT_BS
     */
    public void setTaxAmtBs(Number value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for TAX_PER using the alias name TaxPer.
     * @return the TAX_PER
     */
    public Number getTaxPer() {
        return (Number) getAttributeInternal(TAXPER);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_PER using the alias name TaxPer.
     * @param value value to set the TAX_PER
     */
    public void setTaxPer(Number value) {
        setAttributeInternal(TAXPER, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_SLNO using the alias name TaxRuleSlno.
     * @return the TAX_RULE_SLNO
     */
    public Integer getTaxRuleSlno() {
        return (Integer) getAttributeInternal(TAXRULESLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_SLNO using the alias name TaxRuleSlno.
     * @param value value to set the TAX_RULE_SLNO
     */
    public void setTaxRuleSlno(Integer value) {
        setAttributeInternal(TAXRULESLNO, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_PRIORITY using the alias name TaxRulePriority.
     * @return the TAX_RULE_PRIORITY
     */
    public Integer getTaxRulePriority() {
        return (Integer) getAttributeInternal(TAXRULEPRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_PRIORITY using the alias name TaxRulePriority.
     * @param value value to set the TAX_RULE_PRIORITY
     */
    public void setTaxRulePriority(Integer value) {
        setAttributeInternal(TAXRULEPRIORITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxTypeNm.
     * @return the TransTaxTypeNm
     */
    public String getTransTaxTypeNm() {
        if (getTaxType() != null) {
            MMExpenseInvoiceAMImpl am = (MMExpenseInvoiceAMImpl) this.getApplicationModule();
            ViewObjectImpl vo = am.getLovDispCoaNm1();
            /*  am.getLovTaxTypeId().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            am.getLovTaxTypeId().setNamedWhereClauseParam("CldIdBind", getCldId());
            am.getLovTaxTypeId().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            am.getLovTaxTypeId().setNamedWhereClauseParam("TaxTypeIdBind", getTaxType());
            am.getLovTaxTypeId().executeQuery();
            System.out.println(" tax type nm row count " + am.getLovTaxTypeId().getRowCount() + "--- " +
                               am.getLovTaxTypeId().getEstimatedRowCount());
            Row[] rr = am.getLovTaxTypeId().getFilteredRows("TaxTypeId", getTaxType()); */
            vo.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            vo.setNamedWhereClauseParam("CldIdBind", getCldId());
            vo.setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            vo.setNamedWhereClauseParam("TaxTypeIdBind", getTaxType());
            vo.executeQuery();

            System.out.println(" tax type nm row count " + vo.getRowCount() + "--- " + vo.getEstimatedRowCount());
            Row[] rr = vo.getAllRowsInRange();

            //             Row[] rr = vo.getFilteredRows("TaxTypeId", getTaxType());
            System.out.println(getTaxType() + " tax type row length in row impl : " + rr.length);
            if (rr.length > 0 && rr[0].getAttribute("TaxTypeNm") != null) {
                return rr[0].getAttribute("TaxTypeNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSTAXTYPENM);
            }


        } else {
            return (String) getAttributeInternal(TRANSTAXTYPENM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxTypeNm.
     * @param value value to set the  TransTaxTypeNm
     */
    public void setTransTaxTypeNm(String value) {
        setAttributeInternal(TRANSTAXTYPENM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxCoaId.
     * @return the TransTaxCoaId
     */
    public String getTransTaxCoaId() {
        if (getTaxCoaId() != null) {
            MMExpenseInvoiceAMImpl am = (MMExpenseInvoiceAMImpl) this.getApplicationModule();
            am.getLovTaxCoaId().setNamedWhereClauseParam("BindSlocId", getSlocId());
            am.getLovTaxCoaId().setNamedWhereClauseParam("BindCldId", getCldId());
            am.getLovTaxCoaId().setNamedWhereClauseParam("BindHoOrgId", getTransHoOrgId());
            am.getLovTaxCoaId().setNamedWhereClauseParam("BindCoaId", getTaxCoaId());
            am.getLovTaxCoaId().executeQuery();
            Row[] rr = am.getLovTaxCoaId().getFilteredRows("CoaId", getTaxCoaId());
            if (rr.length > 0 && rr[0].getAttribute("CoaNm") != null) {
                return rr[0].getAttribute("CoaNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSTAXCOAID);
            }
        } else {
            return (String) getAttributeInternal(TRANSTAXCOAID);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxCoaId.
     * @param value value to set the  TransTaxCoaId
     */
    public void setTransTaxCoaId(String value) {
        setAttributeInternal(TRANSTAXCOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return EbizParams.GLBL_HO_ORG_ID();
        // return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }
}

