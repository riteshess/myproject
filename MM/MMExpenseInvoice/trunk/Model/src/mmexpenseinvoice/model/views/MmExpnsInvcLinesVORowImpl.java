package mmexpenseinvoice.model.views;

import mmexpenseinvoice.model.entities.MmExpnsInvcLinesEOImpl;

import mmexpenseinvoice.model.services.MMExpenseInvoiceAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 08 15:52:25 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmExpnsInvcLinesVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMEXPNSINVCLINESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocIdSrc,
        ExpType,
        ExpId,
        ExpAmtSp,
        ExpAmtBs,
        TaxAmtBs,
        TaxAmtSp,
        TotAmtBs,
        TotAmtSp,
        TransDocNo,
        TransExpnsType,
        TransExpnsId,
        TrasnReadOnly,
        TransFileNoView,
        MmExpnsTr,
        LovExpnctype;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int EXPTYPE = AttributesEnum.ExpType.index();
    public static final int EXPID = AttributesEnum.ExpId.index();
    public static final int EXPAMTSP = AttributesEnum.ExpAmtSp.index();
    public static final int EXPAMTBS = AttributesEnum.ExpAmtBs.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int TAXAMTSP = AttributesEnum.TaxAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TRANSDOCNO = AttributesEnum.TransDocNo.index();
    public static final int TRANSEXPNSTYPE = AttributesEnum.TransExpnsType.index();
    public static final int TRANSEXPNSID = AttributesEnum.TransExpnsId.index();
    public static final int TRASNREADONLY = AttributesEnum.TrasnReadOnly.index();
    public static final int TRANSFILENOVIEW = AttributesEnum.TransFileNoView.index();
    public static final int MMEXPNSTR = AttributesEnum.MmExpnsTr.index();
    public static final int LOVEXPNCTYPE = AttributesEnum.LovExpnctype.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmExpnsInvcLinesVORowImpl() {
    }

    /**
     * Gets MmExpnsInvcLinesEO entity object.
     * @return the MmExpnsInvcLinesEO
     */
    public MmExpnsInvcLinesEOImpl getMmExpnsInvcLinesEO() {
        return (MmExpnsInvcLinesEOImpl) getEntity(ENTITY_MMEXPNSINVCLINESEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for EXP_TYPE using the alias name ExpType.
     * @return the EXP_TYPE
     */
    public Integer getExpType() {
        return (Integer) getAttributeInternal(EXPTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_TYPE using the alias name ExpType.
     * @param value value to set the EXP_TYPE
     */
    public void setExpType(Integer value) {
        setAttributeInternal(EXPTYPE, value);
    }

    /**
     * Gets the attribute value for EXP_ID using the alias name ExpId.
     * @return the EXP_ID
     */
    public String getExpId() {
        return (String) getAttributeInternal(EXPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_ID using the alias name ExpId.
     * @param value value to set the EXP_ID
     */
    public void setExpId(String value) {
        setAttributeInternal(EXPID, value);
    }

    /**
     * Gets the attribute value for EXP_AMT_SP using the alias name ExpAmtSp.
     * @return the EXP_AMT_SP
     */
    public Number getExpAmtSp() {
        return (Number) getAttributeInternal(EXPAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_AMT_SP using the alias name ExpAmtSp.
     * @param value value to set the EXP_AMT_SP
     */
    public void setExpAmtSp(Number value) {
        setAttributeInternal(EXPAMTSP, value);
    }

    /**
     * Gets the attribute value for EXP_AMT_BS using the alias name ExpAmtBs.
     * @return the EXP_AMT_BS
     */
    public Number getExpAmtBs() {
        return (Number) getAttributeInternal(EXPAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for EXP_AMT_BS using the alias name ExpAmtBs.
     * @param value value to set the EXP_AMT_BS
     */
    public void setExpAmtBs(Number value) {
        setAttributeInternal(EXPAMTBS, value);
    }

    /**
     * Gets the attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @return the TAX_AMT_BS
     */
    public Number getTaxAmtBs() {
        return (Number) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT_BS using the alias name TaxAmtBs.
     * @param value value to set the TAX_AMT_BS
     */
    public void setTaxAmtBs(Number value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for TAX_AMT_SP using the alias name TaxAmtSp.
     * @return the TAX_AMT_SP
     */
    public Number getTaxAmtSp() {
        return (Number) getAttributeInternal(TAXAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AMT_SP using the alias name TaxAmtSp.
     * @param value value to set the TAX_AMT_SP
     */
    public void setTaxAmtSp(Number value) {
        setAttributeInternal(TAXAMTSP, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(Number value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocNo.
     * @return the TransDocNo
     */
    public String getTransDocNo() {
        if (getDocIdSrc() != null) {
            MMExpenseInvoiceAMImpl am = (MMExpenseInvoiceAMImpl) this.getApplicationModule();
            ViewObjectImpl lovboeno = am.getLovExpenceSrc();
            lovboeno.setNamedWhereClauseParam("bindCldId", getCldId());
            lovboeno.setNamedWhereClauseParam("bindSlocId", getSlocId());
            lovboeno.setNamedWhereClauseParam("bindOrgId", getOrgId());
            lovboeno.executeQuery();

            Row[] rr = lovboeno.getFilteredRows("DocId", getDocIdSrc());
            if (rr.length > 0) {
                return rr[0].getAttribute("TxnDocNo").toString();
            }
        }
        return (String) getAttributeInternal(TRANSDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocNo.
     * @param value value to set the  TransDocNo
     */
    public void setTransDocNo(String value) {
        setAttributeInternal(TRANSDOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExpnsType.
     * @return the TransExpnsType
     */
    public String getTransExpnsType() {
        MMExpenseInvoiceAMImpl am=(MMExpenseInvoiceAMImpl)this.getApplicationModule();
        ViewObjectImpl expndtypevo=am.getLovExpnctype();
        if(getExpType()!=null){
            Row [] rr=expndtypevo.getFilteredRows("AttId", getExpType());
            if(rr.length>0){
                return rr[0].getAttribute("AttNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSEXPNSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExpnsType.
     * @param value value to set the  TransExpnsType
     */
    public void setTransExpnsType(String value) {
        setAttributeInternal(TRANSEXPNSTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExpnsId.
     * @return the TransExpnsId
     */
    public String getTransExpnsId() {
       
        if(getDocIdSrc()!=null){
            MMExpenseInvoiceAMImpl am=(MMExpenseInvoiceAMImpl)this.getApplicationModule();
            if(getExpType().compareTo(new Integer(859))==0){
            ViewObjectImpl expndtypevo=am.getLovDispFrmSrch();
            RowQualifier rq = new RowQualifier(expndtypevo);
            rq.setWhereClause("DocId ='"+getDocIdSrc()+"' and OcId = '"+getExpId()+"'");
          Row [] rr=expndtypevo.getFilteredRows(rq);
//            Row [] rr=expndtypevo.getFilteredRows("DocId",getDocIdSrc());

            if(rr.length>0){
                System.out.println("-----exnpns name-------"+rr.length+"   "+rr[0].getAttribute("ExpnsNm").toString()+"-----"+getExpId()+rq.getExprStr());
                return rr[0].getAttribute("ExpnsNm").toString();
            }
            }else{
                am.getLovOcNmView().setNamedWhereClauseParam("BindCldId", getCldId());
                am.getLovOcNmView().setNamedWhereClauseParam("BindSlocId", getSlocId());
                am.getLovOcNmView().setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                am.getLovOcNmView().setNamedWhereClauseParam("BindOcId", getExpId());
                am.getLovOcNmView().executeQuery();
                Row rr[] = am.getLovOcNmView().getFilteredRows("OcId", getExpId());
                if(rr.length>0 && rr[0].getAttribute("OcNm")!=null){
                    return rr[0].getAttribute("OcNm").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSEXPNSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExpnsId.
     * @param value value to set the  TransExpnsId
     */
    public void setTransExpnsId(String value) {
        setAttributeInternal(TRANSEXPNSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrasnReadOnly.
     * @return the TrasnReadOnly
     */
    public String getTrasnReadOnly() {
        return (String) getAttributeInternal(TRASNREADONLY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrasnReadOnly.
     * @param value value to set the  TrasnReadOnly
     */
    public void setTrasnReadOnly(String value) {
        setAttributeInternal(TRASNREADONLY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFileNoView.
     * @return the TransFileNoView
     */
    public String getTransFileNoView() {
        if (getDocIdSrc() != null) {
            MMExpenseInvoiceAMImpl am = (MMExpenseInvoiceAMImpl) this.getApplicationModule();
            ViewObjectImpl lovboeno = am.getLovExpenceSrc();
            lovboeno.setNamedWhereClauseParam("bindCldId", getCldId());
            lovboeno.setNamedWhereClauseParam("bindSlocId", getSlocId());
            lovboeno.setNamedWhereClauseParam("bindOrgId", getOrgId());
            lovboeno.executeQuery();

            Row[] rr = lovboeno.getFilteredRows("DocId", getDocIdSrc());
            if (rr.length > 0 && rr[0].getAttribute("FileNo")!=null) {
                return rr[0].getAttribute("FileNo").toString();
            }
        }
        return (String) getAttributeInternal(TRANSFILENOVIEW);
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFileNoView.
     * @param value value to set the  TransFileNoView
     */
    public void setTransFileNoView(String value) {
        setAttributeInternal(TRANSFILENOVIEW, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmExpnsTr.
     */
    public RowIterator getMmExpnsTr() {
        return (RowIterator) getAttributeInternal(MMEXPNSTR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovExpnctype.
     */
    public RowSet getLovExpnctype() {
        return (RowSet) getAttributeInternal(LOVEXPNCTYPE);
    }
}

