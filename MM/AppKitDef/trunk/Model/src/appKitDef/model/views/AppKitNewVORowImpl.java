package appKitDef.model.views;

import appKitDef.model.service.KitDefAppAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 21 14:49:58 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppKitNewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        OutputItmId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getOutputItmId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setOutputItmId((String) value);
            }
        },
        CldId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OutputId_Tran {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getOutputId_Tran();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setOutputId_Tran((String) value);
            }
        },
        OutputUom_Trans {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getOutputUom_Trans();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setOutputUom_Trans((String) value);
            }
        },
        TransHoOrgIdNew {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getTransHoOrgIdNew();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setTransHoOrgIdNew((String) value);
            }
        },
        TransSlocId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setTransSlocId((Integer) value);
            }
        },
        TransOrgId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setTransOrgId((String) value);
            }
        },
        TransCldId {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setTransCldId((String) value);
            }
        },
        AppKit {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getAppKit();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        AppKit1 {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getAppKit1();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        AppItmPrfVO1 {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getAppItmPrfVO1();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovUomIDVO {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getLovUomIDVO();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmIdForOutputVO {
            public Object get(AppKitNewVORowImpl obj) {
                return obj.getLovItmIdForOutputVO();
            }

            public void put(AppKitNewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppKitNewVORowImpl object);

        public abstract void put(AppKitNewVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int OUTPUTITMID = AttributesEnum.OutputItmId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int OUTPUTID_TRAN = AttributesEnum.OutputId_Tran.index();
    public static final int OUTPUTUOM_TRANS = AttributesEnum.OutputUom_Trans.index();
    public static final int TRANSHOORGIDNEW = AttributesEnum.TransHoOrgIdNew.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int APPKIT = AttributesEnum.AppKit.index();
    public static final int APPKIT1 = AttributesEnum.AppKit1.index();
    public static final int APPITMPRFVO1 = AttributesEnum.AppItmPrfVO1.index();
    public static final int LOVUOMIDVO = AttributesEnum.LovUomIDVO.index();
    public static final int LOVITMIDFOROUTPUTVO = AttributesEnum.LovItmIdForOutputVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppKitNewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        // return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        // return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputItmId.
     * @return the OutputItmId
     */
    public String getOutputItmId() {
        return (String) getAttributeInternal(OUTPUTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputItmId.
     * @param value value to set the  OutputItmId
     */
    public void setOutputItmId(String value) {
        setAttributeInternal(OUTPUTITMID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        //return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        return (String) getAttributeInternal(CLDID);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputId_Tran.
     * @return the OutputId_Tran
     */
    public String getOutputId_Tran() {
        if (getOutputItmId() != null) {
            KitDefAppAMImpl am = (KitDefAppAMImpl) this.getApplicationModule();
            ViewObjectImpl impl = am.getItemView();
            impl.setNamedWhereClauseParam("BindCldId", getTransCldId());
            impl.setNamedWhereClauseParam("BindSlocId", getTransSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", getTransHoOrgIdNew());
            impl.setNamedWhereClauseParam("BindItemId", getOutputItmId());
            impl.executeQuery();
            Row[] rr = impl.getFilteredRows("ItmId", getOutputItmId());
            if (rr.length > 0 && rr[0].getAttribute("ItmDesc") != null) {
                return rr[0].getAttribute("ItmDesc").toString();
            } else {
                return (String) getAttributeInternal(OUTPUTID_TRAN);
            }
        } else {
            return (String) getAttributeInternal(OUTPUTID_TRAN);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputId_Tran.
     * @param value value to set the  OutputId_Tran
     */
    public void setOutputId_Tran(String value) {
        setAttributeInternal(OUTPUTID_TRAN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputUom_Trans.
     * @return the OutputUom_Trans
     */
    public String getOutputUom_Trans() {
        KitDefAppAMImpl am = (KitDefAppAMImpl) resolvElDC("KitDefAppAMDataControl");

        String outputitm = null;
        String uomDesc = null;

        try {
            outputitm = getOutputItmId();
        } catch (NullPointerException npe) {

        }
        if (outputitm != null) {
            Row[] xx = am.getLovInputItmId1().getFilteredRows("ItmId", outputitm);
            if (xx.length > 0) {
                uomDesc = xx[0].getAttribute("UomBasic").toString();
            }
            return uomDesc;

        } else {
            return (String) getAttributeInternal(OUTPUTUOM_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputUom_Trans.
     * @param value value to set the  OutputUom_Trans
     */
    public void setOutputUom_Trans(String value) {
        setAttributeInternal(OUTPUTUOM_TRANS, value);
    }

    public String resolveEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgIdNew.
     * @return the TransHoOrgIdNew
     */
    public String getTransHoOrgIdNew() {
        //return (String) getAttributeInternal(TRANSHOORGIDNEW);
        return (String) resolveEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgIdNew.
     * @param value value to set the  TransHoOrgIdNew
     */
    public void setTransHoOrgIdNew(String value) {
        setAttributeInternal(TRANSHOORGIDNEW, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        // return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        // return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppKit.
     */
    public RowIterator getAppKit() {
        return (RowIterator) getAttributeInternal(APPKIT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppKit1.
     */
    public RowIterator getAppKit1() {
        return (RowIterator) getAttributeInternal(APPKIT1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppItmPrfVO1.
     */
    public RowSet getAppItmPrfVO1() {
        return (RowSet) getAttributeInternal(APPITMPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIDVO.
     */
    public RowSet getLovUomIDVO() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdForOutputVO.
     */
    public RowSet getLovItmIdForOutputVO() {
        return (RowSet) getAttributeInternal(LOVITMIDFOROUTPUTVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
