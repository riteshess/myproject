package mmgatepass.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmgatepass.model.services.MmGatePassAMImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 18 10:52:34 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmGpEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmGpEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmGpEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmGpEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        WhId {
            public Object get(MmGpEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmGpEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        FyId {
            public Object get(MmGpEOImpl obj) {
                return obj.getFyId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        GpNo {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpNo();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpNo((String) value);
            }
        }
        ,
        GpDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpDt((Timestamp) value);
            }
        }
        ,
        DocTypeSrc {
            public Object get(MmGpEOImpl obj) {
                return obj.getDocTypeSrc();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setDocTypeSrc((Integer) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmGpEOImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        EoId {
            public Object get(MmGpEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        AddsIdEo {
            public Object get(MmGpEOImpl obj) {
                return obj.getAddsIdEo();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setAddsIdEo((String) value);
            }
        }
        ,
        GpOutStat {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpOutStat();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpOutStat((String) value);
            }
        }
        ,
        GpOutDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpOutDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpOutDt((Timestamp) value);
            }
        }
        ,
        GpInStat {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpInStat();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpInStat((String) value);
            }
        }
        ,
        GpInDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getGpInDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setGpInDt((Timestamp) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmGpEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmGpEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmGpEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        Remarks {
            public Object get(MmGpEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        RetFlg {
            public Object get(MmGpEOImpl obj) {
                return obj.getRetFlg();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setRetFlg((String) value);
            }
        }
        ,
        PrjId {
            public Object get(MmGpEOImpl obj) {
                return obj.getPrjId();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        }
        ,
        DocIdTrf {
            public Object get(MmGpEOImpl obj) {
                return obj.getDocIdTrf();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setDocIdTrf((String) value);
            }
        }
        ,
        MmGpItm {
            public Object get(MmGpEOImpl obj) {
                return obj.getMmGpItm();
            }

            public void put(MmGpEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmGpEOImpl object);

        public abstract void put(MmGpEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int GPNO = AttributesEnum.GpNo.index();
    public static final int GPDT = AttributesEnum.GpDt.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ADDSIDEO = AttributesEnum.AddsIdEo.index();
    public static final int GPOUTSTAT = AttributesEnum.GpOutStat.index();
    public static final int GPOUTDT = AttributesEnum.GpOutDt.index();
    public static final int GPINSTAT = AttributesEnum.GpInStat.index();
    public static final int GPINDT = AttributesEnum.GpInDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int RETFLG = AttributesEnum.RetFlg.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int DOCIDTRF = AttributesEnum.DocIdTrf.index();
    public static final int MMGPITM = AttributesEnum.MmGpItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmGpEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmgatepass.model.entities.MmGpEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for GpNo, using the alias name GpNo.
     * @return the value of GpNo
     */
    public String getGpNo() {
        return (String)getAttributeInternal(GPNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpNo.
     * @param value value to set the GpNo
     */
    public void setGpNo(String value) {
        setAttributeInternal(GPNO, value);
    }

    /**
     * Gets the attribute value for GpDt, using the alias name GpDt.
     * @return the value of GpDt
     */
    public Timestamp getGpDt() {
        return (Timestamp)getAttributeInternal(GPDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpDt.
     * @param value value to set the GpDt
     */
    public void setGpDt(Timestamp value) {
        setAttributeInternal(GPDT, value);
    }

    /**
     * Gets the attribute value for DocTypeSrc, using the alias name DocTypeSrc.
     * @return the value of DocTypeSrc
     */
    public Integer getDocTypeSrc() {
        return (Integer)getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypeSrc.
     * @param value value to set the DocTypeSrc
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String)getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for AddsIdEo, using the alias name AddsIdEo.
     * @return the value of AddsIdEo
     */
    public String getAddsIdEo() {
        return (String)getAttributeInternal(ADDSIDEO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsIdEo.
     * @param value value to set the AddsIdEo
     */
    public void setAddsIdEo(String value) {
        setAttributeInternal(ADDSIDEO, value);
    }

    /**
     * Gets the attribute value for GpOutStat, using the alias name GpOutStat.
     * @return the value of GpOutStat
     */
    public String getGpOutStat() {
        return (String)getAttributeInternal(GPOUTSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpOutStat.
     * @param value value to set the GpOutStat
     */
    public void setGpOutStat(String value) {
        setAttributeInternal(GPOUTSTAT, value);
    }

    /**
     * Gets the attribute value for GpOutDt, using the alias name GpOutDt.
     * @return the value of GpOutDt
     */
    public Timestamp getGpOutDt() {
        return (Timestamp)getAttributeInternal(GPOUTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpOutDt.
     * @param value value to set the GpOutDt
     */
    public void setGpOutDt(Timestamp value) {
        setAttributeInternal(GPOUTDT, value);
    }

    /**
     * Gets the attribute value for GpInStat, using the alias name GpInStat.
     * @return the value of GpInStat
     */
    public String getGpInStat() {
        return (String)getAttributeInternal(GPINSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpInStat.
     * @param value value to set the GpInStat
     */
    public void setGpInStat(String value) {
        setAttributeInternal(GPINSTAT, value);
    }

    /**
     * Gets the attribute value for GpInDt, using the alias name GpInDt.
     * @return the value of GpInDt
     */
    public Timestamp getGpInDt() {
        return (Timestamp)getAttributeInternal(GPINDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GpInDt.
     * @param value value to set the GpInDt
     */
    public void setGpInDt(Timestamp value) {
        setAttributeInternal(GPINDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for RetFlg, using the alias name RetFlg.
     * @return the value of RetFlg
     */
    public String getRetFlg() {
        return (String) getAttributeInternal(RETFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetFlg.
     * @param value value to set the RetFlg
     */
    public void setRetFlg(String value) {
        setAttributeInternal(RETFLG, value);
    }

    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for DocIdTrf, using the alias name DocIdTrf.
     * @return the value of DocIdTrf
     */
    public String getDocIdTrf() {
        return (String) getAttributeInternal(DOCIDTRF);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdTrf.
     * @param value value to set the DocIdTrf
     */
    public void setDocIdTrf(String value) {
        setAttributeInternal(DOCIDTRF, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmGpItm() {
        return (RowIterator)getAttributeInternal(MMGPITM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, whId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer UsrId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer SlocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String CldId= resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String WhId=resolvEl("#{pageFlowScope.GLBL_ORG_WH_ID}").toString();
        String txnId =(String)(callStoredFunction(Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] {CldId,SlocId,OrgId,UsrId,new Integer(18530),0}));    //   app.pkg_app.get_txn_id(p_usr_id,p_org_id,p_sloc_id,18505)
                                                //Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] {CldId,SlocId,OrgId,UsrId,new Integer(18529),0})
        setCldId(CldId);
        setSlocId(SlocId);
        setOrgId(OrgId);
        setWhId(WhId);
        setDocId(txnId);
        System.out.println("DocId="+txnId);
        setDocDt(new Timestamp(System.currentTimeMillis()));
        setGpDt(new Timestamp(System.currentTimeMillis()));
        setGpOutStat("N");
        setUsrIdCreate(UsrId);
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }
    public String resolvEl(String data) {
          FacesContext fc = FacesContext.getCurrentInstance();
          Application app = fc.getApplication();
          ExpressionFactory elFactory = app.getExpressionFactory();
          ELContext elContext = fc.getELContext();
          ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
          String msg = valueExp.getValue(elContext).toString();
          return msg;
      }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                MmGatePassAMImpl am = (MmGatePassAMImpl)resolvElDC("MmGatePassAMDataControl");
                st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
     
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) { throw new JboException(e);
                    }
                }
            }
        }
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =
    elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }
    
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Integer UsrId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        if(operation==DML_UPDATE){
         
                   this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
                   this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}
