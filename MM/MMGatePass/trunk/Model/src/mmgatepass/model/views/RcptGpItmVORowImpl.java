package mmgatepass.model.views;

import java.math.BigDecimal;

import java.sql.Timestamp;

import mmgatepass.model.services.MmGatePassAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 03 17:28:40 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RcptGpItmVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        DocDt {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        FyId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        GpNo {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getGpNo();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        GpDt {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getGpDt();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        DocIdSrc {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        EoId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        EoNm {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getEoNm();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        GpInStat {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getGpInStat();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CldId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlocId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OrgId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        WhId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        WhNm {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getWhNm();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        DocId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmId {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmDesc {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmUom {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UomDesc {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getUomDesc();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OkQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getOkQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmUomBs {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UomConvFctr {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        RwkQtyBs {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getRwkQtyBs();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        RwkQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getRwkQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OkQtyBs {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getOkQtyBs();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BalQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getBalQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Totokqty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTotokqty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Totrwkqty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTotrwkqty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Totbalqty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTotbalqty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransRcptQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTransRcptQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setTransRcptQty((Number) value);
            }
        },
        TransRcptFlg {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTransRcptFlg();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setTransRcptFlg((String) value);
            }
        },
        TransTotOkQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTransTotOkQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setTransTotOkQty((Number) value);
            }
        },
        TransTotBalQty {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getTransTotBalQty();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setTransTotBalQty((Number) value);
            }
        },
        RcptGpItmVO1 {
            public Object get(RcptGpItmVORowImpl obj) {
                return obj.getRcptGpItmVO1();
            }

            public void put(RcptGpItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(RcptGpItmVORowImpl object);

        public abstract void put(RcptGpItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int GPNO = AttributesEnum.GpNo.index();
    public static final int GPDT = AttributesEnum.GpDt.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int GPINSTAT = AttributesEnum.GpInStat.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int UOMDESC = AttributesEnum.UomDesc.index();
    public static final int OKQTY = AttributesEnum.OkQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int RWKQTYBS = AttributesEnum.RwkQtyBs.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int OKQTYBS = AttributesEnum.OkQtyBs.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int TOTOKQTY = AttributesEnum.Totokqty.index();
    public static final int TOTRWKQTY = AttributesEnum.Totrwkqty.index();
    public static final int TOTBALQTY = AttributesEnum.Totbalqty.index();
    public static final int TRANSRCPTQTY = AttributesEnum.TransRcptQty.index();
    public static final int TRANSRCPTFLG = AttributesEnum.TransRcptFlg.index();
    public static final int TRANSTOTOKQTY = AttributesEnum.TransTotOkQty.index();
    public static final int TRANSTOTBALQTY = AttributesEnum.TransTotBalQty.index();
    public static final int RCPTGPITMVO1 = AttributesEnum.RcptGpItmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RcptGpItmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute GpNo.
     * @return the GpNo
     */
    public String getGpNo() {
        return (String) getAttributeInternal(GPNO);
    }

    /**
     * Gets the attribute value for the calculated attribute GpDt.
     * @return the GpDt
     */
    public Timestamp getGpDt() {
        return (Timestamp) getAttributeInternal(GPDT);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdSrc.
     * @return the DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute GpInStat.
     * @return the GpInStat
     */
    public String getGpInStat() {
        return (String) getAttributeInternal(GPINSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        return (String) getAttributeInternal(WHNM);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute UomDesc.
     * @return the UomDesc
     */
    public String getUomDesc() {
        return (String) getAttributeInternal(UOMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute OkQty.
     * @return the OkQty
     */
    public Number getOkQty() {
        return (Number) getAttributeInternal(OKQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Gets the attribute value for the calculated attribute UomConvFctr.
     * @return the UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Gets the attribute value for the calculated attribute RwkQtyBs.
     * @return the RwkQtyBs
     */
    public Number getRwkQtyBs() {
        return (Number) getAttributeInternal(RWKQTYBS);
    }

    /**
     * Gets the attribute value for the calculated attribute RwkQty.
     * @return the RwkQty
     */
    public Number getRwkQty() {
        return (Number) getAttributeInternal(RWKQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute OkQtyBs.
     * @return the OkQtyBs
     */
    public Number getOkQtyBs() {
        return (Number) getAttributeInternal(OKQTYBS);
    }

    /**
     * Gets the attribute value for the calculated attribute BalQty.
     * @return the BalQty
     */
    public Number getBalQty() {
        return (Number) getAttributeInternal(BALQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute Totokqty.
     * @return the Totokqty
     */
    public Number getTotokqty() {
        return (Number) getAttributeInternal(TOTOKQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute Totrwkqty.
     * @return the Totrwkqty
     */
    public Number getTotrwkqty() {
        return (Number) getAttributeInternal(TOTRWKQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute Totbalqty.
     * @return the Totbalqty
     */
    public Number getTotbalqty() {
        return (Number) getAttributeInternal(TOTBALQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptQty.
     * @return the TransRcptQty
     */
    public Number getTransRcptQty() {
        if (getAttributeInternal(TRANSRCPTQTY) != null) {
            ///   System.out.println("------>>>>>>>>>>>>>>getTransRcptQty not null " + getAttributeInternal(TRANSRCPTQTY));
            return (Number) getAttributeInternal(TRANSRCPTQTY);
        } else {
            ///    System.out.println("------getTransRcptQty null-------->>>>>>>>>>>>>>>>> " + getBalQty());
            return (Number) getBalQty();
        }
        //return (Number) getAttributeInternal(TRANSRCPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptQty.
     * @param value value to set the  TransRcptQty
     */
    public void setTransRcptQty(Number value) {
        //if (value != null) {
        setAttributeInternal(TRANSRCPTQTY, value);
        MmGatePassAMImpl am = (MmGatePassAMImpl) this.getApplicationModule();
        am.totBalQtyRcptAll();
        //    System.out.println("----------settotBalQty " + am.totBalQtyRcptAll());
        /* } else {
            setAttributeInternal(TRANSRCPTQTY, new Number(0));
        } */
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptFlg.
     * @return the TransRcptFlg
     */
    public String getTransRcptFlg() {
        return ((String) getAttributeInternal(TRANSRCPTFLG) == null ? "N" :
                (String) getAttributeInternal(TRANSRCPTFLG));
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptFlg.
     * @param value value to set the  TransRcptFlg
     */
    public void setTransRcptFlg(String value) {
        setAttributeInternal(TRANSRCPTFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotOkQty.
     * @return the TransTotOkQty
     */
    public Number getTransTotOkQty() {
        return (Number) getAttributeInternal(TRANSTOTOKQTY);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotOkQty.
     * @param value value to set the  TransTotOkQty
     */
    public void setTransTotOkQty(Number value) {
        setAttributeInternal(TRANSTOTOKQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotBalQty.
     * @return the TransTotBalQty
     */
    public Number getTransTotBalQty() {
        return (Number) getAttributeInternal(TRANSTOTBALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotBalQty.
     * @param value value to set the  TransTotBalQty
     */
    public void setTransTotBalQty(Number value) {
        setAttributeInternal(TRANSTOTBALQTY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RcptGpItmVO1.
     */
    public RowSet getRcptGpItmVO1() {
        return (RowSet) getAttributeInternal(RCPTGPITMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

