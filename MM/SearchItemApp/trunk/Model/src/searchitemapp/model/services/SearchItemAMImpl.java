package searchitemapp.model.services;


import java.util.ArrayList;
import java.util.HashMap;

import java.util.Map;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import searchitemapp.model.services.common.SearchItemAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 17 14:38:44 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchItemAMImpl extends ApplicationModuleImpl implements SearchItemAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SearchItemAMImpl() {
    }

    /**
     * Container's getter for Dummy1.
     * @return Dummy1
     */
    public ViewObjectImpl getDummy1() {
        return (ViewObjectImpl) findViewObject("Dummy1");
    }

    public void addpartialgroupNamAm() {
        this.getDummy1().getCurrentRow().setAttribute("transGroup", null);
    }
    public void addpartialattributeNamAm() 
    {
        this.getDummyAtt1().getCurrentRow().setAttribute("attrname", null);
        this.getDummyAtt1().getCurrentRow().setAttribute("attrtype", null);
    }
    public void addpartialdrillattributename()
    {
       this.getDummyDrillAtt1().getCurrentRow().setAttribute("transdrillatttype", null); 
        this.getDummyDrillAtt1().getCurrentRow().setAttribute("attrid", null);
    }
    
    public String resolvEl(String data) {
          FacesContext fc = FacesContext.getCurrentInstance();
          Application app = fc.getApplication();
          ExpressionFactory elFactory = app.getExpressionFactory();
          ELContext elContext = fc.getELContext();
          ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
          String msg = valueExp.getValue(elContext).toString();
          return msg;
      }
    public void setbindonPageLoad() 
    {
        String cld_id =  resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString(); 
        Integer sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()); 
        String ho_org_id =  resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString(); 
        this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", "P");
        //System.out.println(this.getAppItemAttId1().getQuery());
        this.getAppItemAttId1().executeQuery();  
//        ViewObjectImpl voi = this.getAppItemAttId1();
//        String pd1=voi.getQuery();
//        System.out.println(pd1);
//        String que = voi.getQuery()+" WHERE 1=2 ";
//        System.out.println("Initial query"+que);
//        
//        voi.setQuery(que);
//        voi.executeQuery();
            getAppGrp1().setWhereClause("CLD_ID= '"+cld_id+"' AND HO_ORG_ID='"+ho_org_id+"' AND SLOC_ID ="+sloc_id);   
            getAppGrp1().executeQuery();
    
    }
    
    public void searchGrpAttrId(HashMap grpId , ArrayList grpname ,ArrayList attrname ,HashMap attrId) 
    {
           Object matchvalue= this.getDummyAllAnyMatch1().getCurrentRow().getAttribute("transnewmatch");
        ViewObjectImpl voi = this.getAppItemAttId1();
//        voi.setWhereClause(null);
//        voi.executeQuery();
//        String pd1=voi.getQuery();
//        System.out.println("before setting where clause in search--"+pd1);
//        String que = voi.getQuery()+" WHERE 1=2 ";
//        System.out.println("after setting where clause in search--"+que);
//        
//        voi.setQuery(que);
//            voi.executeQuery();  
        
        System.out.println("value ofgrp id map >>> "+grpId);
        System.out.println("value of grp name array  >> "+grpname);
        System.out.println("value of attrib id map >>> "+attrId);
        System.out.println("value of attrbi name array  >> "+attrname);
        
        
        ViewCriteria vc=voi.getViewCriteria("AppItemAttIdVOCriteria");
        voi.applyViewCriteria(vc);
        voi.setNamedWhereClauseParam("bindgrpId", "P");
        voi.executeQuery();  
     
     
      if(matchvalue != null)
      {       
        if(grpId.size()>0 && attrId.size() >0 && matchvalue.equals("N"))
        {
            System.out.println(" grp yes attribute Yes match N");
            //voi.setWhereClause(null);
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
          // this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
         //  this.getAppItemAttId1().executeQuery();
        
           int j = grpId.size()-1;
           for(int i = 0;i<grpId.size();i++) 
            {
               //String ab = grpname.get(i).toString();   // 05
              // String newgrpId = (String) grpId.get(ab); // 05
              
              String newgrpId = grpname.get(i).toString();
                System.out.println("newgrpId  : "+newgrpId);
                sb.append("'"+newgrpId+"'"); 
                if(i==j) 
                {
                    sb.append(")");  
                }
                else 
                {
                    sb.append(" or A.grp_id =");    
                }
                
            }
           
           int k= attrId.size()-1;
           
           sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
    
           
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = attrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                 sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append("))");  
                 }
                 else 
                 {
                     sb.append(" or X.ATT_ID =");    
                 }
                 
             }
            System.out.println(sb.toString());
            
           
          
//           voi.executeQuery();
            //voi.setWhereClause(sb.toString());
        voi.setQuery(sb.toString());
            voi.executeQuery();  
        }
        else if(grpId.size() == 0 && attrId.size() > 0 && matchvalue.equals("N")) 
        {
            System.out.println(" grp N attribute Y match N");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
            //this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
           
            
            int k= attrId.size()-1;
            
            sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
            
            
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = attrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                 sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append("))");  
                 }
                 else 
                 {
                     sb.append(" or X.ATT_ID =");    
                 }
                 
             }
            System.out.println(sb.toString());
            
            voi.setQuery(sb.toString());
            voi.executeQuery();  
        }
        else if(grpId.size()>0 && attrId.size() == 0 && matchvalue.equals("N"))
        {
            System.out.println(" grp yes attribute N match N");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
           // this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
            System.out.println("grp id  2>>> "+grpId);
            int j = grpId.size()-1;
            for(int i = 0;i<grpId.size();i++)
            {
                System.out.println(i+" i and j balue "+j);
               //String ab = grpname.get(i).toString(); //05
              // String newgrpId = (String) grpId.get(ab);  //05
              String newgrpId = grpname.get(i).toString(); 
                System.out.println(newgrpId+"  newgrpId  "+i+" i and j balue "+j);
                sb.append("'"+newgrpId+"'"); 
                if(i==j) 
                {
                    sb.append(")");  
                }
                else 
                {
                    sb.append(" or A.grp_id =");    
                }
                
            }
            
      
            
          //  sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID )");
            
            
         
            System.out.println(sb.toString());
            
            
            
            //           voi.executeQuery();
            //voi.setWhereClause(sb.toString());
            voi.setQuery(sb.toString());
            voi.executeQuery();    
        }
        else if(grpId.size()>0 && attrId.size() >0 && matchvalue.equals("L"))
        {
            System.out.println(" grp yes attribute Y match L");
            //voi.setWhereClause(null);
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
          // this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
         //  this.getAppItemAttId1().executeQuery();
        
           int j = grpId.size()-1;
           for(int i = 0;i<grpId.size();i++) 
            {
              // String ab = grpname.get(i).toString(); // 05
              // String newgrpId = (String) grpId.get(ab); //05
              String newgrpId = grpname.get(i).toString();
               System.out.println(" newgrpId  "+newgrpId);
                sb.append("'"+newgrpId+"'"); 
                if(i==j) 
                {
                    sb.append(")");  
                }
                else 
                {
                    sb.append(" and A.grp_id =");    
                }
                
            }
           
           int k= attrId.size()-1;
           
           /*  
           sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
    
           
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = attrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                 sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append("))");  
                 }
                 else 
                 {
                     sb.append(" and X.ATT_ID =");    
                 }
                 
             } */
           sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND X.ATT_ID =");
             
             for(int i = 0;i<attrId.size();i++) 
              {
                 String ab = attrname.get(i).toString();
                 String newgrpId = (String) attrId.get(ab);
                 if(i == 0){
                     sb.append("'"+newgrpId+"'"); 
                 }else{
                     sb.append(" AND EXISTS (SELECT 1 FROM APP.APP$ITM$ATT Y WHERE Y.CLD_ID = A.CLD_ID AND Y.SLOC_ID = A.SLOC_ID AND Y.HO_ORG_ID = A.HO_ORG_ID AND Y.ITM_ID =X.ITM_ID AND ATT_ID = ");
                     sb.append("'"+newgrpId+"'");
                     sb.append(")"); 
                 }
                 // sb.append("'"+newgrpId+"'"); 
                  if(i==k) 
                  {
                      sb.append(")");  
                  }
                  /* else 
                  {
                      sb.append(" and X.ATT_ID =");    
                  } */
                  
              }
             System.out.println("L grp No att yes"+sb.toString());
             
            System.out.println(sb.toString());
            
           
          
//           voi.executeQuery();
            //voi.setWhereClause(sb.toString());
        voi.setQuery(sb.toString());
            voi.executeQuery();
        }
        else if(grpId.size() == 0 && attrId.size() > 0 && matchvalue.equals("L")) 
        {
            System.out.println(" grp N attribute yes match L");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
            //this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
           
            
            int k= attrId.size()-1;
            
          //  sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
          sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND X.ATT_ID =");
            
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = attrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                if(i == 0){
                    sb.append("'"+newgrpId+"'"); 
                }else{
                    sb.append(" AND EXISTS (SELECT 1 FROM APP.APP$ITM$ATT Y WHERE Y.CLD_ID = A.CLD_ID AND Y.SLOC_ID = A.SLOC_ID AND Y.HO_ORG_ID = A.HO_ORG_ID AND Y.ITM_ID =X.ITM_ID AND ATT_ID = ");
                    sb.append("'"+newgrpId+"'");
                    sb.append(")"); 
                }
                // sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append(")");  
                 }
                 /* else 
                 {
                     sb.append(" and X.ATT_ID =");    
                 } */
                 
             }
            System.out.println("L grp No att yes"+sb.toString());
            
            voi.setQuery(sb.toString());
            voi.executeQuery();  
        }
        else if(grpId.size()>0 && attrId.size() == 0 && matchvalue.equals("L"))
        {
            System.out.println(" grp yes attribute N match N");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
           // this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
            int j = grpId.size()-1;
            for(int i = 0;i<grpId.size();i++)
            {
              // String ab = grpname.get(i).toString(); // 05
              // String newgrpId = (String) grpId.get(ab); //05
                String newgrpId = grpname.get(i).toString();
                System.out.println("newgrpId   "+newgrpId);
                sb.append("'"+newgrpId+"'"); 
                if(i==j) 
                {
                    sb.append(")");  
                }
                else 
                {
                    sb.append(" and A.grp_id =");    
                }
                
            }
            
        
            
            sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID )");
            
            
         
            System.out.println(sb.toString());
            
            
            
            //           voi.executeQuery();
            //voi.setWhereClause(sb.toString());
            voi.setQuery(sb.toString());
            voi.executeQuery();    
        } else 
            {
            System.out.println("else block");

                   vc=voi.getViewCriteria("AppItemAttIdVOCriteria");
                   voi.applyViewCriteria(vc);
                   voi.setNamedWhereClauseParam("bindgrpId", "P");
                   voi.executeQuery(); 
            
            }
      }
      else
      {
          System.out.println("Outer else block");

                 vc=voi.getViewCriteria("AppItemAttIdVOCriteria");
                 voi.applyViewCriteria(vc);
                 voi.setNamedWhereClauseParam("bindgrpId", "P");
                 voi.executeQuery();  
      }
        
    }
    public void searchEmpNamAm(HashMap grpId , ArrayList grpname) 
    {
       ViewObjectImpl voi = this.getAppItemPrf1();
        String query = "grp_id =";
        StringBuffer sb =  new StringBuffer();
        sb.append(query);
       if(grpId.size()>0) 
       {
//           this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
//           this.getAppItemPrf1().executeQuery();
           
           int j = grpId.size()-1;
           for(int i = 0;i<grpId.size();i++) 
            {
               String ab = grpname.get(i).toString();
               String newgrpId = (String) grpId.get(ab);
                sb.append("'"+newgrpId+"'"); 
                if(i==j) 
                {
                    
                }
                else 
                {
                    sb.append(" or grp_id =");    
                }
                
            }
            System.out.println(sb.toString());
            voi.setWhereClause(sb.toString());
            voi.executeQuery();  
       }
       else 
       {
           sb.append("'05030100191'"); 
           voi.setWhereClause(sb.toString());
           voi.executeQuery();  
       }
       

    }


    /**
     * Container's getter for AppItemPrf1.
     * @return AppItemPrf1
     */
    public ViewObjectImpl getAppItemPrf1() {
        return (ViewObjectImpl) findViewObject("AppItemPrf1");
    }

    /**
     * Container's getter for DummyAtt1.
     * @return DummyAtt1
     */
    public ViewObjectImpl getDummyAtt1() {
        return (ViewObjectImpl) findViewObject("DummyAtt1");
    }

    /**
     * Container's getter for AppItemAttId1.
     * @return AppItemAttId1
     */
    public ViewObjectImpl getAppItemAttId1() {
        return (ViewObjectImpl) findViewObject("AppItemAttId1");
    }

    /**
     * Container's getter for DummyCheck1.
     * @return DummyCheck1
     */
    public ViewObjectImpl getDummyCheck1() {
        return (ViewObjectImpl) findViewObject("DummyCheck1");
    }

    /**
     * Container's getter for Test1.
     * @return Test1
     */
    public ViewObjectImpl getTest1() {
        return (ViewObjectImpl) findViewObject("Test1");
    }

    /**
     * Container's getter for LOVChkGrpParent1.
     * @return LOVChkGrpParent1
     */
    public ViewObjectImpl getLOVChkGrpParent1() {
        return (ViewObjectImpl) findViewObject("LOVChkGrpParent1");
    }

    /**
     * Container's getter for LovIncludeAllChild1.
     * @return LovIncludeAllChild1
     */
    public ViewObjectImpl getLovIncludeAllChild1() {
        return (ViewObjectImpl) findViewObject("LovIncludeAllChild1");
    }

    /**
     * Container's getter for RadioSearch1.
     * @return RadioSearch1
     */
    public ViewObjectImpl getRadioSearch1() {
        return (ViewObjectImpl) findViewObject("RadioSearch1");
    }

    /**
     * Container's getter for DummyRadio1.
     * @return DummyRadio1
     */
    public ViewObjectImpl getDummyRadio1() {
        return (ViewObjectImpl) findViewObject("DummyRadio1");
    }

    /**
     * Container's getter for AppGrp1.
     * @return AppGrp1
     */
    public ViewObjectImpl getAppGrp1() {
        return (ViewObjectImpl) findViewObject("AppGrp1");
    }

    /**
     * Container's getter for AppGrp2.
     * @return AppGrp2
     */
    public ViewObjectImpl getAppGrp2() {
        return (ViewObjectImpl) findViewObject("AppGrp2");
    }

    /**
     * Container's getter for ParentGrpIdAndGrpIdVL1.
     * @return ParentGrpIdAndGrpIdVL1
     */
    public ViewLinkImpl getParentGrpIdAndGrpIdVL1() {
        return (ViewLinkImpl) findViewLink("ParentGrpIdAndGrpIdVL1");
    }

    /**
     * Container's getter for DummyMatch1.
     * @return DummyMatch1
     */
    public ViewObjectImpl getDummyMatch1() {
        return (ViewObjectImpl) findViewObject("DummyMatch1");
    }

    /**
     * Container's getter for DummyAllAnyMatch1.
     * @return DummyAllAnyMatch1
     */
    public ViewObjectImpl getDummyAllAnyMatch1() {
        return (ViewObjectImpl) findViewObject("DummyAllAnyMatch1");
    }

    /**
     * Container's getter for DummyDrillAtt1.
     * @return DummyDrillAtt1
     */
    public ViewObjectImpl getDummyDrillAtt1() {
        return (ViewObjectImpl) findViewObject("DummyDrillAtt1");
    }

    /**
     * Container's getter for LOVDrillAtttype1.
     * @return LOVDrillAtttype1
     */
    public ViewObjectImpl getLOVDrillAtttype1() {
        return (ViewObjectImpl) findViewObject("LOVDrillAtttype1");
    }
    
    public void searchdrillGrpAttrId(String grpId ,ArrayList drillattrname ,HashMap attrId)
    {
        Object matchvalue= this.getDummyAllAnyMatch1().getCurrentRow().getAttribute("transnewmatch");
        ViewObjectImpl voi = this.getAppItemAttId1();
       
        
        ViewCriteria vc=voi.getViewCriteria("AppItemAttIdVOCriteria");
        voi.applyViewCriteria(vc);
       // voi.setNamedWhereClauseParam("bindgrpId", "P");
       voi.setNamedWhereClauseParam("bindgrpId", grpId);
        voi.executeQuery();
        if(matchvalue != null)
        { 
        if(attrId.size() > 0 && matchvalue.equals("N")) 
        {
            System.out.println("Drill and attt yes match L");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = '"+grpId+"') ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
            //this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
           
            
            int k= attrId.size()-1;
            
            sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
            
            
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = drillattrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                 sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append("))");  
                 }
                 else 
                 {
                     sb.append(" or X.ATT_ID =");    
                 }
                 
             }
            System.out.println(sb.toString());
            
            voi.setQuery(sb.toString());
            voi.executeQuery();  
        }else         if(attrId.size() > 0 && matchvalue.equals("L")) 
        {
            System.out.println("Drill and attt yes match L");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = '"+grpId+"') ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
            //this.getAppItemAttId1().setNamedWhereClauseParam("bindgrpId", null);
            //           this.getAppItemAttId1().executeQuery();
            
           
            
            int k= attrId.size()-1;
            
            /*  sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND (X.ATT_ID =");
            
            
            for(int i = 0;i<attrId.size();i++) 
             {
                String ab = drillattrname.get(i).toString();
                String newgrpId = (String) attrId.get(ab);
                 sb.append("'"+newgrpId+"'"); 
                 if(i==k) 
                 {
                     sb.append("))");  
                 }
                 else 
                 {
                     sb.append(" or X.ATT_ID =");    
                 }
                 
             } */
            sb.append(" AND (A.ITM_ID) IN (SELECT X.ITM_ID FROM APP.APP$ITM$ATT X WHERE X.CLD_ID = A.CLD_ID AND X.SLOC_ID = A.SLOC_ID AND X.HO_ORG_ID = A.HO_ORG_ID AND X.ATT_ID =");
              
              for(int i = 0;i<attrId.size();i++) 
               {
                  String ab = drillattrname.get(i).toString();
                  String newgrpId = (String) attrId.get(ab);
                  if(i == 0){
                      sb.append("'"+newgrpId+"'"); 
                  }else{
                      sb.append(" AND EXISTS (SELECT 1 FROM APP.APP$ITM$ATT Y WHERE Y.CLD_ID = A.CLD_ID AND Y.SLOC_ID = A.SLOC_ID AND Y.HO_ORG_ID = A.HO_ORG_ID AND Y.ITM_ID =X.ITM_ID AND ATT_ID = ");
                      sb.append("'"+newgrpId+"'");
                      sb.append(")"); 
                  }
                  // sb.append("'"+newgrpId+"'"); 
                   if(i==k) 
                   {
                       sb.append(")");  
                   }
                   /* else 
                   {
                       sb.append(" and X.ATT_ID =");    
                   } */
                   
               }
            System.out.println(sb.toString());
            
            voi.setQuery(sb.toString());
            voi.executeQuery();  
        }else
        {
            System.out.println("else part");
            voi.removeViewCriteria("AppItemAttIdVOCriteria");
            String pd=voi.getQuery();
            System.out.println(pd);
            
            String query = voi.getQuery()+" WHERE A.SLOC_ID = B.SLOC_ID(+) AND A.CLD_ID = B.CLD_ID(+) AND A.HO_ORG_ID = B.HO_ORG_ID(+) AND A.ITM_ID    = B.ITM_ID(+) AND A.GRP_ID    = C.GRP_ID(+) AND A.HO_ORG_ID = C.HO_ORG_ID AND A.UOM_BASIC = D.UOM_ID AND A.CLD_ID    =D.CLD_ID AND A.SLOC_ID   =D.SLOC_ID AND (A.GRP_ID = '"+grpId+"') ";
            StringBuffer sb =  new StringBuffer();
            sb.append(query);
            System.out.println(sb.toString());
            
            voi.setQuery(sb.toString());
            voi.executeQuery(); 
        }
        }
        
        
        
    }
    
    
    
}

