package inventoryreportapp.model.views;

import inventoryreportapp.model.views.common.RptTransVORow;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 03 09:21:40 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RptTransVORowImpl extends ViewRowImpl implements RptTransVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        RptNmTrans,
        RptFlNmTrans,
        RptDesTrans,
        BGColorTrans,
        HeadColorTrans,
        MarginDetail,
        orgViewTrans,
        RptDownCBTrans,
        LovRptAppVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int RPTNMTRANS = AttributesEnum.RptNmTrans.index();
    public static final int RPTFLNMTRANS = AttributesEnum.RptFlNmTrans.index();
    public static final int RPTDESTRANS = AttributesEnum.RptDesTrans.index();
    public static final int BGCOLORTRANS = AttributesEnum.BGColorTrans.index();
    public static final int HEADCOLORTRANS = AttributesEnum.HeadColorTrans.index();
    public static final int MARGINDETAIL = AttributesEnum.MarginDetail.index();
    public static final int ORGVIEWTRANS = AttributesEnum.orgViewTrans.index();
    public static final int RPTDOWNCBTRANS = AttributesEnum.RptDownCBTrans.index();
    public static final int LOVRPTAPPVO1 = AttributesEnum.LovRptAppVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RptTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute RptNmTrans.
     * @return the RptNmTrans
     */
    public String getRptNmTrans() {
        return (String) getAttributeInternal(RPTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptNmTrans.
     * @param value value to set the  RptNmTrans
     */
    public void setRptNmTrans(String value) {
        setAttributeInternal(RPTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptFlNmTrans.
     * @return the RptFlNmTrans
     */
    public String getRptFlNmTrans() {
        return (String) getAttributeInternal(RPTFLNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptFlNmTrans.
     * @param value value to set the  RptFlNmTrans
     */
    public void setRptFlNmTrans(String value) {
        setAttributeInternal(RPTFLNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptDesTrans.
     * @return the RptDesTrans
     */
    public String getRptDesTrans() {
        return (String) getAttributeInternal(RPTDESTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptDesTrans.
     * @param value value to set the  RptDesTrans
     */
    public void setRptDesTrans(String value) {
        setAttributeInternal(RPTDESTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BGColorTrans.
     * @return the BGColorTrans
     */
    public String getBGColorTrans() {
        if (getAttributeInternal(BGCOLORTRANS) == null) {
                    return "D";
                } else
        return (String) getAttributeInternal(BGCOLORTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BGColorTrans.
     * @param value value to set the  BGColorTrans
     */
    public void setBGColorTrans(String value) {
        setAttributeInternal(BGCOLORTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HeadColorTrans.
     * @return the HeadColorTrans
     */
    public String getHeadColorTrans() {
        if (getAttributeInternal(HEADCOLORTRANS) == null) {
                    return "D";
                } else
        return (String) getAttributeInternal(HEADCOLORTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HeadColorTrans.
     * @param value value to set the  HeadColorTrans
     */
    public void setHeadColorTrans(String value) {
        setAttributeInternal(HEADCOLORTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MarginDetail.
     * @return the MarginDetail
     */
    public String getMarginDetail() {
        return (String) getAttributeInternal(MARGINDETAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MarginDetail.
     * @param value value to set the  MarginDetail
     */
    public void setMarginDetail(String value) {
        setAttributeInternal(MARGINDETAIL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute orgViewTrans.
     * @return the orgViewTrans
     */
    public String getorgViewTrans() {
        return (String) getAttributeInternal(ORGVIEWTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute orgViewTrans.
     * @param value value to set the  orgViewTrans
     */
    public void setorgViewTrans(String value) {
        setAttributeInternal(ORGVIEWTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptDownCBTrans.
     * @return the RptDownCBTrans
     */
    public String getRptDownCBTrans() {
        return (String) getAttributeInternal(RPTDOWNCBTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptDownCBTrans.
     * @param value value to set the  RptDownCBTrans
     */
    public void setRptDownCBTrans(String value) {
        setAttributeInternal(RPTDOWNCBTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRptAppVO1.
     */
    public RowSet getLovRptAppVO1() {
        return getRefreshedAppRptLOV();
       // return (RowSet) getAttributeInternal(LOVRPTAPPVO1);
    }
    RowSet getRefreshedAppRptLOV() {
             LovRptAppVOImpl LovVo = (LovRptAppVOImpl)((RowSet)getAttributeInternal(LOVRPTAPPVO1)).getViewObject();
             LovVo.executeQuery();
             return LovVo.getRowSet();
         }
}

