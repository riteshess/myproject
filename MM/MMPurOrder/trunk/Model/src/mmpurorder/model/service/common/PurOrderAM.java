package mmpurorder.model.service.common;

import java.util.ArrayList;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Date;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 12 12:37:15 IST 2014
// ---------------------------------------------------------------------
public interface PurOrderAM extends ApplicationModule {
    void criteriaForSupplierList();

    String amendPo(String P_CLDID, String p_orgid, Integer p_slocid, String p_doc_id, String p_ref_doc_id,
                   Integer p_usr_id);

    Integer getUsrLvl(Integer SlocId, String CldId, String OrgId, Integer usr_id, String WfNum, String PoDocId);

    String getWfNo(Integer sloc_id, String cld_id, String org_id, Integer doc_no);

    Integer insIntoTxn(Integer sloc_id, String cld_id, String pOrgId, Integer PO_DOC_NO, String WfNum, String poDocId,
                       Integer usr_idFrm, Integer usr_idTo, Integer levelTo, Integer levelFrm, String action,
                       String remark, oracle.jbo.domain.Number amount, String post);

    Integer pendingPOCheck(Integer SlocId, String CldId, String OrgId, Integer PoDocNo);

    void resetQuery();

    String resolvEl(String data);

    void saveAsPO();

    void searchQuery(Integer SlocId, String OrgId, String DocId, String CldId);

    void CancelOrShortclosePo(String vis);

    Integer checkOpenPurchaseValidity(String orgId, String cldId, Integer slocId, String refDocId);

    Integer checkOpenPurchaseDateValidity(Date opDate);

    void addContainerDetails();

    void addPortsDetails(Integer trvlSeqNo);

    String isPartNameDuplicate(String porName);

    String isContainerNameDuplicate(String cntnrName);

    ArrayList<String> getSuggestedItemDesc(String itmStr);

    String applyDirectTax(String itmId, String uom);

    String populateCalculations(String p_cld_id, Integer p_sloc_id, String p_org_id, Integer p_usr_id);

    void setCurrentOrgId();

    void addAllRequiredOC();


    Integer isOcDuplicate(String ocId);

    Integer checkAllOcApply();

    Integer chkAllQcAmtEnter();

    void changeOcCurrncy(String curr);

    String lcInsertion();

    void addOthercharges(String ocId, Integer coaId, Integer ocCat);

    String getFlexiFieldFilter();

    String validateFlexi();

    ArrayList<String> getSuggestedSupplierNm(String eoStr);

    Integer checkLcDetails();

    void filterFileDescription();

    Boolean chkCcApplicableOrNot();

    void generateCostCenterHeaderWise();

    void declareGlblValuesForCC();

    void deleteCostCenterItem();

    void updateCostCenterAmt();

    Integer defaultTaxRuleForPo();

    Integer addPaymentSchlForCpo();

    Integer addDlvSchAuto();

    String chkPoCancelOrNo();

    Integer insPoItemFromPR();

    String chkCostCenterFinelize();

    Integer closePoItemQuantity();

    String isPoItmClose();

    String viewWFData();

    String quotDocId(String quotNo);
}
