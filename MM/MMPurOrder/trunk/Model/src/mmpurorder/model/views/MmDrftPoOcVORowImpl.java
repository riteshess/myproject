package mmpurorder.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmpurorder.model.entities.MmDrftPoOcEOImpl;
import mmpurorder.model.service.PurOrderAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 19 14:47:01 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoOcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMDRFTPOOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        DocId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        CoaId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        },
        CldId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        OcId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOcId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOcId((String) value);
            }
        },
        EntityId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        },
        OcAmtBs {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOcAmtBs();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOcAmtBs((Number) value);
            }
        },
        OcAmtSp {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOcAmtSp();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOcAmtSp((Number) value);
            }
        },
        OcDesc {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOcDesc();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOcDesc((Integer) value);
            }
        },
        TranType {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTranType();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTranType((String) value);
            }
        },
        UsrIdCreate {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UsrIdMod {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        AmdNo {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAmdNo((Integer) value);
            }
        },
        AmdDt {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAmdDt((Date) value);
            }
        },
        CurrConvFctrOc {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getCurrConvFctrOc();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setCurrConvFctrOc((Number) value);
            }
        },
        CurrIdSpOc {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getCurrIdSpOc();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setCurrIdSpOc((Integer) value);
            }
        },
        OcAmtSpOc {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getOcAmtSpOc();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setOcAmtSpOc((Number) value);
            }
        },
        TransOcAmtBs {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransOcAmtBs();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTransOcAmtBs((Number) value);
            }
        },
        TransCoaNm {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransCoaNm();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTransCoaNm((String) value);
            }
        },
        TransHoOrgId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TranspageCoaNm {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTranspageCoaNm();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTranspageCoaNm((String) value);
            }
        },
        TransOcCurrency {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransOcCurrency();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTransOcCurrency((String) value);
            }
        },
        TransOcCurrIdBs {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransOcCurrIdBs();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setTransOcCurrIdBs((Integer) value);
            }
        },
        TransOcName {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getTransOcName();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovCoaId {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getLovCoaId();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOcDesc {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getLovOcDesc();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovTranType {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getLovTranType();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovCurrencyVO {
            public Object get(MmDrftPoOcVORowImpl obj) {
                return obj.getLovCurrencyVO();
            }

            public void put(MmDrftPoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static int firstIndex = 0;

        public abstract Object get(MmDrftPoOcVORowImpl object);

        public abstract void put(MmDrftPoOcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int CURRCONVFCTROC = AttributesEnum.CurrConvFctrOc.index();
    public static final int CURRIDSPOC = AttributesEnum.CurrIdSpOc.index();
    public static final int OCAMTSPOC = AttributesEnum.OcAmtSpOc.index();
    public static final int TRANSOCAMTBS = AttributesEnum.TransOcAmtBs.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSPAGECOANM = AttributesEnum.TranspageCoaNm.index();
    public static final int TRANSOCCURRENCY = AttributesEnum.TransOcCurrency.index();
    public static final int TRANSOCCURRIDBS = AttributesEnum.TransOcCurrIdBs.index();
    public static final int TRANSOCNAME = AttributesEnum.TransOcName.index();
    public static final int LOVCOAID = AttributesEnum.LovCoaId.index();
    public static final int LOVOCDESC = AttributesEnum.LovOcDesc.index();
    public static final int LOVTRANTYPE = AttributesEnum.LovTranType.index();
    public static final int LOVCURRENCYVO = AttributesEnum.LovCurrencyVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoOcVORowImpl() {
    }
    
    /**
    *Global round digit for Amount
    * @return
    */
    
    public Integer getGlblRoundAmtDigit(){
    if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT1}")!=null){
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT1}"));
    }else{
        return 6;
    }
    }
    /**
    *Global round digit for Quantity
    * @return
    */
    
        public Integer getGlblRoundQtyDigit(){
        if(resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT1}")!=null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT1}"));
        }else{
            return 6;
        }
        
    }
        /**
     *Global round digit for currency rate
     * @return
     */
        
     public Integer getGlblRoundCurrRateDigit(){
     if(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT1}")!=null){
         return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT1}"));
     }else{
         return 6;
     }
     
     }
    

    /**
     * Gets MmDrftPoOcEO entity object.
     * @return the MmDrftPoOcEO
     */
    public MmDrftPoOcEOImpl getMmDrftPoOcEO() {
        return (MmDrftPoOcEOImpl) getEntity(ENTITY_MMDRFTPOOCEO);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @return the OC_AMT_BS
     */
    public Number getOcAmtBs() {
        return (Number) getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @param value value to set the OC_AMT_BS
     */
    public void setOcAmtBs(Number value) {
        System.out.println("MMDrftPoOcVORowIMPL -> setOcAmtBs=" + value);
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * Gets the attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @return the OC_AMT_SP
     */
    public Number getOcAmtSp() {
        return (Number) getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @param value value to set the OC_AMT_SP
     */
    public void setOcAmtSp(Number value) {
        System.out.println("MMDrftPoOcVORowIMPL -> setOcAmtsp=" + value);
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public Integer getOcDesc() {
        return (Integer) getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for AMD_NO using the alias name AmdNo.
     * @return the AMD_NO
     */
    public Integer getAmdNo() {
        return (Integer) getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_NO using the alias name AmdNo.
     * @param value value to set the AMD_NO
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for AMD_DT using the alias name AmdDt.
     * @return the AMD_DT
     */
    public Date getAmdDt() {
        return (Date) getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_DT using the alias name AmdDt.
     * @param value value to set the AMD_DT
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for OC_ID using the alias name OcId.
     * @return the OC_ID
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_ID using the alias name OcId.
     * @param value value to set the OC_ID
     */
    public void setOcId(String value) {
        setAttributeInternal(OCID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR_OC using the alias name CurrConvFctrOc.
     * @return the CURR_CONV_FCTR_OC
     */
    public Number getCurrConvFctrOc() {
        return (Number) getAttributeInternal(CURRCONVFCTROC);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR_OC using the alias name CurrConvFctrOc.
     * @param value value to set the CURR_CONV_FCTR_OC
     */
    public void setCurrConvFctrOc(Number value) {
        setAttributeInternal(CURRCONVFCTROC, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP_OC using the alias name CurrIdSpOc.
     * @return the CURR_ID_SP_OC
     */
    public Integer getCurrIdSpOc() {
        return (Integer) getAttributeInternal(CURRIDSPOC);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP_OC using the alias name CurrIdSpOc.
     * @param value value to set the CURR_ID_SP_OC
     */
    public void setCurrIdSpOc(Integer value) {
        setAttributeInternal(CURRIDSPOC, value);
    }

    /**
     * Gets the attribute value for OC_AMT_SP_OC using the alias name OcAmtSpOc.
     * @return the OC_AMT_SP_OC
     */
    public Number getOcAmtSpOc() {
        return (Number) getAttributeInternal(OCAMTSPOC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_SP_OC using the alias name OcAmtSpOc.
     * @param value value to set the OC_AMT_SP_OC
     */
    public void setOcAmtSpOc(Number value) {
        if (value == null) {
            value = new Number(0);

        }
        PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
        Number poCurrF = new Number(1);
        if (am.getMmDrftPo().getCurrentRow() != null) {
            if (am.getMmDrftPo().getCurrentRow().getAttribute("CurrConvFctr") != null)
                poCurrF = (Number)((Number) am.getMmDrftPo().getCurrentRow().getAttribute("CurrConvFctr")).round(getGlblRoundCurrRateDigit());
        }
        if (getCurrConvFctrOc() != null) {
            Number bsAmt = (Number) value.multiply(((Number)getCurrConvFctrOc()).round(getGlblRoundCurrRateDigit()));
            setOcAmtBs((Number) value.multiply((Number)getCurrConvFctrOc().round(getGlblRoundCurrRateDigit())).round(getGlblRoundAmtDigit()));
            setOcAmtSp((Number) bsAmt.divide(poCurrF).round(getGlblRoundAmtDigit()));
            System.out.println(bsAmt + "  bsAmt " + poCurrF + " poCurrF " + value);
        }
        setAttributeInternal(OCAMTSPOC, value);
    }

    /**
     * Gets the attribute value for TRANS_OC_AMT_BS using the alias name TransOcAmtBs.
     * @return the TRANS_OC_AMT_BS
     */
    public Number getTransOcAmtBs() {
        return (Number) getAttributeInternal(TRANSOCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_OC_AMT_BS using the alias name TransOcAmtBs.
     * @param value value to set the TRANS_OC_AMT_BS
     */
    public void setTransOcAmtBs(Number value) {
        setAttributeInternal(TRANSOCAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the TransCoaNm
     */
    public String getTransCoaNm() {
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value) {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        if (getAttributeInternal(TRANSHOORGID) == null) {
            String p_horg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
            System.out.println("phorgId0--oc" + p_horg_id);
            return p_horg_id;
        } else {
            return (String) getAttributeInternal(TRANSHOORGID);
        }
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }


    /**
     * Gets the attribute value for the calculated attribute TranspageCoaNm.
     * @return the TranspageCoaNm
     */
    public String getTranspageCoaNm() {
        if (getAttributeInternal(TRANSPAGECOANM) != null) {
            return (String) getAttributeInternal(TRANSPAGECOANM);
        } else {
            if (getCoaId() != null) {
                PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
                ViewObjectImpl tunevo = am.getLovCoaNmForView();
                tunevo.setNamedWhereClauseParam("bindCoaId", getCoaId());
                tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
                tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
                tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
                tunevo.setNamedWhereClauseParam("bindOrgId", getOrgId());
                tunevo.executeQuery();
                RowQualifier rq = new RowQualifier(tunevo);
                rq.setWhereClause("CoaId = " + getCoaId() + " ");
                Row[] rr1 = tunevo.getFilteredRows(rq);
                if (rr1.length > 0 && rr1[0].getAttribute("CoaNm") != null) {
                    return rr1[0].getAttribute("CoaNm").toString();
                }
                return (String) getAttributeInternal(TRANSPAGECOANM);

            }

        }
        return (String) getAttributeInternal(TRANSPAGECOANM);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranspageCoaNm.
     * @param value value to set the  TranspageCoaNm
     */
    public void setTranspageCoaNm(String value) {
        setAttributeInternal(TRANSPAGECOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcCurrency.
     * @return the TransOcCurrency
     */
    public String getTransOcCurrency() {
        if (getCurrIdSpOc() != null) {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            Row[] rr = am.getLovCurrId().getFilteredRows("CurrId", getCurrIdSpOc());
            if (rr.length > 0 && rr[0].getAttribute("CurrDesc") != null) {
                return rr[0].getAttribute("CurrDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSOCCURRENCY);
            }
        } else {
            return (String) getAttributeInternal(TRANSOCCURRENCY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcCurrency.
     * @param value value to set the  TransOcCurrency
     */
    public void setTransOcCurrency(String value) {
        //        if (value != null) {
        //            if (getCurrConvFctrOc() != null && getOcAmtSpOc() != null) {
        //                setOcAmtBs((Number) getOcAmtSpOc().multiply(getCurrConvFctrOc()).round(6));
        //                if (getOcAmtSpOc().compareTo(new Number(0)) == 1) {
        //                    PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
        //                    Number poCurrF = new Number(1);
        //                    if (am.getMmDrftPo().getCurrentRow() != null) {
        //                        if (am.getMmDrftPo().getCurrentRow().getAttribute("CurrConvFctr") != null)
        //                            poCurrF = (Number) am.getMmDrftPo().getCurrentRow().getAttribute("CurrConvFctr");
        //                    }
        //                    Number ocAmtbs = (Number) getOcAmtSpOc().multiply(getCurrConvFctrOc()).round(6);
        //                    System.out.println(poCurrF + "  poCurrF cur " + getCurrConvFctrOc());
        //                    setOcAmtSp((Number) ocAmtbs.divide(poCurrF).round(6));
        //                }
        //            }
        //        }
        setAttributeInternal(TRANSOCCURRENCY, value);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcCurrIdBs.
     * @return the TransOcCurrIdBs
     */
    public Integer getTransOcCurrIdBs() {
        if (getAttributeInternal(TRANSOCCURRIDBS) != null)
            return (Integer) getAttributeInternal(TRANSOCCURRIDBS);
        else {
            String org = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            Integer currId = (Integer) (callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                                           org }));

            return currId;
        }


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcCurrIdBs.
     * @param value value to set the  TransOcCurrIdBs
     */
    public void setTransOcCurrIdBs(Integer value) {
        setAttributeInternal(TRANSOCCURRIDBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcName.
     * @return the TransOcName
     */
    public String getTransOcName() {
        if (getOcId() != null) {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            am.getLovOcNm().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            am.getLovOcNm().setNamedWhereClauseParam("CldIdBind", getCldId());
            am.getLovOcNm().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            am.getLovOcNm().setNamedWhereClauseParam("OcIdBind", getOcId());
            am.getLovOcNm().executeQuery();
            Row[] rr = am.getLovOcNm().getFilteredRows("OcId", getOcId());
            if (rr.length > 0 && rr[0].getAttribute("OcNm") != null) {
                return rr[0].getAttribute("OcNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSOCNAME);
            }
        } else {
            return (String) getAttributeInternal(TRANSOCNAME);
        }
        // return (String) getAttributeInternal(TRANSOCNAME);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaId.
     */
    public RowSet getLovCoaId() {
        return (RowSet) getAttributeInternal(LOVCOAID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcDesc.
     */
    public RowSet getLovOcDesc() {
        return (RowSet) getAttributeInternal(LOVOCDESC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTranType.
     */
    public RowSet getLovTranType() {
        return (RowSet) getAttributeInternal(LOVTRANTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO.
     */
    public RowSet getLovCurrencyVO() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
