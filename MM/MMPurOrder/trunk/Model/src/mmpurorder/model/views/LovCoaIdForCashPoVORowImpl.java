package mmpurorder.model.views;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 24 17:32:17 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovCoaIdForCashPoVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CoaSlocId {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaSlocId();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CoaCldId {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaCldId();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CoaHoOrgId {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaHoOrgId();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CoaId {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CoaNm {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaNm();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CoaCogId {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getCoaCogId();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        TransZero {
            public Object get(LovCoaIdForCashPoVORowImpl obj) {
                return obj.getTransZero();
            }

            public void put(LovCoaIdForCashPoVORowImpl obj, Object value) {
                obj.setTransZero((Integer) value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LovCoaIdForCashPoVORowImpl object);

        public abstract void put(LovCoaIdForCashPoVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COASLOCID = AttributesEnum.CoaSlocId.index();
    public static final int COACLDID = AttributesEnum.CoaCldId.index();
    public static final int COAHOORGID = AttributesEnum.CoaHoOrgId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int COACOGID = AttributesEnum.CoaCogId.index();
    public static final int TRANSZERO = AttributesEnum.TransZero.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovCoaIdForCashPoVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CoaSlocId.
     * @return the CoaSlocId
     */
    public Integer getCoaSlocId() {
        return (Integer) getAttributeInternal(COASLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaCldId.
     * @return the CoaCldId
     */
    public String getCoaCldId() {
        return (String) getAttributeInternal(COACLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaHoOrgId.
     * @return the CoaHoOrgId
     */
    public String getCoaHoOrgId() {
        return (String) getAttributeInternal(COAHOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaCogId.
     * @return the CoaCogId
     */
    public String getCoaCogId() {
        return (String) getAttributeInternal(COACOGID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransZero.
     * @return the TransZero
     */
    public Integer getTransZero() {
        return new Integer(0);
        //  return (Integer) getAttributeInternal(TRANSZERO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransZero.
     * @param value value to set the  TransZero
     */
    public void setTransZero(Integer value) {
        setAttributeInternal(TRANSZERO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

