package mmpurorder.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmpurorder.model.entities.MmDrftPoEOImpl;
import mmpurorder.model.service.PurOrderAMImpl;

import mmpurorder.model.service.common.PurOrderAM;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 07 10:55:31 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMDRFTPOEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        CldId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        PoId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoId((String) value);
            }
        }
        ,
        PoDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoDt((Date) value);
            }
        }
        ,
        PoType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoType((Integer) value);
            }
        }
        ,
        PoBasis {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoBasis();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoBasis((Integer) value);
            }
        }
        ,
        SoGrpId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getSoGrpId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setSoGrpId((String) value);
            }
        }
        ,
        QuotDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getQuotDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setQuotDocId((String) value);
            }
        }
        ,
        RefPoDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getRefPoDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setRefPoDocId((String) value);
            }
        }
        ,
        EoId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        BillAddsId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getBillAddsId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setBillAddsId((String) value);
            }
        }
        ,
        ValidFrmDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getValidFrmDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setValidFrmDt((Date) value);
            }
        }
        ,
        ValidToDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getValidToDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setValidToDt((Date) value);
            }
        }
        ,
        TlrncDays {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTlrncDays();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTlrncDays((Integer) value);
            }
        }
        ,
        SplitPo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getSplitPo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setSplitPo((String) value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        DiscType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        PoAmtBs {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoAmtBs();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoAmtBs((Number) value);
            }
        }
        ,
        PoAmtSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoAmtSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoAmtSp((Number) value);
            }
        }
        ,
        BillingBasis {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getBillingBasis();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setBillingBasis((Integer) value);
            }
        }
        ,
        PoStatus {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoStatus();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoStatus((Integer) value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTlrncQtyType((String) value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTlrncQtyVal((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        TmplDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTmplDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTmplDocId((String) value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String) value);
            }
        }
        ,
        SplitPoDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getSplitPoDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setSplitPoDocId((String) value);
            }
        }
        ,
        AmdNo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAmdNo((Integer) value);
            }
        }
        ,
        AmdDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAmdDt((Date) value);
            }
        }
        ,
        PoMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPoMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPoMode((Integer) value);
            }
        }
        ,
        OrigDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getOrigDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setOrigDocId((String) value);
            }
        }
        ,
        AuthPoNo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getAuthPoNo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAuthPoNo((String) value);
            }
        }
        ,
        FyId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDiscAmtSp((Number) value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDiscAmtBs((Number) value);
            }
        }
        ,
        OpenOrdBasis {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getOpenOrdBasis();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setOpenOrdBasis((Integer) value);
            }
        }
        ,
        OpenOrdVal {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getOpenOrdVal();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setOpenOrdVal((Number) value);
            }
        }
        ,
        OpenOrdUom {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getOpenOrdUom();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setOpenOrdUom((String) value);
            }
        }
        ,
        PlcId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPlcId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPlcId((String) value);
            }
        }
        ,
        Remarks {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        EoIdShpCo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getEoIdShpCo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setEoIdShpCo((Integer) value);
            }
        }
        ,
        EoIdCfa {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getEoIdCfa();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setEoIdCfa((Integer) value);
            }
        }
        ,
        FrtToPay {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getFrtToPay();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setFrtToPay((String) value);
            }
        }
        ,
        ShpmntBasis {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getShpmntBasis();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setShpmntBasis((Integer) value);
            }
        }
        ,
        FileNo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getFileNo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setFileNo((String) value);
            }
        }
        ,
        LcId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLcId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setLcId((String) value);
            }
        }
        ,
        LcBalAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLcBalAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setLcBalAmt((Number) value);
            }
        }
        ,
        LcCnfm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLcCnfm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setLcCnfm((String) value);
            }
        }
        ,
        CoaId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        }
        ,
        DlvDt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDlvDt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setDlvDt((Date) value);
            }
        }
        ,
        WhIdDlv {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getWhIdDlv();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setWhIdDlv((String) value);
            }
        }
        ,
        PrDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getPrDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setPrDocId((String) value);
            }
        }
        ,
        TransCostBeforeTax {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCostBeforeTax();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCostBeforeTax((Number) value);
            }
        }
        ,
        TransTotalTax {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransTotalTax();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransTotalTax((Number) value);
            }
        }
        ,
        TransSumItmAmtBs {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmAmtBs();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmAmtBs((Number) value);
            }
        }
        ,
        TransSumItmAmtSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmAmtSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmAmtSp((Number) value);
            }
        }
        ,
        TransSumItmDiscount {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmDiscount();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmDiscount((Number) value);
            }
        }
        ,
        TransCurrencyDesc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCurrencyDesc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCurrencyDesc((String) value);
            }
        }
        ,
        TransSumOcAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumOcAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumOcAmt((Number) value);
            }
        }
        ,
        TransSumItmTaxAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmTaxAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmTaxAmt((Number) value);
            }
        }
        ,
        TransDlvDate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransDlvDate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransDlvDate((Date) value);
            }
        }
        ,
        TransWhIdDlv {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransWhIdDlv();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransWhIdDlv((String) value);
            }
        }
        ,
        TransWhIdAddr {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransWhIdAddr();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransWhIdAddr((String) value);
            }
        }
        ,
        TransDlvMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransDlvMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransDlvMode((Integer) value);
            }
        }
        ,
        TransWhAddrID {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransWhAddrID();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransWhAddrID((String) value);
            }
        }
        ,
        TransSumItmAmtSpTax {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmAmtSpTax();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmAmtSpTax((Number) value);
            }
        }
        ,
        TransSumItmAmtBsTax {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumItmAmtBsTax();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumItmAmtBsTax((Number) value);
            }
        }
        ,
        TransPoDiscountAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPoDiscountAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPoDiscountAmt((Number) value);
            }
        }
        ,
        TransTotalPoDiscount {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransTotalPoDiscount();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransTotalPoDiscount((Number) value);
            }
        }
        ,
        TransTotalPoCostSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransTotalPoCostSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransTotalPoCostSp((Number) value);
            }
        }
        ,
        TransTotalPoCostBs {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransTotalPoCostBs();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransTotalPoCostBs((Number) value);
            }
        }
        ,
        TransPmtDate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPmtDate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPmtDate((Date) value);
            }
        }
        ,
        TransPmtAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPmtAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPmtAmt((Number) value);
            }
        }
        ,
        TransPmtAdvFlg {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPmtAdvFlg();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPmtAdvFlg((String) value);
            }
        }
        ,
        TransSumPoPmtAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumPoPmtAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumPoPmtAmt((Number) value);
            }
        }
        ,
        TransBillAddsId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransBillAddsId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransBillAddsId((String) value);
            }
        }
        ,
        TransPmtPayMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPmtPayMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPmtPayMode((Integer) value);
            }
        }
        ,
        TransPoTaxOnAmtAfterDisc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPoTaxOnAmtAfterDisc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPoTaxOnAmtAfterDisc((Number) value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        }
        ,
        TransEoId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEoId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEoId((String) value);
            }
        }
        ,
        TransCurrIdSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCurrIdSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCurrIdSp((String) value);
            }
        }
        ,
        TransRadio {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransRadio();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransRadio((String) value);
            }
        }
        ,
        transTaxRuleId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.gettransTaxRuleId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.settransTaxRuleId((Integer) value);
            }
        }
        ,
        TransSelectAllCheckBox {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSelectAllCheckBox();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSelectAllCheckBox((String) value);
            }
        }
        ,
        TransSumTotDiscAmtSp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSumTotDiscAmtSp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSumTotDiscAmtSp((Number) value);
            }
        }
        ,
        TransEoPolicyId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEoPolicyId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEoPolicyId((String) value);
            }
        }
        ,
        TransEoPolicyNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEoPolicyNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEoPolicyNm((String) value);
            }
        }
        ,
        TransPoAmtSmWoutOc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPoAmtSmWoutOc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPoAmtSmWoutOc((Number) value);
            }
        }
        ,
        TransCurrIdBs {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCurrIdBs();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCurrIdBs((Integer) value);
            }
        }
        ,
        TransCurrBsNotation {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCurrBsNotation();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransPricePlcNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPricePlcNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPricePlcNm((String) value);
            }
        }
        ,
        IsPolicyValid {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getIsPolicyValid();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setIsPolicyValid((String) value);
            }
        }
        ,
        TransSwitchRefDocIdExp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransSwitchRefDocIdExp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransSwitchRefDocIdExp((String) value);
            }
        }
        ,
        TransCurrentDate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCurrentDate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCurrentDate((Date) value);
            }
        }
        ,
        TransCoaOC {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCoaOC();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCoaOC((String) value);
            }
        }
        ,
        TransCoaIdOC {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCoaIdOC();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCoaIdOC((Integer) value);
            }
        }
        ,
        TransOcDesc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransOcDesc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransOcDesc((Integer) value);
            }
        }
        ,
        TransOcAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransOcAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransOcAmt((Number) value);
            }
        }
        ,
        TransContnrNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransContnrNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransContnrNm((String) value);
            }
        }
        ,
        TransContnrSize {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransContnrSize();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransContnrSize((String) value);
            }
        }
        ,
        TransContnrQty {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransContnrQty();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransContnrQty((Number) value);
            }
        }
        ,
        TransPortsNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPortsNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPortsNm((String) value);
            }
        }
        ,
        TransEtaDate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEtaDate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEtaDate((Date) value);
            }
        }
        ,
        TransEtdDate {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEtdDate();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEtdDate((Date) value);
            }
        }
        ,
        TransPortRemarks {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPortRemarks();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPortRemarks((String) value);
            }
        }
        ,
        TransEoShpngNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEoShpngNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEoShpngNm((String) value);
            }
        }
        ,
        TransEoCfaNm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransEoCfaNm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransEoCfaNm((String) value);
            }
        }
        ,
        TransShpingCompanyadds {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransShpingCompanyadds();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransShpingCompanyadds((String) value);
            }
        }
        ,
        TransCfaAdds {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCfaAdds();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCfaAdds((String) value);
            }
        }
        ,
        TransLcAmt {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransLcAmt();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransLcAmt((Number) value);
            }
        }
        ,
        TransPaymetType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPaymetType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPaymetType((String) value);
            }
        }
        ,
        TransPaymentVal {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPaymentVal();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPaymentVal((Number) value);
            }
        }
        ,
        TransDTaxRadio {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransDTaxRadio();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransDTaxRadio((String) value);
            }
        }
        ,
        TransPrjId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPrjId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPrjId((String) value);
            }
        }
        ,
        TransCoaIdCashPo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransCoaIdCashPo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransCoaIdCashPo((String) value);
            }
        }
        ,
        TransPrNo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPrNo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPrNo((String) value);
            }
        }
        ,
        TransPrCatg {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransPrCatg();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransPrCatg((Integer) value);
            }
        }
        ,
        TransQuotNo {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getTransQuotNo();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setTransQuotNo((String) value);
            }
        }
        ,
        MmDrftPoDlvSchdl {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoDlvSchdl();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoItm {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoItm();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoOc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoOc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoPmtSchdl {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoPmtSchdl();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoTr {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoTr();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoTnc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoTnc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DlvSchdlBalanceView {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDlvSchdlBalanceView();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmTmpPoSuggSupp {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmTmpPoSuggSupp();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoContnr {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoContnr();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoPorts {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoPorts();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoCalc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoCalc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmDrftPoFlx {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getMmDrftPoFlx();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoIdVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovEoIdVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovOrgId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovUsrId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPoStatus {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPoStatus();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCurrId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovCurrId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPoType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPoType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPoSource {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPoSource();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSoGrpId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovSoGrpId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQuotDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovQuotDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRefPoDocId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovRefPoDocId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovWhId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhIdAddr {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovWhIdAddr();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDlvMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovDlvMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscType {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovDiscType();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTmpltPoId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovTmpltPoId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSuppAddress {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovSuppAddress();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPayMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPayMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPoMode {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPoMode();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCurrencyVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovCurrencyVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxRuleId1 {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovTaxRuleId1();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOpenOrdBasis {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovOpenOrdBasis();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppEoPricePlc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getAppEoPricePlc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DlvSchdlBalanceView1 {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getDlvSchdlBalanceView1();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmUom {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovItmUom();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAppPricePlc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovAppPricePlc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRefDocIdOpenPoVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovRefDocIdOpenPoVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCoaId {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovCoaId();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOcDesc {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovOcDesc();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPortIdVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPortIdVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovShippingCompanyVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovShippingCompanyVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCfaVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovCfaVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOvShipmentBasisVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLOvShipmentBasisVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovLcIdVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovLcIdVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxRuleIdNewVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovTaxRuleIdNewVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhProjectVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovWhProjectVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCoaIdForCashPoVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovCoaIdForCashPoVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPRNoVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPRNoVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPrCatgVO {
            public Object get(MmDrftPoVORowImpl obj) {
                return obj.getLovPrCatgVO();
            }

            public void put(MmDrftPoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmDrftPoVORowImpl object);

        public abstract void put(MmDrftPoVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int POID = AttributesEnum.PoId.index();
    public static final int PODT = AttributesEnum.PoDt.index();
    public static final int POTYPE = AttributesEnum.PoType.index();
    public static final int POBASIS = AttributesEnum.PoBasis.index();
    public static final int SOGRPID = AttributesEnum.SoGrpId.index();
    public static final int QUOTDOCID = AttributesEnum.QuotDocId.index();
    public static final int REFPODOCID = AttributesEnum.RefPoDocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int BILLADDSID = AttributesEnum.BillAddsId.index();
    public static final int VALIDFRMDT = AttributesEnum.ValidFrmDt.index();
    public static final int VALIDTODT = AttributesEnum.ValidToDt.index();
    public static final int TLRNCDAYS = AttributesEnum.TlrncDays.index();
    public static final int SPLITPO = AttributesEnum.SplitPo.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int POAMTBS = AttributesEnum.PoAmtBs.index();
    public static final int POAMTSP = AttributesEnum.PoAmtSp.index();
    public static final int BILLINGBASIS = AttributesEnum.BillingBasis.index();
    public static final int POSTATUS = AttributesEnum.PoStatus.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int TMPLDOCID = AttributesEnum.TmplDocId.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int SPLITPODOCID = AttributesEnum.SplitPoDocId.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int POMODE = AttributesEnum.PoMode.index();
    public static final int ORIGDOCID = AttributesEnum.OrigDocId.index();
    public static final int AUTHPONO = AttributesEnum.AuthPoNo.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int OPENORDBASIS = AttributesEnum.OpenOrdBasis.index();
    public static final int OPENORDVAL = AttributesEnum.OpenOrdVal.index();
    public static final int OPENORDUOM = AttributesEnum.OpenOrdUom.index();
    public static final int PLCID = AttributesEnum.PlcId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int EOIDSHPCO = AttributesEnum.EoIdShpCo.index();
    public static final int EOIDCFA = AttributesEnum.EoIdCfa.index();
    public static final int FRTTOPAY = AttributesEnum.FrtToPay.index();
    public static final int SHPMNTBASIS = AttributesEnum.ShpmntBasis.index();
    public static final int FILENO = AttributesEnum.FileNo.index();
    public static final int LCID = AttributesEnum.LcId.index();
    public static final int LCBALAMT = AttributesEnum.LcBalAmt.index();
    public static final int LCCNFM = AttributesEnum.LcCnfm.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int WHIDDLV = AttributesEnum.WhIdDlv.index();
    public static final int PRDOCID = AttributesEnum.PrDocId.index();
    public static final int TRANSCOSTBEFORETAX = AttributesEnum.TransCostBeforeTax.index();
    public static final int TRANSTOTALTAX = AttributesEnum.TransTotalTax.index();
    public static final int TRANSSUMITMAMTBS = AttributesEnum.TransSumItmAmtBs.index();
    public static final int TRANSSUMITMAMTSP = AttributesEnum.TransSumItmAmtSp.index();
    public static final int TRANSSUMITMDISCOUNT = AttributesEnum.TransSumItmDiscount.index();
    public static final int TRANSCURRENCYDESC = AttributesEnum.TransCurrencyDesc.index();
    public static final int TRANSSUMOCAMT = AttributesEnum.TransSumOcAmt.index();
    public static final int TRANSSUMITMTAXAMT = AttributesEnum.TransSumItmTaxAmt.index();
    public static final int TRANSDLVDATE = AttributesEnum.TransDlvDate.index();
    public static final int TRANSWHIDDLV = AttributesEnum.TransWhIdDlv.index();
    public static final int TRANSWHIDADDR = AttributesEnum.TransWhIdAddr.index();
    public static final int TRANSDLVMODE = AttributesEnum.TransDlvMode.index();
    public static final int TRANSWHADDRID = AttributesEnum.TransWhAddrID.index();
    public static final int TRANSSUMITMAMTSPTAX = AttributesEnum.TransSumItmAmtSpTax.index();
    public static final int TRANSSUMITMAMTBSTAX = AttributesEnum.TransSumItmAmtBsTax.index();
    public static final int TRANSPODISCOUNTAMT = AttributesEnum.TransPoDiscountAmt.index();
    public static final int TRANSTOTALPODISCOUNT = AttributesEnum.TransTotalPoDiscount.index();
    public static final int TRANSTOTALPOCOSTSP = AttributesEnum.TransTotalPoCostSp.index();
    public static final int TRANSTOTALPOCOSTBS = AttributesEnum.TransTotalPoCostBs.index();
    public static final int TRANSPMTDATE = AttributesEnum.TransPmtDate.index();
    public static final int TRANSPMTAMT = AttributesEnum.TransPmtAmt.index();
    public static final int TRANSPMTADVFLG = AttributesEnum.TransPmtAdvFlg.index();
    public static final int TRANSSUMPOPMTAMT = AttributesEnum.TransSumPoPmtAmt.index();
    public static final int TRANSBILLADDSID = AttributesEnum.TransBillAddsId.index();
    public static final int TRANSPMTPAYMODE = AttributesEnum.TransPmtPayMode.index();
    public static final int TRANSPOTAXONAMTAFTERDISC = AttributesEnum.TransPoTaxOnAmtAfterDisc.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSEOID = AttributesEnum.TransEoId.index();
    public static final int TRANSCURRIDSP = AttributesEnum.TransCurrIdSp.index();
    public static final int TRANSRADIO = AttributesEnum.TransRadio.index();
    public static final int TRANSTAXRULEID = AttributesEnum.transTaxRuleId.index();
    public static final int TRANSSELECTALLCHECKBOX = AttributesEnum.TransSelectAllCheckBox.index();
    public static final int TRANSSUMTOTDISCAMTSP = AttributesEnum.TransSumTotDiscAmtSp.index();
    public static final int TRANSEOPOLICYID = AttributesEnum.TransEoPolicyId.index();
    public static final int TRANSEOPOLICYNM = AttributesEnum.TransEoPolicyNm.index();
    public static final int TRANSPOAMTSMWOUTOC = AttributesEnum.TransPoAmtSmWoutOc.index();
    public static final int TRANSCURRIDBS = AttributesEnum.TransCurrIdBs.index();
    public static final int TRANSCURRBSNOTATION = AttributesEnum.TransCurrBsNotation.index();
    public static final int TRANSPRICEPLCNM = AttributesEnum.TransPricePlcNm.index();
    public static final int ISPOLICYVALID = AttributesEnum.IsPolicyValid.index();
    public static final int TRANSSWITCHREFDOCIDEXP = AttributesEnum.TransSwitchRefDocIdExp.index();
    public static final int TRANSCURRENTDATE = AttributesEnum.TransCurrentDate.index();
    public static final int TRANSCOAOC = AttributesEnum.TransCoaOC.index();
    public static final int TRANSCOAIDOC = AttributesEnum.TransCoaIdOC.index();
    public static final int TRANSOCDESC = AttributesEnum.TransOcDesc.index();
    public static final int TRANSOCAMT = AttributesEnum.TransOcAmt.index();
    public static final int TRANSCONTNRNM = AttributesEnum.TransContnrNm.index();
    public static final int TRANSCONTNRSIZE = AttributesEnum.TransContnrSize.index();
    public static final int TRANSCONTNRQTY = AttributesEnum.TransContnrQty.index();
    public static final int TRANSPORTSNM = AttributesEnum.TransPortsNm.index();
    public static final int TRANSETADATE = AttributesEnum.TransEtaDate.index();
    public static final int TRANSETDDATE = AttributesEnum.TransEtdDate.index();
    public static final int TRANSPORTREMARKS = AttributesEnum.TransPortRemarks.index();
    public static final int TRANSEOSHPNGNM = AttributesEnum.TransEoShpngNm.index();
    public static final int TRANSEOCFANM = AttributesEnum.TransEoCfaNm.index();
    public static final int TRANSSHPINGCOMPANYADDS = AttributesEnum.TransShpingCompanyadds.index();
    public static final int TRANSCFAADDS = AttributesEnum.TransCfaAdds.index();
    public static final int TRANSLCAMT = AttributesEnum.TransLcAmt.index();
    public static final int TRANSPAYMETTYPE = AttributesEnum.TransPaymetType.index();
    public static final int TRANSPAYMENTVAL = AttributesEnum.TransPaymentVal.index();
    public static final int TRANSDTAXRADIO = AttributesEnum.TransDTaxRadio.index();
    public static final int TRANSPRJID = AttributesEnum.TransPrjId.index();
    public static final int TRANSCOAIDCASHPO = AttributesEnum.TransCoaIdCashPo.index();
    public static final int TRANSPRNO = AttributesEnum.TransPrNo.index();
    public static final int TRANSPRCATG = AttributesEnum.TransPrCatg.index();
    public static final int TRANSQUOTNO = AttributesEnum.TransQuotNo.index();
    public static final int MMDRFTPODLVSCHDL = AttributesEnum.MmDrftPoDlvSchdl.index();
    public static final int MMDRFTPOITM = AttributesEnum.MmDrftPoItm.index();
    public static final int MMDRFTPOOC = AttributesEnum.MmDrftPoOc.index();
    public static final int MMDRFTPOPMTSCHDL = AttributesEnum.MmDrftPoPmtSchdl.index();
    public static final int MMDRFTPOTR = AttributesEnum.MmDrftPoTr.index();
    public static final int MMDRFTPOTNC = AttributesEnum.MmDrftPoTnc.index();
    public static final int DLVSCHDLBALANCEVIEW = AttributesEnum.DlvSchdlBalanceView.index();
    public static final int MMTMPPOSUGGSUPP = AttributesEnum.MmTmpPoSuggSupp.index();
    public static final int MMDRFTPOCONTNR = AttributesEnum.MmDrftPoContnr.index();
    public static final int MMDRFTPOPORTS = AttributesEnum.MmDrftPoPorts.index();
    public static final int MMDRFTPOCALC = AttributesEnum.MmDrftPoCalc.index();
    public static final int MMDRFTPOFLX = AttributesEnum.MmDrftPoFlx.index();
    public static final int LOVEOIDVO = AttributesEnum.LovEoIdVO.index();
    public static final int LOVORGID = AttributesEnum.LovOrgId.index();
    public static final int LOVUSRID = AttributesEnum.LovUsrId.index();
    public static final int LOVPOSTATUS = AttributesEnum.LovPoStatus.index();
    public static final int LOVCURRID = AttributesEnum.LovCurrId.index();
    public static final int LOVPOTYPE = AttributesEnum.LovPoType.index();
    public static final int LOVPOSOURCE = AttributesEnum.LovPoSource.index();
    public static final int LOVSOGRPID = AttributesEnum.LovSoGrpId.index();
    public static final int LOVQUOTDOCID = AttributesEnum.LovQuotDocId.index();
    public static final int LOVREFPODOCID = AttributesEnum.LovRefPoDocId.index();
    public static final int LOVWHID = AttributesEnum.LovWhId.index();
    public static final int LOVWHIDADDR = AttributesEnum.LovWhIdAddr.index();
    public static final int LOVDLVMODE = AttributesEnum.LovDlvMode.index();
    public static final int LOVDISCTYPE = AttributesEnum.LovDiscType.index();
    public static final int LOVTMPLTPOID = AttributesEnum.LovTmpltPoId.index();
    public static final int LOVSUPPADDRESS = AttributesEnum.LovSuppAddress.index();
    public static final int LOVPAYMODE = AttributesEnum.LovPayMode.index();
    public static final int LOVPOMODE = AttributesEnum.LovPoMode.index();
    public static final int LOVCURRENCYVO = AttributesEnum.LovCurrencyVO.index();
    public static final int LOVTAXRULEID1 = AttributesEnum.LovTaxRuleId1.index();
    public static final int LOVOPENORDBASIS = AttributesEnum.LovOpenOrdBasis.index();
    public static final int APPEOPRICEPLC = AttributesEnum.AppEoPricePlc.index();
    public static final int DLVSCHDLBALANCEVIEW1 = AttributesEnum.DlvSchdlBalanceView1.index();
    public static final int LOVITMUOM = AttributesEnum.LovItmUom.index();
    public static final int LOVAPPPRICEPLC = AttributesEnum.LovAppPricePlc.index();
    public static final int LOVREFDOCIDOPENPOVO = AttributesEnum.LovRefDocIdOpenPoVO.index();
    public static final int LOVCOAID = AttributesEnum.LovCoaId.index();
    public static final int LOVOCDESC = AttributesEnum.LovOcDesc.index();
    public static final int LOVPORTIDVO = AttributesEnum.LovPortIdVO.index();
    public static final int LOVSHIPPINGCOMPANYVO = AttributesEnum.LovShippingCompanyVO.index();
    public static final int LOVCFAVO = AttributesEnum.LovCfaVO.index();
    public static final int LOVSHIPMENTBASISVO = AttributesEnum.LOvShipmentBasisVO.index();
    public static final int LOVLCIDVO = AttributesEnum.LovLcIdVO.index();
    public static final int LOVTAXRULEIDNEWVO = AttributesEnum.LovTaxRuleIdNewVO.index();
    public static final int LOVWHPROJECTVO = AttributesEnum.LovWhProjectVO.index();
    public static final int LOVCOAIDFORCASHPOVO = AttributesEnum.LovCoaIdForCashPoVO.index();
    public static final int LOVPRNOVO = AttributesEnum.LovPRNoVO.index();
    public static final int LOVPRCATGVO = AttributesEnum.LovPrCatgVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoVORowImpl() {
    }
    
    /**
    *Global round digit for Amount
    * @return
    */
    
    public Integer getGlblRoundAmtDigit(){
    if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT1}")!=null){
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT1}"));
    }else{
        return 6;
    }
    }
    /**
    *Global round digit for Quantity
    * @return
    */
    
        public Integer getGlblRoundQtyDigit(){
        if(resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT1}")!=null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT1}"));
        }else{
            return 6;
        }
        
    }
        /**
     *Global round digit for currency rate
     * @return
     */
        
     public Integer getGlblRoundCurrRateDigit(){
     if(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT1}")!=null){
         return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT1}"));
     }else{
         return 6;
     }
     
     }
    

    /**
     * Gets MmDrftPoEO entity object.
     * @return the MmDrftPoEO
     */
    public MmDrftPoEOImpl getMmDrftPoEO() {
        return (MmDrftPoEOImpl) getEntity(ENTITY_MMDRFTPOEO);
    }

    /**
     * Gets the attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @return the BILL_ADDS_ID
     */
    public String getBillAddsId() {
        return (String) getAttributeInternal(BILLADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @param value value to set the BILL_ADDS_ID
     */
    public void setBillAddsId(String value) {
        setAttributeInternal(BILLADDSID, value);
    }

    /**
     * Gets the attribute value for BILLING_BASIS using the alias name BillingBasis.
     * @return the BILLING_BASIS
     */
    public Integer getBillingBasis() {
        return (Integer) getAttributeInternal(BILLINGBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for BILLING_BASIS using the alias name BillingBasis.
     * @param value value to set the BILLING_BASIS
     */
    public void setBillingBasis(Integer value) {
        setAttributeInternal(BILLINGBASIS, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        /* Number curr=(Number) getAttributeInternal(CURRCONVFCTR);
        if(getTransPoDiscountAmt()!=null && curr!=null)
        {
            setDiscAmtBs( getTransPoDiscountAmt().multiply(curr));
            setDiscAmtSp( getTransPoDiscountAmt());
            }
        else
        {
            setDiscAmtBs(new Number(0));
            setDiscAmtSp(new Number(0));
            }*/
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        if (value == null) {
            value = "A";
        }
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        if (value == null) {
            value = 1;
        }
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PO_AMT_BS using the alias name PoAmtBs.
     * @return the PO_AMT_BS
     */
    public Number getPoAmtBs() {
        return (Number) getAttributeInternal(POAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_AMT_BS using the alias name PoAmtBs.
     * @param value value to set the PO_AMT_BS
     */
    public void setPoAmtBs(Number value) {
        value = getTransTotalPoCostBs();
        if (value == null) {
            value = new Number(0);
        }

        setAttributeInternal(POAMTBS, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for PO_AMT_SP using the alias name PoAmtSp.
     * @return the PO_AMT_SP
     */
    public Number getPoAmtSp() {
        return (Number) getAttributeInternal(POAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_AMT_SP using the alias name PoAmtSp.
     * @param value value to set the PO_AMT_SP
     */
    public void setPoAmtSp(Number value) {
        value = getTransTotalPoCostSp();
        if (value == null) {
            value = new Number(0);
        }

        setAttributeInternal(POAMTSP, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for PO_BASIS using the alias name PoBasis.
     * @return the PO_BASIS
     */
    public Integer getPoBasis() {
        return (Integer) getAttributeInternal(POBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_BASIS using the alias name PoBasis.
     * @param value value to set the PO_BASIS
     */
    public void setPoBasis(Integer value) {
        setAttributeInternal(POBASIS, value);
    }

    /**
     * Gets the attribute value for PO_DT using the alias name PoDt.
     * @return the PO_DT
     */
    public Date getPoDt() {
        return (Date) getAttributeInternal(PODT);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_DT using the alias name PoDt.
     * @param value value to set the PO_DT
     */
    public void setPoDt(Date value) {
        setAttributeInternal(PODT, value);
    }

    /**
     * Gets the attribute value for PO_ID using the alias name PoId.
     * @return the PO_ID
     */
    public String getPoId() {
        return (String) getAttributeInternal(POID);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_ID using the alias name PoId.
     * @param value value to set the PO_ID
     */
    public void setPoId(String value) {
        setAttributeInternal(POID, value);
    }

    /**
     * Gets the attribute value for PO_STATUS using the alias name PoStatus.
     * @return the PO_STATUS
     */
    public Integer getPoStatus() {
        return (Integer) getAttributeInternal(POSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_STATUS using the alias name PoStatus.
     * @param value value to set the PO_STATUS
     */
    public void setPoStatus(Integer value) {
        setAttributeInternal(POSTATUS, value);
    }

    /**
     * Gets the attribute value for PO_TYPE using the alias name PoType.
     * @return the PO_TYPE
     */
    public Integer getPoType() {
        return (Integer) getAttributeInternal(POTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_TYPE using the alias name PoType.
     * @param value value to set the PO_TYPE
     */
    public void setPoType(Integer value) {
        String OrgId = (String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if (getOrgId() == null) {
            System.out.println(" org id null in setpotype ");
            setOrgId(OrgId);
        }
        setAttributeInternal(POTYPE, value);
    }

    /**
     * Gets the attribute value for QUOT_DOC_ID using the alias name QuotDocId.
     * @return the QUOT_DOC_ID
     */
    public String getQuotDocId() {
        return (String) getAttributeInternal(QUOTDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_DOC_ID using the alias name QuotDocId.
     * @param value value to set the QUOT_DOC_ID
     */
    public void setQuotDocId(String value) {
        setAttributeInternal(QUOTDOCID, value);
    }

    /**
     * Gets the attribute value for REF_PO_DOC_ID using the alias name RefPoDocId.
     * @return the REF_PO_DOC_ID
     */
    public String getRefPoDocId() {
        return (String) getAttributeInternal(REFPODOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_PO_DOC_ID using the alias name RefPoDocId.
     * @param value value to set the REF_PO_DOC_ID
     */
    public void setRefPoDocId(String value) {
        setAttributeInternal(REFPODOCID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SO_GRP_ID using the alias name SoGrpId.
     * @return the SO_GRP_ID
     */
    public String getSoGrpId() {
        return (String) getAttributeInternal(SOGRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_GRP_ID using the alias name SoGrpId.
     * @param value value to set the SO_GRP_ID
     */
    public void setSoGrpId(String value) {
        setAttributeInternal(SOGRPID, value);
    }

    /**
     * Gets the attribute value for SPLIT_PO using the alias name SplitPo.
     * @return the SPLIT_PO
     */
    public String getSplitPo() {
        return (String) getAttributeInternal(SPLITPO);
    }

    /**
     * Sets <code>value</code> as attribute value for SPLIT_PO using the alias name SplitPo.
     * @param value value to set the SPLIT_PO
     */
    public void setSplitPo(String value) {
        setAttributeInternal(SPLITPO, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {

        if (value == null) {
            value = "P";
        } else if ("Q".equalsIgnoreCase(value)) {
            value = "P";
        }

        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @return the TLRNC_DAYS
     */
    public Integer getTlrncDays() {
        if ((Integer) getAttributeInternal(TLRNCDAYS) != null)
            return (Integer) getAttributeInternal(TLRNCDAYS);
        else {
            Integer tlr = 0;
            return tlr;
        }
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @param value value to set the TLRNC_DAYS
     */
    public void setTlrncDays(Integer value) {
        setAttributeInternal(TLRNCDAYS, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String) getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public Number getTlrncQtyVal() {

        return (Number) getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for VALID_FRM_DT using the alias name ValidFrmDt.
     * @return the VALID_FRM_DT
     */
    public Date getValidFrmDt() {
        return (Date) getAttributeInternal(VALIDFRMDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_FRM_DT using the alias name ValidFrmDt.
     * @param value value to set the VALID_FRM_DT
     */
    public void setValidFrmDt(Date value) {
        setAttributeInternal(VALIDFRMDT, value);
    }

    /**
     * Gets the attribute value for VALID_TO_DT using the alias name ValidToDt.
     * @return the VALID_TO_DT
     */
    public Date getValidToDt() {
        return (Date) getAttributeInternal(VALIDTODT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_TO_DT using the alias name ValidToDt.
     * @param value value to set the VALID_TO_DT
     */
    public void setValidToDt(Date value) {
        setAttributeInternal(VALIDTODT, value);
    }

    /**
     * Gets the attribute value for TRANS_COST_BEFORE_TAX using the alias name TransCostBeforeTax.
     * @return the TRANS_COST_BEFORE_TAX
     */
    public Number getTransCostBeforeTax() {
        //TransSumItmAmtSpTax-TransPoDiscountAmt-TransSumItmTaxAmt
        Number zero = new Number(0);
        Number sp = zero;
        Number dis = zero;
        Number tx = zero;
        if (getTransSumItmAmtSpTax() != null) {
            sp = getTransSumItmAmtSpTax();
        }
        if (getTransPoDiscountAmt() != null) {
            dis = getTransPoDiscountAmt();
        }
        if (getTransSumItmTaxAmt() != null) {
            tx = getTransSumItmTaxAmt();
        }

        // return (Number)sp.minus(dis.add(tx));
        return (Number) sp.minus((tx));
        //return (Number) getAttributeInternal(TRANSCOSTBEFORETAX);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_COST_BEFORE_TAX using the alias name TransCostBeforeTax.
     * @param value value to set the TRANS_COST_BEFORE_TAX
     */
    public void setTransCostBeforeTax(Number value) {
        setAttributeInternal(TRANSCOSTBEFORETAX, value);
    }


    /**
     * Gets the attribute value for TRANS_TOTAL_TAX using the alias name TransTotalTax.
     * @return the TRANS_TOTAL_TAX
     */
    public Number getTransTotalTax() {

        PurOrderAMImpl am = (PurOrderAMImpl) resolvElDC("PurOrderAMDataControl");
        ViewObjectImpl trVo = am.getMmDrftPoTr();
        trVo.setRangeSize(-1);
        trVo.getAllRowsInRange();
        String nulStr = "";
        RowQualifier rowQualifier = new RowQualifier(trVo);
        //rowQualifier.setWhereClause("ItmId="+nulStr+" and TaxRuleFlg='P'");
        rowQualifier.setWhereClause("DocId='" + getDocId() + "'");
        Row[] filteredRows = trVo.getFilteredRows(rowQualifier);

        Number num = new Number(0);
        if (filteredRows.length > 0) {
            Integer len = filteredRows.length - 1;
            while (len >= 0) {
                Number taxamt = new Number(0);
                if (filteredRows[len].getAttribute("TaxAmt") != null)
                    taxamt = (Number) filteredRows[len].getAttribute("TaxAmt");
                num = num.add(taxamt);
                len--;
            }
            return (Number) num.round(getGlblRoundAmtDigit());
        } else if (filteredRows.length == 0) {
            return num;
        } else {
            return (Number) getAttributeInternal(TRANSTOTALTAX);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_TOTAL_TAX using the alias name TransTotalTax.
     * @param value value to set the TRANS_TOTAL_TAX
     */
    public void setTransTotalTax(Number value) {
        setAttributeInternal(TRANSTOTALTAX, value);
    }

    /**
     * Gets the attribute value for SHPMNT_BASIS using the alias name ShpmntBasis.
     * @return the SHPMNT_BASIS
     */
    public Integer getShpmntBasis() {
        return (Integer) getAttributeInternal(SHPMNTBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SHPMNT_BASIS using the alias name ShpmntBasis.
     * @param value value to set the SHPMNT_BASIS
     */
    public void setShpmntBasis(Integer value) {
        setAttributeInternal(SHPMNTBASIS, value);
    }

    /**
     * Gets the attribute value for FILE_NO using the alias name FileNo.
     * @return the FILE_NO
     */
    public String getFileNo() {
        return (String) getAttributeInternal(FILENO);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_NO using the alias name FileNo.
     * @param value value to set the FILE_NO
     */
    public void setFileNo(String value) {
        setAttributeInternal(FILENO, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoId.
     * @return the TransEoId
     */
    public String getTransEoId() {

        if (getEoId() != null) {
            getAm().getLovEoNmView().setNamedWhereClauseParam("CldIdBind", getCldId());
            getAm().getLovEoNmView().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            getAm().getLovEoNmView().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            getAm().getLovEoNmView().setNamedWhereClauseParam("OrgIdBind", getOrgId());
            getAm().getLovEoNmView().setNamedWhereClauseParam("EoIdBind", getEoId());
            getAm().getLovEoNmView().setNamedWhereClauseParam("EoNmBind", null);
            getAm().getLovEoNmView().executeQuery();
            Row[] rr = getAm().getLovEoNmView().getFilteredRows("EoId", getEoId());
            if (rr.length > 0 && rr[0].getAttribute("EoNm") != null) {
                return rr[0].getAttribute("EoNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSEOID);
            }
        } else {
            return (String) getAttributeInternal(TRANSEOID);
        }
        //        PurOrderAMImpl am = (PurOrderAMImpl)resolvElDC("PurOrderAMDataControl");
        //
        //              Integer inputeo=null;
        //              String eoDesc=null;
        //              try{
        //                         inputeo=getEoId();
        //              //x.getAttribute("TvouCoaId");
        //              }catch(NullPointerException npe){
        //
        //              }
        //              if(inputeo!=null){
        //              Row[] xx=am.getLovEoId().getFilteredRows("EoId", inputeo);
        //              // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
        //              if(xx.length>0){
        //              eoDesc= xx[0].getAttribute("EoNm").toString();
        //              }
        //              return eoDesc;
        //              }else{
        //              return (String) getAttributeInternal(TRANSEOID);
        //              }
        // return (String) getAttributeInternal(TRANSEOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoId.
     * @param value value to set the  TransEoId
     */
    public void setTransEoId(String value) {
        setAttributeInternal(TRANSEOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSp.
     * @return the TransCurrIdSp
     */
    public String getTransCurrIdSp() {
        if (getAttributeInternal(TRANSCURRIDSP) != null)
            return (String) getAttributeInternal(TRANSCURRIDSP);
        else {
            PurOrderAMImpl am = (PurOrderAMImpl) resolvElDC("PurOrderAMDataControl");

            Integer input = null;
            String currDesc = null;
            try {
                input = getCurrIdSp();
            } catch (NullPointerException npe) {
            }
            if (input != null) {
                Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", input);
                if (xx.length > 0) {
                    currDesc = xx[0].getAttribute("CurrDesc").toString();
                }
                return currDesc;
            } else {
                return (String) getAttributeInternal(TRANSCURRIDSP);
            }
        }
        //  return (String) getAttributeInternal(TRANSCURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSp.
     * @param value value to set the  TransCurrIdSp
     */
    public void setTransCurrIdSp(String value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRadio.
     * @return the TransRadio
     */
    public String getTransRadio() {

        /*    String ret="All";
       ViewObject trvo= getAm().getMmDrftPoTr();
        Row[] trrow = trvo.getFilteredRows("DocId",getDocId());
        if(trrow.length>0)
         {
         Integer len=trrow.length-1;
         while(len>=0)
         {
             if(trrow[len].getAttribute("TaxRuleFlg")!=null)
             {
                 if(trrow[len].getAttribute("TaxRuleFlg").toString().equals("I"))
                 {
                     ret="Exclude";
                     break;
                     }
                 }
             len--;
             }
          }
       // System.out.println("In povo radio is set to ="+ret);
        return ret; */
        return (String) getAttributeInternal(TRANSRADIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRadio.
     * @param value value to set the  TransRadio
     */
    public void setTransRadio(String value) {
        setAttributeInternal(TRANSRADIO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transTaxRuleId.
     * @return the transTaxRuleId
     */
    public Integer gettransTaxRuleId() {
        /*
        Integer ret=null;
        ViewObject trvo= getAm().getMmDrftPoTr();
        Row[] trrow = trvo.getFilteredRows("DocId",getDocId());
        if(trrow.length>0)
         {
         Integer len=trrow.length-1;
         while(len>=0)
         {
             if(trrow[len].getAttribute("TaxRuleFlg")!=null)
             {
                 if(trrow[len].getAttribute("TaxRuleFlg").toString().equals("P"))
                 {
                     ret = (Integer)trrow[len].getAttribute("TaxRuleId");
                     break;
                     }
                 }
             len--;
             }
          }
        else
            ret=null;
       // System.out.println("In povo taxid is set to ="+ret);
        return ret;*/
        return (Integer) getAttributeInternal(TRANSTAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transTaxRuleId.
     * @param value value to set the  transTaxRuleId
     */
    public void settransTaxRuleId(Integer value) {
        setAttributeInternal(TRANSTAXRULEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSelectAllCheckBox.
     * @return the TransSelectAllCheckBox
     */
    public String getTransSelectAllCheckBox() {
        return (String) getAttributeInternal(TRANSSELECTALLCHECKBOX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSelectAllCheckBox.
     * @param value value to set the  TransSelectAllCheckBox
     */
    public void setTransSelectAllCheckBox(String value) {
        setAttributeInternal(TRANSSELECTALLCHECKBOX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumTotDiscAmtSp.
     * @return the TransSumTotDiscAmtSp
     */
    public Number getTransSumTotDiscAmtSp() {
        ViewObject voItm = getAm().getMmDrftPoItm();
        RowSetIterator rsi = voItm.createRowSetIterator(null);
        Number sum = new Number(0);
        while (rsi.hasNext()) {
            Row r = rsi.next();
            Object disc = r.getAttribute("TotDiscAmtSp");

            if (disc != null) {
                Number n = (Number) disc;
                sum = sum.add(n);
            }
        }

        rsi.closeRowSetIterator();
        return sum;
        //   return (Number) getAttributeInternal(TRANSSUMTOTDISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumTotDiscAmtSp.
     * @param value value to set the  TransSumTotDiscAmtSp
     */
    public void setTransSumTotDiscAmtSp(Number value) {
        setAttributeInternal(TRANSSUMTOTDISCAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoPolicyId.
     * @return the TransEoPolicyId
     */
    public String getTransEoPolicyId() {
        getAm().getAppEoPricePlc().executeQuery();
        String pid = null;
        String OrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID1}");
        Integer sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC1}"));
        Row[] prfrow = getAm().getOrgMmPrf1().getFilteredRows("OrgId", OrgId);
        String policy = "N";
        if (prfrow.length > 0)
            if (prfrow[0].getAttribute("ApplyPriceFrmPolicy") != null)
                policy = (String) prfrow[0].getAttribute("ApplyPriceFrmPolicy");
        if (policy.equals("N")) {
            pid = "-2";
        } else {
            if (getEoId() != null) {
                RowQualifier rq = new RowQualifier(getAm().getAppEoPricePlc());
                rq.setWhereClause("CldId='" + cld_id + "' and SlocId=" + sloc_id + " and HoOrgId='" + hoOrg_id +
                                  "' and EoId=" + getEoId());
                Row[] r = getAm().getAppEoPricePlc().getFilteredRows(rq);
                if (r.length > 0) {
                    pid = (String) r[0].getAttribute("PlcId");
                } else {
                    pid = "0";
                }
            } else
                pid = "-1";
        }

        return pid;
        //return (String) getAttributeInternal(TRANSEOPOLICYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoPolicyId.
     * @param value value to set the  TransEoPolicyId
     */
    public void setTransEoPolicyId(String value) {
        setAttributeInternal(TRANSEOPOLICYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoPolicyNm.
     * @return the TransEoPolicyNm
     */
    public String getTransEoPolicyNm() {
        String pnm = null;
        String OrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID1}");
        Integer sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC1}"));
        if (getTransEoPolicyId() != null) {
            if (getTransEoPolicyId().equals("-2"))
                pnm = "Policy not applicable.";
            else if (getTransEoPolicyId().equals("-1"))
                pnm = "Select Supplier.";
            else if (getTransEoPolicyId().equals("0"))
                pnm = "Please Add Policy";
            else {
                RowQualifier rq = new RowQualifier(getAm().getAppEoPricePlc());
                rq.setWhereClause("CldId='" + cld_id + "' and SlocId=" + sloc_id + " and HoOrgId='" + hoOrg_id +
                                  "' and PlcId='" + getTransEoPolicyId() + "' and EoId=" + getEoId());
                Row[] r = getAm().getAppEoPricePlc().getFilteredRows(rq);
                if (r.length > 0) {
                    pnm = (String) r[0].getAttribute("PlcNm");
                }
            }

        }
        return pnm;
        // return (String) getAttributeInternal(TRANSEOPOLICYNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoPolicyNm.
     * @param value value to set the  TransEoPolicyNm
     */
    public void setTransEoPolicyNm(String value) {
        setAttributeInternal(TRANSEOPOLICYNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoAmtSmWoutOc.
     * @return the TransPoAmtSmWoutOc
     */
    public Number getTransPoAmtSmWoutOc() {
        Number zero = new Number(0);
        Number price = new Number();
        Number ordQty = new Number();
        Number disc = new Number();
        Number tax = new Number();
        Number cost = new Number();
        Number totalCost = new Number(0);
        //get Total Cost
        RowSetIterator itmItr = getAm().getMmDrftPoItm().createRowSetIterator(null);
        while (itmItr.hasNext()) {
            Row itmR = itmItr.next();
            price = zero;
            ordQty = zero;
            disc = zero;
            tax = zero;
            cost = zero;
            if (itmR.getAttribute("ItmPrice") != null)
                price = (Number)((Number) itmR.getAttribute("ItmPrice")).round(getGlblRoundAmtDigit());
            if (itmR.getAttribute("OrdQty") != null)
                ordQty = (Number)((Number) itmR.getAttribute("OrdQty")).round(getGlblRoundQtyDigit());
            if (itmR.getAttribute("TotDiscAmtSp") != null)
                disc = (Number)((Number) itmR.getAttribute("TotDiscAmtSp")).round(getGlblRoundAmtDigit());
            if (itmR.getAttribute("TransItemTaxAmt") != null)
                tax = (Number)((Number) itmR.getAttribute("TransItemTaxAmt")).round(getGlblRoundAmtDigit());
            cost = (Number) (price.multiply(ordQty)).subtract(disc).add(tax).round(getGlblRoundAmtDigit());
            totalCost = (Number)(totalCost.add(cost)).round(getGlblRoundAmtDigit());
        }
        itmItr.closeRowSetIterator();
        return totalCost;
        //   return (Number) getAttributeInternal(TRANSPOAMTSMWOUTOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoAmtSmWoutOc.
     * @param value value to set the  TransPoAmtSmWoutOc
     */
    public void setTransPoAmtSmWoutOc(Number value) {
        setAttributeInternal(TRANSPOAMTSMWOUTOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdBs.
     * @return the TransCurrIdBs
     */
    public Integer getTransCurrIdBs() {
        if (getAttributeInternal(TRANSCURRIDBS) != null)
            return (Integer) getAttributeInternal(TRANSCURRIDBS);
        else {
            String org = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            Integer currId = (Integer) (callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                                           org }));

            return currId;
        }
    }


    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdBs.
     * @param value value to set the  TransCurrIdBs
     */
    public void setTransCurrIdBs(Integer value) {
        setAttributeInternal(TRANSCURRIDBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrBsNotation.
     * @return the TransCurrBsNotation
     */
    public String getTransCurrBsNotation() {
        if (getAttributeInternal(TRANSCURRBSNOTATION) != null)
            return (String) getAttributeInternal(TRANSCURRBSNOTATION);
        else {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            Row r[] = am.getLovCurrId().getFilteredRows("CurrId", getTransCurrIdBs());
            if (r.length > 0)
                return (String) r[0].getAttribute("CurrNotationAlias");
            else
                return (String) getAttributeInternal(TRANSCURRBSNOTATION);
        }


    }


    /**
     * Gets the attribute value for the calculated attribute TransPricePlcNm.
     * @return the TransPricePlcNm
     */
    public String getTransPricePlcNm() {
        return (String) getAttributeInternal(TRANSPRICEPLCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPricePlcNm.
     * @param value value to set the  TransPricePlcNm
     */
    public void setTransPricePlcNm(String value) {
        setAttributeInternal(TRANSPRICEPLCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsPolicyValid.
     * @return the IsPolicyValid
     */
    public String getIsPolicyValid() {
        String valid = "N";
        if (getTransEoPolicyId() != null && getEoId() != null) {
            RowQualifier rq = new RowQualifier(getAm().getAppEoPricePlc());
            rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and HoOrgId='" +
                              getTransHoOrgId() + "' and EoId=" + getEoId() + " and PlcId='" + getTransEoPolicyId() +
                              "'");
            Row r[] = getAm().getAppEoPricePlc().getFilteredRows(rq);
            if (r.length > 0)
                valid = (String) r[0].getAttribute("Valid");
        }
        return valid;
        // return (String) getAttributeInternal(ISPOLICYVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsPolicyValid.
     * @param value value to set the  IsPolicyValid
     */
    public void setIsPolicyValid(String value) {
        setAttributeInternal(ISPOLICYVALID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSwitchRefDocIdExp.
     * @return the TransSwitchRefDocIdExp
     */
    public String getTransSwitchRefDocIdExp() {
        return (String) getAttributeInternal(TRANSSWITCHREFDOCIDEXP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSwitchRefDocIdExp.
     * @param value value to set the  TransSwitchRefDocIdExp
     */
    public void setTransSwitchRefDocIdExp(String value) {
        setAttributeInternal(TRANSSWITCHREFDOCIDEXP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentDate.
     * @return the TransCurrentDate
     */
    public Date getTransCurrentDate() {
        return (Date) getAttributeInternal(TRANSCURRENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentDate.
     * @param value value to set the  TransCurrentDate
     */
    public void setTransCurrentDate(Date value) {
        setAttributeInternal(TRANSCURRENTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaOC.
     * @return the TransCoaOC
     */
    public String getTransCoaOC() {
        return (String) getAttributeInternal(TRANSCOAOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaOC.
     * @param value value to set the  TransCoaOC
     */
    public void setTransCoaOC(String value) {
        setAttributeInternal(TRANSCOAOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaIdOC.
     * @return the TransCoaIdOC
     */
    public Integer getTransCoaIdOC() {
        return (Integer) getAttributeInternal(TRANSCOAIDOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaIdOC.
     * @param value value to set the  TransCoaIdOC
     */
    public void setTransCoaIdOC(Integer value) {
        setAttributeInternal(TRANSCOAIDOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcDesc.
     * @return the TransOcDesc
     */
    public Integer getTransOcDesc() {
        return (Integer) getAttributeInternal(TRANSOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcDesc.
     * @param value value to set the  TransOcDesc
     */
    public void setTransOcDesc(Integer value) {
        setAttributeInternal(TRANSOCDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcAmt.
     * @return the TransOcAmt
     */
    public Number getTransOcAmt() {
        return (Number) getAttributeInternal(TRANSOCAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcAmt.
     * @param value value to set the  TransOcAmt
     */
    public void setTransOcAmt(Number value) {
        setAttributeInternal(TRANSOCAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransContnrNm.
     * @return the TransContnrNm
     */
    public String getTransContnrNm() {
        return (String) getAttributeInternal(TRANSCONTNRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransContnrNm.
     * @param value value to set the  TransContnrNm
     */
    public void setTransContnrNm(String value) {
        setAttributeInternal(TRANSCONTNRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransContnrSize.
     * @return the TransContnrSize
     */
    public String getTransContnrSize() {
        return (String) getAttributeInternal(TRANSCONTNRSIZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransContnrSize.
     * @param value value to set the  TransContnrSize
     */
    public void setTransContnrSize(String value) {
        setAttributeInternal(TRANSCONTNRSIZE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransContnrQty.
     * @return the TransContnrQty
     */
    public Number getTransContnrQty() {
        return (Number) getAttributeInternal(TRANSCONTNRQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransContnrQty.
     * @param value value to set the  TransContnrQty
     */
    public void setTransContnrQty(Number value) {
        setAttributeInternal(TRANSCONTNRQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPortsNm.
     * @return the TransPortsNm
     */
    public String getTransPortsNm() {
        return (String) getAttributeInternal(TRANSPORTSNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPortsNm.
     * @param value value to set the  TransPortsNm
     */
    public void setTransPortsNm(String value) {
        setAttributeInternal(TRANSPORTSNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEtaDate.
     * @return the TransEtaDate
     */
    public Date getTransEtaDate() {
        return (Date) getAttributeInternal(TRANSETADATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEtaDate.
     * @param value value to set the  TransEtaDate
     */
    public void setTransEtaDate(Date value) {
        setAttributeInternal(TRANSETADATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEtdDate.
     * @return the TransEtdDate
     */
    public Date getTransEtdDate() {
        return (Date) getAttributeInternal(TRANSETDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEtdDate.
     * @param value value to set the  TransEtdDate
     */
    public void setTransEtdDate(Date value) {
        setAttributeInternal(TRANSETDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPortRemarks.
     * @return the TransPortRemarks
     */
    public String getTransPortRemarks() {
        return (String) getAttributeInternal(TRANSPORTREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPortRemarks.
     * @param value value to set the  TransPortRemarks
     */
    public void setTransPortRemarks(String value) {
        setAttributeInternal(TRANSPORTREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoShpngNm.
     * @return the TransEoShpngNm
     */
    public String getTransEoShpngNm() {
        if (getEoIdShpCo() != null) {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            ViewObjectImpl vo = am.getLovShippingCfa();
            vo.setNamedWhereClauseParam("CldIdBind", getCldId());
            vo.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            vo.setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            vo.setNamedWhereClauseParam("EoTypeBind", 83);
            vo.setNamedWhereClauseParam("EoIdBind", getEoIdShpCo());
            vo.executeQuery();
            Row[] rr = vo.getFilteredRows("EoId", getEoIdShpCo());
            System.out.println(vo.getRowCount() + "getTransEoShpngNm    " + rr.length);
            if (rr.length > 0) {
                return rr[0].getAttribute("EoNm").toString();
            } else
                return (String) getAttributeInternal(TRANSEOSHPNGNM);
        } else
            return (String) getAttributeInternal(TRANSEOSHPNGNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoShpngNm.
     * @param value value to set the  TransEoShpngNm
     */
    public void setTransEoShpngNm(String value) {
        setAttributeInternal(TRANSEOSHPNGNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoCfaNm.
     * @return the TransEoCfaNm
     */
    public String getTransEoCfaNm() {
        if (getEoIdCfa() != null) {
            getAm().getLovShippingCfa().setNamedWhereClauseParam("CldIdBind", getCldId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoTypeBind", 84);
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoIdBind", getEoIdCfa());
            getAm().getLovShippingCfa().executeQuery();
            Row[] rr = getAm().getLovShippingCfa().getFilteredRows("EoId", getEoIdCfa());
            if (rr.length > 0 && rr[0].getAttribute("EoNm") != null) {
                return rr[0].getAttribute("EoNm").toString();
            } else
                return (String) getAttributeInternal(TRANSEOCFANM);
        } else
            return (String) getAttributeInternal(TRANSEOCFANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoCfaNm.
     * @param value value to set the  TransEoCfaNm
     */
    public void setTransEoCfaNm(String value) {
        setAttributeInternal(TRANSEOCFANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShpingCompanyadds.
     * @return the TransShpingCompanyadds
     */
    public String getTransShpingCompanyadds() {
        if (getEoIdShpCo() != null) {
            getAm().getLovShippingCfa().setNamedWhereClauseParam("CldIdBind", getCldId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoTypeBind", 83);
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoIdBind", getEoIdShpCo());
            getAm().getLovShippingCfa().executeQuery();
            Row[] rr = getAm().getLovShippingCfa().getFilteredRows("EoId", getEoIdShpCo());
            if (rr.length > 0 && rr[0].getAttribute("ShipAddsDflt") != null) {
                return rr[0].getAttribute("ShipAddsDflt").toString();
            } else
                return (String) getAttributeInternal(TRANSSHPINGCOMPANYADDS);
        } else
            return (String) getAttributeInternal(TRANSSHPINGCOMPANYADDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShpingCompanyadds.
     * @param value value to set the  TransShpingCompanyadds
     */
    public void setTransShpingCompanyadds(String value) {
        setAttributeInternal(TRANSSHPINGCOMPANYADDS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCfaAdds.
     * @return the TransCfaAdds
     */
    public String getTransCfaAdds() {
        if (getEoIdCfa() != null) {
            getAm().getLovShippingCfa().setNamedWhereClauseParam("CldIdBind", getCldId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoTypeBind", 84);
            getAm().getLovShippingCfa().setNamedWhereClauseParam("EoIdBind", getEoIdCfa());
            getAm().getLovShippingCfa().executeQuery();
            Row[] rr = getAm().getLovShippingCfa().getFilteredRows("EoId", getEoIdCfa());
            if (rr.length > 0 && rr[0].getAttribute("ShipAddsDflt") != null) {
                return rr[0].getAttribute("ShipAddsDflt").toString();
            } else
                return (String) getAttributeInternal(TRANSCFAADDS);
        } else
            return (String) getAttributeInternal(TRANSCFAADDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCfaAdds.
     * @param value value to set the  TransCfaAdds
     */
    public void setTransCfaAdds(String value) {
        setAttributeInternal(TRANSCFAADDS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLcAmt.
     * @return the TransLcAmt
     */
    public Number getTransLcAmt() {
        if (getLcId() != null) {
            ViewObjectImpl lcvo = getAm().getLovLcId();

            lcvo.setNamedWhereClauseParam("bindCldId", getCldId());
            lcvo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            lcvo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            lcvo.setNamedWhereClauseParam("bindOrgId", getOrgId());
            lcvo.setNamedWhereClauseParam("bindEoId", null);
            lcvo.executeQuery();

            Row[] rr = lcvo.getFilteredRows("LcId", getLcId());
            if (rr.length > 0) {
                return (Number) rr[0].getAttribute("LcAmtSp");
            }

        }


        return (Number) getAttributeInternal(TRANSLCAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLcAmt.
     * @param value value to set the  TransLcAmt
     */
    public void setTransLcAmt(Number value) {
        setAttributeInternal(TRANSLCAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPaymetType.
     * @return the TransPaymetType
     */
    public String getTransPaymetType() {
        if (getAttributeInternal(TRANSPAYMETTYPE) == null) {
            return "A";
        }
        return (String) getAttributeInternal(TRANSPAYMETTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPaymetType.
     * @param value value to set the  TransPaymetType
     */
    public void setTransPaymetType(String value) {
        setAttributeInternal(TRANSPAYMETTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPaymentVal.
     * @return the TransPaymentVal
     */
    public Number getTransPaymentVal() {
        return (Number) getAttributeInternal(TRANSPAYMENTVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPaymentVal.
     * @param value value to set the  TransPaymentVal
     */
    public void setTransPaymentVal(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(TRANSPAYMENTVAL, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for the calculated attribute TransDTaxRadio.
     * @return the TransDTaxRadio
     */
    public String getTransDTaxRadio() {
        return (String) getAttributeInternal(TRANSDTAXRADIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDTaxRadio.
     * @param value value to set the  TransDTaxRadio
     */
    public void setTransDTaxRadio(String value) {
        setAttributeInternal(TRANSDTAXRADIO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrjId.
     * @return the TransPrjId
     */
    public String getTransPrjId() {
        return (String) getAttributeInternal(TRANSPRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrjId.
     * @param value value to set the  TransPrjId
     */
    public void setTransPrjId(String value) {
        setAttributeInternal(TRANSPRJID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaIdCashPo.
     * @return the TransCoaIdCashPo
     */
    public String getTransCoaIdCashPo() {
        if (getCoaId() != null) {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            am.getLovCoaIdTaxView().setNamedWhereClauseParam("CldIdBind", getCldId());
            am.getLovCoaIdTaxView().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            am.getLovCoaIdTaxView().setNamedWhereClauseParam("HoOrgIdBind", getTransHoOrgId());
            am.getLovCoaIdTaxView().setNamedWhereClauseParam("CoaIdBind", getCoaId());
            am.getLovCoaIdTaxView().executeQuery();
            Row rr[] = am.getLovCoaIdTaxView().getFilteredRows("CoaId", getCoaId());
            if (rr.length > 0 && rr[0].getAttribute("CoaNm") != null) {
                return rr[0].getAttribute("CoaNm").toString();
            } else {
                return (String) getAttributeInternal(TRANSCOAIDCASHPO);
            }
        } else {
            return (String) getAttributeInternal(TRANSCOAIDCASHPO);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaIdCashPo.
     * @param value value to set the  TransCoaIdCashPo
     */
    public void setTransCoaIdCashPo(String value) {
        setAttributeInternal(TRANSCOAIDCASHPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrNo.
     * @return the TransPrNo
     */
    public String getTransPrNo() {
        if(getPrDocId()!=null){
           PurOrderAMImpl am =(PurOrderAMImpl)this.getApplicationModule();
           am.getLovPrNoView().setNamedWhereClauseParam("BindOrgId", getOrgId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindSlocId", getSlocId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindCldId", getCldId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindPrDocId", getPrDocId());
            am.getLovPrNoView().executeQuery();
            Row rr[] =  am.getLovPrNoView().getFilteredRows("PrTxnId", getPrDocId());
            if(rr.length>0 && rr[0].getAttribute("PrNo")!=null){
                return rr[0].getAttribute("PrNo").toString();
            }else{
                return (String) getAttributeInternal(TRANSPRNO);
            }
        }else{
        return (String) getAttributeInternal(TRANSPRNO);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrNo.
     * @param value value to set the  TransPrNo
     */
    public void setTransPrNo(String value) {
        setAttributeInternal(TRANSPRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrCatg.
     * @return the TransPrCatg
     */
    public Integer getTransPrCatg() {
        if(getPrDocId()!=null){
           PurOrderAMImpl am =(PurOrderAMImpl)this.getApplicationModule();
           am.getLovPrNoView().setNamedWhereClauseParam("BindOrgId", getOrgId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindSlocId", getSlocId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindCldId", getCldId());
            am.getLovPrNoView().setNamedWhereClauseParam("BindPrDocId", getPrDocId());
            am.getLovPrNoView().executeQuery();
            Row rr[] =  am.getLovPrNoView().getFilteredRows("PrTxnId", getPrDocId());
            if(rr.length>0 && rr[0].getAttribute("PrCatg")!=null){
                return Integer.parseInt(rr[0].getAttribute("PrCatg").toString());
            }else{
                return (Integer) getAttributeInternal(TRANSPRCATG);
            }
        }else{
        return (Integer) getAttributeInternal(TRANSPRCATG);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrCatg.
     * @param value value to set the  TransPrCatg
     */
    public void setTransPrCatg(Integer value) {
        setAttributeInternal(TRANSPRCATG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransQuotNo.
     * @return the TransQuotNo
     */
    public String getTransQuotNo() {
        if(getQuotDocId()!=null){
            getAm().getLovQuotNoDisp().setNamedWhereClauseParam("BindSlocId", getSlocId());
            getAm().getLovQuotNoDisp().setNamedWhereClauseParam("BindOrgId", getOrgId());
            getAm().getLovQuotNoDisp().setNamedWhereClauseParam("BindCldId", getCldId());
            getAm().getLovQuotNoDisp().setNamedWhereClauseParam("BindDocId", getQuotDocId());
            getAm().getLovQuotNoDisp().executeQuery();
            Row rr[] = getAm().getLovQuotNoDisp().getFilteredRows("DocId", getQuotDocId());
            if(rr.length>0 && rr[0].getAttribute("QuotIdDisp")!=null){
                return rr[0].getAttribute("QuotIdDisp").toString();
            }else{
                return (String) getAttributeInternal(TRANSQUOTNO);
            }
        }else{
        return (String) getAttributeInternal(TRANSQUOTNO);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransQuotNo.
     * @param value value to set the  TransQuotNo
     */
    public void setTransQuotNo(String value) {
        setAttributeInternal(TRANSQUOTNO, value);
    }

    /**
     * Gets the attribute value for LC_ID using the alias name LcId.
     * @return the LC_ID
     */
    public String getLcId() {
        return (String) getAttributeInternal(LCID);
    }

    /**
     * Sets <code>value</code> as attribute value for LC_ID using the alias name LcId.
     * @param value value to set the LC_ID
     */
    public void setLcId(String value) {
        setAttributeInternal(LCID, value);
    }


    /**
     * Gets the attribute value for LC_BAL_AMT using the alias name LcBalAmt.
     * @return the LC_BAL_AMT
     */
    public Number getLcBalAmt() {
        return (Number) getAttributeInternal(LCBALAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for LC_BAL_AMT using the alias name LcBalAmt.
     * @param value value to set the LC_BAL_AMT
     */
    public void setLcBalAmt(Number value) {
        setAttributeInternal(LCBALAMT, value);
    }

    /**
     * Gets the attribute value for LC_CNFM using the alias name LcCnfm.
     * @return the LC_CNFM
     */
    public String getLcCnfm() {
        return (String) getAttributeInternal(LCCNFM);
    }

    /**
     * Sets <code>value</code> as attribute value for LC_CNFM using the alias name LcCnfm.
     * @param value value to set the LC_CNFM
     */
    public void setLcCnfm(String value) {
        setAttributeInternal(LCCNFM, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for DLV_DT using the alias name DlvDt.
     * @return the DLV_DT
     */
    public Date getDlvDt() {
        return (Date) getAttributeInternal(DLVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_DT using the alias name DlvDt.
     * @param value value to set the DLV_DT
     */
    public void setDlvDt(Date value) {
        setAttributeInternal(DLVDT, value);
    }

    /**
     * Gets the attribute value for WH_ID_DLV using the alias name WhIdDlv.
     * @return the WH_ID_DLV
     */
    public String getWhIdDlv() {
        return (String) getAttributeInternal(WHIDDLV);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID_DLV using the alias name WhIdDlv.
     * @param value value to set the WH_ID_DLV
     */
    public void setWhIdDlv(String value) {
        setAttributeInternal(WHIDDLV, value);
    }

    /**
     * Gets the attribute value for PR_DOC_ID using the alias name PrDocId.
     * @return the PR_DOC_ID
     */
    public String getPrDocId() {
        return (String) getAttributeInternal(PRDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for PR_DOC_ID using the alias name PrDocId.
     * @param value value to set the PR_DOC_ID
     */
    public void setPrDocId(String value) {
        setAttributeInternal(PRDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmAmtBs.
     * @return the TransSumItmAmtBs
     */
    public Number getTransSumItmAmtBs() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransItmAmtBs") != null)
                    taxamt = (Number) r.getAttribute("TransItmAmtBs");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        // return (Number) getAttributeInternal(TRANSSUMITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmAmtBs.
     * @param value value to set the  TransSumItmAmtBs
     */
    public void setTransSumItmAmtBs(Number value) {

        setAttributeInternal(TRANSSUMITMAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmAmtSp.
     * @return the TransSumItmAmtSp
     */
    public Number getTransSumItmAmtSp() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransItmAmtSp") != null)
                    taxamt = (Number) r.getAttribute("TransItmAmtSp");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        // return (Number) getAttributeInternal(TRANSSUMITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmAmtSp.
     * @param value value to set the  TransSumItmAmtSp
     */
    public void setTransSumItmAmtSp(Number value) {

        setAttributeInternal(TRANSSUMITMAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmDiscount.
     * @return the TransSumItmDiscount
     */
    public Number getTransSumItmDiscount() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransDiscAmt") != null)
                    taxamt = (Number) r.getAttribute("TransDiscAmt");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        //return (Number) getAttributeInternal(TRANSSUMITMDISCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmDiscount.
     * @param value value to set the  TransSumItmDiscount
     */
    public void setTransSumItmDiscount(Number value) {
        setAttributeInternal(TRANSSUMITMDISCOUNT, value);
    }

    /**
     * Gets the attribute value for TMPL_DOC_ID using the alias name TmplDocId.
     * @return the TMPL_DOC_ID
     */
    public String getTmplDocId() {
        return (String) getAttributeInternal(TMPLDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TMPL_DOC_ID using the alias name TmplDocId.
     * @param value value to set the TMPL_DOC_ID
     */
    public void setTmplDocId(String value) {
        setAttributeInternal(TMPLDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrencyDesc.
     * @return the TransCurrencyDesc
     */
    public String getTransCurrencyDesc() {
        if (getAttributeInternal(TRANSCURRENCYDESC) != null)
            return (String) getAttributeInternal(TRANSCURRENCYDESC);
        else {
            PurOrderAMImpl am = (PurOrderAMImpl) resolvElDC("PurOrderAMDataControl");

            Integer input = null;
            String currDesc = null;
            try {
                input = getCurrIdSp();

                //x.getAttribute("TvouCoaId");
            } catch (NullPointerException npe) {
            }
            if (input != null) {
                Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", input);
                // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
                if (xx.length > 0) {
                    currDesc = xx[0].getAttribute("CurrNotationAlias").toString();
                }
                return currDesc;
            } else {
                return (String) getAttributeInternal(TRANSCURRENCYDESC);
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrencyDesc.
     * @param value value to set the  TransCurrencyDesc
     */
    public void setTransCurrencyDesc(String value) {
        setAttributeInternal(TRANSCURRENCYDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOcAmt.
     * @return the TransSumOcAmt
     */
    public PurOrderAMImpl getAm() {
        return (PurOrderAMImpl) this.getApplicationModule();
    }

    public Number getTransSumOcAmt() {

        ViewObject oc = getAm().getMmDrftPoOc();
        oc.setRangeSize(-1);
        if (oc.getAllRowsInRange().length > 0) {
            Number amt = new Number(0);
            Number ocamt = new Number(0);

            for (Row curr : oc.getAllRowsInRange()) {
                ocamt = (Number) curr.getAttribute("OcAmtSp");
                if (ocamt == null) {
                    ocamt = new Number(0);
                }

                if ("A".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                    amt = amt.add(ocamt);
                } else if ("S".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                    amt = amt.subtract(ocamt);
                }
            }

            return amt;
        } else if (oc.getAllRowsInRange().length == 0) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(TRANSSUMOCAMT);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOcAmt.
     * @param value value to set the  TransSumOcAmt
     */
    public void setTransSumOcAmt(Number value) {
        setAttributeInternal(TRANSSUMOCAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmTaxAmt.
     * @return the TransSumItmTaxAmt
     */
    public Number getTransSumItmTaxAmt() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransItemTaxAmt") != null)
                    taxamt = (Number) r.getAttribute("TransItemTaxAmt");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        // return (Number) getAttributeInternal(TRANSSUMITMTAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmTaxAmt.
     * @param value value to set the  TransSumItmTaxAmt
     */
    public void setTransSumItmTaxAmt(Number value) {
        setAttributeInternal(TRANSSUMITMTAXAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDlvDate.
     * @return the TransDlvDate
     */
    public Date getTransDlvDate() {
        /*   if(getPoType()==171){
        RowSetIterator rsi=getAm().getMmDrftPoDlvSchdl().getRowSetIterator();

        if(rsi.hasNext()){
            Date dt=(Date)rsi.next().getAttribute("DlvDt");
            return dt;
        }else{
            return (Date) getAttributeInternal(TRANSDLVDATE);
        }

        }else{ */
        return (Date) getAttributeInternal(TRANSDLVDATE);
        // }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDlvDate.
     * @param value value to set the  TransDlvDate
     */
    public void setTransDlvDate(Date value) {
        setAttributeInternal(TRANSDLVDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWhIdDlv.
     * @return the TransWhIdDlv
     */
    public String getTransWhIdDlv() {
        return (String) getAttributeInternal(TRANSWHIDDLV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWhIdDlv.
     * @param value value to set the  TransWhIdDlv
     */
    public void setTransWhIdDlv(String value) {
        setAttributeInternal(TRANSWHIDDLV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWhIdAddr.
     * @return the TransWhIdAddr
     */
    public String getTransWhIdAddr() {
        String whid = getTransWhIdDlv();
        if (whid != null) {
            RowQualifier rq = new RowQualifier(getAm().getLovWhId());
            rq.setWhereClause("CldId ='"+getCldId()+"' and SlocId ="+getSlocId()+" and OrgId ='"+getOrgId()+"' and WhId ='"+whid+"'");
           Row [] r = getAm().getLovWhId().getFilteredRows(rq);
            //Row[] r = getAm().getLovWhId().getFilteredRows("WhId", whid);
            String addrid = null;
            String addrdesc = null;
            if (r.length > 0) {
                if (r[0].getAttribute("AddsId") != null) {
                    addrid = r[0].getAttribute("AddsId").toString();
                } else {
                    addrid = null;
                }
            }
            if (addrid != null) {
                PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
                am.getLovAddressView().setNamedWhereClauseParam("SlocIdBind", getSlocId());
                am.getLovAddressView().setNamedWhereClauseParam("CldIdBind", getCldId());
                am.getLovAddressView().setNamedWhereClauseParam("AddsIdBind", addrid);
                am.getLovAddressView().executeQuery();
                Row[] rr = am.getLovAddressView().getFilteredRows("AddsId", addrid);
                if (rr.length > 0 && rr[0].getAttribute("AddDesc") != null) {
                    addrdesc = rr[0].getAttribute("AddDesc").toString();
                } else {
                    addrdesc = "";
                }


                //               Row[] rd= getAm().getLovWhIdAddr().getFilteredRows("AddsId", addrid);
                //               if(rd.length>0){
                //                   Object nm=rd[0].getAttribute("AddDesc");
                //                   if(nm!=null){
                //                        addrdesc=nm.toString();
                //                   }else{
                //                       addrdesc="";
                //                   }
                //               }
            }
            return addrdesc;
        } else {
            return (String) getAttributeInternal(TRANSWHIDADDR);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWhIdAddr.
     * @param value value to set the  TransWhIdAddr
     */
    public void setTransWhIdAddr(String value) {
        setAttributeInternal(TRANSWHIDADDR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDlvMode.
     * @return the TransDlvMode
     */
    public Integer getTransDlvMode() {
        return (Integer) getAttributeInternal(TRANSDLVMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDlvMode.
     * @param value value to set the  TransDlvMode
     */
    public void setTransDlvMode(Integer value) {
        setAttributeInternal(TRANSDLVMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWhAddrID.
     * @return the TransWhAddrID
     */
    public String getTransWhAddrID() {
        return (String) getAttributeInternal(TRANSWHADDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWhAddrID.
     * @param value value to set the  TransWhAddrID
     */
    public void setTransWhAddrID(String value) {
        setAttributeInternal(TRANSWHADDRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmAmtSpTax.
     * @return the TransSumItmAmtSpTax
     */
    public Number getTransSumItmAmtSpTax() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransItmAmtSpTax") != null)
                    taxamt = (Number) r.getAttribute("TransItmAmtSpTax");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        //  return (Number) getAttributeInternal(TRANSSUMITMAMTSPTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmAmtSpTax.
     * @param value value to set the  TransSumItmAmtSpTax
     */
    public void setTransSumItmAmtSpTax(Number value) {
        setAttributeInternal(TRANSSUMITMAMTSPTAX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumItmAmtBsTax.
     * @return the TransSumItmAmtBsTax
     */
    public Number getTransSumItmAmtBsTax() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoItm());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoItm().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number taxamt = new Number(0);
                if (r.getAttribute("TransItmAmtBsTax") != null)
                    taxamt = (Number) r.getAttribute("TransItmAmtBsTax");
                sum = sum.add(taxamt);
            }
        }
        return sum;
        //return (Number) getAttributeInternal(TRANSSUMITMAMTBSTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumItmAmtBsTax.
     * @param value value to set the  TransSumItmAmtBsTax
     */
    public void setTransSumItmAmtBsTax(Number value) {
        setAttributeInternal(TRANSSUMITMAMTBSTAX, value);
    }

    /**
     * Gets the attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @return the TAX_AFTER_DISC_FLG
     */
    public String getTaxAfterDiscFlg() {
        return (String) getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @param value value to set the TAX_AFTER_DISC_FLG
     */
    public void setTaxAfterDiscFlg(String value) {
        if (value == null) {
            value = "N";
        }
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoDiscountAmt.
     * @return the TransPoDiscountAmt
     */
    public Number getTransPoDiscountAmt() {
        Number disc = (Number) getAttributeInternal(TRANSPODISCOUNTAMT);
        if (disc != null && getCurrConvFctr() != null) {
            Number currFact = (Number)(getCurrConvFctr()).round(getGlblRoundCurrRateDigit());
            setDiscAmtBs((Number) disc.multiply(currFact).round(getGlblRoundAmtDigit()));
            setDiscAmtSp(disc);
        } else {
            setDiscAmtBs(new Number(0));
            setDiscAmtSp(new Number(0));
        }
        return (Number) getAttributeInternal(TRANSPODISCOUNTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoDiscountAmt.
     * @param value value to set the  TransPoDiscountAmt
     */
    public void setTransPoDiscountAmt(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(TRANSPODISCOUNTAMT, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalPoDiscount.
     * @return the TransTotalPoDiscount
     */
    public Number getTransTotalPoDiscount() {
        //TransPoDiscountAmt+TransSumItmDiscount
        Number zero = new Number(0);
        Number dis = zero;
        Number itmDis = zero;
        if (getTransPoDiscountAmt() != null) {
            dis = getTransPoDiscountAmt();
        }
        if (getTransSumItmDiscount() != null) {
            itmDis = getTransSumItmDiscount();
        }
        return (Number) dis.add(itmDis);
        // return (Number) getAttributeInternal(TRANSTOTALPODISCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalPoDiscount.
     * @param value value to set the  TransTotalPoDiscount
     */
    public void setTransTotalPoDiscount(Number value) {
        setAttributeInternal(TRANSTOTALPODISCOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalPoCostSp.
     * @return the TransTotalPoCostSp
     */
    public Number getTransTotalPoCostSp() {
        //TransSumItmAmtSpTax+TransTotalTax+TransSumOcAmt-TransPoDiscountAmt
        Number zero = new Number(0);
        Number sp = zero;
        Number tottx = zero;
        Number oc = zero;
        Number dis = zero;

        if (getTransSumItmAmtSpTax() != null) {
            sp = getTransSumItmAmtSpTax();
        }
        if (getTransTotalTax() != null) {
            tottx = getTransTotalTax();
        }
        if (getTransSumOcAmt() != null) {
            oc = getTransSumOcAmt();
        }
        if (getTransPoDiscountAmt() != null) {
            dis = getTransPoDiscountAmt();
        }

        // return (Number)(sp.add(oc).subtract(dis)).round(2);
        // return (Number)(sp.add(oc)).round(2);
        return (Number) (sp).round(getGlblRoundAmtDigit());
        //  return (Number) getAttributeInternal(TRANSTOTALPOCOSTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalPoCostSp.
     * @param value value to set the  TransTotalPoCostSp
     */
    public void setTransTotalPoCostSp(Number value) {
        if (value != null) {
            value = (Number) value.round(getGlblRoundAmtDigit());
        }
        setAttributeInternal(TRANSTOTALPOCOSTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalPoCostBs.
     * @return the TransTotalPoCostBs
     */
    public Number getTransTotalPoCostBs() {
        //TransTotalPoCostSp*CurrConvFctr
        Number zero = new Number(0);
        Number sp = zero;
        Number cur = zero;
        if (getTransTotalPoCostSp() != null) {
            sp = getTransTotalPoCostSp();
        }
       // System.out.println(" posp amt " + sp);
        if (getCurrConvFctr() != null) {
            cur = (Number)(getCurrConvFctr()).round(getGlblRoundCurrRateDigit());
        }
        System.out.println(cur+" posp row imp amt " + sp);
        return (Number) sp.multiply(cur).round(getGlblRoundAmtDigit());
        //  return (Number) getAttributeInternal(TRANSTOTALPOCOSTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalPoCostBs.
     * @param value value to set the  TransTotalPoCostBs
     */
    public void setTransTotalPoCostBs(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(TRANSTOTALPOCOSTBS, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for the calculated attribute TransPmtDate.
     * @return the TransPmtDate
     */
    public Date getTransPmtDate() {
        return (Date) getAttributeInternal(TRANSPMTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPmtDate.
     * @param value value to set the  TransPmtDate
     */
    public void setTransPmtDate(Date value) {
        setAttributeInternal(TRANSPMTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPmtAmt.
     * @return the TransPmtAmt
     */
    public Number getTransPmtAmt() {

        //return (Number)amtSpTax.subtract(num);
        return (Number) getAttributeInternal(TRANSPMTAMT);
        //return (Number) getAttributeInternal(TRANSPMTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPmtAmt.
     * @param value value to set the  TransPmtAmt
     */
    public void setTransPmtAmt(Number value) {
        /*  Number amtSpTax = getTransTotalPoCostSp();
        Number num= getTransSumPoPmtAmt();
        Number zero=new Number(0);
        if(num.compareTo(zero)==0){
            value= amtSpTax;
        }else{
            value=(Number)amtSpTax.subtract(num);
        } */
        if (value == null) {
            value = new Number(0);
        }

        setAttributeInternal(TRANSPMTAMT, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for the calculated attribute TransPmtAdvFlg.
     * @return the TransPmtAdvFlg
     */
    public String getTransPmtAdvFlg() {
        return (String) getAttributeInternal(TRANSPMTADVFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPmtAdvFlg.
     * @param value value to set the  TransPmtAdvFlg
     */
    public void setTransPmtAdvFlg(String value) {
        if (value == null) {
            value = "N";
        }
        setAttributeInternal(TRANSPMTADVFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumPoPmtAmt.
     * @return the TransSumPoPmtAmt
     */
    public Number getTransSumPoPmtAmt() {
        RowQualifier rq = new RowQualifier(getAm().getMmDrftPoPmtSchdl());
        rq.setWhereClause("CldId='" + getCldId() + "' and SlocId=" + getSlocId() + " and OrgId='" + getOrgId() +
                          "' and DocId='" + getDocId() + "'");
        Row[] fr = getAm().getMmDrftPoPmtSchdl().getFilteredRows(rq);
        Number sum = new Number(0);
        if (fr.length > 0) {
            for (Row r : fr) {
                Number payamt = new Number(0);
                if (r.getAttribute("PayAmt") != null)
                    payamt = (Number) r.getAttribute("PayAmt");
                sum = sum.add(payamt);
            }
        }
        return sum;
        //  return (Number) getAttributeInternal(TRANSSUMPOPMTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumPoPmtAmt.
     * @param value value to set the  TransSumPoPmtAmt
     */
    public void setTransSumPoPmtAmt(Number value) {
        setAttributeInternal(TRANSSUMPOPMTAMT, value);
    }

    /**
     * Gets the attribute value for AMD_DT using the alias name AmdDt.
     * @return the AMD_DT
     */
    public Date getAmdDt() {
        return (Date) getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_DT using the alias name AmdDt.
     * @param value value to set the AMD_DT
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for AMD_NO using the alias name AmdNo.
     * @return the AMD_NO
     */
    public Integer getAmdNo() {
        return (Integer) getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_NO using the alias name AmdNo.
     * @param value value to set the AMD_NO
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for SPLIT_PO_DOC_ID using the alias name SplitPoDocId.
     * @return the SPLIT_PO_DOC_ID
     */
    public String getSplitPoDocId() {
        return (String) getAttributeInternal(SPLITPODOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SPLIT_PO_DOC_ID using the alias name SplitPoDocId.
     * @param value value to set the SPLIT_PO_DOC_ID
     */
    public void setSplitPoDocId(String value) {
        setAttributeInternal(SPLITPODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBillAddsId.
     * @return the TransBillAddsId
     */
    public String getTransBillAddsId() {
        if (getBillAddsId() != null) {
            PurOrderAMImpl am = (PurOrderAMImpl) this.getApplicationModule();
            am.getLovAddressView().setNamedWhereClauseParam("SlocIdBind", getSlocId());
            am.getLovAddressView().setNamedWhereClauseParam("CldIdBind", getCldId());
            am.getLovAddressView().setNamedWhereClauseParam("AddsIdBind", getBillAddsId());
            am.getLovAddressView().executeQuery();
            Row[] rr = am.getLovAddressView().getFilteredRows("AddsId", getBillAddsId());
            if (rr.length > 0 && rr[0].getAttribute("AddDesc") != null) {
                return rr[0].getAttribute("AddDesc").toString();
            } else {
                return (String) getAttributeInternal(TRANSBILLADDSID);
            }
        } else {
            return (String) getAttributeInternal(TRANSBILLADDSID);
        }


        //
        //               String dlvAdds="";
        //               String transAdds="";
        //               try{
        //               dlvAdds=getBillAddsId();
        //               //x.getAttribute("TvouCoaId");
        //               }catch(NullPointerException npe){
        //
        //               }
        //               if(dlvAdds!=null){
        //               getAm().getLovSuppAddress().executeQuery();
        //               Row[] xx=getAm().getLovSuppAddress().getFilteredRows("AddsId", dlvAdds);
        //
        //               // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
        //                if(xx.length>0){
        //                    if(xx[0].getAttribute("AddsDesc")!=null){
        //                     transAdds= xx[0].getAttribute("AddsDesc").toString();
        //                }
        //               }
        //               return transAdds;
        //               }else{
        //                   return (String) getAttributeInternal(TRANSBILLADDSID);
        //               }


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBillAddsId.
     * @param value value to set the  TransBillAddsId
     */
    public void setTransBillAddsId(String value) {
        setAttributeInternal(TRANSBILLADDSID, value);
    }

    /**
     * Gets the attribute value for PO_MODE using the alias name PoMode.
     * @return the PO_MODE
     */
    public Integer getPoMode() {
        return (Integer) getAttributeInternal(POMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PO_MODE using the alias name PoMode.
     * @param value value to set the PO_MODE
     */
    public void setPoMode(Integer value) {
        setAttributeInternal(POMODE, value);
    }

    /**
     * Gets the attribute value for ORIG_DOC_ID using the alias name OrigDocId.
     * @return the ORIG_DOC_ID
     */
    public String getOrigDocId() {
        return (String) getAttributeInternal(ORIGDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORIG_DOC_ID using the alias name OrigDocId.
     * @param value value to set the ORIG_DOC_ID
     */
    public void setOrigDocId(String value) {
        setAttributeInternal(ORIGDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPmtPayMode.
     * @return the TransPmtPayMode
     */
    public Integer getTransPmtPayMode() {
        return (Integer) getAttributeInternal(TRANSPMTPAYMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPmtPayMode.
     * @param value value to set the  TransPmtPayMode
     */
    public void setTransPmtPayMode(Integer value) {
        setAttributeInternal(TRANSPMTPAYMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoTaxOnAmtAfterDisc.
     * @return the TransPoTaxOnAmtAfterDisc
     */
    public Number getTransPoTaxOnAmtAfterDisc() {
        return (Number) getAttributeInternal(TRANSPOTAXONAMTAFTERDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoTaxOnAmtAfterDisc.
     * @param value value to set the  TransPoTaxOnAmtAfterDisc
     */
    public void setTransPoTaxOnAmtAfterDisc(Number value) {
        setAttributeInternal(TRANSPOTAXONAMTAFTERDISC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        String p_horg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        return p_horg_id;
        // return (String) getAttributeInternal(TRANSHOORGID);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @return the DISC_AMT_SP
     */
    public Number getDiscAmtSp() {
        //  System.out.println("In discamtsp in po="+getTransPoDiscountAmt());
        Number convfctr = new Number(1);
        Number discSp = new Number(0);
        if (getCurrConvFctr() != null)
            convfctr = (Number)(getCurrConvFctr()).round(getGlblRoundCurrRateDigit());
        if (getAttributeInternal(DISCAMTSP) != null)
            discSp = (Number) getAttributeInternal(DISCAMTSP);
        setDiscAmtBs((Number) discSp.multiply(convfctr).round(getGlblRoundAmtDigit()));
        if (getAttributeInternal(DISCAMTSP) != null)
            return (Number) getAttributeInternal(DISCAMTSP);
        else
            return new Number(0);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @param value value to set the DISC_AMT_SP
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @return the DISC_AMT_BS
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @param value value to set the DISC_AMT_BS
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for OPEN_ORD_BASIS using the alias name OpenOrdBasis.
     * @return the OPEN_ORD_BASIS
     */
    public Integer getOpenOrdBasis() {
        return (Integer) getAttributeInternal(OPENORDBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for OPEN_ORD_BASIS using the alias name OpenOrdBasis.
     * @param value value to set the OPEN_ORD_BASIS
     */
    public void setOpenOrdBasis(Integer value) {
        setAttributeInternal(OPENORDBASIS, value);
    }

    /**
     * Gets the attribute value for OPEN_ORD_VAL using the alias name OpenOrdVal.
     * @return the OPEN_ORD_VAL
     */
    public Number getOpenOrdVal() {
        return (Number) getAttributeInternal(OPENORDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for OPEN_ORD_VAL using the alias name OpenOrdVal.
     * @param value value to set the OPEN_ORD_VAL
     */
    public void setOpenOrdVal(Number value) {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(OPENORDVAL, value.round(getGlblRoundAmtDigit()));
    }

    /**
     * Gets the attribute value for OPEN_ORD_UOM using the alias name OpenOrdUom.
     * @return the OPEN_ORD_UOM
     */
    public String getOpenOrdUom() {
        return (String) getAttributeInternal(OPENORDUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for OPEN_ORD_UOM using the alias name OpenOrdUom.
     * @param value value to set the OPEN_ORD_UOM
     */
    public void setOpenOrdUom(String value) {
        setAttributeInternal(OPENORDUOM, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for EO_ID_SHP_CO using the alias name EoIdShpCo.
     * @return the EO_ID_SHP_CO
     */
    public Integer getEoIdShpCo() {
        return (Integer) getAttributeInternal(EOIDSHPCO);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID_SHP_CO using the alias name EoIdShpCo.
     * @param value value to set the EO_ID_SHP_CO
     */
    public void setEoIdShpCo(Integer value) {
        setAttributeInternal(EOIDSHPCO, value);
    }

    /**
     * Gets the attribute value for EO_ID_CFA using the alias name EoIdCfa.
     * @return the EO_ID_CFA
     */
    public Integer getEoIdCfa() {
        return (Integer) getAttributeInternal(EOIDCFA);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID_CFA using the alias name EoIdCfa.
     * @param value value to set the EO_ID_CFA
     */
    public void setEoIdCfa(Integer value) {
        setAttributeInternal(EOIDCFA, value);
    }

    /**
     * Gets the attribute value for FRT_TO_PAY using the alias name FrtToPay.
     * @return the FRT_TO_PAY
     */
    public String getFrtToPay() {
        return (String) getAttributeInternal(FRTTOPAY);
    }

    /**
     * Sets <code>value</code> as attribute value for FRT_TO_PAY using the alias name FrtToPay.
     * @param value value to set the FRT_TO_PAY
     */
    public void setFrtToPay(String value) {
        setAttributeInternal(FRTTOPAY, value);
    }

    /**
     * Gets the attribute value for PLC_ID using the alias name PlcId.
     * @return the PLC_ID
     */
    public String getPlcId() {
        return (String) getAttributeInternal(PLCID);
    }

    /**
     * Sets <code>value</code> as attribute value for PLC_ID using the alias name PlcId.
     * @param value value to set the PLC_ID
     */
    public void setPlcId(String value) {
        setAttributeInternal(PLCID, value);
    }

    /**
     * Gets the attribute value for AUTH_PO_NO using the alias name AuthPoNo.
     * @return the AUTH_PO_NO
     */
    public String getAuthPoNo() {
        return (String) getAttributeInternal(AUTHPONO);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_PO_NO using the alias name AuthPoNo.
     * @param value value to set the AUTH_PO_NO
     */
    public void setAuthPoNo(String value) {
        setAttributeInternal(AUTHPONO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoDlvSchdl.
     */
    public RowIterator getMmDrftPoDlvSchdl() {
        return (RowIterator) getAttributeInternal(MMDRFTPODLVSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoItm.
     */
    public RowIterator getMmDrftPoItm() {
        return (RowIterator) getAttributeInternal(MMDRFTPOITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoOc.
     */
    public RowIterator getMmDrftPoOc() {
        return (RowIterator) getAttributeInternal(MMDRFTPOOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoPmtSchdl.
     */
    public RowIterator getMmDrftPoPmtSchdl() {
        return (RowIterator) getAttributeInternal(MMDRFTPOPMTSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoTr.
     */
    public RowIterator getMmDrftPoTr() {
        return (RowIterator) getAttributeInternal(MMDRFTPOTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoTnc.
     */
    public RowIterator getMmDrftPoTnc() {
        return (RowIterator) getAttributeInternal(MMDRFTPOTNC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DlvSchdlBalanceView.
     */
    public RowIterator getDlvSchdlBalanceView() {
        return (RowIterator) getAttributeInternal(DLVSCHDLBALANCEVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmTmpPoSuggSupp.
     */
    public RowIterator getMmTmpPoSuggSupp() {
        return (RowIterator) getAttributeInternal(MMTMPPOSUGGSUPP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoContnr.
     */
    public RowIterator getMmDrftPoContnr() {
        return (RowIterator) getAttributeInternal(MMDRFTPOCONTNR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoPorts.
     */
    public RowIterator getMmDrftPoPorts() {
        return (RowIterator) getAttributeInternal(MMDRFTPOPORTS);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoCalc.
     */
    public RowIterator getMmDrftPoCalc() {
        return (RowIterator) getAttributeInternal(MMDRFTPOCALC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmDrftPoFlx.
     */
    public RowIterator getMmDrftPoFlx() {
        return (RowIterator) getAttributeInternal(MMDRFTPOFLX);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoIdVO.
     */
    public RowSet getLovEoIdVO() {
        return (RowSet) getAttributeInternal(LOVEOIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgId.
     */
    public RowSet getLovOrgId() {
        return (RowSet) getAttributeInternal(LOVORGID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId.
     */
    public RowSet getLovUsrId() {
        return (RowSet) getAttributeInternal(LOVUSRID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPoStatus.
     */
    public RowSet getLovPoStatus() {
        return (RowSet) getAttributeInternal(LOVPOSTATUS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrId.
     */
    public RowSet getLovCurrId() {
        return (RowSet) getAttributeInternal(LOVCURRID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPoType.
     */
    public RowSet getLovPoType() {
        return (RowSet) getAttributeInternal(LOVPOTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPoSource.
     */
    public RowSet getLovPoSource() {
        return (RowSet) getAttributeInternal(LOVPOSOURCE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSoGrpId.
     */
    public RowSet getLovSoGrpId() {
        return (RowSet) getAttributeInternal(LOVSOGRPID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotDocId.
     */
    public RowSet getLovQuotDocId() {
        return (RowSet) getAttributeInternal(LOVQUOTDOCID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRefPoDocId.
     */
    public RowSet getLovRefPoDocId() {
        return (RowSet) getAttributeInternal(LOVREFPODOCID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhId.
     */
    public RowSet getLovWhId() {
        return (RowSet) getAttributeInternal(LOVWHID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhIdAddr.
     */
    public RowSet getLovWhIdAddr() {
        return (RowSet) getAttributeInternal(LOVWHIDADDR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDlvMode.
     */
    public RowSet getLovDlvMode() {
        return (RowSet) getAttributeInternal(LOVDLVMODE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscType.
     */
    public RowSet getLovDiscType() {
        return (RowSet) getAttributeInternal(LOVDISCTYPE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTmpltPoId.
     */
    public RowSet getLovTmpltPoId() {
        return (RowSet) getAttributeInternal(LOVTMPLTPOID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSuppAddress.
     */
    public RowSet getLovSuppAddress() {
        return (RowSet) getAttributeInternal(LOVSUPPADDRESS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPayMode.
     */
    public RowSet getLovPayMode() {
        return (RowSet) getAttributeInternal(LOVPAYMODE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPoMode.
     */
    public RowSet getLovPoMode() {
        return (RowSet) getAttributeInternal(LOVPOMODE);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO.
     */
    public RowSet getLovCurrencyVO() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleId1.
     */
    public RowSet getLovTaxRuleId1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOpenOrdBasis.
     */
    public RowSet getLovOpenOrdBasis() {
        return (RowSet) getAttributeInternal(LOVOPENORDBASIS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppEoPricePlc.
     */
    public RowSet getAppEoPricePlc() {
        return (RowSet) getAttributeInternal(APPEOPRICEPLC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DlvSchdlBalanceView1.
     */
    public RowSet getDlvSchdlBalanceView1() {
        return (RowSet) getAttributeInternal(DLVSCHDLBALANCEVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUom.
     */
    public RowSet getLovItmUom() {
        return (RowSet) getAttributeInternal(LOVITMUOM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppPricePlc.
     */
    public RowSet getLovAppPricePlc() {
        return (RowSet) getAttributeInternal(LOVAPPPRICEPLC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRefDocIdOpenPoVO.
     */
    public RowSet getLovRefDocIdOpenPoVO() {
        return (RowSet) getAttributeInternal(LOVREFDOCIDOPENPOVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaId.
     */
    public RowSet getLovCoaId() {
        return (RowSet) getAttributeInternal(LOVCOAID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcDesc.
     */
    public RowSet getLovOcDesc() {
        return (RowSet) getAttributeInternal(LOVOCDESC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPortIdVO.
     */
    public RowSet getLovPortIdVO() {
        return (RowSet) getAttributeInternal(LOVPORTIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShippingCompanyVO.
     */
    public RowSet getLovShippingCompanyVO() {
        return (RowSet) getAttributeInternal(LOVSHIPPINGCOMPANYVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCfaVO.
     */
    public RowSet getLovCfaVO() {
        return (RowSet) getAttributeInternal(LOVCFAVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOvShipmentBasisVO.
     */
    public RowSet getLOvShipmentBasisVO() {
        return (RowSet) getAttributeInternal(LOVSHIPMENTBASISVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLcIdVO.
     */
    public RowSet getLovLcIdVO() {
        return (RowSet) getAttributeInternal(LOVLCIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleIdNewVO.
     */
    public RowSet getLovTaxRuleIdNewVO() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDNEWVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhProjectVO.
     */
    public RowSet getLovWhProjectVO() {
        return (RowSet) getAttributeInternal(LOVWHPROJECTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaIdForCashPoVO.
     */
    public RowSet getLovCoaIdForCashPoVO() {
        return (RowSet) getAttributeInternal(LOVCOAIDFORCASHPOVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPRNoVO.
     */
    public RowSet getLovPRNoVO() {
        return (RowSet) getAttributeInternal(LOVPRNOVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPrCatgVO.
     */
    public RowSet getLovPrCatgVO() {
        return (RowSet) getAttributeInternal(LOVPRCATGVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /* public PurOrderAMImpl getAm() {
        return (PurOrderAMImpl)this.getApplicationModule();
    } */

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
