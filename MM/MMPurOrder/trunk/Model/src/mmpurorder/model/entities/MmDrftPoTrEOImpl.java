package mmpurorder.model.entities;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 10 18:57:56 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoTrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        TaxRuleId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxRuleId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxRuleId((Integer) value);
            }
        }
        ,
        TaxableAmt {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxableAmt();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxableAmt((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        RowID {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getRowID();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setRowID((RowID) value);
            }
        }
        ,
        TaxAmt {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxAmt();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxAmt((Number) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        AmdNo {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setAmdNo((Integer) value);
            }
        }
        ,
        AmdDt {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setAmdDt((Date) value);
            }
        }
        ,
        CldId {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        TaxExmptFlg {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxExmptFlg();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxExmptFlg((String) value);
            }
        }
        ,
        TaxAmtBs {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxAmtBs();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxAmtBs((BigDecimal) value);
            }
        }
        ,
        TaxableAmtBs {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getTaxableAmtBs();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setTaxableAmtBs((BigDecimal) value);
            }
        }
        ,
        MmDrftPo {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getMmDrftPo();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setMmDrftPo((MmDrftPoEOImpl) value);
            }
        }
        ,
        MmDrftPoTrLines {
            public Object get(MmDrftPoTrEOImpl obj) {
                return obj.getMmDrftPoTrLines();
            }

            public void put(MmDrftPoTrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MmDrftPoTrEOImpl object);

        public abstract void put(MmDrftPoTrEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int TAXRULEID = AttributesEnum.TaxRuleId.index();
    public static final int TAXABLEAMT = AttributesEnum.TaxableAmt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int ROWID = AttributesEnum.RowID.index();
    public static final int TAXAMT = AttributesEnum.TaxAmt.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int TAXEXMPTFLG = AttributesEnum.TaxExmptFlg.index();
    public static final int TAXAMTBS = AttributesEnum.TaxAmtBs.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int MMDRFTPO = AttributesEnum.MmDrftPo.index();
    public static final int MMDRFTPOTRLINES = AttributesEnum.MmDrftPoTrLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoTrEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmpurorder.model.entities.MmDrftPoTrEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for TaxRuleId, using the alias name TaxRuleId.
     * @return the value of TaxRuleId
     */
    public Integer getTaxRuleId() {
        return (Integer) getAttributeInternal(TAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleId.
     * @param value value to set the TaxRuleId
     */
    public void setTaxRuleId(Integer value) {
        setAttributeInternal(TAXRULEID, value);
    }

    /**
     * Gets the attribute value for TaxableAmt, using the alias name TaxableAmt.
     * @return the value of TaxableAmt
     */
    public Number getTaxableAmt() {
        return (Number) getAttributeInternal(TAXABLEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmt.
     * @param value value to set the TaxableAmt
     */
    public void setTaxableAmt(Number value) {
        setAttributeInternal(TAXABLEAMT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for RowID, using the alias name RowID.
     * @return the value of RowID
     */
    public RowID getRowID() {
        return (RowID) getAttributeInternal(ROWID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RowID.
     * @param value value to set the RowID
     */
    public void setRowID(RowID value) {
        setAttributeInternal(ROWID, value);
    }

    /**
     * Gets the attribute value for TaxAmt, using the alias name TaxAmt.
     * @return the value of TaxAmt
     */
    public Number getTaxAmt() {
        return (Number) getAttributeInternal(TAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmt.
     * @param value value to set the TaxAmt
     */
    public void setTaxAmt(Number value) {
        setAttributeInternal(TAXAMT, value);
    }

    /**
     * Gets the attribute value for TaxRuleFlg, using the alias name TaxRuleFlg.
     * @return the value of TaxRuleFlg
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleFlg.
     * @param value value to set the TaxRuleFlg
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for AmdNo, using the alias name AmdNo.
     * @return the value of AmdNo
     */
    public Integer getAmdNo() {
        return (Integer) getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdNo.
     * @param value value to set the AmdNo
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for AmdDt, using the alias name AmdDt.
     * @return the value of AmdDt
     */
    public Date getAmdDt() {
        return (Date) getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdDt.
     * @param value value to set the AmdDt
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for TaxExmptFlg, using the alias name TaxExmptFlg.
     * @return the value of TaxExmptFlg
     */
    public String getTaxExmptFlg() {
        return (String) getAttributeInternal(TAXEXMPTFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxExmptFlg.
     * @param value value to set the TaxExmptFlg
     */
    public void setTaxExmptFlg(String value) {
        setAttributeInternal(TAXEXMPTFLG, value);
    }

    /**
     * Gets the attribute value for TaxAmtBs, using the alias name TaxAmtBs.
     * @return the value of TaxAmtBs
     */
    public BigDecimal getTaxAmtBs() {
        return (BigDecimal) getAttributeInternal(TAXAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAmtBs.
     * @param value value to set the TaxAmtBs
     */
    public void setTaxAmtBs(BigDecimal value) {
        setAttributeInternal(TAXAMTBS, value);
    }

    /**
     * Gets the attribute value for TaxableAmtBs, using the alias name TaxableAmtBs.
     * @return the value of TaxableAmtBs
     */
    public BigDecimal getTaxableAmtBs() {
        return (BigDecimal) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxableAmtBs.
     * @param value value to set the TaxableAmtBs
     */
    public void setTaxableAmtBs(BigDecimal value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmDrftPoEOImpl.
     */
    public MmDrftPoEOImpl getMmDrftPo() {
        return (MmDrftPoEOImpl) getAttributeInternal(MMDRFTPO);
    }

    /**
     * Sets <code>value</code> as the associated entity MmDrftPoEOImpl.
     */
    public void setMmDrftPo(MmDrftPoEOImpl value) {
        setAttributeInternal(MMDRFTPO, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmDrftPoTrLines() {
        return (RowIterator) getAttributeInternal(MMDRFTPOTRLINES);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

