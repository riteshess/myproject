package mmpurorder.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 08 16:30:52 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoTncEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        TncId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getTncId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setTncId((Integer)value);
            }
        }
        ,
        Priority {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getPriority();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setPriority((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        AmdNo {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setAmdNo((Integer)value);
            }
        }
        ,
        AmdDt {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setAmdDt((Date)value);
            }
        }
        ,
        CldId {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MmDrftPo {
            public Object get(MmDrftPoTncEOImpl obj) {
                return obj.getMmDrftPo();
            }

            public void put(MmDrftPoTncEOImpl obj, Object value) {
                obj.setMmDrftPo((MmDrftPoEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmDrftPoTncEOImpl object);

        public abstract void put(MmDrftPoTncEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int TNCID = AttributesEnum.TncId.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MMDRFTPO = AttributesEnum.MmDrftPo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoTncEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmpurorder.model.entities.MmDrftPoTncEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for TncId, using the alias name TncId.
     * @return the value of TncId
     */
    public Integer getTncId() {
        return (Integer)getAttributeInternal(TNCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TncId.
     * @param value value to set the TncId
     */
    public void setTncId(Integer value) {
        setAttributeInternal(TNCID, value);
    }

    /**
     * Gets the attribute value for Priority, using the alias name Priority.
     * @return the value of Priority
     */
    public Integer getPriority() {
        return (Integer)getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Priority.
     * @param value value to set the Priority
     */
    public void setPriority(Integer value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for AmdNo, using the alias name AmdNo.
     * @return the value of AmdNo
     */
    public Integer getAmdNo() {
        return (Integer)getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdNo.
     * @param value value to set the AmdNo
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for AmdDt, using the alias name AmdDt.
     * @return the value of AmdDt
     */
    public Date getAmdDt() {
        return (Date)getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmdDt.
     * @param value value to set the AmdDt
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmDrftPoEOImpl.
     */
    public MmDrftPoEOImpl getMmDrftPo() {
        return (MmDrftPoEOImpl)getAttributeInternal(MMDRFTPO);
    }

    /**
     * Sets <code>value</code> as the associated entity MmDrftPoEOImpl.
     */
    public void setMmDrftPo(MmDrftPoEOImpl value) {
        setAttributeInternal(MMDRFTPO, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param tncId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, Integer tncId, String cldId) {
        return new Key(new Object[]{slocId, orgId, docId, tncId, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
