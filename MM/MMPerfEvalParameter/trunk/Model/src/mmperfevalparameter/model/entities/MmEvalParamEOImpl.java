package mmperfevalparameter.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 07 14:15:37 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmEvalParamEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        ParamSetId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getParamSetId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setParamSetId((String)value);
            }
        }
        ,
        ParamId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getParamId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setParamId((String)value);
            }
        }
        ,
        ParamNm {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getParamNm();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setParamNm((String)value);
            }
        }
        ,
        ParamDesc {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getParamDesc();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setParamDesc((String)value);
            }
        }
        ,
        ParamWtg {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getParamWtg();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setParamWtg((Number)value);
            }
        }
        ,
        Actv {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getActv();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MmEvalParamSet {
            public Object get(MmEvalParamEOImpl obj) {
                return obj.getMmEvalParamSet();
            }

            public void put(MmEvalParamEOImpl obj, Object value) {
                obj.setMmEvalParamSet((MmEvalParamSetEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmEvalParamEOImpl object);

        public abstract void put(MmEvalParamEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PARAMSETID = AttributesEnum.ParamSetId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMNM = AttributesEnum.ParamNm.index();
    public static final int PARAMDESC = AttributesEnum.ParamDesc.index();
    public static final int PARAMWTG = AttributesEnum.ParamWtg.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MMEVALPARAMSET = AttributesEnum.MmEvalParamSet.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmEvalParamEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmperfevalparameter.model.entities.MmEvalParamEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ParamSetId, using the alias name ParamSetId.
     * @return the value of ParamSetId
     */
    public String getParamSetId() {
        return (String)getAttributeInternal(PARAMSETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamSetId.
     * @param value value to set the ParamSetId
     */
    public void setParamSetId(String value) {
        setAttributeInternal(PARAMSETID, value);
    }

    /**
     * Gets the attribute value for ParamId, using the alias name ParamId.
     * @return the value of ParamId
     */
    public String getParamId() {
        return (String)getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamId.
     * @param value value to set the ParamId
     */
    public void setParamId(String value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for ParamNm, using the alias name ParamNm.
     * @return the value of ParamNm
     */
    public String getParamNm() {
        return (String)getAttributeInternal(PARAMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamNm.
     * @param value value to set the ParamNm
     */
    public void setParamNm(String value) {
        setAttributeInternal(PARAMNM, value);
    }

    /**
     * Gets the attribute value for ParamDesc, using the alias name ParamDesc.
     * @return the value of ParamDesc
     */
    public String getParamDesc() {
        return (String)getAttributeInternal(PARAMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamDesc.
     * @param value value to set the ParamDesc
     */
    public void setParamDesc(String value) {
        setAttributeInternal(PARAMDESC, value);
    }

    /**
     * Gets the attribute value for ParamWtg, using the alias name ParamWtg.
     * @return the value of ParamWtg
     */
    public Number getParamWtg() {
        return (Number)getAttributeInternal(PARAMWTG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamWtg.
     * @param value value to set the ParamWtg
     */
    public void setParamWtg(Number value) {
        setAttributeInternal(PARAMWTG, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Date getInactvDt() {
        return (Date)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public MmEvalParamSetEOImpl getMmEvalParamSet() {
        return (MmEvalParamSetEOImpl)getAttributeInternal(MMEVALPARAMSET);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMmEvalParamSet(MmEvalParamSetEOImpl value) {
        setAttributeInternal(MMEVALPARAMSET, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param paramSetId key constituent
     * @param paramId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String paramSetId, String paramId) {
        return new Key(new Object[]{slocId, orgId, paramSetId, paramId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    protected void create(AttributeList attributeList) {
        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
       
        setUsrIdCreate(userId);
        
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            Integer usridMod = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(usridMod);
        }
        super.doDML(operation, e);
    }
}
