package procurementreportapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Date;

import javax.el.ELContext;
import javax.el.ValueExpression;
import oracle.adf.share.ADFContext;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 25 10:22:32 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProcurementTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        EoNmTrans,
        EoIdTrans,
        SlocId,
        CldId,
        OrgId,
        HoOrgId,
        PoNo,
        PoDocId,
        RFQId,
        QuotId,
        QuotDocId,
        Eval_Id,
        EvalIdTrans,
        CPONOTrans,
        CPONoDocIdTrans,
        CoaNmTrans,
        CoaIdTrans,
        ItmIdTrans,
        ItmNmTrans,
        SoNoTrans,
        SoDocIdTrans,
        OrderPONOTrans,
        OrderPoNoDocIdTrans,
        FromDate,
        ToDate,
        PoStatusIdTrans,
        PoStatusNmTrans,
        RFQStatIdTrans,
        RFQStatNmTrans,
        QuotStatIdTrans,
        QuotStatNmTrans,
        QuotAnaStatIdTrans,
        QuotAnaStatNmTrans,
        OrgNmTrans,
        PoTypeTrans,
        PoBasisTrans,
        RptNmTrans,
        RfqDocIdTrans,
        IDFNoTrans,
        IDFDocIdTrans,
        LovSupplierVO1,
        LovPONoTrans1,
        LovRFQVO1,
        LovQuotNoVO1,
        LovEvalIdVO1,
        LovCPONoVO1,
        LovCoaNmVO1,
        LovItemNamVO1,
        LovSOVO1,
        LovOrderPoNoVO1,
        LovPOStatusVO1,
        LovRFQStatusVO1,
        LovQuotStatusVO1,
        LovQuotAnalyStatusVO1,
        LovOrgVO1,
        LovIDFNoVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int PONO = AttributesEnum.PoNo.index();
    public static final int PODOCID = AttributesEnum.PoDocId.index();
    public static final int RFQID = AttributesEnum.RFQId.index();
    public static final int QUOTID = AttributesEnum.QuotId.index();
    public static final int QUOTDOCID = AttributesEnum.QuotDocId.index();
    public static final int EVAL_ID = AttributesEnum.Eval_Id.index();
    public static final int EVALIDTRANS = AttributesEnum.EvalIdTrans.index();
    public static final int CPONOTRANS = AttributesEnum.CPONOTrans.index();
    public static final int CPONODOCIDTRANS = AttributesEnum.CPONoDocIdTrans.index();
    public static final int COANMTRANS = AttributesEnum.CoaNmTrans.index();
    public static final int COAIDTRANS = AttributesEnum.CoaIdTrans.index();
    public static final int ITMIDTRANS = AttributesEnum.ItmIdTrans.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int SONOTRANS = AttributesEnum.SoNoTrans.index();
    public static final int SODOCIDTRANS = AttributesEnum.SoDocIdTrans.index();
    public static final int ORDERPONOTRANS = AttributesEnum.OrderPONOTrans.index();
    public static final int ORDERPONODOCIDTRANS = AttributesEnum.OrderPoNoDocIdTrans.index();
    public static final int FROMDATE = AttributesEnum.FromDate.index();
    public static final int TODATE = AttributesEnum.ToDate.index();
    public static final int POSTATUSIDTRANS = AttributesEnum.PoStatusIdTrans.index();
    public static final int POSTATUSNMTRANS = AttributesEnum.PoStatusNmTrans.index();
    public static final int RFQSTATIDTRANS = AttributesEnum.RFQStatIdTrans.index();
    public static final int RFQSTATNMTRANS = AttributesEnum.RFQStatNmTrans.index();
    public static final int QUOTSTATIDTRANS = AttributesEnum.QuotStatIdTrans.index();
    public static final int QUOTSTATNMTRANS = AttributesEnum.QuotStatNmTrans.index();
    public static final int QUOTANASTATIDTRANS = AttributesEnum.QuotAnaStatIdTrans.index();
    public static final int QUOTANASTATNMTRANS = AttributesEnum.QuotAnaStatNmTrans.index();
    public static final int ORGNMTRANS = AttributesEnum.OrgNmTrans.index();
    public static final int POTYPETRANS = AttributesEnum.PoTypeTrans.index();
    public static final int POBASISTRANS = AttributesEnum.PoBasisTrans.index();
    public static final int RPTNMTRANS = AttributesEnum.RptNmTrans.index();
    public static final int RFQDOCIDTRANS = AttributesEnum.RfqDocIdTrans.index();
    public static final int IDFNOTRANS = AttributesEnum.IDFNoTrans.index();
    public static final int IDFDOCIDTRANS = AttributesEnum.IDFDocIdTrans.index();
    public static final int LOVSUPPLIERVO1 = AttributesEnum.LovSupplierVO1.index();
    public static final int LOVPONOTRANS1 = AttributesEnum.LovPONoTrans1.index();
    public static final int LOVRFQVO1 = AttributesEnum.LovRFQVO1.index();
    public static final int LOVQUOTNOVO1 = AttributesEnum.LovQuotNoVO1.index();
    public static final int LOVEVALIDVO1 = AttributesEnum.LovEvalIdVO1.index();
    public static final int LOVCPONOVO1 = AttributesEnum.LovCPONoVO1.index();
    public static final int LOVCOANMVO1 = AttributesEnum.LovCoaNmVO1.index();
    public static final int LOVITEMNAMVO1 = AttributesEnum.LovItemNamVO1.index();
    public static final int LOVSOVO1 = AttributesEnum.LovSOVO1.index();
    public static final int LOVORDERPONOVO1 = AttributesEnum.LovOrderPoNoVO1.index();
    public static final int LOVPOSTATUSVO1 = AttributesEnum.LovPOStatusVO1.index();
    public static final int LOVRFQSTATUSVO1 = AttributesEnum.LovRFQStatusVO1.index();
    public static final int LOVQUOTSTATUSVO1 = AttributesEnum.LovQuotStatusVO1.index();
    public static final int LOVQUOTANALYSTATUSVO1 = AttributesEnum.LovQuotAnalyStatusVO1.index();
    public static final int LOVORGVO1 = AttributesEnum.LovOrgVO1.index();
    public static final int LOVIDFNOVO1 = AttributesEnum.LovIDFNoVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProcurementTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNmTrans() {
        return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNm.
     * @param value value to set the  EoNm
     */
    public void setEoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoIdTrans() {
        return (Integer) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoIdTrans(Integer value) {
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}") != null) {
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        } else
            return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}") != null) {
            return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        } else
            return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}") != null) {
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        } else
            return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        if (resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}") != null) {
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        } else
            return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoNo.
     * @return the PoNo
     */
    public String getPoNo() {
        return (String) getAttributeInternal(PONO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoNo.
     * @param value value to set the  PoNo
     */
    public void setPoNo(String value) {
        setAttributeInternal(PONO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoDocId.
     * @return the PoDocId
     */
    public String getPoDocId() {
        return (String) getAttributeInternal(PODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoDocId.
     * @param value value to set the  PoDocId
     */
    public void setPoDocId(String value) {
        setAttributeInternal(PODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RFQId.
     * @return the RFQId
     */
    public String getRFQId() {
        return (String) getAttributeInternal(RFQID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RFQId.
     * @param value value to set the  RFQId
     */
    public void setRFQId(String value) {
        setAttributeInternal(RFQID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotId.
     * @return the QuotId
     */
    public String getQuotId() {
        return (String) getAttributeInternal(QUOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotId.
     * @param value value to set the  QuotId
     */
    public void setQuotId(String value) {
        setAttributeInternal(QUOTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotDocId.
     * @return the QuotDocId
     */
    public String getQuotDocId() {
        return (String) getAttributeInternal(QUOTDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotDocId.
     * @param value value to set the  QuotDocId
     */
    public void setQuotDocId(String value) {
        setAttributeInternal(QUOTDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Eval_Id.
     * @return the Eval_Id
     */
    public String getEval_Id() {
        return (String) getAttributeInternal(EVAL_ID);
    }

    /**
     * Gets the attribute value for the calculated attribute EvalId.
     * @return the EvalId
     */
    public String getEvalIdTrans() {
        return (String) getAttributeInternal(EVALIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EvalId.
     * @param value value to set the  EvalId
     */
    public void setEvalIdTrans(String value) {
        setAttributeInternal(EVALIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CPONO.
     * @return the CPONO
     */
    public String getCPONOTrans() {
        return (String) getAttributeInternal(CPONOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CPONO.
     * @param value value to set the  CPONO
     */
    public void setCPONOTrans(String value) {
        setAttributeInternal(CPONOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CPONoDocIdTrans.
     * @return the CPONoDocIdTrans
     */
    public String getCPONoDocIdTrans() {
        return (String) getAttributeInternal(CPONODOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CPONoDocIdTrans.
     * @param value value to set the  CPONoDocIdTrans
     */
    public void setCPONoDocIdTrans(String value) {
        setAttributeInternal(CPONODOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNmTrans.
     * @return the CoaNmTrans
     */
    public String getCoaNmTrans() {
        return (String) getAttributeInternal(COANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNmTrans.
     * @param value value to set the  CoaNmTrans
     */
    public void setCoaNmTrans(String value) {
        setAttributeInternal(COANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaIdTrans.
     * @return the CoaIdTrans
     */
    public Integer getCoaIdTrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaIdTrans.
     * @param value value to set the  CoaIdTrans
     */
    public void setCoaIdTrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmIdTrans.
     * @return the ItmIdTrans
     */
    public String getItmIdTrans() {
        return (String) getAttributeInternal(ITMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmIdTrans.
     * @param value value to set the  ItmIdTrans
     */
    public void setItmIdTrans(String value) {
        setAttributeInternal(ITMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    public String getItmNmTrans() {
        return (String) getAttributeInternal(ITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoNoTrans.
     * @return the SoNoTrans
     */
    public String getSoNoTrans() {
        return (String) getAttributeInternal(SONOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoNoTrans.
     * @param value value to set the  SoNoTrans
     */
    public void setSoNoTrans(String value) {
        setAttributeInternal(SONOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoDocIdTrans.
     * @return the SoDocIdTrans
     */
    public String getSoDocIdTrans() {
        return (String) getAttributeInternal(SODOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoDocIdTrans.
     * @param value value to set the  SoDocIdTrans
     */
    public void setSoDocIdTrans(String value) {
        setAttributeInternal(SODOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderPONOTrans.
     * @return the OrderPONOTrans
     */
    public String getOrderPONOTrans() {
        return (String) getAttributeInternal(ORDERPONOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderPONOTrans.
     * @param value value to set the  OrderPONOTrans
     */
    public void setOrderPONOTrans(String value) {
        setAttributeInternal(ORDERPONOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrderPoNoDocIdTrans.
     * @return the OrderPoNoDocIdTrans
     */
    public String getOrderPoNoDocIdTrans() {
        return (String) getAttributeInternal(ORDERPONODOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderPoNoDocIdTrans.
     * @param value value to set the  OrderPoNoDocIdTrans
     */
    public void setOrderPoNoDocIdTrans(String value) {
        setAttributeInternal(ORDERPONODOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDate.
     * @return the FromDate
     */
    public Timestamp getFromDate() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Date dt = new Date();
        Timestamp ts= null;
        try {
            dt = (Date) (callStoredFunction(Types.DATE, "APP.fn_get_fy_start_date(?,?,?,?)", new Object[] {
                                            CldId, OrgId, new Timestamp(System.currentTimeMillis()), "FY"
            }));
            ts = new Timestamp(dt.getTime());
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        return ((Timestamp) getAttributeInternal(FROMDATE) == null ? ts : (Timestamp) getAttributeInternal(FROMDATE));
        
       // return (Timestamp) getAttributeInternal(FROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDate.
     * @param value value to set the  FromDate
     */
    public void setFromDate(Timestamp value) {
        setAttributeInternal(FROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDate.
     * @return the ToDate
     */
    public Timestamp getToDate() {
       return ((Timestamp) getAttributeInternal(TODATE)==null?new Timestamp(System.currentTimeMillis()):(Timestamp) getAttributeInternal(TODATE));
      // return (Timestamp) getAttributeInternal(TODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDate.
     * @param value value to set the  ToDate
     */
    public void setToDate(Timestamp value) {
        setAttributeInternal(TODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoStatusIdTrans.
     * @return the PoStatusIdTrans
     */
    public Integer getPoStatusIdTrans() {
        return (Integer) getAttributeInternal(POSTATUSIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoStatusIdTrans.
     * @param value value to set the  PoStatusIdTrans
     */
    public void setPoStatusIdTrans(Integer value) {
        setAttributeInternal(POSTATUSIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoStatusNmTrans.
     * @return the PoStatusNmTrans
     */
    public String getPoStatusNmTrans() {
        return (String) getAttributeInternal(POSTATUSNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoStatusNmTrans.
     * @param value value to set the  PoStatusNmTrans
     */
    public void setPoStatusNmTrans(String value) {
        setAttributeInternal(POSTATUSNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RFQStatIdTrans.
     * @return the RFQStatIdTrans
     */
    public Integer getRFQStatIdTrans() {
        return (Integer) getAttributeInternal(RFQSTATIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RFQStatIdTrans.
     * @param value value to set the  RFQStatIdTrans
     */
    public void setRFQStatIdTrans(Integer value) {
        setAttributeInternal(RFQSTATIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RFQStatNmTrans.
     * @return the RFQStatNmTrans
     */
    public String getRFQStatNmTrans() {
        return (String) getAttributeInternal(RFQSTATNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RFQStatNmTrans.
     * @param value value to set the  RFQStatNmTrans
     */
    public void setRFQStatNmTrans(String value) {
        setAttributeInternal(RFQSTATNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotStatIdTrans.
     * @return the QuotStatIdTrans
     */
    public Integer getQuotStatIdTrans() {
        return (Integer) getAttributeInternal(QUOTSTATIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotStatIdTrans.
     * @param value value to set the  QuotStatIdTrans
     */
    public void setQuotStatIdTrans(Integer value) {
        setAttributeInternal(QUOTSTATIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotStatNmTrans.
     * @return the QuotStatNmTrans
     */
    public String getQuotStatNmTrans() {
        return (String) getAttributeInternal(QUOTSTATNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotStatNmTrans.
     * @param value value to set the  QuotStatNmTrans
     */
    public void setQuotStatNmTrans(String value) {
        setAttributeInternal(QUOTSTATNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotAnaStatIdTrans.
     * @return the QuotAnaStatIdTrans
     */
    public Integer getQuotAnaStatIdTrans() {
        return (Integer) getAttributeInternal(QUOTANASTATIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotAnaStatIdTrans.
     * @param value value to set the  QuotAnaStatIdTrans
     */
    public void setQuotAnaStatIdTrans(Integer value) {
        setAttributeInternal(QUOTANASTATIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotAnaStatNmTrans.
     * @return the QuotAnaStatNmTrans
     */
    public String getQuotAnaStatNmTrans() {
        return (String) getAttributeInternal(QUOTANASTATNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotAnaStatNmTrans.
     * @param value value to set the  QuotAnaStatNmTrans
     */
    public void setQuotAnaStatNmTrans(String value) {
        setAttributeInternal(QUOTANASTATNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgNmTrans.
     * @return the OrgNmTrans
     */
    public String getOrgNmTrans() {
        return (String) getAttributeInternal(ORGNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgNmTrans.
     * @param value value to set the  OrgNmTrans
     */
    public void setOrgNmTrans(String value) {
        setAttributeInternal(ORGNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoTypeTrans.
     * @return the PoTypeTrans
     */
    public Integer getPoTypeTrans() {
        String podoc = getPoDocId();
        Integer potype = null;
        Row r[] = getLovPONoTrans1().getFilteredRows("DocId", podoc);
        if (r.length != 0 && r.length > 0) {
            potype = Integer.parseInt(r[0].getAttribute("PoType").toString());
            return potype;
        } else {
            return (Integer) getAttributeInternal(POTYPETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoTypeTrans.
     * @param value value to set the  PoTypeTrans
     */
    public void setPoTypeTrans(Integer value) {
        setAttributeInternal(POTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoBasisTrans.
     * @return the PoBasisTrans
     */
    public Integer getPoBasisTrans() {
        String podoc = getPoDocId();
        Row r[] = getLovPONoTrans1().getFilteredRows("DocId", podoc);
        Integer pobasis = null;
        if (r.length != 0 && r.length > 0) {
            pobasis = Integer.parseInt(r[0].getAttribute("PoBasis").toString());
            return pobasis;
        } else {
            return (Integer) getAttributeInternal(POBASISTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoBasisTrans.
     * @param value value to set the  PoBasisTrans
     */
    public void setPoBasisTrans(Integer value) {
        setAttributeInternal(POBASISTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptNmTrans.
     * @return the RptNmTrans
     */
    public String getRptNmTrans() {
        return (String) getAttributeInternal(RPTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptNmTrans.
     * @param value value to set the  RptNmTrans
     */
    public void setRptNmTrans(String value) {
        setAttributeInternal(RPTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RfqDocIdTrans.
     * @return the RfqDocIdTrans
     */
    public String getRfqDocIdTrans() {
        return (String) getAttributeInternal(RFQDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RfqDocIdTrans.
     * @param value value to set the  RfqDocIdTrans
     */
    public void setRfqDocIdTrans(String value) {
        setAttributeInternal(RFQDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IDFNoTrans.
     * @return the IDFNoTrans
     */
    public String getIDFNoTrans() {
        return (String) getAttributeInternal(IDFNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IDFNoTrans.
     * @param value value to set the  IDFNoTrans
     */
    public void setIDFNoTrans(String value) {
        setAttributeInternal(IDFNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IDFDocIdTrans.
     * @return the IDFDocIdTrans
     */
    public String getIDFDocIdTrans() {
        return (String) getAttributeInternal(IDFDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IDFDocIdTrans.
     * @param value value to set the  IDFDocIdTrans
     */
    public void setIDFDocIdTrans(String value) {
        setAttributeInternal(IDFDOCIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSupplierVO1.
     */
    public RowSet getLovSupplierVO1() {
        return (RowSet) getAttributeInternal(LOVSUPPLIERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPONoTrans1.
     */
    public RowSet getLovPONoTrans1() {
        return (RowSet) getAttributeInternal(LOVPONOTRANS1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRFQVO1.
     */
    public RowSet getLovRFQVO1() {
        return (RowSet) getAttributeInternal(LOVRFQVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotNoVO1.
     */
    public RowSet getLovQuotNoVO1() {
        return (RowSet) getAttributeInternal(LOVQUOTNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEvalIdVO1.
     */
    public RowSet getLovEvalIdVO1() {
        return (RowSet) getAttributeInternal(LOVEVALIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCPONoVO1.
     */
    public RowSet getLovCPONoVO1() {
        return (RowSet) getAttributeInternal(LOVCPONOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaNmVO1.
     */
    public RowSet getLovCoaNmVO1() {
        return (RowSet) getAttributeInternal(LOVCOANMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItemNamVO1.
     */
    public RowSet getLovItemNamVO1() {
        return (RowSet) getAttributeInternal(LOVITEMNAMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSOVO1.
     */
    public RowSet getLovSOVO1() {
        return (RowSet) getAttributeInternal(LOVSOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrderPoNoVO1.
     */
    public RowSet getLovOrderPoNoVO1() {
        return (RowSet) getAttributeInternal(LOVORDERPONOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPOStatusVO1.
     */
    public RowSet getLovPOStatusVO1() {
        return (RowSet) getAttributeInternal(LOVPOSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRFQStatusVO1.
     */
    public RowSet getLovRFQStatusVO1() {
        return (RowSet) getAttributeInternal(LOVRFQSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotStatusVO1.
     */
    public RowSet getLovQuotStatusVO1() {
        return (RowSet) getAttributeInternal(LOVQUOTSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotAnalyStatusVO1.
     */
    public RowSet getLovQuotAnalyStatusVO1() {
        return (RowSet) getAttributeInternal(LOVQUOTANALYSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgVO1.
     */
    public RowSet getLovOrgVO1() {
        return (RowSet) getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIDFNoVO1.
     */
    public RowSet getLovIDFNoVO1() {
        return (RowSet) getAttributeInternal(LOVIDFNOVO1);
    }

    public String resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message.toString();
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
           CallableStatement st = null;
           try {
               // 1. Create a JDBC CallabledStatement
               st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               // 2. Register the first bind variable for the return value
               st.registerOutParameter(1, sqlReturnType);
               if (bindVars != null) {
                   // 3. Loop over values for the bind variables passed in, if any
                   for (int z = 0; z < bindVars.length; z++) {
                       // 4. Set the value of user-supplied bind vars in the stmt
                       st.setObject(z + 2, bindVars[z]);
                   }
               }
               // 5. Set the value of user-supplied bind vars in the stmt
               st.executeUpdate();
               // 6. Return the value of the first bind variable
               return st.getObject(1);
           } catch (SQLException e) {
               throw new JboException(e);
           } finally {
               if (st != null) {
                   try {
                       // 7. Close the statement
                       st.close();
                   } catch (SQLException e) {
                   }
               }
           }
       }
    
}

