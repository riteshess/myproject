package mmDiscountApp.model.views;

import java.math.BigInteger;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 15 14:12:51 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMSchemeSearchViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SchmType {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getSchmType();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setSchmType((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SchmId {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getSchmId();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setSchmId((String)value);
            }
        }
        ,
        SchmNm {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getSchmNm();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setSchmNm((String)value);
            }
        }
        ,
        StartDate {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getStartDate();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        ExpiryDate {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getExpiryDate();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setExpiryDate((Date)value);
            }
        }
        ,
        Actv {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getActv();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        DaysLeft {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getDaysLeft();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setDaysLeft((Integer)value);
            }
        }
        ,
        Diff {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getDiff();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setDiff((Integer)value);
            }
        }
        ,
        NoOfProduct {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getNoOfProduct();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setNoOfProduct((Integer)value);
            }
        }
        ,
        PercentageValue {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getPercentageValue();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setPercentageValue((Integer)value);
            }
        }
        ,
        Trans_Select {
            public Object get(MMSchemeSearchViewVORowImpl obj) {
                return obj.getTrans_Select();
            }

            public void put(MMSchemeSearchViewVORowImpl obj, Object value) {
                obj.setTrans_Select((Boolean)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMSchemeSearchViewVORowImpl object);

        public abstract void put(MMSchemeSearchViewVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SCHMTYPE = AttributesEnum.SchmType.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int SCHMNM = AttributesEnum.SchmNm.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int EXPIRYDATE = AttributesEnum.ExpiryDate.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int DAYSLEFT = AttributesEnum.DaysLeft.index();
    public static final int DIFF = AttributesEnum.Diff.index();
    public static final int NOOFPRODUCT = AttributesEnum.NoOfProduct.index();
    public static final int PERCENTAGEVALUE = AttributesEnum.PercentageValue.index();
    public static final int TRANS_SELECT = AttributesEnum.Trans_Select.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMSchemeSearchViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SchmType.
     * @return the SchmType
     */
    public Integer getSchmType() {
        return (Integer) getAttributeInternal(SCHMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmType.
     * @param value value to set the  SchmType
     */
    public void setSchmType(Integer value) {
        setAttributeInternal(SCHMTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchmId.
     * @return the SchmId
     */
    public String getSchmId() {
        return (String) getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmId.
     * @param value value to set the  SchmId
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchmNm.
     * @return the SchmNm
     */
    public String getSchmNm() {
        return (String) getAttributeInternal(SCHMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmNm.
     * @param value value to set the  SchmNm
     */
    public void setSchmNm(String value) {
        setAttributeInternal(SCHMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StartDate.
     * @return the StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StartDate.
     * @param value value to set the  StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExpiryDate.
     * @return the ExpiryDate
     */
    public Date getExpiryDate() {
        return (Date) getAttributeInternal(EXPIRYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExpiryDate.
     * @param value value to set the  ExpiryDate
     */
    public void setExpiryDate(Date value) {
        setAttributeInternal(EXPIRYDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Actv.
     * @return the Actv
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Actv.
     * @param value value to set the  Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DaysLeft.
     * @return the DaysLeft
     */
    public Integer getDaysLeft() {
        return (Integer) getAttributeInternal(DAYSLEFT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DaysLeft.
     * @param value value to set the  DaysLeft
     */
    public void setDaysLeft(Integer value) {
        setAttributeInternal(DAYSLEFT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Diff.
     * @return the Diff
     */
    public Integer getDiff() {
        return (Integer) getAttributeInternal(DIFF);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Diff.
     * @param value value to set the  Diff
     */
    public void setDiff(Integer value) {
        setAttributeInternal(DIFF, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NoOfProduct.
     * @return the NoOfProduct
     */
    public Integer getNoOfProduct() {
        return (Integer) getAttributeInternal(NOOFPRODUCT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NoOfProduct.
     * @param value value to set the  NoOfProduct
     */
    public void setNoOfProduct(Integer value) {
        setAttributeInternal(NOOFPRODUCT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PercentageValue.
     * @return the PercentageValue
     */
    public Integer getPercentageValue() {
        return (Integer) getAttributeInternal(PERCENTAGEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PercentageValue.
     * @param value value to set the  PercentageValue
     */
    public void setPercentageValue(Integer value) {
        setAttributeInternal(PERCENTAGEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Trans_Select.
     * @return the Trans_Select
     */
    public Boolean getTrans_Select() {
        return (Boolean) getAttributeInternal(TRANS_SELECT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Trans_Select.
     * @param value value to set the  Trans_Select
     */
    public void setTrans_Select(Boolean value) {
        setAttributeInternal(TRANS_SELECT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
