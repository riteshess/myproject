package mmDiscountApp.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 19 15:35:16 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmSchmFreeItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SchmId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getSchmId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setSchmId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmQty {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getItmQty();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setItmQty((Number)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        DiscType {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        FocFlg {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getFocFlg();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setFocFlg((String)value);
            }
        }
        ,
        CldId {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        MmSchm {
            public Object get(MmSchmFreeItmEOImpl obj) {
                return obj.getMmSchm();
            }

            public void put(MmSchmFreeItmEOImpl obj, Object value) {
                obj.setMmSchm((MmSchmEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmSchmFreeItmEOImpl object);

        public abstract void put(MmSchmFreeItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int FOCFLG = AttributesEnum.FocFlg.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int MMSCHM = AttributesEnum.MmSchm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmSchmFreeItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmDiscountApp.model.entities.MmSchmFreeItmEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SchmId, using the alias name SchmId.
     * @return the value of SchmId
     */
    public String getSchmId() {
        return (String)getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmId.
     * @param value value to set the SchmId
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number)getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for FocFlg, using the alias name FocFlg.
     * @return the value of FocFlg
     */
    public String getFocFlg() {
        return (String)getAttributeInternal(FOCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for FocFlg.
     * @param value value to set the FocFlg
     */
    public void setFocFlg(String value) {
        setAttributeInternal(FOCFLG, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmSchmEOImpl.
     */
    public MmSchmEOImpl getMmSchm() {
        return (MmSchmEOImpl)getAttributeInternal(MMSCHM);
    }

    /**
     * Sets <code>value</code> as the associated entity MmSchmEOImpl.
     */
    public void setMmSchm(MmSchmEOImpl value) {
        setAttributeInternal(MMSCHM, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param schmId key constituent
     * @param itmId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String schmId, String itmId, String cldId) {
        return new Key(new Object[]{slocId, orgId, schmId, itmId, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
           Integer UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
           setUsrIdMod(UserId);
           
           
           
        }
        else if(operation == DML_INSERT){
            Integer UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdCreate(UserId);
        }
        super.doDML(operation, e);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
}
