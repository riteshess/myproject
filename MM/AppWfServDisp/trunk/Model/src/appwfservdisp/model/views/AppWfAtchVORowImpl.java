package appwfservdisp.model.views;

import appwfservdisp.model.views.common.AppWfAtchVORow;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 07 11:58:29 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWfAtchVORowImpl extends ViewRowImpl implements AppWfAtchVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        TxnId,
        TxnDt,
        DocId,
        TxnDocId,
        AttchFlNm,
        AttchFlExtn,
        AttchFlPath,
        TxnTabNm,
        AttachFl,
        DispFlNm,
        UsrIdBy,
        DocTypeId,
        LovUserVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int TXNID = AttributesEnum.TxnId.index();
    public static final int TXNDT = AttributesEnum.TxnDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int TXNDOCID = AttributesEnum.TxnDocId.index();
    public static final int ATTCHFLNM = AttributesEnum.AttchFlNm.index();
    public static final int ATTCHFLEXTN = AttributesEnum.AttchFlExtn.index();
    public static final int ATTCHFLPATH = AttributesEnum.AttchFlPath.index();
    public static final int TXNTABNM = AttributesEnum.TxnTabNm.index();
    public static final int ATTACHFL = AttributesEnum.AttachFl.index();
    public static final int DISPFLNM = AttributesEnum.DispFlNm.index();
    public static final int USRIDBY = AttributesEnum.UsrIdBy.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int LOVUSERVO1 = AttributesEnum.LovUserVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppWfAtchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute TxnId.
     * @return the TxnId
     */
    public String getTxnId() {
        return (String) getAttributeInternal(TXNID);
    }

    /**
     * Gets the attribute value for the calculated attribute TxnDt.
     * @return the TxnDt
     */
    public Timestamp getTxnDt() {
        return (Timestamp) getAttributeInternal(TXNDT);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Long getDocId() {
        return (Long) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute TxnDocId.
     * @return the TxnDocId
     */
    public String getTxnDocId() {
        return (String) getAttributeInternal(TXNDOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute AttchFlNm.
     * @return the AttchFlNm
     */
    public String getAttchFlNm() {
        return (String) getAttributeInternal(ATTCHFLNM);
    }

    /**
     * Gets the attribute value for the calculated attribute AttchFlExtn.
     * @return the AttchFlExtn
     */
    public String getAttchFlExtn() {
        return (String) getAttributeInternal(ATTCHFLEXTN);
    }

    /**
     * Gets the attribute value for the calculated attribute AttchFlPath.
     * @return the AttchFlPath
     */
    public String getAttchFlPath() {
        return (String) getAttributeInternal(ATTCHFLPATH);
    }

    /**
     * Gets the attribute value for the calculated attribute TxnTabNm.
     * @return the TxnTabNm
     */
    public String getTxnTabNm() {
        return (String) getAttributeInternal(TXNTABNM);
    }

    /**
     * Gets the attribute value for the calculated attribute AttachFl.
     * @return the AttachFl
     */
    public BFileDomain getAttachFl() {
        return (BFileDomain) getAttributeInternal(ATTACHFL);
    }

    /**
     * Gets the attribute value for the calculated attribute DispFlNm.
     * @return the DispFlNm
     */
    public String getDispFlNm() {
        return (String) getAttributeInternal(DISPFLNM);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdBy.
     * @return the UsrIdBy
     */
    public Integer getUsrIdBy() {
        return (Integer) getAttributeInternal(USRIDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdBy.
     * @param value value to set the  UsrIdBy
     */
    public void setUsrIdBy(Integer value) {
        setAttributeInternal(USRIDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeId.
     * @return the DocTypeId
     */
    public Long getDocTypeId() {
        return (Long) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserVO1.
     */
    public RowSet getLovUserVO1() {
        return (RowSet) getAttributeInternal(LOVUSERVO1);
    }
}

