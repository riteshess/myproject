package mmgateentry.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmgateentry.model.entities.MmMtlGeItmEOImpl;

import mmgateentry.model.services.MmGateEntryAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 21 15:26:33 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlGeItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMMTLGEITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDocIdSrc((String) value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp) value);
            }
        }
        ,
        DlvQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDlvQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDlvQty((Number) value);
            }
        }
        ,
        DlvQtyBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDlvQtyBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDlvQtyBs((Number) value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer) value);
            }
        }
        ,
        ItmId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        PendQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setPendQty((Number) value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setPendQtyBs((Number) value);
            }
        }
        ,
        RcptQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getRcptQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setRcptQty((Number) value);
            }
        }
        ,
        RcptQtyBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getRcptQtyBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setRcptQtyBs((Number) value);
            }
        }
        ,
        ReturnQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getReturnQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setReturnQty((Number) value);
            }
        }
        ,
        ReturnQtyBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getReturnQtyBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setReturnQtyBs((Number) value);
            }
        }
        ,
        ReturnResn {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getReturnResn();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setReturnResn((String) value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        WhId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        TotRcptQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTotRcptQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTotRcptQty((Number) value);
            }
        }
        ,
        TotRcptQtyBs {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTotRcptQtyBs();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTotRcptQtyBs((Number) value);
            }
        }
        ,
        TransItmIdDesc {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTransItmIdDesc();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTransItmIdDesc((String) value);
            }
        }
        ,
        TransItmUomDesc {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTransItmUomDesc();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTransItmUomDesc((String) value);
            }
        }
        ,
        TransIsRetResReadOnly {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTransIsRetResReadOnly();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTransIsRetResReadOnly((String) value);
            }
        }
        ,
        TransTxnQty {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTransTxnQty();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        }
        ,
        LovItmIdVO {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getLovItmIdVO();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomIdVO {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getLovUomIdVO();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomVwVO {
            public Object get(MmMtlGeItmVORowImpl obj) {
                return obj.getLovUomVwVO();
            }

            public void put(MmMtlGeItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlGeItmVORowImpl object);

        public abstract void put(MmMtlGeItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DLVQTY = AttributesEnum.DlvQty.index();
    public static final int DLVQTYBS = AttributesEnum.DlvQtyBs.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int RCPTQTY = AttributesEnum.RcptQty.index();
    public static final int RCPTQTYBS = AttributesEnum.RcptQtyBs.index();
    public static final int RETURNQTY = AttributesEnum.ReturnQty.index();
    public static final int RETURNQTYBS = AttributesEnum.ReturnQtyBs.index();
    public static final int RETURNRESN = AttributesEnum.ReturnResn.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int TOTRCPTQTY = AttributesEnum.TotRcptQty.index();
    public static final int TOTRCPTQTYBS = AttributesEnum.TotRcptQtyBs.index();
    public static final int TRANSITMIDDESC = AttributesEnum.TransItmIdDesc.index();
    public static final int TRANSITMUOMDESC = AttributesEnum.TransItmUomDesc.index();
    public static final int TRANSISRETRESREADONLY = AttributesEnum.TransIsRetResReadOnly.index();
    public static final int TRANSTXNQTY = AttributesEnum.TransTxnQty.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int LOVITMIDVO = AttributesEnum.LovItmIdVO.index();
    public static final int LOVUOMIDVO = AttributesEnum.LovUomIdVO.index();
    public static final int LOVUOMVWVO = AttributesEnum.LovUomVwVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlGeItmVORowImpl() {
    }
    /**
     *Global round digit for Amount
     * @return
     */

    public Integer getGlblRoundAmtDigit() {
        if (resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}") != null) {
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}"));
        } else {
            return 6;
        }
    }

    /**
     *Global round digit for Quantity
     * @return
     */

    public Integer getGlblRoundQtyDigit() {
        if (resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT}") != null) {
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_QTY_DIGIT}"));
        } else {
            return 6;
        }

    }

    /**
     *Global round digit for currency rate
     * @return
     */

    public Integer getGlblRoundCurrRateDigit() {
        if (resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}") != null) {
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}"));
        } else {
            return 6;
        }

    }
    /**
     * Gets MmMtlGeItmEO entity object.
     * @return the MmMtlGeItmEO
     */
    public MmMtlGeItmEOImpl getMmMtlGeItmEO() {
        return (MmMtlGeItmEOImpl)getEntity(ENTITY_MMMTLGEITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DLV_QTY using the alias name DlvQty.
     * @return the DLV_QTY
     */
    public Number getDlvQty() {
        if(getAttributeInternal(DLVQTY)!=null)
        {
                Number qtySp=new Number(0);
            if(this.getUomConvFctr()!=null)
                qtySp=(Number)((Number)getAttributeInternal(DLVQTY)).round(getGlblRoundQtyDigit());
            Number qtyBs=(Number)(qtySp.multiply((Number)(this.getUomConvFctr()).round(getGlblRoundQtyDigit()))).round(getGlblRoundQtyDigit());
            setDlvQtyBs(qtyBs);
            }
        return (Number) getAttributeInternal(DLVQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_QTY using the alias name DlvQty.
     * @param value value to set the DLV_QTY
     */
    public void setDlvQty(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(DLVQTY, value);
    }

    /**
     * Gets the attribute value for DLV_QTY_BS using the alias name DlvQtyBs.
     * @return the DLV_QTY_BS
     */
    public Number getDlvQtyBs() {
        return (Number) getAttributeInternal(DLVQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_QTY_BS using the alias name DlvQtyBs.
     * @param value value to set the DLV_QTY_BS
     */
    public void setDlvQtyBs(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(DLVQTYBS, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }


    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public Number getPendQty() {
        if(getAttributeInternal(PENDQTY)!=null)
        {
                Number qtySp=new Number(0);
            if(this.getUomConvFctr()!=null)
                qtySp=(Number)((Number)getAttributeInternal(PENDQTY)).round(getGlblRoundQtyDigit());
            Number qtyBs=(Number)(qtySp.multiply((Number)this.getUomConvFctr().round(getGlblRoundQtyDigit()))).round(getGlblRoundQtyDigit());
            setPendQtyBs(qtyBs);
            }
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @return the PEND_QTY_BS
     */
    public Number getPendQtyBs() {
        return (Number) getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY_BS using the alias name PendQtyBs.
     * @param value value to set the PEND_QTY_BS
     */
    public void setPendQtyBs(Number value) { 
        if(value==null)
            value=new Number(0);
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for RCPT_QTY using the alias name RcptQty.
     * @return the RCPT_QTY
     */
    public Number getRcptQty() {
        if(getAttributeInternal(RCPTQTY)!=null)
        {
                Number qtySp=new Number(0);
            if(this.getUomConvFctr()!=null)
                qtySp=(Number)((Number)getAttributeInternal(RCPTQTY)).round(getGlblRoundQtyDigit());
            Number qtyBs=(Number)(qtySp.multiply((Number)this.getUomConvFctr().round(getGlblRoundQtyDigit()))).round(getGlblRoundQtyDigit());
            setRcptQtyBs(qtyBs);
            }
        return (Number) getAttributeInternal(RCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RCPT_QTY using the alias name RcptQty.
     * @param value value to set the RCPT_QTY
     */
    public void setRcptQty(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(RCPTQTY, value);
    }

    /**
     * Gets the attribute value for RCPT_QTY_BS using the alias name RcptQtyBs.
     * @return the RCPT_QTY_BS
     */
    public Number getRcptQtyBs() {
        return (Number) getAttributeInternal(RCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for RCPT_QTY_BS using the alias name RcptQtyBs.
     * @param value value to set the RCPT_QTY_BS
     */
    public void setRcptQtyBs(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(RCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for RETURN_QTY using the alias name ReturnQty.
     * @return the RETURN_QTY
     */
    public Number getReturnQty() {
        if(getAttributeInternal(RETURNQTY)!=null)
        {
                Number qtySp=new Number(0);
            if(this.getUomConvFctr()!=null)
                qtySp=(Number)((Number)getAttributeInternal(RETURNQTY)).round(getGlblRoundQtyDigit());
            Number qtyBs=(Number)(qtySp.multiply((Number)this.getUomConvFctr().round(getGlblRoundQtyDigit()))).round(getGlblRoundQtyDigit());
            setReturnQtyBs(qtyBs);
            }
        return (Number) getAttributeInternal(RETURNQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RETURN_QTY using the alias name ReturnQty.
     * @param value value to set the RETURN_QTY
     */
    public void setReturnQty(Number value) {
        if(value==null)
            value=new Number(0);
               /*  Number totRcptQty=new Number(0);
                        if(getTotRcptQty()!=null)
                        totRcptQty = getTotRcptQty();
                         Number oldRcpt=new Number(0);
                        if( getRcptQty()!=null)
                        oldRcpt = getRcptQty(); 
                        System.out.println("set Rcpt Qty on change in Return="+totRcptQty.subtract(value));
                        setRcptQty(totRcptQty.subtract(value));
                         */
        setAttributeInternal(RETURNQTY, value);
    }

    /**
     * Gets the attribute value for RETURN_QTY_BS using the alias name ReturnQtyBs.
     * @return the RETURN_QTY_BS
     */
    public Number getReturnQtyBs() {
        return (Number) getAttributeInternal(RETURNQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for RETURN_QTY_BS using the alias name ReturnQtyBs.
     * @param value value to set the RETURN_QTY_BS
     */
    public void setReturnQtyBs(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(RETURNQTYBS, value);
    }

    /**
     * Gets the attribute value for RETURN_RESN using the alias name ReturnResn.
     * @return the RETURN_RESN
     */
    public String getReturnResn() {
        Number ret=new Number(0);
        if(getReturnQty()!=null)
        {
             ret=getReturnQty();
            }
        if(ret.equals(new Number(0)))
            return null;
        else
        return (String) getAttributeInternal(RETURNRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for RETURN_RESN using the alias name ReturnResn.
     * @param value value to set the RETURN_RESN
     */
    public void setReturnResn(String value) {
        setAttributeInternal(RETURNRESN, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }


    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for TOT_RCPT_QTY using the alias name TotRcptQty.
     * @return the TOT_RCPT_QTY
     */
    public Number getTotRcptQty() {
        if(getAttributeInternal(TOTRCPTQTY)!=null)
        {
                Number qtySp=new Number(0);
            if(this.getUomConvFctr()!=null)
                qtySp=(Number)((Number)getAttributeInternal(TOTRCPTQTY)).round(getGlblRoundQtyDigit());
            Number qtyBs=(Number)(qtySp.multiply((Number)this.getUomConvFctr().round(getGlblRoundQtyDigit())));
            setTotRcptQtyBs(qtyBs);
            }
        return (Number) getAttributeInternal(TOTRCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_RCPT_QTY using the alias name TotRcptQty.
     * @param value value to set the TOT_RCPT_QTY
     */
    public void setTotRcptQty(Number value) {
        if(value==null)
            value=new Number(0);
        //if srC is PO then  
      /*   Number TotRcpt=value;
        Number fct=new Number(1);
        if(getUomConvFctr()!=null)
            fct=getUomConvFctr();
         MmGateEntryAMImpl am = (MmGateEntryAMImpl)this.getApplicationModule();
        if(am.getMmMtlGe().getCurrentRow().getAttribute("TransSourceDocType").toString().equals("266")){
        System.out.println("Document is PO");
        Number pendqty=new Number(0);
        if(getPendQty()!=null)
            pendqty=getPendQty();
        if(pendqty.compareTo(TotRcpt)<0)
        {
        System.out.println("Pending Qty is less than Total Rcpt");
          setRcptQty(pendqty);
          setRcptQtyBs(pendqty.multiply(fct));
        setReturnQty(TotRcpt.subtract(pendqty));
        setReturnQtyBs(TotRcpt.subtract(pendqty).multiply(fct));
        }
        else
        {
                System.out.println("Pending Qty is greater than Total Rcpt");
                setRcptQty(TotRcpt);
                setRcptQtyBs(TotRcpt.multiply(fct));
                setReturnQty(new Number(0));
                setReturnQtyBs(new Number(0));
            }
        }
        else
        {
                //if src is other than PO then
            System.out.println("Document is not PO");
                setRcptQty(TotRcpt);
                setRcptQtyBs(TotRcpt.multiply(fct));
                setReturnQty(new Number(0));
                setReturnQtyBs(new Number(0));
            } */
        
        setAttributeInternal(TOTRCPTQTY, value);
    }

    /**
     * Gets the attribute value for TOT_RCPT_QTY_BS using the alias name TotRcptQtyBs.
     * @return the TOT_RCPT_QTY_BS
     */
    public Number getTotRcptQtyBs() {
        return (Number) getAttributeInternal(TOTRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_RCPT_QTY_BS using the alias name TotRcptQtyBs.
     * @param value value to set the TOT_RCPT_QTY_BS
     */
    public void setTotRcptQtyBs(Number value) {
        setAttributeInternal(TOTRCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmIdDesc.
     * @return the TransItmIdDesc
     */
    public String getTransItmIdDesc() {
        if(getItmId()!=null){
            MmGateEntryAMImpl am =(MmGateEntryAMImpl)this.getApplicationModule();
            am.getViewObj().setNamedWhereClauseParam("slocIdBind", getSlocId());
            am.getViewObj().setNamedWhereClauseParam("cldIdBind", getCldId());
          am.getViewObj().setNamedWhereClauseParam("hoOrgIdBind",getTransHoOrgId() );
            am.getViewObj().setNamedWhereClauseParam("orgIdBind", getOrgId() );
            am.getViewObj().setNamedWhereClauseParam("itmIdBind",getItmId());
            am.getViewObj().setNamedWhereClauseParam("itmNameBind",null);
            am.getViewObj().executeQuery();
           Row[] xx=am.getViewObj().getFilteredRows("ItmId", getItmId());
        // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
           if(xx.length>0){
                return xx[0].getAttribute("ItmDesc").toString();
           }else{
               return (String) getAttributeInternal(TRANSITMIDDESC);
           }
        
        }else{
        return (String) getAttributeInternal(TRANSITMIDDESC);
        }
        
        
        
        /*  Row[] itmRw=getLovItmIdVO().getFilteredRows("ItmId",this.getItmId());
        String itmName="";
        if(itmRw.length>0){
                itmName=itmRw[0].getAttribute("ItmDesc").toString();
        }
        return itmName; */
        //return (String) getAttributeInternal(TRANSITMIDDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmIdDesc.
     * @param value value to set the  TransItmIdDesc
     */
    public void setTransItmIdDesc(String value) {
        setAttributeInternal(TRANSITMIDDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomDesc.
     * @return the TransItmUomDesc
     */
    public String getTransItmUomDesc() {
        Row[] uomRw=getLovUomIdVO().getFilteredRows("UomId",this.getItmUom());
        String uomName="";
        if(uomRw.length>0){
                uomName=uomRw[0].getAttribute("UomDesc").toString();
        }
        return uomName;
       // return (String) getAttributeInternal(TRANSITMUOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomDesc.
     * @param value value to set the  TransItmUomDesc
     */
    public void setTransItmUomDesc(String value) {
        setAttributeInternal(TRANSITMUOMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsRetResReadOnly.
     * @return the TransIsRetResReadOnly
     */
    public String getTransIsRetResReadOnly() {
     
            Number retqty=new Number(0);
            if(getReturnQty()!=null)
            {
                retqty=getReturnQty();
                }
            if(retqty.compareTo(new Number(0))==0)
            {
                setReturnResn(null);
                return "Y";
            }
            else
            {
                return "N";
            }
       //return (String) getAttributeInternal(TRANSISRETRESREADONLY);    
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsRetResReadOnly.
     * @param value value to set the  TransIsRetResReadOnly
     */
    public void setTransIsRetResReadOnly(String value) {
        setAttributeInternal(TRANSISRETRESREADONLY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTxnQty.
     * @return the TransTxnQty
     */
    public Number getTransTxnQty() {
        return (Number) getAttributeInternal(TRANSTXNQTY);
    }


    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
       // return (String) getAttributeInternal(TRANSHOORGID);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO.
     */
    public RowSet getLovItmIdVO() {
        return (RowSet)getAttributeInternal(LOVITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO.
     */
    public RowSet getLovUomIdVO() {
        return (RowSet)getAttributeInternal(LOVUOMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomVwVO.
     */
    public RowSet getLovUomVwVO() {
        return (RowSet)getAttributeInternal(LOVUOMVWVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
