package mmgateentry.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmgateentry.model.services.MmGateEntryAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 11 18:03:03 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualForBarCodeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setDummy((String) value);
            }
        },
        TransCldId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransCldId((String) value);
            }
        },
        TransSlocId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransSlocId((Integer) value);
            }
        },
        TransOrgId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransOrgId((String) value);
            }
        },
        TransItmId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmId((String) value);
            }
        },
        TransItmNm {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmNm();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmNm((String) value);
            }
        },
        TransDelvQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransDelvQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransDelvQty((Number) value);
            }
        },
        TransRecptQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRecptQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRecptQty((Number) value);
            }
        },
        TransRetQty {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransRetQty();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransRetQty((Number) value);
            }
        },
        TransItmUomId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmUomId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmUomId((String) value);
            }
        },
        TransHoOrgId {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        },
        TransItmUomNm {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransItmUomNm();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransItmUomNm((String) value);
            }
        },
        TransChkItemInBc {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getTransChkItemInBc();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setTransChkItemInBc((String) value);
            }
        },
        LovUomIdVO1 {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getLovUomIdVO1();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmForBarCodeVO1 {
            public Object get(DualForBarCodeVORowImpl obj) {
                return obj.getLovItmForBarCodeVO1();
            }

            public void put(DualForBarCodeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(DualForBarCodeVORowImpl object);

        public abstract void put(DualForBarCodeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSITMID = AttributesEnum.TransItmId.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSDELVQTY = AttributesEnum.TransDelvQty.index();
    public static final int TRANSRECPTQTY = AttributesEnum.TransRecptQty.index();
    public static final int TRANSRETQTY = AttributesEnum.TransRetQty.index();
    public static final int TRANSITMUOMID = AttributesEnum.TransItmUomId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSITMUOMNM = AttributesEnum.TransItmUomNm.index();
    public static final int TRANSCHKITEMINBC = AttributesEnum.TransChkItemInBc.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVITMFORBARCODEVO1 = AttributesEnum.LovItmForBarCodeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualForBarCodeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        //return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        //return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmId.
     * @return the TransItmId
     */
    public String getTransItmId() {
        return (String) getAttributeInternal(TRANSITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmId.
     * @param value value to set the  TransItmId
     */
    public void setTransItmId(String value) {
        setAttributeInternal(TRANSITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvQty.
     * @return the TransDelvQty
     */
    public Number getTransDelvQty() {
        return (Number) getAttributeInternal(TRANSDELVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvQty.
     * @param value value to set the  TransDelvQty
     */
    public void setTransDelvQty(Number value) {
        setAttributeInternal(TRANSDELVQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRecptQty.
     * @return the TransRecptQty
     */
    public Number getTransRecptQty() {
        return (Number) getAttributeInternal(TRANSRECPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRecptQty.
     * @param value value to set the  TransRecptQty
     */
    public void setTransRecptQty(Number value) {
        setAttributeInternal(TRANSRECPTQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRetQty.
     * @return the TransRetQty
     */
    public Number getTransRetQty() {
        return (Number) getAttributeInternal(TRANSRETQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRetQty.
     * @param value value to set the  TransRetQty
     */
    public void setTransRetQty(Number value) {
        setAttributeInternal(TRANSRETQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomId.
     * @return the TransItmUomId
     */
    public String getTransItmUomId() {
        return (String) getAttributeInternal(TRANSITMUOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomId.
     * @param value value to set the  TransItmUomId
     */
    public void setTransItmUomId(String value) {
        setAttributeInternal(TRANSITMUOMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUomNm.
     * @return the TransItmUomNm
     */
    public String getTransItmUomNm() {
        Row[] uomRw = getLovUomIdVO1().getFilteredRows("UomId", this.getTransItmUomId());
        String uomName = "";
        if (uomRw.length > 0) {
            uomName = uomRw[0].getAttribute("UomDesc").toString();
        }
        return uomName;
        //return (String) getAttributeInternal(TRANSITMUOMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUomNm.
     * @param value value to set the  TransItmUomNm
     */
    public void setTransItmUomNm(String value) {
        setAttributeInternal(TRANSITMUOMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkItemInBc.
     * @return the TransChkItemInBc
     */
    public String getTransChkItemInBc() {
        if (getTransItmId() != null) {
            MmGateEntryAMImpl am = (MmGateEntryAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getMmMtlGeItmBcVO1().getFilteredRows("ItmId", getTransItmId());
            if (filteredRows.length > 0) {
                return "Y";
            } else
                return "N";
        }
        return (String) getAttributeInternal(TRANSCHKITEMINBC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkItemInBc.
     * @param value value to set the  TransChkItemInBc
     */
    public void setTransChkItemInBc(String value) {
        setAttributeInternal(TRANSCHKITEMINBC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmForBarCodeVO1.
     */
    public RowSet getLovItmForBarCodeVO1() {
        return (RowSet) getAttributeInternal(LOVITMFORBARCODEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

