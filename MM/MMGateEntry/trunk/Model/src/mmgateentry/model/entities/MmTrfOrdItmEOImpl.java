package mmgateentry.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 28 15:04:05 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmTrfOrdItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        OrdQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        AuthQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getAuthQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setAuthQty((Number)value);
            }
        }
        ,
        StkResvQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getStkResvQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setStkResvQty((Number)value);
            }
        }
        ,
        TrfQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getTrfQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setTrfQty((Number)value);
            }
        }
        ,
        PendQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setPendQty((Number)value);
            }
        }
        ,
        CnclItm {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getCnclItm();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setCnclItm((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        OrdQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getOrdQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setOrdQtyBs((Number)value);
            }
        }
        ,
        AuthQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getAuthQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setAuthQtyBs((Number)value);
            }
        }
        ,
        StkResvQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getStkResvQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setStkResvQtyBs((Number)value);
            }
        }
        ,
        TrfQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getTrfQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setTrfQtyBs((Number)value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setPendQtyBs((Number)value);
            }
        }
        ,
        TotTrfQty {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getTotTrfQty();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setTotTrfQty((Number)value);
            }
        }
        ,
        TotTrfQtyBs {
            public Object get(MmTrfOrdItmEOImpl obj) {
                return obj.getTotTrfQtyBs();
            }

            public void put(MmTrfOrdItmEOImpl obj, Object value) {
                obj.setTotTrfQtyBs((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmTrfOrdItmEOImpl object);

        public abstract void put(MmTrfOrdItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int AUTHQTY = AttributesEnum.AuthQty.index();
    public static final int STKRESVQTY = AttributesEnum.StkResvQty.index();
    public static final int TRFQTY = AttributesEnum.TrfQty.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int CNCLITM = AttributesEnum.CnclItm.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ORDQTYBS = AttributesEnum.OrdQtyBs.index();
    public static final int AUTHQTYBS = AttributesEnum.AuthQtyBs.index();
    public static final int STKRESVQTYBS = AttributesEnum.StkResvQtyBs.index();
    public static final int TRFQTYBS = AttributesEnum.TrfQtyBs.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int TOTTRFQTY = AttributesEnum.TotTrfQty.index();
    public static final int TOTTRFQTYBS = AttributesEnum.TotTrfQtyBs.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmTrfOrdItmEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for OrdQty, using the alias name OrdQty.
     * @return the value of OrdQty
     */
    public Number getOrdQty() {
        return (Number)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQty.
     * @param value value to set the OrdQty
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for AuthQty, using the alias name AuthQty.
     * @return the value of AuthQty
     */
    public Number getAuthQty() {
        return (Number)getAttributeInternal(AUTHQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthQty.
     * @param value value to set the AuthQty
     */
    public void setAuthQty(Number value) {
        setAttributeInternal(AUTHQTY, value);
    }

    /**
     * Gets the attribute value for StkResvQty, using the alias name StkResvQty.
     * @return the value of StkResvQty
     */
    public Number getStkResvQty() {
        return (Number)getAttributeInternal(STKRESVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkResvQty.
     * @param value value to set the StkResvQty
     */
    public void setStkResvQty(Number value) {
        setAttributeInternal(STKRESVQTY, value);
    }

    /**
     * Gets the attribute value for TrfQty, using the alias name TrfQty.
     * @return the value of TrfQty
     */
    public Number getTrfQty() {
        return (Number)getAttributeInternal(TRFQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrfQty.
     * @param value value to set the TrfQty
     */
    public void setTrfQty(Number value) {
        setAttributeInternal(TRFQTY, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public Number getPendQty() {
        return (Number)getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for CnclItm, using the alias name CnclItm.
     * @return the value of CnclItm
     */
    public String getCnclItm() {
        return (String)getAttributeInternal(CNCLITM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CnclItm.
     * @param value value to set the CnclItm
     */
    public void setCnclItm(String value) {
        setAttributeInternal(CNCLITM, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for OrdQtyBs, using the alias name OrdQtyBs.
     * @return the value of OrdQtyBs
     */
    public Number getOrdQtyBs() {
        return (Number)getAttributeInternal(ORDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQtyBs.
     * @param value value to set the OrdQtyBs
     */
    public void setOrdQtyBs(Number value) {
        setAttributeInternal(ORDQTYBS, value);
    }

    /**
     * Gets the attribute value for AuthQtyBs, using the alias name AuthQtyBs.
     * @return the value of AuthQtyBs
     */
    public Number getAuthQtyBs() {
        return (Number)getAttributeInternal(AUTHQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthQtyBs.
     * @param value value to set the AuthQtyBs
     */
    public void setAuthQtyBs(Number value) {
        setAttributeInternal(AUTHQTYBS, value);
    }

    /**
     * Gets the attribute value for StkResvQtyBs, using the alias name StkResvQtyBs.
     * @return the value of StkResvQtyBs
     */
    public Number getStkResvQtyBs() {
        return (Number)getAttributeInternal(STKRESVQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for StkResvQtyBs.
     * @param value value to set the StkResvQtyBs
     */
    public void setStkResvQtyBs(Number value) {
        setAttributeInternal(STKRESVQTYBS, value);
    }

    /**
     * Gets the attribute value for TrfQtyBs, using the alias name TrfQtyBs.
     * @return the value of TrfQtyBs
     */
    public Number getTrfQtyBs() {
        return (Number)getAttributeInternal(TRFQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrfQtyBs.
     * @param value value to set the TrfQtyBs
     */
    public void setTrfQtyBs(Number value) {
        setAttributeInternal(TRFQTYBS, value);
    }

    /**
     * Gets the attribute value for PendQtyBs, using the alias name PendQtyBs.
     * @return the value of PendQtyBs
     */
    public Number getPendQtyBs() {
        return (Number)getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQtyBs.
     * @param value value to set the PendQtyBs
     */
    public void setPendQtyBs(Number value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for TotTrfQty, using the alias name TotTrfQty.
     * @return the value of TotTrfQty
     */
    public Number getTotTrfQty() {
        return (Number)getAttributeInternal(TOTTRFQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotTrfQty.
     * @param value value to set the TotTrfQty
     */
    public void setTotTrfQty(Number value) {
        setAttributeInternal(TOTTRFQTY, value);
    }

    /**
     * Gets the attribute value for TotTrfQtyBs, using the alias name TotTrfQtyBs.
     * @return the value of TotTrfQtyBs
     */
    public Number getTotTrfQtyBs() {
        return (Number)getAttributeInternal(TOTTRFQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotTrfQtyBs.
     * @param value value to set the TotTrfQtyBs
     */
    public void setTotTrfQtyBs(Number value) {
        setAttributeInternal(TOTTRFQTYBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String itmId,
                                       String itmUom) {
        return new Key(new Object[]{cldId, slocId, orgId, docId, itmId, itmUom});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmgateentry.model.entities.MmTrfOrdItmEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
