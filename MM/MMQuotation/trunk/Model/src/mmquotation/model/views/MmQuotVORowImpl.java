package mmquotation.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmquotation.model.entities.MmQuotEOImpl;
import mmquotation.model.service.QuotationAMImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 29 11:43:40 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmQuotVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMQUOTEO = 0;
    ADFLogger adfLog = (ADFLogger) ADFLogger.createADFLogger(MmQuotVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDocDt((Date) value);
            }
        }
        ,
        RefDocId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getRefDocId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setRefDocId((String) value);
            }
        }
        ,
        QuotId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotId((String) value);
            }
        }
        ,
        QuotDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotDt((Date) value);
            }
        }
        ,
        EoId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        }
        ,
        BillAddsId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getBillAddsId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setBillAddsId((String) value);
            }
        }
        ,
        DlvAddsId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDlvAddsId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDlvAddsId((String) value);
            }
        }
        ,
        DlvMode {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDlvMode();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDlvMode((Integer) value);
            }
        }
        ,
        DlvDays {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDlvDays();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDlvDays((Integer) value);
            }
        }
        ,
        PayMode {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getPayMode();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setPayMode((Integer) value);
            }
        }
        ,
        ValidFmDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getValidFmDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setValidFmDt((Date) value);
            }
        }
        ,
        ValidToDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getValidToDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setValidToDt((Date) value);
            }
        }
        ,
        VldtTlrncDays {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getVldtTlrncDays();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setVldtTlrncDays((Integer) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        DiscType {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscVal {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        QuotAmtBs {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotAmtBs();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotAmtBs((Number) value);
            }
        }
        ,
        QuotAmtSp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotAmtSp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotAmtSp((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setEntityId((Integer) value);
            }
        }
        ,
        CldId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        QuotStatus {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotStatus();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotStatus((Integer) value);
            }
        }
        ,
        FyId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDiscAmtSp((Number) value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDiscAmtBs((Number) value);
            }
        }
        ,
        Remarks {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        QuotSource_trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotSource_trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotSource_trans((Integer) value);
            }
        }
        ,
        QuotAmtBs_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotAmtBs_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotAmtBs_Trans((Number) value);
            }
        }
        ,
        QuotAmtSp_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotAmtSp_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotAmtSp_Trans((Number) value);
            }
        }
        ,
        WhId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        DlvAdds_trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDlvAdds_trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDlvAdds_trans((String) value);
            }
        }
        ,
        BillAdds_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getBillAdds_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setBillAdds_Trans((String) value);
            }
        }
        ,
        SumDiscAmt_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumDiscAmt_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumDiscAmt_Trans((Number) value);
            }
        }
        ,
        SumOcAmt_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumOcAmt_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumOcAmt_Trans((Number) value);
            }
        }
        ,
        SumTaxAmtItm_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumTaxAmtItm_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumTaxAmtItm_Trans((Number) value);
            }
        }
        ,
        SumItmAmtBs_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumItmAmtBs_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumItmAmtBs_Trans((Number) value);
            }
        }
        ,
        SumItmAmtSp_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumItmAmtSp_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumItmAmtSp_Trans((Number) value);
            }
        }
        ,
        QuotTaxAmt_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotTaxAmt_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotTaxAmt_Trans((Number) value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String) value);
            }
        }
        ,
        DiscVal_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getDiscVal_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setDiscVal_Trans((Number) value);
            }
        }
        ,
        TotalDiscAmt_trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTotalDiscAmt_trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTotalDiscAmt_trans((Number) value);
            }
        }
        ,
        QuotAmtSpAftrTax_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getQuotAmtSpAftrTax_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setQuotAmtSpAftrTax_Trans((Number) value);
            }
        }
        ,
        EoIdSwitcherLov_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getEoIdSwitcherLov_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setEoIdSwitcherLov_Trans((String) value);
            }
        }
        ,
        SwitchLovExp_Trans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSwitchLovExp_Trans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSwitchLovExp_Trans((String) value);
            }
        }
        ,
        TransCurrencyDesc {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransCurrencyDesc();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransCurrencyDesc((String) value);
            }
        }
        ,
        TransRfqDocId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransRfqDocId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransRfqDocId((String) value);
            }
        }
        ,
        TransRfqDocIdSrch {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransRfqDocIdSrch();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransRfqDocIdSrch((String) value);
            }
        }
        ,
        transCurrIdSp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.gettransCurrIdSp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.settransCurrIdSp((String) value);
            }
        }
        ,
        TransCurrIdSpSrch {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransCurrIdSpSrch();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransCurrIdSpSrch((String) value);
            }
        }
        ,
        OrgBsCurrId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getOrgBsCurrId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransTaxRuldId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransTaxRuldId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransTaxRuldId((Integer) value);
            }
        }
        ,
        TransRadioFlg {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransRadioFlg();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransRadioFlg((String) value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String) value);
            }
        }
        ,
        TransCoaNm {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransCoaNm();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransCoaNm((String) value);
            }
        }
        ,
        TransCoaId {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransCoaId();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransCoaId((Integer) value);
            }
        }
        ,
        TrandOcType {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTrandOcType();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTrandOcType((String) value);
            }
        }
        ,
        TransOcDesc {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransOcDesc();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransOcDesc((Integer) value);
            }
        }
        ,
        TransOcAmtSp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransOcAmtSp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransOcAmtSp((Number) value);
            }
        }
        ,
        OverAllDiscTrans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getOverAllDiscTrans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setOverAllDiscTrans((Number) value);
            }
        }
        ,
        SumDiscAmtSpTrans {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getSumDiscAmtSpTrans();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setSumDiscAmtSpTrans((Number) value);
            }
        }
        ,
        TransEoType {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransEoType();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransEoType((Integer) value);
            }
        }
        ,
        TransBaseCurrNotation {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getTransBaseCurrNotation();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setTransBaseCurrNotation((String) value);
            }
        }
        ,
        MmQuotItm {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotItm();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmQuotOc {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotOc();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmQuotTnc {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotTnc();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmQuotTr {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotTr();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AFAttachVo {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getAFAttachVo();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmQuotAttch {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotAttch();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmQuotFlx {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getMmQuotFlx();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgIdVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovOrgIdVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrIdVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovUsrIdVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSourceVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovSourceVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovRfqItmVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovRfqItmVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovrfqIdVO1 {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovrfqIdVO1();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTypVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovDiscTypVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCurrencyVO1 {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovCurrencyVO1();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhIdVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovWhIdVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDlvAddsVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovDlvAddsVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPayModeVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovPayModeVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDlvModeVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovDlvModeVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovBillAddsVO1 {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovBillAddsVO1();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoIdForDirectVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovEoIdForDirectVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoIdForRfqVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovEoIdForRfqVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQuotStatusVO {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovQuotStatusVO();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxRuleIdVO1 {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovTaxRuleIdVO1();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCoaIdVO1 {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovCoaIdVO1();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOcDesc {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovOcDesc();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTranTyp {
            public Object get(MmQuotVORowImpl obj) {
                return obj.getLovTranTyp();
            }

            public void put(MmQuotVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(MmQuotVORowImpl object);

        public abstract void put(MmQuotVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    /* public static final int QUOTAMTSPAFTRTAX_TRANS = AttributesEnum.QuotAmtSpAftrTax_Trans.index(); */


    // public static final int TRANSOCDISC = AttributesEnum.TRANSOCDESC.index();


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int REFDOCID = AttributesEnum.RefDocId.index();
    public static final int QUOTID = AttributesEnum.QuotId.index();
    public static final int QUOTDT = AttributesEnum.QuotDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int BILLADDSID = AttributesEnum.BillAddsId.index();
    public static final int DLVADDSID = AttributesEnum.DlvAddsId.index();
    public static final int DLVMODE = AttributesEnum.DlvMode.index();
    public static final int DLVDAYS = AttributesEnum.DlvDays.index();
    public static final int PAYMODE = AttributesEnum.PayMode.index();
    public static final int VALIDFMDT = AttributesEnum.ValidFmDt.index();
    public static final int VALIDTODT = AttributesEnum.ValidToDt.index();
    public static final int VLDTTLRNCDAYS = AttributesEnum.VldtTlrncDays.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int QUOTAMTBS = AttributesEnum.QuotAmtBs.index();
    public static final int QUOTAMTSP = AttributesEnum.QuotAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int QUOTSTATUS = AttributesEnum.QuotStatus.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int QUOTSOURCE_TRANS = AttributesEnum.QuotSource_trans.index();
    public static final int QUOTAMTBS_TRANS = AttributesEnum.QuotAmtBs_Trans.index();
    public static final int QUOTAMTSP_TRANS = AttributesEnum.QuotAmtSp_Trans.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DLVADDS_TRANS = AttributesEnum.DlvAdds_trans.index();
    public static final int BILLADDS_TRANS = AttributesEnum.BillAdds_Trans.index();
    public static final int SUMDISCAMT_TRANS = AttributesEnum.SumDiscAmt_Trans.index();
    public static final int SUMOCAMT_TRANS = AttributesEnum.SumOcAmt_Trans.index();
    public static final int SUMTAXAMTITM_TRANS = AttributesEnum.SumTaxAmtItm_Trans.index();
    public static final int SUMITMAMTBS_TRANS = AttributesEnum.SumItmAmtBs_Trans.index();
    public static final int SUMITMAMTSP_TRANS = AttributesEnum.SumItmAmtSp_Trans.index();
    public static final int QUOTTAXAMT_TRANS = AttributesEnum.QuotTaxAmt_Trans.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int DISCVAL_TRANS = AttributesEnum.DiscVal_Trans.index();
    public static final int TOTALDISCAMT_TRANS = AttributesEnum.TotalDiscAmt_trans.index();
    public static final int QUOTAMTSPAFTRTAX_TRANS = AttributesEnum.QuotAmtSpAftrTax_Trans.index();
    public static final int EOIDSWITCHERLOV_TRANS = AttributesEnum.EoIdSwitcherLov_Trans.index();
    public static final int SWITCHLOVEXP_TRANS = AttributesEnum.SwitchLovExp_Trans.index();
    public static final int TRANSCURRENCYDESC = AttributesEnum.TransCurrencyDesc.index();
    public static final int TRANSRFQDOCID = AttributesEnum.TransRfqDocId.index();
    public static final int TRANSRFQDOCIDSRCH = AttributesEnum.TransRfqDocIdSrch.index();
    public static final int TRANSCURRIDSP = AttributesEnum.transCurrIdSp.index();
    public static final int TRANSCURRIDSPSRCH = AttributesEnum.TransCurrIdSpSrch.index();
    public static final int ORGBSCURRID = AttributesEnum.OrgBsCurrId.index();
    public static final int TRANSTAXRULDID = AttributesEnum.TransTaxRuldId.index();
    public static final int TRANSRADIOFLG = AttributesEnum.TransRadioFlg.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSCOAID = AttributesEnum.TransCoaId.index();
    public static final int TRANDOCTYPE = AttributesEnum.TrandOcType.index();
    public static final int TRANSOCDESC = AttributesEnum.TransOcDesc.index();
    public static final int TRANSOCAMTSP = AttributesEnum.TransOcAmtSp.index();
    public static final int OVERALLDISCTRANS = AttributesEnum.OverAllDiscTrans.index();
    public static final int SUMDISCAMTSPTRANS = AttributesEnum.SumDiscAmtSpTrans.index();
    public static final int TRANSEOTYPE = AttributesEnum.TransEoType.index();
    public static final int TRANSBASECURRNOTATION = AttributesEnum.TransBaseCurrNotation.index();
    public static final int MMQUOTITM = AttributesEnum.MmQuotItm.index();
    public static final int MMQUOTOC = AttributesEnum.MmQuotOc.index();
    public static final int MMQUOTTNC = AttributesEnum.MmQuotTnc.index();
    public static final int MMQUOTTR = AttributesEnum.MmQuotTr.index();
    public static final int AFATTACHVO = AttributesEnum.AFAttachVo.index();
    public static final int MMQUOTATTCH = AttributesEnum.MmQuotAttch.index();
    public static final int MMQUOTFLX = AttributesEnum.MmQuotFlx.index();
    public static final int LOVORGIDVO = AttributesEnum.LovOrgIdVO.index();
    public static final int LOVUSRIDVO = AttributesEnum.LovUsrIdVO.index();
    public static final int LOVSOURCEVO = AttributesEnum.LovSourceVO.index();
    public static final int LOVRFQITMVO = AttributesEnum.LovRfqItmVO.index();
    public static final int LOVRFQIDVO1 = AttributesEnum.LovrfqIdVO1.index();
    public static final int LOVDISCTYPVO = AttributesEnum.LovDiscTypVO.index();
    public static final int LOVCURRENCYVO1 = AttributesEnum.LovCurrencyVO1.index();
    public static final int LOVWHIDVO = AttributesEnum.LovWhIdVO.index();
    public static final int LOVDLVADDSVO = AttributesEnum.LovDlvAddsVO.index();
    public static final int LOVPAYMODEVO = AttributesEnum.LovPayModeVO.index();
    public static final int LOVDLVMODEVO = AttributesEnum.LovDlvModeVO.index();
    public static final int LOVBILLADDSVO1 = AttributesEnum.LovBillAddsVO1.index();
    public static final int LOVEOIDFORDIRECTVO = AttributesEnum.LovEoIdForDirectVO.index();
    public static final int LOVEOIDFORRFQVO = AttributesEnum.LovEoIdForRfqVO.index();
    public static final int LOVQUOTSTATUSVO = AttributesEnum.LovQuotStatusVO.index();
    public static final int LOVTAXRULEIDVO1 = AttributesEnum.LovTaxRuleIdVO1.index();
    public static final int LOVCOAIDVO1 = AttributesEnum.LovCoaIdVO1.index();
    public static final int LOVOCDESC = AttributesEnum.LovOcDesc.index();
    public static final int LOVTRANTYP = AttributesEnum.LovTranTyp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmQuotVORowImpl() {
    }

    /**
     * Gets MmQuotEO entity object.
     * @return the MmQuotEO
     */
    public MmQuotEOImpl getMmQuotEO() {
        return (MmQuotEOImpl) getEntity(ENTITY_MMQUOTEO);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Date getDocDt() {
        return (Date) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Date value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for REF_DOC_ID using the alias name RefDocId.
     * @return the REF_DOC_ID
     */
    public String getRefDocId() {
        return (String) getAttributeInternal(REFDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_DOC_ID using the alias name RefDocId.
     * @param value value to set the REF_DOC_ID
     */
    public void setRefDocId(String value) {
        setAttributeInternal(REFDOCID, value);
    }

    /**
     * Gets the attribute value for QUOT_ID using the alias name QuotId.
     * @return the QUOT_ID
     */
    public String getQuotId() {
        return (String) getAttributeInternal(QUOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_ID using the alias name QuotId.
     * @param value value to set the QUOT_ID
     */
    public void setQuotId(String value) {
        setAttributeInternal(QUOTID, value.toUpperCase());
    }

    /**
     * Gets the attribute value for QUOT_DT using the alias name QuotDt.
     * @return the QUOT_DT
     */
    public Date getQuotDt() {
        return (Date) getAttributeInternal(QUOTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_DT using the alias name QuotDt.
     * @param value value to set the QUOT_DT
     */
    public void setQuotDt(Date value) {
        setAttributeInternal(QUOTDT, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @return the BILL_ADDS_ID
     */
    public String getBillAddsId() {
        return (String) getAttributeInternal(BILLADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_ADDS_ID using the alias name BillAddsId.
     * @param value value to set the BILL_ADDS_ID
     */
    public void setBillAddsId(String value) {
        setAttributeInternal(BILLADDSID, value);
    }

    /**
     * Gets the attribute value for DLV_ADDS_ID using the alias name DlvAddsId.
     * @return the DLV_ADDS_ID
     */
    public String getDlvAddsId() {
        return (String) getAttributeInternal(DLVADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_ADDS_ID using the alias name DlvAddsId.
     * @param value value to set the DLV_ADDS_ID
     */
    public void setDlvAddsId(String value) {
        setAttributeInternal(DLVADDSID, value);
    }

    /**
     * Gets the attribute value for DLV_MODE using the alias name DlvMode.
     * @return the DLV_MODE
     */
    public Integer getDlvMode() {
        return (Integer) getAttributeInternal(DLVMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_MODE using the alias name DlvMode.
     * @param value value to set the DLV_MODE
     */
    public void setDlvMode(Integer value) {
        setAttributeInternal(DLVMODE, value);
    }

    /**
     * Gets the attribute value for DLV_DAYS using the alias name DlvDays.
     * @return the DLV_DAYS
     */
    public Integer getDlvDays() {
        return (Integer) getAttributeInternal(DLVDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_DAYS using the alias name DlvDays.
     * @param value value to set the DLV_DAYS
     */
    public void setDlvDays(Integer value) {
        setAttributeInternal(DLVDAYS, value);
    }

    /**
     * Gets the attribute value for PAY_MODE using the alias name PayMode.
     * @return the PAY_MODE
     */
    public Integer getPayMode() {
        return (Integer) getAttributeInternal(PAYMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for PAY_MODE using the alias name PayMode.
     * @param value value to set the PAY_MODE
     */
    public void setPayMode(Integer value) {
        setAttributeInternal(PAYMODE, value);
    }

    /**
     * Gets the attribute value for VALID_FM_DT using the alias name ValidFmDt.
     * @return the VALID_FM_DT
     */
    public Date getValidFmDt() {
        return (Date) getAttributeInternal(VALIDFMDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_FM_DT using the alias name ValidFmDt.
     * @param value value to set the VALID_FM_DT
     */
    public void setValidFmDt(Date value) {
        setAttributeInternal(VALIDFMDT, value);
    }

    /**
     * Gets the attribute value for VALID_TO_DT using the alias name ValidToDt.
     * @return the VALID_TO_DT
     */
    public Date getValidToDt() {
        return (Date) getAttributeInternal(VALIDTODT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_TO_DT using the alias name ValidToDt.
     * @param value value to set the VALID_TO_DT
     */
    public void setValidToDt(Date value) {
        setAttributeInternal(VALIDTODT, value);
    }

    /**
     * Gets the attribute value for VLDT_TLRNC_DAYS using the alias name VldtTlrncDays.
     * @return the VLDT_TLRNC_DAYS
     */
    public Integer getVldtTlrncDays() {
        return (Integer) getAttributeInternal(VLDTTLRNCDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for VLDT_TLRNC_DAYS using the alias name VldtTlrncDays.
     * @param value value to set the VLDT_TLRNC_DAYS
     */
    public void setVldtTlrncDays(Integer value) {
        setAttributeInternal(VLDTTLRNCDAYS, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        /*  if(getDiscType().equalsIgnoreCase("P")){
            try{
                Number totBfrDisc = (Number)getSumItmAmtSp_Trans().minus(getSumTaxAmtItm_Trans());
              //  System.out.println("totBfrDisc--------:"+totBfrDisc);
             //   System.out.println("disc-----------:"+(totBfrDisc.multiply(value).divide(new Number(100))));
              //  Number totAftDisc = (Number)getSumItmAmtSp_Trans().minus((getSumItmAmtSp_Trans().multiply(value).divide(new Number(100)))).round(2);
              Number totAftDisc = (Number)getSumItmAmtSp_Trans().minus((totBfrDisc.multiply(value).divide(new Number(100)))).round(2);
            //   System.out.println("totAftDisc------:"+totAftDisc);
               //setItmAmtSp(totAftDisc);
                setQuotAmtSp_Trans(totAftDisc);
            }catch (SQLException e) {
                }
        }else if(getDiscType().equalsIgnoreCase("A")){
            try{
                //Number totBfrDisc = (Number)getSumItmAmtSp_Trans().minus(getSumTaxAmtItm_Trans());
                setQuotAmtSp_Trans((Number)getSumItmAmtSp_Trans().minus(value).round(2));
            }catch (SQLException e) {
                }
        } */
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for QUOT_AMT_BS using the alias name QuotAmtBs.
     * @return the QUOT_AMT_BS
     */
    public Number getQuotAmtBs() {
        return (Number) getAttributeInternal(QUOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_AMT_BS using the alias name QuotAmtBs.
     * @param value value to set the QUOT_AMT_BS
     */
    public void setQuotAmtBs(Number value) {
        setAttributeInternal(QUOTAMTBS, value);
    }

    /**
     * Gets the attribute value for QUOT_AMT_SP using the alias name QuotAmtSp.
     * @return the QUOT_AMT_SP
     */
    public Number getQuotAmtSp() {
        return (Number) getAttributeInternal(QUOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_AMT_SP using the alias name QuotAmtSp.
     * @param value value to set the QUOT_AMT_SP
     */
    public void setQuotAmtSp(Number value) {
        setAttributeInternal(QUOTAMTSP, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for QUOT_STATUS using the alias name QuotStatus.
     * @return the QUOT_STATUS
     */
    public Integer getQuotStatus() {
        return (Integer) getAttributeInternal(QUOTSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_STATUS using the alias name QuotStatus.
     * @param value value to set the QUOT_STATUS
     */
    public void setQuotStatus(Integer value) {
        setAttributeInternal(QUOTSTATUS, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @return the DISC_AMT_SP
     */
    public Number getDiscAmtSp() {
        if (getSumDiscAmt_Trans() != null)
            return getSumDiscAmt_Trans();
        else
            return (Number) getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @param value value to set the DISC_AMT_SP
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @return the DISC_AMT_BS
     */
    public Number getDiscAmtBs() {
        if (getSumDiscAmt_Trans() != null && getCurrConvFctr() != null)
            return (Number) getSumDiscAmt_Trans().multiply(getCurrConvFctr()).round(6);
        else
            return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @param value value to set the DISC_AMT_BS
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotSource_trans.
     * @return the QuotSource_trans
     */
    public Integer getQuotSource_trans() {
        //QuotationAMImpl am =(QuotationAMImpl)resolvElDC("QuotationAMDataControl");
        /*   Object mo = RequestContext.getCurrentInstance().getPageFlowScope().get("Add_Edit_Mode");
        if(getRefDocId()!=null && getQuotId()!=null && mo!=null && mo.toString().equalsIgnoreCase("V")){
            return 158;
        }else if(getRefDocId()==null && getQuotId()!=null && mo!=null && mo.toString().equalsIgnoreCase("V")){
            return 159;
        }
       else
      return (Integer) getAttributeInternal(QUOTSOURCE_TRANS); */

        if (getAttributeInternal(QUOTSOURCE_TRANS) != null)
            return (Integer) getAttributeInternal(QUOTSOURCE_TRANS);
        else if (getRefDocId() != null && getQuotId() != null && getRefDocId().length() > 0 &&
                 getQuotId().length() > 0) {
            return 158;
        } else if (getRefDocId() == null && getQuotId() != null && getQuotId().length() > 0) {
            return 159;
        } else if (getRefDocId() == null && getQuotId() == null) {
            return 158;
        } else if (getRefDocId() != null && getQuotId() == null && getRefDocId().length() > 0) {
            return 158;
        } else
            return (Integer) getAttributeInternal(QUOTSOURCE_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotSource_trans.
     * @param value value to set the  QuotSource_trans
     */
    public void setQuotSource_trans(Integer value) {
        setAttributeInternal(QUOTSOURCE_TRANS, value);
    }


    /**
     * Gets the attribute value for QUOT_AMT_BS_TRANS using the alias name QuotAmtBs_Trans.
     * @return the QUOT_AMT_BS_TRANS
     */
    public Number getQuotAmtBs_Trans() {
        Number totalBsAmt = new Number(0);
        Number curr = new Number(1);
        if (getCurrConvFctr() != null)
            curr = getCurrConvFctr();
        if (getQuotAmtSpAftrTax_Trans() != null) {
            totalBsAmt = (Number) getQuotAmtSpAftrTax_Trans().multiply(curr).round(6);
            return totalBsAmt;
        } else {
            return (Number) getAttributeInternal(QUOTAMTBS_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_AMT_BS_TRANS using the alias name QuotAmtBs_Trans.
     * @param value value to set the QUOT_AMT_BS_TRANS
     */
    public void setQuotAmtBs_Trans(Number value) {
        setAttributeInternal(QUOTAMTBS_TRANS, value);
    }

    /**
     * Gets the attribute value for QUOT_AMT_SP_TRANS using the alias name QuotAmtSp_Trans.
     * @return the QUOT_AMT_SP_TRANS
     */
    public Number getQuotAmtSp_Trans() {
        // Number costBfrTax=new Number(0);
        Number zero = new Number(0);
        Number sumItmSp = zero;
        Number Sumtaxitm = zero;
        Number discVal = zero;
        if (getSumItmAmtSp_Trans() != null) {
            sumItmSp = getSumItmAmtSp_Trans();
        }
        if (getSumTaxAmtItm_Trans() != null) {
            Sumtaxitm = getSumTaxAmtItm_Trans();
        }
        if (getDiscVal_Trans() != null) {
            discVal = getDiscVal_Trans();
        }
        if (getSumItmAmtSp_Trans() != null) {
            return (Number) sumItmSp.minus(Sumtaxitm);
            //
        } else {
            return (Number) getAttributeInternal(QUOTAMTSP_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_AMT_SP_TRANS using the alias name QuotAmtSp_Trans.
     * @param value value to set the QUOT_AMT_SP_TRANS
     */
    public void setQuotAmtSp_Trans(Number value) {
        setAttributeInternal(QUOTAMTSP_TRANS, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvAdds_trans.
     * @return the DlvAdds_trans
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    public String getDlvAdds_trans() {
        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");
        String dlvAdds = "";
        String transDlvAdds = "";
        try {
            dlvAdds = getDlvAddsId();
        } catch (NullPointerException npe) {

        }
        if (dlvAdds != null) {
            Row[] xx = am.getLovDlvAdds().getFilteredRows("AddsId", dlvAdds);
            if (xx.length > 0) {
                if (xx[0].getAttribute("Adds") != null) {
                    transDlvAdds = xx[0].getAttribute("Adds").toString();
                } else {
                    transDlvAdds = "";
                }
            }
            return transDlvAdds;
        } else {
            return (String) getAttributeInternal(DLVADDS_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DlvAdds_trans.
     * @param value value to set the  DlvAdds_trans
     */
    public void setDlvAdds_trans(String value) {
        setAttributeInternal(DLVADDS_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BillAdds_Trans.
     * @return the BillAdds_Trans
     */
    public String getBillAdds_Trans() {
        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");
        String billAdds = "";
        String transBillAdds = "";
        try {
            billAdds = getBillAddsId();
            //x.getAttribute("TvouCoaId");
        } catch (NullPointerException npe) {

        }
        if (billAdds != null) {
            am.getLovBillAdds().executeQuery();
            Row[] xx = am.getLovBillAdds().getFilteredRows("AddsId", billAdds);
            // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
            if (xx.length > 0) {
                transBillAdds = xx[0].getAttribute("Adds").toString();
            }
            return transBillAdds;
        } else {
            return (String) getAttributeInternal(BILLADDS_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BillAdds_Trans.
     * @param value value to set the  BillAdds_Trans
     */
    public void setBillAdds_Trans(String value) {
        setAttributeInternal(BILLADDS_TRANS, value);
    }

    public QuotationAMImpl getAm() {
        return (QuotationAMImpl) resolvElDC("QuotationAMDataControl");
    }

    /**
     * Gets the attribute value for the calculated attribute SumDiscAmt_Trans.
     * @return the SumDiscAmt_Trans
     */
    public Number getSumDiscAmt_Trans() {
        Number disc = (Number) getAttributeInternal(SUMDISCAMT_TRANS);
        if (disc != null && getCurrConvFctr() != null) {
            setDiscAmtBs((Number) disc.multiply(getCurrConvFctr()).round(6));
            setDiscAmtSp(disc);
        } else {
            setDiscAmtBs(new Number(0));
            setDiscAmtSp(new Number(0));
        }
        return (Number) getAttributeInternal(SUMDISCAMT_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumDiscAmt_Trans.
     * @param value value to set the  SumDiscAmt_Trans
     */
    public void setSumDiscAmt_Trans(Number value) {
        setAttributeInternal(SUMDISCAMT_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumOcAmt_Trans.
     * @return the SumOcAmt_Trans
     */
    public Number getSumOcAmt_Trans() {
        ViewObject oc = getAm().getMmQuotOc();
        oc.setRangeSize(-1);
        if (oc.getAllRowsInRange().length > 0) {
            Number amt = new Number(0);
            Number ocamt = new Number(0);
            for (Row curr : oc.getAllRowsInRange()) {
                ocamt = (Number) curr.getAttribute("OcAmtSp");
                if (ocamt == null) {
                    ocamt = new Number(0);
                }
                if ("A".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                    amt = amt.add(ocamt);
                } else if ("S".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                    amt = amt.subtract(ocamt);
                }
            }
            return amt;
        } else if (oc.getAllRowsInRange().length == 0) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(SUMOCAMT_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumOcAmt_Trans.
     * @param value value to set the  SumOcAmt_Trans
     */
    public void setSumOcAmt_Trans(Number value) {
        setAttributeInternal(SUMOCAMT_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumTaxAmtItm_Trans.
     * @return the SumTaxAmtItm_Trans
     */
    public Number getSumTaxAmtItm_Trans() {
        ViewObjectImpl vo = getAm().getMmQuotItm();
        RowSetIterator its = vo.createRowSetIterator(null);
        Number sum = new Number(0);
        Number sumItm = null;
        while (its.hasNext()) {
            sumItm = new Number(0);
            Row r = its.next();
            if (r.getAttribute("DocId").toString().equals(getDocId())) {
                if (r.getAttribute("TaxAmtItm_Trans") != null)
                    sumItm = (Number) r.getAttribute("TaxAmtItm_Trans");
                else
                    sumItm = new Number(0);
                sum = sum.add(sumItm);
            }
        }
        its.closeRowSetIterator();
        return sum;
        // return (Number) getAttributeInternal(SUMTAXAMTITM_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumTaxAmtItm_Trans.
     * @param value value to set the  SumTaxAmtItm_Trans
     */
    public void setSumTaxAmtItm_Trans(Number value) {
        setAttributeInternal(SUMTAXAMTITM_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumItmAmtBs_Trans.
     * @return the SumItmAmtBs_Trans
     */
    public Number getSumItmAmtBs_Trans() {
        ViewObjectImpl vo = getAm().getMmQuotItm();
        RowSetIterator its = vo.createRowSetIterator(null);
        Number sum = new Number(0);
        Number sumItm = null;
        while (its.hasNext()) {
            sumItm = new Number(0);
            Row r = its.next();
            if (r.getAttribute("DocId").toString().equals(getDocId())) {
                if (r.getAttribute("ItmAmtBs_Trans") != null)
                    sumItm = (Number) r.getAttribute("ItmAmtBs_Trans");
                else
                    sumItm = new Number(0);
                sum = sum.add(sumItm);
            }
        }
        its.closeRowSetIterator();
        return sum;
        // return (Number) getAttributeInternal(SUMITMAMTBS_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumItmAmtBs_Trans.
     * @param value value to set the  SumItmAmtBs_Trans
     */
    public void setSumItmAmtBs_Trans(Number value) {
        setAttributeInternal(SUMITMAMTBS_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumItmAmtSp_Trans.
     * @return the SumItmAmtSp_Trans
     */
    public Number getSumItmAmtSp_Trans() {
        ViewObjectImpl vo = getAm().getMmQuotItm();
        RowSetIterator its = vo.createRowSetIterator(null);
        Number sum = new Number(0);
        Number sumItm = null;
        while (its.hasNext()) {
            sumItm = new Number(0);
            Row r = its.next();
            if (r.getAttribute("DocId").toString().equals(getDocId())) {
                if ((Number) r.getAttribute("ItmAmtSpAftTax_Trans") != null)
                    sumItm = (Number) r.getAttribute("ItmAmtSpAftTax_Trans");
                else
                    sumItm = new Number(0);
                sum = sum.add(sumItm);
            }
        }
        its.closeRowSetIterator();
        return sum;
        // return (Number) getAttributeInternal(SUMITMAMTSP_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumItmAmtSp_Trans.
     * @param value value to set the  SumItmAmtSp_Trans
     */
    public void setSumItmAmtSp_Trans(Number value) {
        setAttributeInternal(SUMITMAMTSP_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotTaxAmt_Trans.
     * @return the QuotTaxAmt_Trans
     */
    public Number getQuotTaxAmt_Trans() {
        /* Number taxAmt=new Number(0);
        QuotationAMImpl am = (QuotationAMImpl)resolvElDC("QuotationAMDataControl");
          ViewObjectImpl viewTr=am.getMmQuotTr();
          viewTr.setRangeSize(-1);
          viewTr.getAllRowsInRange();
          RowQualifier rowQualifier =new RowQualifier(viewTr);
          rowQualifier.setWhereClause("DocId='"+getDocId());
          Row[] rows=viewTr.getFilteredRows(rowQualifier);
          if(rows.length>0){
              taxAmt = (Number)rows[0].getAttribute("TaxAmt");
            return taxAmt;
          }else if(rows.length==0){
              return new Number(0);
          }
          else {
        return (Number) getAttributeInternal(QUOTTAXAMT_TRANS);
     }*/
        ViewObjectImpl vo = getAm().getMmQuotItm();
        RowSetIterator its = vo.createRowSetIterator(null);
        Number sum = new Number(0);
        Number sumItm = null;
        while (its.hasNext()) {
            sumItm = new Number(0);
            Row r = its.next();
            if (r.getAttribute("DocId").toString().equals(getDocId())) {
                if (r.getAttribute("TaxAmtItm_Trans") != null)
                    sumItm = (Number) r.getAttribute("TaxAmtItm_Trans");
                else
                    sumItm = new Number(0);

                sum = sum.add(sumItm);
            }
        }
        its.closeRowSetIterator();
        return sum;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotTaxAmt_Trans.
     * @param value value to set the  QuotTaxAmt_Trans
     */
    public void setQuotTaxAmt_Trans(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(QUOTTAXAMT_TRANS, value);
    }

    /**
     * Gets the attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @return the TAX_AFTER_DISC_FLG
     */
    public String getTaxAfterDiscFlg() {
        return (String) getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @param value value to set the TAX_AFTER_DISC_FLG
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiscVal_Trans.
     * @return the DiscVal_Trans
     */
    public Number getDiscVal_Trans() {
        return (Number) getAttributeInternal(DISCVAL_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiscVal_Trans.
     * @param value value to set the  DiscVal_Trans
     */
    public void setDiscVal_Trans(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(DISCVAL_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalDiscAmt_trans.
     * @return the TotalDiscAmt_trans
     */
    public Number getTotalDiscAmt_trans() {
        if (getSumDiscAmt_Trans() != null) {
            return getSumDiscAmt_Trans().plus(getDiscVal_Trans());
        } else {
            return (Number) getAttributeInternal(TOTALDISCAMT_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalDiscAmt_trans.
     * @param value value to set the  TotalDiscAmt_trans
     */
    public void setTotalDiscAmt_trans(Number value) {
        setAttributeInternal(TOTALDISCAMT_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotAmtSpAftrTax_Trans.
     * @return the QuotAmtSpAftrTax_Trans
     */
    /*  public Number getQuotAmtSpAftrTax_Trans() {
        Number spAmtAfterTax=new Number(0);
        if(getSumItmAmtSp_Trans()!=null){
            spAmtAfterTax = (Number)getSumItmAmtSp_Trans().plus(getSumOcAmt_Trans()).plus(getQuotTaxAmt_Trans()).minus(getDiscVal_Trans());
            System.out.println("cast before tax------->>>"+spAmtAfterTax);
            return spAmtAfterTax;
        }else{
        return (Number) getAttributeInternal(QUOTAMTSPAFTRTAX_TRANS);
        }
        } */


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotAmtSpAftrTax_Trans.
     * @param value value to set the  QuotAmtSpAftrTax_Trans
     */
    /* public void setQuotAmtSpAftrTax_Trans(Number value) {
        setAttributeInternal(QUOTAMTSPAFTRTAX_TRANS, value);
    } */

    /**
     * Gets the attribute value for the calculated attribute QuotAmtSpAftrTax_Trans.
     * @return the QuotAmtSpAftrTax_Trans
     */
    public Number getQuotAmtSpAftrTax_Trans() {
        Number spAmtAfterTax = new Number(0);
        Number zero = new Number(0);
        Number sp = zero;
        Number tottx = zero;
        Number oc = zero;
        Number dis = zero;
        if (getQuotAmtSp_Trans() != null) {
            sp = getQuotAmtSp_Trans(); //getSumItmAmtSp_Trans();
        }
        //QuotAmtSp_Trans
        //SumTaxAmtItm_Trans
        if (getQuotTaxAmt_Trans() != null) {
            tottx = getQuotTaxAmt_Trans();
        }
        if (getSumOcAmt_Trans() != null) {
            oc = getSumOcAmt_Trans();
        }
        if (getDiscVal_Trans() != null) {
            dis = getDiscVal_Trans();
        }
        //  adfLog.info("getQuotAmtSp_Trans  "+getQuotAmtSp_Trans()+" getQuotTaxAmt_Trans  "+getQuotTaxAmt_Trans()+" getSumOcAmt_Trans "+getSumOcAmt_Trans()+"  getDiscVal_Trans "+getDiscVal_Trans()+"   getdisva  "+getDiscVal() );
        if (getSumItmAmtSp_Trans() != null) {
            spAmtAfterTax = (Number) sp.plus(oc).plus(tottx); //.minus(dis); change BL 08/06/2014
            return spAmtAfterTax;
        } else {
            return (Number) getAttributeInternal(QUOTAMTSPAFTRTAX_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotAmtSpAftrTax_Trans.
     * @param value value to set the  QuotAmtSpAftrTax_Trans
     */
    public void setQuotAmtSpAftrTax_Trans(Number value) {
        setAttributeInternal(QUOTAMTSPAFTRTAX_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdSwitcherLov_Trans.
     * @return the EoIdSwitcherLov_Trans
     */
    public String getEoIdSwitcherLov_Trans() {
        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");

        Integer eoId = 0;
        String supplier = null;
        try {
            eoId = getEoId();
        } catch (NullPointerException npe) {
        }
        if (eoId != null && eoId.compareTo(0) == 1) {
            am.getLovEoId1().setNamedWhereClauseParam("hoOrgIdBindVar", getTransHoOrgId());
            am.getLovEoId1().setNamedWhereClauseParam("cldIdBindVar", getCldId());
            am.getLovEoId1().setNamedWhereClauseParam("SlocIdBindVar", getSlocId());
            am.getLovEoId1().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
            am.getLovEoId1().executeQuery();
            Row[] xx = am.getLovEoId1().getFilteredRows("EoId", eoId);
            if (xx.length > 0 && xx[0].getAttribute("EoNm")!=null) {
                supplier = xx[0].getAttribute("EoNm").toString();
            }
            return supplier;

        } else {
            return (String) getAttributeInternal(EOIDSWITCHERLOV_TRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdSwitcherLov_Trans.
     * @param value value to set the  EoIdSwitcherLov_Trans
     */
    public void setEoIdSwitcherLov_Trans(String value) {
        setAttributeInternal(EOIDSWITCHERLOV_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SwitchLovExp_Trans.
     * @return the SwitchLovExp_Trans
     */
    public String getSwitchLovExp_Trans() {
        return (String) getAttributeInternal(SWITCHLOVEXP_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SwitchLovExp_Trans.
     * @param value value to set the  SwitchLovExp_Trans
     */
    public void setSwitchLovExp_Trans(String value) {
        setAttributeInternal(SWITCHLOVEXP_TRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrencyDesc.
     * @return the TransCurrencyDesc
     */
    public String getTransCurrencyDesc() {
        if (getCurrIdSp() != null) {
            QuotationAMImpl am = (QuotationAMImpl) this.getApplicationModule();
            Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", getCurrIdSp());
            if (xx.length > 0 && xx[0].getAttribute("CurrNotationAlias") != null) {
                return xx[0].getAttribute("CurrNotationAlias").toString();
            } else {
                return (String) getAttributeInternal(TRANSCURRENCYDESC);
            }
        } else {
            return (String) getAttributeInternal(TRANSCURRENCYDESC);
        }


        //        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");
        //
        //        Integer input = null;
        //        String currDesc = null;
        //        try {
        //            input = getCurrIdSp();
        //        } catch (NullPointerException npe) {
        //
        //        }
        //        if (input != null) {
        //            Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", input);
        //            // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
        //            if (xx.length > 0) {
        //                currDesc = xx[0].getAttribute("CurrNotationAlias").toString();
        //            }
        //            return currDesc;
        //        } else {
        //            return (String) getAttributeInternal(TRANSCURRENCYDESC);
        //        }
        //        //return (String) getAttributeInternal(TRANSCURRENCYDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrencyDesc.
     * @param value value to set the  TransCurrencyDesc
     */
    public void setTransCurrencyDesc(String value) {
        setAttributeInternal(TRANSCURRENCYDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRfqDocId.
     * @return the TransRfqDocId
     */
    public String getTransRfqDocId() {
        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");

        String input = null;
        String rfqId = null;
        try {
            input = getRefDocId();
        } catch (NullPointerException npe) {

        }
        if (input != null) {
            Row[] xx = am.getTransRfqDocIdDisp().getFilteredRows("DocId", input);
            // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
            if (xx.length > 0) {
                rfqId = xx[0].getAttribute("RfqId").toString();
            }
            return rfqId;
        } else {
            return (String) getAttributeInternal(TRANSRFQDOCID);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRfqDocId.
     * @param value value to set the  TransRfqDocId
     */
    public void setTransRfqDocId(String value) {
        setAttributeInternal(TRANSRFQDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRfqDocIdSrch.
     * @return the TransRfqDocIdSrch
     */
    public String getTransRfqDocIdSrch() {
        return (String) getAttributeInternal(TRANSRFQDOCIDSRCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRfqDocIdSrch.
     * @param value value to set the  TransRfqDocIdSrch
     */
    public void setTransRfqDocIdSrch(String value) {
        setAttributeInternal(TRANSRFQDOCIDSRCH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transCurrIdSp.
     * @return the transCurrIdSp
     */
    public String gettransCurrIdSp() {
        QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");

        Integer input = null;
        String currDesc = null;
        try {
            input = getCurrIdSp();
        } catch (NullPointerException npe) {

        }
        if (input != null) {
            Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", input);
            // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
            if (xx.length > 0) {
                currDesc = xx[0].getAttribute("CurrDesc").toString();
            }
            return currDesc;
        } else {
            return (String) getAttributeInternal(TRANSCURRIDSP);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transCurrIdSp.
     * @param value value to set the  transCurrIdSp
     */
    public void settransCurrIdSp(String value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSpSrch.
     * @return the TransCurrIdSpSrch
     */
    public String getTransCurrIdSpSrch() {
        return (String) getAttributeInternal(TRANSCURRIDSPSRCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSpSrch.
     * @param value value to set the  TransCurrIdSpSrch
     */
    public void setTransCurrIdSpSrch(String value) {
        setAttributeInternal(TRANSCURRIDSPSRCH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgBsCurrId.
     * @return the OrgBsCurrId
     */
    public Integer getOrgBsCurrId() {
        String P_ORGID = (String) resolveEl("#{pageFlowScope.GLBL_APP_USR_ORG1}");
        BigDecimal currBsId = null;
        if (P_ORGID != null) {
            currBsId = (BigDecimal) callStoredFunction(Types.NUMERIC, "app.pkg_app.get_org_def_curr_bs1(?)", new Object[] {
                                                       P_ORGID });
        }
        if (currBsId != null) {
            Integer currIdBs = Integer.parseInt(currBsId.toString());
            return currIdBs;
        } else {
            return (Integer) getAttributeInternal(ORGBSCURRID);
        }
    }


    /**
     * Gets the attribute value for the calculated attribute TransTaxRuldId.
     * @return the TransTaxRuldId
     */
    public Integer getTransTaxRuldId() {
        return (Integer) getAttributeInternal(TRANSTAXRULDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuldId.
     * @param value value to set the  TransTaxRuldId
     */
    public void setTransTaxRuldId(Integer value) {
        setAttributeInternal(TRANSTAXRULDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRadioFlg.
     * @return the TransRadioFlg
     */
    public String getTransRadioFlg() {
        return (String) getAttributeInternal(TRANSRADIOFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRadioFlg.
     * @param value value to set the  TransRadioFlg
     */
    public void setTransRadioFlg(String value) {
        setAttributeInternal(TRANSRADIOFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        /*  if( getAttributeInternal(TRANSHOORGID)!=null)
        return (String) getAttributeInternal(TRANSHOORGID);
        else */
        return resolveEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the TransCoaNm
     */
    public String getTransCoaNm() {
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value) {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaId.
     * @return the TransCoaId
     */
    public Integer getTransCoaId() {
        return (Integer) getAttributeInternal(TRANSCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaId.
     * @param value value to set the  TransCoaId
     */
    public void setTransCoaId(Integer value) {
        setAttributeInternal(TRANSCOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrandOcType.
     * @return the TrandOcType
     */
    public String getTrandOcType() {
        return (String) getAttributeInternal(TRANDOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrandOcType.
     * @param value value to set the  TrandOcType
     */
    public void setTrandOcType(String value) {
        setAttributeInternal(TRANDOCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOcDesc.
     * @return the TransOcDesc
     */
    public Integer getTransOcDesc() {
        return (Integer) getAttributeInternal(TRANSOCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcDesc.
     * @param value value to set the  TransOcDesc
     */
    public void setTransOcDesc(Integer value) {
        setAttributeInternal(TRANSOCDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TRANSOCDESC.
     * @return the TRANSOCDESC
     */
    /*  public String getTransOcDisc() {
        return (String) getAttributeInternal(TRANSOCDISC);
    } */

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TRANSOCDESC.
     * @param value value to set the  TRANSOCDESC
     */
    /*  public void setTransOcDisc(String value) {
        setAttributeInternal(TRANSOCDISC, value);
    } */

    /**
     * Gets the attribute value for the calculated attribute TransOcAmtSp.
     * @return the TransOcAmtSp
     */
    public Number getTransOcAmtSp() {
        return (Number) getAttributeInternal(TRANSOCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOcAmtSp.
     * @param value value to set the  TransOcAmtSp
     */
    public void setTransOcAmtSp(Number value) {
        setAttributeInternal(TRANSOCAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OverAllDiscTrans.
     * @return the OverAllDiscTrans
     */
    public Number getOverAllDiscTrans() {
        QuotationAMImpl am = (QuotationAMImpl) this.getApplicationModule();
        ViewObjectImpl itmVO = am.getMmQuotItm();
        Number sumdisc = new Number(0);
        if (getSumDiscAmt_Trans() != null)
            sumdisc = getSumDiscAmt_Trans();
        Number sum = new Number(0);
        Row[] rr = itmVO.getFilteredRows("DocId", getDocId());
        System.out.println("current length is " + rr.length);
        if (rr.length > 0) {
            for (Row r : rr) {
                sum = new Number(sum.add((Number) r.getAttribute("TotDiscAmtSp")).round(6));
            }
            adfLog.info("sum is and get sum  " + sum + "  " + sumdisc);
        }

        Number overall = (Number) sum.minus(sumdisc);
        adfLog.info("total overall disc is " + overall);
        if (overall.compareTo(new Number(0)) > 0) {
            return overall;
        }
        // if(rr.getAttribute("TransItmAmtSp"))

        return (Number) getAttributeInternal(OVERALLDISCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OverAllDiscTrans.
     * @param value value to set the  OverAllDiscTrans
     */
    public void setOverAllDiscTrans(Number value) {
        setAttributeInternal(OVERALLDISCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SumDiscAmtSpTrans.
     * @return the SumDiscAmtSpTrans
     */
    public Number getSumDiscAmtSpTrans() {
        return (Number) getAttributeInternal(SUMDISCAMTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SumDiscAmtSpTrans.
     * @param value value to set the  SumDiscAmtSpTrans
     */
    public void setSumDiscAmtSpTrans(Number value) {
        setAttributeInternal(SUMDISCAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoType.
     * @return the TransEoType
     */
    public Integer getTransEoType() {
        return (Integer) getAttributeInternal(TRANSEOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoType.
     * @param value value to set the  TransEoType
     */
    public void setTransEoType(Integer value) {
        setAttributeInternal(TRANSEOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBaseCurrNotation.
     * @return the TransBaseCurrNotation
     */
    public String getTransBaseCurrNotation() {
        if (getOrgBsCurrId() != null) {
            QuotationAMImpl am = (QuotationAMImpl) this.getApplicationModule();
            Row[] xx = am.getLovCurrId().getFilteredRows("CurrId", getOrgBsCurrId());
            if (xx.length > 0 && xx[0].getAttribute("CurrNotationAlias") != null) {
                return xx[0].getAttribute("CurrNotationAlias").toString();
            } else {
                return (String) getAttributeInternal(TRANSBASECURRNOTATION);
            }
        } else {
            return (String) getAttributeInternal(TRANSBASECURRNOTATION);
        }
        // return (String) getAttributeInternal(TRANSBASECURRNOTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBaseCurrNotation.
     * @param value value to set the  TransBaseCurrNotation
     */
    public void setTransBaseCurrNotation(String value) {
        setAttributeInternal(TRANSBASECURRNOTATION, value);
    }

    public String resolveEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            QuotationAMImpl am = (QuotationAMImpl) resolvElDC("QuotationAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotItm.
     */
    public RowIterator getMmQuotItm() {
        return (RowIterator) getAttributeInternal(MMQUOTITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotOc.
     */
    public RowIterator getMmQuotOc() {
        return (RowIterator) getAttributeInternal(MMQUOTOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotTnc.
     */
    public RowIterator getMmQuotTnc() {
        return (RowIterator) getAttributeInternal(MMQUOTTNC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotTr.
     */
    public RowIterator getMmQuotTr() {
        return (RowIterator) getAttributeInternal(MMQUOTTR);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AFAttachVo.
     */
    public RowIterator getAFAttachVo() {
        return (RowIterator) getAttributeInternal(AFATTACHVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotAttch.
     */
    public RowIterator getMmQuotAttch() {
        return (RowIterator) getAttributeInternal(MMQUOTATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmQuotFlx.
     */
    public RowIterator getMmQuotFlx() {
        return (RowIterator) getAttributeInternal(MMQUOTFLX);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO.
     */
    public RowSet getLovOrgIdVO() {
        return (RowSet) getAttributeInternal(LOVORGIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO.
     */
    public RowSet getLovUsrIdVO() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSourceVO.
     */
    public RowSet getLovSourceVO() {
        return (RowSet) getAttributeInternal(LOVSOURCEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRfqItmVO.
     */
    public RowSet getLovRfqItmVO() {
        return (RowSet) getAttributeInternal(LOVRFQITMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovrfqIdVO1.
     */
    public RowSet getLovrfqIdVO1() {
        return (RowSet) getAttributeInternal(LOVRFQIDVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTypVO.
     */
    public RowSet getLovDiscTypVO() {
        return (RowSet) getAttributeInternal(LOVDISCTYPVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO1.
     */
    public RowSet getLovCurrencyVO1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhIdVO.
     */
    public RowSet getLovWhIdVO() {
        return (RowSet) getAttributeInternal(LOVWHIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDlvAddsVO.
     */
    public RowSet getLovDlvAddsVO() {
        return (RowSet) getAttributeInternal(LOVDLVADDSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPayModeVO.
     */
    public RowSet getLovPayModeVO() {
        return (RowSet) getAttributeInternal(LOVPAYMODEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDlvModeVO.
     */
    public RowSet getLovDlvModeVO() {
        return (RowSet) getAttributeInternal(LOVDLVMODEVO);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovBillAddsVO1.
     */
    public RowSet getLovBillAddsVO1() {
        return (RowSet) getAttributeInternal(LOVBILLADDSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoIdForDirectVO.
     */
    public RowSet getLovEoIdForDirectVO() {
        return (RowSet) getAttributeInternal(LOVEOIDFORDIRECTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoIdForRfqVO.
     */
    public RowSet getLovEoIdForRfqVO() {
        return (RowSet) getAttributeInternal(LOVEOIDFORRFQVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQuotStatusVO.
     */
    public RowSet getLovQuotStatusVO() {
        return (RowSet) getAttributeInternal(LOVQUOTSTATUSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleIdVO1.
     */
    public RowSet getLovTaxRuleIdVO1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaIdVO1.
     */
    public RowSet getLovCoaIdVO1() {
        return (RowSet) getAttributeInternal(LOVCOAIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcDesc.
     */
    public RowSet getLovOcDesc() {
        return (RowSet) getAttributeInternal(LOVOCDESC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTranTyp.
     */
    public RowSet getLovTranTyp() {
        return (RowSet) getAttributeInternal(LOVTRANTYP);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
