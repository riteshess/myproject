package barcodeprofileapp.model.entities;

import static adf.utils.ebiz.EbizParams.GLBL_APP_CLD_ID;
import static adf.utils.ebiz.EbizParams.GLBL_APP_SERV_LOC;
import static adf.utils.ebiz.EbizParams.GLBL_APP_USR;
import static adf.utils.ebiz.EbizParams.GLBL_APP_USR_ORG;
import static adf.utils.ebiz.EbizParams.GLBL_HO_ORG_ID;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 02 10:21:57 PST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppBcPrfAttEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        PrcsId,
        AttId,
        AttLen,
        StrtPos,
        EndPos,
        AppBcPrfEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRCSID = AttributesEnum.PrcsId.index();
    public static final int ATTID = AttributesEnum.AttId.index();
    public static final int ATTLEN = AttributesEnum.AttLen.index();
    public static final int STRTPOS = AttributesEnum.StrtPos.index();
    public static final int ENDPOS = AttributesEnum.EndPos.index();
    public static final int APPBCPRFEO = AttributesEnum.AppBcPrfEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppBcPrfAttEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("barcodeprofileapp.model.entities.AppBcPrfAttEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PrcsId, using the alias name PrcsId.
     * @return the value of PrcsId
     */
    public Integer getPrcsId() {
        return (Integer) getAttributeInternal(PRCSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrcsId.
     * @param value value to set the PrcsId
     */
    public void setPrcsId(Integer value) {
        setAttributeInternal(PRCSID, value);
    }

    /**
     * Gets the attribute value for AttId, using the alias name AttId.
     * @return the value of AttId
     */
    public Integer getAttId() {
        return (Integer) getAttributeInternal(ATTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttId.
     * @param value value to set the AttId
     */
    public void setAttId(Integer value) {
        setAttributeInternal(ATTID, value);
    }

    /**
     * Gets the attribute value for AttLen, using the alias name AttLen.
     * @return the value of AttLen
     */
    public Integer getAttLen() {
        return (Integer) getAttributeInternal(ATTLEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttLen.
     * @param value value to set the AttLen
     */
    public void setAttLen(Integer value) {
        setAttributeInternal(ATTLEN, value);
    }

    /**
     * Gets the attribute value for StrtPos, using the alias name StrtPos.
     * @return the value of StrtPos
     */
    public Integer getStrtPos() {
        return (Integer) getAttributeInternal(STRTPOS);
    }

    /**
     * Sets <code>value</code> as the attribute value for StrtPos.
     * @param value value to set the StrtPos
     */
    public void setStrtPos(Integer value) {
        setAttributeInternal(STRTPOS, value);
    }

    /**
     * Gets the attribute value for EndPos, using the alias name EndPos.
     * @return the value of EndPos
     */
    public Integer getEndPos() {
        return (Integer) getAttributeInternal(ENDPOS);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndPos.
     * @param value value to set the EndPos
     */
    public void setEndPos(Integer value) {
        setAttributeInternal(ENDPOS, value);
    }

    /**
     * @return the associated entity AppBcPrfEOImpl.
     */
    public AppBcPrfEOImpl getAppBcPrfEO() {
        return (AppBcPrfEOImpl) getAttributeInternal(APPBCPRFEO);
    }

    /**
     * Sets <code>value</code> as the associated entity AppBcPrfEOImpl.
     */
    public void setAppBcPrfEO(AppBcPrfEOImpl value) {
        setAttributeInternal(APPBCPRFEO, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param prcsId key constituent
     * @param attId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, Integer prcsId, Integer attId) {
        return new Key(new Object[] { cldId, slocId, orgId, prcsId, attId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

