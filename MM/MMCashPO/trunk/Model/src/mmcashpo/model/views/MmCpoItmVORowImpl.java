package mmcashpo.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmcashpo.model.entities.MmCpoItmEOImpl;

import mmcashpo.model.module.MmCashPOAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 14 15:24:46 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmCpoItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMCPOITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        OrdQty {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        DiscType {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        ItmAmountBs {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmAmountBs();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmAmountBs((Number)value);
            }
        }
        ,
        ItmAmountSp {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmAmountSp();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmAmountSp((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EntityId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        Tranitemid {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranitemid();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranitemid((String)value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String)value);
            }
        }
        ,
        TranUomClass {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranUomClass();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranUomClass((Integer)value);
            }
        }
        ,
        TranItmAmtSp {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranItmAmtSp();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranItmAmtSp((Number)value);
            }
        }
        ,
        TranItmAmtBs {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranItmAmtBs();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranItmAmtBs((Number)value);
            }
        }
        ,
        MarkedForDelete {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getMarkedForDelete();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setMarkedForDelete((String)value);
            }
        }
        ,
        TranItmDisc {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranItmDisc();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranItmDisc((Number)value);
            }
        }
        ,
        TranDiscType {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranDiscType();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranDiscType((String)value);
            }
        }
        ,
        NewTaxAmt {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getNewTaxAmt();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setNewTaxAmt((Number)value);
            }
        }
        ,
        TranItemAmtSpWithTax {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranItemAmtSpWithTax();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranItemAmtSpWithTax((Number)value);
            }
        }
        ,
        TranItemBsWithTax {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranItemBsWithTax();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranItemBsWithTax((Number)value);
            }
        }
        ,
        TranPriceQty {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranPriceQty();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranPriceQty((Number)value);
            }
        }
        ,
        transItemName {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.gettransItemName();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.settransItemName((String)value);
            }
        }
        ,
        TranReapplyTax {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTranReapplyTax();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTranReapplyTax((String)value);
            }
        }
        ,
        TransTaxExmptFlg {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTransTaxExmptFlg();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTransTaxExmptFlg((String)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        transItemDesc {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.gettransItemDesc();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.settransItemDesc((String)value);
            }
        }
        ,
        ItmGrpDetailTrans {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmGrpDetailTrans();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmGrpDetailTrans((String)value);
            }
        }
        ,
        ItmAttDtlTrans {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getItmAttDtlTrans();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setItmAttDtlTrans((String)value);
            }
        }
        ,
        TransItmGrpId {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getTransItmGrpId();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setTransItmGrpId((String)value);
            }
        }
        ,
        PoOrdVw {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getPoOrdVw();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmCpoTr {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getMmCpoTr();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdForaddVO1 {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getLovItmIdForaddVO1();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomIdVO1 {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getLovUomIdVO1();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDictypeVO1 {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getLovDictypeVO1();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmitmVwVO1 {
            public Object get(MmCpoItmVORowImpl obj) {
                return obj.getMmitmVwVO1();
            }

            public void put(MmCpoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmCpoItmVORowImpl object);

        public abstract void put(MmCpoItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int ITMAMOUNTBS = AttributesEnum.ItmAmountBs.index();
    public static final int ITMAMOUNTSP = AttributesEnum.ItmAmountSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int TRANITEMID = AttributesEnum.Tranitemid.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int TRANUOMCLASS = AttributesEnum.TranUomClass.index();
    public static final int TRANITMAMTSP = AttributesEnum.TranItmAmtSp.index();
    public static final int TRANITMAMTBS = AttributesEnum.TranItmAmtBs.index();
    public static final int MARKEDFORDELETE = AttributesEnum.MarkedForDelete.index();
    public static final int TRANITMDISC = AttributesEnum.TranItmDisc.index();
    public static final int TRANDISCTYPE = AttributesEnum.TranDiscType.index();
    public static final int NEWTAXAMT = AttributesEnum.NewTaxAmt.index();
    public static final int TRANITEMAMTSPWITHTAX = AttributesEnum.TranItemAmtSpWithTax.index();
    public static final int TRANITEMBSWITHTAX = AttributesEnum.TranItemBsWithTax.index();
    public static final int TRANPRICEQTY = AttributesEnum.TranPriceQty.index();
    public static final int TRANSITEMNAME = AttributesEnum.transItemName.index();
    public static final int TRANREAPPLYTAX = AttributesEnum.TranReapplyTax.index();
    public static final int TRANSTAXEXMPTFLG = AttributesEnum.TransTaxExmptFlg.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSITEMDESC = AttributesEnum.transItemDesc.index();
    public static final int ITMGRPDETAILTRANS = AttributesEnum.ItmGrpDetailTrans.index();
    public static final int ITMATTDTLTRANS = AttributesEnum.ItmAttDtlTrans.index();
    public static final int TRANSITMGRPID = AttributesEnum.TransItmGrpId.index();
    public static final int POORDVW = AttributesEnum.PoOrdVw.index();
    public static final int MMCPOTR = AttributesEnum.MmCpoTr.index();
    public static final int LOVITMIDFORADDVO1 = AttributesEnum.LovItmIdForaddVO1.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVDICTYPEVO1 = AttributesEnum.LovDictypeVO1.index();
    public static final int MMITMVWVO1 = AttributesEnum.MmitmVwVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmCpoItmVORowImpl() {
    }

    /**
     * Gets MmCpoItmEO entity object.
     * @return the MmCpoItmEO
     */
    public MmCpoItmEOImpl getMmCpoItmEO() {
        return (MmCpoItmEOImpl)getEntity(ENTITY_MMCPOITMEO);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ORD_QTY using the alias name OrdQty.
     * @return the ORD_QTY
     */
    public Number getOrdQty() {
        return (Number) getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ORD_QTY using the alias name OrdQty.
     * @param value value to set the ORD_QTY
     */
    public void setOrdQty(Number value) {
        if(value == null){
            value = new Number(0);
        }
        setAttributeInternal(ORDQTY, value.round(2));
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if(value == null){
            value = new Number(0);
        }
      setAttributeInternal(ITMPRICE, value.round(2));
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
       if(value == null){
           value = new Number(0);
       }
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for ITM_AMOUNT_BS using the alias name ItmAmountBs.
     * @return the ITM_AMOUNT_BS
     */
    public Number getItmAmountBs() {
        return (Number) getAttributeInternal(ITMAMOUNTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMOUNT_BS using the alias name ItmAmountBs.
     * @param value value to set the ITM_AMOUNT_BS
     */
    public void setItmAmountBs(Number value) {
        if(value == null){
            value = new Number(0);
        }
        setAttributeInternal(ITMAMOUNTBS, value.round(2));
    }

    /**
     * Gets the attribute value for ITM_AMOUNT_SP using the alias name ItmAmountSp.
     * @return the ITM_AMOUNT_SP
     */
    public Number getItmAmountSp() {
        return (Number) getAttributeInternal(ITMAMOUNTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMOUNT_SP using the alias name ItmAmountSp.
     * @param value value to set the ITM_AMOUNT_SP
     */
    public void setItmAmountSp(Number value) {
        if(value == null){
            value = new Number(0);
        }
        setAttributeInternal(ITMAMOUNTSP, value.round(2));
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Tranitemid.
     * @return the Tranitemid
     */
    public String getTranitemid() {
        return (String) getAttributeInternal(TRANITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Tranitemid.
     * @param value value to set the  Tranitemid
     */
    public void setTranitemid(String value) {
        setAttributeInternal(TRANITEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaxRuleFlg.
     * @return the TaxRuleFlg
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxRuleFlg.
     * @param value value to set the  TaxRuleFlg
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }


    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    public Object resolvElDC(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp =
               elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
           return valueExp.getValue(elContext);
       }
    /**
     * Gets the attribute value for the calculated attribute TranUomClass.
     * @return the TranUomClass
     */
    public Integer getTranUomClass() {
        MmCashPOAMImpl am = (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");

        String inputuom=null;
        Integer uomClass=null;
        try{
        inputuom=getItmUom();
        //x.getAttribute("TvouCoaId");
        }catch(NullPointerException npe){

        }
        if(inputuom!=null){
        Row[] xx=am.getLovUomId().getFilteredRows("UomId", inputuom);
        if(xx.length>0){
        uomClass = (Integer)xx[0].getAttribute("UomClass");
        }
        return uomClass;

        }else{
            return (Integer) getAttributeInternal(TRANUOMCLASS);
        }
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranUomClass.
     * @param value value to set the  TranUomClass
     */
    public void setTranUomClass(Integer value) {
        setAttributeInternal(TRANUOMCLASS, value);
    }

    /**
     * Gets the attribute value for TRAN_ITM_AMT_SP using the alias name TranItmAmtSp.
     * @return the TRAN_ITM_AMT_SP
     */
    public Number getTranItmAmtSp() {
        return (Number) getAttributeInternal(TRANITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_ITM_AMT_SP using the alias name TranItmAmtSp.
     * @param value value to set the TRAN_ITM_AMT_SP
     */
    public void setTranItmAmtSp(Number value) {
        
        //Number num = (Number)value.round(2);
        setAttributeInternal(TRANITMAMTSP, value);
    }

    /**
     * Gets the attribute value for TRAN_ITM_AMT_BS using the alias name TranItmAmtBs.
     * @return the TRAN_ITM_AMT_BS
     */
    public Number getTranItmAmtBs() {
        
        return (Number) getAttributeInternal(TRANITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_ITM_AMT_BS using the alias name TranItmAmtBs.
     * @param value value to set the TRAN_ITM_AMT_BS
     */
    public void setTranItmAmtBs(Number value) {
      
       // Number num = (Number)value;
        setAttributeInternal(TRANITMAMTBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MarkedForDelete.
     * @return the MarkedForDelete
     */
    public String getMarkedForDelete() {
        return (String) getAttributeInternal(MARKEDFORDELETE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MarkedForDelete.
     * @param value value to set the  MarkedForDelete
     */
    public void setMarkedForDelete(String value) {
        setAttributeInternal(MARKEDFORDELETE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranItmDisc.
     * @return the TranItmDisc
     */
    public Number getTranItmDisc() {
        return (Number) getAttributeInternal(TRANITMDISC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranItmDisc.
     * @param value value to set the  TranItmDisc
     */
    public void setTranItmDisc(Number value) {
        setAttributeInternal(TRANITMDISC, value.round(2));
    }

    /**
     * Gets the attribute value for the calculated attribute TranDiscType.
     * @return the TranDiscType
     */
    public String getTranDiscType() {
        return (String) getAttributeInternal(TRANDISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranDiscType.
     * @param value value to set the  TranDiscType
     */
    public void setTranDiscType(String value) {
        setAttributeInternal(TRANDISCTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute NewTaxAmt.
     * @return the NewTaxAmt
     */
    public Number getNewTaxAmt() {
        MmCashPOAMImpl am = (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");
        ViewObjectImpl v = am.getMmCpoTr1();
        RowQualifier qualf = new RowQualifier(v);   
        qualf.setWhereClause("SlocId = " + getSlocId() + " AND OrgId = '" + getOrgId() + "' and DocId = '"+ getDocId() + "' and ItmId = '"+ getItmId()+"' and ItmUom='"+getItmUom()+"'");
        Row [] rows =   v.getFilteredRows(qualf);
        Number n = new Number(0);
        if(rows.length > 0)
        {
        n =  (Number)rows[0].getAttribute("TaxAmt");
        return (Number)n.round(2);
        }else if(rows.length == 0){
        return (Number)n.round(2);
        }else{
            return (Number) getAttributeInternal(NEWTAXAMT);
        }
      
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewTaxAmt.
     * @param value value to set the  NewTaxAmt
     */
    public void setNewTaxAmt(Number value) {
        setAttributeInternal(NEWTAXAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranItemAmtSpWithTax.
     * @return the TranItemAmtSpWithTax
     */
    public Number getTranItemAmtSpWithTax() {
        return (Number) getAttributeInternal(TRANITEMAMTSPWITHTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranItemAmtSpWithTax.
     * @param value value to set the  TranItemAmtSpWithTax
     */
    public void setTranItemAmtSpWithTax(Number value) {
        setAttributeInternal(TRANITEMAMTSPWITHTAX, value.round(2));
    }

    /**
     * Gets the attribute value for the calculated attribute TranItemBsWithTax.
     * @return the TranItemBsWithTax
     */
    public Number getTranItemBsWithTax() {
        MmCashPOAMImpl am = (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");
        ViewObjectImpl v = am.getMmCpo1();
        RowQualifier qualf = new RowQualifier(v);   
        qualf.setWhereClause("SlocId = " + getSlocId() + " AND OrgId = '" + getOrgId() + "' and DocId = '"+ getDocId() + "'");
        Row [] rows =   v.getFilteredRows(qualf);
       Number num = (Number)rows[0].getAttribute("CurrConvFctr");
       Number TaxAmt = (Number)num.mul(getTranItemAmtSpWithTax());
        /* return (Number) getAttributeInternal(TRANITEMBSWITHTAX); */
       return (Number)TaxAmt.round(2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranItemBsWithTax.
     * @param value value to set the  TranItemBsWithTax
     */
    public void setTranItemBsWithTax(Number value) {
        setAttributeInternal(TRANITEMBSWITHTAX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranPriceQty.
     * @return the TranPriceQty
     */
    public Number getTranPriceQty() {
        Number num =new Number(0);
        if(getOrdQty()!=null)
          num = getItmPrice().multiply(getOrdQty()); 
        
        return (Number)num.round(2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranPriceQty.
     * @param value value to set the  TranPriceQty
     */
    public void setTranPriceQty(Number value) {
        setAttributeInternal(TRANPRICEQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transItemName.
     * @return the transItemName
     */
    public String gettransItemName() {
        String eoDesc=null;
           if(getItmId()!=null){
               MmCashPOAMImpl am=(MmCashPOAMImpl)this.getApplicationModule();
               ViewObjectImpl itmvo=am.getMmitmVwVO1();
               RowQualifier rq =new RowQualifier(itmvo);
               rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and OrgId='"+getOrgId()+"' and HoOrgId ='"+getTransHoOrgId()+"' and ItmId='"+getItmId()+"'");
               Row[] xx = itmvo.getFilteredRows(rq);
                      if(xx.length>0){
                         eoDesc= xx[0].getAttribute("ItmDesc").toString();
                      }
                      return eoDesc;
           }else{
                      return (String) getAttributeInternal(TRANSITEMNAME);
           }
      
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transItemName.
     * @param value value to set the  transItemName
     */
    public void settransItemName(String value) {
        
        RowSet rs = this.getLovItmIdForaddVO1();
       Row [] rws = rs.getFilteredRows("ItmDesc", value);
      String itm =  rws[0].getAttribute("ItmId").toString();
      String uom = rws[0].getAttribute("UomPur").toString();
      setItmId(itm);
      setItmUom(uom);
        setAttributeInternal(TRANSITEMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranReapplyTax.
     * @return the TranReapplyTax
     */
    public String getTranReapplyTax() {
        MmCashPOAMImpl am = (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");
        ViewObjectImpl cpo = am.getMmCpo1();
        Row currRow = cpo.getCurrentRow();
        String taxAfter = currRow.getAttribute("TaxAfterDiscFlg").toString();
        ViewObjectImpl v = am.getMmCpoTr2();
        RowQualifier qualf = new RowQualifier(v);   
        qualf.setWhereClause("SlocId = " + getSlocId() + " AND OrgId = '" + getOrgId() + "' and DocId = '"+ getDocId() + "' and ItmId = '"+ getItmId()+"' and ItmUom = '"+getItmUom()+"' ");
        Row [] rows =   v.getFilteredRows(qualf);
        Number taxableInTr = new Number(0);
        Number taxableinitm = new Number(0);
        if(taxAfter.equalsIgnoreCase("Y"))
        {
           taxableinitm = getTranItmAmtSp(); 
            }
        else if(taxAfter.equalsIgnoreCase("N"))
            {
              taxableinitm = getTranPriceQty();      
                    }
        if(rows.length > 0)
        {
          taxableInTr = (Number)rows[0].getAttribute("TaxableAmt");
         if(taxableinitm.compareTo(taxableInTr) != 0)
             return "Y";
         else
             return "N";
            }
        else
        
        return "N";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranReapplyTax.
     * @param value value to set the  TranReapplyTax
     */
    public void setTranReapplyTax(String value) {
        setAttributeInternal(TRANREAPPLYTAX, value);
    }
    public MmCashPOAMImpl getAm() {
        return (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");
    }
    /**
     * Gets the attribute value for the calculated attribute TransTaxExmptFlg.
     * @return the TransTaxExmptFlg
     */
    public String getTransTaxExmptFlg() {
        String itmId=getItmId();
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String orgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String hoOrgId=resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        ViewObjectImpl impl = getAm().getLovItmIdForadd1();
        RowQualifier rq=new RowQualifier(impl);
        rq.setWhereClause("ItmId='"+itmId+"' and CldId='"+cldId+"' and SlocId="+slocId+
            " and OrgId='"+orgId+"' and HoOrgId='"+hoOrgId+"'");
        Row[] r=impl.getFilteredRows(rq);
        String flg="N";
        if(r.length>0)
           flg = (String)r[0].getAttribute("TaxExmptFlg");
        return flg;
        //return (String) getAttributeInternal(TRANSTAXEXMPTFLG);
    }
    public String resolvEl(String data){
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message=valueExp.getValue(elContext).toString();
           return Message;
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxExmptFlg.
     * @param value value to set the  TransTaxExmptFlg
     */
    public void setTransTaxExmptFlg(String value) {
        setAttributeInternal(TRANSTAXEXMPTFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
      return  (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
       // return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transItemDesc.
     * @return the transItemDesc
     */
    public String gettransItemDesc() {
        return (String) getAttributeInternal(TRANSITEMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transItemDesc.
     * @param value value to set the  transItemDesc
     */
    public void settransItemDesc(String value) {
        setAttributeInternal(TRANSITEMDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmGrpDetailTrans.
     * @return the ItmGrpDetailTrans
     */
    public String getItmGrpDetailTrans() {
        if(getItmId()!=null && getTransItmGrpId()!=null){
            
        Object attdetail=callStoredFunction(Types.VARCHAR, "APP.GET_ITM_GRP_PATH(?,?,?,?)",new Object[] {getSlocId(), getCldId(), getTransHoOrgId(),getTransItmGrpId()});
        //    adfLog.info("function return "+attdetail+" grp and itm id is "+getItmGrpIdTrans()+" "+getItmId());
        if(attdetail!=null){
            return attdetail.toString();
        }else{
             return (String) getAttributeInternal(TRANSITMGRPID);
         }
        }
        
        return (String) getAttributeInternal(ITMGRPDETAILTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpDetailTrans.
     * @param value value to set the  ItmGrpDetailTrans
     */
    public void setItmGrpDetailTrans(String value) {
        setAttributeInternal(ITMGRPDETAILTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAttDtlTrans.
     * @return the ItmAttDtlTrans
     */
    public String getItmAttDtlTrans() {
        if (getItmId() != null) {

            Object attdetail =
                callStoredFunction(Types.VARCHAR, "APP.FN_GET_ITM_ATT(?,?,?,?,?,?)", new Object[] { getCldId(),getSlocId(),getTransHoOrgId(),getItmId(), "R","," });
            //adfLog.info("function return " + attdetail + " " + getItmId());
          
            if (attdetail != null) {
                return attdetail.toString();
            } else {
                return "None";
            }
        } 
        return "None";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAttDtlTrans.
     * @param value value to set the  ItmAttDtlTrans
     */
    public void setItmAttDtlTrans(String value) {
        setAttributeInternal(ITMATTDTLTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmGrpId.
     * @return the TransItmGrpId
     */
    public String getTransItmGrpId() {
      
        return (String) getAttributeInternal(TRANSITMGRPID);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getAm().getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmGrpId.
     * @param value value to set the  TransItmGrpId
     */
    public void setTransItmGrpId(String value) {
        setAttributeInternal(TRANSITMGRPID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PoOrdVw.
     */
    public RowIterator getPoOrdVw() {
        return (RowIterator)getAttributeInternal(POORDVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmCpoTr.
     */
    public RowIterator getMmCpoTr() {
        return (RowIterator)getAttributeInternal(MMCPOTR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdForaddVO1.
     */
    public RowSet getLovItmIdForaddVO1() {
        return (RowSet)getAttributeInternal(LOVITMIDFORADDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet)getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDictypeVO1.
     */
    public RowSet getLovDictypeVO1() {
        return (RowSet)getAttributeInternal(LOVDICTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmitmVwVO1.
     */
    public RowSet getMmitmVwVO1() {
        return (RowSet)getAttributeInternal(MMITMVWVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public void refreshLov(Integer uom)
    {
       RowSet rs = getLovUomIdVO1();
       rs.setNamedWhereClauseParam("BindUomClass", uom);
       rs.executeQuery();
        
        
        }
}
