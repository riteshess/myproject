package mmrmda.model.view;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmrmda.model.service.MMrmdaAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 15 14:13:38 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRmdaItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMRMDAITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((BigDecimal)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((BigDecimal)value);
            }
        }
        ,
        ItmId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        RejQty {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getRejQty();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setRejQty((BigDecimal)value);
            }
        }
        ,
        RejQtyBs {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getRejQtyBs();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setRejQtyBs((BigDecimal)value);
            }
        }
        ,
        SlocId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((BigDecimal)value);
            }
        }
        ,
        WhId {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        ItemIdTrans {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItemIdTrans();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setItemIdTrans((String)value);
            }
        }
        ,
        HoOrgTrans {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getHoOrgTrans();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setHoOrgTrans((String)value);
            }
        }
        ,
        UomVO1 {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getUomVO1();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmVO1 {
            public Object get(MmRmdaItmVORowImpl obj) {
                return obj.getItmVO1();
            }

            public void put(MmRmdaItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmRmdaItmVORowImpl object);

        public abstract void put(MmRmdaItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REJQTY = AttributesEnum.RejQty.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITEMIDTRANS = AttributesEnum.ItemIdTrans.index();
    public static final int HOORGTRANS = AttributesEnum.HoOrgTrans.index();
    public static final int UOMVO1 = AttributesEnum.UomVO1.index();
    public static final int ITMVO1 = AttributesEnum.ItmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRmdaItmVORowImpl() {
    }

    /**
     * Gets MmRmdaItmEO entity object.
     * @return the MmRmdaItmEO
     */
    public EntityImpl getMmRmdaItmEO() {
        return (EntityImpl)getEntity(ENTITY_MMRMDAITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public BigDecimal getItmAmtBs() {
        return (BigDecimal)getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(BigDecimal value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public BigDecimal getItmAmtSp() {
        return (BigDecimal)getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(BigDecimal value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {


        return (String)getAttributeInternal(ITMID);
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }


    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REJ_QTY using the alias name RejQty.
     * @return the REJ_QTY
     */
    public BigDecimal getRejQty() {
        return (BigDecimal)getAttributeInternal(REJQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY using the alias name RejQty.
     * @param value value to set the REJ_QTY
     */
    public void setRejQty(BigDecimal value) {
        setAttributeInternal(REJQTY, value);
    }

    /**
     * Gets the attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @return the REJ_QTY_BS
     */
    public BigDecimal getRejQtyBs() {
        return (BigDecimal)getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @param value value to set the REJ_QTY_BS
     */
    public void setRejQtyBs(BigDecimal value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public BigDecimal getUomConvFctr() {
        return (BigDecimal)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(BigDecimal value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIdTrans.
     * @return the ItemIdTrans
     */
    public String getItemIdTrans() {

        Object cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Object sloc_id = resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}");
    // Object ho_org_id =  resolvEl("#{pageFlowScope.GLBL_APP_HO_ORG_ID}").toString();


        MMrmdaAMImpl am = (MMrmdaAMImpl)this.getApplicationModule();
        ViewObjectImpl vo = (ViewObjectImpl)am.getItm1(); 
        
        // RowSet vo = getItmVO1();
        vo.setNamedWhereClauseParam("bindCldId", cld_id);
        vo.setNamedWhereClauseParam("bindSlocId", sloc_id);
        //vo.setNamedWhereClauseParam("bindHoOrgId", ho_org_id);
        vo.setNamedWhereClauseParam("bindItemId",getItmId() );
        vo.executeQuery();


        Row[] filteredRows = vo.getAllRowsInRange();
        if (filteredRows.length > 0) {
            String ItmId = filteredRows[0].getAttribute("ItmDesc").toString();
            System.out.println("filteredRows"+ItmId );
            return ItmId;
        } 
 

        return (String)getAttributeInternal(ITEMIDTRANS);
    }


    public Object resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIdTrans.
     * @param value value to set the  ItemIdTrans
     */
    public void setItemIdTrans(String value) {
        setAttributeInternal(ITEMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgTrans.
     * @return the HoOrgTrans
     */
    public String getHoOrgTrans() {
        
        String ho_org_id =  resolvEl("#{pageFlowScope.GLBL_APP_HO_ORG_ID}").toString();
        return ho_org_id;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgTrans.
     * @param value value to set the  HoOrgTrans
     */
    public void setHoOrgTrans(String value) {
        setAttributeInternal(HOORGTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UomVO1.
     */
    public RowSet getUomVO1() {
        return (RowSet)getAttributeInternal(UOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmVO1.
     */
    public RowSet getItmVO1() {
        return (RowSet)getAttributeInternal(ITMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
