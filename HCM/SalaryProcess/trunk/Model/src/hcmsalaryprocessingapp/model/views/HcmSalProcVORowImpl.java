package hcmsalaryprocessingapp.model.views;

import hcmsalaryprocessingapp.model.module.HcmSalaryProcessingAppAMImpl;

import hcmsalaryprocessingapp.model.module.common.HcmSalaryProcessingAppAM;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 16 15:26:07 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmSalProcVORowImpl extends ViewRowImpl
{


    public static final int ENTITY_HCMSALPROCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ProcFrmDt,
        ProcToDt,
        TotEarn,
        TotAllow,
        TotRem,
        TotExtTimeAmt,
        SalArrearAmt,
        TotGross,
        TotLoan,
        TotMisc,
        TotTax,
        TotalDed,
        TotSalAmt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EmpDocId,
        SalStatus,
        TransEmpNm,
        TransChkStatus,
        transDeptNm,
        transLocNm,
        transGrpNm,
        SalStatusVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PROCFRMDT = AttributesEnum.ProcFrmDt.index();
    public static final int PROCTODT = AttributesEnum.ProcToDt.index();
    public static final int TOTEARN = AttributesEnum.TotEarn.index();
    public static final int TOTALLOW = AttributesEnum.TotAllow.index();
    public static final int TOTREM = AttributesEnum.TotRem.index();
    public static final int TOTEXTTIMEAMT = AttributesEnum.TotExtTimeAmt.index();
    public static final int SALARREARAMT = AttributesEnum.SalArrearAmt.index();
    public static final int TOTGROSS = AttributesEnum.TotGross.index();
    public static final int TOTLOAN = AttributesEnum.TotLoan.index();
    public static final int TOTMISC = AttributesEnum.TotMisc.index();
    public static final int TOTTAX = AttributesEnum.TotTax.index();
    public static final int TOTALDED = AttributesEnum.TotalDed.index();
    public static final int TOTSALAMT = AttributesEnum.TotSalAmt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int SALSTATUS = AttributesEnum.SalStatus.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSCHKSTATUS = AttributesEnum.TransChkStatus.index();
    public static final int TRANSDEPTNM = AttributesEnum.transDeptNm.index();
    public static final int TRANSLOCNM = AttributesEnum.transLocNm.index();
    public static final int TRANSGRPNM = AttributesEnum.transGrpNm.index();
    public static final int SALSTATUSVO1 = AttributesEnum.SalStatusVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmSalProcVORowImpl() {
    }

    /**
     * Gets HcmSalProcEO entity object.
     * @return the HcmSalProcEO
     */
    public EntityImpl getHcmSalProcEO() {
        return (EntityImpl) getEntity(ENTITY_HCMSALPROCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PROC_FRM_DT using the alias name ProcFrmDt.
     * @return the PROC_FRM_DT
     */
    public Timestamp getProcFrmDt() {
        return (Timestamp) getAttributeInternal(PROCFRMDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_FRM_DT using the alias name ProcFrmDt.
     * @param value value to set the PROC_FRM_DT
     */
    public void setProcFrmDt(Timestamp value) {
        setAttributeInternal(PROCFRMDT, value);
    }

    /**
     * Gets the attribute value for PROC_TO_DT using the alias name ProcToDt.
     * @return the PROC_TO_DT
     */
    public Timestamp getProcToDt() {
        return (Timestamp) getAttributeInternal(PROCTODT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_TO_DT using the alias name ProcToDt.
     * @param value value to set the PROC_TO_DT
     */
    public void setProcToDt(Timestamp value) {
        setAttributeInternal(PROCTODT, value);
    }

    /**
     * Gets the attribute value for TOT_EARN using the alias name TotEarn.
     * @return the TOT_EARN
     */
    public BigDecimal getTotEarn() {
        return (BigDecimal) getAttributeInternal(TOTEARN);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_EARN using the alias name TotEarn.
     * @param value value to set the TOT_EARN
     */
    public void setTotEarn(BigDecimal value) {
        setAttributeInternal(TOTEARN, value);
    }

    /**
     * Gets the attribute value for TOT_ALLOW using the alias name TotAllow.
     * @return the TOT_ALLOW
     */
    public BigDecimal getTotAllow() {
        return (BigDecimal) getAttributeInternal(TOTALLOW);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_ALLOW using the alias name TotAllow.
     * @param value value to set the TOT_ALLOW
     */
    public void setTotAllow(BigDecimal value) {
        setAttributeInternal(TOTALLOW, value);
    }

    /**
     * Gets the attribute value for TOT_REM using the alias name TotRem.
     * @return the TOT_REM
     */
    public BigDecimal getTotRem() {
        return (BigDecimal) getAttributeInternal(TOTREM);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_REM using the alias name TotRem.
     * @param value value to set the TOT_REM
     */
    public void setTotRem(BigDecimal value) {
        setAttributeInternal(TOTREM, value);
    }

    /**
     * Gets the attribute value for TOT_EXT_TIME_AMT using the alias name TotExtTimeAmt.
     * @return the TOT_EXT_TIME_AMT
     */
    public BigDecimal getTotExtTimeAmt() {
        return (BigDecimal) getAttributeInternal(TOTEXTTIMEAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_EXT_TIME_AMT using the alias name TotExtTimeAmt.
     * @param value value to set the TOT_EXT_TIME_AMT
     */
    public void setTotExtTimeAmt(BigDecimal value) {
        setAttributeInternal(TOTEXTTIMEAMT, value);
    }

    /**
     * Gets the attribute value for SAL_ARREAR_AMT using the alias name SalArrearAmt.
     * @return the SAL_ARREAR_AMT
     */
    public BigDecimal getSalArrearAmt() {
        return (BigDecimal) getAttributeInternal(SALARREARAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for SAL_ARREAR_AMT using the alias name SalArrearAmt.
     * @param value value to set the SAL_ARREAR_AMT
     */
    public void setSalArrearAmt(BigDecimal value) {
        setAttributeInternal(SALARREARAMT, value);
    }

    /**
     * Gets the attribute value for TOT_GROSS using the alias name TotGross.
     * @return the TOT_GROSS
     */
    public BigDecimal getTotGross() {
        return (BigDecimal) getAttributeInternal(TOTGROSS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_GROSS using the alias name TotGross.
     * @param value value to set the TOT_GROSS
     */
    public void setTotGross(BigDecimal value) {
        setAttributeInternal(TOTGROSS, value);
    }

    /**
     * Gets the attribute value for TOT_LOAN using the alias name TotLoan.
     * @return the TOT_LOAN
     */
    public BigDecimal getTotLoan() {
        return (BigDecimal) getAttributeInternal(TOTLOAN);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_LOAN using the alias name TotLoan.
     * @param value value to set the TOT_LOAN
     */
    public void setTotLoan(BigDecimal value) {
        setAttributeInternal(TOTLOAN, value);
    }

    /**
     * Gets the attribute value for TOT_MISC using the alias name TotMisc.
     * @return the TOT_MISC
     */
    public BigDecimal getTotMisc() {
        return (BigDecimal) getAttributeInternal(TOTMISC);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_MISC using the alias name TotMisc.
     * @param value value to set the TOT_MISC
     */
    public void setTotMisc(BigDecimal value) {
        setAttributeInternal(TOTMISC, value);
    }

    /**
     * Gets the attribute value for TOT_TAX using the alias name TotTax.
     * @return the TOT_TAX
     */
    public BigDecimal getTotTax() {
        return (BigDecimal) getAttributeInternal(TOTTAX);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_TAX using the alias name TotTax.
     * @param value value to set the TOT_TAX
     */
    public void setTotTax(BigDecimal value) {
        setAttributeInternal(TOTTAX, value);
    }

    /**
     * Gets the attribute value for TOTAL_DED using the alias name TotalDed.
     * @return the TOTAL_DED
     */
    public BigDecimal getTotalDed() {
        return (BigDecimal) getAttributeInternal(TOTALDED);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_DED using the alias name TotalDed.
     * @param value value to set the TOTAL_DED
     */
    public void setTotalDed(BigDecimal value) {
        setAttributeInternal(TOTALDED, value);
    }

    /**
     * Gets the attribute value for TOT_SAL_AMT using the alias name TotSalAmt.
     * @return the TOT_SAL_AMT
     */
    public BigDecimal getTotSalAmt() {
        return (BigDecimal) getAttributeInternal(TOTSALAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_SAL_AMT using the alias name TotSalAmt.
     * @param value value to set the TOT_SAL_AMT
     */
    public void setTotSalAmt(BigDecimal value) {
        setAttributeInternal(TOTSALAMT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Long getUsrIdCreate() {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Long value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Long getUsrIdMod() {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Long value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @return the EMP_DOC_ID
     */
    public String getEmpDocId() {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @param value value to set the EMP_DOC_ID
     */
    public void setEmpDocId(String value) {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for SAL_STATUS using the alias name SalStatus.
     * @return the SAL_STATUS
     */
    public Integer getSalStatus() {
        return (Integer) getAttributeInternal(SALSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SAL_STATUS using the alias name SalStatus.
     * @param value value to set the SAL_STATUS
     */
    public void setSalStatus(Integer value) {
        setAttributeInternal(SALSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        String nm = null;
        if (getEmpDocId() != null && getEmpDocId().toString().length() > 0) {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            System.out.println("emp doc id in getter---" + getEmpDocId());
            Row[] filteredRows = am.getEmp3().getFilteredRows("DocId", getEmpDocId());
            System.out.println("emp get lenght---" + filteredRows.length);
            if (filteredRows.length > 0) {
                nm = filteredRows[0].getAttribute("EmpNm").toString();
                System.out.println("emp name is--" + nm);
                return nm;
            }
        }
        return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkStatus.
     * @return the TransChkStatus
     */
    public String getTransChkStatus() {
        if (getSalStatus() != null) {
            Integer childStatus = getSalStatus();
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getHcmSalProcTxn1().getFilteredRows("DocId", getDocId());
            if (filteredRows.length > 0 && filteredRows[0].getAttribute("SalStatus") != null) {
                String txnStatus = filteredRows[0].getAttribute("SalStatus").toString();
                if (txnStatus.equalsIgnoreCase("A")) {
                    // System.out.println("for selected row status is approved");
                    return "Y";
                }
                //System.out.println("for selected row status is not approved");
                return "N";
            }
            return "N";
        }
        return (String) getAttributeInternal(TRANSCHKSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkStatus.
     * @param value value to set the  TransChkStatus
     */
    public void setTransChkStatus(String value) {
        setAttributeInternal(TRANSCHKSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transDeptNm.
     * @return the transDeptNm
     */
    public String gettransDeptNm()
    {
        String deptId = "";
        String deptNm = "";
        if (getEmpDocId() != null && getEmpDocId().toString().length() > 0)
        {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getEmp3().getFilteredRows("DocId", getEmpDocId());
            if (filteredRows.length > 0) 
            {
                deptId = filteredRows[0].getAttribute("EmpDeptId").toString();
                ViewObjectImpl vo = am.getLovDepartment1();
                vo.setNamedWhereClauseParam("BindOrgId", getOrgId());
                vo.executeQuery();
                Row[] r = vo.getFilteredRows("DeptId",deptId);
                if(r.length>0)
                {
                  deptNm=(String) r[0].getAttribute("DeptNm");
                }   
                return deptNm;
            }
        }
        return (String) getAttributeInternal(TRANSDEPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDeptNm.
     * @param value value to set the  transDeptNm
     */
    public void settransDeptNm(String value)
    {
        setAttributeInternal(TRANSDEPTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transLocNm.
     * @return the transLocNm
     */
    public String gettransLocNm()
    {
        String locId = "";
        String locNm = "";
        if (getEmpDocId() != null && getEmpDocId().toString().length() > 0)
        {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getEmp3().getFilteredRows("DocId", getEmpDocId());
            if (filteredRows.length > 0) 
            {
                locId = filteredRows[0].getAttribute("EmpLocId").toString();
                ViewObjectImpl vo = am.getLovLocations1();
                vo.setNamedWhereClauseParam("BindOrgId", getOrgId());
                vo.executeQuery();
                Row[] r = vo.getFilteredRows("ParamId",locId);
                if(r.length>0)
                {
                  locNm=(String) r[0].getAttribute("ParamDesc");
                }   
                return locNm;
            }
        }
        return (String) getAttributeInternal(TRANSLOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transLocNm.
     * @param value value to set the  transLocNm
     */
    public void settransLocNm(String value)
    {
        setAttributeInternal(TRANSLOCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transGrpNm.
     * @return the transGrpNm
     */
    public String gettransGrpNm()
    {
        String grpId = "";
        String grpNm = "";
        if (getEmpDocId() != null && getEmpDocId().toString().length() > 0)
        {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getEmp3().getFilteredRows("DocId", getEmpDocId());
            if (filteredRows.length > 0) 
            {
                grpId = filteredRows[0].getAttribute("EmpGrpId").toString();
                ViewObjectImpl vo = am.getLovEmpGroup1();
                vo.setNamedWhereClauseParam("BindOrgId", getOrgId());
                vo.executeQuery();
                Row[] r = vo.getFilteredRows("ParamId",grpId);
                if(r.length>0)
                {
                  grpNm=(String) r[0].getAttribute("ParamDesc");
                }   
                return grpNm;
            }
        }
        return (String) getAttributeInternal(TRANSGRPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transGrpNm.
     * @param value value to set the  transGrpNm
     */
    public void settransGrpNm(String value)
    {
        setAttributeInternal(TRANSGRPNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SalStatusVO1.
     */
    public RowSet getSalStatusVO1() {
        return (RowSet) getAttributeInternal(SALSTATUSVO1);
    }
}

