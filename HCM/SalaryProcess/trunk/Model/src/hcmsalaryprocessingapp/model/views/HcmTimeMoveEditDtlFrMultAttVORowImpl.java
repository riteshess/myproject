package hcmsalaryprocessingapp.model.views;

import hcmsalaryprocessingapp.model.entities.HcmTimeMoveEditDtlFrMultiAttEOImpl;
import hcmsalaryprocessingapp.model.module.HcmSalaryProcessingAppAMImpl;

import java.math.BigDecimal;

import java.sql.SQLException;
import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 17 16:48:00 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmTimeMoveEditDtlFrMultAttVORowImpl extends ViewRowImpl {


    public static final int ENTITY_HCMTIMEMOVEEDITDTLFRMULTIATT = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        EmpDocId,
        HoOrgId,
        OrgId,
        SlocId,
        CldId,
        AttenDt,
        DedCh,
        EmpId,
        ExtraTimeHr,
        HlfdayLeaveChk,
        InTime,
        LeaveId,
        OutTime,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WkOffChk,
        EmpDeptId,
        EmpLocId,
        EmpGrpId,
        QtrLeaveChk,
        transEmpNm,
        TransInTime,
        TransoutTime,
        transIsMultpleAtt,
        TransFromDate,
        TransToDate,
        TransCriteria,
        LovEmpNameFrmEmpDocIdVO,
        LovLeaveVO1,
        LwpTypeVo1,
        LovLeaveWithAbsentVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ATTENDT = AttributesEnum.AttenDt.index();
    public static final int DEDCH = AttributesEnum.DedCh.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int EXTRATIMEHR = AttributesEnum.ExtraTimeHr.index();
    public static final int HLFDAYLEAVECHK = AttributesEnum.HlfdayLeaveChk.index();
    public static final int INTIME = AttributesEnum.InTime.index();
    public static final int LEAVEID = AttributesEnum.LeaveId.index();
    public static final int OUTTIME = AttributesEnum.OutTime.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WKOFFCHK = AttributesEnum.WkOffChk.index();
    public static final int EMPDEPTID = AttributesEnum.EmpDeptId.index();
    public static final int EMPLOCID = AttributesEnum.EmpLocId.index();
    public static final int EMPGRPID = AttributesEnum.EmpGrpId.index();
    public static final int QTRLEAVECHK = AttributesEnum.QtrLeaveChk.index();
    public static final int TRANSEMPNM = AttributesEnum.transEmpNm.index();
    public static final int TRANSINTIME = AttributesEnum.TransInTime.index();
    public static final int TRANSOUTTIME = AttributesEnum.TransoutTime.index();
    public static final int TRANSISMULTPLEATT = AttributesEnum.transIsMultpleAtt.index();
    public static final int TRANSFROMDATE = AttributesEnum.TransFromDate.index();
    public static final int TRANSTODATE = AttributesEnum.TransToDate.index();
    public static final int TRANSCRITERIA = AttributesEnum.TransCriteria.index();
    public static final int LOVEMPNAMEFRMEMPDOCIDVO = AttributesEnum.LovEmpNameFrmEmpDocIdVO.index();
    public static final int LOVLEAVEVO1 = AttributesEnum.LovLeaveVO1.index();
    public static final int LWPTYPEVO1 = AttributesEnum.LwpTypeVo1.index();
    public static final int LOVLEAVEWITHABSENTVO1 = AttributesEnum.LovLeaveWithAbsentVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmTimeMoveEditDtlFrMultAttVORowImpl()
    {
    }

    /**
     * Gets HcmTimeMoveEditDtlFrMultiAtt entity object.
     * @return the HcmTimeMoveEditDtlFrMultiAtt
     */
    public HcmTimeMoveEditDtlFrMultiAttEOImpl getHcmTimeMoveEditDtlFrMultiAtt()
    {
        return (HcmTimeMoveEditDtlFrMultiAttEOImpl) getEntity(ENTITY_HCMTIMEMOVEEDITDTLFRMULTIATT);
    }

    /**
     * Gets the attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @return the EMP_DOC_ID
     */
    public String getEmpDocId()
    {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @param value value to set the EMP_DOC_ID
     */
    public void setEmpDocId(String value)
    {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for ATTEN_DT using the alias name AttenDt.
     * @return the ATTEN_DT
     */
    public Timestamp getAttenDt()
    {
        return (Timestamp) getAttributeInternal(ATTENDT);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTEN_DT using the alias name AttenDt.
     * @param value value to set the ATTEN_DT
     */
    public void setAttenDt(Timestamp value)
    {
        setAttributeInternal(ATTENDT, value);
    }

    /**
     * Gets the attribute value for DED_CH using the alias name DedCh.
     * @return the DED_CH
     */
    public String getDedCh()
    {
        return (String) getAttributeInternal(DEDCH);
    }

    /**
     * Sets <code>value</code> as attribute value for DED_CH using the alias name DedCh.
     * @param value value to set the DED_CH
     */
    public void setDedCh(String value)
    {
        setAttributeInternal(DEDCH, value);
    }

    /**
     * Gets the attribute value for EMP_ID using the alias name EmpId.
     * @return the EMP_ID
     */
    public String getEmpId()
    {
        return (String) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_ID using the alias name EmpId.
     * @param value value to set the EMP_ID
     */
    public void setEmpId(String value)
    {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for EXTRA_TIME_HR using the alias name ExtraTimeHr.
     * @return the EXTRA_TIME_HR
     */
    public oracle.jbo.domain.Number getExtraTimeHr()
    {
        return (oracle.jbo.domain.Number) getAttributeInternal(EXTRATIMEHR);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTRA_TIME_HR using the alias name ExtraTimeHr.
     * @param value value to set the EXTRA_TIME_HR
     */
    public void setExtraTimeHr(oracle.jbo.domain.Number value)
    {
        setAttributeInternal(EXTRATIMEHR, value);
    }

    /**
     * Gets the attribute value for HLFDAY_LEAVE_CHK using the alias name HlfdayLeaveChk.
     * @return the HLFDAY_LEAVE_CHK
     */
    public String getHlfdayLeaveChk()
    {
        return (String) getAttributeInternal(HLFDAYLEAVECHK);
    }

    /**
     * Sets <code>value</code> as attribute value for HLFDAY_LEAVE_CHK using the alias name HlfdayLeaveChk.
     * @param value value to set the HLFDAY_LEAVE_CHK
     */
    public void setHlfdayLeaveChk(String value)
    {
        setAttributeInternal(HLFDAYLEAVECHK, value);
    }

    /**
     * Gets the attribute value for IN_TIME using the alias name InTime.
     * @return the IN_TIME
     */
    public Timestamp getInTime()
    {
        return (Timestamp) getAttributeInternal(INTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for IN_TIME using the alias name InTime.
     * @param value value to set the IN_TIME
     */
    public void setInTime(Timestamp value)
    {
        setAttributeInternal(INTIME, value);
    }

    /**
     * Gets the attribute value for LEAVE_ID using the alias name LeaveId.
     * @return the LEAVE_ID
     */
    public String getLeaveId()
    {
        return (String) getAttributeInternal(LEAVEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ID using the alias name LeaveId.
     * @param value value to set the LEAVE_ID
     */
    public void setLeaveId(String value)
    {
        setAttributeInternal(LEAVEID, value);
    }

    /**
     * Gets the attribute value for OUT_TIME using the alias name OutTime.
     * @return the OUT_TIME
     */
    public Timestamp getOutTime()
    {
        return (Timestamp) getAttributeInternal(OUTTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for OUT_TIME using the alias name OutTime.
     * @param value value to set the OUT_TIME
     */
    public void setOutTime(Timestamp value)
    {
        setAttributeInternal(OUTTIME, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WK_OFF_CHK using the alias name WkOffChk.
     * @return the WK_OFF_CHK
     */
    public String getWkOffChk()
    {
        return (String) getAttributeInternal(WKOFFCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for WK_OFF_CHK using the alias name WkOffChk.
     * @param value value to set the WK_OFF_CHK
     */
    public void setWkOffChk(String value)
    {
        setAttributeInternal(WKOFFCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpNm.
     * @return the transEmpNm
     */
    public String gettransEmpNm()
    {
        HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl)this.getApplicationModule();
        String empNM="";
        ViewObjectImpl vo = am.getLovAllEmpNm();
        Row[] r = vo.getFilteredRows("DocId",this.getEmpDocId());
        if(r.length>0)
        {
          empNM=(String) r[0].getAttribute("EmpNm");
        }   
        System.out.println("employee name="+empNM+" and emp docid = "+this.getEmpDocId());
        return empNM;
           
       //return (String) getAttributeInternal(TRANSEMPNM);
   
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpNm.
     * @param value value to set the  transEmpNm
     */
    public void settransEmpNm(String value)
    {
        setAttributeInternal(TRANSEMPNM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransInTime.
     * @return the TransInTime
     */
//    public String getTransInTime()
//    {
//        
//        return (String) getAttributeInternal(TRANSINTIME);
//    }
    
    public String getTransInTime() 
    {
        if (getAttributeInternal(TRANSINTIME) != null) {
            System.out.println("trans internal not null");
            return (String) getAttributeInternal(TRANSINTIME);

        } else {
            System.out.println("inside trans in time getter in else");
            if (getInTime() != null && ((getInTime().toString().length()) > 0)) {

                String inTime = null;
                Date dt = null;
                try {
                    dt = new Date(getInTime().dateValue());
                } catch (SQLException e) {
                }
                inTime = dt.toString();

                inTime = inTime.substring(11, 16);
                System.out.println("get in time not null in getter");
                System.out.println("in time is--" + inTime);
                return inTime;
            }
        }

        return (String) getAttributeInternal(TRANSINTIME);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInTime.
     * @param value value to set the  TransInTime
     */
    public void setTransInTime(String value)
    {
        setAttributeInternal(TRANSINTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransoutTime.
     * @return the TransoutTime
     */
    public String getTransoutTime() {
        if (getAttributeInternal(TRANSOUTTIME) != null) {
            return (String) getAttributeInternal(TRANSOUTTIME);
        } else {
            if (getOutTime() != null && ((getOutTime().toString().length()) > 0)) {
                String outTime = null;
                Date dt = null;
                try {
                    dt = new Date(getOutTime().dateValue());
                } catch (SQLException e) {
                }
                outTime = dt.toString();

                outTime = outTime.substring(11, 16);
                System.out.println("OutTime is--" + outTime);
                return outTime;
            }
        }
        return (String) getAttributeInternal(TRANSOUTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransoutTime.
     * @param value value to set the  TransoutTime
     */
    public void setTransoutTime(String value)
    {
        setAttributeInternal(TRANSOUTTIME, value);
    }

    /**
     * Gets the attribute value for EMP_DEPT_ID using the alias name EmpDeptId.
     * @return the EMP_DEPT_ID
     */
    public String getEmpDeptId()
    {
        return (String) getAttributeInternal(EMPDEPTID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DEPT_ID using the alias name EmpDeptId.
     * @param value value to set the EMP_DEPT_ID
     */
    public void setEmpDeptId(String value)
    {
        setAttributeInternal(EMPDEPTID, value);
    }

    /**
     * Gets the attribute value for EMP_LOC_ID using the alias name EmpLocId.
     * @return the EMP_LOC_ID
     */
    public String getEmpLocId()
    {
        return (String) getAttributeInternal(EMPLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_LOC_ID using the alias name EmpLocId.
     * @param value value to set the EMP_LOC_ID
     */
    public void setEmpLocId(String value)
    {
        setAttributeInternal(EMPLOCID, value);
    }

    /**
     * Gets the attribute value for EMP_GRP_ID using the alias name EmpGrpId.
     * @return the EMP_GRP_ID
     */
    public String getEmpGrpId()
    {
        return (String) getAttributeInternal(EMPGRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_GRP_ID using the alias name EmpGrpId.
     * @param value value to set the EMP_GRP_ID
     */
    public void setEmpGrpId(String value)
    {
        setAttributeInternal(EMPGRPID, value);
    }


    /**
     * Gets the attribute value for QTR_LEAVE_CHK using the alias name QtrLeaveChk.
     * @return the QTR_LEAVE_CHK
     */
    public String getQtrLeaveChk() {
        return (String) getAttributeInternal(QTRLEAVECHK);
    }

    /**
     * Sets <code>value</code> as attribute value for QTR_LEAVE_CHK using the alias name QtrLeaveChk.
     * @param value value to set the QTR_LEAVE_CHK
     */
    public void setQtrLeaveChk(String value) {
        setAttributeInternal(QTRLEAVECHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsMultpleAtt.
     * @return the transIsMultpleAtt
     */
    public String gettransIsMultpleAtt()
    {
        return (String) getAttributeInternal(TRANSISMULTPLEATT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsMultpleAtt.
     * @param value value to set the  transIsMultpleAtt
     */
    public void settransIsMultpleAtt(String value)
    {
        setAttributeInternal(TRANSISMULTPLEATT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFromDate.
     * @return the TransFromDate
     */
    public Timestamp getTransFromDate()
    {
        return (Timestamp) getAttributeInternal(TRANSFROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFromDate.
     * @param value value to set the  TransFromDate
     */
    public void setTransFromDate(Timestamp value)
    {
        setAttributeInternal(TRANSFROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransToDate.
     * @return the TransToDate
     */
    public Timestamp getTransToDate()
    {
        return (Timestamp) getAttributeInternal(TRANSTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransToDate.
     * @param value value to set the  TransToDate
     */
    public void setTransToDate(Timestamp value)
    {
        setAttributeInternal(TRANSTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCriteria.
     * @return the TransCriteria
     */
    public Integer getTransCriteria()
    {
        HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
        return (Integer) am.getDummy1().getCurrentRow().getAttribute("Critaria");
        //return (Integer) getAttributeInternal(TRANSCRITERIA);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovEmpNameFrmEmpDocIdVO.
     */
    public RowSet getLovEmpNameFrmEmpDocIdVO()
    {   
          HcmSalaryProcessingAppAMImpl am =  (HcmSalaryProcessingAppAMImpl)this.getApplicationModule();
        String cld = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        Integer sloc = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String hoOrg = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        String org = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();

        System.out.println("inside filter emp");
        ViewObjectImpl dummy1 = am.getDummy1();
        Row currentRow = dummy1.getCurrentRow();

        ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindOrgId", org);
         ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindCldId", cld);
         ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindSlocId", sloc);
         ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindHoOrgId", hoOrg);

        if (currentRow.getAttribute("Critaria").equals(51))
        {
            System.out.println("inside loc wise filter-" + dummy1.getCurrentRow().getAttribute("CritariaValueId"));
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindLocId", dummy1.getCurrentRow().getAttribute("CritariaValueId"));
        }
        else
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindLocId", null);
        if (currentRow.getAttribute("Critaria").equals(52))
        {
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindDeptId", dummy1.getCurrentRow().getAttribute("CritariaValueId"));
        }
        else
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindDeptId", null);
        if (currentRow.getAttribute("Critaria").equals(53))
        {
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindGrpId", dummy1.getCurrentRow().getAttribute("CritariaValueId"));
        }
        else
             ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).setNamedWhereClauseParam("BindGrpId", null);

        //((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).executeQuery();
        System.out.println("aft filter row count- " + ((RowSet)getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO)).getEstimatedRowCount()); 
        return (RowSet) getAttributeInternal(LOVEMPNAMEFRMEMPDOCIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLeaveVO1.
     */
    public RowSet getLovLeaveVO1()
    {
        return (RowSet) getAttributeInternal(LOVLEAVEVO1);
    }
    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
    

    /**
     * Gets the view accessor <code>RowSet</code> LwpTypeVo1.
     */
    public RowSet getLwpTypeVo1()
    {
        return (RowSet) getAttributeInternal(LWPTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLeaveWithAbsentVO1.
     */
    public RowSet getLovLeaveWithAbsentVO1()
    {
        return (RowSet) getAttributeInternal(LOVLEAVEWITHABSENTVO1);
    }
}

