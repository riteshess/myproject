package hcmsalaryprocessingapp.model.views;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 26 11:53:11 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllLeaveNmVOImpl extends ViewObjectImpl
{
    /**
     * This is the default constructor (do not remove).
     */
    public AllLeaveNmVOImpl()
    {
    }

    /**
     * Returns the bind variable value for BINDCLD_ID.
     * @return bind variable value for BINDCLD_ID
     */
    public String getBINDCLD_ID()
    {
        return (String) getNamedWhereClauseParam("BINDCLD_ID");
    }

    /**
     * Sets <code>value</code> for bind variable BINDCLD_ID.
     * @param value value to bind as BINDCLD_ID
     */
    public void setBINDCLD_ID(String value)
    {
        setNamedWhereClauseParam("BINDCLD_ID", value);
    }

    /**
     * Returns the bind variable value for BINDSLOC_ID.
     * @return bind variable value for BINDSLOC_ID
     */
    public Integer getBINDSLOC_ID()
    {
        return (Integer) getNamedWhereClauseParam("BINDSLOC_ID");
    }

    /**
     * Sets <code>value</code> for bind variable BINDSLOC_ID.
     * @param value value to bind as BINDSLOC_ID
     */
    public void setBINDSLOC_ID(Integer value)
    {
        setNamedWhereClauseParam("BINDSLOC_ID", value);
    }

    /**
     * Returns the bind variable value for BINDHO_ORG_ID.
     * @return bind variable value for BINDHO_ORG_ID
     */
    public String getBINDHO_ORG_ID()
    {
        return (String) getNamedWhereClauseParam("BINDHO_ORG_ID");
    }

    /**
     * Sets <code>value</code> for bind variable BINDHO_ORG_ID.
     * @param value value to bind as BINDHO_ORG_ID
     */
    public void setBINDHO_ORG_ID(String value)
    {
        setNamedWhereClauseParam("BINDHO_ORG_ID", value);
    }

    /**
     * Returns the bind variable value for BINDORG_ID.
     * @return bind variable value for BINDORG_ID
     */
    public String getBINDORG_ID()
    {
        return (String) getNamedWhereClauseParam("BINDORG_ID");
    }

    /**
     * Sets <code>value</code> for bind variable BINDORG_ID.
     * @param value value to bind as BINDORG_ID
     */
    public void setBINDORG_ID(String value)
    {
        setNamedWhereClauseParam("BINDORG_ID", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams)
    {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc)
    {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet)
    {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet)
    {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap)
    {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
}

