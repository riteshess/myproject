package hcmsalaryprocessingapp.model.views;

import hcmsalaryprocessingapp.model.module.HcmSalaryProcessingAppAMImpl;

import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 16 12:04:36 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmSalProcTxnVORowImpl extends ViewRowImpl {


    public static final int ENTITY_HCMSALPROCTXNEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ProcFrmDt,
        ProcToDt,
        SalStatus,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ProcCrt,
        ProcCrtVal,
        TransEmpNm,
        TransCriteria,
        TransCriteriaValue,
        HcmSalProc,
        SalStatusVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PROCFRMDT = AttributesEnum.ProcFrmDt.index();
    public static final int PROCTODT = AttributesEnum.ProcToDt.index();
    public static final int SALSTATUS = AttributesEnum.SalStatus.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int PROCCRT = AttributesEnum.ProcCrt.index();
    public static final int PROCCRTVAL = AttributesEnum.ProcCrtVal.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSCRITERIA = AttributesEnum.TransCriteria.index();
    public static final int TRANSCRITERIAVALUE = AttributesEnum.TransCriteriaValue.index();
    public static final int HCMSALPROC = AttributesEnum.HcmSalProc.index();
    public static final int SALSTATUSVO1 = AttributesEnum.SalStatusVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmSalProcTxnVORowImpl() {
    }

    /**
     * Gets HcmSalProcTxnEO entity object.
     * @return the HcmSalProcTxnEO
     */
    public EntityImpl getHcmSalProcTxnEO() {
        return (EntityImpl) getEntity(ENTITY_HCMSALPROCTXNEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PROC_FRM_DT using the alias name ProcFrmDt.
     * @return the PROC_FRM_DT
     */
    public Timestamp getProcFrmDt() {
        return (Timestamp) getAttributeInternal(PROCFRMDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_FRM_DT using the alias name ProcFrmDt.
     * @param value value to set the PROC_FRM_DT
     */
    public void setProcFrmDt(Timestamp value) {
        setAttributeInternal(PROCFRMDT, value);
    }

    /**
     * Gets the attribute value for PROC_TO_DT using the alias name ProcToDt.
     * @return the PROC_TO_DT
     */
    public Timestamp getProcToDt() {
        return (Timestamp) getAttributeInternal(PROCTODT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_TO_DT using the alias name ProcToDt.
     * @param value value to set the PROC_TO_DT
     */
    public void setProcToDt(Timestamp value) {
        setAttributeInternal(PROCTODT, value);
    }

    /**
     * Gets the attribute value for SAL_STATUS using the alias name SalStatus.
     * @return the SAL_STATUS
     */
    public String getSalStatus() {
        return (String) getAttributeInternal(SALSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for SAL_STATUS using the alias name SalStatus.
     * @param value value to set the SAL_STATUS
     */
    public void setSalStatus(String value) {
        setAttributeInternal(SALSTATUS, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Long getUsrIdCreate() {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Long value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Long getUsrIdMod() {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Long value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for PROC_CRT using the alias name ProcCrt.
     * @return the PROC_CRT
     */
    public Integer getProcCrt() {
        return (Integer) getAttributeInternal(PROCCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_CRT using the alias name ProcCrt.
     * @param value value to set the PROC_CRT
     */
    public void setProcCrt(Integer value) {
        setAttributeInternal(PROCCRT, value);
    }

    /**
     * Gets the attribute value for PROC_CRT_VAL using the alias name ProcCrtVal.
     * @return the PROC_CRT_VAL
     */
    public String getProcCrtVal() {
        return (String) getAttributeInternal(PROCCRTVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for PROC_CRT_VAL using the alias name ProcCrtVal.
     * @param value value to set the PROC_CRT_VAL
     */
    public void setProcCrtVal(String value) {
        setAttributeInternal(PROCCRTVAL, value);
    }

    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        /*String nm = null;
        if (getDocId() != null && getDocId().toString().length() > 0) {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getEmp3().getFilteredRows("DocId", getDocId());
            System.out.println("emp get lenght---" + filteredRows.length);
            if (filteredRows.length > 0) {
                nm = filteredRows[0].getAttribute("EmpNm").toString();
                System.out.println("emp name is--" + nm);
                return nm;
            }
        }*/
        return (String) getAttributeInternal(TRANSEMPNM);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCriteria.
     * @return the TransCriteria
     */
    public String getTransCriteria() {
        if (getProcCrt() != null && getProcCrt().toString().length() > 0) {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getLovCritaira1().getFilteredRows("AttId", getProcCrt());
            if (filteredRows.length > 0) {
                System.out.println("length at get crt--" + filteredRows.length);
                String crtNm = filteredRows[0].getAttribute("AttNm").toString();
                System.out.println("crt name at geter---" + crtNm);
                return crtNm;
            }
        }
        return (String) getAttributeInternal(TRANSCRITERIA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCriteria.
     * @param value value to set the  TransCriteria
     */
    public void setTransCriteria(String value) {
        setAttributeInternal(TRANSCRITERIA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCriteriaValue.
     * @return the TransCriteriaValue
     */
    public String getTransCriteriaValue() {
        /* if (getProcCrt() != null && getProcCrtVal() != null) {
            HcmSalaryProcessingAppAMImpl am = (HcmSalaryProcessingAppAMImpl) this.getApplicationModule();
            if (getProcCrt() == 51) {
                am.getLovLocations1().setNamedWhereClauseParam("BindOrgId", getOrgId());
                am.getLovLocations1().executeQuery();
                Row[] locRows = am.getLovLocations1().getFilteredRows("ParamId", getProcCrtVal());
                if (locRows.length > 0) {
                    String locnm = locRows[0].getAttribute("ParamDesc").toString();
                    return locnm;
                }
            }

            else if (getProcCrt() == 52) {
                am.getLovDepartment1().setNamedWhereClauseParam("BindOrgId", getOrgId());
                am.getLovDepartment1().executeQuery();
                Row[] deptRows = am.getLovDepartment1().getFilteredRows("DeptId", getProcCrtVal());
                if (deptRows.length > 0) {
                    String deptnm = deptRows[0].getAttribute("DeptNm").toString();
                    return deptnm;
                }
            }

            else if (getProcCrt() == 53) {

                am.getLovEmpGroup1().setNamedWhereClauseParam("BindOrgId", getOrgId());
                am.getLovEmpGroup1().executeQuery();

                Row[] empgrpRows = am.getLovEmpGroup1().getFilteredRows("ParamId", getProcCrtVal());
                if (empgrpRows.length > 0) {
                    String grpnm = empgrpRows[0].getAttribute("ParamDesc").toString();
                    System.out.println("inside group---" + grpnm);
                    return grpnm;
                }
            }

            else if (getProcCrt() == 54) {
                am.getLovEmpName1().setNamedWhereClauseParam("BindCldId", getCldId());
                am.getLovEmpName1().setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                am.getLovEmpName1().setNamedWhereClauseParam("BindOrgId", getOrgId());
                am.getLovEmpName1().setNamedWhereClauseParam("BindSlocId", getSlocId());
                am.getLovEmpName1().executeQuery();
                Row[] empRows = am.getLovEmpName1().getFilteredRows("DocId", getProcCrtVal());
                if (empRows.length > 0) {
                    String empnm = empRows[0].getAttribute("EmpNm").toString();
                    System.out.println("inside emp---" + empnm);
                    return empnm;
                }
            }
        }*/
        return (String) getAttributeInternal(TRANSCRITERIAVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCriteriaValue.
     * @param value value to set the  TransCriteriaValue
     */
    public void setTransCriteriaValue(String value) {
        setAttributeInternal(TRANSCRITERIAVALUE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmSalProc.
     */
    public RowIterator getHcmSalProc() {
        return (RowIterator) getAttributeInternal(HCMSALPROC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SalStatusVO1.
     */
    public RowSet getSalStatusVO1() {
        return (RowSet) getAttributeInternal(SALSTATUSVO1);
    }
}

