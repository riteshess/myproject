package hcmsalaryprocessingapp.model.entities;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 21 12:46:21 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpLeaveEncshDtlEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        EmpDocId,
        LeaveId,
        LeaveEncashLimit,
        LeaveOp,
        LeaveAvail,
        LeaveBal,
        EncshAmt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        HcmEmpLeaveEncsh;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return HcmEmpLeaveEncshDtlEOImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return HcmEmpLeaveEncshDtlEOImpl.AttributesEnum.firstIndex() +
                   HcmEmpLeaveEncshDtlEOImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = HcmEmpLeaveEncshDtlEOImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int LEAVEID = AttributesEnum.LeaveId.index();
    public static final int LEAVEENCASHLIMIT = AttributesEnum.LeaveEncashLimit.index();
    public static final int LEAVEOP = AttributesEnum.LeaveOp.index();
    public static final int LEAVEAVAIL = AttributesEnum.LeaveAvail.index();
    public static final int LEAVEBAL = AttributesEnum.LeaveBal.index();
    public static final int ENCSHAMT = AttributesEnum.EncshAmt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int HCMEMPLEAVEENCSH = AttributesEnum.HcmEmpLeaveEncsh.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpLeaveEncshDtlEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hcmsalaryprocessingapp.model.entities.HcmEmpLeaveEncshDtlEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for EmpDocId, using the alias name EmpDocId.
     * @return the value of EmpDocId
     */
    public String getEmpDocId() {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDocId.
     * @param value value to set the EmpDocId
     */
    public void setEmpDocId(String value) {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for LeaveId, using the alias name LeaveId.
     * @return the value of LeaveId
     */
    public String getLeaveId() {
        return (String) getAttributeInternal(LEAVEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveId.
     * @param value value to set the LeaveId
     */
    public void setLeaveId(String value) {
        setAttributeInternal(LEAVEID, value);
    }

    /**
     * Gets the attribute value for LeaveEncashLimit, using the alias name LeaveEncashLimit.
     * @return the value of LeaveEncashLimit
     */
    public oracle.jbo.domain.Number getLeaveEncashLimit() {
        return (oracle.jbo.domain.Number) getAttributeInternal(LEAVEENCASHLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveEncashLimit.
     * @param value value to set the LeaveEncashLimit
     */
    public void setLeaveEncashLimit(oracle.jbo.domain.Number value) {
        setAttributeInternal(LEAVEENCASHLIMIT, value);
    }

    /**
     * Gets the attribute value for LeaveOp, using the alias name LeaveOp.
     * @return the value of LeaveOp
     */
    public Number getLeaveOp() {
        return (Number) getAttributeInternal(LEAVEOP);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveOp.
     * @param value value to set the LeaveOp
     */
    public void setLeaveOp(Number value) {
        setAttributeInternal(LEAVEOP, value);
    }

    /**
     * Gets the attribute value for LeaveAvail, using the alias name LeaveAvail.
     * @return the value of LeaveAvail
     */
    public Number getLeaveAvail() {
        return (Number) getAttributeInternal(LEAVEAVAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveAvail.
     * @param value value to set the LeaveAvail
     */
    public void setLeaveAvail(Number value) {
        setAttributeInternal(LEAVEAVAIL, value);
    }

    /**
     * Gets the attribute value for LeaveBal, using the alias name LeaveBal.
     * @return the value of LeaveBal
     */
    public Number getLeaveBal() {
        return (Number) getAttributeInternal(LEAVEBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveBal.
     * @param value value to set the LeaveBal
     */
    public void setLeaveBal(Number value) {
        setAttributeInternal(LEAVEBAL, value);
    }

    /**
     * Gets the attribute value for EncshAmt, using the alias name EncshAmt.
     * @return the value of EncshAmt
     */
    public Number getEncshAmt() {
        return (Number) getAttributeInternal(ENCSHAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EncshAmt.
     * @param value value to set the EncshAmt
     */
    public void setEncshAmt(Number value) {
        setAttributeInternal(ENCSHAMT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * @return the associated entity HcmEmpLeaveEncshEOImpl.
     */
    public HcmEmpLeaveEncshEOImpl getHcmEmpLeaveEncsh() {
        return (HcmEmpLeaveEncshEOImpl) getAttributeInternal(HCMEMPLEAVEENCSH);
    }

    /**
     * Sets <code>value</code> as the associated entity HcmEmpLeaveEncshEOImpl.
     */
    public void setHcmEmpLeaveEncsh(HcmEmpLeaveEncshEOImpl value) {
        setAttributeInternal(HCMEMPLEAVEENCSH, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param empDocId key constituent
     * @param leaveId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String empDocId, String leaveId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId, empDocId, leaveId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        Integer usr = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        setUsrIdCreate(usr);
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
    }
    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

