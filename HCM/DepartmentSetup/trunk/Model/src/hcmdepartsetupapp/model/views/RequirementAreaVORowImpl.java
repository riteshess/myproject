package hcmdepartsetupapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 16 17:32:48 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RequirementAreaVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        RqmtAreaId,
        RqmtAreaNm,
        AddsId,
        DfltWh,
        ProductionFlg,
        CostCentreFlg,
        DeptId,
        RetnblIssuOnly,
        SvcCentreFlg,
        AddressTrans,
        TransDeptNm,
        ReqAraDeptVO1,
        LovAppAddressVO1,
        LovWareHouseForTblVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int RQMTAREANM = AttributesEnum.RqmtAreaNm.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int DFLTWH = AttributesEnum.DfltWh.index();
    public static final int PRODUCTIONFLG = AttributesEnum.ProductionFlg.index();
    public static final int COSTCENTREFLG = AttributesEnum.CostCentreFlg.index();
    public static final int DEPTID = AttributesEnum.DeptId.index();
    public static final int RETNBLISSUONLY = AttributesEnum.RetnblIssuOnly.index();
    public static final int SVCCENTREFLG = AttributesEnum.SvcCentreFlg.index();
    public static final int ADDRESSTRANS = AttributesEnum.AddressTrans.index();
    public static final int TRANSDEPTNM = AttributesEnum.TransDeptNm.index();
    public static final int REQARADEPTVO1 = AttributesEnum.ReqAraDeptVO1.index();
    public static final int LOVAPPADDRESSVO1 = AttributesEnum.LovAppAddressVO1.index();
    public static final int LOVWAREHOUSEFORTBLVO1 = AttributesEnum.LovWareHouseForTblVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RequirementAreaVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public String getSlocId() {
        return (String) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaId.
     * @return the RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaNm.
     * @return the RqmtAreaNm
     */
    public String getRqmtAreaNm() {
        return (String) getAttributeInternal(RQMTAREANM);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsId.
     * @return the AddsId
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Gets the attribute value for the calculated attribute DfltWh.
     * @return the DfltWh
     */
    public String getDfltWh() {
        return (String) getAttributeInternal(DFLTWH);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductionFlg.
     * @return the ProductionFlg
     */
    public String getProductionFlg() {
        return (String) getAttributeInternal(PRODUCTIONFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute CostCentreFlg.
     * @return the CostCentreFlg
     */
    public String getCostCentreFlg() {
        return (String) getAttributeInternal(COSTCENTREFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptId.
     * @return the DeptId
     */
    public String getDeptId() {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Gets the attribute value for the calculated attribute RetnblIssuOnly.
     * @return the RetnblIssuOnly
     */
    public String getRetnblIssuOnly() {
        return (String) getAttributeInternal(RETNBLISSUONLY);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcCentreFlg.
     * @return the SvcCentreFlg
     */
    public String getSvcCentreFlg() {
        return (String) getAttributeInternal(SVCCENTREFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute AddressTrans.
     * @return the AddressTrans
     */
    public String getAddressTrans() {
        if (getAddsId() != null) {
            getLovAppAddressVO1().setNamedWhereClauseParam("slocBind", getSlocId());
            getLovAppAddressVO1().setNamedWhereClauseParam("cldBind", getCldId());
            getLovAppAddressVO1().executeQuery();
            Row[] filteredRows = getLovAppAddressVO1().getFilteredRows("AddsId", getAddsId());
            // System.out.println("address filter length---" + filteredRows.length);
            if (filteredRows.length > 0) {
                String address = filteredRows[0].getAttribute("Adds").toString();
                //System.out.println("address in getter----->" + address);
                return address;
            }
        }
        return (String) getAttributeInternal(ADDRESSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddressTrans.
     * @param value value to set the  AddressTrans
     */
    public void setAddressTrans(String value) {
        setAttributeInternal(ADDRESSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDeptNm.
     * @return the TransDeptNm
     */
    public String getTransDeptNm() {
        if (getDeptId() != null) {
            getReqAraDeptVO1().setNamedWhereClauseParam("cldIdBindVar", getCldId());
            getReqAraDeptVO1().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
            getReqAraDeptVO1().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
            getReqAraDeptVO1().executeQuery();
            Row[] filteredRows = getReqAraDeptVO1().getFilteredRows("DeptId", getDeptId());
            System.out.println("for dept filter length-->" + filteredRows.length);
            if (filteredRows.length > 0) {
                String nm = filteredRows[0].getAttribute("DeptNm").toString();
                System.out.println("dept name in getter---" + nm);
                return nm;
            }
        }
        return (String) getAttributeInternal(TRANSDEPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDeptNm.
     * @param value value to set the  TransDeptNm
     */
    public void setTransDeptNm(String value) {
        setAttributeInternal(TRANSDEPTNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ReqAraDeptVO1.
     */
    public RowSet getReqAraDeptVO1() {
        return (RowSet) getAttributeInternal(REQARADEPTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppAddressVO1.
     */
    public RowSet getLovAppAddressVO1() {
        return (RowSet) getAttributeInternal(LOVAPPADDRESSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWareHouseForTblVO1.
     */
    public RowSet getLovWareHouseForTblVO1() {
        return (RowSet) getAttributeInternal(LOVWAREHOUSEFORTBLVO1);
    }
}

