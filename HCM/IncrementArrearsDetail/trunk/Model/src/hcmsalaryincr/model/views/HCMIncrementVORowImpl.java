package hcmsalaryincr.model.views;

import java.math.BigDecimal;

import java.util.Arrays;

import hcmsalaryincr.model.entities.HCMIncrementtEOImpl;

import hcmsalaryincr.model.services.HCMSalaryIncrmtAMImpl;

import java.sql.SQLException;

import java.util.Calendar;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 18 11:32:43 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HCMIncrementVORowImpl extends ViewRowImpl {


    public static final int ENTITY_HCMINCREMENTTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        IncrId,
        AppliDt,
        EmpCode,
        EmpDocId,
        GrpId,
        IncrDt,
        IncrStat,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        transEmpNM,
        transWrkStat,
        ArrDecrFlg,
        ArrRcvrPrd,
        transIsRcvryFieldAvl,
        IncrCritera,
        transEmpDojFromDT,
        transEmpDojToDt,
        SubCriteria,
        HCMIncrmntSumm,
        HcmIncrEmp,
        LovHcmSetupVO1,
        LovOrgHCMEmpProfVO1,
        AppSecUserVO1,
        AppSecUserVO2,
        LovIncrStatVO1,
        DummyLovFrChkVO,
        LovIncrmntCriteraVO1,
        lovSelectedCandiateVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index()
        {
            return HCMIncrementVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return HCMIncrementVORowImpl.AttributesEnum.firstIndex() +
                   HCMIncrementVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = HCMIncrementVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int INCRID = AttributesEnum.IncrId.index();
    public static final int APPLIDT = AttributesEnum.AppliDt.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int INCRDT = AttributesEnum.IncrDt.index();
    public static final int INCRSTAT = AttributesEnum.IncrStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSEMPNM = AttributesEnum.transEmpNM.index();
    public static final int TRANSWRKSTAT = AttributesEnum.transWrkStat.index();
    public static final int ARRDECRFLG = AttributesEnum.ArrDecrFlg.index();
    public static final int ARRRCVRPRD = AttributesEnum.ArrRcvrPrd.index();
    public static final int TRANSISRCVRYFIELDAVL = AttributesEnum.transIsRcvryFieldAvl.index();
    public static final int INCRCRITERA = AttributesEnum.IncrCritera.index();
    public static final int TRANSEMPDOJFROMDT = AttributesEnum.transEmpDojFromDT.index();
    public static final int TRANSEMPDOJTODT = AttributesEnum.transEmpDojToDt.index();
    public static final int SUBCRITERIA = AttributesEnum.SubCriteria.index();
    public static final int HCMINCRMNTSUMM = AttributesEnum.HCMIncrmntSumm.index();
    public static final int HCMINCREMP = AttributesEnum.HcmIncrEmp.index();
    public static final int LOVHCMSETUPVO1 = AttributesEnum.LovHcmSetupVO1.index();
    public static final int LOVORGHCMEMPPROFVO1 = AttributesEnum.LovOrgHCMEmpProfVO1.index();
    public static final int APPSECUSERVO1 = AttributesEnum.AppSecUserVO1.index();
    public static final int APPSECUSERVO2 = AttributesEnum.AppSecUserVO2.index();
    public static final int LOVINCRSTATVO1 = AttributesEnum.LovIncrStatVO1.index();
    public static final int DUMMYLOVFRCHKVO = AttributesEnum.DummyLovFrChkVO.index();
    public static final int LOVINCRMNTCRITERAVO1 = AttributesEnum.LovIncrmntCriteraVO1.index();
    public static final int LOVSELECTEDCANDIATEVO1 = AttributesEnum.lovSelectedCandiateVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HCMIncrementVORowImpl()
    {
    }

    /**
     * Gets HCMIncrementtEO entity object.
     * @return the HCMIncrementtEO
     */
    public HCMIncrementtEOImpl getHCMIncrementtEO()
    {
        return (HCMIncrementtEOImpl) getEntity(ENTITY_HCMINCREMENTTEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value)
    {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for INCR_ID using the alias name IncrId.
     * @return the INCR_ID
     */
    public String getIncrId()
    {
        return (String) getAttributeInternal(INCRID);
    }

    /**
     * Sets <code>value</code> as attribute value for INCR_ID using the alias name IncrId.
     * @param value value to set the INCR_ID
     */
    public void setIncrId(String value)
    {
        setAttributeInternal(INCRID, value);
    }

    /**
     * Gets the attribute value for APPLI_DT using the alias name AppliDt.
     * @return the APPLI_DT
     */
    public Timestamp getAppliDt()
    {
        return (Timestamp) getAttributeInternal(APPLIDT);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLI_DT using the alias name AppliDt.
     * @param value value to set the APPLI_DT
     */
    public void setAppliDt(Timestamp value)
    {
        setAttributeInternal(APPLIDT, value);
    }

    /**
     * Gets the attribute value for EMP_CODE using the alias name EmpCode.
     * @return the EMP_CODE
     */
    public Integer getEmpCode()
    {

        //         HCMSalaryIncrmtAMImpl am = (HCMSalaryIncrmtAMImpl) this.getApplicationModule();
        //            am.getDummyPrevSalComponent().setNamedWhereClauseParam("empCodeBindVar", getAttributeInternal(EMPDOCID));
        //            am.getDummyPrevSalComponent().setNamedWhereClauseParam("grpIdBindVar", getGrpId());
        //            am.getDummyPrevSalComponent().executeQuery();
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_CODE using the alias name EmpCode.
     * @param value value to set the EMP_CODE
     */
    public void setEmpCode(Integer value)
    {

        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @return the EMP_DOC_ID
     */
    public String getEmpDocId()
    {
        //            HCMSalaryIncrmtAMImpl am = (HCMSalaryIncrmtAMImpl) this.getApplicationModule();
        //            am.getDummyPrevSalComponent().setNamedWhereClauseParam("empCodeBindVar", getAttributeInternal(EMPDOCID));
        //            am.getDummyPrevSalComponent().setNamedWhereClauseParam("grpIdBindVar", getGrpId());
        //            am.getDummyPrevSalComponent().executeQuery();

        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @param value value to set the EMP_DOC_ID
     */
    public void setEmpDocId(String value)
    {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId()
    {
        /*  HCMSalaryIncrmtAMImpl am = (HCMSalaryIncrmtAMImpl) this.getApplicationModule();
        am.getDummyPrevSalComponent().setNamedWhereClauseParam("empCodeBindVar", getEmpCode());
        am.getDummyPrevSalComponent().setNamedWhereClauseParam("grpIdBindVar", (String) getAttributeInternal(GRPID));
        am.getDummyPrevSalComponent().executeQuery();  */
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value)
    {
        setAttributeInternal(GRPID, value);
    }


    /**
     * Gets the attribute value for INCR_DT using the alias name IncrDt.
     * @return the INCR_DT
     */
    public Timestamp getIncrDt()
    {
        return (Timestamp) getAttributeInternal(INCRDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INCR_DT using the alias name IncrDt.
     * @param value value to set the INCR_DT
     */
    public void setIncrDt(Timestamp value)
    {
        setAttributeInternal(INCRDT, value);
    }

    /**
     * Gets the attribute value for INCR_STAT using the alias name IncrStat.
     * @return the INCR_STAT
     */
    public Integer getIncrStat()
    {
        return (Integer) getAttributeInternal(INCRSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for INCR_STAT using the alias name IncrStat.
     * @param value value to set the INCR_STAT
     */
    public void setIncrStat(Integer value)
    {
        setAttributeInternal(INCRSTAT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpNM.
     * @return the transEmpNM
     */
    public String gettransEmpNM()
    {
        String empNM = "";
        RowSet vo = this.getLovOrgHCMEmpProfVO1();

        Row[] r = vo.getFilteredRows("EmpCode", this.getEmpCode());
        if (r.length > 0)
        {
            empNM = (String) r[0].getAttribute("EmpNm");
        }
        return empNM;

        // return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpNM.
     * @param value value to set the  transEmpNM
     */
    public void settransEmpNM(String value)
    {
        setAttributeInternal(TRANSEMPNM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute transWrkStat.
     * @return the transWrkStat
     */
    public Integer gettransWrkStat()
    {
        String incrId = getIncrId();
        if (incrId != null)
        {
            return (Integer) getAttributeInternal(TRANSWRKSTAT);
        }
        else
        {
            return new Integer(32);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transWrkStat.
     * @param value value to set the  transWrkStat
     */
    public void settransWrkStat(Integer value)
    {
        setAttributeInternal(TRANSWRKSTAT, value);
    }


    /**
     * Gets the attribute value for ARR_DECR_FLG using the alias name ArrDecrFlg.
     * @return the ARR_DECR_FLG
     */
    public String getArrDecrFlg()
    {
        return (String) getAttributeInternal(ARRDECRFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ARR_DECR_FLG using the alias name ArrDecrFlg.
     * @param value value to set the ARR_DECR_FLG
     */
    public void setArrDecrFlg(String value)
    {
        setAttributeInternal(ARRDECRFLG, value);
    }

    /**
     * Gets the attribute value for ARR_RCVR_PRD using the alias name ArrRcvrPrd.
     * @return the ARR_RCVR_PRD
     */
    public Integer getArrRcvrPrd()
    {
        return (Integer) getAttributeInternal(ARRRCVRPRD);
    }

    /**
     * Sets <code>value</code> as attribute value for ARR_RCVR_PRD using the alias name ArrRcvrPrd.
     * @param value value to set the ARR_RCVR_PRD
     */
    public void setArrRcvrPrd(Integer value)
    {
        setAttributeInternal(ARRRCVRPRD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsRcvryFieldAvl.
     * @return the transIsRcvryFieldAvl
     */
    public String gettransIsRcvryFieldAvl()
    {
        Calendar callforIncr = Calendar.getInstance();
        Calendar callFrAppl = Calendar.getInstance();
        oracle.jbo.domain.Timestamp incrDt = null;
        java.sql.Date IncrementDate = null;
        oracle.jbo.domain.Timestamp applDt = null;
        java.sql.Date ApplicableDate = null;
        incrDt = getIncrDt();
        applDt = getAppliDt();
        if(incrDt!=null&& applDt!=null)
        {
            try
            {
                IncrementDate = incrDt.dateValue();
                ApplicableDate = applDt.dateValue();

                callforIncr.setTime(IncrementDate);
                int yearforIncr = callforIncr.get(Calendar.YEAR);
                int monthforIncr = callforIncr.get(Calendar.MONTH);;
                
                callFrAppl.setTime(ApplicableDate);
                int yearFrAppl = callFrAppl.get(Calendar.YEAR);
                int monthFrAppl = callFrAppl.get(Calendar.MONTH);

                if (yearforIncr == yearFrAppl)
                {
                    if (monthforIncr == monthFrAppl)
                    {
                        return "N";
                    }
                    else
                    {

                    }
                }
                else
                {

                }

            }
            catch (SQLException e)
            {
            }
        }
        else
        {
            return "N";
        }

        return "Y";
    }

    /**
     * Gets the attribute value for INCR_CRITERA using the alias name IncrCritera.
     * @return the INCR_CRITERA
     */
    public String getIncrCritera()
    {
        return (String) getAttributeInternal(INCRCRITERA);
    }

    /**
     * Sets <code>value</code> as attribute value for INCR_CRITERA using the alias name IncrCritera.
     * @param value value to set the INCR_CRITERA
     */
    public void setIncrCritera(String value)
    {
        setAttributeInternal(INCRCRITERA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpDojFromDT.
     * @return the transEmpDojFromDT
     */
    public Timestamp gettransEmpDojFromDT()
    {
        return (Timestamp) getAttributeInternal(TRANSEMPDOJFROMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpDojFromDT.
     * @param value value to set the  transEmpDojFromDT
     */
    public void settransEmpDojFromDT(Timestamp value)
    {
        setAttributeInternal(TRANSEMPDOJFROMDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpDojToDt.
     * @return the transEmpDojToDt
     */
    public Timestamp gettransEmpDojToDt()
    {
        return (Timestamp) getAttributeInternal(TRANSEMPDOJTODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpDojToDt.
     * @param value value to set the  transEmpDojToDt
     */
    public void settransEmpDojToDt(Timestamp value)
    {
        setAttributeInternal(TRANSEMPDOJTODT, value);
    }

    /**
     * Gets the attribute value for SUB_CRITERIA using the alias name SubCriteria.
     * @return the SUB_CRITERIA
     */
    public String getSubCriteria() {
        return (String) getAttributeInternal(SUBCRITERIA);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_CRITERIA using the alias name SubCriteria.
     * @param value value to set the SUB_CRITERIA
     */
    public void setSubCriteria(String value) {
        setAttributeInternal(SUBCRITERIA, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HCMIncrmntSumm.
     */
    public RowIterator getHCMIncrmntSumm()
    {
        return (RowIterator) getAttributeInternal(HCMINCRMNTSUMM);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmIncrEmp.
     */
    public RowIterator getHcmIncrEmp() {
        return (RowIterator) getAttributeInternal(HCMINCREMP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovHcmSetupVO1.
     */
    public RowSet getLovHcmSetupVO1()
    {
        return (RowSet) getAttributeInternal(LOVHCMSETUPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgHCMEmpProfVO1.
     */
    public RowSet getLovOrgHCMEmpProfVO1()
    {
        return (RowSet) getAttributeInternal(LOVORGHCMEMPPROFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppSecUserVO1.
     */
    public RowSet getAppSecUserVO1()
    {
        return (RowSet) getAttributeInternal(APPSECUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppSecUserVO2.
     */
    public RowSet getAppSecUserVO2()
    {
        return (RowSet) getAttributeInternal(APPSECUSERVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIncrStatVO1.
     */
    public RowSet getLovIncrStatVO1()
    {
        return (RowSet) getAttributeInternal(LOVINCRSTATVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DummyLovFrChkVO.
     */
    public RowSet getDummyLovFrChkVO()
    {
        return (RowSet) getAttributeInternal(DUMMYLOVFRCHKVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovIncrmntCriteraVO1.
     */
    public RowSet getLovIncrmntCriteraVO1()
    {
        return (RowSet) getAttributeInternal(LOVINCRMNTCRITERAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> lovSelectedCandiateVO1.
     */
    public RowSet getlovSelectedCandiateVO1() {
        return (RowSet) getAttributeInternal(LOVSELECTEDCANDIATEVO1);
    }
}

