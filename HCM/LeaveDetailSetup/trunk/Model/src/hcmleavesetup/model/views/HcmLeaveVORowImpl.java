package hcmleavesetup.model.views;

import adf.utils.ebiz.EbizParams;

import hcmleavesetup.model.entities.HcmLeaveEOImpl;

import hcmleavesetup.model.modules.HcmLeaveSetupAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 04 10:29:19 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmLeaveVORowImpl extends ViewRowImpl {


    public static final int ENTITY_HCMLEAVEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        HoOrgId,
        LeaveId,
        LeaveNotation,
        OrgId,
        Remarks,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        AuthStat,
        TransLeaveName,
        CompOffChk,
        LeaveAdjDays,
        AbsentDedChk,
        SeqNo,
        LeaveCoaId,
        TransCoaNm,
        TransChkLeaveCoa,
        HcmLeaveGrp,
        OrgHcmCompLeave,
        LovUsrIdVO,
        LovCoaVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LEAVEID = AttributesEnum.LeaveId.index();
    public static final int LEAVENOTATION = AttributesEnum.LeaveNotation.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int TRANSLEAVENAME = AttributesEnum.TransLeaveName.index();
    public static final int COMPOFFCHK = AttributesEnum.CompOffChk.index();
    public static final int LEAVEADJDAYS = AttributesEnum.LeaveAdjDays.index();
    public static final int ABSENTDEDCHK = AttributesEnum.AbsentDedChk.index();
    public static final int SEQNO = AttributesEnum.SeqNo.index();
    public static final int LEAVECOAID = AttributesEnum.LeaveCoaId.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSCHKLEAVECOA = AttributesEnum.TransChkLeaveCoa.index();
    public static final int HCMLEAVEGRP = AttributesEnum.HcmLeaveGrp.index();
    public static final int ORGHCMCOMPLEAVE = AttributesEnum.OrgHcmCompLeave.index();
    public static final int LOVUSRIDVO = AttributesEnum.LovUsrIdVO.index();
    public static final int LOVCOAVO1 = AttributesEnum.LovCoaVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmLeaveVORowImpl()
    {
    }

    /**
     * Gets HcmLeaveEO entity object.
     * @return the HcmLeaveEO
     */
    public HcmLeaveEOImpl getHcmLeaveEO()
    {
        return (HcmLeaveEOImpl) getEntity(ENTITY_HCMLEAVEEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for LEAVE_ID using the alias name LeaveId.
     * @return the LEAVE_ID
     */
    public String getLeaveId()
    {
        return (String) getAttributeInternal(LEAVEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ID using the alias name LeaveId.
     * @param value value to set the LEAVE_ID
     */
    public void setLeaveId(String value)
    {
        setAttributeInternal(LEAVEID, value);
    }

    /**
     * Gets the attribute value for LEAVE_NOTATION using the alias name LeaveNotation.
     * @return the LEAVE_NOTATION
     */
    public String getLeaveNotation()
    {
        return (String) getAttributeInternal(LEAVENOTATION);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_NOTATION using the alias name LeaveNotation.
     * @param value value to set the LEAVE_NOTATION
     */
    public void setLeaveNotation(String value)
    {
        setAttributeInternal(LEAVENOTATION, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks()
    {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value)
    {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for AUTH_STAT using the alias name AuthStat.
     * @return the AUTH_STAT
     */
    public String getAuthStat()
    {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT using the alias name AuthStat.
     * @param value value to set the AUTH_STAT
     */
    public void setAuthStat(String value)
    {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLeaveName.
     * @return the TransLeaveName
     */
    public String getTransLeaveName()
    {
        if (getAttributeInternal(TRANSLEAVENAME) != null)
            return (String) getAttributeInternal(TRANSLEAVENAME);
        else
        {
            HcmLeaveSetupAMImpl am = (HcmLeaveSetupAMImpl) this.getApplicationModule();
            if (am.getLeaveParam().getCurrentRow() != null)
                return (String) am.getLeaveParam().getCurrentRow().getAttribute("ParamDesc");
            else
                return (String) getAttributeInternal(TRANSLEAVENAME);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLeaveName.
     * @param value value to set the  TransLeaveName
     */
    public void setTransLeaveName(String value)
    {
        setAttributeInternal(TRANSLEAVENAME, value);
    }

    /**
     * Gets the attribute value for COMP_OFF_CHK using the alias name CompOffChk.
     * @return the COMP_OFF_CHK
     */
    public String getCompOffChk()
    {
        return (String) getAttributeInternal(COMPOFFCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for COMP_OFF_CHK using the alias name CompOffChk.
     * @param value value to set the COMP_OFF_CHK
     */
    public void setCompOffChk(String value)
    {
        setAttributeInternal(COMPOFFCHK, value);
    }

    /**
     * Gets the attribute value for LEAVE_ADJ_DAYS using the alias name LeaveAdjDays.
     * @return the LEAVE_ADJ_DAYS
     */
    public Integer getLeaveAdjDays()
    {
        return (Integer) getAttributeInternal(LEAVEADJDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ADJ_DAYS using the alias name LeaveAdjDays.
     * @param value value to set the LEAVE_ADJ_DAYS
     */
    public void setLeaveAdjDays(Integer value)
    {
        setAttributeInternal(LEAVEADJDAYS, value);
    }

    /**
     * Gets the attribute value for ABSENT_DED_CHK using the alias name AbsentDedChk.
     * @return the ABSENT_DED_CHK
     */
    public String getAbsentDedChk()
    {
        return (String) getAttributeInternal(ABSENTDEDCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for ABSENT_DED_CHK using the alias name AbsentDedChk.
     * @param value value to set the ABSENT_DED_CHK
     */
    public void setAbsentDedChk(String value)
    {
        setAttributeInternal(ABSENTDEDCHK, value);
    }

    /**
     * Gets the attribute value for SEQ_NO using the alias name SeqNo.
     * @return the SEQ_NO
     */
    public Integer getSeqNo()
    {
        return (Integer) getAttributeInternal(SEQNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SEQ_NO using the alias name SeqNo.
     * @param value value to set the SEQ_NO
     */
    public void setSeqNo(Integer value)
    {
        setAttributeInternal(SEQNO, value);
    }

    /**
     * Gets the attribute value for LEAVE_COA_ID using the alias name LeaveCoaId.
     * @return the LEAVE_COA_ID
     */
    public Integer getLeaveCoaId()
    {
        return (Integer) getAttributeInternal(LEAVECOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_COA_ID using the alias name LeaveCoaId.
     * @param value value to set the LEAVE_COA_ID
     */
    public void setLeaveCoaId(Integer value)
    {
        setAttributeInternal(LEAVECOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the TransCoaNm
     */
    public String getTransCoaNm()
    {
        if (this.getLeaveCoaId() != null && getAttributeInternal(TRANSCOANM) == null)
        {
            Row[] allRowsInRange = this.getLovCoaVO1().getAllRowsInRange();
            if (allRowsInRange.length > 0)
            {
                Row[] filteredRows = getLovCoaVO1().getFilteredRows("CoaId", getLeaveCoaId());
                if (filteredRows.length > 0)
                {
                    Object obj = filteredRows[0].getAttribute("CoaNm");
                    return obj == null ? null : obj.toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value)
    {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkLeaveCoa.
     * @return the TransChkLeaveCoa
     */
    public String getTransChkLeaveCoa()
    {
        HcmLeaveSetupAMImpl am = (HcmLeaveSetupAMImpl) this.getApplicationModule();
        am.getChekLeaveCoaApplicableVO1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        am.getChekLeaveCoaApplicableVO1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        am.getChekLeaveCoaApplicableVO1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        am.getChekLeaveCoaApplicableVO1().executeQuery();
        if (am.getChekLeaveCoaApplicableVO1().getEstimatedRowCount() > 0)
        {
            Row[] filteredRows =
                am.getChekLeaveCoaApplicableVO1().getFilteredRows("OrgId", EbizParams.GLBL_APP_USR_ORG());
            if (filteredRows != null && filteredRows.length > 0)
            {
                String glChk = null;
                String leaveCoaChk = null;
                if (filteredRows[0].getAttribute("GlCodeLnk") != null &&
                    filteredRows[0].getAttribute("LeaveCoaAppliChk") != null)
                {
                    glChk = filteredRows[0].getAttribute("GlCodeLnk").toString();
                    leaveCoaChk = filteredRows[0].getAttribute("LeaveCoaAppliChk").toString();
                    if (glChk.equalsIgnoreCase("Y") && leaveCoaChk.equalsIgnoreCase("Y"))
                    {
                        return "Y";
                    }
                }
            }

            return "N";
        }
        return "N";
        //return (String) getAttributeInternal(TRANSCHKLEAVECOA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkLeaveCoa.
     * @param value value to set the  TransChkLeaveCoa
     */
    public void setTransChkLeaveCoa(String value)
    {
        setAttributeInternal(TRANSCHKLEAVECOA, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmLeaveGrp.
     */
    public RowIterator getHcmLeaveGrp()
    {
        return (RowIterator) getAttributeInternal(HCMLEAVEGRP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgHcmCompLeave.
     */
    public RowIterator getOrgHcmCompLeave()
    {
        return (RowIterator) getAttributeInternal(ORGHCMCOMPLEAVE);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO.
     */
    public RowSet getLovUsrIdVO()
    {
        return (RowSet) getAttributeInternal(LOVUSRIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaVO1.
     */
    public RowSet getLovCoaVO1()
    {
        return (RowSet) getAttributeInternal(LOVCOAVO1);
    }
}

