package hcmleavesetup.model.views;

import hcmleavesetup.model.entities.HcmLeaveGrpEOImpl;

import hcmleavesetup.model.modules.HcmLeaveSetupAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import javax.faces.validator.ValidatorException;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 04 10:38:26 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmLeaveGrpVORowImpl extends ViewRowImpl {


    public static final int ENTITY_HCMLEAVEGRPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CarryFwdCh,
        CldId,
        GrpId,
        HoOrgId,
        LeaveAccrualRate,
        LeaveAccrualUnit,
        LeaveEncashCh,
        LeaveEncashLimit,
        LeaveId,
        LeaveMaxLimit,
        LeaveProofCh,
        OrgId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidEndDt,
        ValidStartDt,
        TransGrpDesc,
        TransMode,
        TransChkValid,
        MonAvlLimit,
        MaxContLimit,
        LeaveCombineChk,
        MtrntyLeaveChk,
        MtrntyLeaveDays,
        OrgHcmLeaveSub,
        LovGrpIdVO,
        LovUsrId,
        LovAccRateUnitVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CARRYFWDCH = AttributesEnum.CarryFwdCh.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LEAVEACCRUALRATE = AttributesEnum.LeaveAccrualRate.index();
    public static final int LEAVEACCRUALUNIT = AttributesEnum.LeaveAccrualUnit.index();
    public static final int LEAVEENCASHCH = AttributesEnum.LeaveEncashCh.index();
    public static final int LEAVEENCASHLIMIT = AttributesEnum.LeaveEncashLimit.index();
    public static final int LEAVEID = AttributesEnum.LeaveId.index();
    public static final int LEAVEMAXLIMIT = AttributesEnum.LeaveMaxLimit.index();
    public static final int LEAVEPROOFCH = AttributesEnum.LeaveProofCh.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int VALIDSTARTDT = AttributesEnum.ValidStartDt.index();
    public static final int TRANSGRPDESC = AttributesEnum.TransGrpDesc.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int TRANSCHKVALID = AttributesEnum.TransChkValid.index();
    public static final int MONAVLLIMIT = AttributesEnum.MonAvlLimit.index();
    public static final int MAXCONTLIMIT = AttributesEnum.MaxContLimit.index();
    public static final int LEAVECOMBINECHK = AttributesEnum.LeaveCombineChk.index();
    public static final int MTRNTYLEAVECHK = AttributesEnum.MtrntyLeaveChk.index();
    public static final int MTRNTYLEAVEDAYS = AttributesEnum.MtrntyLeaveDays.index();
    public static final int ORGHCMLEAVESUB = AttributesEnum.OrgHcmLeaveSub.index();
    public static final int LOVGRPIDVO = AttributesEnum.LovGrpIdVO.index();
    public static final int LOVUSRID = AttributesEnum.LovUsrId.index();
    public static final int LOVACCRATEUNITVO = AttributesEnum.LovAccRateUnitVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmLeaveGrpVORowImpl()
    {
    }

    /**
     * Gets HcmLeaveGrpEO entity object.
     * @return the HcmLeaveGrpEO
     */
    public HcmLeaveGrpEOImpl getHcmLeaveGrpEO()
    {
        return (HcmLeaveGrpEOImpl) getEntity(ENTITY_HCMLEAVEGRPEO);
    }

    /**
     * Gets the attribute value for CARRY_FWD_CH using the alias name CarryFwdCh.
     * @return the CARRY_FWD_CH
     */
    public String getCarryFwdCh()
    {
        return (String) getAttributeInternal(CARRYFWDCH);
    }

    /**
     * Sets <code>value</code> as attribute value for CARRY_FWD_CH using the alias name CarryFwdCh.
     * @param value value to set the CARRY_FWD_CH
     */
    public void setCarryFwdCh(String value)
    {
        if (value == null)
            value = "N";
        setAttributeInternal(CARRYFWDCH, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId()
    {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value)
    {
        
        if (getAm().chkDuplicateGrpName(getTransGrpDesc()).equals("Y"))
        {
            setAttributeInternal(GRPID, value);
        }
        else
        {
            showFacesMessage("Duplicate group !!", "E", false, "V");
        }

    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for LEAVE_ACCRUAL_RATE using the alias name LeaveAccrualRate.
     * @return the LEAVE_ACCRUAL_RATE
     */
    public Number getLeaveAccrualRate()
    {
        return (Number) getAttributeInternal(LEAVEACCRUALRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ACCRUAL_RATE using the alias name LeaveAccrualRate.
     * @param value value to set the LEAVE_ACCRUAL_RATE
     */
    public void setLeaveAccrualRate(Number value)
    {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(LEAVEACCRUALRATE, value);
    }

    /**
     * Gets the attribute value for LEAVE_ACCRUAL_UNIT using the alias name LeaveAccrualUnit.
     * @return the LEAVE_ACCRUAL_UNIT
     */
    public Integer getLeaveAccrualUnit()
    {
        return (Integer) getAttributeInternal(LEAVEACCRUALUNIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ACCRUAL_UNIT using the alias name LeaveAccrualUnit.
     * @param value value to set the LEAVE_ACCRUAL_UNIT
     */
    public void setLeaveAccrualUnit(Integer value)
    {
        setAttributeInternal(LEAVEACCRUALUNIT, value);
    }

    /**
     * Gets the attribute value for LEAVE_ENCASH_CH using the alias name LeaveEncashCh.
     * @return the LEAVE_ENCASH_CH
     */
    public String getLeaveEncashCh()
    {
        if (getAttributeInternal(LEAVEENCASHCH) != null && ((String) getAttributeInternal(LEAVEENCASHCH)).equals("Y"))
        {
        }
        else
            setLeaveEncashLimit(new Number(0));
        return (String) getAttributeInternal(LEAVEENCASHCH);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ENCASH_CH using the alias name LeaveEncashCh.
     * @param value value to set the LEAVE_ENCASH_CH
     */
    public void setLeaveEncashCh(String value)
    {
        if (value == null)
            value = "N";
        setAttributeInternal(LEAVEENCASHCH, value);
    }

    /**
     * Gets the attribute value for LEAVE_ENCASH_LIMIT using the alias name LeaveEncashLimit.
     * @return the LEAVE_ENCASH_LIMIT
     */
    public Number getLeaveEncashLimit()
    {
        return (Number) getAttributeInternal(LEAVEENCASHLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ENCASH_LIMIT using the alias name LeaveEncashLimit.
     * @param value value to set the LEAVE_ENCASH_LIMIT
     */
    public void setLeaveEncashLimit(Number value)
    {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(LEAVEENCASHLIMIT, value);
    }

    /**
     * Gets the attribute value for LEAVE_ID using the alias name LeaveId.
     * @return the LEAVE_ID
     */
    public String getLeaveId()
    {
        return (String) getAttributeInternal(LEAVEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_ID using the alias name LeaveId.
     * @param value value to set the LEAVE_ID
     */
    public void setLeaveId(String value)
    {
        setAttributeInternal(LEAVEID, value);
    }

    /**
     * Gets the attribute value for LEAVE_MAX_LIMIT using the alias name LeaveMaxLimit.
     * @return the LEAVE_MAX_LIMIT
     */
    public Number getLeaveMaxLimit()
    {
        return (Number) getAttributeInternal(LEAVEMAXLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_MAX_LIMIT using the alias name LeaveMaxLimit.
     * @param value value to set the LEAVE_MAX_LIMIT
     */
    public void setLeaveMaxLimit(Number value)
    {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(LEAVEMAXLIMIT, value);
    }

    /**
     * Gets the attribute value for LEAVE_PROOF_CH using the alias name LeaveProofCh.
     * @return the LEAVE_PROOF_CH
     */
    public String getLeaveProofCh()
    {
        return (String) getAttributeInternal(LEAVEPROOFCH);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_PROOF_CH using the alias name LeaveProofCh.
     * @param value value to set the LEAVE_PROOF_CH
     */
    public void setLeaveProofCh(String value)
    {
        if (value == null)
            value = "N";
        setAttributeInternal(LEAVEPROOFCH, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @return the VALID_END_DT
     */
    public Timestamp getValidEndDt()
    {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @param value value to set the VALID_END_DT
     */
    public void setValidEndDt(Timestamp value)
    {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for VALID_START_DT using the alias name ValidStartDt.
     * @return the VALID_START_DT
     */
    public Timestamp getValidStartDt()
    {
        return (Timestamp) getAttributeInternal(VALIDSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_START_DT using the alias name ValidStartDt.
     * @param value value to set the VALID_START_DT
     */
    public void setValidStartDt(Timestamp value)
    {
        setAttributeInternal(VALIDSTARTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpDesc.
     * @return the TransGrpDesc
     */
    public String getTransGrpDesc()
    {
        if (getGrpId() != null && getGrpId().toString().length() > 0)
        {
            String id = getGrpId();
            String nm = null;
            HcmLeaveSetupAMImpl am = (HcmLeaveSetupAMImpl) this.getApplicationModule();
            am.getLovGrpId().setNamedWhereClauseParam("cldIdBindVar", getCldId());
            am.getLovGrpId().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
            am.getLovGrpId().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
            am.getLovGrpId().setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
            am.getLovGrpId().executeQuery();
            Row r[] = am.getLovGrpId().getFilteredRows("ParamId", id);
            // System.out.println("filter row count in getter--->" + r.length);
            if (r.length > 0)
            {
                //System.out.println("ROW LENGHT GREATER THAN ZERO");
                nm = r[0].getAttribute("ParamDesc").toString();
                return nm;
            }
        }
        //System.out.println("OUTSIDE if");
        return (String) getAttributeInternal(TRANSGRPDESC);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpDesc.
     * @param value value to set the  TransGrpDesc
     */
    public void setTransGrpDesc(String value)
    {
        setAttributeInternal(TRANSGRPDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode()
    {
        if (resolvEl("#{pageFlowScope.ADD_EDIT_MODE}") != null)
            return (String) resolvEl("#{pageFlowScope.ADD_EDIT_MODE}");
        else
            return "V";
        // return (String) getAttributeInternal(TRANSMODE);
    }

    public String resolvEl(String data)
    {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value)
    {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkValid.
     * @return the TransChkValid
     */
    public String getTransChkValid()
    {
        if (getGrpId() != null && getGrpId().toString().length() > 0 && getLeaveId() != null)
        {
            HcmLeaveSetupAMImpl am = (HcmLeaveSetupAMImpl) this.getApplicationModule();
            String hoOrgId = (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
            String cldId = (String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
            Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            String orgId = (String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");

            //String leaveId = am.getHcmLeaveGrp().getCurrentRow().getAttribute("LeaveId").toString();
            String leaveId = getLeaveId();
            am.getHcmEmpLeave1().setNamedWhereClauseParam("BindCldId", cldId);
            am.getHcmEmpLeave1().setNamedWhereClauseParam("BindHoOrgId", hoOrgId);
            am.getHcmEmpLeave1().setNamedWhereClauseParam("BindOrgId", orgId);
            am.getHcmEmpLeave1().setNamedWhereClauseParam("BindSlocId", slocId);
            am.getHcmEmpLeave1().executeQuery();

            //Row[] filteredRows = am.getHcmEmpLeave1().getFilteredRows("LeaveId", leaveId);
            RowQualifier rq = new RowQualifier(am.getHcmEmpLeave1());
            rq.setWhereClause("EmpGrpId='" + getGrpId() + "' and LeaveId='" + getLeaveId() + "'");
            Row[] filteredRows = am.getHcmEmpLeave1().getFilteredRows(rq);
            // System.out.println("filterd rows -->" + filteredRows.length);
            if (filteredRows.length > 0)
            {
                return "Y";
            }
            //System.out.println("row zero inside check");
            return "N";
        }
        // System.out.println("row zero outside check");
        return "N";
        //return (String) getAttributeInternal(TRANSCHKVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkValid.
     * @param value value to set the  TransChkValid
     */
    public void setTransChkValid(String value)
    {
        setAttributeInternal(TRANSCHKVALID, value);
    }

    /**
     * Gets the attribute value for MON_AVL_LIMIT using the alias name MonAvlLimit.
     * @return the MON_AVL_LIMIT
     */
    public Number getMonAvlLimit() {
        return (Number) getAttributeInternal(MONAVLLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for MON_AVL_LIMIT using the alias name MonAvlLimit.
     * @param value value to set the MON_AVL_LIMIT
     */
    public void setMonAvlLimit(Number value) {
        setAttributeInternal(MONAVLLIMIT, value);
    }

    /**
     * Gets the attribute value for MAX_CONT_LIMIT using the alias name MaxContLimit.
     * @return the MAX_CONT_LIMIT
     */
    public Number getMaxContLimit() {
        return (Number) getAttributeInternal(MAXCONTLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_CONT_LIMIT using the alias name MaxContLimit.
     * @param value value to set the MAX_CONT_LIMIT
     */
    public void setMaxContLimit(Number value) {
        setAttributeInternal(MAXCONTLIMIT, value);
    }

    /**
     * Gets the attribute value for LEAVE_COMBINE_CHK using the alias name LeaveCombineChk.
     * @return the LEAVE_COMBINE_CHK
     */
    public String getLeaveCombineChk() {
        return (String) getAttributeInternal(LEAVECOMBINECHK);
    }

    /**
     * Sets <code>value</code> as attribute value for LEAVE_COMBINE_CHK using the alias name LeaveCombineChk.
     * @param value value to set the LEAVE_COMBINE_CHK
     */
    public void setLeaveCombineChk(String value) {
        setAttributeInternal(LEAVECOMBINECHK, value);
    }


    /**
     * Gets the attribute value for MTRNTY_LEAVE_CHK using the alias name MtrntyLeaveChk.
     * @return the MTRNTY_LEAVE_CHK
     */
    public String getMtrntyLeaveChk() {
        return (String) getAttributeInternal(MTRNTYLEAVECHK);
    }

    /**
     * Sets <code>value</code> as attribute value for MTRNTY_LEAVE_CHK using the alias name MtrntyLeaveChk.
     * @param value value to set the MTRNTY_LEAVE_CHK
     */
    public void setMtrntyLeaveChk(String value) {
        setAttributeInternal(MTRNTYLEAVECHK, value);
    }

    /**
     * Gets the attribute value for MTRNTY_LEAVE_DAYS using the alias name MtrntyLeaveDays.
     * @return the MTRNTY_LEAVE_DAYS
     */
    public Integer getMtrntyLeaveDays() {
        return (Integer) getAttributeInternal(MTRNTYLEAVEDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for MTRNTY_LEAVE_DAYS using the alias name MtrntyLeaveDays.
     * @param value value to set the MTRNTY_LEAVE_DAYS
     */
    public void setMtrntyLeaveDays(Integer value) {
        setAttributeInternal(MTRNTYLEAVEDAYS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgHcmLeaveSub.
     */
    public RowIterator getOrgHcmLeaveSub() {
        return (RowIterator) getAttributeInternal(ORGHCMLEAVESUB);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGrpIdVO.
     */
    public RowSet getLovGrpIdVO()
    {
        return (RowSet) getAttributeInternal(LOVGRPIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId.
     */
    public RowSet getLovUsrId()
    {
        return (RowSet) getAttributeInternal(LOVUSRID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAccRateUnitVO.
     */
    public RowSet getLovAccRateUnitVO()
    {
        return (RowSet) getAttributeInternal(LOVACCRATEUNITVO);
    }

    public HcmLeaveSetupAMImpl getAm()
    {
        HcmLeaveSetupAMImpl am = (HcmLeaveSetupAMImpl) this.getApplicationModule();
        return am;
    }

    public void showFacesMessage(String mesg, String sev, Boolean chk, String typFlg)
    {
        FacesMessage message = new FacesMessage(mesg);
        if (chk == true)
        {
            String msg = (String) resolvEl("#{bundle['" + mesg + "']}");
            message = new FacesMessage(msg);
        }
        if (sev.equalsIgnoreCase("E"))
        {
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
        }
        else if (sev.equalsIgnoreCase("W"))
        {
            message.setSeverity(FacesMessage.SEVERITY_WARN);
        }
        else if (sev.equalsIgnoreCase("I"))
        {
            message.setSeverity(FacesMessage.SEVERITY_INFO);
        }
        else
        {
            message.setSeverity(FacesMessage.SEVERITY_INFO);
        }
        if (typFlg.equals("F"))
        {
            FacesContext.getCurrentInstance().addMessage(null, message);
        }
        else if (typFlg.equals("V"))
        {
            throw new ValidatorException(message);
        }
    }


}

