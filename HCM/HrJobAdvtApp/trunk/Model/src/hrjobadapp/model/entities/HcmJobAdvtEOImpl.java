package hrjobadapp.model.entities;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

//import java.security.Timestamp;

import java.sql.CallableStatement;
import java.sql.SQLException;

//import java.sql.Timestamp;
import java.sql.Types;

import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 11 13:59:01 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmJobAdvtEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocNo,
        DocDt,
        ManPlanNo,
        ManPlanDt,
        HireType,
        TotCost,
        ValidDt,
        FromDt,
        ToDt,
        Status,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        DocId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCNO = AttributesEnum.DocNo.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int MANPLANNO = AttributesEnum.ManPlanNo.index();
    public static final int MANPLANDT = AttributesEnum.ManPlanDt.index();
    public static final int HIRETYPE = AttributesEnum.HireType.index();
    public static final int TOTCOST = AttributesEnum.TotCost.index();
    public static final int VALIDDT = AttributesEnum.ValidDt.index();
    public static final int FROMDT = AttributesEnum.FromDt.index();
    public static final int TODT = AttributesEnum.ToDt.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmJobAdvtEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hrjobadapp.model.entities.HcmJobAdvtEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocNo, using the alias name DocNo.
     * @return the value of DocNo
     */
    public String getDocNo() {
        return (String) getAttributeInternal(DOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNo.
     * @param value value to set the DocNo
     */
    public void setDocNo(String value) {
        setAttributeInternal(DOCNO, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for ManPlanNo, using the alias name ManPlanNo.
     * @return the value of ManPlanNo
     */
    public String getManPlanNo() {
        return (String) getAttributeInternal(MANPLANNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPlanNo.
     * @param value value to set the ManPlanNo
     */
    public void setManPlanNo(String value) {
        setAttributeInternal(MANPLANNO, value);
    }

    /**
     * Gets the attribute value for ManPlanDt, using the alias name ManPlanDt.
     * @return the value of ManPlanDt
     */
    public Timestamp getManPlanDt() {
        return (Timestamp) getAttributeInternal(MANPLANDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ManPlanDt.
     * @param value value to set the ManPlanDt
     */
    public void setManPlanDt(Timestamp value) {
        setAttributeInternal(MANPLANDT, value);
    }

    /**
     * Gets the attribute value for HireType, using the alias name HireType.
     * @return the value of HireType
     */
    public Integer getHireType() {
        return (Integer) getAttributeInternal(HIRETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HireType.
     * @param value value to set the HireType
     */
    public void setHireType(Integer value) {
        setAttributeInternal(HIRETYPE, value);
    }


    /**
     * Gets the attribute value for TotCost, using the alias name TotCost.
     * @return the value of TotCost
     */
    public Number getTotCost() {
        return (Number) getAttributeInternal(TOTCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotCost.
     * @param value value to set the TotCost
     */
    public void setTotCost(Number value) {
        setAttributeInternal(TOTCOST, value);
    }

    /**
     * Gets the attribute value for ValidDt, using the alias name ValidDt.
     * @return the value of ValidDt
     */
    public Timestamp getValidDt() {
        return (Timestamp) getAttributeInternal(VALIDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidDt.
     * @param value value to set the ValidDt
     */
    public void setValidDt(Timestamp value) {
        setAttributeInternal(VALIDDT, value);
    }

    /**
     * Gets the attribute value for FromDt, using the alias name FromDt.
     * @return the value of FromDt
     */
    public Timestamp getFromDt() {
        return (Timestamp) getAttributeInternal(FROMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDt.
     * @param value value to set the FromDt
     */
    public void setFromDt(Timestamp value) {
        setAttributeInternal(FROMDT, value);
    }

    /**
     * Gets the attribute value for ToDt, using the alias name ToDt.
     * @return the value of ToDt
     */
    public Timestamp getToDt() {
        return (Timestamp) getAttributeInternal(TODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDt.
     * @param value value to set the ToDt
     */
    public void setToDt(Timestamp value) {
        setAttributeInternal(TODT, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public Integer getStatus() {
        return (Integer) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(Integer value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docNo key constituent
     * @param docDt key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docNo,
                                       Timestamp docDt, String docId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docNo, docDt, docId });
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        setOrgId(EbizParams.GLBL_APP_USR_ORG());
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        
        String docId = (String) callStoredFunction(Types.VARCHAR, "app.get_txn_id(?,?,?,?,?,?)",new Object[] {
                                                  EbizParams.GLBL_APP_CLD_ID(),EbizParams.GLBL_APP_SERV_LOC(), 
                                                  EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(), 30001, 0});
        System.out.println("doc id is---->" + docId);
        if (docId != null && docId.length() > 0) {
            System.out.println("going to set docid:::::::");
            setDocId(docId);
        }     
          
       
        String rslt = (String) callStoredFunction(Types.VARCHAR, "FN_HCM_GET_PRF_ID(?,?,?,?,?,?,?)", new Object[] {
                                                  EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(),
                                                  EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(), 30001, 0,
                                                  "HCM$JOB$ADVT"
        });
        System.out.println("advt id generated is---->" + rslt);
        if (rslt != null && rslt.length() > 0) {
            System.out.println("going to set advtno");
            setDocNo(rslt);
        }
        
        setDocDt(new Timestamp(System.currentTimeMillis()));
        
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(EbizParams.GLBL_APP_USR());
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

