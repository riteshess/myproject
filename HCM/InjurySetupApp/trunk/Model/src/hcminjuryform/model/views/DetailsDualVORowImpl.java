package hcminjuryform.model.views;

import adf.utils.ebiz.EbizParams;

import hcminjuryform.model.services.HCMInjuryFormAMImpl;

import java.math.BigDecimal;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 01 14:35:01 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DetailsDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        compensationAmtTrans,
        InsuaranceAmtTrans,
        HospitalNmTrans,
        HospitalAddrTrans,
        RelativeNmTrans,
        RelativePhTrans,
        PoliceStationNmTrans,
        CaseFileNoTrans,
        Remarks,
        TransInsurance,
        TransCompensation,
        TransInformToKin,
        TransPoliceCase,
        TransLabourOfficer,
        TransHospital,
        FIRNoTrans,
        LabourCourtAddr;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int COMPENSATIONAMTTRANS = AttributesEnum.compensationAmtTrans.index();
    public static final int INSUARANCEAMTTRANS = AttributesEnum.InsuaranceAmtTrans.index();
    public static final int HOSPITALNMTRANS = AttributesEnum.HospitalNmTrans.index();
    public static final int HOSPITALADDRTRANS = AttributesEnum.HospitalAddrTrans.index();
    public static final int RELATIVENMTRANS = AttributesEnum.RelativeNmTrans.index();
    public static final int RELATIVEPHTRANS = AttributesEnum.RelativePhTrans.index();
    public static final int POLICESTATIONNMTRANS = AttributesEnum.PoliceStationNmTrans.index();
    public static final int CASEFILENOTRANS = AttributesEnum.CaseFileNoTrans.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TRANSINSURANCE = AttributesEnum.TransInsurance.index();
    public static final int TRANSCOMPENSATION = AttributesEnum.TransCompensation.index();
    public static final int TRANSINFORMTOKIN = AttributesEnum.TransInformToKin.index();
    public static final int TRANSPOLICECASE = AttributesEnum.TransPoliceCase.index();
    public static final int TRANSLABOUROFFICER = AttributesEnum.TransLabourOfficer.index();
    public static final int TRANSHOSPITAL = AttributesEnum.TransHospital.index();
    public static final int FIRNOTRANS = AttributesEnum.FIRNoTrans.index();
    public static final int LABOURCOURTADDR = AttributesEnum.LabourCourtAddr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DetailsDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute compensationAmtTrans.
     * @return the compensationAmtTrans
     */
    public BigDecimal getcompensationAmtTrans() {
        return (BigDecimal) getAttributeInternal(COMPENSATIONAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute compensationAmtTrans.
     * @param value value to set the  compensationAmtTrans
     */
    public void setcompensationAmtTrans(BigDecimal value) {
        setAttributeInternal(COMPENSATIONAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InsuaranceAmtTrans.
     * @return the InsuaranceAmtTrans
     */
    public BigDecimal getInsuaranceAmtTrans() {
        return (BigDecimal) getAttributeInternal(INSUARANCEAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InsuaranceAmtTrans.
     * @param value value to set the  InsuaranceAmtTrans
     */
    public void setInsuaranceAmtTrans(BigDecimal value) {
        setAttributeInternal(INSUARANCEAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HospitalNmTrans.
     * @return the HospitalNmTrans
     */
    public String getHospitalNmTrans() {
        return (String) getAttributeInternal(HOSPITALNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HospitalNmTrans.
     * @param value value to set the  HospitalNmTrans
     */
    public void setHospitalNmTrans(String value) {
        setAttributeInternal(HOSPITALNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HospitalAddrTrans.
     * @return the HospitalAddrTrans
     */
    public String getHospitalAddrTrans() {
        return (String) getAttributeInternal(HOSPITALADDRTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HospitalAddrTrans.
     * @param value value to set the  HospitalAddrTrans
     */
    public void setHospitalAddrTrans(String value) {
        setAttributeInternal(HOSPITALADDRTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RelativeNmTrans.
     * @return the RelativeNmTrans
     */
    public String getRelativeNmTrans() {
        return (String) getAttributeInternal(RELATIVENMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelativeNmTrans.
     * @param value value to set the  RelativeNmTrans
     */
    public void setRelativeNmTrans(String value) {
        setAttributeInternal(RELATIVENMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RelativePhTrans.
     * @return the RelativePhTrans
     */
    public oracle.jbo.domain.Number getRelativePhTrans() {
        return (oracle.jbo.domain.Number) getAttributeInternal(RELATIVEPHTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RelativePhTrans.
     * @param value value to set the  RelativePhTrans
     */
    public void setRelativePhTrans(oracle.jbo.domain.Number value) {
        setAttributeInternal(RELATIVEPHTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PoliceStationNmTrans.
     * @return the PoliceStationNmTrans
     */
    public String getPoliceStationNmTrans() {
        return (String) getAttributeInternal(POLICESTATIONNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PoliceStationNmTrans.
     * @param value value to set the  PoliceStationNmTrans
     */
    public void setPoliceStationNmTrans(String value) {
        setAttributeInternal(POLICESTATIONNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CaseFileNoTrans.
     * @return the CaseFileNoTrans
     */
    public String getCaseFileNoTrans() {
        return (String) getAttributeInternal(CASEFILENOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CaseFileNoTrans.
     * @param value value to set the  CaseFileNoTrans
     */
    public void setCaseFileNoTrans(String value) {
        setAttributeInternal(CASEFILENOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransInsurance.
     * @return the TransInsurance
     */
    public String getTransInsurance() {
        if(getAttributeInternal(TRANSINSURANCE)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+132);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSINSURANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInsurance.
     * @param value value to set the  TransInsurance
     */
    public void setTransInsurance(String value) {
        setAttributeInternal(TRANSINSURANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCompensation.
     * @return the TransCompensation
     */
    public String getTransCompensation() {
        if(getAttributeInternal(TRANSCOMPENSATION)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+133);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSCOMPENSATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCompensation.
     * @param value value to set the  TransCompensation
     */
    public void setTransCompensation(String value) {
        setAttributeInternal(TRANSCOMPENSATION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransInformToKin.
     * @return the TransInformToKin
     */
    public String getTransInformToKin() {
        if(getAttributeInternal(TRANSINFORMTOKIN)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+135);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSINFORMTOKIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInformToKin.
     * @param value value to set the  TransInformToKin
     */
    public void setTransInformToKin(String value) {
        setAttributeInternal(TRANSINFORMTOKIN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPoliceCase.
     * @return the TransPoliceCase
     */
    public String getTransPoliceCase() {
        if(getAttributeInternal(TRANSPOLICECASE)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+136);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSPOLICECASE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPoliceCase.
     * @param value value to set the  TransPoliceCase
     */
    public void setTransPoliceCase(String value) {
        setAttributeInternal(TRANSPOLICECASE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLabourOfficer.
     * @return the TransLabourOfficer
     */
    public String getTransLabourOfficer() {
        if(getAttributeInternal(TRANSLABOUROFFICER)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+137);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSLABOUROFFICER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLabourOfficer.
     * @param value value to set the  TransLabourOfficer
     */
    public void setTransLabourOfficer(String value) {
        setAttributeInternal(TRANSLABOUROFFICER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHospital.
     * @return the TransHospital
     */
    public String getTransHospital() {
        if(getAttributeInternal(TRANSHOSPITAL)==null ){
            HCMInjuryFormAMImpl am =(HCMInjuryFormAMImpl) getApplicationModule();
            HCMInjuryVOImpl cMInjuryVO1 = am.getHCMInjuryVO1();
            ViewObjectImpl cMInjuryFromDtlVO3 = am.getHCMInjuryFromDtlVO3();
            Row currentRow = cMInjuryVO1.getCurrentRow();
            if(currentRow!=null){
              String docIdVar=  currentRow.getAttribute("DocId")==null?" ":currentRow.getAttribute("DocId").toString();
                RowQualifier rowQualifier = new RowQualifier(cMInjuryFromDtlVO3);
                rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                            +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdVar+"' AND ActionTaken="+134);
                Row[] filteredRows = cMInjuryFromDtlVO3.getFilteredRows(rowQualifier); 
                if(filteredRows.length>0){
                    return "Y";
                }
            }
        }
        return (String) getAttributeInternal(TRANSHOSPITAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHospital.
     * @param value value to set the  TransHospital
     */
    public void setTransHospital(String value) {
        setAttributeInternal(TRANSHOSPITAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FIRNoTrans.
     * @return the FIRNoTrans
     */
    public String getFIRNoTrans() {
        return (String) getAttributeInternal(FIRNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FIRNoTrans.
     * @param value value to set the  FIRNoTrans
     */
    public void setFIRNoTrans(String value) {
        setAttributeInternal(FIRNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LabourCourtAddr.
     * @return the LabourCourtAddr
     */
    public String getLabourCourtAddr() {
        return (String) getAttributeInternal(LABOURCOURTADDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LabourCourtAddr.
     * @param value value to set the  LabourCourtAddr
     */
    public void setLabourCourtAddr(String value) {
        setAttributeInternal(LABOURCOURTADDR, value);
    }
}

