package hcminjuryform.model.services;

import adf.utils.ebiz.EbizParams;

import hcminjuryform.model.services.common.HCMInjuryFormAM;

import hcminjuryform.model.views.DetailsDualVOImpl;
import hcminjuryform.model.views.HCMInjuryVOImpl;

import hcminjuryform.model.views.SearchDualVOImpl;

import hcminjuryform.model.views.SearchResultsVOImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 30 11:25:47 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HCMInjuryFormAMImpl extends ApplicationModuleImpl implements HCMInjuryFormAM {
    /**
     * This is the default constructor (do not remove).
     */
    public HCMInjuryFormAMImpl() {
    }

    /**
     * Container's getter for HCMInjuryVO1.
     * @return HCMInjuryVO1
     */
    public HCMInjuryVOImpl getHCMInjuryVO1() {
        return (HCMInjuryVOImpl) findViewObject("HCMInjuryVO1");
    }

    /**
     * Container's getter for HCMInjuryFromDtlVO1.
     * @return HCMInjuryFromDtlVO1
     */
    public ViewObjectImpl getHCMInjuryFromDtlVO1() {
        return (ViewObjectImpl) findViewObject("HCMInjuryFromDtlVO1");
    }

    /**
     * Container's getter for SearchDualVO1.
     * @return SearchDualVO1
     */
    public SearchDualVOImpl getSearchDualVO1() {
        return (SearchDualVOImpl) findViewObject("SearchDualVO1");
    }

    /**
     * Search Paramter Method for Injury VO
     * @no return
     */
    public void searchInjuryForm() {
        ViewObjectImpl impl = this.getSearchResultsVO1();
        ViewObjectImpl dualVO1 = this.getSearchDualVO1();
        Integer _injuryType = null;
        Integer _injuryEmployee = null;
        Integer _injuryStatus = null;
        Timestamp _dateTo = null;
        Timestamp _dateFrom = null;
        String _doc_id = null;
        if (dualVO1.getCurrentRow() != null) {
            if (dualVO1.getCurrentRow().getAttribute("TransInjuryType") != null) {
                _injuryType = (Integer) dualVO1.getCurrentRow().getAttribute("TransInjuryType");

            }
            if (dualVO1.getCurrentRow().getAttribute("TransDocId") != null) {
                _doc_id = dualVO1.getCurrentRow().getAttribute("TransDocId").toString();

            }
            if (dualVO1.getCurrentRow().getAttribute("TransEmpCode") != null) {
                _injuryEmployee = (Integer) dualVO1.getCurrentRow().getAttribute("TransEmpCode");
            }
            if (dualVO1.getCurrentRow().getAttribute("TransStatus") != null) {
                _injuryStatus = (Integer) dualVO1.getCurrentRow().getAttribute("TransStatus");
            }
            if (dualVO1.getCurrentRow().getAttribute("TransDateTo") != null) {
                _dateTo = (Timestamp) dualVO1.getCurrentRow().getAttribute("TransDateTo");
            }
            if (dualVO1.getCurrentRow().getAttribute("TransDateFrom") != null) {
                _dateFrom = (Timestamp) dualVO1.getCurrentRow().getAttribute("TransDateFrom");
            }


        }

        impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        impl.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        impl.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        impl.setNamedWhereClauseParam("BindEmpCode", _injuryEmployee);
        impl.setNamedWhereClauseParam("BindDocId", _doc_id);
        impl.setNamedWhereClauseParam("BindStatus", _injuryStatus);
        impl.setNamedWhereClauseParam("BindFromDt", _dateFrom);
        impl.setNamedWhereClauseParam("BindToDt", _dateTo);
        impl.setNamedWhereClauseParam("BindInjType", _injuryType);
        impl.executeQuery();

    }

    public void resetInjury() {
        ViewObjectImpl impl = this.getSearchResultsVO1();
        impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        impl.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        impl.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        impl.setNamedWhereClauseParam("BindEmpCode", null);
        impl.setNamedWhereClauseParam("BindDocId", -1);
        impl.setNamedWhereClauseParam("BindStatus", null);
        impl.setNamedWhereClauseParam("BindFromDt", null);
        impl.setNamedWhereClauseParam("BindToDt", null);
        impl.setNamedWhereClauseParam("BindInjType", null);
        impl.executeQuery();
    }

    public void executeBeforeEntry() {
        ViewObjectImpl impl = this.getSearchResultsVO1();
        impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        impl.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        impl.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        impl.setNamedWhereClauseParam("BindEmpCode", null);
        impl.setNamedWhereClauseParam("BindDocId", -1);
        impl.setNamedWhereClauseParam("BindStatus", null);
        impl.setNamedWhereClauseParam("BindFromDt", null);
        impl.setNamedWhereClauseParam("BindToDt", null);
        impl.setNamedWhereClauseParam("BindInjType", null);
        impl.executeQuery();
        ViewObjectImpl cMInjryChkVO1 = this.getHCMInjryChkVO1();
        cMInjryChkVO1.setNamedWhereClauseParam("bindCldId", EbizParams.GLBL_APP_CLD_ID());
        cMInjryChkVO1.setNamedWhereClauseParam("bindOrgId", EbizParams.GLBL_APP_USR_ORG());
       // cMInjryChkVO1.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        cMInjryChkVO1.setNamedWhereClauseParam("bindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        cMInjryChkVO1.executeQuery();
    }

    public void filterInjuryVO() {
        String param = resolvEl("#{pageFlowScope.DOC_ID}").toString();
        ViewObjectImpl cMInjuryVO1 = this.getHCMInjuryVO1();
        cMInjuryVO1.setNamedWhereClauseParam("BindDocId", param);
        cMInjuryVO1.executeQuery();
        /* ViewObjectImpl cMInjuryFromDtlVO3 = this.getHCMInjuryFromDtlVO3();
        cMInjuryFromDtlVO3.setNamedWhereClauseParam("BindDocId", param);
        cMInjuryFromDtlVO3.executeQuery(); */
    }

    public String resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message.toString();
    }

    public void insertIntoHCMInjury() {
        ViewObjectImpl cMInjuryVO1 = this.getHCMInjuryVO1();
        Row createRow = cMInjuryVO1.createRow();
        Row[] filteredRows = cMInjuryVO1.getFilteredRows(null); 
        createRow.setAttribute("DocId", filteredRows[0].getAttribute("DocId"));
        createRow.setAttribute("Test", filteredRows[0].getAttribute(null));
        createRow.setAttribute("opp", filteredRows[0].getAttribute("null"));
        createRow.setAttribute("UsrIdCreate", filteredRows[0].getAttributeCount());
        createRow.setAttribute("usrId", filteredRows[0].getAttribute("DocDispId"));
        createRow.setAttribute("Test", filteredRows[0].getAttribute("FY_ID"));
        createRow.setAttribute("Joy", filteredRows[0].getAttribute("test"));
        //createRow.setAttribute("", arg1);

    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    public String GetInjuryIdFromFun() {
        String dispIdFromFum = "0";

        try {
            dispIdFromFum = this.callStoredFunction(Types.VARCHAR, "FN_HCM_GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                    EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(),
                                                    EbizParams.GLBL_APP_USR_ORG(), 29509,
                                                    this.getHCMInjuryVO1().getCurrentRow().getAttribute("DocId").toString(),
                                                    0, "HCM$INJURY",
                                                    this.getHCMInjuryVO1().getCurrentRow().getAttribute("FyId"), 0
            }).toString();

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("ERROR IN CALLING FUNCTION at EOImpl:" + e.getMessage());
        }
        System.out.println("===========" + dispIdFromFum);

        return dispIdFromFum;
    }

    public void insertIntoTheInquiry() {
        //this.getHCMInjuryVO1().getCurrentRow().setAttribute("DispDocId", GetInjuryIdFromFun());
        // this.getHCMInjuryVO1().executeQuery();
        this.getDBTransaction().postChanges();
    }

    public Boolean insertIntoInquiryDtl() {
        System.out.println("IN insertIntoInquiryDtl--->");
        Boolean flag = false;
        int c = 0;
        int hospital = 0;
        int insuarance = 0;
        int compensation = 0;
        int informTokin = 0;
        int policeCase = 0;
        int labourCase = 0;
        ViewObjectImpl detailsDualVO1 = this.getDetailsDualVO1();
        // detailsDualVO1.executeQuery();
        System.out.println("----" + detailsDualVO1.getRowCount());
        ViewObjectImpl injuryDtlVO = this.getHCMInjuryFromDtlVO3();
        System.out.println("injuryDtlVO no of rows :::: " + injuryDtlVO.getRowCount());
        //Row currentRow = detailsDualVO1.getCurrentRow();i;
        int count = injuryDtlVO.getRowCount();
        Row currentRow = detailsDualVO1.first();
        //    System.out.println("currentRow.getAttribute(\"TransInsurance\") ::: "+currentRow.getAttribute("TransInsurance"));

        if (currentRow != null) {

            System.out.println("currentRow.getAttribute(\"TransInsurance\"):: " +
                               currentRow.getAttribute("TransInsurance"));
            if (currentRow.getAttribute("TransInsurance") != null &&
                currentRow.getAttribute("TransInsurance").equals("Y")) {
                c++;
                insuarance = 1;
            }
            System.out.println("currentRow.getAttribute(\"TransCompensation\")::::: " +
                    currentRow.getAttribute("TransCompensation"));
            if (currentRow.getAttribute("TransCompensation") != null &&
                currentRow.getAttribute("TransCompensation").equals("Y")) {
                c++;
                compensation = 1;
            }
            System.out.println("currentRow.getAttribute(\"TransInformToKin\") ::: " +
                               currentRow.getAttribute("TransInformToKin"));
            if (currentRow.getAttribute("TransInformToKin") != null &&
                currentRow.getAttribute("TransInformToKin").equals("Y")) {
                c++;
                informTokin = 1;
            }
            System.out.println("currentRow.getAttribute(\"TransPoliceCase\")" +
                               currentRow.getAttribute("TransPoliceCase"));
            if (currentRow.getAttribute("TransPoliceCase") != null &&
                currentRow.getAttribute("TransPoliceCase").equals("Y")) {
                c++;
                policeCase = 1;
            }
            System.out.println("currentRow.getAttribute(\"TransLabourOfficer\") ::: " +
                               currentRow.getAttribute("TransLabourOfficer"));
            if (currentRow.getAttribute("TransLabourOfficer") != null &&
                currentRow.getAttribute("TransLabourOfficer").equals("Y")) {
                c++;
                labourCase = 1;
            }
            System.out.println("currentRow.getAttribute(\"TransHospital\") ::: " +
                               currentRow.getAttribute("TransHospital"));
            if (currentRow.getAttribute("TransHospital") != null &&
                currentRow.getAttribute("TransHospital").equals("Y")) {
                c++;
                hospital = 1;
            }

        }
        if (count == 0) {
            if (c > 0) {
                if (hospital > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 134);
                    createRow.setAttribute("CaseFileNo", null);
                    createRow.setAttribute("CompAmt", null);
                    createRow.setAttribute("CourtAddr", null);
                    createRow.setAttribute("FirNo", null);
                    createRow.setAttribute("HospitalAddr", currentRow.getAttribute("HospitalAddrTrans"));
                    createRow.setAttribute("HospitalName", currentRow.getAttribute("HospitalNmTrans"));
                    createRow.setAttribute("InsuranceAmt", null);
                    createRow.setAttribute("PoliceStatName", null);
                    createRow.setAttribute("RelativeName", null);
                    createRow.setAttribute("RelativePhone", null);
                    injuryDtlVO.insertRow(createRow);

                    this.getDBTransaction().postChanges();

                }
                if (insuarance > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 132);
                    createRow.setAttribute("CaseFileNo", null);
                    createRow.setAttribute("CompAmt", null);
                    createRow.setAttribute("CourtAddr", null);
                    createRow.setAttribute("FirNo", null);
                    createRow.setAttribute("HospitalAddr", null);
                    createRow.setAttribute("HospitalName", null);
                    createRow.setAttribute("InsuranceAmt", currentRow.getAttribute("InsuaranceAmtTrans"));
                    createRow.setAttribute("PoliceStatName", null)   ;
                    createRow.setAttribute("RelativeName", null);
                    createRow.setAttribute("RelativePhone", null);
                    injuryDtlVO.insertRow(createRow);
                    this.getDBTransaction().postChanges();
                }
                if (compensation > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 133);
                    createRow.setAttribute("CaseFileNo", null);
                    createRow.setAttribute("CompAmt", currentRow.getAttribute("compensationAmtTrans"));
                    createRow.setAttribute("CourtAddr", null);
                    createRow.setAttribute("FirNo", null);
                    createRow.setAttribute("HospitalAddr", null);
                    createRow.setAttribute("HospitalName", null);
                    createRow.setAttribute("InsuranceAmt", null);
                    createRow.setAttribute("PoliceStatName", null);
                    createRow.setAttribute("RelativeName", null);
                    createRow.setAttribute("RelativePhone", null);
                    injuryDtlVO.insertRow(createRow);
                    this.getDBTransaction().postChanges();
                }
                if (informTokin > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 135);
                    createRow.setAttribute("CaseFileNo", null);
                    createRow.setAttribute("CompAmt", null);
                    createRow.setAttribute("CourtAddr", null);
                    createRow.setAttribute("FirNo", null);
                    createRow.setAttribute("HospitalAddr", null);
                    createRow.setAttribute("HospitalName", null);
                    createRow.setAttribute("InsuranceAmt", null);
                    createRow.setAttribute("PoliceStatName", null);
                    createRow.setAttribute("RelativeName", currentRow.getAttribute("RelativeNmTrans"));
                    createRow.setAttribute("RelativePhone", currentRow.getAttribute("RelativePhTrans"));
                    injuryDtlVO.insertRow(createRow);
                    this.getDBTransaction().postChanges();

                }
                if (policeCase > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 136);
                    createRow.setAttribute("CaseFileNo", null);
                    createRow.setAttribute("CompAmt", null);
                    createRow.setAttribute("CourtAddr", null);
                    createRow.setAttribute("FirNo", currentRow.getAttribute("FIRNoTrans"));
                    createRow.setAttribute("HospitalAddr", null);
                    createRow.setAttribute("HospitalName", null);
                    createRow.setAttribute("InsuranceAmt", null);
                    createRow.setAttribute("PoliceStatName", currentRow.getAttribute("PoliceStationNmTrans"));
                    createRow.setAttribute("RelativeName", null);
                    createRow.setAttribute("RelativePhone", null);
                    injuryDtlVO.insertRow(createRow);
                    this.getDBTransaction().postChanges();

                }
                if (labourCase > 0) {
                    Row createRow = injuryDtlVO.createRow();
                    createRow.setAttribute("ActionTaken", 137);
                    createRow.setAttribute("CaseFileNo", currentRow.getAttribute("CaseFileNoTrans"));
                    createRow.setAttribute("CompAmt", null);
                    createRow.setAttribute("CourtAddr", currentRow.getAttribute("LabourCourtAddr"));
                    createRow.setAttribute("FirNo", null);
                    createRow.setAttribute("HospitalAddr", null);
                    createRow.setAttribute("HospitalName", null);
                    createRow.setAttribute("InsuranceAmt", null);
                    createRow.setAttribute("PoliceStatName", null);
                    createRow.setAttribute("RelativeName", null);
                    createRow.setAttribute("RelativePhone", null);
                    injuryDtlVO.insertRow(createRow);
                    this.getDBTransaction().postChanges();

                }
                flag = true;
            }
        } else if(count>0){
            HCMInjuryVOImpl cMInjuryVO1 = this.getHCMInjuryVO1();
            String docIdvar=    cMInjuryVO1.getCurrentRow().getAttribute("DocId")==null?" ": cMInjuryVO1.getCurrentRow().getAttribute("DocId").toString();
            RowQualifier rowQualifier = new RowQualifier(injuryDtlVO);
            if (c > 0) {
                if (hospital > 0) {
                   
                   
                         // filtering data using method setWhereClause
                            rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                        +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+134);
                                                        
                       // use method getFilteredRows to return Row[] type after filter.
                            Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                            if(filteredRows.length>0){
                                filteredRows[0].setAttribute("HospitalAddr", currentRow.getAttribute("HospitalAddrTrans"));
                                filteredRows[0].setAttribute("HospitalName", currentRow.getAttribute("HospitalNmTrans"));
                            }
                 //   injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();

                }
                if (insuarance > 0) {
                    rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+132);
                                                
                    // use method getFilteredRows to return Row[] type after filter.
                    Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                    if(filteredRows.length>0){
                        filteredRows[0].setAttribute("InsuranceAmt", currentRow.getAttribute("InsuaranceAmtTrans"));
                        //filteredRows[0].setAttribute("HospitalName", currentRow.getAttribute("HospitalNmTrans"));
                    }
                  //  injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();
                   
                }
                if (compensation > 0) {
                    rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+133);
                                                
                    // use method getFilteredRows to return Row[] type after filter.
                    Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                    if(filteredRows.length>0){
                        filteredRows[0].setAttribute("CompAmt", currentRow.getAttribute("compensationAmtTrans"));
                        //filteredRows[0].setAttribute("HospitalName", currentRow.getAttribute("HospitalNmTrans"));
                    }
                  //  injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();
                   
                }
                if (informTokin > 0) {
                    rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+135);
                                                
                    // use method getFilteredRows to return Row[] type after filter.
                    Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                    if(filteredRows.length>0){
                        filteredRows[0].setAttribute("RelativeName", currentRow.getAttribute("RelativeNmTrans"));
                        filteredRows[0].setAttribute("RelativePhone",currentRow.getAttribute("RelativePhTrans"));
                    }
                 //   injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();
                   

                }
                if (policeCase > 0) {
                    rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+136);
                                                
                    // use method getFilteredRows to return Row[] type after filter.
                    Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                    if(filteredRows.length>0){
                        filteredRows[0].setAttribute("FirNo",currentRow.getAttribute("FIRNoTrans"));
                        filteredRows[0].setAttribute("PoliceStatName", currentRow.getAttribute("PoliceStationNmTrans"));
                    }
                 //   injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();
                   

                }
                if (labourCase > 0) {
                    rowQualifier.setWhereClause("CldId='"+EbizParams.GLBL_APP_CLD_ID()+"' AND SlocId="+EbizParams.GLBL_APP_SERV_LOC()+" AND OrgId='"
                                                +EbizParams.GLBL_APP_USR_ORG()+"' AND HoOrgId='"+EbizParams.GLBL_HO_ORG_ID()+"' AND DocId='"+docIdvar+"' AND ActionTaken="+137);
                                                
                    // use method getFilteredRows to return Row[] type after filter.
                    Row[] filteredRows = injuryDtlVO.getFilteredRows(rowQualifier); 
                    if(filteredRows.length>0){
                        filteredRows[0].setAttribute("CaseFileNo",currentRow.getAttribute("CaseFileNoTrans"));
                        filteredRows[0].setAttribute("CourtAddr", currentRow.getAttribute("LabourCourtAddr"));
                    }
                 //   injuryDtlVO.executeQuery();

                    this.getDBTransaction().postChanges();
                   

                }
                flag = true;
            }
        }

        return flag;
    }

    /**
     * Container's getter for SearchResultsVO1.
     * @return SearchResultsVO1
     */
    public SearchResultsVOImpl getSearchResultsVO1() {
        return (SearchResultsVOImpl) findViewObject("SearchResultsVO1");
    }


    /**
     * Container's getter for HCMInjuryFromDtlVO3.
     * @return HCMInjuryFromDtlVO3
     */
    public ViewObjectImpl getHCMInjuryFromDtlVO3() {
        return (ViewObjectImpl) findViewObject("HCMInjuryFromDtlVO3");
    }

    /**
     * Container's getter for HCMInjuryToInjuryDetails1.
     * @return HCMInjuryToInjuryDetails1
     */
    public ViewLinkImpl getHCMInjuryToInjuryDetails1() {
        return (ViewLinkImpl) findViewLink("HCMInjuryToInjuryDetails1");
    }

    /**
     * Container's getter for DetailsDualVO1.
     * @return DetailsDualVO1
     */
    public DetailsDualVOImpl getDetailsDualVO1() {
        return (DetailsDualVOImpl) findViewObject("DetailsDualVO1");
    }

    /**
     * Container's getter for LOVQueryForDispDocId1.
     * @return LOVQueryForDispDocId1
     */
    public ViewObjectImpl getLOVQueryForDispDocId1() {
        return (ViewObjectImpl) findViewObject("LOVQueryForDispDocId1");
    }

    /**
     * Container's getter for LOVEmployeeDetails1.
     * @return LOVEmployeeDetails1
     */
    public ViewObjectImpl getLOVEmployeeDetails1() {
        return (ViewObjectImpl) findViewObject("LOVEmployeeDetails1");
    }

    /**
     * Container's getter for HCMInjryChkVO1.
     * @return HCMInjryChkVO1
     */
    public ViewObjectImpl getHCMInjryChkVO1() {
        return (ViewObjectImpl) findViewObject("HCMInjryChkVO1");
    }
    public void refreshDual()
    {
        ViewObjectImpl vo=this.getDetailsDualVO1();
            vo.executeQuery();
        }
}

