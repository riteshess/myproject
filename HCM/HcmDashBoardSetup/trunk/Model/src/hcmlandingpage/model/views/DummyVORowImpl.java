package hcmlandingpage.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 29 10:22:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DummyVORowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        OrgId,
        CldId,
        SlocId,
        HoOrgId,
        CritariaValueId,
        Critaria,
        CitariaValueNm,
        TransLabel,
        switchLov,
        TransEmpGrpNm,
        TransGrpId,
        TransEmpNm,
        TransEmpDocId,
        TransFrmDate,
        TransToDate,
        transEmpLocNm,
        transEmpLocId,
        transEmpDeptNm,
        transEmpDeptId,
        transNameStartsWith,
        LovSelectCriteraVO1,
        LovLocationNmVO1,
        LovDepartmentNMVO1,
        LovGroupNmVO1,
        LovEmpNameVO1,
        DummyAlpabestsVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return DummyVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return DummyVORowImpl.AttributesEnum.firstIndex() + DummyVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = DummyVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int CRITARIAVALUEID = AttributesEnum.CritariaValueId.index();
    public static final int CRITARIA = AttributesEnum.Critaria.index();
    public static final int CITARIAVALUENM = AttributesEnum.CitariaValueNm.index();
    public static final int TRANSLABEL = AttributesEnum.TransLabel.index();
    public static final int SWITCHLOV = AttributesEnum.switchLov.index();
    public static final int TRANSEMPGRPNM = AttributesEnum.TransEmpGrpNm.index();
    public static final int TRANSGRPID = AttributesEnum.TransGrpId.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSEMPDOCID = AttributesEnum.TransEmpDocId.index();
    public static final int TRANSFRMDATE = AttributesEnum.TransFrmDate.index();
    public static final int TRANSTODATE = AttributesEnum.TransToDate.index();
    public static final int TRANSEMPLOCNM = AttributesEnum.transEmpLocNm.index();
    public static final int TRANSEMPLOCID = AttributesEnum.transEmpLocId.index();
    public static final int TRANSEMPDEPTNM = AttributesEnum.transEmpDeptNm.index();
    public static final int TRANSEMPDEPTID = AttributesEnum.transEmpDeptId.index();
    public static final int TRANSNAMESTARTSWITH = AttributesEnum.transNameStartsWith.index();
    public static final int LOVSELECTCRITERAVO1 = AttributesEnum.LovSelectCriteraVO1.index();
    public static final int LOVLOCATIONNMVO1 = AttributesEnum.LovLocationNmVO1.index();
    public static final int LOVDEPARTMENTNMVO1 = AttributesEnum.LovDepartmentNMVO1.index();
    public static final int LOVGROUPNMVO1 = AttributesEnum.LovGroupNmVO1.index();
    public static final int LOVEMPNAMEVO1 = AttributesEnum.LovEmpNameVO1.index();
    public static final int DUMMYALPABESTSVO1 = AttributesEnum.DummyAlpabestsVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DummyVORowImpl()
    {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId()
    {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        //return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId()
    {
        return (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        //return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId()
    {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        //return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId()
    {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        //return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CritariaValueId.
     * @return the CritariaValueId
     */
    public String getCritariaValueId()
    {
        return (String) getAttributeInternal(CRITARIAVALUEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CritariaValueId.
     * @param value value to set the  CritariaValueId
     */
    public void setCritariaValueId(String value)
    {
        setAttributeInternal(CRITARIAVALUEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Critaria.
     * @return the Critaria
     */
    public Integer getCritaria()
    {
        return (Integer) getAttributeInternal(CRITARIA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Critaria.
     * @param value value to set the  Critaria
     */
    public void setCritaria(Integer value)
    {
        setAttributeInternal(CRITARIA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CitariaValueNm.
     * @return the CitariaValueNm
     */
    public String getCitariaValueNm()
    {
        return (String) getAttributeInternal(CITARIAVALUENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CitariaValueNm.
     * @param value value to set the  CitariaValueNm
     */
    public void setCitariaValueNm(String value)
    {
        setAttributeInternal(CITARIAVALUENM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLabel.
     * @return the TransLabel
     */
    public String getTransLabel()
    {
        return (String) getAttributeInternal(TRANSLABEL);
    }

    public String getCriteraLabel()
    {
        if (getCritaria()!= null)
        {
            System.out.println(getCritaria());
            if (getCritaria().equals(51))
            {
                return "Location";
            }
            if (getCritaria().equals(52))
            {
                return "Department";
            }
            if (getCritaria().equals(53))
            {
                return "Group";
            }

        }
        return "Location";
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLabel.
     * @param value value to set the  TransLabel
     */
    public void setTransLabel(String value)
    {
        setAttributeInternal(TRANSLABEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute switchLov.
     * @return the switchLov
     */
    public String getswitchLov()
    {
        return (String) getAttributeInternal(SWITCHLOV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute switchLov.
     * @param value value to set the  switchLov
     */
    public void setswitchLov(String value)
    {
        setAttributeInternal(SWITCHLOV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpGrpNm.
     * @return the TransEmpGrpNm
     */
    public String getTransEmpGrpNm() {
        return (String) getAttributeInternal(TRANSEMPGRPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpGrpNm.
     * @param value value to set the  TransEmpGrpNm
     */
    public void setTransEmpGrpNm(String value) {
        setAttributeInternal(TRANSEMPGRPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpId.
     * @return the TransGrpId
     */
    public String getTransGrpId() {
        return (String) getAttributeInternal(TRANSGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpId.
     * @param value value to set the  TransGrpId
     */
    public void setTransGrpId(String value) {
        setAttributeInternal(TRANSGRPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpDocId.
     * @return the TransEmpDocId
     */
    public String getTransEmpDocId() {
        return (String) getAttributeInternal(TRANSEMPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpDocId.
     * @param value value to set the  TransEmpDocId
     */
    public void setTransEmpDocId(String value) {
        setAttributeInternal(TRANSEMPDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFrmDate.
     * @return the TransFrmDate
     */
    public Date getTransFrmDate() {
        return (Date) getAttributeInternal(TRANSFRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFrmDate.
     * @param value value to set the  TransFrmDate
     */
    public void setTransFrmDate(Date value) {
        setAttributeInternal(TRANSFRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransToDate.
     * @return the TransToDate
     */
    public Date getTransToDate() {
        return (Date) getAttributeInternal(TRANSTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransToDate.
     * @param value value to set the  TransToDate
     */
    public void setTransToDate(Date value) {
        setAttributeInternal(TRANSTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpLocNm.
     * @return the transEmpLocNm
     */
    public String gettransEmpLocNm()
    {
        return (String) getAttributeInternal(TRANSEMPLOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpLocNm.
     * @param value value to set the  transEmpLocNm
     */
    public void settransEmpLocNm(String value)
    {
        setAttributeInternal(TRANSEMPLOCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpLocId.
     * @return the transEmpLocId
     */
    public String gettransEmpLocId()
    {
        return (String) getAttributeInternal(TRANSEMPLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpLocId.
     * @param value value to set the  transEmpLocId
     */
    public void settransEmpLocId(String value)
    {
        setAttributeInternal(TRANSEMPLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpDeptNm.
     * @return the transEmpDeptNm
     */
    public String gettransEmpDeptNm()
    {
        return (String) getAttributeInternal(TRANSEMPDEPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpDeptNm.
     * @param value value to set the  transEmpDeptNm
     */
    public void settransEmpDeptNm(String value)
    {
        setAttributeInternal(TRANSEMPDEPTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpDeptId.
     * @return the transEmpDeptId
     */
    public String gettransEmpDeptId()
    {
        return (String) getAttributeInternal(TRANSEMPDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpDeptId.
     * @param value value to set the  transEmpDeptId
     */
    public void settransEmpDeptId(String value)
    {
        setAttributeInternal(TRANSEMPDEPTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transNameStartsWith.
     * @return the transNameStartsWith
     */
    public String gettransNameStartsWith()
    {
        return (String) getAttributeInternal(TRANSNAMESTARTSWITH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transNameStartsWith.
     * @param value value to set the  transNameStartsWith
     */
    public void settransNameStartsWith(String value)
    {
        setAttributeInternal(TRANSNAMESTARTSWITH, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSelectCriteraVO1.
     */
    public RowSet getLovSelectCriteraVO1()
    {
        return (RowSet) getAttributeInternal(LOVSELECTCRITERAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLocationNmVO1.
     */
    public RowSet getLovLocationNmVO1()
    {
        return (RowSet) getAttributeInternal(LOVLOCATIONNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDepartmentNMVO1.
     */
    public RowSet getLovDepartmentNMVO1()
    {
        return (RowSet) getAttributeInternal(LOVDEPARTMENTNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGroupNmVO1.
     */
    public RowSet getLovGroupNmVO1()
    {
        return (RowSet) getAttributeInternal(LOVGROUPNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEmpNameVO1.
     */
    public RowSet getLovEmpNameVO1() {
        return (RowSet) getAttributeInternal(LOVEMPNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DummyAlpabestsVO1.
     */
    public RowSet getDummyAlpabestsVO1()
    {
        return (RowSet) getAttributeInternal(DUMMYALPABESTSVO1);
    }

    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

