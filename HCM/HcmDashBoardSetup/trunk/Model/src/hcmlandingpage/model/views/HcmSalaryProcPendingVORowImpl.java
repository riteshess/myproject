package hcmlandingpage.model.views;

import java.sql.Timestamp;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 31 19:02:49 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmSalaryProcPendingVORowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ProcCrtVal,
        Detail,
        ProcFrmDt,
        ProcToDt,
        ProcCrt,
        OpType,
        UserId,
        CrtDt,
        SalProcCriteria,
        SalProcCriteriaVal;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PROCCRTVAL = AttributesEnum.ProcCrtVal.index();
    public static final int DETAIL = AttributesEnum.Detail.index();
    public static final int PROCFRMDT = AttributesEnum.ProcFrmDt.index();
    public static final int PROCTODT = AttributesEnum.ProcToDt.index();
    public static final int PROCCRT = AttributesEnum.ProcCrt.index();
    public static final int OPTYPE = AttributesEnum.OpType.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int SALPROCCRITERIA = AttributesEnum.SalProcCriteria.index();
    public static final int SALPROCCRITERIAVAL = AttributesEnum.SalProcCriteriaVal.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmSalaryProcPendingVORowImpl()
    {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcCrtVal.
     * @return the ProcCrtVal
     */
    public String getProcCrtVal()
    {
        return (String) getAttributeInternal(PROCCRTVAL);
    }

    /**
     * Gets the attribute value for the calculated attribute Detail.
     * @return the Detail
     */
    public String getDetail()
    {
        return (String) getAttributeInternal(DETAIL);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcFrmDt.
     * @return the ProcFrmDt
     */
    public Timestamp getProcFrmDt()
    {
        return (Timestamp) getAttributeInternal(PROCFRMDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcToDt.
     * @return the ProcToDt
     */
    public Timestamp getProcToDt()
    {
        return (Timestamp) getAttributeInternal(PROCTODT);
    }

    /**
     * Gets the attribute value for the calculated attribute ProcCrt.
     * @return the ProcCrt
     */
    public Integer getProcCrt()
    {
        return (Integer) getAttributeInternal(PROCCRT);
    }

    /**
     * Gets the attribute value for the calculated attribute OpType.
     * @return the OpType
     */
    public String getOpType()
    {
        return (String) getAttributeInternal(OPTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute UserId.
     * @return the UserId
     */
    public Integer getUserId()
    {
        return (Integer) getAttributeInternal(USERID);
    }

    /**
     * Gets the attribute value for the calculated attribute CrtDt.
     * @return the CrtDt
     */
    public Timestamp getCrtDt()
    {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute SalProcCriteria.
     * @return the SalProcCriteria
     */
    public String getSalProcCriteria()
    {
        String procCriteria = "";
        if (getProcCrt() != null)
        {
            if (getProcCrt().equals(51))
            {     
                procCriteria = "Location";
            }
            else if (getProcCrt().equals(52))
            {
                procCriteria = "Department";
            }
            else if (getProcCrt().equals(53))
            {
                procCriteria = "Group";
            }
            else if (getProcCrt().equals(54))
            {
                procCriteria = "Employee";
            }
            return  procCriteria;
        }
        return (String) getAttributeInternal(SALPROCCRITERIA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SalProcCriteria.
     * @param value value to set the  SalProcCriteria
     */
    public void setSalProcCriteria(String value)
    {
        setAttributeInternal(SALPROCCRITERIA, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SalProcCriteriaVal.
     * @return the SalProcCriteriaVal
     */
    public String getSalProcCriteriaVal()
    {
        String procCriteria = "";
        if (getProcCrt() != null)
        {
            if (getProcCrt().equals(51))
            {     
                procCriteria = "Location Name:";
            }
            else if (getProcCrt().equals(52))
            {
                procCriteria = "Department Name:";
            }
            else if (getProcCrt().equals(53))
            {
                procCriteria = "Group Name:";
            }
            else if (getProcCrt().equals(54))
            {
                procCriteria = "Employee Name:";
            }
            return  procCriteria;
        }
        return (String) getAttributeInternal(SALPROCCRITERIAVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SalProcCriteriaVal.
     * @param value value to set the  SalProcCriteriaVal
     */
    public void setSalProcCriteriaVal(String value)
    {
        setAttributeInternal(SALPROCCRITERIAVAL, value);
    }
}

