package hcmlandingpage.model.services;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import hcmlandingpage.model.services.common.HcmDashBoardAM;

import java.math.BigDecimal;

import java.sql.SQLException;
import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.ListIterator;

import java.util.Set;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.myfaces.trinidad.context.RequestContext;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 27 11:30:48 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmDashBoardAMImpl extends ApplicationModuleImpl implements HcmDashBoardAM
{
    /**
     * This is the default constructor (do not remove).
     */
    public HcmDashBoardAMImpl()
    {
    }

    public void setGlobalParameters(String cld_id, Integer sloc_id, String ho_org_id, String org_id, Integer usr_id)
    {
        System.out.println("On Page Load global values are= cld=" + cld_id + "sloc_id=" + sloc_id + "ho_org_id=" +
                           ho_org_id + "org_id=" + org_id + "usr_id=" + usr_id);
        // filter only one main  graph with cld,sloc,ho,org//
        
        //filterOverTimePaidGrphWithGlblVar(cld_id, sloc_id, ho_org_id, org_id, usr_id);
        filterAllWfPendingVo(cld_id, sloc_id, ho_org_id, org_id, usr_id);
        filterAlLCurrntVsSupposedVo(cld_id, sloc_id, ho_org_id, org_id, usr_id);
        filterAllIncrmntNtProcessCountVo(cld_id, sloc_id, ho_org_id, org_id, usr_id);
    }
    
    
    public void filterAlLCurrntVsSupposedVo(String cld_id, Integer sloc_id, String ho_org_id, String org_id,
                                                  Integer usr_id)
    {
        
        ViewObjectImpl currntVsSuppVo = this.getCurrntVsSupposedSal1();
        ViewObjectImpl currntVsSuppGrpWiseVo = this.getCurrntVsSupposedSalGrpWiseVO1();
        ViewObjectImpl currntVsSuppDepartWiseVo = this.getCurrntVsSupposedSalDepartWiseVO1();
        ViewObjectImpl currntVsSuppLocWiseVo = this.getCrrntVsSupposedSalLocWiseVO1();

        currntVsSuppVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        currntVsSuppVo.setNamedWhereClauseParam("P", 0);
        currntVsSuppVo.executeQuery();
        
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("P", 0);
        currntVsSuppGrpWiseVo.executeQuery();

        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("P", 0);
        currntVsSuppDepartWiseVo.executeQuery();

        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("P", 0);
        currntVsSuppLocWiseVo.executeQuery();
        
        ViewObjectImpl workExpEmpWiseVo = this.getWorkExpEmpWiseVO1();
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        workExpEmpWiseVo.executeQuery();

    }

    public void filterAllIncrmntNtProcessCountVo(String cld_id, Integer sloc_id, String ho_org_id, String org_id,
                                                  Integer usr_id)
    {
        ViewObjectImpl incrmntNtProcessVo = this.getHcmAlertIncrmntNotProcessCount1();
        incrmntNtProcessVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        incrmntNtProcessVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        incrmntNtProcessVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        incrmntNtProcessVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        incrmntNtProcessVo.executeQuery();

    }

    public void filterOverTimePaidGrphWithGlblVar(String cld_id, Integer sloc_id, String ho_org_id, String org_id,
                                                  Integer usr_id)
    {
        ViewObjectImpl overTimePaidVO = this.getOverTimePaid1();
        ViewObjectImpl overTimePaidDeptWiseVO = this.getOverTimePaidDeptWiseVO1();
        ViewObjectImpl overTimePaidGrpWiseVO = this.getOverTimePaidGrpWiseVO1();
        ViewObjectImpl overTimePaidLocWiseVO = this.getOverTimePaidLocWiseVO1();
        overTimePaidVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        overTimePaidVO.executeQuery();

        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        overTimePaidDeptWiseVO.executeQuery();

        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        overTimePaidGrpWiseVO.executeQuery();

        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        overTimePaidLocWiseVO.executeQuery();

    }
    
    
    public void filterAllWfPendingVo(String cld_id, Integer sloc_id, String ho_org_id, String org_id,
                                                  Integer usr_id)
    {
        ViewObjectImpl salaryProcWfVo = this.getHcmSalaryProcPendingVO1();
        ViewObjectImpl salIncrWfVo = this.getHcmSalaryIncrPendingVO1();
        ViewObjectImpl fnfWfVo = this.getHcmSalaryFNFPendingVO1();
        ViewObjectImpl lvEncashVo = this.getHcmLvEncashPendingVO1();
        
        salaryProcWfVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        salaryProcWfVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        salaryProcWfVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        salaryProcWfVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        salaryProcWfVo.executeQuery();

        salIncrWfVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        salIncrWfVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        salIncrWfVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        salIncrWfVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        salIncrWfVo.executeQuery();
        
        fnfWfVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        fnfWfVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        fnfWfVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        fnfWfVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        fnfWfVo.executeQuery();
        
        lvEncashVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        lvEncashVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        lvEncashVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_org_id);
        lvEncashVo.setNamedWhereClauseParam("BIND_ORG_ID", org_id);
        lvEncashVo.executeQuery();
        



    }


    public Number getDocCountForWorkFlow(Integer DocTypeId, StringBuffer CountType)
    {
        Number count = new Number(0);
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();
        Integer usr_id = EbizParams.GLBL_APP_USR();
        try
        {
            StringBuilder sbul = new StringBuilder("FN_HCM_GET_DOC_CNT(?,?,?,?,?,?)");
            Object[] obj =
            {
                cld_id, sloc_id, org_Id, DocTypeId, usr_id, CountType.toString()
            };
            BigDecimal s = (BigDecimal) ADFModelUtils.callFunction(this, sbul, obj, Types.NUMERIC);
            count = new Number(s);
        }
        catch (Exception e) {
            FacesMessage message =
                new FacesMessage("There have been an error in calling function 'FN_HCM_GET_DOC_CNT' !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
            e.printStackTrace();
        }


        return count;
    }


    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data)
    {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    public String getTkrLableName(Integer tkrPos)
    {
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();
        Integer usr_id = EbizParams.GLBL_APP_USR();
        String tkrId = null;
        String tkrName = null;
        /*   ViewObjectImpl tkrUseVo =null;
            //this.getMmTkrUsrVO();
        tkrUseVo.executeQuery();
        RowQualifier rq = new RowQualifier(tkrUseVo);
        rq.setWhereClause("CldId = '"+cld_id+"' AND  SlocId = "+sloc_id+" AND TkrPos = "+tkrPos+"  AND OrgId ='"+org_Id+"' AND UsrId = "+usr_id);
        Row[] filteredRows = tkrUseVo.getFilteredRows(rq);
        if(filteredRows.length>0){
            tkrId =filteredRows[0].getAttribute("TkrId").toString();
        }
        if(tkrId!=null){
            Row [] mmtkr = null;
                //this.getMmGlblTkrVO().getFilteredRows("TkrId", tkrId);
            if(mmtkr.length>0){
                tkrName = mmtkr[0].getAttribute("TkrNm").toString();
            }
        } */
        return tkrName;
    }

    public String getTkrDataRange(Integer pos)
    {
        System.out.println("tkrPos::" + pos);
        String dataRange = "No Data Range Available";
        //        String tkrId = null;
        //        String tkrName = null;
        //         ViewObjectImpl tkrUseVo = this.getMmTkrUsrVO();
        //         tkrUseVo.executeQuery();
        //         RowQualifier rq = new RowQualifier(tkrUseVo);
        //         rq.setWhereClause("CldId = '"+this.getCldId()+"' AND  SlocId = "+this.getSlocId()+" AND TkrPos = "+pos+"  AND OrgId ='"+this.getOrgId()+"' AND UsrId = "+this.getUsrId());
        //         Row[] filteredRows = tkrUseVo.getFilteredRows(rq);
        //         if(filteredRows.length>0){
        //             tkrId =filteredRows[0].getAttribute("TkrId").toString();
        //         }
        //         System.out.println("TkrIdd:"+tkrId);
        //         if(tkrId!=null){
        //             dataRange=(String)callStoredFunction(Types.VARCHAR, "APP.FN_get_Tkr_INFO(?,?,?,?)", new Object[] {getCldId(),getSlocId(),getOrgId(),tkrId});
        //             System.out.println("dataRange::"+dataRange);
        //             }

        return dataRange;
    }

    public StringBuffer generateInBindVar(ArrayList criteriaId)
    {
        StringBuffer sb = new StringBuffer("");
        if (criteriaId != null && criteriaId.size() > 0)
        {
            ListIterator li = criteriaId.listIterator();
            while (li.hasNext())
            {
                sb.append(li.next() + ", ");
            }
            sb.deleteCharAt(sb.toString().lastIndexOf(","));
        }
        return sb;
    }

    public ArrayList generateBindVarCriteria(HashMap criteria)
    {
        ArrayList AllBindVar = new ArrayList();
        StringBuffer grpInBindVar = new StringBuffer();
        StringBuffer empDocIdVar = new StringBuffer();
        StringBuffer deptInBindVar = new StringBuffer();
        StringBuffer locInBindVar = new StringBuffer();
        ArrayList groupIdAL = (ArrayList) criteria.get("Group");
        ArrayList employeeDocIdAL = (ArrayList) criteria.get("Employee");
        ArrayList deptIdAL = (ArrayList) criteria.get("Department");
        ArrayList locIdAL = (ArrayList) criteria.get("Location");
        ArrayList dateRange = (ArrayList) criteria.get("Daterange");
        if (groupIdAL.size() > 0)
        {
            grpInBindVar = generateInBindVar(groupIdAL);
        }
        if (employeeDocIdAL.size() > 0)
        {
            empDocIdVar = generateInBindVar(employeeDocIdAL);
        }
        if (deptIdAL.size() > 0)
        {
            deptInBindVar = generateInBindVar(deptIdAL);
        }
        if (locIdAL.size() > 0)
        {
            locInBindVar = generateInBindVar(locIdAL);
        }
        System.out.println("grpInBindVar=" + grpInBindVar + " and empDocIdVar=" + empDocIdVar +
                           " and deptInBindVar = " + deptInBindVar + " and" + " locInBindVar =" + locInBindVar);
        AllBindVar.add(0, empDocIdVar);
        AllBindVar.add(1, grpInBindVar);
        AllBindVar.add(2, deptInBindVar);
        AllBindVar.add(3, locInBindVar);
        AllBindVar.add(4, dateRange);
        return AllBindVar;
    }

    public String searchCriteria(HashMap criteria)
    {
        if (criteria.size() > 0)
        {

            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setOverTimePaidBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
            setTurnOverRateBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
            setMaxLeaveTakeneBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
            setCurrntVsSupposedBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
            setLWPTakenBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
            setWorkExperBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public String loadOverTimePaidGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setOverTimePaidBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);


        }

        return "Y";
    }


    public String loadTurnOverGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setTurnOverRateBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public String loadMaxLeaveTakenGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setMaxLeaveTakeneBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public String loadCurrentVsSupposedGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setCurrntVsSupposedBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public String loadLwpTakenGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setLWPTakenBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public String loadWorkExpGraph(HashMap criteria)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setWorkExperBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, 0);
        }

        return "Y";
    }

    public void setOverTimePaidBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar, StringBuffer deptInBindVar,
                                       StringBuffer locInBindVar, ArrayList dateRange, Integer per)
    {

        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        ViewObjectImpl overTimePaidVO = this.getOverTimePaid1();
        ViewObjectImpl overTimePaidDeptWiseVO = this.getOverTimePaidDeptWiseVO1();
        ViewObjectImpl overTimePaidGrpWiseVO = this.getOverTimePaidGrpWiseVO1();
        ViewObjectImpl overTimePaidLocWiseVO = this.getOverTimePaidLocWiseVO1();

        overTimePaidVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        overTimePaidVO.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        overTimePaidVO.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        overTimePaidVO.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        overTimePaidVO.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        overTimePaidVO.setNamedWhereClauseParam("BIND_MAXOT", per);
        overTimePaidVO.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        overTimePaidVO.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        overTimePaidVO.executeQuery();

        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_MAXOT", per);
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        overTimePaidDeptWiseVO.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        overTimePaidDeptWiseVO.executeQuery();

        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_MAXOT", per);
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        overTimePaidGrpWiseVO.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        overTimePaidGrpWiseVO.executeQuery();


        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_MAXOT", per);
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        overTimePaidLocWiseVO.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        overTimePaidLocWiseVO.executeQuery();

    }

    public void setTurnOverRateBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar, StringBuffer deptInBindVar,
                                       StringBuffer locInBindVar, ArrayList dateRange, Integer per)
    {
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        ViewObjectImpl turnOverRateVo = this.getTurnOverRate1();
        ViewObjectImpl turnOverRateGrpWiseVo = this.getTurnOverRateGrpWiseVO1();
        ViewObjectImpl turnOverRateDeptWiseVo = this.getTurnOverRateDeptWiseVO1();
        ViewObjectImpl turnOverRateLocWiseVo = this.getTurnOverRateLocWiseVO1();

        turnOverRateVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        turnOverRateVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        turnOverRateVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        turnOverRateVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        turnOverRateVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        turnOverRateVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        turnOverRateVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        turnOverRateVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        turnOverRateVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        turnOverRateVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        turnOverRateVo.executeQuery();

        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_MAXVALUE", per);
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        turnOverRateGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        turnOverRateGrpWiseVo.executeQuery();

        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_MAXVALUE", per);
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        turnOverRateDeptWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        turnOverRateDeptWiseVo.executeQuery();


        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", grpInBindVar);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", grpInBindVar);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", grpInBindVar);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_MAXVALUE", per);
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        turnOverRateLocWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        turnOverRateLocWiseVo.executeQuery();


    }

    public void setMaxLeaveTakeneBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar,
                                         StringBuffer deptInBindVar, StringBuffer locInBindVar, ArrayList dateRange,
                                         Integer per)
    {
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        ViewObjectImpl maxLeaveTakenVo = this.getMaxLeaveTaken1();
        ViewObjectImpl maxLeaveTakenDepartWiseVo = this.getMaxLeaveTakenDepartWiseVO1();
        ViewObjectImpl maxLeaveTakenGrpWiseVo = this.getMaxLeaveTakenGrpWiseVO1();
        ViewObjectImpl maxLeaveTakenLocWiseVo = this.getMaxLeaveTakenLocationWiseVO1();

        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        maxLeaveTakenVo.setNamedWhereClauseParam("BIND_MAXLEAVLIMIT", per);
        maxLeaveTakenVo.executeQuery();

        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        maxLeaveTakenDepartWiseVo.setNamedWhereClauseParam("BIND_MAXLEAVLIMIT", per);
        maxLeaveTakenDepartWiseVo.executeQuery();

        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        maxLeaveTakenGrpWiseVo.setNamedWhereClauseParam("BIND_MAXLEAVLIMIT", per);
        maxLeaveTakenGrpWiseVo.executeQuery();

        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        maxLeaveTakenLocWiseVo.setNamedWhereClauseParam("BIND_MAXLEAVLIMIT", per);
        maxLeaveTakenLocWiseVo.executeQuery();
    }

    public void setCurrntVsSupposedBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar,
                                           StringBuffer deptInBindVar, StringBuffer locInBindVar, ArrayList dateRange,
                                           Integer per)
    {
        ViewObjectImpl currntVsSuppVo = this.getCurrntVsSupposedSal1();
        ViewObjectImpl currntVsSuppGrpWiseVo = this.getCurrntVsSupposedSalGrpWiseVO1();
        ViewObjectImpl currntVsSuppDepartWiseVo = this.getCurrntVsSupposedSalDepartWiseVO1();
        ViewObjectImpl currntVsSuppLocWiseVo = this.getCrrntVsSupposedSalLocWiseVO1();


        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        currntVsSuppVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        currntVsSuppVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        currntVsSuppVo.setNamedWhereClauseParam("P", per);
        currntVsSuppVo.executeQuery();

        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        currntVsSuppGrpWiseVo.setNamedWhereClauseParam("P", per);
        currntVsSuppGrpWiseVo.executeQuery();

        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        currntVsSuppDepartWiseVo.setNamedWhereClauseParam("P", per);
        currntVsSuppDepartWiseVo.executeQuery();

        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        currntVsSuppLocWiseVo.setNamedWhereClauseParam("P", per);
        currntVsSuppLocWiseVo.executeQuery();
    }


    public void setLWPTakenBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar, StringBuffer deptInBindVar,
                                   StringBuffer locInBindVar, ArrayList dateRange, Integer per)
    {
        ViewObjectImpl lwpTakenEmpWiseVo = this.getLwpTakenEmpWiseVO1();
        ViewObjectImpl lwpTakenDeptWiseVo = this.getLwpTakenDeptWiseVO1();
        ViewObjectImpl lwpTakenGrpWiseVo = this.getLwpTakenGrpWiseVO1();
        ViewObjectImpl lwpTakenLocWiseVo = this.getLwpTakenLocWiseVO1();
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        lwpTakenEmpWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        lwpTakenEmpWiseVo.executeQuery();

        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        lwpTakenDeptWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        lwpTakenDeptWiseVo.executeQuery();

        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        lwpTakenGrpWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        lwpTakenGrpWiseVo.executeQuery();

        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_PROC_FRM_DT", dateRange.get(0));
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_PROC_TO_DT", dateRange.get(1));
        lwpTakenLocWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        lwpTakenLocWiseVo.executeQuery();
    }


    public void setWorkExperBindVar(StringBuffer grpInBindVar, StringBuffer empDocIdVar, StringBuffer deptInBindVar,
                                    StringBuffer locInBindVar, ArrayList dateRange, Integer per)
    {
        ViewObjectImpl workExpEmpWiseVo = this.getWorkExpEmpWiseVO1();
        ViewObjectImpl workExpDeptWiseVo = this.getWorkExpDeptWiseVO1();
        ViewObjectImpl workExpGrpWiseVo = this.getWorkExpGrpWiseVO1();
        ViewObjectImpl workExpLocWiseVo = this.getWorkExpLocWiseVO1();
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();

        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        workExpEmpWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        workExpEmpWiseVo.executeQuery();

        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        workExpDeptWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        workExpDeptWiseVo.executeQuery();

        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        workExpGrpWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        workExpGrpWiseVo.executeQuery();

        workExpLocWiseVo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_DOC_ID", empDocIdVar);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_EMP_GRP_ID", grpInBindVar);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_EMP_LOC_ID", locInBindVar);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_EMP_DEPT_ID", deptInBindVar);
        workExpLocWiseVo.setNamedWhereClauseParam("BIND_MAX_VAL", per);
        workExpLocWiseVo.executeQuery();
    }

    public String setMaxSpposedSalaryInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);

            setCurrntVsSupposedBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }


    public String setMaxLeaveValueInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);

            setMaxLeaveTakeneBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }

    public String setMaxTurnOverValueInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);
            setTurnOverRateBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }


    public String setOverTimePaidValueInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);

            setOverTimePaidBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }

    public String setMaxLwpInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            System.out.println(AllBindVar);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);

            setLWPTakenBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }

    public String setMaxWorkExpInCriteria(HashMap criteria, Integer perValue)
    {
        if (criteria.size() > 0)
        {
            ArrayList AllBindVar = generateBindVarCriteria(criteria);
            System.out.println(AllBindVar);
            StringBuffer empDocIdVar = (StringBuffer) AllBindVar.get(0);
            StringBuffer grpInBindVar = (StringBuffer) AllBindVar.get(1);
            StringBuffer deptInBindVar = (StringBuffer) AllBindVar.get(2);
            StringBuffer locInBindVar = (StringBuffer) AllBindVar.get(3);
            ArrayList dateRange = (ArrayList) AllBindVar.get(4);

            setWorkExperBindVar(grpInBindVar, empDocIdVar, deptInBindVar, locInBindVar, dateRange, perValue);
        }

        return "Y";
    }

    public String filterAllWFViewPageVO(String type, String vOType)
    {
       System.out.println("Vo Type is="+vOType);
        Integer usr_id = EbizParams.GLBL_APP_USR();
        ViewObjectImpl vo = null;
        if (vOType != null)
        {
            if (vOType.equals("SalProc"))
            {
               vo = getHcmSalaryProcPendingVO1();
            }
            else if (vOType.equals("SalIncr"))
            {
                vo = getHcmSalaryIncrPendingVO1();
            }
            else if (vOType.equals("EncashLeave"))
            {
                vo = this.getHcmLvEncashPendingVO1();
            }
            else if (vOType.equals("FullAndFinal"))
            {
               vo = this.getHcmSalaryFNFPendingVO1();
            }
            if(vo!=null)
            {
                ViewCriteria vc = vo.getViewCriteria("setVoTypeVC");
                vo.applyViewCriteria(vc);
                vo.setNamedWhereClauseParam("Bind_Wf_Type", type);
                vo.setNamedWhereClauseParam("Bind_User_Id", usr_id);
                vo.executeQuery();
            }
            

        }

        return "Y";
    }
    
    public String filterAlertsIncrNotProcessPageVO(String vOType)
    {
       System.out.println("Vo Type is="+vOType);
        ViewObjectImpl vo = null;
        String cld_id = EbizParams.GLBL_APP_CLD_ID();
        Integer sloc_id = EbizParams.GLBL_APP_SERV_LOC();
        String ho_Org_id = EbizParams.GLBL_HO_ORG_ID();
        String org_Id = EbizParams.GLBL_APP_USR_ORG();
        if (vOType != null)
        {
            if (vOType.equals("IncrmntNotProcess"))
            {
               vo = getHCMAlertIncrmntNotProcess1();
            }
           
            if(vo!=null)
            {
                vo.setNamedWhereClauseParam("BIND_CLD_ID", cld_id);
                vo.setNamedWhereClauseParam("BIND_SLOC_ID", sloc_id);
                vo.setNamedWhereClauseParam("BIND_HO_ORG_ID", ho_Org_id);
                vo.setNamedWhereClauseParam("BIND_ORG_ID", org_Id);
                vo.executeQuery();
            }
            

        }

        return "Y";
    }


    public String filterGraphForNameStartsWith(String graphTypeId, String startsWith)
    {
       System.out.println("starts with="+startsWith);
        ViewObjectImpl vo = null;
        if (graphTypeId != null)
        {
            if (graphTypeId.equals("EmpWiseCurrVsSuppSal"))
            {
                vo = this.getCurrntVsSupposedSal1();
            }
            else if (graphTypeId.equals("GrpWiseCurrVsSuppSal"))
            {
                vo = this.getCurrntVsSupposedSalGrpWiseVO1();
            }
            else if (graphTypeId.equals("DeptWiseCurrVsSuppSal"))
            {
                vo = this.getCurrntVsSupposedSalDepartWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseCurrVsSuppSal"))
            {
                vo = this.getCrrntVsSupposedSalLocWiseVO1();
            }
            else if (graphTypeId.equals("EmpWiseMaxLeaveTaken"))
            {
                vo = this.getMaxLeaveTaken1();
            }
            else if (graphTypeId.equals("DeptWiseMaxLeaveTaken"))
            {
                vo = this.getMaxLeaveTakenDepartWiseVO1();
            }
            else if (graphTypeId.equals("GrpWiseMaxLeaveTaken"))
            {
                vo = this.getMaxLeaveTakenGrpWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseMaxLeaveTaken"))
            {
                vo = this.getMaxLeaveTakenLocationWiseVO1();
            }
            else if (graphTypeId.equals("EmpWiseOverTimePaid"))
            {
                vo = this.getOverTimePaid1();
            }
            else if (graphTypeId.equals("GrpWiseOverTimePaid"))
            {
                vo = this.getOverTimePaid1();
            }
            else if (graphTypeId.equals("DeptWiseOverTimePaid"))
            {
                vo = this.getOverTimePaidDeptWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseOverTimePaid"))
            {
                vo = this.getOverTimePaidLocWiseVO1();
            }
            else if (graphTypeId.equals("EmpWiseTurnOverRate"))
            {
                vo = this.getTurnOverRate1();
            }
            else if (graphTypeId.equals("GrpWiseTurnOverRate"))
            {
                vo = this.getOverTimePaidGrpWiseVO1();
            }
            else if (graphTypeId.equals("DeptWiseTurnOverRate"))
            {
                vo = this.getOverTimePaidDeptWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseTurnOverRate"))
            {
                vo = this.getOverTimePaidLocWiseVO1();
            }
            else if (graphTypeId.equals("EmpWiseLWPTaken"))
            {
                vo = this.getLwpTakenEmpWiseVO1();
            }
            else if (graphTypeId.equals("GrpWiseLWPTaken"))
            {
                vo = this.getLwpTakenGrpWiseVO1();
            }
            else if (graphTypeId.equals("DeptWiseLWPTaken"))
            {
                vo = this.getLwpTakenDeptWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseLWPTaken"))
            {
                vo = this.getLwpTakenDeptWiseVO1();
            }
            else if (graphTypeId.equals("EmpWiseExperience"))
            {
                vo = this.getWorkExpEmpWiseVO1();
            }
            else if (graphTypeId.equals("GrpWiseExperience"))
            {
                vo = this.getWorkExpGrpWiseVO1();
            }
            else if (graphTypeId.equals("LocWiseExperience"))
            {
                vo = this.getWorkExpLocWiseVO1();
            }
            else if (graphTypeId.equals("DeptWiseExperience"))
            {
                vo = this.getWorkExpDeptWiseVO1();
            }
            ViewCriteria vc = vo.getViewCriteria("SearchWithStartsAlphabestVC");
            vo.applyViewCriteria(vc);
            vo.setNamedWhereClauseParam("BIND_NAME_STARTS_WITH", startsWith);
            vo.executeQuery();

        }

        return "Y";
    }
    
    

    /**
     * Container's getter for Dummy1.
     * @return Dummy1
     */
    public ViewObjectImpl getDummy1()
    {
        return (ViewObjectImpl) findViewObject("Dummy1");
    }

    /**
     * Container's getter for TopPaidEmployeeGraph1.
     * @return TopPaidEmployeeGraph1
     */
    public ViewObjectImpl getTopPaidEmployeeGraph()
    {
        return (ViewObjectImpl) findViewObject("TopPaidEmployeeGraph");
    }

    /**
     * Container's getter for HeadCountGraph1.
     * @return HeadCountGraph1
     */
    public ViewObjectImpl getHeadCountGraph1()
    {
        return (ViewObjectImpl) findViewObject("HeadCountGraph1");
    }

    /**
     * Container's getter for EmployeeAvgSalVO1.
     * @return EmployeeAvgSalVO1
     */
    public ViewObjectImpl getEmployeeAvgSalVO1()
    {
        return (ViewObjectImpl) findViewObject("EmployeeAvgSalVO1");
    }

    /**
     * Container's getter for ExtraHourWorkedVO1.
     * @return ExtraHourWorkedVO1
     */
    public ViewObjectImpl getExtraHourWorkedVO1()
    {
        return (ViewObjectImpl) findViewObject("ExtraHourWorkedVO1");
    }


    /**
     * Container's getter for TransientVO1.
     * @return TransientVO1
     */
    public ViewObjectImpl getTransientVO1()
    {
        return (ViewObjectImpl) findViewObject("TransientVO1");
    }

    /*------------------------------Ticker Function--------------------------*/
    public Number getOverTime(String type)
    {
        Object coaIdO = ADFModelUtils.callFunction(this, new StringBuilder("HCM.FN_HCM_TKR_TOT_OT(?)"), new Object[]
        {
            type
        }, Types.NUMERIC);
        System.out.println("------" + coaIdO);

        try
        {
            Number n;
            n = new Number(coaIdO);
            return n;
        }
        catch (SQLException e) {
        }
        return new Number(0);
        //return (coaIdO == null ? null : (Number) (coaIdO));
    }

    public Number getGrossSalary(String type)
    {
        Object coaIdO = ADFModelUtils.callFunction(this, new StringBuilder("HCM.FN_HCM_TKR_TOT_GROSS(?)"), new Object[]
        {
            type
        }, Types.NUMERIC);
        System.out.println("----------" + coaIdO);
        try
        {
            Number n;
            n = new Number(coaIdO);
            return n;
        }
        catch (SQLException e) {
        }
        return new Number(0);
        //return (coaIdO == null ? null : (Number) (coaIdO));
    }

    public Number getABSENT(String type)
    {
        Object coaIdO = ADFModelUtils.callFunction(this, new StringBuilder("HCM.FN_HCM_TKR_TOT_ABSENT(?)"), new Object[]
        {
            type
        }, Types.NUMERIC);
        System.out.println("----------------" + coaIdO);
        try
        {
            Number n;
            n = new Number(coaIdO);
            return n;
        }
        catch (SQLException e) {
        }
        return new Number(0);
        // return (coaIdO == null ? null : (Number) (coaIdO));
    }


    /**
     * Container's getter for TransIdNameVO1.
     * @return TransIdNameVO1
     */
    public ViewObjectImpl getTransIdNameVO1()
    {
        return (ViewObjectImpl) findViewObject("TransIdNameVO1");
    }

    /**
     * Container's getter for OverTimePaid1.
     * @return OverTimePaid1
     */
    public ViewObjectImpl getOverTimePaid1()
    {
        return (ViewObjectImpl) findViewObject("OverTimePaid1");
    }

    /**
     * Container's getter for TurnOverRate1.
     * @return TurnOverRate1
     */
    public ViewObjectImpl getTurnOverRate1()
    {
        return (ViewObjectImpl) findViewObject("TurnOverRate1");
    }

    /**
     * Container's getter for MaxLeaveTaken1.
     * @return MaxLeaveTaken1
     */
    public ViewObjectImpl getMaxLeaveTaken1()
    {
        return (ViewObjectImpl) findViewObject("MaxLeaveTaken1");
    }

    /**
     * Container's getter for CurrntVsSupposedSal1.
     * @return CurrntVsSupposedSal1
     */
    public ViewObjectImpl getCurrntVsSupposedSal1()
    {
        return (ViewObjectImpl) findViewObject("CurrntVsSupposedSal1");
    }

    /**
     * Container's getter for MaxLeaveTakenDepartWiseVO1.
     * @return MaxLeaveTakenDepartWiseVO1
     */
    public ViewObjectImpl getMaxLeaveTakenDepartWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("MaxLeaveTakenDepartWiseVO1");
    }

    /**
     * Container's getter for MaxLeaveTakenGrpWiseVO1.
     * @return MaxLeaveTakenGrpWiseVO1
     */
    public ViewObjectImpl getMaxLeaveTakenGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("MaxLeaveTakenGrpWiseVO1");
    }

    /**
     * Container's getter for MaxLeaveTakenLocationWiseVO1.
     * @return MaxLeaveTakenLocationWiseVO1
     */
    public ViewObjectImpl getMaxLeaveTakenLocationWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("MaxLeaveTakenLocationWiseVO1");
    }

    /**
     * Container's getter for CrrntVsSupposedSalLocWiseVO1.
     * @return CrrntVsSupposedSalLocWiseVO1
     */
    public ViewObjectImpl getCrrntVsSupposedSalLocWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("CrrntVsSupposedSalLocWiseVO1");
    }

    /**
     * Container's getter for CurrntVsSupposedSalDepartWiseVO1.
     * @return CurrntVsSupposedSalDepartWiseVO1
     */
    public ViewObjectImpl getCurrntVsSupposedSalDepartWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("CurrntVsSupposedSalDepartWiseVO1");
    }

    /**
     * Container's getter for CurrntVsSupposedSalGrpWiseVO1.
     * @return CurrntVsSupposedSalGrpWiseVO1
     */
    public ViewObjectImpl getCurrntVsSupposedSalGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("CurrntVsSupposedSalGrpWiseVO1");
    }

    /**
     * Container's getter for OverTimePaidDeptWiseVO1.
     * @return OverTimePaidDeptWiseVO1
     */
    public ViewObjectImpl getOverTimePaidDeptWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("OverTimePaidDeptWiseVO1");
    }

    /**
     * Container's getter for OverTimePaidGrpWiseVO1.
     * @return OverTimePaidGrpWiseVO1
     */
    public ViewObjectImpl getOverTimePaidGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("OverTimePaidGrpWiseVO1");
    }

    /**
     * Container's getter for OverTimePaidLocWiseVO1.
     * @return OverTimePaidLocWiseVO1
     */
    public ViewObjectImpl getOverTimePaidLocWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("OverTimePaidLocWiseVO1");
    }


    /**
     * Container's getter for TurnOverRateDeptWiseVO1.
     * @return TurnOverRateDeptWiseVO1
     */
    public ViewObjectImpl getTurnOverRateDeptWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("TurnOverRateDeptWiseVO1");
    }

    /**
     * Container's getter for TurnOverRateGrpWiseVO1.
     * @return TurnOverRateGrpWiseVO1
     */
    public ViewObjectImpl getTurnOverRateGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("TurnOverRateGrpWiseVO1");
    }

    /**
     * Container's getter for TurnOverRateLocWiseVO1.
     * @return TurnOverRateLocWiseVO1
     */
    public ViewObjectImpl getTurnOverRateLocWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("TurnOverRateLocWiseVO1");
    }

    /**
     * Container's getter for LwpTakenDeptWiseVO1.
     * @return LwpTakenDeptWiseVO1
     */
    public ViewObjectImpl getLwpTakenDeptWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("LwpTakenDeptWiseVO1");
    }

    /**
     * Container's getter for LwpTakenEmpWiseVO1.
     * @return LwpTakenEmpWiseVO1
     */
    public ViewObjectImpl getLwpTakenEmpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("LwpTakenEmpWiseVO1");
    }

    /**
     * Container's getter for LwpTakenGrpWiseVO1.
     * @return LwpTakenGrpWiseVO1
     */
    public ViewObjectImpl getLwpTakenGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("LwpTakenGrpWiseVO1");
    }

    /**
     * Container's getter for LwpTakenLocWiseVO1.
     * @return LwpTakenLocWiseVO1
     */
    public ViewObjectImpl getLwpTakenLocWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("LwpTakenLocWiseVO1");
    }

    /**
     * Container's getter for WorkExpDeptWiseVO1.
     * @return WorkExpDeptWiseVO1
     */
    public ViewObjectImpl getWorkExpDeptWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("WorkExpDeptWiseVO1");
    }

    /**
     * Container's getter for WorkExpEmpWiseVO1.
     * @return WorkExpEmpWiseVO1
     */
    public ViewObjectImpl getWorkExpEmpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("WorkExpEmpWiseVO1");
    }

    /**
     * Container's getter for WorkExpGrpWiseVO1.
     * @return WorkExpGrpWiseVO1
     */
    public ViewObjectImpl getWorkExpGrpWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("WorkExpGrpWiseVO1");
    }

    /**
     * Container's getter for WorkExpLocWiseVO1.
     * @return WorkExpLocWiseVO1
     */
    public ViewObjectImpl getWorkExpLocWiseVO1()
    {
        return (ViewObjectImpl) findViewObject("WorkExpLocWiseVO1");
    }

    /**
     * Container's getter for HcmSalaryIncrPendingVO1.
     * @return HcmSalaryIncrPendingVO1
     */
    public ViewObjectImpl getHcmSalaryIncrPendingVO1()
    {
        return (ViewObjectImpl) findViewObject("HcmSalaryIncrPendingVO1");
    }

    /**
     * Container's getter for HcmSalaryProcPendingVO1.
     * @return HcmSalaryProcPendingVO1
     */
    public ViewObjectImpl getHcmSalaryProcPendingVO1()
    {
        return (ViewObjectImpl) findViewObject("HcmSalaryProcPendingVO1");
    }


    /**
     * Container's getter for HcmSalaryFNFPendingVO1.
     * @return HcmSalaryFNFPendingVO1
     */
    public ViewObjectImpl getHcmSalaryFNFPendingVO1()
    {
        return (ViewObjectImpl) findViewObject("HcmSalaryFNFPendingVO1");
    }

    /**
     * Container's getter for HcmLvEncashPendingVO1.
     * @return HcmLvEncashPendingVO1
     */
    public ViewObjectImpl getHcmLvEncashPendingVO1()
    {
        return (ViewObjectImpl) findViewObject("HcmLvEncashPendingVO1");
    }

    /**
     * Container's getter for HCMAlertIncrmntNotProcess1.
     * @return HCMAlertIncrmntNotProcess1
     */
    public ViewObjectImpl getHCMAlertIncrmntNotProcess1()
    {
        return (ViewObjectImpl) findViewObject("HCMAlertIncrmntNotProcess1");
    }

    /**
     * Container's getter for HcmAlertIncrmntNotProcessCount1.
     * @return HcmAlertIncrmntNotProcessCount1
     */
    public ViewObjectImpl getHcmAlertIncrmntNotProcessCount1()
    {
        return (ViewObjectImpl) findViewObject("HcmAlertIncrmntNotProcessCount1");
    }
}

