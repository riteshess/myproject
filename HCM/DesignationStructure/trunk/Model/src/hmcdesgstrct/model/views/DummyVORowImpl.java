package hmcdesgstrct.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 15 10:08:38 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DummyVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        transDeptId,
        transDesignID,
        transDeptDesc,
        transOrgId,
        transSlocId,
        transHoOrgId,
        transCldId,
        LovAppDepartVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int TRANSDEPTID = AttributesEnum.transDeptId.index();
    public static final int TRANSDESIGNID = AttributesEnum.transDesignID.index();
    public static final int TRANSDEPTDESC = AttributesEnum.transDeptDesc.index();
    public static final int TRANSORGID = AttributesEnum.transOrgId.index();
    public static final int TRANSSLOCID = AttributesEnum.transSlocId.index();
    public static final int TRANSHOORGID = AttributesEnum.transHoOrgId.index();
    public static final int TRANSCLDID = AttributesEnum.transCldId.index();
    public static final int LOVAPPDEPARTVO1 = AttributesEnum.LovAppDepartVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DummyVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Selectobjects0.
     * @param value value to set the  Selectobjects0
     */
    public void setSelectobjects0(String value) {
        setAttributeInternal(SELECTOBJECTS0, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transDeptId.
     * @return the transDeptId
     */
    public String gettransDeptId() {
        return (String) getAttributeInternal(TRANSDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDeptId.
     * @param value value to set the  transDeptId
     */
    public void settransDeptId(String value) {
        setAttributeInternal(TRANSDEPTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transDesignID.
     * @return the transDesignID
     */
    public String gettransDesignID() {
        return (String) getAttributeInternal(TRANSDESIGNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDesignID.
     * @param value value to set the  transDesignID
     */
    public void settransDesignID(String value) {
        setAttributeInternal(TRANSDESIGNID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transDeptDesc.
     * @return the transDeptDesc
     */
    public String gettransDeptDesc() {
        return (String) getAttributeInternal(TRANSDEPTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDeptDesc.
     * @param value value to set the  transDeptDesc
     */
    public void settransDeptDesc(String value) {
        setAttributeInternal(TRANSDEPTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transOrgId.
     * @return the transOrgId
     */
    public String gettransOrgId() {
        return (String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
    }

    /**
     * Gets the attribute value for the calculated attribute transSlocId.
     * @return the transSlocId
     */
    public Integer gettransSlocId() {
        return  Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
    }

    /**
     * Gets the attribute value for the calculated attribute transHoOrgId.
     * @return the transHoOrgId
     */
    public String gettransHoOrgId() {
        return (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }

    /**
     * Gets the attribute value for the calculated attribute transCldId.
     * @return the transCldId
     */
    public String gettransCldId() {
        return (String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppDepartVO1.
     */
    public RowSet getLovAppDepartVO1() {
        return (RowSet) getAttributeInternal(LOVAPPDEPARTVO1);
    }
    public String resolvEl(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String msg = valueExp.getValue(elContext).toString();
           return msg;
       }
}

