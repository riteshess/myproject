package hmcdesgstrct.model.views;

import hmcdesgstrct.model.entities.DesignationtEOImpl;

import hmcdesgstrct.model.services.HCMDesgStructAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 30 11:54:49 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DesignationVORowImpl extends ViewRowImpl
{


    public static final int ENTITY_DESIGNATIONTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActvFlg,
        CldId,
        DeptId,
        DesgId,
        DocId,
        HoOrgId,
        JobDesc,
        RptgDesgId,
        SlocId,
        StructId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidEndDt,
        ValidStrtDt,
        TransMode,
        TransIsDesgUsed,
        LegacyCode,
        DesgCode,
        EmpRefChk,
        transRefChk,
        OrgDesignation,
        HcmDesgReffDtl,
        DepartmentsVO1,
        LovDesignationNmVO1,
        LovReportingDesigVO1,
        AppSecUserVO1,
        AppSecUserVO2;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTVFLG = AttributesEnum.ActvFlg.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPTID = AttributesEnum.DeptId.index();
    public static final int DESGID = AttributesEnum.DesgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int JOBDESC = AttributesEnum.JobDesc.index();
    public static final int RPTGDESGID = AttributesEnum.RptgDesgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRUCTID = AttributesEnum.StructId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int TRANSISDESGUSED = AttributesEnum.TransIsDesgUsed.index();
    public static final int LEGACYCODE = AttributesEnum.LegacyCode.index();
    public static final int DESGCODE = AttributesEnum.DesgCode.index();
    public static final int EMPREFCHK = AttributesEnum.EmpRefChk.index();
    public static final int TRANSREFCHK = AttributesEnum.transRefChk.index();
    public static final int ORGDESIGNATION = AttributesEnum.OrgDesignation.index();
    public static final int HCMDESGREFFDTL = AttributesEnum.HcmDesgReffDtl.index();
    public static final int DEPARTMENTSVO1 = AttributesEnum.DepartmentsVO1.index();
    public static final int LOVDESIGNATIONNMVO1 = AttributesEnum.LovDesignationNmVO1.index();
    public static final int LOVREPORTINGDESIGVO1 = AttributesEnum.LovReportingDesigVO1.index();
    public static final int APPSECUSERVO1 = AttributesEnum.AppSecUserVO1.index();
    public static final int APPSECUSERVO2 = AttributesEnum.AppSecUserVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DesignationVORowImpl() {
    }

    /**
     * Gets DesignationtEO entity object.
     * @return the DesignationtEO
     */
    public DesignationtEOImpl getDesignationtEO() {
        return (DesignationtEOImpl) getEntity(ENTITY_DESIGNATIONTEO);
    }

    /**
     * Gets the attribute value for ACTV_FLG using the alias name ActvFlg.
     * @return the ACTV_FLG
     */
    public String getActvFlg() {
        return (String) getAttributeInternal(ACTVFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV_FLG using the alias name ActvFlg.
     * @param value value to set the ACTV_FLG
     */
    public void setActvFlg(String value) {
        setAttributeInternal(ACTVFLG, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPT_ID using the alias name DeptId.
     * @return the DEPT_ID
     */
    public String getDeptId() {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPT_ID using the alias name DeptId.
     * @param value value to set the DEPT_ID
     */
    public void setDeptId(String value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for DESG_ID using the alias name DesgId.
     * @return the DESG_ID
     */
    public String getDesgId() {
        return (String) getAttributeInternal(DESGID);
    }

    /**
     * Sets <code>value</code> as attribute value for DESG_ID using the alias name DesgId.
     * @param value value to set the DESG_ID
     */
    public void setDesgId(String value) {
        setAttributeInternal(DESGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for JOB_DESC using the alias name JobDesc.
     * @return the JOB_DESC
     */
    public String getJobDesc() {
        return (String) getAttributeInternal(JOBDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for JOB_DESC using the alias name JobDesc.
     * @param value value to set the JOB_DESC
     */
    public void setJobDesc(String value) {
        setAttributeInternal(JOBDESC, value);
    }

    /**
     * Gets the attribute value for RPTG_DESG_ID using the alias name RptgDesgId.
     * @return the RPTG_DESG_ID
     */
    public String getRptgDesgId() {
        return (String) getAttributeInternal(RPTGDESGID);
    }

    /**
     * Sets <code>value</code> as attribute value for RPTG_DESG_ID using the alias name RptgDesgId.
     * @param value value to set the RPTG_DESG_ID
     */
    public void setRptgDesgId(String value) {
        setAttributeInternal(RPTGDESGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRUCT_ID using the alias name StructId.
     * @return the STRUCT_ID
     */
    public String getStructId() {
        return (String) getAttributeInternal(STRUCTID);
    }

    /**
     * Sets <code>value</code> as attribute value for STRUCT_ID using the alias name StructId.
     * @param value value to set the STRUCT_ID
     */
    public void setStructId(String value) {
        setAttributeInternal(STRUCTID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @return the VALID_END_DT
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @param value value to set the VALID_END_DT
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @return the VALID_STRT_DT
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @param value value to set the VALID_STRT_DT
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode() {
        if(resolvEl("#{pageFlowScope.ADD_EDIT_MODE}") != null)
                return (String) resolvEl("#{pageFlowScope.ADD_EDIT_MODE}");
        else
            return "D";
       //return (String) getAttributeInternal(TRANSMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsDesgUsed.
     * @return the TransIsDesgUsed
     */
    public String getTransIsDesgUsed() {
        //To check if Designation on current row is being used as Reporting Designation in current department
        if(this.getDesgId()!= null && this.getDesgId().toString().length()>0)
        {
            HCMDesgStructAMImpl am = (HCMDesgStructAMImpl) this.getApplicationModule();
           RowQualifier rq = new RowQualifier(am.getDesignation());
           rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and HoOrgId='"+getHoOrgId()+"' and DeptId='"+getDeptId()+"' and RptgDesgId='"+getDesgId()+"'");
           Row[] fr = am.getDesignation().getFilteredRows(rq);
           if(fr.length > 0)
           {
           System.out.println("Designation is being used by another structure as reporting at"+fr[0].getAttribute("DocId"));
               return "Y";
           }
        }
        
        return "N";
       // return (String) getAttributeInternal(TRANSISDESGUSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsDesgUsed.
     * @param value value to set the  TransIsDesgUsed
     */
    public void setTransIsDesgUsed(String value) {
        setAttributeInternal(TRANSISDESGUSED, value);
    }

    /**
     * Gets the attribute value for LEGACY_CODE using the alias name LegacyCode.
     * @return the LEGACY_CODE
     */
    public String getLegacyCode() {
        return (String) getAttributeInternal(LEGACYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for LEGACY_CODE using the alias name LegacyCode.
     * @param value value to set the LEGACY_CODE
     */
    public void setLegacyCode(String value) {
        setAttributeInternal(LEGACYCODE, value);
    }

    /**
     * Gets the attribute value for DESG_CODE using the alias name DesgCode.
     * @return the DESG_CODE
     */
    public String getDesgCode() {
        return (String) getAttributeInternal(DESGCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DESG_CODE using the alias name DesgCode.
     * @param value value to set the DESG_CODE
     */
    public void setDesgCode(String value) {
        setAttributeInternal(DESGCODE, value);
    }

    /**
     * Gets the attribute value for EMP_REF_CHK using the alias name EmpRefChk.
     * @return the EMP_REF_CHK
     */
    public String getEmpRefChk()
    {
        return (String) getAttributeInternal(EMPREFCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_REF_CHK using the alias name EmpRefChk.
     * @param value value to set the EMP_REF_CHK
     */
    public void setEmpRefChk(String value)
    {
        setAttributeInternal(EMPREFCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transRefChk.
     * @return the transRefChk
     */
    public String gettransRefChk()
    {
        String result = getResult("getRefChk");
        if(result!="")
        {
            return result;
        }
        return (String) getAttributeInternal(TRANSREFCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transRefChk.
     * @param value value to set the  transRefChk
     */
    public void settransRefChk(String value)
    {
        setAttributeInternal(TRANSREFCHK, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgDesignation.
     */
    public RowIterator getOrgDesignation() {
        return (RowIterator) getAttributeInternal(ORGDESIGNATION);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmDesgReffDtl.
     */
    public RowIterator getHcmDesgReffDtl()
    {
        return (RowIterator) getAttributeInternal(HCMDESGREFFDTL);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DepartmentsVO1.
     */
    public RowSet getDepartmentsVO1() {
        return (RowSet) getAttributeInternal(DEPARTMENTSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDesignationNmVO1.
     */
    public RowSet getLovDesignationNmVO1() {
           RowSet rs = ((RowSet) getAttributeInternal(LOVDESIGNATIONNMVO1));
        rs.setNamedWhereClauseParam("bindCld_Id", getCldId());
        rs.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
        rs.setNamedWhereClauseParam("bindOrgId", getHoOrgId());
        rs.setNamedWhereClauseParam("bindSloc_Id", getSlocId());
        System.out.println("trans Mode in rowimpl = "+getTransMode());
        if(getTransMode()!=null && getTransMode().equals("S"))
        {
            rs.setNamedWhereClauseParam("actvBind","Y" );
            rs.setNamedWhereClauseParam("desgUsedBind","N" );  
            }
        else
        { 
            rs.setNamedWhereClauseParam("actvBind",null );  
            rs.setNamedWhereClauseParam("desgUsedBind",null );  
            }
        rs.executeQuery();
           return rs;  
       // return (RowSet) getAttributeInternal(LOVDESIGNATIONNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovReportingDesigVO1.
     */
    public RowSet getLovReportingDesigVO1() {
           RowSet rs = ((RowSet) getAttributeInternal(LOVREPORTINGDESIGVO1));
        rs.setNamedWhereClauseParam("bindCld_Id", getCldId());
        rs.setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
        rs.setNamedWhereClauseParam("bindOrgId", getHoOrgId());
        rs.setNamedWhereClauseParam("bindSloc_Id", getSlocId());
        //rs.setNamedWhereClauseParam("paramIdBindVar", getDesgId());
        if(getTransMode()!=null && getTransMode().equals("S"))
        rs.setNamedWhereClauseParam("actvBind","Y" );
        else
          rs.setNamedWhereClauseParam("actvBind",null );  
        rs.executeQuery();
        return rs; 
      // return (RowSet) getAttributeInternal(LOVREPORTINGDESIGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppSecUserVO1.
     */
    public RowSet getAppSecUserVO1() {
        return (RowSet) getAttributeInternal(APPSECUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppSecUserVO2.
     */
    public RowSet getAppSecUserVO2() {
        return (RowSet) getAttributeInternal(APPSECUSERVO2);
    }
    
    
    public String resolvEl(String data) {
                  FacesContext fc = FacesContext.getCurrentInstance();
                  Application app = fc.getApplication();
                  ExpressionFactory elFactory = app.getExpressionFactory();
                  ELContext elContext = fc.getELContext();
                  ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
                  String msg = (String)valueExp.getValue(elContext);
                  return msg;
              }  
    
    public String getResult(String type)
    {
        String retData ="";

        HCMDesgStructAMImpl aMImpl = getAMInstance();
        Row rw[] = aMImpl.getOrgHcmPrf1().getAllRowsInRange();
        if (rw != null && rw.length > 0) {
            for (Row r : rw) { 
                if (type.equals("getRefChk"))
                {
                    retData = (String) r.getAttribute("EmpRefChk");
                }
                   
            }
        }
        return retData;
    }
    
    public HCMDesgStructAMImpl getAMInstance()
    {
        ApplicationModule applicationModule = this.getApplicationModule();
        HCMDesgStructAMImpl am = (HCMDesgStructAMImpl) applicationModule;
        return am;
    }
}

