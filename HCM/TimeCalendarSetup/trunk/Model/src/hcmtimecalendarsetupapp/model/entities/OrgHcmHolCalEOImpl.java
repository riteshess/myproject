package hcmtimecalendarsetupapp.model.entities;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 11 12:04:43 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgHcmHolCalEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        HolId,
        HolDesc,
        HolType,
        HolRecur,
        HolMon,
        HolYear,
        LocId,
        WeekDay,
        WeekDayCount,
        MonthDay,
        RandomHolDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        RefHolId,
        BeforeRefHol,
        AfterRefHol,
        RefCountBefore,
        RefCountAfter,
        OrgHcmHolCalLoc;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int HOLID = AttributesEnum.HolId.index();
    public static final int HOLDESC = AttributesEnum.HolDesc.index();
    public static final int HOLTYPE = AttributesEnum.HolType.index();
    public static final int HOLRECUR = AttributesEnum.HolRecur.index();
    public static final int HOLMON = AttributesEnum.HolMon.index();
    public static final int HOLYEAR = AttributesEnum.HolYear.index();
    public static final int LOCID = AttributesEnum.LocId.index();
    public static final int WEEKDAY = AttributesEnum.WeekDay.index();
    public static final int WEEKDAYCOUNT = AttributesEnum.WeekDayCount.index();
    public static final int MONTHDAY = AttributesEnum.MonthDay.index();
    public static final int RANDOMHOLDT = AttributesEnum.RandomHolDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int REFHOLID = AttributesEnum.RefHolId.index();
    public static final int BEFOREREFHOL = AttributesEnum.BeforeRefHol.index();
    public static final int AFTERREFHOL = AttributesEnum.AfterRefHol.index();
    public static final int REFCOUNTBEFORE = AttributesEnum.RefCountBefore.index();
    public static final int REFCOUNTAFTER = AttributesEnum.RefCountAfter.index();
    public static final int ORGHCMHOLCALLOC = AttributesEnum.OrgHcmHolCalLoc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgHcmHolCalEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hcmtimecalendarsetupapp.model.entities.OrgHcmHolCalEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }


    /**
     * Gets the attribute value for HolId, using the alias name HolId.
     * @return the value of HolId
     */
    public String getHolId() {
        return (String) getAttributeInternal(HOLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolId.
     * @param value value to set the HolId
     */
    public void setHolId(String value) {
        setAttributeInternal(HOLID, value);
    }

    /**
     * Gets the attribute value for HolDesc, using the alias name HolDesc.
     * @return the value of HolDesc
     */
    public String getHolDesc() {
        return (String) getAttributeInternal(HOLDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolDesc.
     * @param value value to set the HolDesc
     */
    public void setHolDesc(String value) {
        setAttributeInternal(HOLDESC, value);
    }

    /**
     * Gets the attribute value for HolType, using the alias name HolType.
     * @return the value of HolType
     */
    public Integer getHolType() {
        return (Integer) getAttributeInternal(HOLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolType.
     * @param value value to set the HolType
     */
    public void setHolType(Integer value) {
        setAttributeInternal(HOLTYPE, value);
    }

    /**
     * Gets the attribute value for HolRecur, using the alias name HolRecur.
     * @return the value of HolRecur
     */
    public Integer getHolRecur() {
        return (Integer) getAttributeInternal(HOLRECUR);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolRecur.
     * @param value value to set the HolRecur
     */
    public void setHolRecur(Integer value) {
        setAttributeInternal(HOLRECUR, value);
    }

    /**
     * Gets the attribute value for HolMon, using the alias name HolMon.
     * @return the value of HolMon
     */
    public Integer getHolMon() {
        return (Integer) getAttributeInternal(HOLMON);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolMon.
     * @param value value to set the HolMon
     */
    public void setHolMon(Integer value) {
        setAttributeInternal(HOLMON, value);
    }

    /**
     * Gets the attribute value for HolYear, using the alias name HolYear.
     * @return the value of HolYear
     */
    public Integer getHolYear() {
        return (Integer) getAttributeInternal(HOLYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for HolYear.
     * @param value value to set the HolYear
     */
    public void setHolYear(Integer value) {
        setAttributeInternal(HOLYEAR, value);
    }

    /**
     * Gets the attribute value for LocId, using the alias name LocId.
     * @return the value of LocId
     */
    public String getLocId() {
        return (String) getAttributeInternal(LOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocId.
     * @param value value to set the LocId
     */
    public void setLocId(String value) {
        setAttributeInternal(LOCID, value);
    }

    /**
     * Gets the attribute value for WeekDay, using the alias name WeekDay.
     * @return the value of WeekDay
     */
    public Integer getWeekDay() {
        return (Integer) getAttributeInternal(WEEKDAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeekDay.
     * @param value value to set the WeekDay
     */
    public void setWeekDay(Integer value) {
        setAttributeInternal(WEEKDAY, value);
    }

    /**
     * Gets the attribute value for WeekDayCount, using the alias name WeekDayCount.
     * @return the value of WeekDayCount
     */
    public Integer getWeekDayCount() {
        return (Integer) getAttributeInternal(WEEKDAYCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WeekDayCount.
     * @param value value to set the WeekDayCount
     */
    public void setWeekDayCount(Integer value) {
        setAttributeInternal(WEEKDAYCOUNT, value);
    }

    /**
     * Gets the attribute value for MonthDay, using the alias name MonthDay.
     * @return the value of MonthDay
     */
    public Integer getMonthDay() {
        return (Integer) getAttributeInternal(MONTHDAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MonthDay.
     * @param value value to set the MonthDay
     */
    public void setMonthDay(Integer value) {
        setAttributeInternal(MONTHDAY, value);
    }

    /**
     * Gets the attribute value for RandomHolDt, using the alias name RandomHolDt.
     * @return the value of RandomHolDt
     */
    public Timestamp getRandomHolDt() {
        return (Timestamp) getAttributeInternal(RANDOMHOLDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RandomHolDt.
     * @param value value to set the RandomHolDt
     */
    public void setRandomHolDt(Timestamp value) {
        setAttributeInternal(RANDOMHOLDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for RefHolId, using the alias name RefHolId.
     * @return the value of RefHolId
     */
    public String getRefHolId() {
        return (String) getAttributeInternal(REFHOLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefHolId.
     * @param value value to set the RefHolId
     */
    public void setRefHolId(String value) {
        setAttributeInternal(REFHOLID, value);
    }

    /**
     * Gets the attribute value for BeforeRefHol, using the alias name BeforeRefHol.
     * @return the value of BeforeRefHol
     */
    public String getBeforeRefHol() {
        return (String) getAttributeInternal(BEFOREREFHOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for BeforeRefHol.
     * @param value value to set the BeforeRefHol
     */
    public void setBeforeRefHol(String value) {
        setAttributeInternal(BEFOREREFHOL, value);
    }

    /**
     * Gets the attribute value for AfterRefHol, using the alias name AfterRefHol.
     * @return the value of AfterRefHol
     */
    public String getAfterRefHol() {
        return (String) getAttributeInternal(AFTERREFHOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for AfterRefHol.
     * @param value value to set the AfterRefHol
     */
    public void setAfterRefHol(String value) {
        setAttributeInternal(AFTERREFHOL, value);
    }

    /**
     * Gets the attribute value for RefCountBefore, using the alias name RefCountBefore.
     * @return the value of RefCountBefore
     */
    public Integer getRefCountBefore() {
        return (Integer) getAttributeInternal(REFCOUNTBEFORE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefCountBefore.
     * @param value value to set the RefCountBefore
     */
    public void setRefCountBefore(Integer value) {
        setAttributeInternal(REFCOUNTBEFORE, value);
    }

    /**
     * Gets the attribute value for RefCountAfter, using the alias name RefCountAfter.
     * @return the value of RefCountAfter
     */
    public Integer getRefCountAfter() {
        return (Integer) getAttributeInternal(REFCOUNTAFTER);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefCountAfter.
     * @param value value to set the RefCountAfter
     */
    public void setRefCountAfter(Integer value) {
        setAttributeInternal(REFCOUNTAFTER, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgHcmHolCalLoc() {
        return (RowIterator) getAttributeInternal(ORGHCMHOLCALLOC);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param holId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String holId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, holId });
    }

    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        //  setLocId("300001");
        // setHolRecur(34);
        setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setHoOrgId(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
        // setOrgId(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));

        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));

            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));

        }
        super.doDML(operation, e);
    }
}

