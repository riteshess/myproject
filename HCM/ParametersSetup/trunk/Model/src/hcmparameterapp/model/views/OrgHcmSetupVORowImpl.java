package hcmparameterapp.model.views;

import com.sun.org.apache.xpath.internal.operations.And;

import hcmparameterapp.model.entities.OrgHcmSetupEOImpl;

import hcmparameterapp.model.module.HcmParameterAppAMImpl;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 19 18:03:21 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgHcmSetupVORowImpl extends ViewRowImpl {


    public static final int ENTITY_ORGHCMSETUPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        ParamId,
        ParamStartDt,
        ParamEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransOrgNm,
        TransEditChk,
        LovOrgNameVO1,
        LovOrgnisationVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMSTARTDT = AttributesEnum.ParamStartDt.index();
    public static final int PARAMENDDT = AttributesEnum.ParamEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSORGNM = AttributesEnum.TransOrgNm.index();
    public static final int TRANSEDITCHK = AttributesEnum.TransEditChk.index();
    public static final int LOVORGNAMEVO1 = AttributesEnum.LovOrgNameVO1.index();
    public static final int LOVORGNISATIONVO1 = AttributesEnum.LovOrgnisationVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgHcmSetupVORowImpl() {
    }

    /**
     * Gets OrgHcmSetupEO entity object.
     * @return the OrgHcmSetupEO
     */
    public OrgHcmSetupEOImpl getOrgHcmSetupEO() {
        return (OrgHcmSetupEOImpl) getEntity(ENTITY_ORGHCMSETUPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for PARAM_START_DT using the alias name ParamStartDt.
     * @return the PARAM_START_DT
     */
    public Timestamp getParamStartDt() {
        return (Timestamp) getAttributeInternal(PARAMSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_START_DT using the alias name ParamStartDt.
     * @param value value to set the PARAM_START_DT
     */
    public void setParamStartDt(Timestamp value) {
        setAttributeInternal(PARAMSTARTDT, value);
    }

    /**
     * Gets the attribute value for PARAM_END_DT using the alias name ParamEndDt.
     * @return the PARAM_END_DT
     */
    public Timestamp getParamEndDt() {
        return (Timestamp) getAttributeInternal(PARAMENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_END_DT using the alias name ParamEndDt.
     * @param value value to set the PARAM_END_DT
     */
    public void setParamEndDt(Timestamp value) {
        setAttributeInternal(PARAMENDDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgNm.
     * @return the TransOrgNm
     */
    public String getTransOrgNm() {

        String orgName = null;
        this.getLovOrgNameVO1().setNamedWhereClauseParam("BindCldId", getCldId());
        this.getLovOrgNameVO1().setNamedWhereClauseParam("BindHoOrgid", getHoOrgId());
        this.getLovOrgNameVO1().setNamedWhereClauseParam("BindSlocId", getSlocId());
        this.getLovOrgNameVO1().setNamedWhereClauseParam("BindOrgId", getOrgId());
        this.getLovOrgNameVO1().executeQuery();
        Row[] filteredRows = this.getLovOrgNameVO1().getFilteredRows("OrgId", getOrgId());
        //System.out.println("filtered rows lenght in lov--" + filteredRows.length);
        if (filteredRows.length > 0) {
            if (filteredRows[0].getAttribute("OrgDesc") != null &&
                filteredRows[0].getAttribute("OrgDesc").toString().length() > 0)
                orgName = filteredRows[0].getAttribute("OrgDesc").toString();
        }

        return orgName;
        //return (String) getAttributeInternal(TRANSORGNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgNm.
     * @param value value to set the  TransOrgNm
     */
    public void setTransOrgNm(String value) {
        setAttributeInternal(TRANSORGNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEditChk.
     * @return the TransEditChk
     */
    public String getTransEditChk() {
        if (getParamId() != null && getCldId() != null && getSlocId() != null && getHoOrgId() != null &&
            getOrgId() != null) {
            HcmParameterAppAMImpl am = (HcmParameterAppAMImpl) this.getApplicationModule();
            ViewObjectImpl hcmSetup1 = am.getHcmSetup1();
            RowQualifier rq = new RowQualifier(hcmSetup1);
            rq.setWhereClause("CldId='" + getCldId() + "' AND ParamId='" + getParamId() + "' AND HoOrgId='" +
                              getHoOrgId() + "'AND SlocId=" + getSlocId());
            Row[] filteredRows = hcmSetup1.getFilteredRows(rq);
            Object pType = filteredRows[0].getAttribute("ParamType");
            if (pType != null) {
                BigDecimal rslt = (BigDecimal) callStoredFunction(Types.NUMERIC, "FN_HCM_PARM_EXT(?,?,?,?,?,?)", new Object[] {
                                                                  getCldId(), getSlocId(), getHoOrgId(), getParamId(),
                                                                  pType, getOrgId()
                });
                System.out.println("result in row impl--" + rslt);
                if (rslt.compareTo(new BigDecimal(1)) == 0) {
                    return "Y";
                } else
                    return "N";
            }
        }
        return "Y";
        // return (String) getAttributeInternal(TRANSEDITCHK);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e);
                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEditChk.
     * @param value value to set the  TransEditChk
     */
    public void setTransEditChk(String value) {
        setAttributeInternal(TRANSEDITCHK, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgNameVO1.
     */
    public RowSet getLovOrgNameVO1() {
        return (RowSet) getAttributeInternal(LOVORGNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgnisationVO1.
     */
    public RowSet getLovOrgnisationVO1() {
        return (RowSet) getAttributeInternal(LOVORGNISATIONVO1);
    }
}

