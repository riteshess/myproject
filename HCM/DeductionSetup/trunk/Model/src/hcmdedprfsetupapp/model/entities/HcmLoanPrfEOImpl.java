package hcmdedprfsetupapp.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 15 12:23:23 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmLoanPrfEOImpl extends EntityImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        LoanId,
        InterestType,
        InterestRate,
        PenalInterestRate,
        MaxNoEmi,
        SrvcPrdElgb,
        InterestFlag,
        SubsidyFlag,
        MaxSusidyRate,
        DocAtchReq,
        InterestRcvrMnth,
        ValidStrtDt,
        ValidEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EmpElgb,
        PenalInterestFlag;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int LOANID = AttributesEnum.LoanId.index();
    public static final int INTERESTTYPE = AttributesEnum.InterestType.index();
    public static final int INTERESTRATE = AttributesEnum.InterestRate.index();
    public static final int PENALINTERESTRATE = AttributesEnum.PenalInterestRate.index();
    public static final int MAXNOEMI = AttributesEnum.MaxNoEmi.index();
    public static final int SRVCPRDELGB = AttributesEnum.SrvcPrdElgb.index();
    public static final int INTERESTFLAG = AttributesEnum.InterestFlag.index();
    public static final int SUBSIDYFLAG = AttributesEnum.SubsidyFlag.index();
    public static final int MAXSUSIDYRATE = AttributesEnum.MaxSusidyRate.index();
    public static final int DOCATCHREQ = AttributesEnum.DocAtchReq.index();
    public static final int INTERESTRCVRMNTH = AttributesEnum.InterestRcvrMnth.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EMPELGB = AttributesEnum.EmpElgb.index();
    public static final int PENALINTERESTFLAG = AttributesEnum.PenalInterestFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmLoanPrfEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject()
    {
        return EntityDefImpl.findDefObject("hcmdedprfsetupapp.model.entities.HcmLoanPrfEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for LoanId, using the alias name LoanId.
     * @return the value of LoanId
     */
    public String getLoanId() {
        return (String) getAttributeInternal(LOANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanId.
     * @param value value to set the LoanId
     */
    public void setLoanId(String value) {
        setAttributeInternal(LOANID, value);
    }

    /**
     * Gets the attribute value for InterestType, using the alias name InterestType.
     * @return the value of InterestType
     */
    public Integer getInterestType() {
        return (Integer) getAttributeInternal(INTERESTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterestType.
     * @param value value to set the InterestType
     */
    public void setInterestType(Integer value) {
        setAttributeInternal(INTERESTTYPE, value);
    }

    /**
     * Gets the attribute value for InterestRate, using the alias name InterestRate.
     * @return the value of InterestRate
     */
    public Number getInterestRate() {
        return (Number) getAttributeInternal(INTERESTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterestRate.
     * @param value value to set the InterestRate
     */
    public void setInterestRate(Number value) {
        setAttributeInternal(INTERESTRATE, value);
    }

    /**
     * Gets the attribute value for PenalInterestRate, using the alias name PenalInterestRate.
     * @return the value of PenalInterestRate
     */
    public Number getPenalInterestRate() {
        return (Number) getAttributeInternal(PENALINTERESTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PenalInterestRate.
     * @param value value to set the PenalInterestRate
     */
    public void setPenalInterestRate(Number value) {
        setAttributeInternal(PENALINTERESTRATE, value);
    }

    /**
     * Gets the attribute value for MaxNoEmi, using the alias name MaxNoEmi.
     * @return the value of MaxNoEmi
     */
    public Integer getMaxNoEmi() {
        return (Integer) getAttributeInternal(MAXNOEMI);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxNoEmi.
     * @param value value to set the MaxNoEmi
     */
    public void setMaxNoEmi(Integer value) {
        setAttributeInternal(MAXNOEMI, value);
    }

    /**
     * Gets the attribute value for SrvcPrdElgb, using the alias name SrvcPrdElgb.
     * @return the value of SrvcPrdElgb
     */
    public Integer getSrvcPrdElgb() {
        return (Integer) getAttributeInternal(SRVCPRDELGB);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrvcPrdElgb.
     * @param value value to set the SrvcPrdElgb
     */
    public void setSrvcPrdElgb(Integer value) {
        setAttributeInternal(SRVCPRDELGB, value);
    }

    /**
     * Gets the attribute value for InterestFlag, using the alias name InterestFlag.
     * @return the value of InterestFlag
     */
    public String getInterestFlag() {
        return (String) getAttributeInternal(INTERESTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterestFlag.
     * @param value value to set the InterestFlag
     */
    public void setInterestFlag(String value) {
        setAttributeInternal(INTERESTFLAG, value);
    }

    /**
     * Gets the attribute value for SubsidyFlag, using the alias name SubsidyFlag.
     * @return the value of SubsidyFlag
     */
    public String getSubsidyFlag() {
        return (String) getAttributeInternal(SUBSIDYFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubsidyFlag.
     * @param value value to set the SubsidyFlag
     */
    public void setSubsidyFlag(String value) {
        setAttributeInternal(SUBSIDYFLAG, value);
    }

    /**
     * Gets the attribute value for MaxSusidyRate, using the alias name MaxSusidyRate.
     * @return the value of MaxSusidyRate
     */
    public Number getMaxSusidyRate() {
        return (Number) getAttributeInternal(MAXSUSIDYRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxSusidyRate.
     * @param value value to set the MaxSusidyRate
     */
    public void setMaxSusidyRate(Number value) {
        setAttributeInternal(MAXSUSIDYRATE, value);
    }

    /**
     * Gets the attribute value for DocAtchReq, using the alias name DocAtchReq.
     * @return the value of DocAtchReq
     */
    public String getDocAtchReq() {
        return (String) getAttributeInternal(DOCATCHREQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocAtchReq.
     * @param value value to set the DocAtchReq
     */
    public void setDocAtchReq(String value) {
        setAttributeInternal(DOCATCHREQ, value);
    }

    /**
     * Gets the attribute value for InterestRcvrMnth, using the alias name InterestRcvrMnth.
     * @return the value of InterestRcvrMnth
     */
    public Integer getInterestRcvrMnth() {
        return (Integer) getAttributeInternal(INTERESTRCVRMNTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterestRcvrMnth.
     * @param value value to set the InterestRcvrMnth
     */
    public void setInterestRcvrMnth(Integer value) {
        setAttributeInternal(INTERESTRCVRMNTH, value);
    }

    /**
     * Gets the attribute value for ValidStrtDt, using the alias name ValidStrtDt.
     * @return the value of ValidStrtDt
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidStrtDt.
     * @param value value to set the ValidStrtDt
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for ValidEndDt, using the alias name ValidEndDt.
     * @return the value of ValidEndDt
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidEndDt.
     * @param value value to set the ValidEndDt
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EmpElgb, using the alias name EmpElgb.
     * @return the value of EmpElgb
     */
    public Integer getEmpElgb() {
        return (Integer) getAttributeInternal(EMPELGB);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpElgb.
     * @param value value to set the EmpElgb
     */
    public void setEmpElgb(Integer value) {
        setAttributeInternal(EMPELGB, value);
    }


    /**
     * Gets the attribute value for PenalInterestFlag, using the alias name PenalInterestFlag.
     * @return the value of PenalInterestFlag
     */
    public String getPenalInterestFlag()
    {
        return (String) getAttributeInternal(PENALINTERESTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for PenalInterestFlag.
     * @param value value to set the PenalInterestFlag
     */
    public void setPenalInterestFlag(String value)
    {
        setAttributeInternal(PENALINTERESTFLAG, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param loanId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String loanId)
    {
        return new Key(new Object[]
        {
            cldId, slocId, hoOrgId, orgId, docId, loanId
        });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setHoOrgId((String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        setCldId((String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setOrgId((String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        setDocAtchReq("N");
        setSubsidyFlag("N");
        setPenalInterestFlag("N");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        }

        super.doDML(operation, e);
    }

    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

