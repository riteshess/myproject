package hcmempdeddetailapp.model.views;

import hcmempdeddetailapp.model.entities.EmpDedEOImpl;
import hcmempdeddetailapp.model.services.HcmEmpDedDetailAMImpl;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 20 12:12:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmpDedVORowImpl extends ViewRowImpl {


    public static final int ENTITY_EMPDEDEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        SlocId,
        OrgId,
        EmpDocId,
        EmpCode,
        DedDocId,
        ValidStrtDt,
        DedPrf,
        MiscDocDt,
        MiscDocNo,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidEndDt,
        LoanSnctnDt,
        TotLoanAmt,
        EmpDedAmt,
        transTaxNatr,
        transTaxCompMthd,
        transMaxDedAmnt,
        transSalComponent,
        TransMode,
        transIsAmntEnable,
        PfOnActBsChk,
        VpfChk,
        VpfAmt,
        TransPfChk,
        TransNssfNhifChk,
        TransSuperannutionChk,
        EmpSupAmt,
        TransEmployeerPer,
        UanNo,
        TransLocationId,
        LovDedPrfVO1,
        LovHcmDedVO1,
        LovCreateNamVO1,
        LovCreateNamVO2,
        LovAmountPercentVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int DEDDOCID = AttributesEnum.DedDocId.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int DEDPRF = AttributesEnum.DedPrf.index();
    public static final int MISCDOCDT = AttributesEnum.MiscDocDt.index();
    public static final int MISCDOCNO = AttributesEnum.MiscDocNo.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int LOANSNCTNDT = AttributesEnum.LoanSnctnDt.index();
    public static final int TOTLOANAMT = AttributesEnum.TotLoanAmt.index();
    public static final int EMPDEDAMT = AttributesEnum.EmpDedAmt.index();
    public static final int TRANSTAXNATR = AttributesEnum.transTaxNatr.index();
    public static final int TRANSTAXCOMPMTHD = AttributesEnum.transTaxCompMthd.index();
    public static final int TRANSMAXDEDAMNT = AttributesEnum.transMaxDedAmnt.index();
    public static final int TRANSSALCOMPONENT = AttributesEnum.transSalComponent.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int TRANSISAMNTENABLE = AttributesEnum.transIsAmntEnable.index();
    public static final int PFONACTBSCHK = AttributesEnum.PfOnActBsChk.index();
    public static final int VPFCHK = AttributesEnum.VpfChk.index();
    public static final int VPFAMT = AttributesEnum.VpfAmt.index();
    public static final int TRANSPFCHK = AttributesEnum.TransPfChk.index();
    public static final int TRANSNSSFNHIFCHK = AttributesEnum.TransNssfNhifChk.index();
    public static final int TRANSSUPERANNUTIONCHK = AttributesEnum.TransSuperannutionChk.index();
    public static final int EMPSUPAMT = AttributesEnum.EmpSupAmt.index();
    public static final int TRANSEMPLOYEERPER = AttributesEnum.TransEmployeerPer.index();
    public static final int UANNO = AttributesEnum.UanNo.index();
    public static final int TRANSLOCATIONID = AttributesEnum.TransLocationId.index();
    public static final int LOVDEDPRFVO1 = AttributesEnum.LovDedPrfVO1.index();
    public static final int LOVHCMDEDVO1 = AttributesEnum.LovHcmDedVO1.index();
    public static final int LOVCREATENAMVO1 = AttributesEnum.LovCreateNamVO1.index();
    public static final int LOVCREATENAMVO2 = AttributesEnum.LovCreateNamVO2.index();
    public static final int LOVAMOUNTPERCENTVO1 = AttributesEnum.LovAmountPercentVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public EmpDedVORowImpl() {
    }

    /**
     * Gets EmpDedEO entity object.
     * @return the EmpDedEO
     */
    public EmpDedEOImpl getEmpDedEO() {
        return (EmpDedEOImpl) getEntity(ENTITY_EMPDEDEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }


    /**
     * Gets the attribute value for DED_PRF using the alias name DedPrf.
     * @return the DED_PRF
     */
    public Integer getDedPrf() {
        return (Integer) getAttributeInternal(DEDPRF);
    }

    /**
     * Sets <code>value</code> as attribute value for DED_PRF using the alias name DedPrf.
     * @param value value to set the DED_PRF
     */
    public void setDedPrf(Integer value) {
        setAttributeInternal(DEDPRF, value);
    }

    /**
     * Gets the attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @return the EMP_DOC_ID
     */
    public String getEmpDocId() {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DOC_ID using the alias name EmpDocId.
     * @param value value to set the EMP_DOC_ID
     */
    public void setEmpDocId(String value) {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for EMP_CODE using the alias name EmpCode.
     * @return the EMP_CODE
     */
    public Integer getEmpCode() {
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_CODE using the alias name EmpCode.
     * @param value value to set the EMP_CODE
     */
    public void setEmpCode(Integer value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for MISC_DOC_DT using the alias name MiscDocDt.
     * @return the MISC_DOC_DT
     */
    public Timestamp getMiscDocDt() {
        return (Timestamp) getAttributeInternal(MISCDOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MISC_DOC_DT using the alias name MiscDocDt.
     * @param value value to set the MISC_DOC_DT
     */
    public void setMiscDocDt(Timestamp value) {
        setAttributeInternal(MISCDOCDT, value);
    }

    /**
     * Gets the attribute value for MISC_DOC_NO using the alias name MiscDocNo.
     * @return the MISC_DOC_NO
     */
    public String getMiscDocNo() {
        return (String) getAttributeInternal(MISCDOCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for MISC_DOC_NO using the alias name MiscDocNo.
     * @param value value to set the MISC_DOC_NO
     */
    public void setMiscDocNo(String value) {
        setAttributeInternal(MISCDOCNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @return the VALID_END_DT
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @param value value to set the VALID_END_DT
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @return the VALID_STRT_DT
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @param value value to set the VALID_STRT_DT
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for EMP_DED_AMT using the alias name EmpDedAmt.
     * @return the EMP_DED_AMT
     */
    public Number getEmpDedAmt() {
        return (Number) getAttributeInternal(EMPDEDAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_DED_AMT using the alias name EmpDedAmt.
     * @param value value to set the EMP_DED_AMT
     */
    public void setEmpDedAmt(Number value) {
        setAttributeInternal(EMPDEDAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transTaxNatr.
     * @return the transTaxNatr
     */
    public String gettransTaxNatr() {

        String orgname = "";
        HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();

        ViewObjectImpl vo = am.getLovHcmDed1();
        vo.setNamedWhereClauseParam("cldIdBindVar", this.getCldId());
        vo.setNamedWhereClauseParam("dedPrfBindVar", this.getDedPrf());
        vo.setNamedWhereClauseParam("hoOrgIdBindVar", this.getHoOrgId());
        vo.setNamedWhereClauseParam("orgIdBindVar", this.getOrgId());
        vo.setNamedWhereClauseParam("slocIdBindVar", this.getSlocId());


        vo.executeQuery();
        Row[] r = vo.getFilteredRows("DedId", this.getDedDocId());
        if (r.length > 0) {
            orgname = (String) r[0].getAttribute("TaxNature");
        }
        // System.out.println("-------" + orgname);
        return orgname;

        // return (String) getAttributeInternal(TRANSTAXNATR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transTaxNatr.
     * @param value value to set the  transTaxNatr
     */
    public void settransTaxNatr(String value) {
        setAttributeInternal(TRANSTAXNATR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transTaxCompMthd.
     * @return the transTaxCompMthd
     */
    public String gettransTaxCompMthd() {
        String orgname = "";
        HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();

        ViewObjectImpl vo = am.getLovHcmDed1();
        vo.setNamedWhereClauseParam("cldIdBindVar", this.getCldId());
        vo.setNamedWhereClauseParam("dedPrfBindVar", this.getDedPrf());
        vo.setNamedWhereClauseParam("hoOrgIdBindVar", this.getHoOrgId());
        vo.setNamedWhereClauseParam("orgIdBindVar", this.getOrgId());
        vo.setNamedWhereClauseParam("slocIdBindVar", this.getSlocId());


        vo.executeQuery();
        Row[] r = vo.getFilteredRows("DedId", this.getDedDocId());
        if (r.length > 0) {
            orgname = (String) r[0].getAttribute("TaxCompMthd");
        }
        // System.out.println("-------" + orgname);
        return orgname;


        //return (String) getAttributeInternal(TRANSTAXCOMPMTHD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transTaxCompMthd.
     * @param value value to set the  transTaxCompMthd
     */
    public void settransTaxCompMthd(String value) {
        setAttributeInternal(TRANSTAXCOMPMTHD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transMaxDedAmnt.
     * @return the transMaxDedAmnt
     */
    public Number gettransMaxDedAmnt() {
        if (getDedDocId() != null) {
            System.out.println("dedDoc Id in getter is ---->" + getDedDocId());
            //String orgname="";
            Number p = null;
            HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();

            ViewObjectImpl vo = am.getLovHcmDed1();
            vo.setNamedWhereClauseParam("cldIdBindVar", this.getCldId());
            vo.setNamedWhereClauseParam("dedPrfBindVar", this.getDedPrf());
            vo.setNamedWhereClauseParam("hoOrgIdBindVar", this.getHoOrgId());
            vo.setNamedWhereClauseParam("orgIdBindVar", this.getOrgId());
            vo.setNamedWhereClauseParam("slocIdBindVar", this.getSlocId());


            vo.executeQuery();
            Row[] r = vo.getFilteredRows("DedId", this.getDedDocId());
            if (r.length > 0) {
                //orgname=(String) r[0].getAttribute("MiscDedLimit");
                p = (Number) r[0].getAttribute("MiscDedLimit");
            }
            //System.out.println("-------"+orgname);
            //System.out.println("-------MAXEDEDDUCTION" + p);
            // Number s=r[0].getAttribute("MiscDedLimit");
            return p;

        }
        return (Number) getAttributeInternal(TRANSMAXDEDAMNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transMaxDedAmnt.
     * @param value value to set the  transMaxDedAmnt
     */
    public void settransMaxDedAmnt(Number value) {
        setAttributeInternal(TRANSMAXDEDAMNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transSalComponent.
     * @return the transSalComponent
     */
    public Number gettransSalComponent() {
        if (getTransNssfNhifChk() != "Y") {
            String orgname = "";

            Number cf = null;
            HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();

            ViewObjectImpl vo = am.getLovHcmDedSal1();
            vo.setNamedWhereClauseParam("bindcldid1", this.getCldId());
            vo.setNamedWhereClauseParam("binddedid1", this.getDedDocId());
            vo.setNamedWhereClauseParam("bindhorgid1", this.getHoOrgId());
            vo.setNamedWhereClauseParam("bindorgid1", this.getOrgId());
            vo.setNamedWhereClauseParam("bindslocid1", this.getSlocId());


            vo.executeQuery();
            Row[] r = vo.getFilteredRows("DedId", this.getDedDocId());
            if (r.length > 0) {
                Number gs = new Number(0);
                //System.out.println("gs....." + gs);
                // System.out.println("after filtering hcm ded sal table--" + r.length);
                for (Row hcmdedsal : r) {
                    orgname = (String) hcmdedsal.getAttribute("SalId");
                    //   System.out.println("------" + orgname);
                    ViewObjectImpl vo1 = am.getLovHcmEmpSal1();
                    vo1.setNamedWhereClauseParam("bindcldid", this.getCldId());
                    vo1.setNamedWhereClauseParam("bindempcode", this.getEmpCode());
                    vo1.setNamedWhereClauseParam("bindhoorgid", this.getHoOrgId());
                    vo1.setNamedWhereClauseParam("bindorgid", this.getOrgId());
                    vo1.setNamedWhereClauseParam("bindslocid", this.getSlocId());
                    vo1.setNamedWhereClauseParam("binddocid", this.getEmpDocId());
                    vo1.setNamedWhereClauseParam("bindsalid", orgname);
                    vo1.executeQuery();
                    Row[] r1 = vo1.getFilteredRows("SalId", orgname);
                    if (r1.length > 0) {

                        gs = gs.add((Number) r1[0].getAttribute("SalAmt"));
                        // System.out.println(gs);

                    }
                }
                Number salcomp = this.gettransMaxDedAmnt();
                // System.out.println(salcomp);
                if(salcomp != null){
                if ((gs.compareTo(salcomp)) <= 0) {
                    //  System.out.println("------++++++" + gs);
                    return gs;
                } else {
                    //  System.out.println("++++------" + salcomp);
                    return salcomp;
                }
                }

            }
            return cf;

        }
        return (Number) getAttributeInternal(TRANSSALCOMPONENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSalComponent.
     * @param value value to set the  transSalComponent
     */
    public void settransSalComponent(Number value) {
        setAttributeInternal(TRANSSALCOMPONENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode() {
        if (resolvEl("#{pageFlowScope.ADD_EDIT_MODE}") != null)
            return (String) resolvEl("#{pageFlowScope.ADD_EDIT_MODE}");
        else
            return "V";
        //return (String) getAttributeInternal(TRANSMODE);
    }


    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsAmntEnable.
     * @return the transIsAmntEnable
     */
    public String gettransIsAmntEnable() {
        if (getDedPrf() == 48 && getDedDocId() != null) {
            //  System.out.println("ded doc id in isAmtenable--->" + getDedDocId() + " ded Profile is-->" + getDedPrf());
            String id = "";
            // System.out.println(this.getDedPrf());
            if (getDedPrf() == 48) {
                id = ChkTaxId(this.getDedDocId());
                if (id != null && id.equals("64")) {
                    return "Y";
                }
                if (id != null && id.equals("64")) {
                    return "N";
                }
            }
            return "N";
        }
        return (String) getAttributeInternal(TRANSISAMNTENABLE);
    }

    /**
     * Gets the attribute value for PF_ON_ACT_BS_CHK using the alias name PfOnActBsChk.
     * @return the PF_ON_ACT_BS_CHK
     */
    public String getPfOnActBsChk() {
        return (String) getAttributeInternal(PFONACTBSCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for PF_ON_ACT_BS_CHK using the alias name PfOnActBsChk.
     * @param value value to set the PF_ON_ACT_BS_CHK
     */
    public void setPfOnActBsChk(String value) {
        setAttributeInternal(PFONACTBSCHK, value);
    }

    /**
     * Gets the attribute value for VPF_CHK using the alias name VpfChk.
     * @return the VPF_CHK
     */
    public String getVpfChk() {
        return (String) getAttributeInternal(VPFCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for VPF_CHK using the alias name VpfChk.
     * @param value value to set the VPF_CHK
     */
    public void setVpfChk(String value) {
        setAttributeInternal(VPFCHK, value);
    }

    /**
     * Gets the attribute value for VPF_AMT using the alias name VpfAmt.
     * @return the VPF_AMT
     */
    public Number getVpfAmt() {
        return (Number) getAttributeInternal(VPFAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for VPF_AMT using the alias name VpfAmt.
     * @param value value to set the VPF_AMT
     */
    public void setVpfAmt(Number value) {
        setAttributeInternal(VPFAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPfChk.
     * @return the TransPfChk
     */
    public String getTransPfChk() {
        // System.out.println(" transPfCheck---->" + getDedPrf());
        if (getDedPrf() != null && getDedDocId() != null) {
            if (getDedPrf().equals(50)) {
                //    System.out.println("inside transPfCheck---->" + getDedPrf());
                //     System.out.println("ded profile is ---" + getDedPrf());
                HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) getApplicationModule();
                am.getMiscDedVO1().setNamedWhereClauseParam("cldIdBindVar", getCldId());
                am.getMiscDedVO1().setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
                am.getMiscDedVO1().setNamedWhereClauseParam("dedPrfBindVar", getDedPrf());

                am.getMiscDedVO1().executeQuery();
                //   System.out.println("ded doc id at pfcheck filter--->" + getDedDocId());
                //   System.out.println("Row count after filter lov---" + am.getMiscDedVO1().getRowCount());
                RowQualifier rq = new RowQualifier(am.getMiscDedVO1());
                rq.setWhereClause("DedId='" + getDedDocId() + "' and DedPrf=" + getDedPrf());
                Row[] filteredRows = am.getMiscDedVO1().getFilteredRows(rq);
                //    System.out.println("filter rows length at PF Chek--" + filteredRows.length);
                if (filteredRows.length > 0) {
                    //       System.out.println("ded type value at PF check--->" + filteredRows[0].getAttribute("DedType"));
                    if (filteredRows[0].getAttribute("DedType").equals(66)) {
                        return "Y";
                    } else
                        return "N";
                }
            }
        }
        return (String) getAttributeInternal(TRANSPFCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPfChk.
     * @param value value to set the  TransPfChk
     */
    public void setTransPfChk(String value) {
        setAttributeInternal(TRANSPFCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransNssfNhifChk.
     * @return the TransNssfNhifChk
     */
    public String getTransNssfNhifChk() {
        System.out.println(" transNssfCheck---->" + getDedPrf());
        if (getDedPrf() != null && getDedDocId() != null) {
            if (getDedPrf().equals(50)) {
                System.out.println("inside transNssfCheck---->" + getDedPrf());
                System.out.println("ded profile is ---" + getDedPrf());
                HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) getApplicationModule();
                am.getMiscDedVO1().setNamedWhereClauseParam("cldIdBindVar", getCldId());
                am.getMiscDedVO1().setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
                am.getMiscDedVO1().setNamedWhereClauseParam("dedPrfBindVar", getDedPrf());

                am.getMiscDedVO1().executeQuery();
                System.out.println("ded doc id at pfcheck filter--->" + getDedDocId());
                System.out.println("Row count after filter lov---" + am.getMiscDedVO1().getRowCount());
                RowQualifier rq = new RowQualifier(am.getMiscDedVO1());
                rq.setWhereClause("DedId='" + getDedDocId() + "' and DedPrf=" + getDedPrf());
                Row[] filteredRows = am.getMiscDedVO1().getFilteredRows(rq);
                System.out.println("filter rows length at nssf Chek--" + filteredRows.length);
                if (filteredRows.length > 0) {
                    System.out.println("ded type value at nhif check--->" + filteredRows[0].getAttribute("DedType"));
                    if (filteredRows[0].getAttribute("DedType").equals(88) ||
                        filteredRows[0].getAttribute("DedType").equals(89)) {
                        return "Y";
                    } else
                        return "N";
                }
            }
        }
        return (String) getAttributeInternal(TRANSNSSFNHIFCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransNssfNhifChk.
     * @param value value to set the  TransNssfNhifChk
     */
    public void setTransNssfNhifChk(String value) {
        setAttributeInternal(TRANSNSSFNHIFCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSuperannutionChk.
     * @return the TransSuperannutionChk
     */
    public String getTransSuperannutionChk() {
        // System.out.println(" transPfCheck---->" + getDedPrf());
        if (getDedPrf() != null && getDedDocId() != null) {
            if (getDedPrf().equals(50)) {
                //    System.out.println("inside transPfCheck---->" + getDedPrf());
                //     System.out.println("ded profile is ---" + getDedPrf());
                HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) getApplicationModule();
                am.getMiscDedVO1().setNamedWhereClauseParam("cldIdBindVar", getCldId());
                am.getMiscDedVO1().setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
                am.getMiscDedVO1().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
                am.getMiscDedVO1().setNamedWhereClauseParam("dedPrfBindVar", getDedPrf());

                am.getMiscDedVO1().executeQuery();
                //   System.out.println("ded doc id at pfcheck filter--->" + getDedDocId());
                //   System.out.println("Row count after filter lov---" + am.getMiscDedVO1().getRowCount());
                RowQualifier rq = new RowQualifier(am.getMiscDedVO1());
                rq.setWhereClause("DedId='" + getDedDocId() + "' and DedPrf=" + getDedPrf());
                Row[] filteredRows = am.getMiscDedVO1().getFilteredRows(rq);
                //    System.out.println("filter rows length at PF Chek--" + filteredRows.length);
                if (filteredRows.length > 0) {
                    //       System.out.println("ded type value at PF check--->" + filteredRows[0].getAttribute("DedType"));
                    if (filteredRows[0].getAttribute("DedType").equals(94)) {
                        return "Y";
                    } else
                        return "N";
                }
            }
        }
        return (String) getAttributeInternal(TRANSSUPERANNUTIONCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSuperannutionChk.
     * @param value value to set the  TransSuperannutionChk
     */
    public void setTransSuperannutionChk(String value) {
        setAttributeInternal(TRANSSUPERANNUTIONCHK, value);
    }

    /**
     * Gets the attribute value for EMP_SUP_AMT using the alias name EmpSupAmt.
     * @return the EMP_SUP_AMT
     */
    public Number getEmpSupAmt() {
        return (Number) getAttributeInternal(EMPSUPAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_SUP_AMT using the alias name EmpSupAmt.
     * @param value value to set the EMP_SUP_AMT
     */
    public void setEmpSupAmt(Number value) {
        setAttributeInternal(EMPSUPAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmployeerPer.
     * @return the TransEmployeerPer
     */
    public String getTransEmployeerPer() {
        if (this.getDedDocId() != null) {
            HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();
            ViewObjectImpl ded1 = am.getLovHcmDed1();
            ded1.setNamedWhereClauseParam("cldIdBindVar", this.getCldId());
            ded1.setNamedWhereClauseParam("dedPrfBindVar", this.getDedPrf());
            ded1.setNamedWhereClauseParam("hoOrgIdBindVar", this.getHoOrgId());
            ded1.setNamedWhereClauseParam("orgIdBindVar", this.getOrgId());
            ded1.setNamedWhereClauseParam("slocIdBindVar", this.getSlocId());
            ded1.executeQuery();
            Row[] rows = ded1.getFilteredRows("DedId", this.getDedDocId());
            if (rows.length > 0) {
                if(rows[0].getAttribute("MiscEmprPerc")!=null){
                return rows[0].getAttribute("MiscEmprPerc").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSEMPLOYEERPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmployeerPer.
     * @param value value to set the  TransEmployeerPer
     */
    public void setTransEmployeerPer(String value) {
        setAttributeInternal(TRANSEMPLOYEERPER, value);
    }

    /**
     * Gets the attribute value for UAN_NO using the alias name UanNo.
     * @return the UAN_NO
     */
    public Number getUanNo()
    {
        return (Number) getAttributeInternal(UANNO);
    }

    /**
     * Sets <code>value</code> as attribute value for UAN_NO using the alias name UanNo.
     * @param value value to set the UAN_NO
     */
    public void setUanNo(Number value)
    {
        setAttributeInternal(UANNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocationId.
     * @return the TransLocationId
     */
    public String getTransLocationId() {
        
        System.out.println("****** in gettranslocationid getter *******");
        HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();
        ViewObjectImpl empNam1 = am.getLovEmpNmVO1();
        empNam1.setNamedWhereClauseParam("BIND_CLD_ID",this.getCldId());
        empNam1.setNamedWhereClauseParam("BIND_SLOC_ID",this.getSlocId());
        empNam1.setNamedWhereClauseParam("BIND_HO_ORG_ID",this.getHoOrgId());
        empNam1.setNamedWhereClauseParam("BIND_ORG_ID",this.getOrgId());
        empNam1.setNamedWhereClauseParam("BIND_DOC_ID",this.getEmpDocId());
        empNam1.executeQuery();
        Row[] allRowsInRange = empNam1.getAllRowsInRange();
        System.out.println(" no of rows are:::::" +allRowsInRange.length);
        
        if(allRowsInRange.length>0) {

            Object LocationId = allRowsInRange[0].getAttribute("EmpLocId");
            System.out.println("location id is :::::::::" +LocationId);
            
            if(LocationId!=null) {
                return LocationId.toString();
            }
        }

        return (String) getAttributeInternal(TRANSLOCATIONID);
    }

    public String ChkTaxId(String dedId) {
        String dedtype = "";
        HcmEmpDedDetailAMImpl am = (HcmEmpDedDetailAMImpl) this.getApplicationModule();
        am.getHcmDed().setNamedWhereClauseParam("bindDocId", dedId);
        am.getHcmDed().executeQuery();
        //  RowQualifier rq = new RowQualifier(am.getHcmDed());
        //   System.out.println("ded Id in ChkDTaxId---->" + dedId);
        Row fr[] = am.getHcmDed().getFilteredRows("DocId", dedId);
        if (fr.length > 0) {
            if (fr[0].getAttribute("DedType") != null) {
                dedtype = fr[0].getAttribute("DedType").toString();
            }
        }

        return dedtype;
    }

    /**
     * Gets the attribute value for LOAN_SNCTN_DT using the alias name LoanSnctnDt.
     * @return the LOAN_SNCTN_DT
     */
    public Timestamp getLoanSnctnDt() {
        return (Timestamp) getAttributeInternal(LOANSNCTNDT);
    }

    /**
     * Sets <code>value</code> as attribute value for LOAN_SNCTN_DT using the alias name LoanSnctnDt.
     * @param value value to set the LOAN_SNCTN_DT
     */
    public void setLoanSnctnDt(Timestamp value) {
        setAttributeInternal(LOANSNCTNDT, value);
    }

    /**
     * Gets the attribute value for TOT_LOAN_AMT using the alias name TotLoanAmt.
     * @return the TOT_LOAN_AMT
     */
    public Number getTotLoanAmt() {
        return (Number) getAttributeInternal(TOTLOANAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_LOAN_AMT using the alias name TotLoanAmt.
     * @param value value to set the TOT_LOAN_AMT
     */
    public void setTotLoanAmt(Number value) {
        setAttributeInternal(TOTLOANAMT, value);
    }

    /**
     * Gets the attribute value for DED_DOC_ID using the alias name DedDocId.
     * @return the DED_DOC_ID
     */
    public String getDedDocId() {
        return (String) getAttributeInternal(DEDDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DED_DOC_ID using the alias name DedDocId.
     * @param value value to set the DED_DOC_ID
     */
    public void setDedDocId(String value) {
        setAttributeInternal(DEDDOCID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDedPrfVO1.
     */
    public RowSet getLovDedPrfVO1() {
        return (RowSet) getAttributeInternal(LOVDEDPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovHcmDedVO1.
     */
    public RowSet getLovHcmDedVO1() {
        return (RowSet) getAttributeInternal(LOVHCMDEDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCreateNamVO1.
     */
    public RowSet getLovCreateNamVO1() {
        return (RowSet) getAttributeInternal(LOVCREATENAMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCreateNamVO2.
     */
    public RowSet getLovCreateNamVO2() {
        return (RowSet) getAttributeInternal(LOVCREATENAMVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAmountPercentVO1.
     */
    public RowSet getLovAmountPercentVO1() {
        return (RowSet) getAttributeInternal(LOVAMOUNTPERCENTVO1);
    }
}

