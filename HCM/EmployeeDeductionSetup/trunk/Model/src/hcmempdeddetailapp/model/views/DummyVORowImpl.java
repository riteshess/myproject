package hcmempdeddetailapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;


import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 15 16:43:21 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DummyVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        transEmpGrp,
        transEmpName,
        transEmpGrpId,
        transEmpId,
        transSlocId,
        transCldId,
        transHoOrgId,
        transOrgId,
        LovEmpGrpVO1,
        LovEmpNamVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int TRANSEMPGRP = AttributesEnum.transEmpGrp.index();
    public static final int TRANSEMPNAME = AttributesEnum.transEmpName.index();
    public static final int TRANSEMPGRPID = AttributesEnum.transEmpGrpId.index();
    public static final int TRANSEMPID = AttributesEnum.transEmpId.index();
    public static final int TRANSSLOCID = AttributesEnum.transSlocId.index();
    public static final int TRANSCLDID = AttributesEnum.transCldId.index();
    public static final int TRANSHOORGID = AttributesEnum.transHoOrgId.index();
    public static final int TRANSORGID = AttributesEnum.transOrgId.index();
    public static final int LOVEMPGRPVO1 = AttributesEnum.LovEmpGrpVO1.index();
    public static final int LOVEMPNAMVO1 = AttributesEnum.LovEmpNamVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DummyVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpGrp.
     * @return the transEmpGrp
     */
    public String gettransEmpGrp() {
        return (String) getAttributeInternal(TRANSEMPGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpGrp.
     * @param value value to set the  transEmpGrp
     */
    public void settransEmpGrp(String value) {
        setAttributeInternal(TRANSEMPGRP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpName.
     * @return the transEmpName
     */
    public String gettransEmpName() {
        return (String) getAttributeInternal(TRANSEMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpName.
     * @param value value to set the  transEmpName
     */
    public void settransEmpName(String value) {
        setAttributeInternal(TRANSEMPNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpGrpId.
     * @return the transEmpGrpId
     */
    public String gettransEmpGrpId() {
        return (String) getAttributeInternal(TRANSEMPGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpGrpId.
     * @param value value to set the  transEmpGrpId
     */
    public void settransEmpGrpId(String value) {
        setAttributeInternal(TRANSEMPGRPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpId.
     * @return the transEmpId
     */
    public String gettransEmpId() {
        return (String) getAttributeInternal(TRANSEMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpId.
     * @param value value to set the  transEmpId
     */
    public void settransEmpId(String value) {
        setAttributeInternal(TRANSEMPID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute transSlocId.
     * @return the transSlocId
     */
    public Integer gettransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSlocId.
     * @param value value to set the  transSlocId
     */
    public void settransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transCldId.
     * @return the transCldId
     */
    public String gettransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        //return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transCldId.
     * @param value value to set the  transCldId
     */
    public void settransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transHoOrgId.
     * @return the transHoOrgId
     */
    public String gettransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transHoOrgId.
     * @param value value to set the  transHoOrgId
     */
    public void settransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transOrgId.
     * @return the transOrgId
     */
    public String gettransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
       // return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOrgId.
     * @param value value to set the  transOrgId
     */
    public void settransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEmpGrpVO1.
     */
    public RowSet getLovEmpGrpVO1() {
        return (RowSet) getAttributeInternal(LOVEMPGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEmpNamVO1.
     */
    public RowSet getLovEmpNamVO1() {
        return (RowSet) getAttributeInternal(LOVEMPNAMVO1);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = valueExp.getValue(elContext).toString();
        return msg;
    }
}

