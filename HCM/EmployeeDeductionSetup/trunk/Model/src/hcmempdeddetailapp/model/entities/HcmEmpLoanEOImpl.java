package hcmempdeddetailapp.model.entities;


import adf.utils.bean.StaticValue;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 21 18:24:23 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpLoanEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        LoanId,
        EmpDocId,
        TotLoanAmt,
        EmpNoEmi,
        EmiStrtDt,
        SubsidyRate,
        InterestRate,
        DownPayment,
        PenalInterestRate,
        ValidStrtDt,
        ValidEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        LoanDocId,
        LoanAmt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int LOANID = AttributesEnum.LoanId.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int TOTLOANAMT = AttributesEnum.TotLoanAmt.index();
    public static final int EMPNOEMI = AttributesEnum.EmpNoEmi.index();
    public static final int EMISTRTDT = AttributesEnum.EmiStrtDt.index();
    public static final int SUBSIDYRATE = AttributesEnum.SubsidyRate.index();
    public static final int INTERESTRATE = AttributesEnum.InterestRate.index();
    public static final int DOWNPAYMENT = AttributesEnum.DownPayment.index();
    public static final int PENALINTERESTRATE = AttributesEnum.PenalInterestRate.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int LOANDOCID = AttributesEnum.LoanDocId.index();
    public static final int LOANAMT = AttributesEnum.LoanAmt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpLoanEOImpl()
    {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hcmempdeddetailapp.model.entities.HcmEmpLoanEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value)
    {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for LoanId, using the alias name LoanId.
     * @return the value of LoanId
     */
    public String getLoanId()
    {
        return (String) getAttributeInternal(LOANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanId.
     * @param value value to set the LoanId
     */
    public void setLoanId(String value)
    {
        setAttributeInternal(LOANID, value);
    }

    /**
     * Gets the attribute value for EmpDocId, using the alias name EmpDocId.
     * @return the value of EmpDocId
     */
    public String getEmpDocId()
    {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDocId.
     * @param value value to set the EmpDocId
     */
    public void setEmpDocId(String value)
    {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for TotLoanAmt, using the alias name TotLoanAmt.
     * @return the value of TotLoanAmt
     */
    public BigDecimal getTotLoanAmt()
    {
        return (BigDecimal) getAttributeInternal(TOTLOANAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotLoanAmt.
     * @param value value to set the TotLoanAmt
     */
    public void setTotLoanAmt(BigDecimal value)
    {
        setAttributeInternal(TOTLOANAMT, value);
    }

    /**
     * Gets the attribute value for EmpNoEmi, using the alias name EmpNoEmi.
     * @return the value of EmpNoEmi
     */
    public Number getEmpNoEmi()
    {
        return (Number) getAttributeInternal(EMPNOEMI);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpNoEmi.
     * @param value value to set the EmpNoEmi
     */
    public void setEmpNoEmi(Number value)
    {
        setAttributeInternal(EMPNOEMI, value);
    }

    /**
     * Gets the attribute value for EmiStrtDt, using the alias name EmiStrtDt.
     * @return the value of EmiStrtDt
     */
    public Timestamp getEmiStrtDt()
    {
        return (Timestamp) getAttributeInternal(EMISTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmiStrtDt.
     * @param value value to set the EmiStrtDt
     */
    public void setEmiStrtDt(Timestamp value)
    {
        setAttributeInternal(EMISTRTDT, value);
    }

    /**
     * Gets the attribute value for SubsidyRate, using the alias name SubsidyRate.
     * @return the value of SubsidyRate
     */
    public Number getSubsidyRate()
    {
        return (Number) getAttributeInternal(SUBSIDYRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SubsidyRate.
     * @param value value to set the SubsidyRate
     */
    public void setSubsidyRate(Number value)
    {
        setAttributeInternal(SUBSIDYRATE, value);
    }

    /**
     * Gets the attribute value for InterestRate, using the alias name InterestRate.
     * @return the value of InterestRate
     */
    public Number getInterestRate()
    {
        return (Number) getAttributeInternal(INTERESTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InterestRate.
     * @param value value to set the InterestRate
     */
    public void setInterestRate(Number value)
    {
        setAttributeInternal(INTERESTRATE, value);
    }

    /**
     * Gets the attribute value for DownPayment, using the alias name DownPayment.
     * @return the value of DownPayment
     */
    public Number getDownPayment()
    {
        return (Number) getAttributeInternal(DOWNPAYMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DownPayment.
     * @param value value to set the DownPayment
     */
    public void setDownPayment(Number value)
    {
        setAttributeInternal(DOWNPAYMENT, value);
    }

    /**
     * Gets the attribute value for PenalInterestRate, using the alias name PenalInterestRate.
     * @return the value of PenalInterestRate
     */
    public Number getPenalInterestRate()
    {
        return (Number) getAttributeInternal(PENALINTERESTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PenalInterestRate.
     * @param value value to set the PenalInterestRate
     */
    public void setPenalInterestRate(Number value)
    {
        setAttributeInternal(PENALINTERESTRATE, value);
    }

    /**
     * Gets the attribute value for ValidStrtDt, using the alias name ValidStrtDt.
     * @return the value of ValidStrtDt
     */
    public Timestamp getValidStrtDt()
    {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidStrtDt.
     * @param value value to set the ValidStrtDt
     */
    public void setValidStrtDt(Timestamp value)
    {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for ValidEndDt, using the alias name ValidEndDt.
     * @return the value of ValidEndDt
     */
    public Timestamp getValidEndDt()
    {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidEndDt.
     * @param value value to set the ValidEndDt
     */
    public void setValidEndDt(Timestamp value)
    {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for LoanDocId, using the alias name LoanDocId.
     * @return the value of LoanDocId
     */
    public String getLoanDocId()
    {
        return (String) getAttributeInternal(LOANDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanDocId.
     * @param value value to set the LoanDocId
     */
    public void setLoanDocId(String value)
    {
        setAttributeInternal(LOANDOCID, value);
    }


    /**
     * Gets the attribute value for LoanAmt, using the alias name LoanAmt.
     * @return the value of LoanAmt
     */
    public Number getLoanAmt()
    {
        return (Number) getAttributeInternal(LOANAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LoanAmt.
     * @param value value to set the LoanAmt
     */
    public void setLoanAmt(Number value)
    {
        setAttributeInternal(LOANAMT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param loanId key constituent
     * @param empDocId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String loanId, String empDocId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId, loanId, empDocId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setHoOrgId( resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        setOrgId( resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
       Number num=new Number(0);
        setInterestRate(num);
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        if (operation == DML_UPDATE) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        }


        super.doDML(operation, e);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = valueExp.getValue(elContext).toString();
        return msg;
    }

}

