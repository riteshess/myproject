package hcmempprfsetup.model.views;

import hcmempprfsetup.model.entities.HcmEmpDpndDtlEOImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 01 15:26:37 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpDpndDtlVORowImpl extends ViewRowImpl {
    public static final int ENTITY_HCMEMPDPNDDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        MemNm,
        MemDob,
        MemAge,
        MemRel,
        MemOccu,
        MemGen,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransMode,
        LovGenderVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int MEMNM = AttributesEnum.MemNm.index();
    public static final int MEMDOB = AttributesEnum.MemDob.index();
    public static final int MEMAGE = AttributesEnum.MemAge.index();
    public static final int MEMREL = AttributesEnum.MemRel.index();
    public static final int MEMOCCU = AttributesEnum.MemOccu.index();
    public static final int MEMGEN = AttributesEnum.MemGen.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int LOVGENDERVO1 = AttributesEnum.LovGenderVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpDpndDtlVORowImpl() {
    }

    /**
     * Gets HcmEmpDpndDtlEO entity object.
     * @return the HcmEmpDpndDtlEO
     */
    public HcmEmpDpndDtlEOImpl getHcmEmpDpndDtlEO() {
        return (HcmEmpDpndDtlEOImpl) getEntity(ENTITY_HCMEMPDPNDDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for MEM_NM using the alias name MemNm.
     * @return the MEM_NM
     */
    public String getMemNm() {
        return (String) getAttributeInternal(MEMNM);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_NM using the alias name MemNm.
     * @param value value to set the MEM_NM
     */
    public void setMemNm(String value) {
        setAttributeInternal(MEMNM, value);
    }

    /**
     * Gets the attribute value for MEM_DOB using the alias name MemDob.
     * @return the MEM_DOB
     */
    public Timestamp getMemDob() {
        return (Timestamp) getAttributeInternal(MEMDOB);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_DOB using the alias name MemDob.
     * @param value value to set the MEM_DOB
     */
    public void setMemDob(Timestamp value) {
        setAttributeInternal(MEMDOB, value);
    }

    /**
     * Gets the attribute value for MEM_AGE using the alias name MemAge.
     * @return the MEM_AGE
     */
    public String getMemAge() {
        return (String) getAttributeInternal(MEMAGE);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_AGE using the alias name MemAge.
     * @param value value to set the MEM_AGE
     */
    public void setMemAge(String value) {
        setAttributeInternal(MEMAGE, value);
    }

    /**
     * Gets the attribute value for MEM_REL using the alias name MemRel.
     * @return the MEM_REL
     */
    public String getMemRel() {
        return (String) getAttributeInternal(MEMREL);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_REL using the alias name MemRel.
     * @param value value to set the MEM_REL
     */
    public void setMemRel(String value) {
        setAttributeInternal(MEMREL, value);
    }

    /**
     * Gets the attribute value for MEM_OCCU using the alias name MemOccu.
     * @return the MEM_OCCU
     */
    public String getMemOccu() {
        return (String) getAttributeInternal(MEMOCCU);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_OCCU using the alias name MemOccu.
     * @param value value to set the MEM_OCCU
     */
    public void setMemOccu(String value) {
        setAttributeInternal(MEMOCCU, value);
    }

    /**
     * Gets the attribute value for MEM_GEN using the alias name MemGen.
     * @return the MEM_GEN
     */
    public String getMemGen() {
        return (String) getAttributeInternal(MEMGEN);
    }

    /**
     * Sets <code>value</code> as attribute value for MEM_GEN using the alias name MemGen.
     * @param value value to set the MEM_GEN
     */
    public void setMemGen(String value) {
        setAttributeInternal(MEMGEN, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode() {
        if (resolvEl("#{pageFlowScope.MODE_OFF_DTL}") != null)
            return (String) resolvEl("#{pageFlowScope.MODE_OFF_DTL}");
        else
            return "V";
        // return (String) getAttributeInternal(TRANSMODE);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGenderVO1.
     */
    public RowSet getLovGenderVO1() {
        return (RowSet) getAttributeInternal(LOVGENDERVO1);
    }
}

