package hcmempprfsetup.model.views;

import hcmempprfsetup.model.entities.HcmEmpSkilEOImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 03 17:54:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpSkilVORowImpl extends ViewRowImpl {
    public static final int ENTITY_HCMEMPSKILEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        EmpCode,
        HoOrgId,
        OrgId,
        SkilId,
        SlocId,
        SkilApliDt,
        SkilDesc,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransMode,
        LovSkilIdVO,
        LovUsrIdVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SKILID = AttributesEnum.SkilId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SKILAPLIDT = AttributesEnum.SkilApliDt.index();
    public static final int SKILDESC = AttributesEnum.SkilDesc.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int LOVSKILIDVO = AttributesEnum.LovSkilIdVO.index();
    public static final int LOVUSRIDVO1 = AttributesEnum.LovUsrIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpSkilVORowImpl() {
    }

    /**
     * Gets HcmEmpSkilEO entity object.
     * @return the HcmEmpSkilEO
     */
    public HcmEmpSkilEOImpl getHcmEmpSkilEO() {
        return (HcmEmpSkilEOImpl) getEntity(ENTITY_HCMEMPSKILEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EMP_CODE using the alias name EmpCode.
     * @return the EMP_CODE
     */
    public Integer getEmpCode() {
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_CODE using the alias name EmpCode.
     * @param value value to set the EMP_CODE
     */
    public void setEmpCode(Integer value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SKIL_ID using the alias name SkilId.
     * @return the SKIL_ID
     */
    public String getSkilId() {
        return (String) getAttributeInternal(SKILID);
    }

    /**
     * Sets <code>value</code> as attribute value for SKIL_ID using the alias name SkilId.
     * @param value value to set the SKIL_ID
     */
    public void setSkilId(String value) {
        setAttributeInternal(SKILID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SKIL_APLI_DT using the alias name SkilApliDt.
     * @return the SKIL_APLI_DT
     */
    public Timestamp getSkilApliDt() {
        return (Timestamp) getAttributeInternal(SKILAPLIDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SKIL_APLI_DT using the alias name SkilApliDt.
     * @param value value to set the SKIL_APLI_DT
     */
    public void setSkilApliDt(Timestamp value) {
        setAttributeInternal(SKILAPLIDT, value);
    }

    /**
     * Gets the attribute value for SKIL_DESC using the alias name SkilDesc.
     * @return the SKIL_DESC
     */
    public String getSkilDesc() {
        return (String) getAttributeInternal(SKILDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for SKIL_DESC using the alias name SkilDesc.
     * @param value value to set the SKIL_DESC
     */
    public void setSkilDesc(String value) {
        setAttributeInternal(SKILDESC, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode() {
        if(resolvEl("#{pageFlowScope.MODE_SKILL}") != null)
               return (String) resolvEl("#{pageFlowScope.MODE_SKILL}");
                       else
                       return "V";
       // return (String) getAttributeInternal(TRANSMODE);
    }

    public String resolvEl(String data) {
                  FacesContext fc = FacesContext.getCurrentInstance();
                  Application app = fc.getApplication();
                  ExpressionFactory elFactory = app.getExpressionFactory();
                  ELContext elContext = fc.getELContext();
                  ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
                  String msg = null;
                  if(valueExp.getValue(elContext) != null)
                   msg = valueExp.getValue(elContext).toString();
                  return msg;
              }    



    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSkilIdVO.
     */
    public RowSet getLovSkilIdVO() {
        return (RowSet) getAttributeInternal(LOVSKILIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO1.
     */
    public RowSet getLovUsrIdVO1() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO1);
    }
}

