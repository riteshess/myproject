package hcmempprfsetup.model.views;

import hcmempprfsetup.model.entities.HcmEmpQualEOImpl;

import hcmempprfsetup.model.modules.HcmEmpPrfAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 30 10:47:17 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpQualiVORowImpl extends ViewRowImpl
{


    public static final int ENTITY_HCMEMPQUALEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        CourseId,
        DocId,
        EmpCode,
        HoOrgId,
        InsNm,
        MarkObtain,
        OrgId,
        SlocId,
        UniNm,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        Yop,
        transCourceNm,
        LovCourcesNmVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COURSEID = AttributesEnum.CourseId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int INSNM = AttributesEnum.InsNm.index();
    public static final int MARKOBTAIN = AttributesEnum.MarkObtain.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int UNINM = AttributesEnum.UniNm.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int YOP = AttributesEnum.Yop.index();
    public static final int TRANSCOURCENM = AttributesEnum.transCourceNm.index();
    public static final int LOVCOURCESNMVO1 = AttributesEnum.LovCourcesNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpQualiVORowImpl()
    {
    }

    /**
     * Gets HcmEmpQualEO entity object.
     * @return the HcmEmpQualEO
     */
    public HcmEmpQualEOImpl getHcmEmpQualEO()
    {
        return (HcmEmpQualEOImpl) getEntity(ENTITY_HCMEMPQUALEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for COURSE_ID using the alias name CourseId.
     * @return the COURSE_ID
     */
    public String getCourseId()
    {
        return (String) getAttributeInternal(COURSEID);
    }

    /**
     * Sets <code>value</code> as attribute value for COURSE_ID using the alias name CourseId.
     * @param value value to set the COURSE_ID
     */
    public void setCourseId(String value)
    {
        setAttributeInternal(COURSEID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value)
    {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EMP_CODE using the alias name EmpCode.
     * @return the EMP_CODE
     */
    public Number getEmpCode()
    {
        return (Number) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_CODE using the alias name EmpCode.
     * @param value value to set the EMP_CODE
     */
    public void setEmpCode(Number value)
    {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for INS_NM using the alias name InsNm.
     * @return the INS_NM
     */
    public String getInsNm()
    {
        return (String) getAttributeInternal(INSNM);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_NM using the alias name InsNm.
     * @param value value to set the INS_NM
     */
    public void setInsNm(String value)
    {
        setAttributeInternal(INSNM, value);
    }

    /**
     * Gets the attribute value for MARK_OBTAIN using the alias name MarkObtain.
     * @return the MARK_OBTAIN
     */
    public Integer getMarkObtain()
    {
        return (Integer) getAttributeInternal(MARKOBTAIN);
    }

    /**
     * Sets <code>value</code> as attribute value for MARK_OBTAIN using the alias name MarkObtain.
     * @param value value to set the MARK_OBTAIN
     */
    public void setMarkObtain(Integer value)
    {
        setAttributeInternal(MARKOBTAIN, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for UNI_NM using the alias name UniNm.
     * @return the UNI_NM
     */
    public String getUniNm()
    {
        return (String) getAttributeInternal(UNINM);
    }

    /**
     * Sets <code>value</code> as attribute value for UNI_NM using the alias name UniNm.
     * @param value value to set the UNI_NM
     */
    public void setUniNm(String value)
    {
        setAttributeInternal(UNINM, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for YOP using the alias name Yop.
     * @return the YOP
     */
    public String getYop()
    {
        return (String) getAttributeInternal(YOP);
    }

    /**
     * Sets <code>value</code> as attribute value for YOP using the alias name Yop.
     * @param value value to set the YOP
     */
    public void setYop(String value)
    {
        setAttributeInternal(YOP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transCourceNm.
     * @return the transCourceNm
     */
    public String gettransCourceNm()
    {
        String courcENm = "";
        if (getCourseId() != null && getCourseId().toString().length() > 0)
        {
            HcmEmpPrfAMImpl am = (HcmEmpPrfAMImpl) this.getApplicationModule();
            Row[] filteredRows = am.getLovCourcesNm1().getFilteredRows("ParamId", getCourseId());
            if (filteredRows.length > 0) 
            {
                courcENm = filteredRows[0].getAttribute("ParamDesc").toString(); 
                if(courcENm!=null)
                {
                    return courcENm;
                }
            }
        }
        return (String) getAttributeInternal(TRANSCOURCENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transCourceNm.
     * @param value value to set the  transCourceNm
     */
    public void settransCourceNm(String value)
    {
        setAttributeInternal(TRANSCOURCENM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCourcesNmVO1.
     */
    public RowSet getLovCourcesNmVO1()
    {
        return (RowSet) getAttributeInternal(LOVCOURCESNMVO1);
    }
}

