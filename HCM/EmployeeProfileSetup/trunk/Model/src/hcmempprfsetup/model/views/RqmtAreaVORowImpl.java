package hcmempprfsetup.model.views;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 20 11:11:37 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RqmtAreaVORowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        OrgId,
        RqmtAreaId,
        RqmtAreaNm,
        AddsId,
        DfltWh,
        ProductionFlg,
        CostCentreFlg,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        RetnblIssuOnly,
        SvcCentreFlg,
        DeptId,
        RqmtAreaType,
        AddressTrans,
        TransDeptNm,
        LovAddressVO,
        LovWarehouseFrTbleVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int RQMTAREANM = AttributesEnum.RqmtAreaNm.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int DFLTWH = AttributesEnum.DfltWh.index();
    public static final int PRODUCTIONFLG = AttributesEnum.ProductionFlg.index();
    public static final int COSTCENTREFLG = AttributesEnum.CostCentreFlg.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int RETNBLISSUONLY = AttributesEnum.RetnblIssuOnly.index();
    public static final int SVCCENTREFLG = AttributesEnum.SvcCentreFlg.index();
    public static final int DEPTID = AttributesEnum.DeptId.index();
    public static final int RQMTAREATYPE = AttributesEnum.RqmtAreaType.index();
    public static final int ADDRESSTRANS = AttributesEnum.AddressTrans.index();
    public static final int TRANSDEPTNM = AttributesEnum.TransDeptNm.index();
    public static final int LOVADDRESSVO = AttributesEnum.LovAddressVO.index();
    public static final int LOVWAREHOUSEFRTBLEVO1 = AttributesEnum.LovWarehouseFrTbleVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RqmtAreaVORowImpl()
    {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaId.
     * @return the RqmtAreaId
     */
    public Integer getRqmtAreaId()
    {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaNm.
     * @return the RqmtAreaNm
     */
    public String getRqmtAreaNm()
    {
        return (String) getAttributeInternal(RQMTAREANM);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsId.
     * @return the AddsId
     */
    public String getAddsId()
    {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddsId.
     * @param value value to set the  AddsId
     */
    public void setAddsId(String value)
    {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DfltWh.
     * @return the DfltWh
     */
    public String getDfltWh()
    {
        return (String) getAttributeInternal(DFLTWH);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DfltWh.
     * @param value value to set the  DfltWh
     */
    public void setDfltWh(String value)
    {
        setAttributeInternal(DFLTWH, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductionFlg.
     * @return the ProductionFlg
     */
    public String getProductionFlg()
    {
        return (String) getAttributeInternal(PRODUCTIONFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute CostCentreFlg.
     * @return the CostCentreFlg
     */
    public String getCostCentreFlg()
    {
        return (String) getAttributeInternal(COSTCENTREFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Long getUsrIdCreate()
    {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Long getUsrIdMod()
    {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for the calculated attribute RetnblIssuOnly.
     * @return the RetnblIssuOnly
     */
    public String getRetnblIssuOnly()
    {
        return (String) getAttributeInternal(RETNBLISSUONLY);
    }

    /**
     * Gets the attribute value for the calculated attribute SvcCentreFlg.
     * @return the SvcCentreFlg
     */
    public String getSvcCentreFlg()
    {
        return (String) getAttributeInternal(SVCCENTREFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptId.
     * @return the DeptId
     */
    public String getDeptId()
    {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaType.
     * @return the RqmtAreaType
     */
    public Integer getRqmtAreaType()
    {
        return (Integer) getAttributeInternal(RQMTAREATYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute AddressTrans.
     * @return the AddressTrans
     */
    public String getAddressTrans()
    {
        if (getAddsId() != null) {
            getLovAddressVO().setNamedWhereClauseParam("slocBind", getSlocId());
            getLovAddressVO().setNamedWhereClauseParam("cldBind", getCldId());
            getLovAddressVO().executeQuery();
            Row[] filteredRows = getLovAddressVO().getFilteredRows("AddsId", getAddsId());
            if (filteredRows.length > 0) {
                String address = filteredRows[0].getAttribute("Adds").toString();
                return address;
            }
        }
        return (String) getAttributeInternal(ADDRESSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddressTrans.
     * @param value value to set the  AddressTrans
     */
    public void setAddressTrans(String value)
    {
        setAttributeInternal(ADDRESSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDeptNm.
     * @return the TransDeptNm
     */
    public String getTransDeptNm()
    {
        return (String) getAttributeInternal(TRANSDEPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDeptNm.
     * @param value value to set the  TransDeptNm
     */
    public void setTransDeptNm(String value)
    {
        setAttributeInternal(TRANSDEPTNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddressVO.
     */
    public RowSet getLovAddressVO()
    {
        return (RowSet) getAttributeInternal(LOVADDRESSVO);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovWarehouseFrTbleVO1.
     */
    public RowSet getLovWarehouseFrTbleVO1()
    {
        return (RowSet) getAttributeInternal(LOVWAREHOUSEFRTBLEVO1);
    }
}

