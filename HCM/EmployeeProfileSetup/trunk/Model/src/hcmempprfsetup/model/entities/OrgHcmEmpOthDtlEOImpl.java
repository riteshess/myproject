package hcmempprfsetup.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 28 17:37:24 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgHcmEmpOthDtlEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        OthDtlTypId,
        EmpDocNo,
        DocIssuePlace,
        c,
        DocExpDt,
        IssAuth,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OTHDTLTYPID = AttributesEnum.OthDtlTypId.index();
    public static final int EMPDOCNO = AttributesEnum.EmpDocNo.index();
    public static final int DOCISSUEPLACE = AttributesEnum.DocIssuePlace.index();
    public static final int C = AttributesEnum.c.index();
    public static final int DOCEXPDT = AttributesEnum.DocExpDt.index();
    public static final int ISSAUTH = AttributesEnum.IssAuth.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgHcmEmpOthDtlEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hcmempprfsetup.model.entities.OrgHcmEmpOthDtlEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for OthDtlTypId, using the alias name OthDtlTypId.
     * @return the value of OthDtlTypId
     */
    public Integer getOthDtlTypId() {
        return (Integer) getAttributeInternal(OTHDTLTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OthDtlTypId.
     * @param value value to set the OthDtlTypId
     */
    public void setOthDtlTypId(Integer value) {
        setAttributeInternal(OTHDTLTYPID, value);
    }

    /**
     * Gets the attribute value for EmpDocNo, using the alias name EmpDocNo.
     * @return the value of EmpDocNo
     */
    public String getEmpDocNo() {
        return (String) getAttributeInternal(EMPDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDocNo.
     * @param value value to set the EmpDocNo
     */
    public void setEmpDocNo(String value) {
        setAttributeInternal(EMPDOCNO, value);
    }

    /**
     * Gets the attribute value for DocIssuePlace, using the alias name DocIssuePlace.
     * @return the value of DocIssuePlace
     */
    public String getDocIssuePlace() {
        return (String) getAttributeInternal(DOCISSUEPLACE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIssuePlace.
     * @param value value to set the DocIssuePlace
     */
    public void setDocIssuePlace(String value) {
        setAttributeInternal(DOCISSUEPLACE, value);
    }

    /**
     * Gets the attribute value for DocIssueDt, using the alias name DocIssueDt.
     * @return the value of DocIssueDt
     */
    public Timestamp getc() {
        return (Timestamp) getAttributeInternal(C);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIssueDt.
     * @param value value to set the DocIssueDt
     */
    public void setc(Timestamp value) {
        setAttributeInternal(C, value);
    }

    /**
     * Gets the attribute value for DocExpDt, using the alias name DocExpDt.
     * @return the value of DocExpDt
     */
    public java.sql.Timestamp getDocExpDt() {
        return (java.sql.Timestamp) getAttributeInternal(DOCEXPDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocExpDt.
     * @param value value to set the DocExpDt
     */
    public void setDocExpDt(java.sql.Timestamp value) {
        setAttributeInternal(DOCEXPDT, value);
    }

    /**
     * Gets the attribute value for IssAuth, using the alias name IssAuth.
     * @return the value of IssAuth
     */
    public String getIssAuth() {
        return (String) getAttributeInternal(ISSAUTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssAuth.
     * @param value value to set the IssAuth
     */
    public void setIssAuth(String value) {
        setAttributeInternal(ISSAUTH, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param othDtlTypId key constituent
     * @param empDocNo key constituent
     * @param docExpDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       Integer othDtlTypId, String empDocNo, java.sql.Timestamp docExpDt) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId, othDtlTypId, empDocNo, docExpDt });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(String data) {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

