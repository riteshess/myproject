package hcmempprfsetup.model.entities;



import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 28 16:51:38 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmEmpCtcEOImpl extends EntityImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        EmpDocId,
        TtlAmt,
        RemainAmt,
        ValidStrtDt,
        ValidEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EmpCode,
        VarType,
        VarVal,
        VarChk;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int TTLAMT = AttributesEnum.TtlAmt.index();
    public static final int REMAINAMT = AttributesEnum.RemainAmt.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int VARTYPE = AttributesEnum.VarType.index();
    public static final int VARVAL = AttributesEnum.VarVal.index();
    public static final int VARCHK = AttributesEnum.VarChk.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmEmpCtcEOImpl()
    {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject()
    {
        return EntityDefImpl.findDefObject("hcmempprfsetup.model.entities.HcmEmpCtcEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value)
    {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EmpDocId, using the alias name EmpDocId.
     * @return the value of EmpDocId
     */
    public String getEmpDocId()
    {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpDocId.
     * @param value value to set the EmpDocId
     */
    public void setEmpDocId(String value)
    {
        setAttributeInternal(EMPDOCID, value);
    }

    /**
     * Gets the attribute value for TtlAmt, using the alias name TtlAmt.
     * @return the value of TtlAmt
     */
    public Number getTtlAmt()
    {
        return (Number) getAttributeInternal(TTLAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TtlAmt.
     * @param value value to set the TtlAmt
     */
    public void setTtlAmt(Number value)
    {
        setAttributeInternal(TTLAMT, value);
    }

    /**
     * Gets the attribute value for RemainAmt, using the alias name RemainAmt.
     * @return the value of RemainAmt
     */
    public Number getRemainAmt()
    {
        return (Number) getAttributeInternal(REMAINAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RemainAmt.
     * @param value value to set the RemainAmt
     */
    public void setRemainAmt(Number value)
    {
        setAttributeInternal(REMAINAMT, value);
    }

    /**
     * Gets the attribute value for ValidStrtDt, using the alias name ValidStrtDt.
     * @return the value of ValidStrtDt
     */
    public Timestamp getValidStrtDt()
    {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidStrtDt.
     * @param value value to set the ValidStrtDt
     */
    public void setValidStrtDt(Timestamp value)
    {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for ValidEndDt, using the alias name ValidEndDt.
     * @return the value of ValidEndDt
     */
    public Timestamp getValidEndDt()
    {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidEndDt.
     * @param value value to set the ValidEndDt
     */
    public void setValidEndDt(Timestamp value)
    {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EmpCode, using the alias name EmpCode.
     * @return the value of EmpCode
     */
    public Integer getEmpCode()
    {
        return (Integer) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpCode.
     * @param value value to set the EmpCode
     */
    public void setEmpCode(Integer value)
    {
        setAttributeInternal(EMPCODE, value);
    }


    /**
     * Gets the attribute value for VarType, using the alias name VarType.
     * @return the value of VarType
     */
    public String getVarType()
    {
        return (String) getAttributeInternal(VARTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VarType.
     * @param value value to set the VarType
     */
    public void setVarType(String value)
    {
        setAttributeInternal(VARTYPE, value);
    }

    /**
     * Gets the attribute value for VarVal, using the alias name VarVal.
     * @return the value of VarVal
     */
    public Number getVarVal()
    {
        return (Number) getAttributeInternal(VARVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for VarVal.
     * @param value value to set the VarVal
     */
    public void setVarVal(Number value)
    {
        setAttributeInternal(VARVAL, value);
    }


    /**
     * Gets the attribute value for VarChk, using the alias name VarChk.
     * @return the value of VarChk
     */
    public String getVarChk()
    {
        return (String) getAttributeInternal(VARCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for VarChk.
     * @param value value to set the VarChk
     */
    public void setVarChk(String value)
    {
        setAttributeInternal(VARCHK, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param empDocId key constituent
     * @param ttlAmt key constituent
     * @param remainAmt key constituent
     * @param validStrtDt key constituent
     * @param validEndDt key constituent
     * @param usrIdCreate key constituent
     * @param usrIdCreateDt key constituent
     * @param usrIdMod key constituent
     * @param usrIdModDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String empDocId, Number ttlAmt, Number remainAmt, Timestamp validStrtDt,
                                       Timestamp validEndDt, Integer usrIdCreate, Timestamp usrIdCreateDt,
                                       Integer usrIdMod, Timestamp usrIdModDt)
    {
        return new Key(new Object[]
        {
            cldId, slocId, hoOrgId, orgId, docId, empDocId, ttlAmt, remainAmt, validStrtDt, validEndDt, usrIdCreate,
            usrIdCreateDt, usrIdMod, usrIdModDt
        });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList)
    {
        setCldId((String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setHoOrgId((String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        setOrgId((String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        setDocId(resolvEl("#{pageFlowScope.emp_doc_id}").toString());
        setEmpCode(Integer.parseInt(resolvEl("#{pageFlowScope.emp_code}").toString()));
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setVarChk("N");
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock()
    {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e)
    {
        if (operation == DML_INSERT)
        {

        }
        if (operation == DML_UPDATE)
        {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(String data)
    {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

