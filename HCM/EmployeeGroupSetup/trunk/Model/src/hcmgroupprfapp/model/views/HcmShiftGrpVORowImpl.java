package hcmgroupprfapp.model.views;

import hcmgroupprfapp.model.entities.HcmShiftGrpEOImpl;

import hcmgroupprfapp.model.modules.HcmGrpPrfAMImpl;

import java.text.SimpleDateFormat;

import java.util.Calendar;
import java.util.Date;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 01 11:37:23 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmShiftGrpVORowImpl extends ViewRowImpl {
    public static final int ENTITY_HCMSHIFTGRPEO = 0;
    String hoOrgId = (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    String cldId = (String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
    Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
    String orgId = (String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        GrpId,
        HoOrgId,
        OrgId,
        ShiftId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidEndDt,
        ValidStrtDt,
        TransShiftStrtTm,
        TransShiftendTm,
        TransShiftAvlTm,
        TransIsShiftUsed,
        TransMode,
        ExtraTimeCutoff,
        TransExtraTimeStart,
        LovShiftId;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int TRANSSHIFTSTRTTM = AttributesEnum.TransShiftStrtTm.index();
    public static final int TRANSSHIFTENDTM = AttributesEnum.TransShiftendTm.index();
    public static final int TRANSSHIFTAVLTM = AttributesEnum.TransShiftAvlTm.index();
    public static final int TRANSISSHIFTUSED = AttributesEnum.TransIsShiftUsed.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int EXTRATIMECUTOFF = AttributesEnum.ExtraTimeCutoff.index();
    public static final int TRANSEXTRATIMESTART = AttributesEnum.TransExtraTimeStart.index();
    public static final int LOVSHIFTID = AttributesEnum.LovShiftId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmShiftGrpVORowImpl() {
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();

        return msg;
    }

    /**
     * Gets HcmShiftGrpEO entity object.
     * @return the HcmShiftGrpEO
     */
    public HcmShiftGrpEOImpl getHcmShiftGrpEO() {
        return (HcmShiftGrpEOImpl) getEntity(ENTITY_HCMSHIFTGRPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SHIFT_ID using the alias name ShiftId.
     * @return the SHIFT_ID
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIFT_ID using the alias name ShiftId.
     * @param value value to set the SHIFT_ID
     */
    public void setShiftId(String value) {
        setAttributeInternal(SHIFTID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @return the VALID_END_DT
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @param value value to set the VALID_END_DT
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @return the VALID_STRT_DT
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @param value value to set the VALID_STRT_DT
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftStrtTm.
     * @return the TransShiftStrtTm
     */
    public String getTransShiftStrtTm() {
        if (getAttributeInternal(TRANSSHIFTSTRTTM) == null || getAttributeInternal(TRANSSHIFTSTRTTM) == " ") {
            System.out.println("inside if in start time shift");
            HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
            am.getLovShiftId().setNamedWhereClauseParam("cldIdBindVar", cldId);
            am.getLovShiftId().setNamedWhereClauseParam("slocIdBindVar", slocId);
            am.getLovShiftId().setNamedWhereClauseParam("orgIdBindVar", orgId);
            am.getLovShiftId().setNamedWhereClauseParam("hoOrgIdBindVar", hoOrgId);
            am.getLovShiftId().executeQuery();
            Row r[] = am.getLovShiftId().getFilteredRows("ShiftId", getShiftId());
            System.out.println("start time length" + r.length);
            if (r.length > 0)
                return (String) r[0].getAttribute("ShiftStartTm");
        }
        return (String) getAttributeInternal(TRANSSHIFTSTRTTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShiftStrtTm.
     * @param value value to set the  TransShiftStrtTm
     */
    public void setTransShiftStrtTm(String value) {
        setAttributeInternal(TRANSSHIFTSTRTTM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftendTm.
     * @return the TransShiftendTm
     */
    public String getTransShiftendTm() {
        if (getAttributeInternal(TRANSSHIFTENDTM) == null) {
            HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
            am.getLovShiftId().setNamedWhereClauseParam("cldIdBindVar", cldId);
            am.getLovShiftId().setNamedWhereClauseParam("slocIdBindVar", slocId);
            //   am.getLovShiftId().setNamedWhereClauseParam("orgIdBindVar", orgId);
            am.getLovShiftId().setNamedWhereClauseParam("hoOrgIdBindVar", hoOrgId);
            am.getLovShiftId().executeQuery();
            Row r[] = am.getLovShiftId().getFilteredRows("ShiftId", getShiftId());
            if (r.length > 0)
                return (String) r[0].getAttribute("ShiftEndTm");
        }
        return (String) getAttributeInternal(TRANSSHIFTENDTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShiftendTm.
     * @param value value to set the  TransShiftendTm
     */
    public void setTransShiftendTm(String value) {
        setAttributeInternal(TRANSSHIFTENDTM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftAvlTm.
     * @return the TransShiftAvlTm
     */
    public Number getTransShiftAvlTm() {
        if (getAttributeInternal(TRANSSHIFTAVLTM) == null) {
            HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
            am.getLovShiftId().setNamedWhereClauseParam("cldIdBindVar", cldId);
            am.getLovShiftId().setNamedWhereClauseParam("slocIdBindVar", slocId);
            am.getLovShiftId().setNamedWhereClauseParam("orgIdBindVar", orgId);
            am.getLovShiftId().setNamedWhereClauseParam("hoOrgIdBindVar", hoOrgId);
            am.getLovShiftId().executeQuery();
            Row r[] = am.getLovShiftId().getFilteredRows("ShiftId", getShiftId());
            if (r.length > 0)
                return (Number) r[0].getAttribute("ShiftAvlTm");
        }
        return (Number) getAttributeInternal(TRANSSHIFTAVLTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShiftAvlTm.
     * @param value value to set the  TransShiftAvlTm
     */
    public void setTransShiftAvlTm(Number value) {
        setAttributeInternal(TRANSSHIFTAVLTM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsShiftUsed.
     * @return the TransIsShiftUsed
     */
    public String getTransIsShiftUsed() {
        HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
        RowQualifier rq = new RowQualifier(am.getGrpShiftUsage());
        rq.setWhereClause("CldId ='" + getCldId() + "' and SlocId=" + getSlocId() + " and HoOrgId='" + getHoOrgId() +
                          "' and OrgId = '" + getOrgId() + "' and EmpGrpId='" + getGrpId() + "' and ShiftId='" +
                          getShiftId() + "'");
        Row[] fr = am.getGrpShiftUsage().getFilteredRows(rq);
        if (fr.length > 0)
            return "Y";
        else
            return "N";
        // return (String) getAttributeInternal(TRANSISSHIFTUSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsShiftUsed.
     * @param value value to set the  TransIsShiftUsed
     */
    public void setTransIsShiftUsed(String value) {
        setAttributeInternal(TRANSISSHIFTUSED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public String getTransMode() {
        if (resolvEl("#{pageFlowScope.ADD_EDIT_MODE}") != null)
            return (String) resolvEl("#{pageFlowScope.ADD_EDIT_MODE}");
        return (String) getAttributeInternal(TRANSMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(String value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the attribute value for EXTRA_TIME_CUTOFF using the alias name ExtraTimeCutoff.
     * @return the EXTRA_TIME_CUTOFF
     */
    public String getExtraTimeCutoff() {
        if(getAttributeInternal(EXTRATIMECUTOFF)==null){
            return "00:00";
        }
        return (String) getAttributeInternal(EXTRATIMECUTOFF);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTRA_TIME_CUTOFF using the alias name ExtraTimeCutoff.
     * @param value value to set the EXTRA_TIME_CUTOFF
     */
    public void setExtraTimeCutoff(String value) {
        setAttributeInternal(EXTRATIMECUTOFF, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExtraTimeStart.
     * @return the TransExtraTimeStart
     */
    public String getTransExtraTimeStart() {
        if(this.getExtraTimeCutoff()!=null){
            String val = this.getExtraTimeCutoff();
            String[] split = val.split(":");
            if(split.length>0){
                Integer h = Integer.parseInt(split[0]);
                Integer m = Integer.parseInt(split[1]);
                if(h==0 && m==0){
                   return (String)this.getTransShiftendTm();
                }else{
                    try{
                     String endSh = (String)this.getTransShiftendTm();
                     SimpleDateFormat df = new SimpleDateFormat("hh:mm a");
                     Date d = df.parse(endSh); 
                     Calendar cal = Calendar.getInstance();
                     cal.setTime(d);
                     cal.add(Calendar.HOUR, h);
                     cal.add(Calendar.MINUTE, m);
                     String newTime = df.format(cal.getTime());
                    return newTime;
                    }catch(Exception e){}
                }
            }
        }
        return (String) getAttributeInternal(TRANSEXTRATIMESTART);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExtraTimeStart.
     * @param value value to set the  TransExtraTimeStart
     */
    public void setTransExtraTimeStart(String value) {
        setAttributeInternal(TRANSEXTRATIMESTART, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShiftId.
     */
    public RowSet getLovShiftId() {
        return (RowSet) getAttributeInternal(LOVSHIFTID);
    }
}

