package hcmgroupprfapp.model.views;


import adf.utils.ebiz.EbizParams;

import hcmgroupprfapp.model.entities.OrgHcmGrpPrfEOImpl;

import hcmgroupprfapp.model.modules.HcmGrpPrfAMImpl;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import oracle.jbo.domain.Number;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 13 14:41:10 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgHcmGrpPrfVORowImpl extends ViewRowImpl {


    public static final int ENTITY_ORGHCMGRPPRFEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AttenSkipCh,
        AttenUploadCh,
        AuthStat,
        CldId,
        ExtraTimeRule,
        GrpId,
        HoOrgId,
        OrgId,
        SalProcFreq,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidEndDt,
        ValidStrtDt,
        Remarks,
        FreqDays,
        TransIsBeingUsed,
        TransExtraTimeChk,
        WkOffType,
        TransCompOffChk,
        GrtChk,
        BonusType,
        LwfChk,
        transIsBonusAvl,
        transIsGratAvl,
        transIsLwfAvl,
        GrpCoaId,
        TransGrpCoaNm,
        TransChkGrpCoa,
        GrpHrs,
        transIsWagesHourAvl,
        GrpHrsWgesChk,
        MpesaGrpRef,
        TransChkMpesa,
        LtaChk,
        transIsLtaAvl,
        LegacyCode,
        HcmExtraTimeGrp,
        HcmShiftGrp,
        HcmGrpCompOff,
        HcmGrpGratCal,
        HcmGrpLwf,
        HcmGrpBonsExgratia,
        HcmGrpLveLybltyCalc,
        HcmGrpLTA,
        LovUsrId,
        LovSalProcFreq,
        WeekOffTypeVO1,
        AddIncmeTypeVO1,
        LovCoaVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ATTENSKIPCH = AttributesEnum.AttenSkipCh.index();
    public static final int ATTENUPLOADCH = AttributesEnum.AttenUploadCh.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int EXTRATIMERULE = AttributesEnum.ExtraTimeRule.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SALPROCFREQ = AttributesEnum.SalProcFreq.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int FREQDAYS = AttributesEnum.FreqDays.index();
    public static final int TRANSISBEINGUSED = AttributesEnum.TransIsBeingUsed.index();
    public static final int TRANSEXTRATIMECHK = AttributesEnum.TransExtraTimeChk.index();
    public static final int WKOFFTYPE = AttributesEnum.WkOffType.index();
    public static final int TRANSCOMPOFFCHK = AttributesEnum.TransCompOffChk.index();
    public static final int GRTCHK = AttributesEnum.GrtChk.index();
    public static final int BONUSTYPE = AttributesEnum.BonusType.index();
    public static final int LWFCHK = AttributesEnum.LwfChk.index();
    public static final int TRANSISBONUSAVL = AttributesEnum.transIsBonusAvl.index();
    public static final int TRANSISGRATAVL = AttributesEnum.transIsGratAvl.index();
    public static final int TRANSISLWFAVL = AttributesEnum.transIsLwfAvl.index();
    public static final int GRPCOAID = AttributesEnum.GrpCoaId.index();
    public static final int TRANSGRPCOANM = AttributesEnum.TransGrpCoaNm.index();
    public static final int TRANSCHKGRPCOA = AttributesEnum.TransChkGrpCoa.index();
    public static final int GRPHRS = AttributesEnum.GrpHrs.index();
    public static final int TRANSISWAGESHOURAVL = AttributesEnum.transIsWagesHourAvl.index();
    public static final int GRPHRSWGESCHK = AttributesEnum.GrpHrsWgesChk.index();
    public static final int MPESAGRPREF = AttributesEnum.MpesaGrpRef.index();
    public static final int TRANSCHKMPESA = AttributesEnum.TransChkMpesa.index();
    public static final int LTACHK = AttributesEnum.LtaChk.index();
    public static final int TRANSISLTAAVL = AttributesEnum.transIsLtaAvl.index();
    public static final int LEGACYCODE = AttributesEnum.LegacyCode.index();
    public static final int HCMEXTRATIMEGRP = AttributesEnum.HcmExtraTimeGrp.index();
    public static final int HCMSHIFTGRP = AttributesEnum.HcmShiftGrp.index();
    public static final int HCMGRPCOMPOFF = AttributesEnum.HcmGrpCompOff.index();
    public static final int HCMGRPGRATCAL = AttributesEnum.HcmGrpGratCal.index();
    public static final int HCMGRPLWF = AttributesEnum.HcmGrpLwf.index();
    public static final int HCMGRPBONSEXGRATIA = AttributesEnum.HcmGrpBonsExgratia.index();
    public static final int HCMGRPLVELYBLTYCALC = AttributesEnum.HcmGrpLveLybltyCalc.index();
    public static final int HCMGRPLTA = AttributesEnum.HcmGrpLTA.index();
    public static final int LOVUSRID = AttributesEnum.LovUsrId.index();
    public static final int LOVSALPROCFREQ = AttributesEnum.LovSalProcFreq.index();
    public static final int WEEKOFFTYPEVO1 = AttributesEnum.WeekOffTypeVO1.index();
    public static final int ADDINCMETYPEVO1 = AttributesEnum.AddIncmeTypeVO1.index();
    public static final int LOVCOAVO1 = AttributesEnum.LovCoaVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgHcmGrpPrfVORowImpl() {
    }

    /**
     * Gets OrgHcmGrpPrfEO entity object.
     * @return the OrgHcmGrpPrfEO
     */
    public OrgHcmGrpPrfEOImpl getOrgHcmGrpPrfEO() {
        return (OrgHcmGrpPrfEOImpl) getEntity(ENTITY_ORGHCMGRPPRFEO);
    }

    /**
     * Gets the attribute value for ATTEN_SKIP_CH using the alias name AttenSkipCh.
     * @return the ATTEN_SKIP_CH
     */
    public String getAttenSkipCh() {
        return (String) getAttributeInternal(ATTENSKIPCH);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTEN_SKIP_CH using the alias name AttenSkipCh.
     * @param value value to set the ATTEN_SKIP_CH
     */
    public void setAttenSkipCh(String value) {
        if (value != null && value.equals("Y"))
            setAttenUploadCh("N");
        setAttributeInternal(ATTENSKIPCH, value);
    }

    /**
     * Gets the attribute value for ATTEN_UPLOAD_CH using the alias name AttenUploadCh.
     * @return the ATTEN_UPLOAD_CH
     */
    public String getAttenUploadCh() {
        return (String) getAttributeInternal(ATTENUPLOADCH);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTEN_UPLOAD_CH using the alias name AttenUploadCh.
     * @param value value to set the ATTEN_UPLOAD_CH
     */
    public void setAttenUploadCh(String value) {
        if (value != null && value.equals("Y"))
            setAttenSkipCh("N");
        setAttributeInternal(ATTENUPLOADCH, value);
    }

    /**
     * Gets the attribute value for AUTH_STAT using the alias name AuthStat.
     * @return the AUTH_STAT
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_STAT using the alias name AuthStat.
     * @param value value to set the AUTH_STAT
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for EXTRA_TIME_RULE using the alias name ExtraTimeRule.
     * @return the EXTRA_TIME_RULE
     */
    public String getExtraTimeRule() {
        return (String) getAttributeInternal(EXTRATIMERULE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXTRA_TIME_RULE using the alias name ExtraTimeRule.
     * @param value value to set the EXTRA_TIME_RULE
     */
    public void setExtraTimeRule(String value) {
        setAttributeInternal(EXTRATIMERULE, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SAL_PROC_FREQ using the alias name SalProcFreq.
     * @return the SAL_PROC_FREQ
     */
    public Integer getSalProcFreq() {
        return (Integer) getAttributeInternal(SALPROCFREQ);
    }

    /**
     * Sets <code>value</code> as attribute value for SAL_PROC_FREQ using the alias name SalProcFreq.
     * @param value value to set the SAL_PROC_FREQ
     */
    public void setSalProcFreq(Integer value) {
        if (!(value != null && value.equals(new Integer(9))))
            setFreqDays(new Integer(0));
        setAttributeInternal(SALPROCFREQ, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @return the VALID_END_DT
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_END_DT using the alias name ValidEndDt.
     * @param value value to set the VALID_END_DT
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @return the VALID_STRT_DT
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_STRT_DT using the alias name ValidStrtDt.
     * @param value value to set the VALID_STRT_DT
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for FREQ_DAYS using the alias name FreqDays.
     * @return the FREQ_DAYS
     */
    public Integer getFreqDays() {
        return (Integer) getAttributeInternal(FREQDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for FREQ_DAYS using the alias name FreqDays.
     * @param value value to set the FREQ_DAYS
     */
    public void setFreqDays(Integer value) {
        setAttributeInternal(FREQDAYS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsBeingUsed.
     * @return the TransIsBeingUsed
     */
    public String getTransIsBeingUsed() {
        HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
        RowQualifier rq = new RowQualifier(am.getGrpUsage());
        rq.setWhereClause("CldId ='" + getCldId() + "' and SlocId=" + getSlocId() + " and HoOrgId='" + getHoOrgId() +
                          "' and OrgId = '" + getOrgId() + "' and GrpId='" + getGrpId() + "'");
        Row[] fr = am.getGrpUsage().getFilteredRows(rq);
        if (fr.length > 0)
            return "Y";
        else
            return "N";

        // return (String) getAttributeInternal(TRANSISBEINGUSED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsBeingUsed.
     * @param value value to set the  TransIsBeingUsed
     */
    public void setTransIsBeingUsed(String value) {
        setAttributeInternal(TRANSISBEINGUSED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExtraTimeChk.
     * @return the TransExtraTimeChk
     */
    public String getTransExtraTimeChk() {
        if (getAttributeInternal(TRANSEXTRATIMECHK) == null) {
            HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
            ViewObjectImpl hcmProfile1 = am.getOrgHcmProfile1();
            Row[] filteredRows = hcmProfile1.getFilteredRows("OrgId", getOrgId());
            if (filteredRows.length > 0) {
                String chk = filteredRows[0].getAttribute("ExtTimeRule").toString();
                System.out.println("ext check value is ---" + chk);
                return chk;
            }
        }
        return (String) getAttributeInternal(TRANSEXTRATIMECHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExtraTimeChk.
     * @param value value to set the  TransExtraTimeChk
     */
    public void setTransExtraTimeChk(String value) {
        setAttributeInternal(TRANSEXTRATIMECHK, value);
    }

    /**
     * Gets the attribute value for WK_OFF_TYPE using the alias name WkOffType.
     * @return the WK_OFF_TYPE
     */
    public Integer getWkOffType() {
        return (Integer) getAttributeInternal(WKOFFTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for WK_OFF_TYPE using the alias name WkOffType.
     * @param value value to set the WK_OFF_TYPE
     */
    public void setWkOffType(Integer value) {
        setAttributeInternal(WKOFFTYPE, value);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();

        return msg;
    }

    /**
     * Gets the attribute value for the calculated attribute TransCompOffChk.
     * @return the TransCompOffChk
     */
    public String getTransCompOffChk() {
        String hoOrgId = (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cldId = (String) resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String orgId = (String) resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
        if (getGrpId() != null) {
            System.out.println("Incomp Off Chk----->grp Id Not Null" + getGrpId());
            String grpId = getGrpId();

            am.getOrgHcmLeaveVO1().setNamedWhereClauseParam("BindCldId", cldId);
            am.getOrgHcmLeaveVO1().setNamedWhereClauseParam("BindHoOrgId", hoOrgId);
            am.getOrgHcmLeaveVO1().setNamedWhereClauseParam("BindOrgId", orgId);
            am.getOrgHcmLeaveVO1().setNamedWhereClauseParam("BindSlocId", slocId);
            am.getOrgHcmLeaveVO1().executeQuery();

            am.getHcmLeaveGroupVO1().setNamedWhereClauseParam("BindCldId", cldId);
            am.getHcmLeaveGroupVO1().setNamedWhereClauseParam("BindHoOrgId", hoOrgId);
            am.getHcmLeaveGroupVO1().setNamedWhereClauseParam("BindOrgId", orgId);
            am.getHcmLeaveGroupVO1().setNamedWhereClauseParam("BindSlocId", slocId);
            am.getHcmLeaveGroupVO1().setNamedWhereClauseParam("BindGrpId", getGrpId());
            am.getHcmLeaveGroupVO1().executeQuery();
            RowSetIterator leaveGrpItr = am.getHcmLeaveGroupVO1().createRowSetIterator(null);
            while (leaveGrpItr.hasNext()) {
                Row next = leaveGrpItr.next();
                String leavId = next.getAttribute("LeaveId").toString();
                System.out.println("Leave Id for grpRow--" + leavId);

                Row[] fRows = am.getOrgHcmLeaveVO1().getFilteredRows("LeaveId", leavId);

                System.out.println("In OrgHCMLeave leave Row Count is---->" + fRows.length);

                if (fRows.length > 0) {

                    System.out.println("compoff value-->" + fRows[0].getAttribute("CompOffChk"));

                    if (fRows[0].getAttribute("CompOffChk").toString().equalsIgnoreCase("Y")) {
                        System.out.println("comp leave found for grp");
                        return "Y";
                    }
                } else {

                    return "N";
                }
            }
            //return (String) getAttributeInternal(TRANSCOMPOFFCHK);
        }
        return "N";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCompOffChk.
     * @param value value to set the  TransCompOffChk
     */
    public void setTransCompOffChk(String value) {
        setAttributeInternal(TRANSCOMPOFFCHK, value);
    }


    /**
     * Gets the attribute value for GRT_CHK using the alias name GrtChk.
     * @return the GRT_CHK
     */
    public String getGrtChk() {
        return (String) getAttributeInternal(GRTCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for GRT_CHK using the alias name GrtChk.
     * @param value value to set the GRT_CHK
     */
    public void setGrtChk(String value) {
        setAttributeInternal(GRTCHK, value);
    }


    /**
     * Gets the attribute value for BONUS_TYPE using the alias name BonusType.
     * @return the BONUS_TYPE
     */
    public Number getBonusType() {
        return (Number) getAttributeInternal(BONUSTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for BONUS_TYPE using the alias name BonusType.
     * @param value value to set the BONUS_TYPE
     */
    public void setBonusType(Number value) {
        setAttributeInternal(BONUSTYPE, value);
    }


    /**
     * Gets the attribute value for LWF_CHK using the alias name LwfChk.
     * @return the LWF_CHK
     */
    public String getLwfChk() {
        return (String) getAttributeInternal(LWFCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for LWF_CHK using the alias name LwfChk.
     * @param value value to set the LWF_CHK
     */
    public void setLwfChk(String value) {
        setAttributeInternal(LWFCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsBonusAvl.
     * @return the transIsBonusAvl
     */
    public String gettransIsBonusAvl() {
        return getIsLinkAvlbl("bonus");
        //return (String) getAttributeInternal(TRANSISBONUSAVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsBonusAvl.
     * @param value value to set the  transIsBonusAvl
     */
    public void settransIsBonusAvl(String value) {
        setAttributeInternal(TRANSISBONUSAVL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsGratAvl.
     * @return the transIsGratAvl
     */
    public String gettransIsGratAvl() {
        return getIsLinkAvlbl("gratuity");
        //return (String) getAttributeInternal(TRANSISGRATAVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsGratAvl.
     * @param value value to set the  transIsGratAvl
     */
    public void settransIsGratAvl(String value) {
        setAttributeInternal(TRANSISGRATAVL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsLwfAvl.
     * @return the transIsLwfAvl
     */
    public String gettransIsLwfAvl() {
        return getIsLinkAvlbl("LWF");
        //return (String) getAttributeInternal(TRANSISLWFAVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsLwfAvl.
     * @param value value to set the  transIsLwfAvl
     */
    public void settransIsLwfAvl(String value) {
        setAttributeInternal(TRANSISLWFAVL, value);
    }


    /**
     * Gets the attribute value for GRP_COA_ID using the alias name GrpCoaId.
     * @return the GRP_COA_ID
     */
    public Integer getGrpCoaId() {
        return (Integer) getAttributeInternal(GRPCOAID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_COA_ID using the alias name GrpCoaId.
     * @param value value to set the GRP_COA_ID
     */
    public void setGrpCoaId(Integer value) {
        setAttributeInternal(GRPCOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpCoaNm.
     * @return the TransGrpCoaNm
     */
    public String getTransGrpCoaNm() {
        if (this.getGrpCoaId() != null && getAttributeInternal(TRANSGRPCOANM) == null) {
            Row[] allRowsInRange = this.getLovCoaVO1().getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Row[] filteredRows = getLovCoaVO1().getFilteredRows("CoaId", getGrpCoaId());
                if (filteredRows.length > 0) {
                    Object obj = filteredRows[0].getAttribute("CoaNm");
                    return obj == null ? null : obj.toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSGRPCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpCoaNm.
     * @param value value to set the  TransGrpCoaNm
     */
    public void setTransGrpCoaNm(String value) {
        setAttributeInternal(TRANSGRPCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkGrpCoa.
     * @return the TransChkGrpCoa
     */
    public String getTransChkGrpCoa() {
        HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
        if (am.getOrgHcmPrf().getEstimatedRowCount() > 0) {
            Row[] filteredRows = am.getOrgHcmPrf().getFilteredRows("OrgId", EbizParams.GLBL_APP_USR_ORG());
            String glChk = filteredRows[0].getAttribute("GlCodeLnk").toString();
            if (glChk.equalsIgnoreCase("Y")) {
                return "Y";
            }
            return "N";
        }
        return "N";
        //return (String) getAttributeInternal(TRANSCHKGRPCOA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkGrpCoa.
     * @param value value to set the  TransChkGrpCoa
     */
    public void setTransChkGrpCoa(String value) {
        setAttributeInternal(TRANSCHKGRPCOA, value);
    }


    /**
     * Gets the attribute value for GRP_HRS using the alias name GrpHrs.
     * @return the GRP_HRS
     */
    public Number getGrpHrs() {
        return (Number) getAttributeInternal(GRPHRS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_HRS using the alias name GrpHrs.
     * @param value value to set the GRP_HRS
     */
    public void setGrpHrs(Number value) {
        setAttributeInternal(GRPHRS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsWagesHourAvl.
     * @return the transIsWagesHourAvl
     */
    public String gettransIsWagesHourAvl() {
        return getIsLinkAvlbl("wagesHour");
        //return (String) getAttributeInternal(TRANSISWAGESHOURAVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsWagesHourAvl.
     * @param value value to set the  transIsWagesHourAvl
     */
    public void settransIsWagesHourAvl(String value) {
        setAttributeInternal(TRANSISWAGESHOURAVL, value);
    }

    /**
     * Gets the attribute value for GRP_HRS_WGES_CHK using the alias name GrpHrsWgesChk.
     * @return the GRP_HRS_WGES_CHK
     */
    public String getGrpHrsWgesChk() {
        return (String) getAttributeInternal(GRPHRSWGESCHK);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_HRS_WGES_CHK using the alias name GrpHrsWgesChk.
     * @param value value to set the GRP_HRS_WGES_CHK
     */
    public void setGrpHrsWgesChk(String value) {
        setAttributeInternal(GRPHRSWGESCHK, value);
    }

    /**
     * Gets the attribute value for MPESA_GRP_REF using the alias name MpesaGrpRef.
     * @return the MPESA_GRP_REF
     */
    public String getMpesaGrpRef() {
        return (String) getAttributeInternal(MPESAGRPREF);
    }

    /**
     * Sets <code>value</code> as attribute value for MPESA_GRP_REF using the alias name MpesaGrpRef.
     * @param value value to set the MPESA_GRP_REF
     */
    public void setMpesaGrpRef(String value) {
        setAttributeInternal(MPESAGRPREF, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkMpesa.
     * @return the TransChkMpesa
     */
    public String getTransChkMpesa() {
        if (getGrpId() != null) {
            HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
            am.getCheckForMpesaVO1().setNamedWhereClauseParam("bindCldId", getCldId());
            am.getCheckForMpesaVO1().setNamedWhereClauseParam("bindHoOrgId", getHoOrgId());
            am.getCheckForMpesaVO1().setNamedWhereClauseParam("bindOrgId", getOrgId());
            am.getCheckForMpesaVO1().setNamedWhereClauseParam("bindSlocId", getSlocId());
            am.getCheckForMpesaVO1().executeQuery();
            Row[] filteredRows = am.getCheckForMpesaVO1().getFilteredRows("OrgId", getOrgId());
            if (filteredRows.length > 0) {
                if (filteredRows[0].getAttribute("AttId").equals(90)) {
                    System.out.println("found att id 90 for mPesa");
                    return "Y";
                }
            }
            return "N";
        }
        return (String) getAttributeInternal(TRANSCHKMPESA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkMpesa.
     * @param value value to set the  TransChkMpesa
     */
    public void setTransChkMpesa(String value) {
        setAttributeInternal(TRANSCHKMPESA, value);
    }

    /**
     * Gets the attribute value for LTA_CHK using the alias name LtaChk.
     * @return the LTA_CHK
     */
    public String getLtaChk()
    {
        return (String) getAttributeInternal(LTACHK);
    }

    /**
     * Sets <code>value</code> as attribute value for LTA_CHK using the alias name LtaChk.
     * @param value value to set the LTA_CHK
     */
    public void setLtaChk(String value)
    {
        setAttributeInternal(LTACHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transIsLtaAvl.
     * @return the transIsLtaAvl
     */
    public String gettransIsLtaAvl()
    {
        return getIsLinkAvlbl("LtaAppChk");
       // return (String) getAttributeInternal(TRANSISLTAAVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transIsLtaAvl.
     * @param value value to set the  transIsLtaAvl
     */
    public void settransIsLtaAvl(String value)
    {
        setAttributeInternal(TRANSISLTAAVL, value);
    }

    /**
     * Gets the attribute value for LEGACY_CODE using the alias name LegacyCode.
     * @return the LEGACY_CODE
     */
    public String getLegacyCode() {
        return (String) getAttributeInternal(LEGACYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for LEGACY_CODE using the alias name LegacyCode.
     * @param value value to set the LEGACY_CODE
     */
    public void setLegacyCode(String value) {
        setAttributeInternal(LEGACYCODE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmExtraTimeGrp.
     */
    public RowIterator getHcmExtraTimeGrp() {
        return (RowIterator) getAttributeInternal(HCMEXTRATIMEGRP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmShiftGrp.
     */
    public RowIterator getHcmShiftGrp() {
        return (RowIterator) getAttributeInternal(HCMSHIFTGRP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpCompOff.
     */
    public RowIterator getHcmGrpCompOff() {
        return (RowIterator) getAttributeInternal(HCMGRPCOMPOFF);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpGratCal.
     */
    public RowIterator getHcmGrpGratCal() {
        return (RowIterator) getAttributeInternal(HCMGRPGRATCAL);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpLwf.
     */
    public RowIterator getHcmGrpLwf() {
        return (RowIterator) getAttributeInternal(HCMGRPLWF);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpBonsExgratia.
     */
    public RowIterator getHcmGrpBonsExgratia() {
        return (RowIterator) getAttributeInternal(HCMGRPBONSEXGRATIA);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpLveLybltyCalc.
     */
    public RowIterator getHcmGrpLveLybltyCalc() {
        return (RowIterator) getAttributeInternal(HCMGRPLVELYBLTYCALC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HcmGrpLTA.
     */
    public RowIterator getHcmGrpLTA()
    {
        return (RowIterator) getAttributeInternal(HCMGRPLTA);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId.
     */
    public RowSet getLovUsrId() {
        return (RowSet) getAttributeInternal(LOVUSRID);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSalProcFreq.
     */
    public RowSet getLovSalProcFreq() {
        return (RowSet) getAttributeInternal(LOVSALPROCFREQ);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WeekOffTypeVO1.
     */
    public RowSet getWeekOffTypeVO1() {
        return (RowSet) getAttributeInternal(WEEKOFFTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AddIncmeTypeVO1.
     */
    public RowSet getAddIncmeTypeVO1() {
        return (RowSet) getAttributeInternal(ADDINCMETYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaVO1.
     */
    public RowSet getLovCoaVO1() {
        return (RowSet) getAttributeInternal(LOVCOAVO1);
    }

    public String getIsLinkAvlbl(String type) {
        String result = "";
        HcmGrpPrfAMImpl am = (HcmGrpPrfAMImpl) this.getApplicationModule();
        Row rw[] = am.getOrgHcmPrf().getAllRowsInRange();
        if (rw != null && rw.length > 0) {
            for (Row r : rw) { //LtaAppChk
                if (type.equals("gratuity"))
                    result = (String) r.getAttribute("GrtAppChk");
                if (type.equals("LWF"))
                    result = (String) r.getAttribute("LwfAppChk");
                if (type.equals("bonus"))
                    result = (String) r.getAttribute("BonsAppChk");
                if (type.equals("wagesHour"))
                    result = (String) r.getAttribute("HourSalProcChk");
                if (type.equals("LtaAppChk"))
                    result = (String) r.getAttribute("LtaAppChk");
            }
        }
        return result;
    }
}

