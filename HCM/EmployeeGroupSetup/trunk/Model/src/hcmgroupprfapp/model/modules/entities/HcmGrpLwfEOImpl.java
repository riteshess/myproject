package hcmgroupprfapp.model.modules.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 19 15:10:03 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmGrpLwfEOImpl extends EntityImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        GrpId,
        EmpAmt,
        EmprAmt,
        FromDt,
        ToDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int EMPAMT = AttributesEnum.EmpAmt.index();
    public static final int EMPRAMT = AttributesEnum.EmprAmt.index();
    public static final int FROMDT = AttributesEnum.FromDt.index();
    public static final int TODT = AttributesEnum.ToDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmGrpLwfEOImpl()
    {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject()
    {
        return EntityDefImpl.findDefObject("hcmgroupprfapp.model.modules.entities.HcmGrpLwfEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for GrpId, using the alias name GrpId.
     * @return the value of GrpId
     */
    public String getGrpId()
    {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrpId.
     * @param value value to set the GrpId
     */
    public void setGrpId(String value)
    {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for EmpAmt, using the alias name EmpAmt.
     * @return the value of EmpAmt
     */
    public Number getEmpAmt()
    {
        return (Number) getAttributeInternal(EMPAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpAmt.
     * @param value value to set the EmpAmt
     */
    public void setEmpAmt(Number value)
    {
        setAttributeInternal(EMPAMT, value);
    }

    /**
     * Gets the attribute value for EmprAmt, using the alias name EmprAmt.
     * @return the value of EmprAmt
     */
    public Number getEmprAmt()
    {
        return (Number) getAttributeInternal(EMPRAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmprAmt.
     * @param value value to set the EmprAmt
     */
    public void setEmprAmt(Number value)
    {
        setAttributeInternal(EMPRAMT, value);
    }

    /**
     * Gets the attribute value for FromDt, using the alias name FromDt.
     * @return the value of FromDt
     */
    public Timestamp getFromDt()
    {
        return (Timestamp) getAttributeInternal(FROMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDt.
     * @param value value to set the FromDt
     */
    public void setFromDt(Timestamp value)
    {
        setAttributeInternal(FROMDT, value);
    }

    /**
     * Gets the attribute value for ToDt, using the alias name ToDt.
     * @return the value of ToDt
     */
    public Timestamp getToDt()
    {
        return (Timestamp) getAttributeInternal(TODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDt.
     * @param value value to set the ToDt
     */
    public void setToDt(Timestamp value)
    {
        setAttributeInternal(TODT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param grpId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String grpId)
    {
        return new Key(new Object[]
        {
            cldId, slocId, hoOrgId, orgId, grpId
        });
    }

    protected void create(AttributeList attributeList) {
         setFromDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
         setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
         setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
         super.create(attributeList);
     }

     /**
      * Add entity remove logic in this method.
      */
     public void remove() {
         super.remove();
     }

     /**
      * Add locking logic here.
      */
     public void lock() {
         // super.lock();
     }

     /**
      * Custom DML update/insert/delete logic here.
      * @param operation the operation type
      * @param e the transaction event
      */
     protected void doDML(int operation, TransactionEvent e) {

         if (operation == DML_UPDATE) {
             setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
             setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
         }
         super.doDML(operation, e);
     }

     public Object resolvEl(String data) {
         FacesContext facesContext = FacesContext.getCurrentInstance();
         ELContext elContext = facesContext.getELContext();
         ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
         ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
         return exp.getValue(elContext);
     }
}

