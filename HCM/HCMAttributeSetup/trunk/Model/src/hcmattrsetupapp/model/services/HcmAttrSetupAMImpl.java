package hcmattrsetupapp.model.services;

import adf.utils.ebiz.EbizParams;

import hcmattrsetupapp.model.services.common.HcmAttrSetupAM;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.faces.validator.ValidatorException;

import oracle.jbo.RowSetIterator;
import oracle.jbo.server.RowQualifier;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 20 15:54:50 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmAttrSetupAMImpl extends ApplicationModuleImpl implements HcmAttrSetupAM {
    /**
     * This is the default constructor (do not remove).
     */
    public HcmAttrSetupAMImpl() {
    }

    /**
     * Container's getter for AttributeType1.
     * @return AttributeType1
     */
    public ViewObjectImpl getAttributeType1() {
        return (ViewObjectImpl) findViewObject("AttributeType1");
    }

    /**
     * Container's getter for Attribute1.
     * @return Attribute1
     */
    public ViewObjectImpl getAttribute1() {
        return (ViewObjectImpl) findViewObject("Attribute1");
    }

    /**
     * Container's getter for AttributeTypeToAttributeVL1.
     * @return AttributeTypeToAttributeVL1
     */
    public ViewLinkImpl getAttributeTypeToAttributeVL1() {
        return (ViewLinkImpl) findViewLink("AttributeTypeToAttributeVL1");
    }

    public void saveattram(String type, String name) {
        ViewObjectImpl voattrtype = getAttributeType1();
        voattrtype.getDBTransaction().commit();
        ViewObjectImpl voattrname = getAttribute1();
        voattrname.getDBTransaction().commit();
    }

    public String attrtypevalidate(String type) {
        ViewObjectImpl vo = getAttributeType1();
        String chkvalue = (String) vo.getCurrentRow().getAttribute("AttTypeNm");
        if ((chkvalue).equalsIgnoreCase(type)) {

            return "N";
        } else {
            RowQualifier rowQualifier = new RowQualifier(vo);
            rowQualifier.setWhereClause("UPPER(AttTypeNm)=UPPER('" + type + "')");
            Row[] rw = vo.getFilteredRows(rowQualifier);
            if (rw.length > 0) {
                return "Y";
            } else {
                return "N";
            }

        }
    }

    public String namevalam(String name) {
        ViewObjectImpl vo1 = getAttribute1();
        String newchk = (String) vo1.getCurrentRow().getAttribute("AttNm");
        int i = newchk.compareToIgnoreCase("name");
        if ((newchk).equalsIgnoreCase(name)) {
            return "N";
        } else {
            RowQualifier rowQualifier = new RowQualifier(vo1);
            rowQualifier.setWhereClause("UPPER(AttNm)=UPPER('" + name + "')");
            Row[] rw1 = vo1.getFilteredRows(rowQualifier);
            if (rw1.length > 0) {
                return "Y";
            }

            else {
                return "N";
            }
        }


    }

    /**Method to Insert into ATT$LNK*/

    public void insertIntoAttLnk() {
        if (getdummyForLinkVO1().getCurrentRow() != null) {
            Object newAttId = getdummyForLinkVO1().getCurrentRow().getAttribute("TransAttId");
            getOrgVO1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            getOrgVO1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());

            getOrgVO1().executeQuery();

            Row[] filteredRows = getOrgVO1().getFilteredRows("OrgId", EbizParams.GLBL_APP_USR_ORG());
            if (filteredRows.length > 0) {
                Object newCntryId = filteredRows[0].getAttribute("OrgCountryId");
                if (newCntryId != null) {
                    Row createRow = getOrgHcmAttLnkVO1().createRow();
                    createRow.setAttribute("AttId", newAttId);
                    createRow.setAttribute("CntryId", newCntryId);
                    getOrgHcmAttLnkVO1().insertRow(createRow);
                    getOrgHcmAttLnkVO1().executeQuery();
                    getdummyForLinkVO1().executeQuery();
                }
            }
        }
    }

    /**To Validate duplicate deduction*/
    public String chkDuplicateDeduction(Integer newAtt) {
        getOrgVO1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getOrgVO1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());

        getOrgVO1().executeQuery();
        Object newCntryId = null;
        Row[] filteredRows = getOrgVO1().getFilteredRows("OrgId", EbizParams.GLBL_APP_USR_ORG());
        if (filteredRows.length > 0) {
            newCntryId = filteredRows[0].getAttribute("OrgCountryId");


            RowQualifier rq = new RowQualifier(this.getOrgHcmAttLnkVO1());
            rq.setWhereClause("CldId='" + EbizParams.GLBL_APP_CLD_ID() + "' and SlocId=" +
                              EbizParams.GLBL_APP_SERV_LOC() + " and HoOrgId='" + EbizParams.GLBL_HO_ORG_ID() +
                              "' and OrgId='" + EbizParams.GLBL_APP_USR_ORG() + "' and AttId=" + newAtt +
                              " and CntryId=" + newCntryId);

            Row[] row = getOrgHcmAttLnkVO1().getFilteredRows(rq);
            if (row.length > 0) {
                return "Y";
            }
        }
        return "N";
    }

    /**To Set bindVar on Page Load*/
    public void setBindvarOnPageLoad() {
        getOrgHcmAttLnkVO1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getOrgHcmAttLnkVO1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getOrgHcmAttLnkVO1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getOrgHcmAttLnkVO1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getOrgHcmAttLnkVO1().executeQuery();
    }

    /**To Refresh VO on Cancel*/
    public void refreshVO() {
        if (getOrgHcmAttLnkVO1().getEstimatedRowCount() > 0) {
            RowSetIterator lnkItr = getOrgHcmAttLnkVO1().createRowSetIterator(null);
            while (lnkItr.hasNext()) {
                Row next = lnkItr.next();
                next.remove();
            }
            getOrgHcmAttLnkVO1().executeQuery();
        }
        getdummyForLinkVO1().executeQuery();
    }


    /**
     * Container's getter for OrgVO1.
     * @return OrgVO1
     */
    public ViewObjectImpl getOrgVO1() {
        return (ViewObjectImpl) findViewObject("OrgVO1");
    }

    /**
     * Container's getter for OrgHcmAttLnkVO1.
     * @return OrgHcmAttLnkVO1
     */
    public ViewObjectImpl getOrgHcmAttLnkVO1() {
        return (ViewObjectImpl) findViewObject("OrgHcmAttLnkVO1");
    }

    /**
     * Container's getter for dummyForLinkVO1.
     * @return dummyForLinkVO1
     */
    public ViewObjectImpl getdummyForLinkVO1() {
        return (ViewObjectImpl) findViewObject("dummyForLinkVO1");
    }

    /**
     * Container's getter for CountryVO1.
     * @return CountryVO1
     */
    public ViewObjectImpl getCountryVO1() {
        return (ViewObjectImpl) findViewObject("CountryVO1");
    }
}


