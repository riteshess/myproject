package hcmattendancerulesetup.model.module;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import hcmattendancerulesetup.model.module.common.HCMAttendanceRuleSetUpAM;

import java.sql.Types;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 17 16:15:41 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HCMAttendanceRuleSetUpAMImpl extends ApplicationModuleImpl implements HCMAttendanceRuleSetUpAM {
    /**
     * This is the default constructor (do not remove).
     */
    public HCMAttendanceRuleSetUpAMImpl() {
    }

    /**
     * Container's getter for HcmAttenRegRule1.
     * @return HcmAttenRegRule1
     */
    public ViewObjectImpl getHcmAttenRegRule1() {
        return (ViewObjectImpl) findViewObject("HcmAttenRegRule1");
    }

    /**
     * Container's getter for HcmAttenRegRuleLeave1.
     * @return HcmAttenRegRuleLeave1
     */
    public ViewObjectImpl getHcmAttenRegRuleLeave1() {
        return (ViewObjectImpl) findViewObject("HcmAttenRegRuleLeave1");
    }

    /**
     * Container's getter for RegRuleTOLeaveVL1.
     * @return RegRuleTOLeaveVL1
     */
    public ViewLinkImpl getRegRuleTOLeaveVL1() {
        return (ViewLinkImpl) findViewLink("RegRuleTOLeaveVL1");
    }


    /** To Set Initial Variables on page load */
    public void setInitialVars() {
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getHcmAttenRegRule1().executeQuery();
        getHcmAttenRegRuleLeave1().executeQuery();
    }

    /**
     * Container's getter for LovDesignation1.
     * @return LovDesignation1
     */
    public ViewObjectImpl getLovDesignation1() {
        return (ViewObjectImpl) findViewObject("LovDesignation1");
    }

    /**
     * Container's getter for LovShift1.
     * @return LovShift1
     */
    public ViewObjectImpl getLovShift1() {
        return (ViewObjectImpl) findViewObject("LovShift1");
    }

    /**To Check Duplicate Rule*/

    public String checkDuplicateRule(String docId) {

        String shiftId = getHcmAttenRegRule1().getCurrentRow().getAttribute("ShiftId").toString();
        Object rule = getHcmAttenRegRule1().getCurrentRow().getAttribute("RuleId").toString();
        String desgId = getHcmAttenRegRule1().getCurrentRow().getAttribute("DesgId").toString();
        RowQualifier rq = new RowQualifier(this.getHcmAttenRegRule1());
        String qry =
            "CldId='" + EbizParams.GLBL_APP_CLD_ID() + "' and SlocId=" + EbizParams.GLBL_APP_SERV_LOC() +
            " and RuleId=" + rule + "and HoOrgId='" + EbizParams.GLBL_HO_ORG_ID() + "' and OrgId='" +
            EbizParams.GLBL_APP_USR_ORG() + "' and DocId='" + docId + "' and DesgId='" + desgId + "'and ShiftId='" +
            shiftId;
        System.out.println("query ---" + qry);

        rq.setWhereClause("CldId='" + EbizParams.GLBL_APP_CLD_ID() + "' and SlocId=" + EbizParams.GLBL_APP_SERV_LOC() +
                          " and RuleId=" + rule + " and HoOrgId='" + EbizParams.GLBL_HO_ORG_ID() + "' and OrgId='" +
                          EbizParams.GLBL_APP_USR_ORG() + "' and DesgId='" + desgId + "' and ShiftId='" + shiftId +
                          "'");


        Row fr[] = this.getHcmAttenRegRule1().getFilteredRows(rq);
        System.out.println("Total no. of same rows=" + fr.length);
        for (Row r : fr) {
            if (!(r.equals(this.getHcmAttenRegRule1().getCurrentRow())))
                return "Y";
        }
        return "N";
    }

    /**To Validate Duplicate Leave leaveId*/
    public String chkDuplicateLeave(String leaveId) {
        String cldId = EbizParams.GLBL_APP_CLD_ID();
        Integer slocId = EbizParams.GLBL_APP_SERV_LOC();
        String hoOrgId = EbizParams.GLBL_HO_ORG_ID();
        String orgId = EbizParams.GLBL_APP_USR_ORG();
        RowQualifier rq = new RowQualifier(this.getHcmAttenRegRuleLeave1());
        rq.setWhereClause("CldId='" + cldId + "' and SlocId=" + slocId + " and HoOrgId='" + hoOrgId + "' and OrgId='" +
                          orgId + "' and DocId='" + this.getHcmAttenRegRule1().getCurrentRow().getAttribute("DocId") +
                          "' and LeaveId='" + leaveId + "'");
        Row[] fr = this.getHcmAttenRegRuleLeave1().getFilteredRows(rq);
        for (Row r : fr) {
            if (!(r.equals(this.getHcmAttenRegRuleLeave1().getCurrentRow()))) {
                return "Y";
            }
        }
        return "N";
    }


    /**TO Replicate all shifts/Designation*/
    public void replicateToAllShift() {
        this.getDBTransaction().postChanges();
        String doc = this.getHcmAttenRegRule1().getCurrentRow().getAttribute("DocId").toString();
        StringBuilder sbul = new StringBuilder("HCM.FN_HCN_RPCT_ATTEN_RULE(?,?,?,?,?,?)");
        Object[] obj = {
            EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_HO_ORG_ID(),
            EbizParams.GLBL_APP_USR_ORG(), doc, EbizParams.GLBL_APP_USR()
        };
        Object rslt = ADFModelUtils.callFunction(this, sbul, obj, Types.NUMERIC);
        System.out.println("result at replicate all--->" + rslt);

        getHcmAttenRegRule1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getHcmAttenRegRule1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getHcmAttenRegRule1().executeQuery();

        getHcmAttenRegRuleLeave1().executeQuery();
    }
}


