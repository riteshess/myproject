package hcmattendancerulesetup.model.entities;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 17 15:00:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmAttenRegRuleEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        RuleId,
        DesgId,
        ShiftId,
        DocId,
        GraceTm,
        MaxAllow,
        ReglrChk,
        LeaveAdjDay,
        ValidStrtDt,
        ValidEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RULEID = AttributesEnum.RuleId.index();
    public static final int DESGID = AttributesEnum.DesgId.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int GRACETM = AttributesEnum.GraceTm.index();
    public static final int MAXALLOW = AttributesEnum.MaxAllow.index();
    public static final int REGLRCHK = AttributesEnum.ReglrChk.index();
    public static final int LEAVEADJDAY = AttributesEnum.LeaveAdjDay.index();
    public static final int VALIDSTRTDT = AttributesEnum.ValidStrtDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmAttenRegRuleEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("hcmattendancerulesetup.model.entities.HcmAttenRegRuleEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RuleId, using the alias name RuleId.
     * @return the value of RuleId
     */
    public Integer getRuleId() {
        return (Integer) getAttributeInternal(RULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RuleId.
     * @param value value to set the RuleId
     */
    public void setRuleId(Integer value) {
        setAttributeInternal(RULEID, value);
    }

    /**
     * Gets the attribute value for DesgId, using the alias name DesgId.
     * @return the value of DesgId
     */
    public String getDesgId() {
        return (String) getAttributeInternal(DESGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DesgId.
     * @param value value to set the DesgId
     */
    public void setDesgId(String value) {
        setAttributeInternal(DESGID, value);
    }

    /**
     * Gets the attribute value for ShiftId, using the alias name ShiftId.
     * @return the value of ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftId.
     * @param value value to set the ShiftId
     */
    public void setShiftId(String value) {
        setAttributeInternal(SHIFTID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for GraceTm, using the alias name GraceTm.
     * @return the value of GraceTm
     */
    public oracle.jbo.domain.Number getGraceTm() {
        return (oracle.jbo.domain.Number) getAttributeInternal(GRACETM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GraceTm.
     * @param value value to set the GraceTm
     */
    public void setGraceTm(oracle.jbo.domain.Number value) {
        setAttributeInternal(GRACETM, value);
    }

    /**
     * Gets the attribute value for MaxAllow, using the alias name MaxAllow.
     * @return the value of MaxAllow
     */
    public Integer getMaxAllow() {
        return (Integer) getAttributeInternal(MAXALLOW);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxAllow.
     * @param value value to set the MaxAllow
     */
    public void setMaxAllow(Integer value) {
        setAttributeInternal(MAXALLOW, value);
    }

    /**
     * Gets the attribute value for ReglrChk, using the alias name ReglrChk.
     * @return the value of ReglrChk
     */
    public String getReglrChk() {
        return (String) getAttributeInternal(REGLRCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReglrChk.
     * @param value value to set the ReglrChk
     */
    public void setReglrChk(String value) {
        setAttributeInternal(REGLRCHK, value);
    }

    /**
     * Gets the attribute value for LeaveAdjDay, using the alias name LeaveAdjDay.
     * @return the value of LeaveAdjDay
     */
    public Number getLeaveAdjDay() {
        return (Number) getAttributeInternal(LEAVEADJDAY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeaveAdjDay.
     * @param value value to set the LeaveAdjDay
     */
    public void setLeaveAdjDay(Number value) {
        setAttributeInternal(LEAVEADJDAY, value);
    }

    /**
     * Gets the attribute value for ValidStrtDt, using the alias name ValidStrtDt.
     * @return the value of ValidStrtDt
     */
    public Timestamp getValidStrtDt() {
        return (Timestamp) getAttributeInternal(VALIDSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidStrtDt.
     * @param value value to set the ValidStrtDt
     */
    public void setValidStrtDt(Timestamp value) {
        setAttributeInternal(VALIDSTRTDT, value);
    }

    /**
     * Gets the attribute value for ValidEndDt, using the alias name ValidEndDt.
     * @return the value of ValidEndDt
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidEndDt.
     * @param value value to set the ValidEndDt
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param ruleId key constituent
     * @param desgId key constituent
     * @param shiftId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, Integer ruleId,
                                       String desgId, String shiftId, String docId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, ruleId, desgId, shiftId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setOrgId(EbizParams.GLBL_APP_USR_ORG());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setReglrChk("N");
        String txnId = (String) (callStoredFunction(Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] {
                                                    EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                    EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(), 29505, 0
        }));
        System.out.println("Doc Id Generated is ----->" + txnId);

        setDocId(txnId);


        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(EbizParams.GLBL_APP_USR());
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            // 1. Create a JDBC CallabledStatement
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
        }
    }
}

