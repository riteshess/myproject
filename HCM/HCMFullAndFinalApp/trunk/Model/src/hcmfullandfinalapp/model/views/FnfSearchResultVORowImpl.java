package hcmfullandfinalapp.model.views;

import adf.utils.ebiz.EbizParams;

import hcmfullandfinalapp.model.service.HCMFullAndFinalAppAMImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 04 14:42:25 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FnfSearchResultVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        EmpFnfDt,
        EmpDocId,
        EmpDeptId,
        EmpLocId,
        EmpGrpId,
        EmpDol,
        FnfStatus,
        TransEmpNm,
        TransGrpNm,
        TransDeptNm,
        TransLocNm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EMPFNFDT = AttributesEnum.EmpFnfDt.index();
    public static final int EMPDOCID = AttributesEnum.EmpDocId.index();
    public static final int EMPDEPTID = AttributesEnum.EmpDeptId.index();
    public static final int EMPLOCID = AttributesEnum.EmpLocId.index();
    public static final int EMPGRPID = AttributesEnum.EmpGrpId.index();
    public static final int EMPDOL = AttributesEnum.EmpDol.index();
    public static final int FNFSTATUS = AttributesEnum.FnfStatus.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int TRANSGRPNM = AttributesEnum.TransGrpNm.index();
    public static final int TRANSDEPTNM = AttributesEnum.TransDeptNm.index();
    public static final int TRANSLOCNM = AttributesEnum.TransLocNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FnfSearchResultVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpFnfDt.
     * @return the EmpFnfDt
     */
    public Timestamp getEmpFnfDt() {
        return (Timestamp) getAttributeInternal(EMPFNFDT);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpDocId.
     * @return the EmpDocId
     */
    public String getEmpDocId() {
        return (String) getAttributeInternal(EMPDOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpDeptId.
     * @return the EmpDeptId
     */
    public String getEmpDeptId() {
        return (String) getAttributeInternal(EMPDEPTID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpLocId.
     * @return the EmpLocId
     */
    public String getEmpLocId() {
        return (String) getAttributeInternal(EMPLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpGrpId.
     * @return the EmpGrpId
     */
    public String getEmpGrpId() {
        return (String) getAttributeInternal(EMPGRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpDol.
     * @return the EmpDol
     */
    public Timestamp getEmpDol() {
        return (Timestamp) getAttributeInternal(EMPDOL);
    }

    /**
     * Gets the attribute value for the calculated attribute FnfStatus.
     * @return the FnfStatus
     */
    public String getFnfStatus() {
        return (String) getAttributeInternal(FNFSTATUS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    public String getTransEmpNm() {
        if (getEmpDocId() != null) {
            HCMFullAndFinalAppAMImpl am = (HCMFullAndFinalAppAMImpl) this.getApplicationModule();
            am.getAllEmpName1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            am.getAllEmpName1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            am.getAllEmpName1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            am.getAllEmpName1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            am.getAllEmpName1().executeQuery();
            Row[] filteredRows = am.getAllEmpName1().getFilteredRows("DocId", getEmpDocId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("EmpNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpNm.
     * @return the TransGrpNm
     */
    public String getTransGrpNm() {
        if (getEmpGrpId() != null) {
            HCMFullAndFinalAppAMImpl am = (HCMFullAndFinalAppAMImpl) this.getApplicationModule();
            am.getLovGroupNm1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            am.getLovGroupNm1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            am.getLovGroupNm1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            am.getLovGroupNm1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            am.getLovGroupNm1().executeQuery();
            Row[] filteredRows = am.getLovGroupNm1().getFilteredRows("GrpId", getEmpGrpId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("ParamDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSGRPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpNm.
     * @param value value to set the  TransGrpNm
     */
    public void setTransGrpNm(String value) {
        setAttributeInternal(TRANSGRPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDeptNm.
     * @return the TransDeptNm
     */
    public String getTransDeptNm() {
        if (getEmpDeptId() != null) {
            HCMFullAndFinalAppAMImpl am = (HCMFullAndFinalAppAMImpl) this.getApplicationModule();
            am.getLovDeptNm1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            am.getLovDeptNm1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            am.getLovDeptNm1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            am.getLovDeptNm1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            am.getLovDeptNm1().executeQuery();
            Row[] filteredRows = am.getLovDeptNm1().getFilteredRows("DeptId", getEmpDeptId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("DeptNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSDEPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDeptNm.
     * @param value value to set the  TransDeptNm
     */
    public void setTransDeptNm(String value) {
        setAttributeInternal(TRANSDEPTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocNm.
     * @return the TransLocNm
     */
    public String getTransLocNm() {
        if (getEmpLocId() != null) {
            HCMFullAndFinalAppAMImpl am = (HCMFullAndFinalAppAMImpl) this.getApplicationModule();
            am.getLovLocations1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            am.getLovLocations1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            am.getLovLocations1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            am.getLovLocations1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            am.getLovLocations1().executeQuery();
            Row[] filteredRows = am.getLovLocations1().getFilteredRows("ParamId", getEmpLocId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("ParamDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSLOCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocNm.
     * @param value value to set the  TransLocNm
     */
    public void setTransLocNm(String value) {
        setAttributeInternal(TRANSLOCNM, value);
    }
}

