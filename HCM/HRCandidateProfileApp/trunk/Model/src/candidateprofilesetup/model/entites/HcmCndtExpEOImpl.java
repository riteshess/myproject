package candidateprofilesetup.model.entites;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 05 16:55:09 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HcmCndtExpEOImpl extends EntityImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum
    {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        CndtCode,
        CndtOrgNm,
        CndtOrgLoc,
        CndtOrgDoj,
        CndtOrgDol,
        CndtOrgDesig,
        CndtOrgSal,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index()
        {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex()
        {
            return firstIndex;
        }

        public static int count()
        {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues()
        {
            if (vals == null)
            {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int CNDTCODE = AttributesEnum.CndtCode.index();
    public static final int CNDTORGNM = AttributesEnum.CndtOrgNm.index();
    public static final int CNDTORGLOC = AttributesEnum.CndtOrgLoc.index();
    public static final int CNDTORGDOJ = AttributesEnum.CndtOrgDoj.index();
    public static final int CNDTORGDOL = AttributesEnum.CndtOrgDol.index();
    public static final int CNDTORGDESIG = AttributesEnum.CndtOrgDesig.index();
    public static final int CNDTORGSAL = AttributesEnum.CndtOrgSal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HcmCndtExpEOImpl()
    {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId()
    {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value)
    {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId()
    {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value)
    {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId()
    {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value)
    {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId()
    {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value)
    {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId()
    {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value)
    {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for CndtCode, using the alias name CndtCode.
     * @return the value of CndtCode
     */
    public String getCndtCode()
    {
        return (String) getAttributeInternal(CNDTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtCode.
     * @param value value to set the CndtCode
     */
    public void setCndtCode(String value)
    {
        setAttributeInternal(CNDTCODE, value);
    }

    /**
     * Gets the attribute value for CndtOrgNm, using the alias name CndtOrgNm.
     * @return the value of CndtOrgNm
     */
    public String getCndtOrgNm()
    {
        return (String) getAttributeInternal(CNDTORGNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgNm.
     * @param value value to set the CndtOrgNm
     */
    public void setCndtOrgNm(String value)
    {
        setAttributeInternal(CNDTORGNM, value);
    }

    /**
     * Gets the attribute value for CndtOrgLoc, using the alias name CndtOrgLoc.
     * @return the value of CndtOrgLoc
     */
    public String getCndtOrgLoc()
    {
        return (String) getAttributeInternal(CNDTORGLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgLoc.
     * @param value value to set the CndtOrgLoc
     */
    public void setCndtOrgLoc(String value)
    {
        setAttributeInternal(CNDTORGLOC, value);
    }

    /**
     * Gets the attribute value for CndtOrgDoj, using the alias name CndtOrgDoj.
     * @return the value of CndtOrgDoj
     */
    public Timestamp getCndtOrgDoj()
    {
        return (Timestamp) getAttributeInternal(CNDTORGDOJ);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgDoj.
     * @param value value to set the CndtOrgDoj
     */
    public void setCndtOrgDoj(Timestamp value)
    {
        setAttributeInternal(CNDTORGDOJ, value);
    }

    /**
     * Gets the attribute value for CndtOrgDol, using the alias name CndtOrgDol.
     * @return the value of CndtOrgDol
     */
    public Timestamp getCndtOrgDol()
    {
        return (Timestamp) getAttributeInternal(CNDTORGDOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgDol.
     * @param value value to set the CndtOrgDol
     */
    public void setCndtOrgDol(Timestamp value)
    {
        setAttributeInternal(CNDTORGDOL, value);
    }

    /**
     * Gets the attribute value for CndtOrgDesig, using the alias name CndtOrgDesig.
     * @return the value of CndtOrgDesig
     */
    public String getCndtOrgDesig()
    {
        return (String) getAttributeInternal(CNDTORGDESIG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgDesig.
     * @param value value to set the CndtOrgDesig
     */
    public void setCndtOrgDesig(String value)
    {
        setAttributeInternal(CNDTORGDESIG, value);
    }

    /**
     * Gets the attribute value for CndtOrgSal, using the alias name CndtOrgSal.
     * @return the value of CndtOrgSal
     */
    public Number getCndtOrgSal()
    {
        return (Number) getAttributeInternal(CNDTORGSAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for CndtOrgSal.
     * @param value value to set the CndtOrgSal
     */
    public void setCndtOrgSal(Number value)
    {
        setAttributeInternal(CNDTORGSAL, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate()
    {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value)
    {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt()
    {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value)
    {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod()
    {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value)
    {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt()
    {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value)
    {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param cndtCode key constituent
     * @param cndtOrgNm key constituent
     * @param cndtOrgDoj key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String cndtCode, String cndtOrgNm, Timestamp cndtOrgDoj)
    {
        return new Key(new Object[]
        {
            cldId, slocId, hoOrgId, orgId, docId, cndtCode, cndtOrgNm, cndtOrgDoj
        });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject()
    {
        return EntityDefImpl.findDefObject("candidateprofilesetup.model.entites.HcmCndtExpEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList)
    {
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock()
    {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e)
    {
        if (operation == DML_INSERT)
        {

        }
        if (operation == DML_UPDATE)
        {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(String data)
    {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        ELContext elContext = facesContext.getELContext();
        ExpressionFactory expressionFactory = facesContext.getApplication().getExpressionFactory();
        ValueExpression exp = expressionFactory.createValueExpression(elContext, data, Object.class);
        return exp.getValue(elContext);
    }
}

