<?xml version="1.0" encoding="UTF-8"?>
<jasperReport xmlns="http://jasperreports.sourceforge.net/jasperreports" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd" name="TrialBalance_SubReport" language="groovy" pageWidth="920" pageHeight="555" orientation="Landscape" columnWidth="920" leftMargin="0" rightMargin="0" topMargin="0" bottomMargin="0">
	<property name="ireport.zoom" value="1.5"/>
	<property name="ireport.x" value="0"/>
	<property name="ireport.y" value="0"/>
	<style name="HeaderStyle">
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("D")]]></conditionExpression>
			<style/>
		</conditionalStyle>
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("R")]]></conditionExpression>
			<style backcolor="#FF0000"/>
		</conditionalStyle>
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("G")]]></conditionExpression>
			<style backcolor="#CDDB27"/>
		</conditionalStyle>
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("Y")]]></conditionExpression>
			<style backcolor="#FFFF00"/>
		</conditionalStyle>
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("GG")]]></conditionExpression>
			<style backcolor="#CCCCCC"/>
		</conditionalStyle>
		<conditionalStyle>
			<conditionExpression><![CDATA[$P{Head}.equalsIgnoreCase("B")]]></conditionExpression>
			<style backcolor="#3333FF"/>
		</conditionalStyle>
	</style>
	<parameter name="Cld_Id" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Cog_Id" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Org_Id" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Cog_Indent" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Coa_Id" class="java.math.BigDecimal">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="From_Date" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Na_Id" class="java.lang.Integer">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="PostFlag" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="To_Date" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Path" class="java.lang.String"/>
	<parameter name="Report_Type" class="java.lang.String"/>
	<parameter name="Ho_Org_Id" class="java.lang.String"/>
	<parameter name="Include_Grp" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="Margin_Detail" class="java.lang.String">
		<defaultValueExpression><![CDATA[]]></defaultValueExpression>
	</parameter>
	<parameter name="COG_TYPE" class="java.lang.String"/>
	<parameter name="Head" class="java.lang.String"/>
	<parameter name="BgColor" class="java.lang.String"/>
	<parameter name="SUBREPORT_DIR" class="java.lang.String" isForPrompting="false">
		<defaultValueExpression><![CDATA["D:\\DEPLOYMENT\\Report\\FIN\\SubReport\\"]]></defaultValueExpression>
	</parameter>
	<queryString>
		<![CDATA[select  C.cld_id,
    C.cog_grp_type,
    C.org_id,
    C.org_desc,
    C.org_fy_id,
    C.cog_id,
    C.ORG_COA_OP_BAL,
    --P.ORG_COA_OP_BAL_PREV,
    substr(C.cog_id,1,1) cog_id_grp,
    DECODE($P{Cog_Indent},'N',C.COG_NM,'P',C.COG_NM,'I',C.COG_NM_INDENT,C.COG_NM) cog_ind,
    C.COG_NM,
    C.COG_SUBLDGR,
    C.COA_ID,
    C.COA_NM,
    'Opening Balance as on '|| $P{From_Date} OP_BAL_STR,
    C.OP_BAL,
    C.OP_BAL_TYPE,
    C.DR_AMT,
    C.CR_AMT,

    C.CL_BAL,
    C.CL_BAL_TYPE,
    decode(C.CL_BAL_TYPE,'Dr',C.CL_BAL,'Cr',-C.CL_BAL,C.CL_BAL) CL_BAL_SIGNED,
    decode(C.OP_BAL_TYPE,'Dr',C.OP_BAL,'Cr',-C.OP_BAL,C.OP_BAL) OP_BAL_SIGNED,


    P.ORG_COA_OP_BAL ORG_COA_PRV_YR_BAL,

    P.OP_BAL_PREV,
    P.OP_BAL_TYPE_PREV,
    P.DR_AMT_PREV,
    P.CR_AMT_PREV,

    P.CL_BAL_PREV,
    P.CL_BAL_TYPE_PREV,
    decode(P.CL_BAL_TYPE_PREV,'Dr',P.CL_BAL_PREV,'Cr',-P.CL_BAL_PREV,P.CL_BAL_PREV) CL_BAL_SIGNED_PREV,
    decode(P.OP_BAL_TYPE_PREV,'Dr',P.OP_BAL_PREV,'Cr',-P.OP_BAL_PREV,P.OP_BAL_PREV) OP_BAL_SIGNED_PREV




FROM    (SELECT c.ORG_COA_CLD_ID CLD_ID,
        c.org_id org_id,cog_grp_type,
        c.ORG_COA_OP_BAL,
        a.ORG_DESC ORG_DESC,
        c.ORG_FY_ID ORG_FY_ID,
        c.ORG_COA_ID COA_ID,
        b.COA_NM COA_NM,
        d.COG_ID,
        d.COG_NM COG_NM,
        d.COG_NM_TREE,
        d.COG_NM_INDENT,
        d.COG_SUBLDGR,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) + NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(f1.tmp_dr_amt_op, 0) -nvl(f1.tmp_cr_amt_op, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0))),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',abs(nvl(c.org_coa_op_balance, 0) +nvl(e1.gl_dr_amt_op, 0) -nvl(e1.gl_cr_amt_op, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0)))) OP_BAL,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(f1.tmp_dr_amt_op, 0) -nvl(f1.tmp_cr_amt_op, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0)),0,'Dr',1,'Cr',-1,'Dr')),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',decode(sign(nvl(c.org_coa_op_balance,0)+nvl(e1.gl_dr_amt_op,0)-nvl(e1.gl_cr_amt_op,0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE,0)-NVL(e1.gl_dr_amt_op,0)+NVL(e1.gl_cr_amt_op,0)),0,'Dr',1,'Cr',-1,'Dr')))
        OP_BAL_type,
        DECODE($P{PostFlag},'A',NVL(e2.gl_dr_amt, 0) + NVL(f2.tmp_dr_amt, 0),'P',NVL(e2.gl_dr_amt, 0)) dr_amt,
        DECODE($P{PostFlag},'A',NVL(e2.gl_cr_amt, 0) + NVL(f2.tmp_cr_amt, 0),'P',NVL(e2.gl_cr_amt, 0)) cr_amt,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        NVL(f1.tmp_dr_amt_op, 0) -NVL(f1.tmp_cr_amt_op, 0) +NVL(e2.gl_dr_amt, 0) -
        nvl(e2.gl_cr_amt, 0) +nvl(f2.tmp_dr_amt, 0) -nvl(f2.tmp_cr_amt, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0) -NVL(e2.gl_dr_amt, 0) +
        NVL(e2.gl_cr_amt, 0) -NVL(f2.tmp_dr_amt, 0) +NVL(f2.tmp_cr_amt, 0))),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(e2.gl_dr_amt, 0) -nvl(e2.gl_cr_amt, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0)))) cl_BAL,
        DECODE($P{PostFlag},
        'A',DECODE(LTRIM(RTRIM(UPPER(NVL(c.ORG_COA_OP_BAL_TYP,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        NVL(f1.tmp_dr_amt_op, 0) -NVL(f1.tmp_cr_amt_op, 0) +NVL(e2.gl_dr_amt, 0) -
        nvl(e2.gl_cr_amt, 0) +nvl(f2.tmp_dr_amt, 0) -nvl(f2.tmp_cr_amt, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0) -NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0) -
        NVL(f2.tmp_dr_amt, 0) +NVL(f2.tmp_cr_amt, 0)),0,'Dr',1,'Cr',-1,'Dr')),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(e2.gl_dr_amt, 0) -nvl(e2.gl_cr_amt, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0)),0,'Dr',1,'Cr',-1,'Dr'))) cl_BAL_type
        FROM    app.org a,
        (SELECT DISTINCT A.ORG_CLD_ID ORG_CLD_ID,
            A.ORG_ID ORG_ID,
			b.coa_sloc_id,

			B.COA_HO_ORG_ID HO_ORG_ID,
            b.COA_ID,
            b.COA_NM,
            b.COA_COG_ID,
            b.COA_ACC_ID
        FROM    app.org A,
            fin$coa B
        WHERE A.ORG_CLD_ID = NVL($P{Cld_Id}, A.ORG_CLD_ID)
        AND   A.ORG_ID = NVL($P{Org_Id}, A.ORG_ID)
        AND   B.COA_CLD_ID = A.ORG_CLD_ID

        AND    B.COA_HO_ORG_ID = NVL(A.ORG_ID_PARENT_L0,A.ORG_ID)
        AND     B.COA_ID LIKE NVL($P{Coa_Id}, COA_ID)
        AND     B.COA_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, COA_COG_ID)||'%', NVL($P{Cog_Id}, COA_COG_ID))
        )b,
        (SELECT    a.ORG_COA_CLD_ID,
            a.ORG_ID,
			a.ORG_SLOC_ID,

			a.ORG_COA_HO_ORG_ID,
            a.ORG_FY_ID,
            a.ORG_COA_COG_ID,
            a.org_coa_id,
            a.ORG_COA_OP_BAL,
            ABS(SUM(DECODE(a.ORG_COA_OP_BAL_TYP,'Dr',a.ORG_COA_OP_BAL,-a.ORG_COA_OP_BAL))) ORG_COA_OP_BALANCE,
            DECODE(SIGN(SUM(DECODE(a.ORG_COA_OP_BAL_TYP,'Dr',a.ORG_COA_OP_BAL,-a.ORG_COA_OP_BAL))),1,'Dr',0,'Dr','Cr') ORG_COA_OP_BAL_TYP
        FROM    ORG$COA$FY a,
                (select app.fn_get_fy_id($P{Cld_Id}, $P{Org_Id},TO_DATE($P{From_Date}, 'YYYY-MM-DD'),'FY') fy
                from dual) b
        WHERE    a.ORG_COA_CLD_ID = NVL($P{Cld_Id}, a.ORG_COA_CLD_ID)
        AND      a.ORG_ID = NVL($P{Org_Id}, a.ORG_ID)

        AND    a.ORG_FY_ID = b.fy
        AND     a.ORG_COA_ID LIKE NVL($P{Coa_Id}, a.ORG_COA_ID)
        AND     a.ORG_COA_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.ORG_COA_COG_ID)||'%', NVL($P{Cog_Id}, a.ORG_COA_COG_ID))
        AND     a.ORG_COA_NA_ID LIKE NVL($P{Na_Id}, a.ORG_COA_NA_ID)

        GROUP BY     a.ORG_COA_CLD_ID,
            a.ORG_ID,
			a.ORG_SLOC_ID,
			a.ORG_COA_HO_ORG_ID,
            a.ORG_FY_ID,
            a.ORG_COA_COG_ID,
            a.ORG_COA_ID,
            a.ORG_COA_OP_BAL

        )  c,
        (
        SELECT DISTINCT COG_CLD_ID COG_CLD_ID,cog_grp_type,
            A.ho_org_id COG_ORG_ID,
            COG_ID,
            COG_NM,
            SUBSTR(SYS_CONNECT_BY_PATH(COG_NM, '->'),3) COG_NM_TREE,
            LPAD(' ',2*(LENGTH(COG_ID)-1))||COG_NM COG_NM_INDENT,
            COG_ID_PARENT,
            COG_SUBLDGR,
            COG_BS_ITEM,
            COG_PNL_ITEM,
            COG_CF_ITEM,
            COG_TRF_BAL,
            COG_ACTV,
			COG_SLOC_ID
        FROM (select app.FN_GET_PARENT_ORG_L0 ($P{Cld_Id}, $P{Org_Id}) ho_org_id from dual) a,
              (select cog_cld_id,cog_sloc_id,cog_org_id,cog_grp_type,
				cog_id,cog_id_parent,
				cog_nm,
				cog_subldgr,cog_bs_item,cog_pnl_item,cog_cf_item,cog_trf_bal,
				cog_actv
				from fin$cog
				where     cog_cld_id = $P{Cld_Id}
				and    cog_org_id = nvl($P{Ho_Org_Id},cog_org_id)
				  ) B
        WHERE   B.COG_ORG_ID = a.ho_org_id
        START WITH nvl(COG_ID_PARENT,'!') in ('!','00')
        CONNECT BY NOCYCLE PRIOR COG_ID = COG_ID_PARENT
        ) d,
        (SELECT    A.GL_CLD_ID,
		    B.GL_SLOC_ID,
            A.GL_ORG_ID,
			B.GL_HO_ORG_ID,
            A.GL_COA_ID,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Dr', GL_AMT_BS, 0)),0) gl_dr_amt_op,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Cr', GL_AMT_BS, 0)),0) gl_cr_amt_op
        FROM      GL_LINES A,
        			GL B,
               (SELECT app.fn_get_fy_start_date($P{Cld_Id}, $P{Org_Id}, TO_DATE($P{From_Date},'YYYY-mm-dd'),'FY') FY_START_dATE
               FROM DUAL) C
        WHERE     B.GL_CLD_ID = NVL($P{Cld_Id},B.GL_CLD_ID)
        AND     B.GL_STAT = DECODE($P{PostFlag}, 'A', B.GL_STAT, 'P', 'FLC')
        AND     A.GL_CLD_ID = B.GL_CLD_ID
        AND     A.GL_SLOC_ID = B.GL_SLOC_ID
        AND     A.GL_VOU_ID = B.GL_VOU_ID
        AND    a.GL_ORG_ID = NVL($P{Org_Id}, a.GL_ORG_ID)
        AND     a.GL_COA_ID LIKE NVL($P{Coa_Id}, a.GL_COA_ID)
        AND     a.GL_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.GL_COG_ID)||'%', NVL($P{Cog_Id}, a.GL_COG_ID))
        AND     a.GL_NA_ID LIKE NVL($P{Na_Id}, a.GL_NA_ID)
        AND     TRUNC(a.GL_VOU_DT) >= C.FY_START_dATE
        AND     TRUNC(a.GL_VOU_DT) < TO_DATE($P{From_Date}, 'YYYY-mm-dd')
        AND     A.GL_TXN_TYP_MIG not in  ('O','MO')
        GROUP BY     A.GL_CLD_ID,
			B.GL_SLOC_ID,
            A.GL_ORG_ID,
			B.GL_HO_ORG_ID,
            A.GL_COA_ID
        ) e1,
        (
        SELECT    A.GL_CLD_ID,
            A.GL_ORG_ID,
            A.GL_COA_ID,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Dr', GL_AMT_BS, 0)),0) gl_dr_amt,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Cr', GL_AMT_BS, 0)),0) gl_cr_amt
        FROM      GL_LINES A,
            GL B
        WHERE     B.GL_CLD_ID = NVL($P{Cld_Id},A.GL_CLD_ID)
        AND     A.GL_CLD_ID = B.GL_CLD_ID
        AND     A.GL_SLOC_ID = B.GL_SLOC_ID
        AND     A.GL_VOU_ID = B.GL_VOU_ID
        AND     A.GL_ORG_ID = NVL($P{Org_Id}, B.GL_ORG_ID)
        AND     a.GL_COA_ID LIKE NVL($P{Coa_Id}, a.GL_COA_ID)
        AND     a.GL_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.GL_COG_ID)||'%', NVL($P{Cog_Id}, a.GL_COG_ID))
        AND     a.GL_NA_ID LIKE NVL($P{Na_Id}, a.GL_NA_ID)
        AND     B.GL_STAT = DECODE($P{PostFlag}, 'A', B.GL_STAT, 'P', 'FLC')
        AND     TRUNC(a.GL_VOU_DT) >= TO_DATE($P{From_Date}, 'YYYY-mm-dd')
		AND     TRUNC(a.GL_VOU_DT) <= TO_DATE($P{To_Date}, 'YYYY-mm-dd')
        AND     A.GL_TXN_TYP_MIG not in  ('O','MO')

        GROUP BY     A.GL_CLD_ID,
            A.GL_ORG_ID,
            A.GL_COA_ID
        ) e2,
        (
        SELECT    A.TVOU_CLD_ID,
			A.TVOU_SLOC_ID,
			A.TVOU_ORG_ID,
            A.TVOU_HO_ORG_ID,
			A.TVOU_COA_ID,
            NVL(SUM(DECODE(A.TVOU_AMT_TYP,'Dr',A.TVOU_AMT_BS,0)),0) tmp_dr_amt_op,
            NVL(SUM(DECODE(A.TVOU_AMT_TYP,'Cr',A.TVOU_AMT_BS,0)),0) tmp_cr_amt_op
        FROM         TVOU_LINES A,
                      (SELECT app.fn_get_fy_start_date($P{Cld_Id}, $P{Org_Id}, TO_DATE($P{From_Date},'YYYY-mm-dd'),'FY') FY_START_dATE
                      FROM DUAL) C
        WHERE      A.TVOU_CLD_ID = NVL($P{Cld_Id},A.TVOU_CLD_ID)
        AND    A.tvou_ORG_ID = NVL($P{Org_Id}, A.tvou_ORG_ID)
        AND     A.tvou_COA_ID LIKE NVL($P{Coa_Id}, A.tvou_COA_ID)
        AND     A.tvou_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, A.tvou_COG_ID)||'%', NVL($P{Cog_Id}, A.tvou_COG_ID))
        AND     A.tvou_NA_ID LIKE NVL($P{Na_Id}, A.tvou_NA_ID)
        AND     TRUNC(A.tVOU_DT) >= C.FY_START_dATE
        AND     TRUNC(A.tVOU_DT) < TO_DATE($P{From_Date}, 'YYYY-mm-dd')
        GROUP BY     A.TVOU_CLD_ID,
			A.TVOU_SLOC_ID,
            A.TVOU_ORG_ID,
			A.TVOU_HO_ORG_ID,
            A.TVOU_COA_ID
        ) f1,
        (
        SELECT  a.TVOU_CLD_ID,
                a.TVOU_ORG_ID,
                a.TVOU_COA_ID,
                NVL(SUM(DECODE(a.TVOU_AMT_TYP,'Dr',a.TVOU_AMT_BS,0)),0) tmp_dr_amt,
                NVL(SUM(DECODE(a.TVOU_AMT_TYP,'Cr',a.TVOU_AMT_BS,0)),0) tmp_cr_amt
        FROM    TVOU_LINES a
        WHERE     a.TVOU_CLD_ID = NVL($P{Cld_Id},TVOU_CLD_ID)
        AND    a.tvou_ORG_ID = NVL($P{Org_Id}, tvou_ORG_ID)
        AND     a.tvou_COA_ID LIKE NVL($P{Coa_Id}, tvou_COA_ID)
        AND     a.tvou_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, tvou_COG_ID)||'%', NVL($P{Cog_Id}, tvou_COG_ID))
        AND     a.tvou_NA_ID LIKE NVL($P{Na_Id}, tvou_NA_ID)
        AND     TRUNC(a.tVOU_DT) >= TO_DATE($P{From_Date}, 'YYYY-mm-dd')
		AND     TRUNC(a.tVOU_DT) <= TO_DATE($P{To_Date}, 'YYYY-mm-dd')
        GROUP BY  a.TVOU_CLD_ID,
                  a.TVOU_ORG_ID,
                  a.TVOU_COA_ID
        ) f2
    WHERE    A.ORG_CLD_ID = NVL($P{Cld_Id}, A.ORG_CLD_ID)
    AND      A.ORG_ID = NVL($P{Org_Id}, A.ORG_ID)
    AND    B.ORG_CLD_ID = A.ORG_CLD_ID
    AND    B.ORG_ID = A.ORG_ID

	AND         B.ORG_CLD_ID = c.ORG_COA_CLD_ID
    AND         B.ORG_ID = c.ORG_ID
	AND         B.COA_SLOC_ID = c.ORG_SLOC_ID
	AND         B.HO_ORG_ID = c.ORG_COA_HO_ORG_ID
    AND         B.COA_ID = c.ORG_COA_ID

    AND         B.ORG_CLD_ID = d.COG_CLD_ID
	AND         B.COA_SLOC_ID = d.COG_SLOC_ID
    AND         B.HO_ORG_ID = d.COG_ORG_ID
    AND         B.COA_COG_ID = d.COG_ID

    AND         c.ORG_COA_CLD_ID = e1.GL_CLD_ID(+)
	AND         c.ORG_SLOC_ID = e1.GL_SLOC_ID(+)
	AND         c.ORG_ID = e1.GL_ORG_ID(+)
	AND         c.ORG_COA_HO_ORG_ID = e1.GL_HO_ORG_ID(+)
    AND         c.ORG_COA_ID = e1.GL_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = e2.GL_CLD_ID(+)
    AND         c.ORG_ID = e2.GL_ORG_ID(+)
    AND         c.ORG_COA_ID = e2.GL_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = f1.TVOU_CLD_ID(+)
	AND         c.ORG_SLOC_ID = f1.TVOU_SLOC_ID(+)
    AND         c.ORG_ID = f1.tvou_ORG_ID(+)
	AND         c.ORG_COA_HO_ORG_ID = f1.TVOU_HO_ORG_ID(+)
    AND         c.ORG_COA_ID = f1.tvou_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = f2.TVOU_CLD_ID(+)
    AND         c.ORG_ID = f2.tvou_ORG_ID(+)
    AND         c.ORG_COA_ID = f2.tvou_COA_ID(+)

    ) C,



	(
  select
    ORG_COA_OP_BAL,
    org_id,
    cog_id,

    OP_BAL_PREV,
    OP_BAL_TYPE_PREV,
    DR_AMT_PREV,
    CR_AMT_PREV,
    cog_grp_type,
    CL_BAL_PREV,
    CL_BAL_TYPE_PREV,
    COA_ID,
    decode(CL_BAL_TYPE_PREV,'Dr',CL_BAL_PREV,'Cr',-CL_BAL_PREV,CL_BAL_PREV) CL_BAL_SIGNED,
    decode(OP_BAL_TYPE_PREV,'Dr',OP_BAL_PREV,'Cr',-OP_BAL_PREV,OP_BAL_PREV) OP_BAL_SIGNED

	FROM
	(SELECT c.ORG_COA_CLD_ID CLD_ID,
        c.org_id org_id,cog_grp_type,
        c.ORG_COA_OP_BAL,
        a.ORG_DESC ORG_DESC,
        c.ORG_FY_ID ORG_FY_ID,
        c.ORG_COA_ID COA_ID,
        b.COA_NM COA_NM,
        d.COG_ID,
        d.COG_NM COG_NM,
        d.COG_NM_TREE,
        d.COG_NM_INDENT,
        d.COG_SUBLDGR,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) + NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(f1.tmp_dr_amt_op, 0) -nvl(f1.tmp_cr_amt_op, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0))),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',abs(nvl(c.org_coa_op_balance_PREV, 0) +nvl(e1.gl_dr_amt_op, 0) -nvl(e1.gl_cr_amt_op, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0)))) OP_BAL_PREV,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(f1.tmp_dr_amt_op, 0) -nvl(f1.tmp_cr_amt_op, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0)),0,'Dr',1,'Cr',-1,'Dr')),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',decode(sign(nvl(c.org_coa_op_balance_PREV,0)+nvl(e1.gl_dr_amt_op,0)-nvl(e1.gl_cr_amt_op,0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV,0)-NVL(e1.gl_dr_amt_op,0)+NVL(e1.gl_cr_amt_op,0)),0,'Dr',1,'Cr',-1,'Dr')))
        OP_BAL_type_prev,
        DECODE($P{PostFlag},'A',NVL(e2.gl_dr_amt, 0) + NVL(f2.tmp_dr_amt, 0),'P',NVL(e2.gl_dr_amt, 0)) dr_amt_prev,
        DECODE($P{PostFlag},'A',NVL(e2.gl_cr_amt, 0) + NVL(f2.tmp_cr_amt, 0),'P',NVL(e2.gl_cr_amt, 0)) cr_amt_prev,
        DECODE($P{PostFlag},
        'A',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        NVL(f1.tmp_dr_amt_op, 0) -NVL(f1.tmp_cr_amt_op, 0) +NVL(e2.gl_dr_amt, 0) -
        nvl(e2.gl_cr_amt, 0) +nvl(f2.tmp_dr_amt, 0) -nvl(f2.tmp_cr_amt, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0) -NVL(e2.gl_dr_amt, 0) +
        NVL(e2.gl_cr_amt, 0) -NVL(f2.tmp_dr_amt, 0) +NVL(f2.tmp_cr_amt, 0))),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(e2.gl_dr_amt, 0) -nvl(e2.gl_cr_amt, 0)),
        'CR',ABS(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0)))) cl_BAL_PREV,
        DECODE($P{PostFlag},
        'A',DECODE(LTRIM(RTRIM(UPPER(NVL(c.ORG_COA_OP_BAL_TYP_PREV,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        NVL(f1.tmp_dr_amt_op, 0) -NVL(f1.tmp_cr_amt_op, 0) +NVL(e2.gl_dr_amt, 0) -
        nvl(e2.gl_cr_amt, 0) +nvl(f2.tmp_dr_amt, 0) -nvl(f2.tmp_cr_amt, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(f1.tmp_dr_amt_op, 0) +NVL(f1.tmp_cr_amt_op, 0) -NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0) -
        NVL(f2.tmp_dr_amt, 0) +NVL(f2.tmp_cr_amt, 0)),0,'Dr',1,'Cr',-1,'Dr')),
        'P',decode(ltrim(rtrim(upper(nvl(c.org_coa_op_bal_typ_PREV,'Dr')))),
        'DR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) +NVL(e1.gl_dr_amt_op, 0) -NVL(e1.gl_cr_amt_op, 0) +
        nvl(e2.gl_dr_amt, 0) -nvl(e2.gl_cr_amt, 0)),0,'Dr',1,'Dr',-1,'Cr'),
        'CR',DECODE(SIGN(NVL(c.ORG_COA_OP_BALANCE_PREV, 0) -NVL(e1.gl_dr_amt_op, 0) +NVL(e1.gl_cr_amt_op, 0) -
        NVL(e2.gl_dr_amt, 0) +NVL(e2.gl_cr_amt, 0)),0,'Dr',1,'Cr',-1,'Dr'))) cl_BAL_type_prev
        FROM    app.org a,
        (SELECT DISTINCT A.ORG_CLD_ID ORG_CLD_ID,
            A.ORG_ID ORG_ID,
			b.coa_sloc_id,

			B.COA_HO_ORG_ID HO_ORG_ID,
            b.COA_ID,
            b.COA_NM,
            b.COA_COG_ID,
            b.COA_ACC_ID
        FROM    app.org A,
            fin$coa B
        WHERE A.ORG_CLD_ID = NVL($P{Cld_Id}, A.ORG_CLD_ID)
        AND   A.ORG_ID = NVL($P{Org_Id}, A.ORG_ID)
        AND   B.COA_CLD_ID = A.ORG_CLD_ID

        AND    B.COA_HO_ORG_ID = NVL(A.ORG_ID_PARENT_L0,A.ORG_ID)
        AND     B.COA_ID LIKE NVL($P{Coa_Id}, COA_ID)
        AND     B.COA_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, COA_COG_ID)||'%', NVL($P{Cog_Id}, COA_COG_ID))
        )b,
        (SELECT    a.ORG_COA_CLD_ID,
            a.ORG_ID,
			a.ORG_SLOC_ID,

			a.ORG_COA_HO_ORG_ID,
            a.ORG_FY_ID,
            a.ORG_COA_COG_ID,
            a.org_coa_id,
            a.ORG_COA_OP_BAL,
            ABS(SUM(DECODE(a.ORG_COA_OP_BAL_TYP,'Dr',a.ORG_COA_OP_BAL,-a.ORG_COA_OP_BAL))) ORG_COA_OP_BALANCE_PREV,
            DECODE(SIGN(SUM(DECODE(a.ORG_COA_OP_BAL_TYP,'Dr',a.ORG_COA_OP_BAL,-a.ORG_COA_OP_BAL))),1,'Dr',0,'Dr','Cr') ORG_COA_OP_BAL_TYP_PREV
        FROM    ORG$COA$FY a,
                (select app.fn_get_fy_id($P{Cld_Id}, $P{Org_Id},add_months(TO_DATE($P{From_Date}, 'YYYY-MM-DD'),-12),'FY')fy
                from dual) b
        WHERE    a.ORG_COA_CLD_ID = NVL($P{Cld_Id}, a.ORG_COA_CLD_ID)
        AND      a.ORG_ID = NVL($P{Org_Id}, a.ORG_ID)

        AND    a.ORG_FY_ID = b.fy
        AND     a.ORG_COA_ID LIKE NVL($P{Coa_Id}, a.ORG_COA_ID)
        AND     a.ORG_COA_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.ORG_COA_COG_ID)||'%', NVL($P{Cog_Id}, a.ORG_COA_COG_ID))
        AND     a.ORG_COA_NA_ID LIKE NVL($P{Na_Id}, a.ORG_COA_NA_ID)

        GROUP BY     a.ORG_COA_CLD_ID,
            a.ORG_ID,
			a.ORG_SLOC_ID,
			a.ORG_COA_HO_ORG_ID,
            a.ORG_FY_ID,
            a.ORG_COA_COG_ID,
            a.ORG_COA_ID,
            a.ORG_COA_OP_BAL

        )  c,
        (
        SELECT DISTINCT COG_CLD_ID COG_CLD_ID,cog_grp_type,
            A.ho_org_id COG_ORG_ID,
            COG_ID,
            COG_NM,
            SUBSTR(SYS_CONNECT_BY_PATH(COG_NM, '->'),3) COG_NM_TREE,
            LPAD(' ',2*(LENGTH(COG_ID)-1))||COG_NM COG_NM_INDENT,
            COG_ID_PARENT,
            COG_SUBLDGR,
            COG_BS_ITEM,
            COG_PNL_ITEM,
            COG_CF_ITEM,
            COG_TRF_BAL,
            COG_ACTV,
			COG_SLOC_ID
        FROM (select app.FN_GET_PARENT_ORG_L0 ($P{Cld_Id}, $P{Org_Id}) ho_org_id from dual) a,
              (select cog_cld_id,cog_sloc_id,cog_org_id,cog_grp_type,
				cog_id,cog_id_parent,
				cog_nm,
				cog_subldgr,cog_bs_item,cog_pnl_item,cog_cf_item,cog_trf_bal,
				cog_actv
				from fin$cog
				where     cog_cld_id = $P{Cld_Id}
				and    cog_org_id = nvl($P{Ho_Org_Id},cog_org_id)
				  ) B
        WHERE   B.COG_ORG_ID = a.ho_org_id
        START WITH nvl(COG_ID_PARENT,'!') in ('!','00')
        CONNECT BY NOCYCLE PRIOR COG_ID = COG_ID_PARENT
        ) d,
        (SELECT    A.GL_CLD_ID,
		    B.GL_SLOC_ID,
            A.GL_ORG_ID,
			B.GL_HO_ORG_ID,
            A.GL_COA_ID,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Dr', GL_AMT_BS, 0)),0) gl_dr_amt_op,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Cr', GL_AMT_BS, 0)),0) gl_cr_amt_op
        FROM      GL_LINES A,
        			GL B,
               (SELECT app.fn_get_fy_start_date($P{Cld_Id}, $P{Org_Id}, add_months(TO_DATE($P{From_Date},'YYYY-mm-dd'),-12),'FY') FY_START_dATE
               FROM DUAL) C
        WHERE     B.GL_CLD_ID = NVL($P{Cld_Id},B.GL_CLD_ID)
        AND     B.GL_STAT = DECODE($P{PostFlag}, 'A', B.GL_STAT, 'P', 'FLC')
        AND     A.GL_CLD_ID = B.GL_CLD_ID
        AND     A.GL_SLOC_ID = B.GL_SLOC_ID
        AND     A.GL_VOU_ID = B.GL_VOU_ID
        AND    a.GL_ORG_ID = NVL($P{Org_Id}, a.GL_ORG_ID)
        AND     a.GL_COA_ID LIKE NVL($P{Coa_Id}, a.GL_COA_ID)
        AND     a.GL_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.GL_COG_ID)||'%', NVL($P{Cog_Id}, a.GL_COG_ID))
        AND     a.GL_NA_ID LIKE NVL($P{Na_Id}, a.GL_NA_ID)
        AND     TRUNC(a.GL_VOU_DT) >= C.FY_START_dATE
        AND     TRUNC(a.GL_VOU_DT) < TO_DATE($P{From_Date}, 'YYYY-mm-dd')
        AND     A.GL_TXN_TYP_MIG not in  ('O','MO')
        GROUP BY     A.GL_CLD_ID,
			B.GL_SLOC_ID,
            A.GL_ORG_ID,
			B.GL_HO_ORG_ID,
            A.GL_COA_ID
        ) e1,
        (
        SELECT    A.GL_CLD_ID,
            A.GL_ORG_ID,
            A.GL_COA_ID,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Dr', GL_AMT_BS, 0)),0) gl_dr_amt,
            NVL(SUM(DECODE(GL_AMT_TYP, 'Cr', GL_AMT_BS, 0)),0) gl_cr_amt
        FROM      GL_LINES A,
            GL B
        WHERE     B.GL_CLD_ID = NVL($P{Cld_Id},A.GL_CLD_ID)
        AND     A.GL_CLD_ID = B.GL_CLD_ID
        AND     A.GL_SLOC_ID = B.GL_SLOC_ID
        AND     A.GL_VOU_ID = B.GL_VOU_ID
        AND     A.GL_ORG_ID = NVL($P{Org_Id}, B.GL_ORG_ID)
        AND     a.GL_COA_ID LIKE NVL($P{Coa_Id}, a.GL_COA_ID)
        AND     a.GL_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, a.GL_COG_ID)||'%', NVL($P{Cog_Id}, a.GL_COG_ID))
        AND     a.GL_NA_ID LIKE NVL($P{Na_Id}, a.GL_NA_ID)
        AND     B.GL_STAT = DECODE($P{PostFlag}, 'A', B.GL_STAT, 'P', 'FLC')
        AND     TRUNC(a.GL_VOU_DT) >= add_months(TO_DATE($P{From_Date}, 'YYYY-mm-dd'),-12)
		AND     TRUNC(a.GL_VOU_DT) <= add_months(TO_DATE($P{To_Date}, 'YYYY-mm-dd'),-12)
        AND     A.GL_TXN_TYP_MIG not in  ('O','MO')

        GROUP BY     A.GL_CLD_ID,
            A.GL_ORG_ID,
            A.GL_COA_ID
        ) e2,
        (
        SELECT    A.TVOU_CLD_ID,
			A.TVOU_SLOC_ID,
			A.TVOU_ORG_ID,
            A.TVOU_HO_ORG_ID,
			A.TVOU_COA_ID,
            NVL(SUM(DECODE(A.TVOU_AMT_TYP,'Dr',A.TVOU_AMT_BS,0)),0) tmp_dr_amt_op,
            NVL(SUM(DECODE(A.TVOU_AMT_TYP,'Cr',A.TVOU_AMT_BS,0)),0) tmp_cr_amt_op
        FROM         TVOU_LINES A,
                      (SELECT app.fn_get_fy_start_date($P{Cld_Id}, $P{Org_Id}, add_months(TO_DATE($P{From_Date},'YYYY-mm-dd'),-12),'FY') FY_START_dATE
                      FROM DUAL) C
        WHERE      A.TVOU_CLD_ID = NVL($P{Cld_Id},A.TVOU_CLD_ID)
        AND    A.tvou_ORG_ID = NVL($P{Org_Id}, A.tvou_ORG_ID)
        AND     A.tvou_COA_ID LIKE NVL($P{Coa_Id}, A.tvou_COA_ID)
        AND     A.tvou_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, A.tvou_COG_ID)||'%', NVL($P{Cog_Id}, A.tvou_COG_ID))
        AND     A.tvou_NA_ID LIKE NVL($P{Na_Id}, A.tvou_NA_ID)
        AND     TRUNC(A.tVOU_DT) >= C.FY_START_dATE
        AND     TRUNC(A.tVOU_DT) < add_months(TO_DATE($P{From_Date}, 'YYYY-mm-dd'),-12)
        GROUP BY     A.TVOU_CLD_ID,
			A.TVOU_SLOC_ID,
            A.TVOU_ORG_ID,
			A.TVOU_HO_ORG_ID,
            A.TVOU_COA_ID
        ) f1,
        (
        SELECT  a.TVOU_CLD_ID,
                a.TVOU_ORG_ID,
                a.TVOU_COA_ID,
                NVL(SUM(DECODE(a.TVOU_AMT_TYP,'Dr',a.TVOU_AMT_BS,0)),0) tmp_dr_amt,
                NVL(SUM(DECODE(a.TVOU_AMT_TYP,'Cr',a.TVOU_AMT_BS,0)),0) tmp_cr_amt
        FROM    TVOU_LINES a
        WHERE     a.TVOU_CLD_ID = NVL($P{Cld_Id},TVOU_CLD_ID)
        AND    a.tvou_ORG_ID = NVL($P{Org_Id}, tvou_ORG_ID)
        AND     a.tvou_COA_ID LIKE NVL($P{Coa_Id}, tvou_COA_ID)
        AND     a.tvou_COG_ID LIKE decode($P{Include_Grp},'Y', NVL($P{Cog_Id}, tvou_COG_ID)||'%', NVL($P{Cog_Id}, tvou_COG_ID))
        AND     a.tvou_NA_ID LIKE NVL($P{Na_Id}, tvou_NA_ID)
        AND     TRUNC(a.tVOU_DT) >= add_months(TO_DATE($P{From_Date}, 'YYYY-mm-dd'),-12)
		AND     TRUNC(a.tVOU_DT) <= add_months(TO_DATE($P{To_Date}, 'YYYY-mm-dd'),-12)
        GROUP BY  a.TVOU_CLD_ID,
                  a.TVOU_ORG_ID,
                  a.TVOU_COA_ID
        ) f2
    WHERE    A.ORG_CLD_ID = NVL($P{Cld_Id}, A.ORG_CLD_ID)
    AND      A.ORG_ID = NVL($P{Org_Id}, A.ORG_ID)
    AND    B.ORG_CLD_ID = A.ORG_CLD_ID
    AND    B.ORG_ID = A.ORG_ID

	AND         B.ORG_CLD_ID = c.ORG_COA_CLD_ID
    AND         B.ORG_ID = c.ORG_ID
	AND         B.COA_SLOC_ID = c.ORG_SLOC_ID
	AND         B.HO_ORG_ID = c.ORG_COA_HO_ORG_ID
    AND         B.COA_ID = c.ORG_COA_ID

    AND         B.ORG_CLD_ID = d.COG_CLD_ID
	AND         B.COA_SLOC_ID = d.COG_SLOC_ID
    AND         B.HO_ORG_ID = d.COG_ORG_ID
    AND         B.COA_COG_ID = d.COG_ID

    AND         c.ORG_COA_CLD_ID = e1.GL_CLD_ID(+)
	AND         c.ORG_SLOC_ID = e1.GL_SLOC_ID(+)
	AND         c.ORG_ID = e1.GL_ORG_ID(+)
	AND         c.ORG_COA_HO_ORG_ID = e1.GL_HO_ORG_ID(+)
    AND         c.ORG_COA_ID = e1.GL_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = e2.GL_CLD_ID(+)
    AND         c.ORG_ID = e2.GL_ORG_ID(+)
    AND         c.ORG_COA_ID = e2.GL_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = f1.TVOU_CLD_ID(+)
	AND         c.ORG_SLOC_ID = f1.TVOU_SLOC_ID(+)
    AND         c.ORG_ID = f1.tvou_ORG_ID(+)
	AND         c.ORG_COA_HO_ORG_ID = f1.TVOU_HO_ORG_ID(+)
    AND         c.ORG_COA_ID = f1.tvou_COA_ID(+)

    AND         c.ORG_COA_CLD_ID = f2.TVOU_CLD_ID(+)
    AND         c.ORG_ID = f2.tvou_ORG_ID(+)
    AND         c.ORG_COA_ID = f2.tvou_COA_ID(+))


where NOT (OP_BAL_PREV = 0 AND DR_AMT_PREV = 0 AND CR_AMT_PREV = 0 AND CL_BAL_PREV = 0)
and cog_grp_type=$P{COG_TYPE}
)P


WHERE NOT (C.OP_BAL = 0 AND C.DR_AMT = 0 AND C.CR_AMT = 0 AND C.CL_BAL = 0 )



and      C.cog_grp_type=P.cog_grp_type
AND     C.org_id=P.org_id(+)
AND    C.cog_id=P.cog_id(+)
and     C.COA_ID=P.COA_ID(+)]]>
	</queryString>
	<field name="CLD_ID" class="java.lang.String"/>
	<field name="COG_GRP_TYPE" class="java.lang.String"/>
	<field name="ORG_ID" class="java.lang.String"/>
	<field name="ORG_DESC" class="java.lang.String"/>
	<field name="ORG_FY_ID" class="java.math.BigDecimal"/>
	<field name="COG_ID" class="java.lang.String"/>
	<field name="ORG_COA_OP_BAL" class="java.math.BigDecimal"/>
	<field name="COG_ID_GRP" class="java.lang.String"/>
	<field name="COG_IND" class="java.lang.String"/>
	<field name="COG_NM" class="java.lang.String"/>
	<field name="COG_SUBLDGR" class="java.lang.String"/>
	<field name="COA_ID" class="java.math.BigDecimal"/>
	<field name="COA_NM" class="java.lang.String"/>
	<field name="OP_BAL_STR" class="java.lang.String"/>
	<field name="OP_BAL" class="java.math.BigDecimal"/>
	<field name="OP_BAL_TYPE" class="java.lang.String"/>
	<field name="DR_AMT" class="java.math.BigDecimal"/>
	<field name="CR_AMT" class="java.math.BigDecimal"/>
	<field name="CL_BAL" class="java.math.BigDecimal"/>
	<field name="CL_BAL_TYPE" class="java.lang.String"/>
	<field name="CL_BAL_SIGNED" class="java.math.BigDecimal"/>
	<field name="OP_BAL_SIGNED" class="java.math.BigDecimal"/>
	<field name="ORG_COA_PRV_YR_BAL" class="java.math.BigDecimal"/>
	<field name="OP_BAL_PREV" class="java.math.BigDecimal"/>
	<field name="OP_BAL_TYPE_PREV" class="java.lang.String"/>
	<field name="DR_AMT_PREV" class="java.math.BigDecimal"/>
	<field name="CR_AMT_PREV" class="java.math.BigDecimal"/>
	<field name="CL_BAL_PREV" class="java.math.BigDecimal"/>
	<field name="CL_BAL_TYPE_PREV" class="java.lang.String"/>
	<field name="CL_BAL_SIGNED_PREV" class="java.math.BigDecimal"/>
	<field name="OP_BAL_SIGNED_PREV" class="java.math.BigDecimal"/>
	<sortField name="ORG_DESC"/>
	<sortField name="COG_ID"/>
	<sortField name="COG_IND"/>
	<sortField name="COA_NM"/>
	<variable name="TotOpeningBalGrp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{OP_BAL_SIGNED}]]></variableExpression>
	</variable>
	<variable name="TotDebitGrp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{DR_AMT}]]></variableExpression>
	</variable>
	<variable name="TotCreditGrp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CR_AMT}]]></variableExpression>
	</variable>
	<variable name="TotCloseGrp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL_SIGNED}]]></variableExpression>
	</variable>
	<variable name="count" class="java.lang.Integer" calculation="Sum">
		<variableExpression><![CDATA[1]]></variableExpression>
		<initialValueExpression><![CDATA[0]]></initialValueExpression>
	</variable>
	<variable name="two" class="java.lang.Integer">
		<variableExpression><![CDATA[$V{count} % 2]]></variableExpression>
		<initialValueExpression><![CDATA[]]></initialValueExpression>
	</variable>
	<variable name="zero" class="java.lang.Integer">
		<initialValueExpression><![CDATA[0]]></initialValueExpression>
	</variable>
	<variable name="ORG_COA_OP_BAL_1" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{OP_BAL_SIGNED}]]></variableExpression>
	</variable>
	<variable name="ORG_COA_OP_BAL_2" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{ORG_COA_OP_BAL}]]></variableExpression>
	</variable>
	<variable name="OP_BAL_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{OP_BAL}]]></variableExpression>
	</variable>
	<variable name="DR_AMT_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{DR_AMT}]]></variableExpression>
	</variable>
	<variable name="CL_BAL_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL}]]></variableExpression>
	</variable>
	<variable name="CR_AMT_1" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{CR_AMT}]]></variableExpression>
	</variable>
	<variable name="org_desc" class="java.lang.String">
		<variableExpression><![CDATA[$F{ORG_DESC}]]></variableExpression>
	</variable>
	<variable name="TotOrgCoaOpBal_Prev" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{ORG_COA_PRV_YR_BAL}]]></variableExpression>
	</variable>
	<variable name="TotDrAmt_Prv" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{DR_AMT_PREV}]]></variableExpression>
	</variable>
	<variable name="TotCrAmt_Prv" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CR_AMT_PREV}]]></variableExpression>
	</variable>
	<variable name="TotOpBalPrvTyp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{OP_BAL_SIGNED_PREV}]]></variableExpression>
	</variable>
	<variable name="TotClBalPrv" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL_PREV}]]></variableExpression>
	</variable>
	<variable name="TotClBalPrvTyp" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL_SIGNED_PREV}]]></variableExpression>
	</variable>
	<variable name="NetTotOrgCoaOpBal_Prev" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{ORG_COA_PRV_YR_BAL}]]></variableExpression>
	</variable>
	<variable name="NetTotOpBalPrvTyp" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{OP_BAL_SIGNED_PREV}]]></variableExpression>
	</variable>
	<variable name="NetTotDrAmt_Prv" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{DR_AMT_PREV}]]></variableExpression>
	</variable>
	<variable name="NetTotCrAmt_Prv" class="java.math.BigDecimal" resetType="Group" resetGroup="cog_id_grp" calculation="Sum">
		<variableExpression><![CDATA[$F{CR_AMT_PREV}]]></variableExpression>
	</variable>
	<variable name="NetTotClBalPrv" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL_PREV}]]></variableExpression>
	</variable>
	<variable name="NetTotClBalPrvTyp" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$F{CL_BAL_SIGNED_PREV}]]></variableExpression>
	</variable>
	<variable name="Net" class="java.math.BigDecimal" calculation="Sum">
		<variableExpression><![CDATA[$V{ORG_COA_OP_BAL_2}]]></variableExpression>
	</variable>
	<group name="cog_id_grp" isReprintHeaderOnEachPage="true">
		<groupExpression><![CDATA[$F{COG_ID}]]></groupExpression>
		<groupHeader>
			<band height="15">
				<printWhenExpression><![CDATA[$P{Report_Type} == "P"]]></printWhenExpression>
				<textField isBlankWhenNull="true" bookmarkLevel="1">
					<reportElement mode="Opaque" x="5" y="1" width="234" height="14" isRemoveLineWhenBlank="true" forecolor="#000000" backcolor="#99B4D1"/>
					<box>
						<pen lineColor="#000000"/>
						<topPen lineColor="#000000"/>
						<leftPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
						<bottomPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
						<rightPen lineWidth="0.0" lineStyle="Solid" lineColor="#000000"/>
					</box>
					<textElement verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.lang.String"><![CDATA[$F{COG_IND}]]></textFieldExpression>
					<anchorNameExpression><![CDATA[$F{COG_IND}]]></anchorNameExpression>
				</textField>
				<staticText>
					<reportElement mode="Opaque" x="0" y="1" width="5" height="14" backcolor="#99B4D1"/>
					<textElement/>
					<text><![CDATA[]]></text>
				</staticText>
				<textField isBlankWhenNull="true">
					<reportElement x="0" y="1" width="239" height="14" forecolor="#6600CC"/>
					<box>
						<leftPen lineWidth="0.5" lineColor="#000000"/>
					</box>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
				</textField>
				<staticText>
					<reportElement mode="Transparent" x="920" y="0" width="5" height="15" backcolor="#99B4D1"/>
					<box>
						<rightPen lineWidth="0.5"/>
					</box>
					<textElement/>
					<text><![CDATA[]]></text>
				</staticText>
			</band>
		</groupHeader>
		<groupFooter>
			<band height="15">
				<printWhenExpression><![CDATA[$P{Report_Type} == "P"]]></printWhenExpression>
				<staticText>
					<reportElement style="HeaderStyle" mode="Transparent" x="239" y="0" width="686" height="15" backcolor="#99B4D1"/>
					<box>
						<rightPen lineWidth="0.5"/>
					</box>
					<textElement/>
					<text><![CDATA[]]></text>
				</staticText>
				<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
					<reportElement x="323" y="0" width="70" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotDebitGrp}.abs()]]></textFieldExpression>
				</textField>
				<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
					<reportElement x="398" y="0" width="70" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotCreditGrp}.abs()]]></textFieldExpression>
				</textField>
				<textField isBlankWhenNull="true">
					<reportElement x="313" y="0" width="10" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.lang.String"><![CDATA[$V{ORG_COA_OP_BAL_1}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
				</textField>
				<textField isBlankWhenNull="true">
					<reportElement x="556" y="0" width="14" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.lang.String"><![CDATA[$V{TotCloseGrp}.compareTo(0.00)== -1 ? "Cr" : "Dr"]]></textFieldExpression>
				</textField>
				<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
					<reportElement x="240" y="0" width="73" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{ORG_COA_OP_BAL_1}]]></textFieldExpression>
				</textField>
				<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
					<reportElement x="474" y="0" width="80" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotCloseGrp}.abs()]]></textFieldExpression>
				</textField>
				<staticText>
					<reportElement mode="Transparent" x="0" y="0" width="5" height="15" backcolor="#99B4D1"/>
					<box>
						<leftPen lineWidth="0.5"/>
					</box>
					<textElement/>
					<text><![CDATA[]]></text>
				</staticText>
				<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
					<reportElement x="570" y="0" width="72" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotOrgCoaOpBal_Prev}]]></textFieldExpression>
				</textField>
				<textField isBlankWhenNull="true">
					<reportElement x="644" y="0" width="10" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.lang.String"><![CDATA[$V{TotOpBalPrvTyp}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
				</textField>
				<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
					<reportElement x="652" y="0" width="69" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotDrAmt_Prv}]]></textFieldExpression>
				</textField>
				<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
					<reportElement x="728" y="0" width="70" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotCrAmt_Prv}]]></textFieldExpression>
				</textField>
				<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
					<reportElement x="802" y="0" width="99" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{TotClBalPrv}]]></textFieldExpression>
				</textField>
				<textField>
					<reportElement x="901" y="0" width="19" height="15" forecolor="#6600CC"/>
					<textElement textAlignment="Right" verticalAlignment="Middle">
						<font fontName="Arial" size="8" isBold="true"/>
					</textElement>
					<textFieldExpression class="java.lang.String"><![CDATA[$V{TotClBalPrvTyp}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
				</textField>
			</band>
		</groupFooter>
	</group>
	<columnHeader>
		<band height="20" splitType="Immediate">
			<printWhenExpression><![CDATA[$F{COG_GRP_TYPE}=='A']]></printWhenExpression>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="0" y="0" width="239" height="20" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5"/>
					<leftPen lineWidth="0.5"/>
					<bottomPen lineWidth="0.5"/>
					<rightPen lineWidth="0.5"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Description]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="323" y="0" width="76" height="20" isRemoveLineWhenBlank="true" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Current Year  Debits]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="399" y="0" width="75" height="20" isRemoveLineWhenBlank="true" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Current Year Credits]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="474" y="0" width="96" height="20" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Closing Balance]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="239" y="0" width="84" height="20" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Top">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Opening Balance]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="727" y="0" width="75" height="20" isRemoveLineWhenBlank="true" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Previous Year Credits]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="569" y="0" width="84" height="20" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Top">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Opening Balance ]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="652" y="0" width="76" height="20" isRemoveLineWhenBlank="true" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Previous Year  Debits]]></text>
			</staticText>
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="801" y="0" width="124" height="20" forecolor="#000000"/>
				<box>
					<topPen lineWidth="0.5" lineStyle="Solid"/>
					<leftPen lineWidth="0.5" lineStyle="Solid"/>
					<bottomPen lineWidth="0.5" lineStyle="Solid"/>
					<rightPen lineWidth="0.5" lineStyle="Solid"/>
				</box>
				<textElement textAlignment="Center" verticalAlignment="Middle">
					<font fontName="Arial" size="8" isBold="true"/>
				</textElement>
				<text><![CDATA[Closing Balance]]></text>
			</staticText>
			<subreport>
				<reportElement x="240" y="4" width="83" height="16" isPrintWhenDetailOverflows="true"/>
				<subreportParameter name="Cld_Id">
					<subreportParameterExpression><![CDATA[$P{Cld_Id}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="Org_Id">
					<subreportParameterExpression><![CDATA[$P{Org_Id}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="Fy_Id">
					<subreportParameterExpression><![CDATA[$F{ORG_FY_ID}]]></subreportParameterExpression>
				</subreportParameter>
				<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
				<subreportExpression class="java.lang.String"><![CDATA[$P{Path} + "SubReport/FyDesc_SubReport.jasper"]]></subreportExpression>
			</subreport>
			<subreport>
				<reportElement x="571" y="4" width="81" height="16" isPrintWhenDetailOverflows="true"/>
				<subreportParameter name="Cld_Id">
					<subreportParameterExpression><![CDATA[$P{Cld_Id}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="Org_Id">
					<subreportParameterExpression><![CDATA[$P{Org_Id}]]></subreportParameterExpression>
				</subreportParameter>
				<subreportParameter name="Fy_Id">
					<subreportParameterExpression><![CDATA[$F{ORG_FY_ID} - 1]]></subreportParameterExpression>
				</subreportParameter>
				<connectionExpression><![CDATA[$P{REPORT_CONNECTION}]]></connectionExpression>
				<subreportExpression class="java.lang.String"><![CDATA[$P{Path} + "SubReport/FyDesc_SubReport.jasper"]]></subreportExpression>
			</subreport>
		</band>
	</columnHeader>
	<detail>
		<band height="12" splitType="Stretch">
			<printWhenExpression><![CDATA[$P{Report_Type} == "P"]]></printWhenExpression>
			<staticText>
				<reportElement x="801" y="0" width="124" height="12"/>
				<box>
					<rightPen lineWidth="0.5"/>
				</box>
				<textElement/>
				<text><![CDATA[]]></text>
			</staticText>
			<textField isStretchWithOverflow="true" pattern="" isBlankWhenNull="true">
				<reportElement mode="Transparent" x="6" y="0" width="234" height="12" isRemoveLineWhenBlank="true"/>
				<textElement verticalAlignment="Middle">
					<font size="8"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{COA_NM}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="474" y="0" width="80" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{CL_BAL}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="324" y="0" width="70" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{DR_AMT}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="399" y="0" width="70" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{CR_AMT}.abs()]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="556" y="0" width="14" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{CL_BAL_TYPE}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="240" y="0" width="73" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{ORG_COA_OP_BAL}.abs()]]></textFieldExpression>
			</textField>
			<staticText>
				<reportElement x="0" y="0" width="239" height="12"/>
				<box>
					<leftPen lineWidth="0.5"/>
				</box>
				<textElement/>
				<text><![CDATA[]]></text>
			</staticText>
			<textField>
				<reportElement x="313" y="0" width="10" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{OP_BAL_TYPE}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="728" y="0" width="70" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{CR_AMT_PREV}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="808" y="0" width="93" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{CL_BAL_PREV}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="570" y="0" width="73" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{ORG_COA_PRV_YR_BAL}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="651" y="0" width="70" height="12" isRemoveLineWhenBlank="true"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$F{DR_AMT_PREV}.abs()]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="643" y="0" width="10" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{OP_BAL_TYPE_PREV}]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="901" y="0" width="19" height="12"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="8"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{CL_BAL_TYPE_PREV}]]></textFieldExpression>
			</textField>
		</band>
	</detail>
	<summary>
		<band height="21">
			<staticText>
				<reportElement style="HeaderStyle" mode="Opaque" x="0" y="0" width="925" height="20"/>
				<box>
					<leftPen lineWidth="0.5"/>
					<rightPen lineWidth="0.5"/>
				</box>
				<textElement/>
				<text><![CDATA[]]></text>
			</staticText>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="240" y="0" width="73" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{ORG_COA_OP_BAL_2}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="328" y="1" width="65" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{DR_AMT_1}.abs()]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="473" y="0" width="85" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{CL_BAL_1}]]></textFieldExpression>
			</textField>
			<textField pattern="#,##0.00;-#,##0.00" isBlankWhenNull="true">
				<reportElement x="399" y="0" width="69" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{CR_AMT_1}.abs()]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="557" y="0" width="14" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$V{CL_BAL_1}.compareTo(0.00)== -1 ? "Cr" : "Dr"]]></textFieldExpression>
			</textField>
			<textField isBlankWhenNull="true">
				<reportElement x="313" y="0" width="15" height="20" forecolor="#0000CC"/>
				<textElement verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$V{ORG_COA_OP_BAL_2}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="569" y="0" width="73" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{NetTotOrgCoaOpBal_Prev}]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="643" y="0" width="15" height="20" forecolor="#0000CC"/>
				<textElement verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$V{NetTotOpBalPrvTyp}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="653" y="0" width="68" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{NetTotDrAmt_Prv}]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="728" y="0" width="70" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{NetTotCrAmt_Prv}]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="802" y="0" width="100" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.math.BigDecimal"><![CDATA[$V{NetTotClBalPrv}]]></textFieldExpression>
			</textField>
			<textField pattern="###0.00;-###0.00" isBlankWhenNull="true">
				<reportElement x="902" y="0" width="18" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$V{NetTotClBalPrvTyp}.compareTo(0.00) == -1 ? "Cr" : "Dr"]]></textFieldExpression>
			</textField>
			<textField>
				<reportElement x="0" y="1" width="240" height="20" forecolor="#0000CC"/>
				<textElement textAlignment="Right" verticalAlignment="Middle">
					<font fontName="Arial" size="10" isBold="true"/>
				</textElement>
				<textFieldExpression class="java.lang.String"><![CDATA[$F{COG_GRP_TYPE}=='A' ? " Total Asset " : $F{COG_GRP_TYPE}=='L' ? " Total Liability " : $F{COG_GRP_TYPE}=='I' ? " Total Income " : $F{COG_GRP_TYPE}=='E' ? " Total Expense " : null]]></textFieldExpression>
			</textField>
		</band>
	</summary>
</jasperReport>
