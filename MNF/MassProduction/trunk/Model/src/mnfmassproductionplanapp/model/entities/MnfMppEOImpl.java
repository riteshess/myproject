package mnfmassproductionplanapp.model.entities;

import adf.utils.bean.ADFBeanUtils;

import adf.utils.ebiz.EbizParams;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 20 15:33:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfMppEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        MppId,
        MppStat,
        MppRevNo,
        MppRevDt,
        MppRmrk,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        MppMode,
        OutptItmId,
        OutptItmQty,
        BalQty,
        TmpBalQty,
        MnfMppOp,
        MnfMppPdo;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int MPPID = AttributesEnum.MppId.index();
    public static final int MPPSTAT = AttributesEnum.MppStat.index();
    public static final int MPPREVNO = AttributesEnum.MppRevNo.index();
    public static final int MPPREVDT = AttributesEnum.MppRevDt.index();
    public static final int MPPRMRK = AttributesEnum.MppRmrk.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int MPPMODE = AttributesEnum.MppMode.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int TMPBALQTY = AttributesEnum.TmpBalQty.index();
    public static final int MNFMPPOP = AttributesEnum.MnfMppOp.index();
    public static final int MNFMPPPDO = AttributesEnum.MnfMppPdo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfMppEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfmassproductionplanapp.model.entities.MnfMppEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for MppId, using the alias name MppId.
     * @return the value of MppId
     */
    public String getMppId() {
        return (String) getAttributeInternal(MPPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppId.
     * @param value value to set the MppId
     */
    public void setMppId(String value) {
        setAttributeInternal(MPPID, value);
    }

    /**
     * Gets the attribute value for MppStat, using the alias name MppStat.
     * @return the value of MppStat
     */
    public Integer getMppStat() {
        return (Integer) getAttributeInternal(MPPSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppStat.
     * @param value value to set the MppStat
     */
    public void setMppStat(Integer value) {
        setAttributeInternal(MPPSTAT, value);
    }

    /**
     * Gets the attribute value for MppRevNo, using the alias name MppRevNo.
     * @return the value of MppRevNo
     */
    public Number getMppRevNo() {
        return (Number) getAttributeInternal(MPPREVNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppRevNo.
     * @param value value to set the MppRevNo
     */
    public void setMppRevNo(Number value) {
        setAttributeInternal(MPPREVNO, value);
    }

    /**
     * Gets the attribute value for MppRevDt, using the alias name MppRevDt.
     * @return the value of MppRevDt
     */
    public Timestamp getMppRevDt() {
        return (Timestamp) getAttributeInternal(MPPREVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppRevDt.
     * @param value value to set the MppRevDt
     */
    public void setMppRevDt(Timestamp value) {
        setAttributeInternal(MPPREVDT, value);
    }

    /**
     * Gets the attribute value for MppRmrk, using the alias name MppRmrk.
     * @return the value of MppRmrk
     */
    public String getMppRmrk() {
        return (String) getAttributeInternal(MPPRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppRmrk.
     * @param value value to set the MppRmrk
     */
    public void setMppRmrk(String value) {
        setAttributeInternal(MPPRMRK, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for MppMode, using the alias name MppMode.
     * @return the value of MppMode
     */
    public Integer getMppMode() {
        return (Integer) getAttributeInternal(MPPMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MppMode.
     * @param value value to set the MppMode
     */
    public void setMppMode(Integer value) {
        setAttributeInternal(MPPMODE, value);
    }

    /**
     * Gets the attribute value for OutptItmId, using the alias name OutptItmId.
     * @return the value of OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmId.
     * @param value value to set the OutptItmId
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OutptItmQty, using the alias name OutptItmQty.
     * @return the value of OutptItmQty
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmQty.
     * @param value value to set the OutptItmQty
     */
    public void setOutptItmQty(Number value) {
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for BalQty, using the alias name BalQty.
     * @return the value of BalQty
     */
    public Number getBalQty() {
        return (Number) getAttributeInternal(BALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BalQty.
     * @param value value to set the BalQty
     */
    public void setBalQty(Number value) {
        setAttributeInternal(BALQTY, value);
    }

    /**
     * Gets the attribute value for TmpBalQty, using the alias name TmpBalQty.
     * @return the value of TmpBalQty
     */
    public Number getTmpBalQty() {
        return (Number) getAttributeInternal(TMPBALQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TmpBalQty.
     * @param value value to set the TmpBalQty
     */
    public void setTmpBalQty(Number value) {
        setAttributeInternal(TMPBALQTY, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfMppOp() {
        return (RowIterator) getAttributeInternal(MNFMPPOP);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfMppPdo() {
        return (RowIterator) getAttributeInternal(MNFMPPPDO);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setDocId(getDocIdFrmFn());
        setDocDt(new oracle.jbo.domain.Timestamp(new java.util.Date()));
        setFyId(getFynIdFrmFn());
        //setFyId(getFynIdFrmFn());
        setMppStat(41);
        setMppMode(47);
        setTFparam();
        //setMppId(getMppIdFromFun());

    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
     //   try {
//            super.lock();
    //    } catch (RowInconsistentException e) {
      //      refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
     //       super.lock();
     //   }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        if (operation == DML_UPDATE) {
            if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
                setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            }
            setUsrIdModDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        }
    
         if (getMppId() != null) {

            //do nothing
           // System.out.println("do nothing" + getMppId());
        } else {
           // System.out.println("get MppId");
           setMppId(getMppIdFromFun());

            //set the Task Flow parameter
           // setTFparam();
        } 
        super.doDML(operation, e);
    }

    /**
     *get pageflow scope parameter
     * @param data
     * @return
     */
    public Object resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }


    private static int STRING = Types.VARCHAR;
    private static int INTEGER = Types.INTEGER;

    /** helper method for executing DB function
     * @param sqlReturnType return type of database function
     * @param stmt statement of executing function in database quary
     * @param bindVars input and out parameter of database function.
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            //System.out.println("st.getObject(1) " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(11, end));

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

   
    /** function to generate doc id
     * @param userid user id
     * @param OrgId organisation id
     * @param slocid server location id
     * @param docId  26002
     * @return next Doc id
     */
    public String getDocIdFrmFn() {
        return (String) callStoredFunction(STRING, "app.get_txn_id(?,?,?,?,?,?)", new Object[] {
                                           getCldId(), getSlocId(), getOrgId(), getUsrIdCreate(), 26002, 0
    });
    }

    /**
     * function to generate fy id
     get_org_fy_id(
     p_cldid varchar2,
     p_org_id varchar2,
     p_txn_dt date,
     p_fy_type varchar2 default 'FY')
     */

    public Integer getFynIdFrmFn() {
        return (Integer) callStoredFunction(INTEGER, "app.get_org_fy_id(?,?,?,?)", new Object[] {
                                            getCldId(), getOrgId(), getDocDt(), "FY"
    });
    }

    /**
     *Method to set the task flow parameter after create
     * **/
    public void setTFparam() {

        //set the value in task from parameter
        //the value is used whenever the task flow is revisited after calling other TF
        //Task Value will be used to set ensure current row for header

        ADFContext.getCurrent().getPageFlowScope().put("MPP_DOC_ID", getDocId());
    }
    /**
     * function to generate GPP id
     * @param OrgId organisation id
     * @param slocId server location id
     * @param docId document id
     * @param OrgId Organization id
     * @return next Mpp id
     *  P_SLOC_ID := 1;
        P_CLD_ID := '0000';
        P_ORG_ID := '01';
        P_DOC_ID := 26002;
        P_DOC_hex_ID      VARCHAR2,
        P_DOC_TYPE_ID     NUMBER DEFAULT NULL,
        p_tablename       VARCHAR2,
        P_FYID            NUMBER,
        p_doc_sub_type_id NUMBER DEFAULT 0
     */
    public String getMppIdFromFun() {

        return (String) callStoredFunction(STRING, "MNF.FN_MNF_GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                           getSlocId(), getCldId(), getOrgId(), 26002, getDocId(), 0, "MNF$MPP",
                                           getFyId(), 0
    });
    }


}

