package mnfshopfloorfeedback.model.views;

import java.math.BigDecimal;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 17 12:49:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVFdbkParamVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ParamId,
        ParamDesc,
        ParamVal,
        ParamBasis;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMDESC = AttributesEnum.ParamDesc.index();
    public static final int PARAMVAL = AttributesEnum.ParamVal.index();
    public static final int PARAMBASIS = AttributesEnum.ParamBasis.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVFdbkParamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ParamId.
     * @return the ParamId
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParamId.
     * @param value value to set the  ParamId
     */
    public void setParamId(String value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParamDesc.
     * @return the ParamDesc
     */
    public String getParamDesc() {
        return (String) getAttributeInternal(PARAMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParamDesc.
     * @param value value to set the  ParamDesc
     */
    public void setParamDesc(String value) {
        setAttributeInternal(PARAMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParamVal.
     * @return the ParamVal
     */
    public BigDecimal getParamVal() {
        return (BigDecimal) getAttributeInternal(PARAMVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParamVal.
     * @param value value to set the  ParamVal
     */
    public void setParamVal(BigDecimal value) {
        setAttributeInternal(PARAMVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParamBasis.
     * @return the ParamBasis
     */
    public Integer getParamBasis() {
        return (Integer) getAttributeInternal(PARAMBASIS);
    }
}

