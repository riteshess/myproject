package mnfshopfloorfeedback.model.views;

import java.sql.Timestamp;

import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 27 17:32:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVSearchViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        FdbkBasisId,
        JcId,
        RcId,
        DocDt,
        FdbkRmrk,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrCreateNm,
        FreezeFdbk,
        FdbkTypeId,
        FdbkBasis,
        FdbkType,
        FdbkId,
        DispJcId,
        DispRcId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FDBKBASISID = AttributesEnum.FdbkBasisId.index();
    public static final int JCID = AttributesEnum.JcId.index();
    public static final int RCID = AttributesEnum.RcId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FDBKRMRK = AttributesEnum.FdbkRmrk.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRCREATENM = AttributesEnum.UsrCreateNm.index();
    public static final int FREEZEFDBK = AttributesEnum.FreezeFdbk.index();
    public static final int FDBKTYPEID = AttributesEnum.FdbkTypeId.index();
    public static final int FDBKBASIS = AttributesEnum.FdbkBasis.index();
    public static final int FDBKTYPE = AttributesEnum.FdbkType.index();
    public static final int FDBKID = AttributesEnum.FdbkId.index();
    public static final int DISPJCID = AttributesEnum.DispJcId.index();
    public static final int DISPRCID = AttributesEnum.DispRcId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVSearchViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkBasisId.
     * @return the FdbkBasisId
     */
    public Integer getFdbkBasisId() {
        return (Integer) getAttributeInternal(FDBKBASISID);
    }

    /**
     * Gets the attribute value for the calculated attribute JcId.
     * @return the JcId
     */
    public String getJcId() {
        return (String) getAttributeInternal(JCID);
    }

    /**
     * Gets the attribute value for the calculated attribute RcId.
     * @return the RcId
     */
    public String getRcId() {
        return (String) getAttributeInternal(RCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkRmrk.
     * @return the FdbkRmrk
     */
    public String getFdbkRmrk() {
        return (String) getAttributeInternal(FDBKRMRK);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrCreateNm.
     * @return the UsrCreateNm
     */
    public String getUsrCreateNm() {
        return (String) getAttributeInternal(USRCREATENM);
    }

    /**
     * Gets the attribute value for the calculated attribute FreezeFdbk.
     * @return the FreezeFdbk
     */
    public String getFreezeFdbk() {
        return (String) getAttributeInternal(FREEZEFDBK);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkTypeId.
     * @return the FdbkTypeId
     */
    public Integer getFdbkTypeId() {
        return (Integer) getAttributeInternal(FDBKTYPEID);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkBasis.
     * @return the FdbkBasis
     */
    public String getFdbkBasis() {
        return (String) getAttributeInternal(FDBKBASIS);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkType.
     * @return the FdbkType
     */
    public String getFdbkType() {
        return (String) getAttributeInternal(FDBKTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkId.
     * @return the FdbkId
     */
    public String getFdbkId() {
        return (String) getAttributeInternal(FDBKID);
    }

    /**
     * Gets the attribute value for the calculated attribute DispJcId.
     * @return the DispJcId
     */
    public String getDispJcId() {
        return (String) getAttributeInternal(DISPJCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DispRcId.
     * @return the DispRcId
     */
    public String getDispRcId() {
        return (String) getAttributeInternal(DISPRCID);
    }
}

