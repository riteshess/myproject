package mnfshopfloorfeedback.model.views;

import mnfshopfloorfeedback.model.services.MNFShopFloorFeedbackAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 27 15:31:21 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVCopyPreviousFdbkVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        FdbkType,
        JcId,
        RcId,
        FdbkRmrk,
        FdbkBasis,
        FdbkId,
        DocId,
        OpId,
        OpSrNo,
        transJCId,
        transRCId,
        LOVJcRcInfoViewVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int FDBKTYPE = AttributesEnum.FdbkType.index();
    public static final int JCID = AttributesEnum.JcId.index();
    public static final int RCID = AttributesEnum.RcId.index();
    public static final int FDBKRMRK = AttributesEnum.FdbkRmrk.index();
    public static final int FDBKBASIS = AttributesEnum.FdbkBasis.index();
    public static final int FDBKID = AttributesEnum.FdbkId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int TRANSJCID = AttributesEnum.transJCId.index();
    public static final int TRANSRCID = AttributesEnum.transRCId.index();
    public static final int LOVJCRCINFOVIEWVO1 = AttributesEnum.LOVJcRcInfoViewVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVCopyPreviousFdbkVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkType.
     * @return the FdbkType
     */
    public Integer getFdbkType() {
        return (Integer) getAttributeInternal(FDBKTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FdbkType.
     * @param value value to set the  FdbkType
     */
    public void setFdbkType(Integer value) {
        setAttributeInternal(FDBKTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute JcId.
     * @return the JcId
     */
    public String getJcId() {
        return (String) getAttributeInternal(JCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute JcId.
     * @param value value to set the  JcId
     */
    public void setJcId(String value) {
        setAttributeInternal(JCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RcId.
     * @return the RcId
     */
    public String getRcId() {
        return (String) getAttributeInternal(RCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RcId.
     * @param value value to set the  RcId
     */
    public void setRcId(String value) {
        setAttributeInternal(RCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkRmrk.
     * @return the FdbkRmrk
     */
    public String getFdbkRmrk() {
        return (String) getAttributeInternal(FDBKRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FdbkRmrk.
     * @param value value to set the  FdbkRmrk
     */
    public void setFdbkRmrk(String value) {
        setAttributeInternal(FDBKRMRK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkBasis.
     * @return the FdbkBasis
     */
    public Integer getFdbkBasis() {
        return (Integer) getAttributeInternal(FDBKBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FdbkBasis.
     * @param value value to set the  FdbkBasis
     */
    public void setFdbkBasis(Integer value) {
        setAttributeInternal(FDBKBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FdbkId.
     * @return the FdbkId
     */
    public String getFdbkId() {
        return (String) getAttributeInternal(FDBKID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpId.
     * @return the OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNo.
     * @return the OpSrNo
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute transJCId.
     * @return the transJCId
     */
    public String gettransJCId() {
        if (getJcId() != null) {
            if (getAM().getLOVJcRcInfoView1().getFilteredRows("DocId", getJcId()).length > 0) {
                return (getAM().getLOVJcRcInfoView1().getFilteredRows("DocId",getJcId()))[0].getAttribute("DispDocId").toString();
            }
        }
        return (String) getAttributeInternal(TRANSJCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transJCId.
     * @param value value to set the  transJCId
     */
    public void settransJCId(String value) {
        setAttributeInternal(TRANSJCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transRCId.
     * @return the transRCId
     */
    public String gettransRCId() {
        if (getRcId() != null) {
            if (getAM().getLOVJcRcInfoView1().getFilteredRows("DocId", getRcId()).length > 0) {
                return (getAM().getLOVJcRcInfoView1().getFilteredRows("DocId",
                                                               getRcId()))[0].getAttribute("DispDocId").toString();
            }
        }
        return (String) getAttributeInternal(TRANSRCID);
    }

    private MNFShopFloorFeedbackAMImpl getAM(){
        return (MNFShopFloorFeedbackAMImpl)this.getApplicationModule();
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transRCId.
     * @param value value to set the  transRCId
     */
    public void settransRCId(String value) {
        setAttributeInternal(TRANSRCID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJcRcInfoViewVO1.
     */
    public RowSet getLOVJcRcInfoViewVO1() {
        return (RowSet) getAttributeInternal(LOVJCRCINFOVIEWVO1);
    }
}

