package mnfPlanningBoardApp.model.entities;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 10 16:37:31 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfPlnEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        PlnDocId,
        PlnDocDt,
        PlnDispId,
        PrdStat,
        TxnDocFreeze,
        PlnStrtDt,
        PlnEndDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PLNDOCID = AttributesEnum.PlnDocId.index();
    public static final int PLNDOCDT = AttributesEnum.PlnDocDt.index();
    public static final int PLNDISPID = AttributesEnum.PlnDispId.index();
    public static final int PRDSTAT = AttributesEnum.PrdStat.index();
    public static final int TXNDOCFREEZE = AttributesEnum.TxnDocFreeze.index();
    public static final int PLNSTRTDT = AttributesEnum.PlnStrtDt.index();
    public static final int PLNENDDT = AttributesEnum.PlnEndDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfPlnEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PlnDocId, using the alias name PlnDocId.
     * @return the value of PlnDocId
     */
    public String getPlnDocId() {
        return (String) getAttributeInternal(PLNDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnDocId.
     * @param value value to set the PlnDocId
     */
    public void setPlnDocId(String value) {
        setAttributeInternal(PLNDOCID, value);
    }

    /**
     * Gets the attribute value for PlnDocDt, using the alias name PlnDocDt.
     * @return the value of PlnDocDt
     */
    public Timestamp getPlnDocDt() {
        return (Timestamp) getAttributeInternal(PLNDOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnDocDt.
     * @param value value to set the PlnDocDt
     */
    public void setPlnDocDt(Timestamp value) {
        setAttributeInternal(PLNDOCDT, value);
    }

    /**
     * Gets the attribute value for PlnDispId, using the alias name PlnDispId.
     * @return the value of PlnDispId
     */
    public String getPlnDispId() {
        return (String) getAttributeInternal(PLNDISPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnDispId.
     * @param value value to set the PlnDispId
     */
    public void setPlnDispId(String value) {
        setAttributeInternal(PLNDISPID, value);
    }

    /**
     * Gets the attribute value for PrdStat, using the alias name PrdStat.
     * @return the value of PrdStat
     */
    public Integer getPrdStat() {
        return (Integer) getAttributeInternal(PRDSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrdStat.
     * @param value value to set the PrdStat
     */
    public void setPrdStat(Integer value) {
        setAttributeInternal(PRDSTAT, value);
    }

    /**
     * Gets the attribute value for TxnDocFreeze, using the alias name TxnDocFreeze.
     * @return the value of TxnDocFreeze
     */
    public String getTxnDocFreeze() {
        return (String) getAttributeInternal(TXNDOCFREEZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TxnDocFreeze.
     * @param value value to set the TxnDocFreeze
     */
    public void setTxnDocFreeze(String value) {
        setAttributeInternal(TXNDOCFREEZE, value);
    }

    /**
     * Gets the attribute value for PlnStrtDt, using the alias name PlnStrtDt.
     * @return the value of PlnStrtDt
     */
    public Timestamp getPlnStrtDt() {
        return (Timestamp) getAttributeInternal(PLNSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnStrtDt.
     * @param value value to set the PlnStrtDt
     */
    public void setPlnStrtDt(Timestamp value) {
        setAttributeInternal(PLNSTRTDT, value);
    }

    /**
     * Gets the attribute value for PlnEndDt, using the alias name PlnEndDt.
     * @return the value of PlnEndDt
     */
    public Timestamp getPlnEndDt() {
        return (Timestamp) getAttributeInternal(PLNENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnEndDt.
     * @param value value to set the PlnEndDt
     */
    public void setPlnEndDt(Timestamp value) {
        setAttributeInternal(PLNENDDT, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param plnDocId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String plnDocId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, plnDocId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfPlanningBoardApp.model.entities.MnfPlnEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

