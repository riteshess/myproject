package mnfPlanningBoardApp.model.entities;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 13 14:25:44 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfPlnBomEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        PlnDocId,
        PlnDocDt,
        OutptItmId,
        ItmUom,
        TxnDocDlvDt,
        ItmDlvQty,
        PlnItmDlvQty,
        ItmPrice,
        ItmAmtBs,
        ItmAmtSp,
        ItmCost,
        ItmMnfLeadTm,
        BomId,
        BomQty,
        PrdStat,
        TxnDocFreeze,
        ChkFlg,
        DocIdSrc,
        PdoDocId;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PLNDOCID = AttributesEnum.PlnDocId.index();
    public static final int PLNDOCDT = AttributesEnum.PlnDocDt.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int TXNDOCDLVDT = AttributesEnum.TxnDocDlvDt.index();
    public static final int ITMDLVQTY = AttributesEnum.ItmDlvQty.index();
    public static final int PLNITMDLVQTY = AttributesEnum.PlnItmDlvQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMCOST = AttributesEnum.ItmCost.index();
    public static final int ITMMNFLEADTM = AttributesEnum.ItmMnfLeadTm.index();
    public static final int BOMID = AttributesEnum.BomId.index();
    public static final int BOMQTY = AttributesEnum.BomQty.index();
    public static final int PRDSTAT = AttributesEnum.PrdStat.index();
    public static final int TXNDOCFREEZE = AttributesEnum.TxnDocFreeze.index();
    public static final int CHKFLG = AttributesEnum.ChkFlg.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int PDODOCID = AttributesEnum.PdoDocId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfPlnBomEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfPlanningBoardApp.model.entities.MnfPlnBomEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PlnDocId, using the alias name PlnDocId.
     * @return the value of PlnDocId
     */
    public String getPlnDocId() {
        return (String) getAttributeInternal(PLNDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnDocId.
     * @param value value to set the PlnDocId
     */
    public void setPlnDocId(String value) {
        setAttributeInternal(PLNDOCID, value);
    }

    /**
     * Gets the attribute value for PlnDocDt, using the alias name PlnDocDt.
     * @return the value of PlnDocDt
     */
    public Timestamp getPlnDocDt() {
        return (Timestamp) getAttributeInternal(PLNDOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnDocDt.
     * @param value value to set the PlnDocDt
     */
    public void setPlnDocDt(Timestamp value) {
        setAttributeInternal(PLNDOCDT, value);
    }

    /**
     * Gets the attribute value for OutptItmId, using the alias name OutptItmId.
     * @return the value of OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmId.
     * @param value value to set the OutptItmId
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for TxnDocDlvDt, using the alias name TxnDocDlvDt.
     * @return the value of TxnDocDlvDt
     */
    public Timestamp getTxnDocDlvDt() {
        return (Timestamp) getAttributeInternal(TXNDOCDLVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TxnDocDlvDt.
     * @param value value to set the TxnDocDlvDt
     */
    public void setTxnDocDlvDt(Timestamp value) {
        setAttributeInternal(TXNDOCDLVDT, value);
    }

    /**
     * Gets the attribute value for ItmDlvQty, using the alias name ItmDlvQty.
     * @return the value of ItmDlvQty
     */
    public Number getItmDlvQty() {
        return (Number) getAttributeInternal(ITMDLVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmDlvQty.
     * @param value value to set the ItmDlvQty
     */
    public void setItmDlvQty(Number value) {
        setAttributeInternal(ITMDLVQTY, value);
    }

    /**
     * Gets the attribute value for PlnItmDlvQty, using the alias name PlnItmDlvQty.
     * @return the value of PlnItmDlvQty
     */
    public Number getPlnItmDlvQty() {
        return (Number) getAttributeInternal(PLNITMDLVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlnItmDlvQty.
     * @param value value to set the PlnItmDlvQty
     */
    public void setPlnItmDlvQty(Number value) {
        setAttributeInternal(PLNITMDLVQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp, using the alias name ItmAmtSp.
     * @return the value of ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp.
     * @param value value to set the ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for ItmCost, using the alias name ItmCost.
     * @return the value of ItmCost
     */
    public Number getItmCost() {
        return (Number) getAttributeInternal(ITMCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmCost.
     * @param value value to set the ItmCost
     */
    public void setItmCost(Number value) {
        setAttributeInternal(ITMCOST, value);
    }

    /**
     * Gets the attribute value for ItmMnfLeadTm, using the alias name ItmMnfLeadTm.
     * @return the value of ItmMnfLeadTm
     */
    public Number getItmMnfLeadTm() {
        return (Number) getAttributeInternal(ITMMNFLEADTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmMnfLeadTm.
     * @param value value to set the ItmMnfLeadTm
     */
    public void setItmMnfLeadTm(Number value) {
        setAttributeInternal(ITMMNFLEADTM, value);
    }

    /**
     * Gets the attribute value for BomId, using the alias name BomId.
     * @return the value of BomId
     */
    public String getBomId() {
        return (String) getAttributeInternal(BOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomId.
     * @param value value to set the BomId
     */
    public void setBomId(String value) {
        setAttributeInternal(BOMID, value);
    }

    /**
     * Gets the attribute value for BomQty, using the alias name BomQty.
     * @return the value of BomQty
     */
    public Number getBomQty() {
        return (Number) getAttributeInternal(BOMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomQty.
     * @param value value to set the BomQty
     */
    public void setBomQty(Number value) {
        setAttributeInternal(BOMQTY, value);
    }

    /**
     * Gets the attribute value for PrdStat, using the alias name PrdStat.
     * @return the value of PrdStat
     */
    public Integer getPrdStat() {
        return (Integer) getAttributeInternal(PRDSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrdStat.
     * @param value value to set the PrdStat
     */
    public void setPrdStat(Integer value) {
        setAttributeInternal(PRDSTAT, value);
    }

    /**
     * Gets the attribute value for TxnDocFreeze, using the alias name TxnDocFreeze.
     * @return the value of TxnDocFreeze
     */
    public String getTxnDocFreeze() {
        return (String) getAttributeInternal(TXNDOCFREEZE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TxnDocFreeze.
     * @param value value to set the TxnDocFreeze
     */
    public void setTxnDocFreeze(String value) {
        setAttributeInternal(TXNDOCFREEZE, value);
    }

    /**
     * Gets the attribute value for ChkFlg, using the alias name ChkFlg.
     * @return the value of ChkFlg
     */
    public String getChkFlg() {
        return (String) getAttributeInternal(CHKFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChkFlg.
     * @param value value to set the ChkFlg
     */
    public void setChkFlg(String value) {
        setAttributeInternal(CHKFLG, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for PdoDocId, using the alias name PdoDocId.
     * @return the value of PdoDocId
     */
    public String getPdoDocId() {
        return (String) getAttributeInternal(PDODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PdoDocId.
     * @param value value to set the PdoDocId
     */
    public void setPdoDocId(String value) {
        setAttributeInternal(PDODOCID, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param plnDocId key constituent
     * @param outptItmId key constituent
     * @param txnDocDlvDt key constituent
     * @param bomId key constituent
     * @param docIdSrc key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String plnDocId,
                                       String outptItmId, Timestamp txnDocDlvDt, String bomId, String docIdSrc) {
        return new Key(new Object[] {
                       cldId, slocId, hoOrgId, orgId, plnDocId, outptItmId, txnDocDlvDt, bomId, docIdSrc });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

