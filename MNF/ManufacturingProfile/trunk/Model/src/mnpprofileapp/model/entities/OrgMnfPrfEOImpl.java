package mnpprofileapp.model.entities;


import java.util.StringTokenizer;

import javax.el.ELContext;

import javax.el.ValueExpression;



import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 06 11:27:13 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgMnfPrfEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        GroupBom,
        AutoConsmptn,
        AutoConsmptnBasis,
        DefIssueType,
        BookConsmptnOn,
        AttachManpwrWs,
        AllowJcWs,
        FreezePrf,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        AllowJcPrevDt,
        JcPrevDays,
        AllowJcFutDt,
        JcFutDays,
        TransDocId,
        GenWsFrmWc,
        AutoCalcConsmptn,
        ScDefTax,
        CalcOpYield,
        OrgMnfPrfDtl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int GROUPBOM = AttributesEnum.GroupBom.index();
    public static final int AUTOCONSMPTN = AttributesEnum.AutoConsmptn.index();
    public static final int AUTOCONSMPTNBASIS = AttributesEnum.AutoConsmptnBasis.index();
    public static final int DEFISSUETYPE = AttributesEnum.DefIssueType.index();
    public static final int BOOKCONSMPTNON = AttributesEnum.BookConsmptnOn.index();
    public static final int ATTACHMANPWRWS = AttributesEnum.AttachManpwrWs.index();
    public static final int ALLOWJCWS = AttributesEnum.AllowJcWs.index();
    public static final int FREEZEPRF = AttributesEnum.FreezePrf.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ALLOWJCPREVDT = AttributesEnum.AllowJcPrevDt.index();
    public static final int JCPREVDAYS = AttributesEnum.JcPrevDays.index();
    public static final int ALLOWJCFUTDT = AttributesEnum.AllowJcFutDt.index();
    public static final int JCFUTDAYS = AttributesEnum.JcFutDays.index();
    public static final int TRANSDOCID = AttributesEnum.TransDocId.index();
    public static final int GENWSFRMWC = AttributesEnum.GenWsFrmWc.index();
    public static final int AUTOCALCCONSMPTN = AttributesEnum.AutoCalcConsmptn.index();
    public static final int SCDEFTAX = AttributesEnum.ScDefTax.index();
    public static final int CALCOPYIELD = AttributesEnum.CalcOpYield.index();
    public static final int ORGMNFPRFDTL = AttributesEnum.OrgMnfPrfDtl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgMnfPrfEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnpprofileapp.model.entities.OrgMnfPrfEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for GroupBom, using the alias name GroupBom.
     * @return the value of GroupBom
     */
    public String getGroupBom() {
        return (String) getAttributeInternal(GROUPBOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GroupBom.
     * @param value value to set the GroupBom
     */
    public void setGroupBom(String value) {
        setAttributeInternal(GROUPBOM, value);
    }

    /**
     * Gets the attribute value for AutoConsmptn, using the alias name AutoConsmptn.
     * @return the value of AutoConsmptn
     */
    public String getAutoConsmptn() {
        return (String) getAttributeInternal(AUTOCONSMPTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoConsmptn.
     * @param value value to set the AutoConsmptn
     */
    public void setAutoConsmptn(String value) {
        setAttributeInternal(AUTOCONSMPTN, value);
    }

    /**
     * Gets the attribute value for AutoConsmptnBasis, using the alias name AutoConsmptnBasis.
     * @return the value of AutoConsmptnBasis
     */
    public Integer getAutoConsmptnBasis() {
        return (Integer) getAttributeInternal(AUTOCONSMPTNBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoConsmptnBasis.
     * @param value value to set the AutoConsmptnBasis
     */
    public void setAutoConsmptnBasis(Integer value) {
        setAttributeInternal(AUTOCONSMPTNBASIS, value);
    }

    /**
     * Gets the attribute value for DefIssueType, using the alias name DefIssueType.
     * @return the value of DefIssueType
     */
    public Integer getDefIssueType() {
        return (Integer) getAttributeInternal(DEFISSUETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DefIssueType.
     * @param value value to set the DefIssueType
     */
    public void setDefIssueType(Integer value) {
        setAttributeInternal(DEFISSUETYPE, value);
    }

    /**
     * Gets the attribute value for BookConsmptnOn, using the alias name BookConsmptnOn.
     * @return the value of BookConsmptnOn
     */
    public Integer getBookConsmptnOn() {
        return (Integer) getAttributeInternal(BOOKCONSMPTNON);
    }

    /**
     * Sets <code>value</code> as the attribute value for BookConsmptnOn.
     * @param value value to set the BookConsmptnOn
     */
    public void setBookConsmptnOn(Integer value) {
        setAttributeInternal(BOOKCONSMPTNON, value);
    }

    /**
     * Gets the attribute value for AttachManpwrWs, using the alias name AttachManpwrWs.
     * @return the value of AttachManpwrWs
     */
    public String getAttachManpwrWs() {
        return (String) getAttributeInternal(ATTACHMANPWRWS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachManpwrWs.
     * @param value value to set the AttachManpwrWs
     */
    public void setAttachManpwrWs(String value) {
        setAttributeInternal(ATTACHMANPWRWS, value);
    }

    /**
     * Gets the attribute value for AllowJcWs, using the alias name AllowJcWs.
     * @return the value of AllowJcWs
     */
    public String getAllowJcWs() {
        return (String) getAttributeInternal(ALLOWJCWS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllowJcWs.
     * @param value value to set the AllowJcWs
     */
    public void setAllowJcWs(String value) {
        setAttributeInternal(ALLOWJCWS, value);
    }

    /**
     * Gets the attribute value for FreezePrf, using the alias name FreezePrf.
     * @return the value of FreezePrf
     */
    public String getFreezePrf() {
        return (String) getAttributeInternal(FREEZEPRF);
    }

    /**
     * Sets <code>value</code> as the attribute value for FreezePrf.
     * @param value value to set the FreezePrf
     */
    public void setFreezePrf(String value) {
        setAttributeInternal(FREEZEPRF, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }


    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for AllowJcPrevDt, using the alias name AllowJcPrevDt.
     * @return the value of AllowJcPrevDt
     */
    public String getAllowJcPrevDt() {
        return (String) getAttributeInternal(ALLOWJCPREVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllowJcPrevDt.
     * @param value value to set the AllowJcPrevDt
     */
    public void setAllowJcPrevDt(String value) {
        setAttributeInternal(ALLOWJCPREVDT, value);
    }

    /**
     * Gets the attribute value for JcPrevDays, using the alias name JcPrevDays.
     * @return the value of JcPrevDays
     */
    public Integer getJcPrevDays() {
        return (Integer) getAttributeInternal(JCPREVDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for JcPrevDays.
     * @param value value to set the JcPrevDays
     */
    public void setJcPrevDays(Integer value) {
        setAttributeInternal(JCPREVDAYS, value);
    }

    /**
     * Gets the attribute value for AllowJcFutDt, using the alias name AllowJcFutDt.
     * @return the value of AllowJcFutDt
     */
    public String getAllowJcFutDt() {
        return (String) getAttributeInternal(ALLOWJCFUTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AllowJcFutDt.
     * @param value value to set the AllowJcFutDt
     */
    public void setAllowJcFutDt(String value) {
        setAttributeInternal(ALLOWJCFUTDT, value);
    }

    /**
     * Gets the attribute value for JcFutDays, using the alias name JcFutDays.
     * @return the value of JcFutDays
     */
    public Integer getJcFutDays() {
        return (Integer) getAttributeInternal(JCFUTDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for JcFutDays.
     * @param value value to set the JcFutDays
     */
    public void setJcFutDays(Integer value) {
        setAttributeInternal(JCFUTDAYS, value);
    }

    /**
     * Gets the attribute value for TransDocId, using the alias name TransDocId.
     * @return the value of TransDocId
     */
    public String getTransDocId() {
        return (String) getAttributeInternal(TRANSDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransDocId.
     * @param value value to set the TransDocId
     */
    public void setTransDocId(String value) {
        setAttributeInternal(TRANSDOCID, value);
    }

    /**
     * Gets the attribute value for GenWsFrmWc, using the alias name GenWsFrmWc.
     * @return the value of GenWsFrmWc
     */
    public String getGenWsFrmWc() {
        return (String) getAttributeInternal(GENWSFRMWC);
    }

    /**
     * Sets <code>value</code> as the attribute value for GenWsFrmWc.
     * @param value value to set the GenWsFrmWc
     */
    public void setGenWsFrmWc(String value) {
        setAttributeInternal(GENWSFRMWC, value);
    }

    /**
     * Gets the attribute value for AutoCalcConsmptn, using the alias name AutoCalcConsmptn.
     * @return the value of AutoCalcConsmptn
     */
    public String getAutoCalcConsmptn() {
        return (String) getAttributeInternal(AUTOCALCCONSMPTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for AutoCalcConsmptn.
     * @param value value to set the AutoCalcConsmptn
     */
    public void setAutoCalcConsmptn(String value) {
        setAttributeInternal(AUTOCALCCONSMPTN, value);
    }

    /**
     * Gets the attribute value for ScDefTax, using the alias name ScDefTax.
     * @return the value of ScDefTax
     */
    public String getScDefTax() {
        return (String) getAttributeInternal(SCDEFTAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScDefTax.
     * @param value value to set the ScDefTax
     */
    public void setScDefTax(String value) {
        setAttributeInternal(SCDEFTAX, value);
    }

    /**
     * Gets the attribute value for CalcOpYield, using the alias name CalcOpYield.
     * @return the value of CalcOpYield
     */
    public String getCalcOpYield() {
        return (String) getAttributeInternal(CALCOPYIELD);
    }

    /**
     * Sets <code>value</code> as the attribute value for CalcOpYield.
     * @param value value to set the CalcOpYield
     */
    public void setCalcOpYield(String value) {
        setAttributeInternal(CALCOPYIELD, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgMnfPrfDtl() {
        return (RowIterator) getAttributeInternal(ORGMNFPRFDTL);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreate(getCurrentUser());
        setAllowJcFutDt("N");
        setAllowJcPrevDt("N");
        setGroupBom("N");
        setAutoConsmptn("Y");
        setAttachManpwrWs("N");
        setAllowJcWs("Y");
        setGenWsFrmWc("N");
        setJcFutDays(null);
        setJcPrevDays(null);
        setAutoCalcConsmptn("N");
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        //System.out.println("do_dml " + operation);
        if (operation == DML_UPDATE) {
            setUsrIdMod(getCurrentUser());
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(String data) {
        //  FacesContext fc = FacesContext.getCurrentInstance();
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }

    public Integer getCurrentUser() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
    }

    @Override
    protected void prepareForDML(int operation, TransactionEvent transactionEvent) {

        super.prepareForDML(operation, transactionEvent);

        if (operation == EntityImpl.DML_DELETE) {
            removeAllPrfDetails();
            return;
        } else {
            removeAllPrfDetails();
            //Insert Document ID in child EO
            String newDlimitedDocId = (getTransDocId() == null ? "" : getTransDocId()).toString();
            System.out.println(newDlimitedDocId);
            StringTokenizer newValueTokens = new StringTokenizer(newDlimitedDocId, ",");
            while (newValueTokens.hasMoreTokens()) {
                String currentToken = (newValueTokens.nextToken().toString());
                Integer tmp = Integer.parseInt(currentToken);
                createPrfDetails(tmp);
            }

        }
    }

    public void createPrfDetails(Integer documntID) {
        System.out.println(documntID+" doc ID");
        Row docIdRow = (EntityImpl) getOrgMnfPrfDtl().createRow();
        docIdRow.setAttribute("UsrIdCreate", getUsrIdCreate());
        docIdRow.setAttribute("UsrIdCreateDt", getUsrIdCreateDt());
        docIdRow.setAttribute("UsrIdMod", getUsrIdMod());
        docIdRow.setAttribute("HoOrgId", getHoOrgId());
        docIdRow.setAttribute("DocId", documntID);
        docIdRow.setAttribute("OrgId", getOrgId());
        docIdRow.setAttribute("SlocId", getSlocId());
        docIdRow.setAttribute("CldId", getCldId());

        getOrgMnfPrfDtl().insertRow(docIdRow);

    }

    public void removeAllPrfDetails() {
        //Assuming not many child rows. Can have better logic if child rows are large
        RowIterator iter = getOrgMnfPrfDtl();
        while (iter.hasNext()) {
            Row row = iter.next();
            row.remove();
        }
    }


}

