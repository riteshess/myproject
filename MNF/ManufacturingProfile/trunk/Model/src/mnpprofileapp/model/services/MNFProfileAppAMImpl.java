package mnpprofileapp.model.services;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mnpprofileapp.model.services.common.MNFProfileAppAM;

import mnpprofileapp.model.views.OrgMnfPrfDtlVOImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 04 16:36:53 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MNFProfileAppAMImpl extends ApplicationModuleImpl implements MNFProfileAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    public MNFProfileAppAMImpl() {
    }


    /*Method to resolve page flow scope parameter.*/

    public Object resolvEl(String data) {
        //  FacesContext fc = FacesContext.getCurrentInstance();
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }


    /*getting page flow scope parameter methods.*/

    public Integer getSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
    }

    public StringBuffer getCldId() {
        return new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
    }

    public StringBuffer getOrgId() {
        return new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
    }

    public StringBuffer getHoOrgId() {
        return new StringBuffer(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
    }

    public void setValuesForUnselected() {
    }

    /**
     *Method for setting global parameters
     * called as an initial activity in the TaskFlow.
     */

    public void setGloblParameter() {
        ViewObjectImpl voimpl = this.getOrgMnfPrf1();
        //System.out.println("row in cust vo before = " + voimpl.getRowCount());
        //System.out.println(this.getCldId() +" = Cloud id  "+ this.getHoOrgId()+" = Ho org id  "+ this.getSlocId()+" = sloc id  "+ getOrgId()+" =  Org id");
        voimpl.setNamedWhereClauseParam("BindCldId", this.getCldId());
        voimpl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
        voimpl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
        voimpl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
        voimpl.executeQuery();

    }


    @Override
    public void beforeCommit(TransactionEvent transactionEvent) {

        super.beforeCommit(transactionEvent);
    }


    /**
     * Container's getter for OrgMnfPrf1.
     * @return OrgMnfPrf1
     */
    public ViewObjectImpl getOrgMnfPrf1() {
        return (ViewObjectImpl) findViewObject("OrgMnfPrf1");
    }

    /**
     * Container's getter for OrgMnfPrfDtl1.
     * @return OrgMnfPrfDtl1
     */
    public OrgMnfPrfDtlVOImpl getOrgMnfPrfDtl1() {
        return (OrgMnfPrfDtlVOImpl) findViewObject("OrgMnfPrfDtl1");
    }

    /**
     * Container's getter for OrgMnfPrfToOrgMnfPrfDtlVL1.
     * @return OrgMnfPrfToOrgMnfPrfDtlVL1
     */
    public ViewLinkImpl getOrgMnfPrfToOrgMnfPrfDtlVL1() {
        return (ViewLinkImpl) findViewLink("OrgMnfPrfToOrgMnfPrfDtlVL1");
    }

    /**
     * Container's getter for LOVJobCardBasis1.
     * @return LOVJobCardBasis1
     */
    public ViewObjectImpl getLOVJobCardBasis1() {
        return (ViewObjectImpl) findViewObject("LOVJobCardBasis1");
    }
}

