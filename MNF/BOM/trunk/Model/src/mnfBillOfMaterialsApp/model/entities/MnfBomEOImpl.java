package mnfBillOfMaterialsApp.model.entities;

import adf.utils.bean.StaticValue;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import mnfBillOfMaterialsApp.model.services.MNFBillOfMaterialsAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.AlreadyLockedException;
import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 10 14:05:40 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        DocId,
        BomId,
        BomDesc,
        BomType,
        OutptItmId,
        OutptItmQty,
        BomAtt,
        BomPriceType,
        ItmPriceType,
        BomStat,
        BomRevNo,
        BomRevDt,
        GrpBom,
        BomActv,
        VldFrmDt,
        VldEndDt,
        BomUsage,
        RtId,
        BomInactvReason,
        BomInacttvDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ItmTypeFlg,
        BomLegCd,
        BomMode,
        BomRmrk,
        RefBomId,
        BomDfltFlg,
        OutptItmLeadTm,
        TotOutptItmAmt,
        MnfBomAttch,
        MnfBomRel1,
        OrgMnfBom,
        MnfBomOpEO,
        MnfBomOpItm,
        MnfBomParam,
        MnfBomQcParam;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int BOMID = AttributesEnum.BomId.index();
    public static final int BOMDESC = AttributesEnum.BomDesc.index();
    public static final int BOMTYPE = AttributesEnum.BomType.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int BOMATT = AttributesEnum.BomAtt.index();
    public static final int BOMPRICETYPE = AttributesEnum.BomPriceType.index();
    public static final int ITMPRICETYPE = AttributesEnum.ItmPriceType.index();
    public static final int BOMSTAT = AttributesEnum.BomStat.index();
    public static final int BOMREVNO = AttributesEnum.BomRevNo.index();
    public static final int BOMREVDT = AttributesEnum.BomRevDt.index();
    public static final int GRPBOM = AttributesEnum.GrpBom.index();
    public static final int BOMACTV = AttributesEnum.BomActv.index();
    public static final int VLDFRMDT = AttributesEnum.VldFrmDt.index();
    public static final int VLDENDDT = AttributesEnum.VldEndDt.index();
    public static final int BOMUSAGE = AttributesEnum.BomUsage.index();
    public static final int RTID = AttributesEnum.RtId.index();
    public static final int BOMINACTVREASON = AttributesEnum.BomInactvReason.index();
    public static final int BOMINACTTVDT = AttributesEnum.BomInacttvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMTYPEFLG = AttributesEnum.ItmTypeFlg.index();
    public static final int BOMLEGCD = AttributesEnum.BomLegCd.index();
    public static final int BOMMODE = AttributesEnum.BomMode.index();
    public static final int BOMRMRK = AttributesEnum.BomRmrk.index();
    public static final int REFBOMID = AttributesEnum.RefBomId.index();
    public static final int BOMDFLTFLG = AttributesEnum.BomDfltFlg.index();
    public static final int OUTPTITMLEADTM = AttributesEnum.OutptItmLeadTm.index();
    public static final int TOTOUTPTITMAMT = AttributesEnum.TotOutptItmAmt.index();
    public static final int MNFBOMATTCH = AttributesEnum.MnfBomAttch.index();
    public static final int MNFBOMREL1 = AttributesEnum.MnfBomRel1.index();
    public static final int ORGMNFBOM = AttributesEnum.OrgMnfBom.index();
    public static final int MNFBOMOPEO = AttributesEnum.MnfBomOpEO.index();
    public static final int MNFBOMOPITM = AttributesEnum.MnfBomOpItm.index();
    public static final int MNFBOMPARAM = AttributesEnum.MnfBomParam.index();
    public static final int MNFBOMQCPARAM = AttributesEnum.MnfBomQcParam.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfBillOfMaterialsApp.model.entities.MnfBomEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for BomId, using the alias name BomId.
     * @return the value of BomId
     */
    public String getBomId() {
        return (String) getAttributeInternal(BOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomId.
     * @param value value to set the BomId
     */
    public void setBomId(String value) {
        setAttributeInternal(BOMID, value);
    }

    /**
     * Gets the attribute value for BomDesc, using the alias name BomDesc.
     * @return the value of BomDesc
     */
    public String getBomDesc() {
        return (String) getAttributeInternal(BOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomDesc.
     * @param value value to set the BomDesc
     */
    public void setBomDesc(String value) {
        setAttributeInternal(BOMDESC, value);
    }

    /**
     * Gets the attribute value for BomType, using the alias name BomType.
     * @return the value of BomType
     */
    public Integer getBomType() {
        return (Integer) getAttributeInternal(BOMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomType.
     * @param value value to set the BomType
     */
    public void setBomType(Integer value) {
        setAttributeInternal(BOMTYPE, value);
    }

    /**
     * Gets the attribute value for OutptItmId, using the alias name OutptItmId.
     * @return the value of OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmId.
     * @param value value to set the OutptItmId
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OutptItmQty, using the alias name OutptItmQty.
     * @return the value of OutptItmQty
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmQty.
     * @param value value to set the OutptItmQty
     */
    public void setOutptItmQty(Number value) {
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for BomAtt, using the alias name BomAtt.
     * @return the value of BomAtt
     */
    public Integer getBomAtt() {
        return (Integer) getAttributeInternal(BOMATT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomAtt.
     * @param value value to set the BomAtt
     */
    public void setBomAtt(Integer value) {
        setAttributeInternal(BOMATT, value);
    }

    /**
     * Gets the attribute value for BomPriceType, using the alias name BomPriceType.
     * @return the value of BomPriceType
     */
    public Integer getBomPriceType() {
        return (Integer) getAttributeInternal(BOMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomPriceType.
     * @param value value to set the BomPriceType
     */
    public void setBomPriceType(Integer value) {
        setAttributeInternal(BOMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for ItmPriceType, using the alias name ItmPriceType.
     * @return the value of ItmPriceType
     */
    public Integer getItmPriceType() {
        return (Integer) getAttributeInternal(ITMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceType.
     * @param value value to set the ItmPriceType
     */
    public void setItmPriceType(Integer value) {
        setAttributeInternal(ITMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for BomStat, using the alias name BomStat.
     * @return the value of BomStat
     */
    public Integer getBomStat() {
        return (Integer) getAttributeInternal(BOMSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomStat.
     * @param value value to set the BomStat
     */
    public void setBomStat(Integer value) {
        setAttributeInternal(BOMSTAT, value);
    }

    /**
     * Gets the attribute value for BomRevNo, using the alias name BomRevNo.
     * @return the value of BomRevNo
     */
    public Number getBomRevNo() {
        return (Number) getAttributeInternal(BOMREVNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomRevNo.
     * @param value value to set the BomRevNo
     */
    public void setBomRevNo(Number value) {
        setAttributeInternal(BOMREVNO, value);
    }

    /**
     * Gets the attribute value for BomRevDt, using the alias name BomRevDt.
     * @return the value of BomRevDt
     */
    public Timestamp getBomRevDt() {
        return (Timestamp) getAttributeInternal(BOMREVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomRevDt.
     * @param value value to set the BomRevDt
     */
    public void setBomRevDt(Timestamp value) {
        setAttributeInternal(BOMREVDT, value);
    }

    /**
     * Gets the attribute value for GrpBom, using the alias name GrpBom.
     * @return the value of GrpBom
     */
    public String getGrpBom() {
        return (String) getAttributeInternal(GRPBOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GrpBom.
     * @param value value to set the GrpBom
     */
    public void setGrpBom(String value) {
        setAttributeInternal(GRPBOM, value);
    }

    /**
     * Gets the attribute value for BomActv, using the alias name BomActv.
     * @return the value of BomActv
     */
    public String getBomActv() {
        return (String) getAttributeInternal(BOMACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomActv.
     * @param value value to set the BomActv
     */
    public void setBomActv(String value) {
        setAttributeInternal(BOMACTV, value);
    }

    /**
     * Gets the attribute value for VldFrmDt, using the alias name VldFrmDt.
     * @return the value of VldFrmDt
     */
    public Timestamp getVldFrmDt() {
        return (Timestamp) getAttributeInternal(VLDFRMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VldFrmDt.
     * @param value value to set the VldFrmDt
     */
    public void setVldFrmDt(Timestamp value) {
        setAttributeInternal(VLDFRMDT, value);
    }

    /**
     * Gets the attribute value for VldEndDt, using the alias name VldEndDt.
     * @return the value of VldEndDt
     */
    public Timestamp getVldEndDt() {
        return (Timestamp) getAttributeInternal(VLDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VldEndDt.
     * @param value value to set the VldEndDt
     */
    public void setVldEndDt(Timestamp value) {
        setAttributeInternal(VLDENDDT, value);
    }

    /**
     * Gets the attribute value for BomUsage, using the alias name BomUsage.
     * @return the value of BomUsage
     */
    public Integer getBomUsage() {
        return (Integer) getAttributeInternal(BOMUSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomUsage.
     * @param value value to set the BomUsage
     */
    public void setBomUsage(Integer value) {
        setAttributeInternal(BOMUSAGE, value);
    }

    /**
     * Gets the attribute value for RtId, using the alias name RtId.
     * @return the value of RtId
     */
    public String getRtId() {
        return (String) getAttributeInternal(RTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RtId.
     * @param value value to set the RtId
     */
    public void setRtId(String value) {
        setAttributeInternal(RTID, value);
    }

    /**
     * Gets the attribute value for BomInactvReason, using the alias name BomInactvReason.
     * @return the value of BomInactvReason
     */
    public String getBomInactvReason() {
        return (String) getAttributeInternal(BOMINACTVREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomInactvReason.
     * @param value value to set the BomInactvReason
     */
    public void setBomInactvReason(String value) {
        setAttributeInternal(BOMINACTVREASON, value);
    }

    /**
     * Gets the attribute value for BomInacttvDt, using the alias name BomInacttvDt.
     * @return the value of BomInacttvDt
     */
    public Timestamp getBomInacttvDt() {
        return (Timestamp) getAttributeInternal(BOMINACTTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomInacttvDt.
     * @param value value to set the BomInacttvDt
     */
    public void setBomInacttvDt(Timestamp value) {
        setAttributeInternal(BOMINACTTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for ItmTypeFlg, using the alias name ItmTypeFlg.
     * @return the value of ItmTypeFlg
     */
    public Integer getItmTypeFlg() {
        return (Integer) getAttributeInternal(ITMTYPEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmTypeFlg.
     * @param value value to set the ItmTypeFlg
     */
    public void setItmTypeFlg(Integer value) {
        setAttributeInternal(ITMTYPEFLG, value);
    }

    /**
     * Gets the attribute value for BomLegCd, using the alias name BomLegCd.
     * @return the value of BomLegCd
     */
    public String getBomLegCd() {
        return (String) getAttributeInternal(BOMLEGCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomLegCd.
     * @param value value to set the BomLegCd
     */
    public void setBomLegCd(String value) {
        setAttributeInternal(BOMLEGCD, value);
    }

    /**
     * Gets the attribute value for BomMode, using the alias name BomMode.
     * @return the value of BomMode
     */
    public Integer getBomMode() {
        return (Integer) getAttributeInternal(BOMMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomMode.
     * @param value value to set the BomMode
     */
    public void setBomMode(Integer value) {
        setAttributeInternal(BOMMODE, value);
    }

    /**
     * Gets the attribute value for BomRmrk, using the alias name BomRmrk.
     * @return the value of BomRmrk
     */
    public String getBomRmrk() {
        return (String) getAttributeInternal(BOMRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomRmrk.
     * @param value value to set the BomRmrk
     */
    public void setBomRmrk(String value) {
        setAttributeInternal(BOMRMRK, value);
    }

    /**
     * Gets the attribute value for RefBomId, using the alias name RefBomId.
     * @return the value of RefBomId
     */
    public String getRefBomId() {
        return (String) getAttributeInternal(REFBOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefBomId.
     * @param value value to set the RefBomId
     */
    public void setRefBomId(String value) {
        setAttributeInternal(REFBOMID, value);
    }

    /**
     * Gets the attribute value for BomDfltFlg, using the alias name BomDfltFlg.
     * @return the value of BomDfltFlg
     */
    public String getBomDfltFlg() {
        return (String) getAttributeInternal(BOMDFLTFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for BomDfltFlg.
     * @param value value to set the BomDfltFlg
     */
    public void setBomDfltFlg(String value) {
        setAttributeInternal(BOMDFLTFLG, value);
    }

    /**
     * Gets the attribute value for OutptItmLeadTm, using the alias name OutptItmLeadTm.
     * @return the value of OutptItmLeadTm
     */
    public Number getOutptItmLeadTm() {
        return (Number) getAttributeInternal(OUTPTITMLEADTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmLeadTm.
     * @param value value to set the OutptItmLeadTm
     */
    public void setOutptItmLeadTm(Number value) {
        setAttributeInternal(OUTPTITMLEADTM, value);
    }

    /**
     * Gets the attribute value for TotOutptItmAmt, using the alias name TotOutptItmAmt.
     * @return the value of TotOutptItmAmt
     */
    public Number getTotOutptItmAmt() {
        return (Number) getAttributeInternal(TOTOUTPTITMAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotOutptItmAmt.
     * @param value value to set the TotOutptItmAmt
     */
    public void setTotOutptItmAmt(Number value) {
        setAttributeInternal(TOTOUTPTITMAMT, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomAttch() {
        return (RowIterator) getAttributeInternal(MNFBOMATTCH);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomRel1() {
        return (RowIterator) getAttributeInternal(MNFBOMREL1);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgMnfBom() {
        return (RowIterator) getAttributeInternal(ORGMNFBOM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomOpEO() {
        return (RowIterator) getAttributeInternal(MNFBOMOPEO);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomOpItm() {
        return (RowIterator) getAttributeInternal(MNFBOMOPITM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomParam() {
        return (RowIterator) getAttributeInternal(MNFBOMPARAM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomQcParam() {
        return (RowIterator) getAttributeInternal(MNFBOMQCPARAM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        setHoOrgId(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());

        //set defaul values
        setBomMode(47);
        setBomActv("Y");
        setBomStat(41);
        setBomRevNo(new Number(0));
        setBomType(48);
        setBomAtt(55);
        setBomUsage(52);
        setOutptItmQty(new Number(1));
        setGrpBom(getBomGroupFlg());
        setBomPriceType(60);
        setItmPriceType(68);
        setBomDfltFlg("N");
        //setVldEndDt(new Timestamp(System.currentTimeMillis()));
        setVldFrmDt(StaticValue.getTruncatedCurrDt());
        setBomRevDt(StaticValue.getTruncatedCurrDt());
        setUsrIdCreateDt(StaticValue.getTruncatedCurrDt());
        setAttribute("GrpBom", getBomGroupFlg());

        //Global document Id for BOM is 25508
        setDocId(getTxnId(getCldId(), getSlocId(), getHoOrgId(), getUsrIdCreate(), 25508).toString());

        //set the Task Flow parameter
        setTFparam();
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        /*   try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        } catch (AlreadyLockedException e1) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            e1.printStackTrace();
        } */
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete l
     * ogic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
       
        
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            setModifyHistParam();
        }
        

    }

    @Override
    public void beforeCommit(TransactionEvent transactionEvent) {
        /* if (getBomId() != null) {
            //do nothing
           // System.out.println("do nothing" + getRtId());
        } else {
            System.out.println("get BOMId");
            setBomId(getBOMId());
        } */
        super.beforeCommit(transactionEvent);
    }


    /**
     * @param userid user id
     * @param OrgId organisation id
     * @param slocid server location id
     * @param docId document id ()
     * @return next Doc id
     */
    public String getTxnId(String cldId, Integer slocid, String OrgId, Integer userid, Integer docId) {


        return (String) callStoredFunction(STRING, "app.get_txn_id(?,?,?,?,?,?)", new Object[] {
                                           cldId, slocid, OrgId, userid, docId, 0
    });
    }

    /**
     * @param userid user id
     * @param OrgId organisation id
     * @param slocid server location id
     * @param docId document id ()
     * @return next BOM id
     */
    public String getBOMId() {


        return (String) callStoredFunction(STRING, "mnf.fn_mnf_get_prf_id(?,?,?,?,?,?,?,?)", new Object[] {
                                           getSlocId(), getCldId(), getHoOrgId(), getHoOrgId(), 25508, null, "MNF$BOM",
                                           0
    });
    }

    /**
     * Method to get Group Flag value from Org Profile
     * **/
    private String getBomGroupFlg() {
        try {
            return (callStoredFunction(STRING, "mnf.fn_mnf_chk_org_prf(?,?,?,?)", new Object[] {
                                       getCldId(), getSlocId(), getHoOrgId(), "GROUP_BOM"
        })).toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "N";
        }
    }
    private static int STRING = Types.VARCHAR;

    /** helper method for executing DB function
     * @param sqlReturnType return type of database function
     * @param stmt statement of executing function in database query
     * @param bindVars input and out parameter of database function.
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            System.out.println("st.getObject(1) " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(11, end));

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

    /**
     *Method to set the task flow parameter after create
     * **/
    public void setTFparam() {

        //set the value in task from parameter
        //the value is used whenever the task flow is revisited after calling other TF
        //Task Value will be used to set ensure current row for header

        ADFContext.getCurrent().getPageFlowScope().put("MNF_BOM_DOC_ID", getDocId());
    }

    /**
     * Method to set the row modification history
     * **/

    public void setModifyHistParam() {
        //System.out.println("setModifyHistParam");

        setUsrIdModDt(StaticValue.getTruncatedCurrDt());

        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }

    }

    public Object resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }
}

