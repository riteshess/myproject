package mnfBillOfMaterialsApp.model.entities;

import adf.utils.bean.StaticValue;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AlreadyLockedException;
import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 10 14:05:52 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomOpItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        DocId,
        ItmBasis,
        OpId,
        OpSrNo,
        ItmType,
        ConsmptnFlg,
        ItmId,
        InptBomId,
        ItmUom,
        IssuType,
        ItmQty,
        ItmPrice,
        ItmTotAmt,
        ItmScrapPer,
        ItmRmrk,
        ItmPackType,
        ItmPackQty,
        ItmPriceType,
        ItmRtrnFlg,
        ItmRtrnQty,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        RtId,
        ItmRtrnType,
        PrncplInpt,
        OpYieldPer,
        MnfBomOp,
        MnfBom;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int CONSMPTNFLG = AttributesEnum.ConsmptnFlg.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int INPTBOMID = AttributesEnum.InptBomId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ISSUTYPE = AttributesEnum.IssuType.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMTOTAMT = AttributesEnum.ItmTotAmt.index();
    public static final int ITMSCRAPPER = AttributesEnum.ItmScrapPer.index();
    public static final int ITMRMRK = AttributesEnum.ItmRmrk.index();
    public static final int ITMPACKTYPE = AttributesEnum.ItmPackType.index();
    public static final int ITMPACKQTY = AttributesEnum.ItmPackQty.index();
    public static final int ITMPRICETYPE = AttributesEnum.ItmPriceType.index();
    public static final int ITMRTRNFLG = AttributesEnum.ItmRtrnFlg.index();
    public static final int ITMRTRNQTY = AttributesEnum.ItmRtrnQty.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int RTID = AttributesEnum.RtId.index();
    public static final int ITMRTRNTYPE = AttributesEnum.ItmRtrnType.index();
    public static final int PRNCPLINPT = AttributesEnum.PrncplInpt.index();
    public static final int OPYIELDPER = AttributesEnum.OpYieldPer.index();
    public static final int MNFBOMOP = AttributesEnum.MnfBomOp.index();
    public static final int MNFBOM = AttributesEnum.MnfBom.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomOpItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfBillOfMaterialsApp.model.entities.MnfBomOpItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmBasis, using the alias name ItmBasis.
     * @return the value of ItmBasis
     */
    public Integer getItmBasis() {
        return (Integer) getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmBasis.
     * @param value value to set the ItmBasis
     */
    public void setItmBasis(Integer value) {
        setAttributeInternal(ITMBASIS, value);
    }

    /**
     * Gets the attribute value for OpId, using the alias name OpId.
     * @return the value of OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpId.
     * @param value value to set the OpId
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OpSrNo, using the alias name OpSrNo.
     * @return the value of OpSrNo
     */
    public Number getOpSrNo() {
        return (Number) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpSrNo.
     * @param value value to set the OpSrNo
     */
    public void setOpSrNo(Number value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ItmType, using the alias name ItmType.
     * @return the value of ItmType
     */
    public Integer getItmType() {
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmType.
     * @param value value to set the ItmType
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
    }

    /**
     * Gets the attribute value for ConsmptnFlg, using the alias name ConsmptnFlg.
     * @return the value of ConsmptnFlg
     */
    public String getConsmptnFlg() {
        return (String) getAttributeInternal(CONSMPTNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConsmptnFlg.
     * @param value value to set the ConsmptnFlg
     */
    public void setConsmptnFlg(String value) {
        setAttributeInternal(CONSMPTNFLG, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for InptBomId, using the alias name InptBomId.
     * @return the value of InptBomId
     */
    public String getInptBomId() {
        return (String) getAttributeInternal(INPTBOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InptBomId.
     * @param value value to set the InptBomId
     */
    public void setInptBomId(String value) {
        setAttributeInternal(INPTBOMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for IssuType, using the alias name IssuType.
     * @return the value of IssuType
     */
    public Integer getIssuType() {
        return (Integer) getAttributeInternal(ISSUTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuType.
     * @param value value to set the IssuType
     */
    public void setIssuType(Integer value) {
        setAttributeInternal(ISSUTYPE, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ItmTotAmt, using the alias name ItmTotAmt.
     * @return the value of ItmTotAmt
     */
    public Number getItmTotAmt() {
        return (Number) getAttributeInternal(ITMTOTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmTotAmt.
     * @param value value to set the ItmTotAmt
     */
    public void setItmTotAmt(Number value) {
        setAttributeInternal(ITMTOTAMT, value);
    }

    /**
     * Gets the attribute value for ItmScrapPer, using the alias name ItmScrapPer.
     * @return the value of ItmScrapPer
     */
    public Number getItmScrapPer() {
        return (Number) getAttributeInternal(ITMSCRAPPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmScrapPer.
     * @param value value to set the ItmScrapPer
     */
    public void setItmScrapPer(Number value) {
        setAttributeInternal(ITMSCRAPPER, value);
    }

    /**
     * Gets the attribute value for ItmRmrk, using the alias name ItmRmrk.
     * @return the value of ItmRmrk
     */
    public String getItmRmrk() {
        return (String) getAttributeInternal(ITMRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRmrk.
     * @param value value to set the ItmRmrk
     */
    public void setItmRmrk(String value) {
        setAttributeInternal(ITMRMRK, value);
    }

    /**
     * Gets the attribute value for ItmPackType, using the alias name ItmPackType.
     * @return the value of ItmPackType
     */
    public Number getItmPackType() {
        return (Number) getAttributeInternal(ITMPACKTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPackType.
     * @param value value to set the ItmPackType
     */
    public void setItmPackType(Number value) {
        setAttributeInternal(ITMPACKTYPE, value);
    }

    /**
     * Gets the attribute value for ItmPackQty, using the alias name ItmPackQty.
     * @return the value of ItmPackQty
     */
    public Number getItmPackQty() {
        return (Number) getAttributeInternal(ITMPACKQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPackQty.
     * @param value value to set the ItmPackQty
     */
    public void setItmPackQty(Number value) {
        setAttributeInternal(ITMPACKQTY, value);
    }

    /**
     * Gets the attribute value for ItmPriceType, using the alias name ItmPriceType.
     * @return the value of ItmPriceType
     */
    public Integer getItmPriceType() {
        return (Integer) getAttributeInternal(ITMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceType.
     * @param value value to set the ItmPriceType
     */
    public void setItmPriceType(Integer value) {
        setAttributeInternal(ITMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for ItmRtrnFlg, using the alias name ItmRtrnFlg.
     * @return the value of ItmRtrnFlg
     */
    public String getItmRtrnFlg() {
        return (String) getAttributeInternal(ITMRTRNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnFlg.
     * @param value value to set the ItmRtrnFlg
     */
    public void setItmRtrnFlg(String value) {
        setAttributeInternal(ITMRTRNFLG, value);
    }

    /**
     * Gets the attribute value for ItmRtrnQty, using the alias name ItmRtrnQty.
     * @return the value of ItmRtrnQty
     */
    public Number getItmRtrnQty() {
        return (Number) getAttributeInternal(ITMRTRNQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnQty.
     * @param value value to set the ItmRtrnQty
     */
    public void setItmRtrnQty(Number value) {
        setAttributeInternal(ITMRTRNQTY, value);
    }


    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for RtId, using the alias name RtId.
     * @return the value of RtId
     */
    public String getRtId() {
        return (String) getAttributeInternal(RTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RtId.
     * @param value value to set the RtId
     */
    public void setRtId(String value) {
        setAttributeInternal(RTID, value);
    }

    /**
     * Gets the attribute value for ItmRtrnType, using the alias name ItmRtrnType.
     * @return the value of ItmRtrnType
     */
    public Integer getItmRtrnType() {
        return (Integer) getAttributeInternal(ITMRTRNTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnType.
     * @param value value to set the ItmRtrnType
     */
    public void setItmRtrnType(Integer value) {
        setAttributeInternal(ITMRTRNTYPE, value);
    }

    /**
     * Gets the attribute value for PrncplInpt, using the alias name PrncplInpt.
     * @return the value of PrncplInpt
     */
    public String getPrncplInpt() {
        return (String) getAttributeInternal(PRNCPLINPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrncplInpt.
     * @param value value to set the PrncplInpt
     */
    public void setPrncplInpt(String value) {
        setAttributeInternal(PRNCPLINPT, value);
    }

    /**
     * Gets the attribute value for OpYieldPer, using the alias name OpYieldPer.
     * @return the value of OpYieldPer
     */
    public Number getOpYieldPer() {
        return (Number) getAttributeInternal(OPYIELDPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpYieldPer.
     * @param value value to set the OpYieldPer
     */
    public void setOpYieldPer(Number value) {
        setAttributeInternal(OPYIELDPER, value);
    }

    /**
     * @return the associated entity MnfBomOpEOImpl.
     */
    public MnfBomOpEOImpl getMnfBomOp() {
        return (MnfBomOpEOImpl) getAttributeInternal(MNFBOMOP);
    }

    /**
     * Sets <code>value</code> as the associated entity MnfBomOpEOImpl.
     */
    public void setMnfBomOp(MnfBomOpEOImpl value) {
        setAttributeInternal(MNFBOMOP, value);
    }


    /**
     * @return the associated entity MnfBomEOImpl.
     */
    public MnfBomEOImpl getMnfBom() {
        return (MnfBomEOImpl) getAttributeInternal(MNFBOM);
    }

    /**
     * Sets <code>value</code> as the associated entity MnfBomEOImpl.
     */
    public void setMnfBom(MnfBomEOImpl value) {
        setAttributeInternal(MNFBOM, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param opId key constituent
     * @param opSrNo key constituent
     * @param itmType key constituent
     * @param itmId key constituent
     * @param rtId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId, String opId,
                                       Number opSrNo, Integer itmType, String itmId, String rtId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId, opId, opSrNo, itmType, itmId, rtId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        //set history columns
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(StaticValue.getTruncatedCurrDt());

        //set default values
        setInptBomId("0");
        setItmTotAmt(new Number(0));
        setItmBasis(55);
        setItmPrice(new Number(0));
        setItmQty(new Number(1));
        setItmRtrnQty(new Number(0));
        setItmRtrnFlg("N");
        setItmScrapPer(new Number(0));
        setItmType(62);
        setItmRtrnType(89);
        setIssuType(getDefaultIssueType());
         super.create(attributeList);
    }

    /**
     * Method to get Group Flag value from Org Profile
     * **/
    private Integer getDefaultIssueType() {
        try {
            return Integer.parseInt((callStoredFunction(Types.VARCHAR, "mnf.fn_mnf_chk_org_prf(?,?,?,?)", new Object[] {
                                                        getCldId(), getSlocId(), getHoOrgId(), "DEF_ISSUE_TYPE"
        })).toString());
        } catch (Exception e) {
            e.printStackTrace();
            return 25;
        }
    }
    private static int INTEGER = Types.INTEGER;

    /** helper method for executing DB function
     * @param sqlReturnType return type of database function
     * @param stmt statement of executing function in database query
     * @param bindVars input and out parameter of database function.
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            //System.out.println("st.getObject(1) " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(11, end));

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //try {
         //   super.lock();
      //  } catch (RowInconsistentException e) {
       //     refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
       //     super.lock();
       // } catch (AlreadyLockedException e1) {
      //      refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
       //     e1.printStackTrace();
       // }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
           // setModifyHistParam();
        }
        
    }

    /**
     * Method to set the row modification history
     * **/

    public void setModifyHistParam() {
        //System.out.println("setModifyHistParam");
        setUsrIdModDt(StaticValue.getTruncatedCurrDt());
       // setUsrIdModDt(new Timestamp(System.currentTimeMillis()));

        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }

    }

    public Object resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }
}

