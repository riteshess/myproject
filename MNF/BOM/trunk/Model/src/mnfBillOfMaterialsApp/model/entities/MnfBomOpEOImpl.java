package mnfBillOfMaterialsApp.model.entities;

import adf.utils.bean.StaticValue;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AlreadyLockedException;
import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 12 10:37:20 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomOpEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        DocId,
        RtId,
        OpId,
        OpSrNo,
        WcId,
        OpLocType,
        OpRmrk,
        InptItmCnt,
        OutptItmCnt,
        OpTotItmAmtSp,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        MnfBomOpItm,
        MnfBom;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int RTID = AttributesEnum.RtId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int OPLOCTYPE = AttributesEnum.OpLocType.index();
    public static final int OPRMRK = AttributesEnum.OpRmrk.index();
    public static final int INPTITMCNT = AttributesEnum.InptItmCnt.index();
    public static final int OUTPTITMCNT = AttributesEnum.OutptItmCnt.index();
    public static final int OPTOTITMAMTSP = AttributesEnum.OpTotItmAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int MNFBOMOPITM = AttributesEnum.MnfBomOpItm.index();
    public static final int MNFBOM = AttributesEnum.MnfBom.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomOpEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfBillOfMaterialsApp.model.entities.MnfBomOpEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }


    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for RtId, using the alias name RtId.
     * @return the value of RtId
     */
    public String getRtId() {
        return (String) getAttributeInternal(RTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RtId.
     * @param value value to set the RtId
     */
    public void setRtId(String value) {
        setAttributeInternal(RTID, value);
    }

    /**
     * Gets the attribute value for OpId, using the alias name OpId.
     * @return the value of OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpId.
     * @param value value to set the OpId
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OpSrNo, using the alias name OpSrNo.
     * @return the value of OpSrNo
     */
    public Number getOpSrNo() {
        return (Number) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpSrNo.
     * @param value value to set the OpSrNo
     */
    public void setOpSrNo(Number value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for WcId, using the alias name WcId.
     * @return the value of WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcId.
     * @param value value to set the WcId
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for OpLocType, using the alias name OpLocType.
     * @return the value of OpLocType
     */
    public Integer getOpLocType() {
        return (Integer) getAttributeInternal(OPLOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpLocType.
     * @param value value to set the OpLocType
     */
    public void setOpLocType(Integer value) {
        setAttributeInternal(OPLOCTYPE, value);
    }

    /**
     * Gets the attribute value for OpRmrk, using the alias name OpRmrk.
     * @return the value of OpRmrk
     */
    public String getOpRmrk() {
        return (String) getAttributeInternal(OPRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpRmrk.
     * @param value value to set the OpRmrk
     */
    public void setOpRmrk(String value) {
        setAttributeInternal(OPRMRK, value);
    }

    /**
     * Gets the attribute value for InptItmCnt, using the alias name InptItmCnt.
     * @return the value of InptItmCnt
     */
    public Number getInptItmCnt() {
        return (Number) getAttributeInternal(INPTITMCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InptItmCnt.
     * @param value value to set the InptItmCnt
     */
    public void setInptItmCnt(Number value) {
        setAttributeInternal(INPTITMCNT, value);
    }

    /**
     * Gets the attribute value for OutptItmCnt, using the alias name OutptItmCnt.
     * @return the value of OutptItmCnt
     */
    public Number getOutptItmCnt() {
        return (Number) getAttributeInternal(OUTPTITMCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmCnt.
     * @param value value to set the OutptItmCnt
     */
    public void setOutptItmCnt(Number value) {
        setAttributeInternal(OUTPTITMCNT, value);
    }

    /**
     * Gets the attribute value for OpTotItmAmtSp, using the alias name OpTotItmAmtSp.
     * @return the value of OpTotItmAmtSp
     */
    public Number getOpTotItmAmtSp() {
        return (Number) getAttributeInternal(OPTOTITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpTotItmAmtSp.
     * @param value value to set the OpTotItmAmtSp
     */
    public void setOpTotItmAmtSp(Number value) {
        setAttributeInternal(OPTOTITMAMTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfBomOpItm() {
        return (RowIterator) getAttributeInternal(MNFBOMOPITM);
    }


    /**
     * @return the associated entity MnfBomEOImpl.
     */
    public MnfBomEOImpl getMnfBom() {
        return (MnfBomEOImpl) getAttributeInternal(MNFBOM);
    }

    /**
     * Sets <code>value</code> as the associated entity MnfBomEOImpl.
     */
    public void setMnfBom(MnfBomEOImpl value) {
        setAttributeInternal(MNFBOM, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param rtId key constituent
     * @param opId key constituent
     * @param opSrNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId, String rtId,
                                       String opId, Number opSrNo) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId, rtId, opId, opSrNo });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setUsrIdCreateDt(StaticValue.getTruncatedCurrDt());
        setInptItmCnt(new Number(0));
        setOutptItmCnt(new Number(0));
        setOpTotItmAmtSp(new Number(0));
        setOpLocType(1);

        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // try {
        //    super.lock();
        /*   } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        } catch (AlreadyLockedException e1) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            e1.printStackTrace();
        } */
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            setModifyHistParam();
        }
        
    }

    /**
     * Method to set the row modification history
     * **/

    public void setModifyHistParam() {
        //System.out.println("setModifyHistParam");
        setUsrIdModDt(StaticValue.getTruncatedCurrDt());

        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }

    }

    public Object resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }
}

