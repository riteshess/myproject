package mnfBillOfMaterialsApp.model.entities;

import adf.utils.bean.StaticValue;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 24 09:26:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomQcParamEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        DocId,
        OpId,
        OpSrNo,
        ParamId,
        StdVal,
        TlrncLower,
        TlrncUpper,
        TlrncType,
        FailActn,
        LowerLimit,
        UpperLimit,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ApldFrmGp,
        ParamSpec,
        ParamType,
        OrgId,
        MnfBom;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int STDVAL = AttributesEnum.StdVal.index();
    public static final int TLRNCLOWER = AttributesEnum.TlrncLower.index();
    public static final int TLRNCUPPER = AttributesEnum.TlrncUpper.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int FAILACTN = AttributesEnum.FailActn.index();
    public static final int LOWERLIMIT = AttributesEnum.LowerLimit.index();
    public static final int UPPERLIMIT = AttributesEnum.UpperLimit.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APLDFRMGP = AttributesEnum.ApldFrmGp.index();
    public static final int PARAMSPEC = AttributesEnum.ParamSpec.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int MNFBOM = AttributesEnum.MnfBom.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomQcParamEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfBillOfMaterialsApp.model.entities.MnfBomQcParamEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }


    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for OpId, using the alias name OpId.
     * @return the value of OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpId.
     * @param value value to set the OpId
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OpSrNo, using the alias name OpSrNo.
     * @return the value of OpSrNo
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpSrNo.
     * @param value value to set the OpSrNo
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ParamId, using the alias name ParamId.
     * @return the value of ParamId
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamId.
     * @param value value to set the ParamId
     */
    public void setParamId(String value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for StdVal, using the alias name StdVal.
     * @return the value of StdVal
     */
    public oracle.jbo.domain.Number getStdVal() {
        return (oracle.jbo.domain.Number) getAttributeInternal(STDVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for StdVal.
     * @param value value to set the StdVal
     */
    public void setStdVal(oracle.jbo.domain.Number value) {
        setAttributeInternal(STDVAL, value);
    }

    /**
     * Gets the attribute value for TlrncLower, using the alias name TlrncLower.
     * @return the value of TlrncLower
     */
    public Number getTlrncLower() {
        return (Number) getAttributeInternal(TLRNCLOWER);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncLower.
     * @param value value to set the TlrncLower
     */
    public void setTlrncLower(Number value) {
        setAttributeInternal(TLRNCLOWER, value);
    }

    /**
     * Gets the attribute value for TlrncUpper, using the alias name TlrncUpper.
     * @return the value of TlrncUpper
     */
    public Number getTlrncUpper() {
        return (Number) getAttributeInternal(TLRNCUPPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncUpper.
     * @param value value to set the TlrncUpper
     */
    public void setTlrncUpper(Number value) {
        setAttributeInternal(TLRNCUPPER, value);
    }

    /**
     * Gets the attribute value for TlrncType, using the alias name TlrncType.
     * @return the value of TlrncType
     */
    public String getTlrncType() {
        return (String) getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncType.
     * @param value value to set the TlrncType
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for FailActn, using the alias name FailActn.
     * @return the value of FailActn
     */
    public Integer getFailActn() {
        return (Integer) getAttributeInternal(FAILACTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for FailActn.
     * @param value value to set the FailActn
     */
    public void setFailActn(Integer value) {
        setAttributeInternal(FAILACTN, value);
    }

    /**
     * Gets the attribute value for LowerLimit, using the alias name LowerLimit.
     * @return the value of LowerLimit
     */
    public Number getLowerLimit() {
        return (Number) getAttributeInternal(LOWERLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LowerLimit.
     * @param value value to set the LowerLimit
     */
    public void setLowerLimit(Number value) {
        setAttributeInternal(LOWERLIMIT, value);
    }

    /**
     * Gets the attribute value for UpperLimit, using the alias name UpperLimit.
     * @return the value of UpperLimit
     */
    public Number getUpperLimit() {
        return (Number) getAttributeInternal(UPPERLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpperLimit.
     * @param value value to set the UpperLimit
     */
    public void setUpperLimit(Number value) {
        setAttributeInternal(UPPERLIMIT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ApldFrmGp, using the alias name ApldFrmGp.
     * @return the value of ApldFrmGp
     */
    public String getApldFrmGp() {
        return (String) getAttributeInternal(APLDFRMGP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApldFrmGp.
     * @param value value to set the ApldFrmGp
     */
    public void setApldFrmGp(String value) {
        setAttributeInternal(APLDFRMGP, value);
    }

    /**
     * Gets the attribute value for ParamSpec, using the alias name ParamSpec.
     * @return the value of ParamSpec
     */
    public String getParamSpec() {
        return (String) getAttributeInternal(PARAMSPEC);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamSpec.
     * @param value value to set the ParamSpec
     */
    public void setParamSpec(String value) {
        setAttributeInternal(PARAMSPEC, value);
    }


    /**
     * Gets the attribute value for ParamType, using the alias name ParamType.
     * @return the value of ParamType
     */
    public Integer getParamType() {
        return (Integer) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamType.
     * @param value value to set the ParamType
     */
    public void setParamType(Integer value) {
        setAttributeInternal(PARAMTYPE, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * @return the associated entity MnfBomEOImpl.
     */
    public MnfBomEOImpl getMnfBom() {
        return (MnfBomEOImpl) getAttributeInternal(MNFBOM);
    }

    /**
     * Sets <code>value</code> as the associated entity MnfBomEOImpl.
     */
    public void setMnfBom(MnfBomEOImpl value) {
        setAttributeInternal(MNFBOM, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param opId key constituent
     * @param opSrNo key constituent
     * @param paramId key constituent
     * @param orgId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId, String opId,
                                       Integer opSrNo, String paramId, String orgId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId, opId, opSrNo, paramId, orgId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        super.create(attributeList);
        setApldFrmGp("N");
        setUsrIdCreateDt(StaticValue.getTruncatedCurrDt());
        setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        setStdVal(new oracle.jbo.domain.Number (0));
        setTlrncLower(new oracle.jbo.domain.Number (0));
        setLowerLimit(new oracle.jbo.domain.Number (0));
        setUpperLimit(new oracle.jbo.domain.Number (0));
        setTlrncUpper(new oracle.jbo.domain.Number (0));
               
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            setModifyHistParam();
        }
        
    }
    
    /**
     * Method to set the row modification history
     * **/

    public void setModifyHistParam() {
        //System.out.println("setModifyHistParam");

        setUsrIdModDt(StaticValue.getTruncatedCurrDt());

        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }

    }

    public Object resolvEl(String data) {

        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }
}

