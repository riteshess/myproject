package mnfBillOfMaterialsApp.model.views;

import mnfBillOfMaterialsApp.model.entities.MnfBomOpEOImpl;

import mnfBillOfMaterialsApp.model.services.MNFBillOfMaterialsAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 26 17:07:41 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomOpVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFBOMOPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        HoOrgId,
        InptItmCnt,
        OpId,
        OpLocType,
        OpRmrk,
        OpSrNo,
        OpTotItmAmtSp,
        OutptItmCnt,
        RtId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcId,
        TransOpRowKey,
        TransOpOutItmPresent,
        TransInputItmPresent,
        OpDesc,
        MnfBomOpItm,
        MnfBomInputItm,
        MnfBomOutputItm,
        MnfBomCoProductItm,
        LOVOperationDtlVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int INPTITMCNT = AttributesEnum.InptItmCnt.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPLOCTYPE = AttributesEnum.OpLocType.index();
    public static final int OPRMRK = AttributesEnum.OpRmrk.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int OPTOTITMAMTSP = AttributesEnum.OpTotItmAmtSp.index();
    public static final int OUTPTITMCNT = AttributesEnum.OutptItmCnt.index();
    public static final int RTID = AttributesEnum.RtId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int TRANSOPROWKEY = AttributesEnum.TransOpRowKey.index();
    public static final int TRANSOPOUTITMPRESENT = AttributesEnum.TransOpOutItmPresent.index();
    public static final int TRANSINPUTITMPRESENT = AttributesEnum.TransInputItmPresent.index();
    public static final int OPDESC = AttributesEnum.OpDesc.index();
    public static final int MNFBOMOPITM = AttributesEnum.MnfBomOpItm.index();
    public static final int MNFBOMINPUTITM = AttributesEnum.MnfBomInputItm.index();
    public static final int MNFBOMOUTPUTITM = AttributesEnum.MnfBomOutputItm.index();
    public static final int MNFBOMCOPRODUCTITM = AttributesEnum.MnfBomCoProductItm.index();
    public static final int LOVOPERATIONDTLVO = AttributesEnum.LOVOperationDtlVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomOpVORowImpl() {
    }

    /**
     * Gets MnfBomOpEO entity object.
     * @return the MnfBomOpEO
     */
    public MnfBomOpEOImpl getMnfBomOpEO() {
        return (MnfBomOpEOImpl) getEntity(ENTITY_MNFBOMOPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for INPT_ITM_CNT using the alias name InptItmCnt.
     * @return the INPT_ITM_CNT
     */
    public Number getInptItmCnt() {
        setInptItmCnt(new Number(getAM().getMnfBomInputItmVO().getRowCount()));
        return (Number) getAttributeInternal(INPTITMCNT);
    }

    /**
     * Sets <code>value</code> as attribute value for INPT_ITM_CNT using the alias name InptItmCnt.
     * @param value value to set the INPT_ITM_CNT
     */
    public void setInptItmCnt(Number value) {
        setAttributeInternal(INPTITMCNT, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_LOC_TYPE using the alias name OpLocType.
     * @return the OP_LOC_TYPE
     */
    public Integer getOpLocType() {
        return (Integer) getAttributeInternal(OPLOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_LOC_TYPE using the alias name OpLocType.
     * @param value value to set the OP_LOC_TYPE
     */
    public void setOpLocType(Integer value) {
        setAttributeInternal(OPLOCTYPE, value);
    }

    /**
     * Gets the attribute value for OP_RMRK using the alias name OpRmrk.
     * @return the OP_RMRK
     */
    public String getOpRmrk() {
        return (String) getAttributeInternal(OPRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_RMRK using the alias name OpRmrk.
     * @param value value to set the OP_RMRK
     */
    public void setOpRmrk(String value) {
        setAttributeInternal(OPRMRK, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Number getOpSrNo() {
        return (Number) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Number value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for OP_TOT_ITM_AMT_SP using the alias name OpTotItmAmtSp.
     * @return the OP_TOT_ITM_AMT_SP
     */
    public Number getOpTotItmAmtSp() {
        Number amtSum = new Number(0);
        getAM().getMnfBomInputItmVO().setRangeSize(-1);
        Row[] rows = getAM().getMnfBomInputItmVO().getAllRowsInRange();
        if (rows.length > 0) {
            for (Row r : rows) {
                if (r.getAttribute("ItmTotAmt") != null)
                    amtSum = amtSum.add((Number) r.getAttribute("ItmTotAmt"));

                //System.out.println(" amtSum "+amtSum);
            }
            setOpTotItmAmtSp(amtSum);

        } else {
            setOpTotItmAmtSp(amtSum);
        }

        return (Number) getAttributeInternal(OPTOTITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_TOT_ITM_AMT_SP using the alias name OpTotItmAmtSp.
     * @param value value to set the OP_TOT_ITM_AMT_SP
     */
    public void setOpTotItmAmtSp(Number value) {
        setAttributeInternal(OPTOTITMAMTSP, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_CNT using the alias name OutptItmCnt.
     * @return the OUTPT_ITM_CNT
     */
    public Number getOutptItmCnt() {
        setOutptItmCnt(new Number(getAM().getMnfBomOutputItmVO().getRowCount()));
        return (Number) getAttributeInternal(OUTPTITMCNT);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_CNT using the alias name OutptItmCnt.
     * @param value value to set the OUTPT_ITM_CNT
     */
    public void setOutptItmCnt(Number value) {
        setAttributeInternal(OUTPTITMCNT, value);
    }

    /**
     * Gets the attribute value for RT_ID using the alias name RtId.
     * @return the RT_ID
     */
    public String getRtId() {
        return (String) getAttributeInternal(RTID);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_ID using the alias name RtId.
     * @param value value to set the RT_ID
     */
    public void setRtId(String value) {
        setAttributeInternal(RTID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WC_ID using the alias name WcId.
     * @return the WC_ID
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_ID using the alias name WcId.
     * @param value value to set the WC_ID
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpRowKey.
     * @return the TransOpRowKey
     */
    public Object getTransOpRowKey() {
        return getKey();
        //return (Object) getAttributeInternal(TRANSOPROWKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpRowKey.
     * @param value value to set the  TransOpRowKey
     */
    public void setTransOpRowKey(Object value) {
        setAttributeInternal(TRANSOPROWKEY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpOutItmPresent.
     * @return the TransOpOutItmPresent
     */
    public Integer getTransOpOutItmPresent() {
        Integer opOutItm = 0;
        Row[] rows = getAM().getMnfBomOpItmVO().getAllRowsInRange();
        if (rows.length > 0) {
            for (Row r : rows) {
                if (r.getAttribute("ItmType") != null && (r.getAttribute("ItmType")).equals(67))
                    opOutItm = opOutItm + 1;

                //System.out.println(" opOutItm* "+opOutItm);
            }
            return opOutItm;
        }
        return opOutItm;
        //  return (Integer) getAttributeInternal(TRANSOPOUTITMPRESENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpOutItmPresent.
     * @param value value to set the  TransOpOutItmPresent
     */
    public void setTransOpOutItmPresent(Integer value) {
        setAttributeInternal(TRANSOPOUTITMPRESENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransInputItmPresent.
     * @return the TransInputItmPresent
     */
    public Integer getTransInputItmPresent() {
        Integer opInputItm = 0;
        Row[] rows = getAM().getMnfBomOpItmVO().getAllRowsInRange();
        //System.out.println(" 0000000000000000000000000  ");
        if (rows.length > 0) {
            for (Row r : rows) {
                if (r.getAttribute("ItmType") != null && (r.getAttribute("ItmType")).equals(62))
                    opInputItm = opInputItm + 1;

              //  System.out.println(" opOutItm*   ======  "+opInputItm);
            }
            return opInputItm;
        }
        return opInputItm;
        //return (Integer) getAttributeInternal(TRANSINPUTITMPRESENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransInputItmPresent.
     * @param value value to set the  TransInputItmPresent
     */
    public void setTransInputItmPresent(Integer value) {
        setAttributeInternal(TRANSINPUTITMPRESENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpDesc.
     * @return the OpDesc
     */
    public String getOpDesc() {
        if (getOpId() != null) {

            if (getAM().getLOVOperationDescVO().getFilteredRows("DocId", getOpId()).length > 0) {
                return (getAM().getLOVOperationDescVO().getFilteredRows("DocId",
                                                                   getOpId()))[0].getAttribute("OpDesc").toString();
            }
        }
        return (String) getAttributeInternal(OPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpDesc.
     * @param value value to set the  OpDesc
     */
    public void setOpDesc(String value) {
        setAttributeInternal(OPDESC, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfBomOpItm.
     */
    public RowIterator getMnfBomOpItm() {
        return (RowIterator) getAttributeInternal(MNFBOMOPITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfBomInputItm.
     */
    public RowIterator getMnfBomInputItm() {
        return (RowIterator) getAttributeInternal(MNFBOMINPUTITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfBomOutputItm.
     */
    public RowIterator getMnfBomOutputItm() {
        return (RowIterator) getAttributeInternal(MNFBOMOUTPUTITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfBomCoProductItm.
     */
    public RowIterator getMnfBomCoProductItm() {
        return (RowIterator) getAttributeInternal(MNFBOMCOPRODUCTITM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationDtlVO.
     */
    public RowSet getLOVOperationDtlVO() {
        return (RowSet) getAttributeInternal(LOVOPERATIONDTLVO);
    }

    private MNFBillOfMaterialsAMImpl getAM() {
        return (MNFBillOfMaterialsAMImpl) getApplicationModule();
    }
}

