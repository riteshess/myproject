package mnfBillOfMaterialsApp.model.views;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import mnfBillOfMaterialsApp.model.entities.MnfBomQcParamEOImpl;

import mnfBillOfMaterialsApp.model.services.MNFBillOfMaterialsAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 24 11:51:11 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfBomQcParamVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFBOMQCPARAMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        DocId,
        OpId,
        OpSrNo,
        ParamId,
        StdVal,
        TlrncLower,
        TlrncUpper,
        TlrncType,
        FailActn,
        LowerLimit,
        UpperLimit,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ApldFrmGp,
        ParamSpec,
        TransOprDesc,
        TransQcParamDesc,
        QcRowKey,
        ParamType,
        OrgId,
        TransOrg,
        LOVOperationFromBOMVO,
        LOVAppDsAttVO,
        LOVQcParamVO,
        LOVAppDsAttVO1,
        LOVOrganizationVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int STDVAL = AttributesEnum.StdVal.index();
    public static final int TLRNCLOWER = AttributesEnum.TlrncLower.index();
    public static final int TLRNCUPPER = AttributesEnum.TlrncUpper.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int FAILACTN = AttributesEnum.FailActn.index();
    public static final int LOWERLIMIT = AttributesEnum.LowerLimit.index();
    public static final int UPPERLIMIT = AttributesEnum.UpperLimit.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APLDFRMGP = AttributesEnum.ApldFrmGp.index();
    public static final int PARAMSPEC = AttributesEnum.ParamSpec.index();
    public static final int TRANSOPRDESC = AttributesEnum.TransOprDesc.index();
    public static final int TRANSQCPARAMDESC = AttributesEnum.TransQcParamDesc.index();
    public static final int QCROWKEY = AttributesEnum.QcRowKey.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int TRANSORG = AttributesEnum.TransOrg.index();
    public static final int LOVOPERATIONFROMBOMVO = AttributesEnum.LOVOperationFromBOMVO.index();
    public static final int LOVAPPDSATTVO = AttributesEnum.LOVAppDsAttVO.index();
    public static final int LOVQCPARAMVO = AttributesEnum.LOVQcParamVO.index();
    public static final int LOVAPPDSATTVO1 = AttributesEnum.LOVAppDsAttVO1.index();
    public static final int LOVORGANIZATIONVO1 = AttributesEnum.LOVOrganizationVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfBomQcParamVORowImpl() {
    }

    /**
     * Gets MnfBomQcParamEO entity object.
     * @return the MnfBomQcParamEO
     */
    public MnfBomQcParamEOImpl getMnfBomQcParamEO() {
        return (MnfBomQcParamEOImpl) getEntity(ENTITY_MNFBOMQCPARAMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {

        if (!getAM().duplicateQcparamAndOper(getTransQcParamDesc(), getOpId())) {
            setAttributeInternal(PARAMID, value);
        } else {
            showFacesMsg("Duplicate Parameter!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        }

    }

    /**
     * Gets the attribute value for STD_VAL using the alias name StdVal.
     * @return the STD_VAL
     */
    public Number getStdVal() {
        return (Number) getAttributeInternal(STDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for STD_VAL using the alias name StdVal.
     * @param value value to set the STD_VAL
     */
    public void setStdVal(Number value) {
        setAttributeInternal(STDVAL, value);
    }

    /**
     * Gets the attribute value for TLRNC_LOWER using the alias name TlrncLower.
     * @return the TLRNC_LOWER
     */
    public Number getTlrncLower() {
        return (Number) getAttributeInternal(TLRNCLOWER);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_LOWER using the alias name TlrncLower.
     * @param value value to set the TLRNC_LOWER
     */
    public void setTlrncLower(Number value) {
        setAttributeInternal(TLRNCLOWER, value);
    }

    /**
     * Gets the attribute value for TLRNC_UPPER using the alias name TlrncUpper.
     * @return the TLRNC_UPPER
     */
    public Number getTlrncUpper() {
        return (Number) getAttributeInternal(TLRNCUPPER);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_UPPER using the alias name TlrncUpper.
     * @param value value to set the TLRNC_UPPER
     */
    public void setTlrncUpper(Number value) {
        setAttributeInternal(TLRNCUPPER, value);
    }

    /**
     * Gets the attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @return the TLRNC_TYPE
     */
    public String getTlrncType() {
        return (String) getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @param value value to set the TLRNC_TYPE
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for FAIL_ACTN using the alias name FailActn.
     * @return the FAIL_ACTN
     */
    public Integer getFailActn() {
        return (Integer) getAttributeInternal(FAILACTN);
    }

    /**
     * Sets <code>value</code> as attribute value for FAIL_ACTN using the alias name FailActn.
     * @param value value to set the FAIL_ACTN
     */
    public void setFailActn(Integer value) {
        setAttributeInternal(FAILACTN, value);
    }

    /**
     * Gets the attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @return the LOWER_LIMIT
     */
    public Number getLowerLimit() {
        return (Number) getAttributeInternal(LOWERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @param value value to set the LOWER_LIMIT
     */
    public void setLowerLimit(Number value) {
        setAttributeInternal(LOWERLIMIT, value);
    }

    /**
     * Gets the attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @return the UPPER_LIMIT
     */
    public Number getUpperLimit() {
        return (Number) getAttributeInternal(UPPERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @param value value to set the UPPER_LIMIT
     */
    public void setUpperLimit(Number value) {
        setAttributeInternal(UPPERLIMIT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for APLD_FRM_GP using the alias name ApldFrmGp.
     * @return the APLD_FRM_GP
     */
    public String getApldFrmGp() {
        return (String) getAttributeInternal(APLDFRMGP);
    }

    /**
     * Sets <code>value</code> as attribute value for APLD_FRM_GP using the alias name ApldFrmGp.
     * @param value value to set the APLD_FRM_GP
     */
    public void setApldFrmGp(String value) {
        setAttributeInternal(APLDFRMGP, value);
    }

    /**
     * Gets the attribute value for PARAM_SPEC using the alias name ParamSpec.
     * @return the PARAM_SPEC
     */
    public String getParamSpec() {
        return (String) getAttributeInternal(PARAMSPEC);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_SPEC using the alias name ParamSpec.
     * @param value value to set the PARAM_SPEC
     */
    public void setParamSpec(String value) {
        setAttributeInternal(PARAMSPEC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOprDesc.
     * @return the TransOprDesc
     */
    public String getTransOprDesc() {
        if (getOpId() != null) {

            if (getAM().getLOVOperationDescVO().getFilteredRows("DocId", getOpId()).length > 0) {
                return (getAM().getLOVOperationDescVO().getFilteredRows("DocId",
                                                                        getOpId()))[0].getAttribute("OpDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSOPRDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOprDesc.
     * @param value value to set the  TransOprDesc
     */
    public void setTransOprDesc(String value) {
        setAttributeInternal(TRANSOPRDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransQcParamDesc.
     * @return the TransQcParamDesc
     */
    public String getTransQcParamDesc() {
        if (getParamId() != null) {

            ViewObjectImpl allQcParameter = getAM().getLOVAllQcParameter();
            allQcParameter.setNamedWhereClauseParam("BindCldId", this.getCldId());
            allQcParameter.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            allQcParameter.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            allQcParameter.executeQuery();
            
            Row[] qcParam = allQcParameter.getFilteredRows("ParamId", getParamId());
            System.out.println("total Records " + qcParam.length);
            if(qcParam.length>0)
            {
                return qcParam[0].getAttribute("ParamNm").toString();
            }
            
            /*  if (getAM().getLOVAllQcParameter().getFilteredRows("ParamId", getParamId()).length > 0) {
                return (getAM().getLOVAllQcParameter().getFilteredRows("ParamId",
                                                                       getParamId()))[0].getAttribute("ParamNm").toString();
            } */
        }
        return (String) getAttributeInternal(TRANSQCPARAMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransQcParamDesc.
     * @param value value to set the  TransQcParamDesc
     */
    public void setTransQcParamDesc(String value) {
        if (getParamId() != null) {

            if (getAM().getLOVAllQcParameter().getFilteredRows("ParamId", getParamId()).length > 0) {
                setAttributeInternal(TRANSQCPARAMDESC,
                                     (getAM().getLOVAllQcParameter().getFilteredRows("ParamId",
                                                                                     getParamId()))[0].getAttribute("ParamNm").toString());
            }
        } else {
            setAttributeInternal(TRANSQCPARAMDESC, value);
        }

        //setAttributeInternal(TRANSQCPARAMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QcRowKey.
     * @return the QcRowKey
     */
    public Object getQcRowKey() {
        return getKey();
        //return (Object) getAttributeInternal(QCROWKEY);
    }

    /**
     * Gets the attribute value for PARAM_TYPE using the alias name ParamType.
     * @return the PARAM_TYPE
     */
    public Integer getParamType() {
        return (Integer) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_TYPE using the alias name ParamType.
     * @param value value to set the PARAM_TYPE
     */
    public void setParamType(Integer value) {
        if (!getAM().duplicateQcparamAndOper(getTransQcParamDesc(), getOpId())) {
            setAttributeInternal(PARAMTYPE, value);
        }

    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrg.
     * @return the TransOrg
     */
    public String getTransOrg() {
        
        ViewObjectImpl allQcParameter = getAM().getLOVForQCOrganizationVO1();
        allQcParameter.setNamedWhereClauseParam("BindCldId", this.getCldId());
        allQcParameter.setNamedWhereClauseParam("BindSlcId", this.getSlocId());
        //allQcParameter.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
        allQcParameter.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
        allQcParameter.executeQuery();
        Row[] qcParam = allQcParameter.getFilteredRows("OrgId", getOrgId());
        System.out.println("total Records " + qcParam.length);
        if(qcParam.length>0)
        {System.out.println("Org Desc " + qcParam[0].getAttribute("OrgDesc").toString());
            return qcParam[0].getAttribute("OrgDesc").toString();
        }
           return (String) getAttributeInternal(TRANSORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrg.
     * @param value value to set the  TransOrg
     */
    public void setTransOrg(String value) {
        setAttributeInternal(TRANSORG, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationFromBOMVO.
     */
    public RowSet getLOVOperationFromBOMVO() {
        return (RowSet) getAttributeInternal(LOVOPERATIONFROMBOMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAppDsAttVO.
     */
    public RowSet getLOVAppDsAttVO() {
        return (RowSet) getAttributeInternal(LOVAPPDSATTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVQcParamVO.
     */
    public RowSet getLOVQcParamVO() {
        return (RowSet) getAttributeInternal(LOVQCPARAMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAppDsAttVO1.
     */
    public RowSet getLOVAppDsAttVO1() {
        return (RowSet) getAttributeInternal(LOVAPPDSATTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrganizationVO1.
     */
    public RowSet getLOVOrganizationVO1() {
        return (RowSet) getAttributeInternal(LOVORGANIZATIONVO1);
    }

    private MNFBillOfMaterialsAMImpl getAM() {
        return (MNFBillOfMaterialsAMImpl) getApplicationModule();
    }

    /**----------------------------------------------------------------**/
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {

        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);

    }
}

