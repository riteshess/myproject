package ebizsalestrackingapp.model.services;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import ebizsalestrackingapp.model.services.common.ebizSalesTrackingAppAM;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Map;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 21 12:12:14 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ebizSalesTrackingAppAMImpl extends ApplicationModuleImpl implements ebizSalesTrackingAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ebizSalesTrackingAppAMImpl() {
        System.out.println("in constructr***************");
    }

    /**
     * Container's getter for ViewSalesOrder1.
     * @return ViewSalesOrder1
     */
    public ViewObjectImpl getViewSalesOrder() {
        return (ViewObjectImpl) findViewObject("ViewSalesOrder");
    }

    public void setGlobalTrackingParameter() {
        String slsDocIdPf = getSlsDocId();
        System.out.println(slsDocIdPf + " ============== sls doc ID");
        setDetailsSoView(slsDocIdPf, getProductId(), getSlsDlvDt());
        filterSalesDeliverySchedule(slsDocIdPf);
        getCurrentOrderStage(slsDocIdPf);
    }

    public void setGlobalParameter() {
        setParamInDualSlsOrdSearch();
        // searchSalesOrder();
    }

    /**
     * ##################################################################################################################################################
     * Search Page Area
     */


    public void setParamInDualSlsOrdSearch() {
        getDualSalesOrderSearch().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getDualSalesOrderSearch().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getDualSalesOrderSearch().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getDualSalesOrderSearch().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getDualSalesOrderSearch().executeQuery();
        if (getSlsDocId() != null) {
            setSalesOrderSearchFromSales(getSlsDocId());
        }
    }

    public void searchByDefaultSetting(String slsDocId) {
        setSalesOrderSearchFromSales(slsDocId);
    }

    public void searchSalesOrder() {
        Row r = getDualSalesOrderSearch().getCurrentRow();
        System.out.println(EbizParams.GLBL_APP_CLD_ID() + " ============================== Cloud Id");
        getViewSoSearchDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlsDocId", r.getAttribute("SoDocId"));
        getViewSoSearchDetails().setNamedWhereClauseParam("BindCustmerId", r.getAttribute("CustomerId"));
        getViewSoSearchDetails().setNamedWhereClauseParam("BindProductId", r.getAttribute("OutPutItmId"));
        getViewSoSearchDetails().setNamedWhereClauseParam("BindStrtDt", r.getAttribute("SoDlvFrmDate"));
        getViewSoSearchDetails().setNamedWhereClauseParam("BindEndDt", r.getAttribute("SoDlvToDate"));
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSoDispId", r.getAttribute("SoDispId"));
        getViewSoSearchDetails().executeQuery();
    }

    public void setSalesOrderSearchFromSales(String slsDocId) {

        getViewSoSearchDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindCustmerId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindProductId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindStrtDt", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindEndDt", null);

        getViewSoSearchDetails().executeQuery();
    }

    public void resetSalesOrder() {
        getViewSoSearchDetails().setNamedWhereClauseParam("BindCldId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlocId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindHoOrgId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindOrgId", null);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSoDispId", null);
        getViewSoSearchDetails().executeQuery();
        getDualSalesOrderSearch().executeQuery();
    }

    protected void setDetailsSoView(String slsDocId, String prdId, Timestamp dlvDt) {
        getViewSoSearchDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewSoSearchDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindProductId", prdId);
        getViewSoSearchDetails().setNamedWhereClauseParam("BindStrtDt", dlvDt);
        System.out.println(slsDocId + " THis is the filtered sls doc id");
        getViewSoSearchDetails().executeQuery();
    }

    public void setPdoParameterDetails(String slsDocId) {
        getViewPdoDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewPdoDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewPdoDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewPdoDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewPdoDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewPdoDetails().executeQuery();
        // System.out.println("was here " + slsDocId);
    }

    /**
     * ##################################################################################################################################################
     * Main Page Area
     */
    String pdoDocumentId = null;
    String srcDocumentId = null;
    String shipmentId = null;
    String invoiceId = null;

    public void setInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
    }

    public void setShipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
    }

    public void setSrcDocumentId(String srcDocumentId) {
        this.srcDocumentId = srcDocumentId;
    }

    public String getSrcDocumentId() {
        return srcDocumentId;
    }

    public void setPdoDocumentId(String pdoDocumentId) {
        this.pdoDocumentId = pdoDocumentId;
    }

    public String getPdoDocumentId() {
        return pdoDocumentId;
    }

    public void showInvoiceDetails(String slsDocId) {
        if (slsDocId != null) {
            getShipmentId(slsDocId);
            setShowInvoiceDetails(shipmentId);
            getInvoiceId(shipmentId);
            setPendingInvoice(invoiceId);
        }
    }

    protected void setPendingInvoice(String invoiceDocId) {
        getViewInvoicePending().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewInvoicePending().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewInvoicePending().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewInvoicePending().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewInvoicePending().setNamedWhereClauseParam("BindInvoicId", invoiceDocId);
        getViewInvoicePending().executeQuery();
    }

    protected void setShowInvoiceDetails(String shipDocId) {
        getViewInvoiceDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewInvoiceDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewInvoiceDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewInvoiceDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewInvoiceDetails().setNamedWhereClauseParam("BindShipId", shipDocId);
        getViewInvoiceDetails().executeQuery();
    }

    protected void getShipmentId(String slsDocId) {

        setShipDetails(slsDocId);
        Row r[] = getViewShipDetails().getFilteredRows("SoDocId", slsDocId);
        if (r.length > 0)
            setShipmentId(r[0].getAttribute("ShipmntDocId") != null ? r[0].getAttribute("ShipmntDocId").toString() :
                          null);
    }

    protected void getInvoiceId(String shipmentId) {

        Row r[] = getViewInvoiceDetails().getFilteredRows("ShipId", shipmentId);
        if (r.length > 0)
            setInvoiceId(r[0].getAttribute("DocId") != null ? r[0].getAttribute("DocId").toString() : null);
    }

    public void showShipDetails(String slsDocId) {
        System.out.println("=========== in shipment method in am ============ ");
        setShipDetails(slsDocId);
    }

    protected void setShipDetails(String slsDocId) {
        getViewShipDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewShipDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewShipDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewShipDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewShipDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewShipDetails().executeQuery();
    }

    public void showreceptDetail(String slsDocId) {
        getPdoId(slsDocId);
        setItemReceipt(getPdoDocumentId());
    }

    protected void setItemReceipt(String pdoDocId) {
        getViewItemReceptDetail().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewItemReceptDetail().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewItemReceptDetail().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewItemReceptDetail().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewItemReceptDetail().setNamedWhereClauseParam("BindPdoDocId", pdoDocId);
        getViewItemReceptDetail().executeQuery();
    }


    public void showQcProcess(String slsDocId) {
        getPdoId(slsDocId);
        setJeDetails(getPdoDocumentId());
        setQcDetails(slsDocId);
    }

    protected void setQcDetails(String slsDocId) {
        getViewQcDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewQcDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewQcDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewQcDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewQcDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewQcDetails().executeQuery();
    }

    protected void setJeDetails(String pdoDocId) {
        getViewJeDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewJeDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewJeDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewJeDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewJeDetails().setNamedWhereClauseParam("BindPdoDocId", pdoDocId);
        getViewJeDetails().executeQuery();
    }

    public Integer getCurrentOrderStage(String soDocId) {

        System.out.println("the pageflow sls doc ID  " + getSlsDocId());
        System.out.println(" The sls doc id " + soDocId);
        Integer rtnValue = 0;
        rtnValue =
            funTrackStage(EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_HO_ORG_ID(),
                          EbizParams.GLBL_APP_USR_ORG(), soDocId);
        System.out.println(" This is value setting " + rtnValue);

        //oppQuotTracking(soDocId);


        // Map pageFlowScope =  ADFContext.getCurrent().getPageFlowScope();
        //Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();
        // Map pfs = RequestContext.get
        // pageFlowScope.put("SLS_STAGE", rtnValue);
        ADFContext.getCurrent().getPageFlowScope().put("SLS_STAGE", rtnValue);
        return rtnValue;
    }


    public void showInProcessDetails(String slsDocId) {
        getPdoId(slsDocId);
        System.out.println(getPdoDocumentId() + " The pdo doc id for in process");
        setInProcessOpRc(getPdoDocumentId());
        getJcSrcId(slsDocId);
        System.out.println(getSrcDocumentId() + " The source doc id for in process");
        setInProcessJobCardDetails(getSrcDocumentId(), null, null);
    }

    public void showJcPerOper(String pdoDocId, String oprDocId, Integer oprSrNo) {
        System.out.println(getSrcDocumentId() + " The source doc id for in process");
        setInProcessJobCardDetails(getSrcDocumentId(), oprDocId, oprSrNo);
    }

    protected void setInProcessOpRc(String pdoDocId) {
        System.out.println(" filter based on : " + pdoDocId);

        getViewInProcessDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewInProcessDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewInProcessDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewInProcessDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewInProcessDetails().setNamedWhereClauseParam("BindPdoId", pdoDocId);
        getViewInProcessDetails().executeQuery();
    }

    protected void setInProcessJobCardDetails(String pdoDocId, String oprDocId, Integer oprSrNo) {
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindPdoId", pdoDocId);
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindOpSrNo", oprSrNo);
        getVIEWJobCardDetails().setNamedWhereClauseParam("BindOpDocId", oprDocId);
        getVIEWJobCardDetails().executeQuery();
    }

    protected void getPdoId(String slsDocId) {
        setPdoParameterDetails(slsDocId);
        Row r[] = getViewPdoDetails().getFilteredRows("SrcDocId", slsDocId);

        setPdoDocumentId(r[0].getAttribute("DocId") != null ? r[0].getAttribute("DocId").toString() : null);
    }

    protected void getJcSrcId(String slsDocId) {
        getPdoId(slsDocId);
        System.out.println(getPdoDocumentId() + " The pdo doc id for complete MNF");
        setInProcessOpRc(getPdoDocumentId());

        Row r[] = getViewInProcessDetails().getAllRowsInRange();

        setSrcDocumentId(r[0].getAttribute("OpRcId") != null ? r[0].getAttribute("OpRcId").toString() : null);
    }


    //PDO Doc Id for the finished manufacturing processed.

    public void showCompletedMNF(String slsDocId) {
        setCompletedPDO(slsDocId);

        getPdoId(slsDocId);

        System.out.println(getPdoDocumentId() + " The pdo doc id for complete MNF");
        setTotalItem(getPdoDocumentId());
        setPdoOperation(getPdoDocumentId());
        setComItemDetails(getPdoDocumentId(), null, null);

    }

    public void showInputItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showToolsItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showByProductItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showCoProductItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showShowScrapItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showOutputItm(String pdoDocId, Integer itemType) {
        setComItemDetails(pdoDocId, null, itemType);
    }

    public void showOperationItm(String pdoDocId, String opDocId) {
        System.out.println(pdoDocId);
        System.out.println(opDocId);
        setComItemDetails(pdoDocumentId, opDocId, null);
    }

    protected void setCompletedPDO(String slsDocId) {
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindPdoId", null);
        getViewMnfCompletedPdoDetails().setNamedWhereClauseParam("BindSlsDocId", slsDocId);
        getViewMnfCompletedPdoDetails().executeQuery();
    }

    protected void setTotalItem(String pdoDocId) {
        getViewTotalItemCount().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewTotalItemCount().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewTotalItemCount().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewTotalItemCount().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewTotalItemCount().setNamedWhereClauseParam("BindPdoId", pdoDocId);
        getViewTotalItemCount().executeQuery();
    }

    protected void setPdoOperation(String pdoDocId) {
        getViewPdoOpr().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewPdoOpr().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewPdoOpr().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewPdoOpr().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewPdoOpr().setNamedWhereClauseParam("BindPdoId", pdoDocId);
        getViewPdoOpr().executeQuery();
    }

    protected void setComItemDetails(String pdoDocId, String opDocId, Integer itemType) {
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindPdoId", pdoDocId);
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindOpDocId", opDocId);
        getViewMnfComItemDetails().setNamedWhereClauseParam("BindItmTyp", itemType);
        getViewMnfComItemDetails().executeQuery();
    }


    /**
     * ##################################################################################################################################################
     * method to call SQL Function
     */
    /*------------------------Declaration of Type Oracle---------------------------*/
    private static int INTEGER = Types.INTEGER;
    // private static int NUMBER = Types.INTEGER;
    // private static int VARCHAR = Types.VARCHAR;


    /** helper method for executing DB function
     * @param sqlReturnType return type of database function
     * @param stmt statement of executing function in database quary
     * @param bindVars input and out parameter of database function.
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    //System.out.println(bindVars[z] + "   ------");
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            //System.out.println("st.getObject(1) " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(11, end));

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }


    /**
     * function to get the stages of tracking order
     fn_mnf_so_tracking
     (
       p_cld_id VARCHAR2,
       p_sloc_id NUMBER,
       p_ho_org_id VARCHAR2,
       p_org_id VARCHAR2,
       p_so_doc_id VARCHAR2
     )

     */
    public Integer funTrackStage(String cldId, Integer slocId, String horgId, String orgId, String soDocId) {
        try {
            return (Integer) callStoredFunction(INTEGER, "MNF.fn_mnf_so_tracking(?,?,?,?,?)", new Object[] {
                                                cldId, slocId, horgId, orgId, soDocId
        });
        } catch (Exception e) {
            e.printStackTrace();
        }
        return 0;
    }


    /**
     * ##################################################################################################################################################
     * PAGEFLOW PARAMETERS
     */


    /**getting page flow scope parameter methods.*/

    public Integer getSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC }").toString());
    }

    public String getCldId() {
        return (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
    }

    public String getOrgId() {
        return (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
    }

    public String getHoOrgId() {
        return (resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
    }

    public Integer getUsrId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
    }

    public String getSlsDocId() {
        return (resolvEl("#{pageFlowScope.SLS_DOC_ID}") == null ? null :
                resolvEl("#{pageFlowScope.SLS_DOC_ID}").toString());
    }

    public String getProductId() {
        return (resolvEl("#{pageFlowScope.SLS_ITM_ID}").toString());
    }

    public oracle.jbo.domain.Timestamp getSlsDlvDt() {
        return (resolvEl("#{pageFlowScope.DLV_DT}") == null ? null :
                (oracle.jbo.domain.Timestamp) resolvEl("#{pageFlowScope.SLS_DLV_DT}"));
    }


    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext) == null ? null : valueExp.getValue(elContext);

        return Message;
    }

    /**
     * Container's getter for DualSalesOrderSearch1.
     * @return DualSalesOrderSearch1
     */
    public ViewObjectImpl getDualSalesOrderSearch() {
        return (ViewObjectImpl) findViewObject("DualSalesOrderSearch");
    }


    /**
     * Container's getter for ViewSoSearchDetails1.
     * @return ViewSoSearchDetails1
     */
    public ViewObjectImpl getViewSoSearchDetails() {
        return (ViewObjectImpl) findViewObject("ViewSoSearchDetails");
    }

    /**
     * Container's getter for ViewPdoDetails1.
     * @return ViewPdoDetails1
     */
    public ViewObjectImpl getViewPdoDetails() {
        return (ViewObjectImpl) findViewObject("ViewPdoDetails");
    }

    /**
     * Container's getter for ViewPdoOpDetails1.
     * @return ViewPdoOpDetails1
     */
    public ViewObjectImpl getViewPdoOpDetails() {
        return (ViewObjectImpl) findViewObject("ViewPdoOpDetails");
    }

    /**
     * Container's getter for PdoDetailsToPdoOpDetailsVL1.
     * @return PdoDetailsToPdoOpDetailsVL1
     */
    public ViewLinkImpl getPdoDetailsToPdoOpDetailsVL() {
        return (ViewLinkImpl) findViewLink("PdoDetailsToPdoOpDetailsVL");
    }

    /**
     * Container's getter for ViewPdoOpItmDetails1.
     * @return ViewPdoOpItmDetails1
     */
    public ViewObjectImpl getViewPdoOpItmDetails() {
        return (ViewObjectImpl) findViewObject("ViewPdoOpItmDetails");
    }

    /**
     * Container's getter for PdoOpDetailsToPdoOpItmDetailsVL1.
     * @return PdoOpDetailsToPdoOpItmDetailsVL1
     */
    public ViewLinkImpl getPdoOpDetailsToPdoOpItmDetailsVL() {
        return (ViewLinkImpl) findViewLink("PdoOpDetailsToPdoOpItmDetailsVL");
    }

    /**
     * Container's getter for ViewMnfComItemDetails1.
     * @return ViewMnfComItemDetails1
     */
    public ViewObjectImpl getViewMnfComItemDetails() {
        return (ViewObjectImpl) findViewObject("ViewMnfComItemDetails");
    }

    /**
     * Container's getter for ViewMnfCompletedPdoDetails1.
     * @return ViewMnfCompletedPdoDetails1
     */
    public ViewObjectImpl getViewMnfCompletedPdoDetails() {
        return (ViewObjectImpl) findViewObject("ViewMnfCompletedPdoDetails");
    }

    /**
     * Container's getter for ViewTotalItemCount1.
     * @return ViewTotalItemCount1
     */
    public ViewObjectImpl getViewTotalItemCount() {
        return (ViewObjectImpl) findViewObject("ViewTotalItemCount");
    }

    /**
     * Container's getter for ViewPdoOpr1.
     * @return ViewPdoOpr1
     */
    public ViewObjectImpl getViewPdoOpr() {
        return (ViewObjectImpl) findViewObject("ViewPdoOpr");
    }

    /**
     * Container's getter for ViewInProcessDetails1.
     * @return ViewInProcessDetails1
     */
    public ViewObjectImpl getViewInProcessDetails() {
        return (ViewObjectImpl) findViewObject("ViewInProcessDetails");
    }

    /**
     * Container's getter for VIEWJobCardDetails1.
     * @return VIEWJobCardDetails1
     */
    public ViewObjectImpl getVIEWJobCardDetails() {
        return (ViewObjectImpl) findViewObject("VIEWJobCardDetails");
    }

    /**
     * Container's getter for ViewJeDetails1.
     * @return ViewJeDetails1
     */
    public ViewObjectImpl getViewJeDetails() {
        return (ViewObjectImpl) findViewObject("ViewJeDetails");
    }

    /**
     * Container's getter for ViewQcDetails1.
     * @return ViewQcDetails1
     */
    public ViewObjectImpl getViewQcDetails() {
        return (ViewObjectImpl) findViewObject("ViewQcDetails");
    }

    /**
     * Container's getter for ViewItemReceptDetail1.
     * @return ViewItemReceptDetail1
     */
    public ViewObjectImpl getViewItemReceptDetail() {
        return (ViewObjectImpl) findViewObject("ViewItemReceptDetail");
    }

    /**
     * Container's getter for ViewShipDetails1.
     * @return ViewShipDetails1
     */
    public ViewObjectImpl getViewShipDetails() {
        return (ViewObjectImpl) findViewObject("ViewShipDetails");
    }

    /**
     * Container's getter for ViewInvoiceDetails1.
     * @return ViewInvoiceDetails1
     */
    public ViewObjectImpl getViewInvoiceDetails() {
        return (ViewObjectImpl) findViewObject("ViewInvoiceDetails");
    }

    /**
     * Container's getter for ViewInvoicePending1.
     * @return ViewInvoicePending1
     */
    public ViewObjectImpl getViewInvoicePending() {
        return (ViewObjectImpl) findViewObject("ViewInvoicePending");
    }

    public void filterOpportunity() {
        System.out.println("in filter opportunity method in am");
        Row r = getViewSoSearchDetails().getCurrentRow();
        String sodocId = r.getAttribute("SlsDocId") == null ? null : r.getAttribute("SlsDocId").toString();
        System.out.println("doc id *******" + sodocId);
        getViewOpportunityVO().setNamedWhereClauseParam("BINDCLDID", EbizParams.GLBL_APP_CLD_ID());
        getViewOpportunityVO().setNamedWhereClauseParam("BINDHOORGID", EbizParams.GLBL_HO_ORG_ID());
        getViewOpportunityVO().setNamedWhereClauseParam("BINDSLOCID", EbizParams.GLBL_APP_SERV_LOC());
        getViewOpportunityVO().setNamedWhereClauseParam("BINDORGID", EbizParams.GLBL_APP_USR_ORG());
        getViewOpportunityVO().setNamedWhereClauseParam("BINDSODOCID", sodocId);
        getViewOpportunityVO().executeQuery();

    }

    public void filterQuotation() {
        System.out.println("in filter quotation method in am");
        Row r = getViewSoSearchDetails().getCurrentRow();
        String sodocId = r.getAttribute("SlsDocId") == null ? null : r.getAttribute("SlsDocId").toString();
        System.out.println("doc id *******" + sodocId);
        getViewQuotationDetailVO().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getViewQuotationDetailVO().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getViewQuotationDetailVO().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getViewQuotationDetailVO().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getViewQuotationDetailVO().setNamedWhereClauseParam("BindSoDocId", sodocId);
        getViewQuotationDetailVO().executeQuery();
    }

    public void filterSalesDeliverySchedule(String soDocId) {
        System.out.println("in filter SalesDeliverySchedule method in am");
        System.out.println("Parameterized doc value  ------ " + soDocId);
        if (soDocId == null) {
            Row r = getViewSoSearchDetails().getCurrentRow();
            soDocId = r.getAttribute("SlsDocId") == null ? null : r.getAttribute("SlsDocId").toString();
        }
        //
        System.out.println("doc id *******" + soDocId);

        getViewSalsesDeliveryScheduleVO().setNamedWhereClauseParam("BINDCLDID", EbizParams.GLBL_APP_CLD_ID());
        getViewSalsesDeliveryScheduleVO().setNamedWhereClauseParam("BINDHOORGID", EbizParams.GLBL_HO_ORG_ID());
        getViewSalsesDeliveryScheduleVO().setNamedWhereClauseParam("BINDSLOCID", EbizParams.GLBL_APP_SERV_LOC());
        getViewSalsesDeliveryScheduleVO().setNamedWhereClauseParam("BINDORGID", EbizParams.GLBL_APP_USR_ORG());
        getViewSalsesDeliveryScheduleVO().setNamedWhereClauseParam("BINDSODOCID", soDocId);
        getViewSalsesDeliveryScheduleVO().executeQuery();
    }


    /**
     * Container's getter for ViewQuotationDetailVO1.
     * @return ViewQuotationDetailVO1
     */
    public ViewObjectImpl getViewQuotationDetailVO() {
        return (ViewObjectImpl) findViewObject("ViewQuotationDetailVO");
    }

    /**
     * Container's getter for ViewOpportunityVO1.
     * @return ViewOpportunityVO1
     */
    public ViewObjectImpl getViewOpportunityVO() {
        return (ViewObjectImpl) findViewObject("ViewOpportunityVO");

    }

    /**
     * fn_mnf_qot_oppr_tracking(
    p_cld_id    VARCHAR2,
    p_sloc_id   NUMBER,
    p_ho_org_id VARCHAR2,
    p_org_id    VARCHAR2,
    p_so_doc_id VARCHAR2 )
     */

    public Integer oppQuotTracking(String soDocId) {
        Object retval;
        Integer ret = 99;
        System.out.println("Sodoc===============================" + soDocId);
        retval = ADFModelUtils.callFunction(this, new StringBuilder("fn_mnf_qot_oppr_tracking(?,?,?,?,?)"), new Object[] {
                                            EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                            EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(), soDocId
        }, Types.INTEGER);
        System.out.println("retval ::: " + retval);
        ret = retval == null ? 99 : (Integer) retval;
        return ret;
    }


    /** condition for mnf cycle exist or not *******/

    public String isMnfCycleExist(String soDocId) {
        System.out.println(" **** is mnf cycle exist mrthod in am **********");

        Row r = getViewSoSearchDetails().getCurrentRow();
        if (r != null && soDocId == null) {
            soDocId = r.getAttribute("SlsDocId") == null ? null : r.getAttribute("SlsDocId").toString();
            System.out.println("doc id *******" + soDocId);
        }

        String result = "N";
        Object o;

        try {
            o = ADFModelUtils.callFunction(this, new StringBuilder("fn_mnf_so_pdo_yes_no(?,?,?,?,?)"), new Object[] {
                                           EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                           EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(), soDocId
            }, Types.VARCHAR);

            result = o == null ? "N" : o.toString();

        } catch (Exception e) {
            e.printStackTrace();
        }
        return result;
    }

    /********* to display opportunity graph ******/

    public void displayOppGraph() {
        Row r = getViewSoSearchDetails().getCurrentRow();
        String itemId = r.getAttribute("ItmId") == null ? null : r.getAttribute("ItmId").toString();
        System.out.println("itemId *******" + itemId);
        getGraphOpportunityItemVO().setNamedWhereClauseParam("BINDCLDID", EbizParams.GLBL_APP_CLD_ID());
        getGraphOpportunityItemVO().setNamedWhereClauseParam("BINDHOORGID", EbizParams.GLBL_HO_ORG_ID());
        getGraphOpportunityItemVO().setNamedWhereClauseParam("BINDSLOCID", EbizParams.GLBL_APP_SERV_LOC());
        getGraphOpportunityItemVO().setNamedWhereClauseParam("BINDORGID", EbizParams.GLBL_APP_USR_ORG());
        getGraphOpportunityItemVO().setNamedWhereClauseParam("BINDITEMID", itemId);
        getGraphOpportunityItemVO().executeQuery();
    }


    /**
     * Container's getter for ViewSalsesDeliveryScheduleVO1.
     * @return ViewSalsesDeliveryScheduleVO1
     */
    public ViewObjectImpl getViewSalsesDeliveryScheduleVO() {
        return (ViewObjectImpl) findViewObject("ViewSalsesDeliveryScheduleVO");
    }

    /**
     * Container's getter for GraphOpportunityItemVO1.
     * @return GraphOpportunityItemVO1
     */
    public ViewObjectImpl getGraphOpportunityItemVO() {
        return (ViewObjectImpl) findViewObject("GraphOpportunityItemVO");
    }

    /**
     * Container's getter for ViewCompleteShipmentDetailVO1.
     * @return ViewCompleteShipmentDetailVO1
     */
    public ViewObjectImpl getViewCompleteShipmentDetailVO() {
        return (ViewObjectImpl) findViewObject("ViewCompleteShipmentDetailVO");
    }

    /******** Method to find out Transpotation is being used by current organization or not *********/

    public Boolean checkProfileValues() {
        Boolean ck = false;
        try {
            String chkCol =
                (String) ADFModelUtils.callFunction(this, new StringBuilder("SLS.fn_sls_chk_org_prf(?,?,?,?)"), new Object[] {
                                                    EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                    EbizParams.GLBL_APP_USR_ORG(), "USE_TRNPT_MDL"
            }, Types.VARCHAR);

            if (chkCol == null) {
                ck = false;
            } else if (chkCol.equalsIgnoreCase("Y")) {
                ck = true;

            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return ck;
    }

    /********* to display Complete Shipment Detail *******/

    public void filterCompleteShipmentDetail(String shipDocId) {
        System.out.println("in filter complete shipment detail method @@@@@@@@@@");
        getViewCompleteShipmentDetailVO().setNamedWhereClauseParam("BINDCLDID", EbizParams.GLBL_APP_CLD_ID());
        getViewCompleteShipmentDetailVO().setNamedWhereClauseParam("BINDHOORGID", EbizParams.GLBL_HO_ORG_ID());
        getViewCompleteShipmentDetailVO().setNamedWhereClauseParam("BINDSLOCID", EbizParams.GLBL_APP_SERV_LOC());
        getViewCompleteShipmentDetailVO().setNamedWhereClauseParam("BINDORGID", EbizParams.GLBL_APP_USR_ORG());
        getViewCompleteShipmentDetailVO().setNamedWhereClauseParam("BINDSHIPID", shipDocId);
        getViewCompleteShipmentDetailVO().executeQuery();
    }

    public void completeShipmentFilterDetail(String shipDocId) {
        System.out.println("In Shipment Complete Filter VO");
        ViewObjectImpl completeShipDetail = this.getViewCompleteShipmentDetailVO();
        completeShipDetail.setNamedWhereClauseParam("BINDCLDID", EbizParams.GLBL_APP_CLD_ID());
        completeShipDetail.setNamedWhereClauseParam("BINDHOORGID", EbizParams.GLBL_HO_ORG_ID());
        completeShipDetail.setNamedWhereClauseParam("BINDSLOCID", EbizParams.GLBL_APP_SERV_LOC());
        completeShipDetail.setNamedWhereClauseParam("BINDORGID", EbizParams.GLBL_APP_USR_ORG());
        completeShipDetail.setNamedWhereClauseParam("BINDSHIPID", shipDocId);
        completeShipDetail.executeQuery();
    }

}


