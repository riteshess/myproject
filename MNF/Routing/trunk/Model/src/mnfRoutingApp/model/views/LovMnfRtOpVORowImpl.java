package mnfRoutingApp.model.views;

import java.sql.Timestamp;

import mnfRoutingApp.model.services.MNFRoutingAMImpl;
import mnfRoutingApp.model.views.common.LovMnfRtOpVORow;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 10 16:32:04 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovMnfRtOpVORowImpl extends ViewRowImpl implements LovMnfRtOpVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        OpId,
        OpSrNo,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcId,
        DocId,
        OpLocType,
        TransOpNm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPLOCTYPE = AttributesEnum.OpLocType.index();
    public static final int TRANSOPNM = AttributesEnum.TransOpNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovMnfRtOpVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpId.
     * @return the OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNo.
     * @return the OpSrNo
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for the calculated attribute WcId.
     * @return the WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpLocType.
     * @return the OpLocType
     */
    public Integer getOpLocType() {
        return (Integer) getAttributeInternal(OPLOCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpNm.
     * @return the TransOpNm
     */
    public String getTransOpNm() {
        System.out.println("getter invoked");
        MNFRoutingAMImpl mnfrt = (MNFRoutingAMImpl)this.getApplicationModule();
        ViewObjectImpl op=mnfrt.getLOVOperationDescVO1();
        op.setNamedWhereClauseParam("BindCldId",getCldId());
        op.setNamedWhereClauseParam("BindSlcId",getSlocId());
        op.setNamedWhereClauseParam("BindHoOrgId",getHoOrgId());
        op.executeQuery();
        System.out.println("getOpId::"+getOpId());
        if(getOpId()!=null) {
            Row[] r1=op.getFilteredRows("DocId",getOpId());
            System.out.println("Value of r1:::"+r1.length);
            if(r1.length>0) {
                
                System.out.println("Operation Name::"+r1[0].getAttribute("OpDesc").toString());
                return r1[0].getAttribute("OpDesc").toString();
            }
            
        }
        return (String) getAttributeInternal(TRANSOPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpNm.
     * @param value value to set the  TransOpNm
     */
    public void setTransOpNm(String value) {
        setAttributeInternal(TRANSOPNM, value);
    }
}

