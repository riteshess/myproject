package mnfRoutingApp.model.views;

import mnfRoutingApp.model.entities.MnfRtOpEOImpl;

import mnfRoutingApp.model.services.MNFRoutingAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 14 15:49:16 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfRtOpVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFRTOPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        OpId,
        OpSrNo,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcId,
        DocId,
        OpNm,
        OpNo,
        WcNm,
        TransRowKey,
        OpLocType,
        MnfRtOpPred,
        LOVOrganizationVO,
        LOVUserVO,
        LOVUserVO1,
        LOVOperationVO1,
        LOVWorkCenterVO1,
        LOVOpExeTypVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPNM = AttributesEnum.OpNm.index();
    public static final int OPNO = AttributesEnum.OpNo.index();
    public static final int WCNM = AttributesEnum.WcNm.index();
    public static final int TRANSROWKEY = AttributesEnum.TransRowKey.index();
    public static final int OPLOCTYPE = AttributesEnum.OpLocType.index();
    public static final int MNFRTOPPRED = AttributesEnum.MnfRtOpPred.index();
    public static final int LOVORGANIZATIONVO = AttributesEnum.LOVOrganizationVO.index();
    public static final int LOVUSERVO = AttributesEnum.LOVUserVO.index();
    public static final int LOVUSERVO1 = AttributesEnum.LOVUserVO1.index();
    public static final int LOVOPERATIONVO1 = AttributesEnum.LOVOperationVO1.index();
    public static final int LOVWORKCENTERVO1 = AttributesEnum.LOVWorkCenterVO1.index();
    public static final int LOVOPEXETYPVO1 = AttributesEnum.LOVOpExeTypVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfRtOpVORowImpl() {
        // System.out.println("MnfRtOpVORowImpl intialized");
    }

    /**
     * Gets MnfRtOpEO entity object.
     * @return the MnfRtOpEO
     */
    public MnfRtOpEOImpl getMnfRtOpEO() {
        return (MnfRtOpEOImpl) getEntity(ENTITY_MNFRTOPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        //System.out.println("At VO IMPOL  " + OPID);
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }


    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WC_ID using the alias name WcId.
     * @return the WC_ID
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_ID using the alias name WcId.
     * @param value value to set the WC_ID
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute OpNm.
     * @return the OpNm
     */
    public String getOpNm() {

        if (getOpId() != null) {

            /* if (getAM().getLOVOperation1().getFilteredRows("DocId", getOpId()).length > 0) {
                return (getAM().getLOVOperation1().getFilteredRows("DocId",
                                                                   getOpId()))[0].getAttribute("OpDesc").toString();
            } */
            if (getAM().getLOVOperationDescVO1().getFilteredRows("DocId", getOpId()).length > 0) {
                return (getAM().getLOVOperationDescVO1().getFilteredRows("DocId",
                                                                   getOpId()))[0].getAttribute("OpDesc").toString();
            }
        }
        return (String) getAttributeInternal(OPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpNm.
     * @param value value to set the  OpNm
     */
    public void setOpNm(String value) {
        setAttributeInternal(OPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpNo.
     * @return the OpNo
     */
    public String getOpNo() {
        if (getOpId() != null) {

            if (getAM().getLOVOperation1().getFilteredRows("DocId", getOpId()).length > 0) {
                //System.out.println("opid " + (getAM().getLOVOperation1().getFilteredRows("DocId",getOpId()))[0].getAttribute("OpId").toString());
                return (getAM().getLOVOperation1().getFilteredRows("DocId",
                                                                   getOpId()))[0].getAttribute("OpId").toString();
            }
        }
        return (String) getAttributeInternal(OPNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpNo.
     * @param value value to set the  OpNo
     */
    public void setOpNo(String value) {
        setAttributeInternal(OPNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WcNm.
     * @return the WcNm
     */
    public String getWcNm() {
        if (getWcId() != null) {
            //System.out.println("wcid"+getWcId());
            getAM().getLOVWorkCenter().setNamedWhereClauseParam("BindOpDocId", getOpId());
            getAM().getLOVWorkCenter().executeQuery();
            if (getAM().getLOVWorkCenter().getFilteredRows("WcId", getWcId()).length > 0) {
                return (getAM().getLOVWorkCenter().getFilteredRows("WcId",
                                                                   getWcId()))[0].getAttribute("WcDesc").toString();
            }
        }
        // return (String) getAttributeInternal(WCNM);
        return null;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WcNm.
     * @param value value to set the  WcNm
     */
    public void setWcNm(String value) {
        setAttributeInternal(WCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRowKey.
     * @return the TransRowKey
     */
    public Object getTransRowKey() {
        return getKey();
        //return (Object) getAttributeInternal(TRANSROWKEY);
    }

    /**
     * Gets the attribute value for OP_LOC_TYPE using the alias name OpLocType.
     * @return the OP_LOC_TYPE
     */
    public Integer getOpLocType() {
        return (Integer) getAttributeInternal(OPLOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_LOC_TYPE using the alias name OpLocType.
     * @param value value to set the OP_LOC_TYPE
     */
    public void setOpLocType(Integer value) {
        setAttributeInternal(OPLOCTYPE, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRtOpPred.
     */
    public RowIterator getMnfRtOpPred() {
        return (RowIterator) getAttributeInternal(MNFRTOPPRED);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrganizationVO.
     */
    public RowSet getLOVOrganizationVO() {
        return (RowSet) getAttributeInternal(LOVORGANIZATIONVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserVO.
     */
    public RowSet getLOVUserVO() {
        return (RowSet) getAttributeInternal(LOVUSERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserVO1.
     */
    public RowSet getLOVUserVO1() {
        return (RowSet) getAttributeInternal(LOVUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationVO1.
     */
    public RowSet getLOVOperationVO1() {
        return (RowSet) getAttributeInternal(LOVOPERATIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWorkCenterVO1.
     */
    public RowSet getLOVWorkCenterVO1() {
        return (RowSet) getAttributeInternal(LOVWORKCENTERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpExeTypVO1.
     */
    public RowSet getLOVOpExeTypVO1() {
        return (RowSet) getAttributeInternal(LOVOPEXETYPVO1);
    }

    protected MNFRoutingAMImpl getAM() {
        return (MNFRoutingAMImpl) getApplicationModule();
    }

}

