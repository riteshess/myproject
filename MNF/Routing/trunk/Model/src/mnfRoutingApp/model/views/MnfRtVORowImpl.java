package mnfRoutingApp.model.views;

import mnfRoutingApp.model.entities.MnfRtEOImpl;

import mnfRoutingApp.model.services.MNFRoutingAMImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 22 17:46:39 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfRtVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFRTEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        RtActv,
        RtDesc,
        RtId,
        RtInacttvDt,
        RtInactvReason,
        RtLegCd,
        RtRevNo,
        RtRmrk,
        RtType,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        DocId,
        RtRevDt,
        RtStat,
        RtMode,
        RefRtId,
        RtBasis,
        TransPreviousRt,
        RtExecType,
        RtFreezePred,
        MnfRtOp,
        MnfRtAttch,
        OrgMnfRt,
        LOVOrganizationVO,
        LOVUserVO,
        LOVUserVO1,
        LOVRouteTypVO,
        LOVStatusVO,
        LOVWfModeVO,
        LOVBasisVO,
        LOVPreviousRtVO,
        LOVOpExeTypVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int RTACTV = AttributesEnum.RtActv.index();
    public static final int RTDESC = AttributesEnum.RtDesc.index();
    public static final int RTID = AttributesEnum.RtId.index();
    public static final int RTINACTTVDT = AttributesEnum.RtInacttvDt.index();
    public static final int RTINACTVREASON = AttributesEnum.RtInactvReason.index();
    public static final int RTLEGCD = AttributesEnum.RtLegCd.index();
    public static final int RTREVNO = AttributesEnum.RtRevNo.index();
    public static final int RTRMRK = AttributesEnum.RtRmrk.index();
    public static final int RTTYPE = AttributesEnum.RtType.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int RTREVDT = AttributesEnum.RtRevDt.index();
    public static final int RTSTAT = AttributesEnum.RtStat.index();
    public static final int RTMODE = AttributesEnum.RtMode.index();
    public static final int REFRTID = AttributesEnum.RefRtId.index();
    public static final int RTBASIS = AttributesEnum.RtBasis.index();
    public static final int TRANSPREVIOUSRT = AttributesEnum.TransPreviousRt.index();
    public static final int RTEXECTYPE = AttributesEnum.RtExecType.index();
    public static final int RTFREEZEPRED = AttributesEnum.RtFreezePred.index();
    public static final int MNFRTOP = AttributesEnum.MnfRtOp.index();
    public static final int MNFRTATTCH = AttributesEnum.MnfRtAttch.index();
    public static final int ORGMNFRT = AttributesEnum.OrgMnfRt.index();
    public static final int LOVORGANIZATIONVO = AttributesEnum.LOVOrganizationVO.index();
    public static final int LOVUSERVO = AttributesEnum.LOVUserVO.index();
    public static final int LOVUSERVO1 = AttributesEnum.LOVUserVO1.index();
    public static final int LOVROUTETYPVO = AttributesEnum.LOVRouteTypVO.index();
    public static final int LOVSTATUSVO = AttributesEnum.LOVStatusVO.index();
    public static final int LOVWFMODEVO = AttributesEnum.LOVWfModeVO.index();
    public static final int LOVBASISVO = AttributesEnum.LOVBasisVO.index();
    public static final int LOVPREVIOUSRTVO = AttributesEnum.LOVPreviousRtVO.index();
    public static final int LOVOPEXETYPVO1 = AttributesEnum.LOVOpExeTypVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfRtVORowImpl() {
    }

    /**
     * Gets MnfRtEO entity object.
     * @return the MnfRtEO
     */
    public MnfRtEOImpl getMnfRtEO() {
        return (MnfRtEOImpl) getEntity(ENTITY_MNFRTEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for RT_ACTV using the alias name RtActv.
     * @return the RT_ACTV
     */
    public String getRtActv() {
        return (String) getAttributeInternal(RTACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_ACTV using the alias name RtActv.
     * @param value value to set the RT_ACTV
     */
    public void setRtActv(String value) {
        setAttributeInternal(RTACTV, value);
    }

    /**
     * Gets the attribute value for RT_DESC using the alias name RtDesc.
     * @return the RT_DESC
     */
    public String getRtDesc() {
        return (String) getAttributeInternal(RTDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_DESC using the alias name RtDesc.
     * @param value value to set the RT_DESC
     */
    public void setRtDesc(String value) {
        setAttributeInternal(RTDESC, value);
    }

    /**
     * Gets the attribute value for RT_ID using the alias name RtId.
     * @return the RT_ID
     */
    public String getRtId() {
        return (String) getAttributeInternal(RTID);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_ID using the alias name RtId.
     * @param value value to set the RT_ID
     */
    public void setRtId(String value) {
        setAttributeInternal(RTID, value);
    }

    /**
     * Gets the attribute value for RT_INACTTV_DT using the alias name RtInacttvDt.
     * @return the RT_INACTTV_DT
     */
    public Timestamp getRtInacttvDt() {
        return (Timestamp) getAttributeInternal(RTINACTTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_INACTTV_DT using the alias name RtInacttvDt.
     * @param value value to set the RT_INACTTV_DT
     */
    public void setRtInacttvDt(Timestamp value) {
        setAttributeInternal(RTINACTTVDT, value);
    }

    /**
     * Gets the attribute value for RT_INACTV_REASON using the alias name RtInactvReason.
     * @return the RT_INACTV_REASON
     */
    public String getRtInactvReason() {
        return (String) getAttributeInternal(RTINACTVREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_INACTV_REASON using the alias name RtInactvReason.
     * @param value value to set the RT_INACTV_REASON
     */
    public void setRtInactvReason(String value) {
        setAttributeInternal(RTINACTVREASON, value);
    }

    /**
     * Gets the attribute value for RT_LEG_CD using the alias name RtLegCd.
     * @return the RT_LEG_CD
     */
    public String getRtLegCd() {
        return (String) getAttributeInternal(RTLEGCD);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_LEG_CD using the alias name RtLegCd.
     * @param value value to set the RT_LEG_CD
     */
    public void setRtLegCd(String value) {
        setAttributeInternal(RTLEGCD, value);
    }

    /**
     * Gets the attribute value for RT_REV_NO using the alias name RtRevNo.
     * @return the RT_REV_NO
     */
    public Integer getRtRevNo() {
        return (Integer) getAttributeInternal(RTREVNO);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_REV_NO using the alias name RtRevNo.
     * @param value value to set the RT_REV_NO
     */
    public void setRtRevNo(Integer value) {
        setAttributeInternal(RTREVNO, value);
    }

    /**
     * Gets the attribute value for RT_RMRK using the alias name RtRmrk.
     * @return the RT_RMRK
     */
    public String getRtRmrk() {
        return (String) getAttributeInternal(RTRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_RMRK using the alias name RtRmrk.
     * @param value value to set the RT_RMRK
     */
    public void setRtRmrk(String value) {
        setAttributeInternal(RTRMRK, value);
    }

    /**
     * Gets the attribute value for RT_TYPE using the alias name RtType.
     * @return the RT_TYPE
     */
    public Integer getRtType() {
        return (Integer) getAttributeInternal(RTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_TYPE using the alias name RtType.
     * @param value value to set the RT_TYPE
     */
    public void setRtType(Integer value) {
        setAttributeInternal(RTTYPE, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for RT_REV_DT using the alias name RtRevDt.
     * @return the RT_REV_DT
     */
    public Timestamp getRtRevDt() {
        return (Timestamp) getAttributeInternal(RTREVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_REV_DT using the alias name RtRevDt.
     * @param value value to set the RT_REV_DT
     */
    public void setRtRevDt(Timestamp value) {
        setAttributeInternal(RTREVDT, value);
    }

    /**
     * Gets the attribute value for RT_STAT using the alias name RtStat.
     * @return the RT_STAT
     */
    public Integer getRtStat() {
        return (Integer) getAttributeInternal(RTSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_STAT using the alias name RtStat.
     * @param value value to set the RT_STAT
     */
    public void setRtStat(Integer value) {
        setAttributeInternal(RTSTAT, value);
    }

    /**
     * Gets the attribute value for RT_MODE using the alias name RtMode.
     * @return the RT_MODE
     */
    public Integer getRtMode() {
        return (Integer) getAttributeInternal(RTMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_MODE using the alias name RtMode.
     * @param value value to set the RT_MODE
     */
    public void setRtMode(Integer value) {
        setAttributeInternal(RTMODE, value);
    }

    /**
     * Gets the attribute value for REF_RT_ID using the alias name RefRtId.
     * @return the REF_RT_ID
     */
    public String getRefRtId() {
        return (String) getAttributeInternal(REFRTID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_RT_ID using the alias name RefRtId.
     * @param value value to set the REF_RT_ID
     */
    public void setRefRtId(String value) {
        setAttributeInternal(REFRTID, value);
    }

    /**
     * Gets the attribute value for RT_BASIS using the alias name RtBasis.
     * @return the RT_BASIS
     */
    public Integer getRtBasis() {
        return (Integer) getAttributeInternal(RTBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_BASIS using the alias name RtBasis.
     * @param value value to set the RT_BASIS
     */
    public void setRtBasis(Integer value) {
        setAttributeInternal(RTBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPreviousRt.
     * @return the TransPreviousRt
     */
    public String getTransPreviousRt() {
        if (getRefRtId() != null) {

            if (getAM().getLOVPreviousRtVO().getFilteredRows("DocId", getRefRtId()).length > 0) {
                return (getAM().getLOVPreviousRtVO().getFilteredRows("DocId",
                                                                   getRefRtId()))[0].getAttribute("RtDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSPREVIOUSRT);
    }
    protected MNFRoutingAMImpl getAM() {
        return (MNFRoutingAMImpl) getApplicationModule();
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPreviousRt.
     * @param value value to set the  TransPreviousRt
     */
    public void setTransPreviousRt(String value) {
        setAttributeInternal(TRANSPREVIOUSRT, value);
    }

    /**
     * Gets the attribute value for RT_EXEC_TYPE using the alias name RtExecType.
     * @return the RT_EXEC_TYPE
     */
    public Integer getRtExecType() {
        return (Integer) getAttributeInternal(RTEXECTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_EXEC_TYPE using the alias name RtExecType.
     * @param value value to set the RT_EXEC_TYPE
     */
    public void setRtExecType(Integer value) {
        setAttributeInternal(RTEXECTYPE, value);
    }

    /**
     * Gets the attribute value for RT_FREEZE_PRED using the alias name RtFreezePred.
     * @return the RT_FREEZE_PRED
     */
    public String getRtFreezePred() {
        return (String) getAttributeInternal(RTFREEZEPRED);
    }

    /**
     * Sets <code>value</code> as attribute value for RT_FREEZE_PRED using the alias name RtFreezePred.
     * @param value value to set the RT_FREEZE_PRED
     */
    public void setRtFreezePred(String value) {
        setAttributeInternal(RTFREEZEPRED, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRtOp.
     */
    public RowIterator getMnfRtOp() {
        return (RowIterator) getAttributeInternal(MNFRTOP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRtAttch.
     */
    public RowIterator getMnfRtAttch() {
        return (RowIterator) getAttributeInternal(MNFRTATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgMnfRt.
     */
    public RowIterator getOrgMnfRt() {
        return (RowIterator) getAttributeInternal(ORGMNFRT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrganizationVO.
     */
    public RowSet getLOVOrganizationVO() {
        return (RowSet) getAttributeInternal(LOVORGANIZATIONVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserVO.
     */
    public RowSet getLOVUserVO() {
        return (RowSet) getAttributeInternal(LOVUSERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserVO1.
     */
    public RowSet getLOVUserVO1() {
        return (RowSet) getAttributeInternal(LOVUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRouteTypVO.
     */
    public RowSet getLOVRouteTypVO() {
        return (RowSet) getAttributeInternal(LOVROUTETYPVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStatusVO.
     */
    public RowSet getLOVStatusVO() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWfModeVO.
     */
    public RowSet getLOVWfModeVO() {
        return (RowSet) getAttributeInternal(LOVWFMODEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBasisVO.
     */
    public RowSet getLOVBasisVO() {
        return (RowSet) getAttributeInternal(LOVBASISVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVPreviousRtVO.
     */
    public RowSet getLOVPreviousRtVO() {
        return (RowSet) getAttributeInternal(LOVPREVIOUSRTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpExeTypVO1.
     */
    public RowSet getLOVOpExeTypVO1() {
        return (RowSet) getAttributeInternal(LOVOPEXETYPVO1);
    }
}

