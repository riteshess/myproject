package mnfoperationApp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mnfoperationApp.model.entities.MnfOpEoEOImpl;
import mnfoperationApp.model.module.MNFOperationAppAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Nov 04 23:09:45 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfOpEoVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFOPEOEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        EoActv,
        EoId,
        EoInactvDt,
        EoInactvReason,
        HoOrgId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransScDisp,
        TransOrgId,
        DfltEoFlg,
        LOVAppEmpNmVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOACTV = AttributesEnum.EoActv.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EOINACTVDT = AttributesEnum.EoInactvDt.index();
    public static final int EOINACTVREASON = AttributesEnum.EoInactvReason.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSSCDISP = AttributesEnum.TransScDisp.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int DFLTEOFLG = AttributesEnum.DfltEoFlg.index();
    public static final int LOVAPPEMPNMVO1 = AttributesEnum.LOVAppEmpNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfOpEoVORowImpl() {
    }

    /**
     * Gets MnfOpEoEO entity object.
     * @return the MnfOpEoEO
     */
    public MnfOpEoEOImpl getMnfOpEoEO() {
        return (MnfOpEoEOImpl) getEntity(ENTITY_MNFOPEOEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ACTV using the alias name EoActv.
     * @return the EO_ACTV
     */
    public String getEoActv() {
        return (String) getAttributeInternal(EOACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ACTV using the alias name EoActv.
     * @param value value to set the EO_ACTV
     */
    public void setEoActv(String value) {
        setAttributeInternal(EOACTV, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public String getEoId() {
        return (String) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(String value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for EO_INACTV_DT using the alias name EoInactvDt.
     * @return the EO_INACTV_DT
     */
    public Timestamp getEoInactvDt() {
        return (Timestamp) getAttributeInternal(EOINACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_INACTV_DT using the alias name EoInactvDt.
     * @param value value to set the EO_INACTV_DT
     */
    public void setEoInactvDt(Timestamp value) {
        setAttributeInternal(EOINACTVDT, value);
    }

    /**
     * Gets the attribute value for EO_INACTV_REASON using the alias name EoInactvReason.
     * @return the EO_INACTV_REASON
     */
    public String getEoInactvReason() {
        return (String) getAttributeInternal(EOINACTVREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_INACTV_REASON using the alias name EoInactvReason.
     * @param value value to set the EO_INACTV_REASON
     */
    public void setEoInactvReason(String value) {
        setAttributeInternal(EOINACTVREASON, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransScDisp.
     * @return the TransScDisp
     */
    public String getTransScDisp() {
        if (this.getEoId() != null) {
            ViewObjectImpl impl = getAm().getLOVAppEMPVw1();
            impl.setNamedWhereClauseParam("EoIdBind", this.getEoId());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            impl.setNamedWhereClauseParam("OrgIdBind", this.getTransOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            //System.out.println("Count is : "+allRowsInRange.length);
            if (allRowsInRange.length > 0) {
                Object a = allRowsInRange[0].getAttribute("EoNm");
                String s = (a == null ? null : a.toString());
                return s;
            }
        }

        return (String) getAttributeInternal(TRANSSCDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScDisp.
     * @param value value to set the  TransScDisp
     */
    public void setTransScDisp(String value) {
        setAttributeInternal(TRANSSCDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        String orgid=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        return orgid;
        //return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Gets the attribute value for DFLT_EO_FLG using the alias name DfltEoFlg.
     * @return the DFLT_EO_FLG
     */
    public String getDfltEoFlg() {
        return (String) getAttributeInternal(DFLTEOFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for DFLT_EO_FLG using the alias name DfltEoFlg.
     * @param value value to set the DFLT_EO_FLG
     */
    public void setDfltEoFlg(String value) {
        setAttributeInternal(DFLTEOFLG, value);
    }

    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVAppEmpNmVO1.
     */
    public RowSet getLOVAppEmpNmVO1() {
        return (RowSet) getAttributeInternal(LOVAPPEMPNMVO1);
    }


    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFOperationAppAMImpl getAm() {
        MNFOperationAppAMImpl am = (MNFOperationAppAMImpl) resolvElDC("MNFOperationAppAMDataControl");
        return am;
    }

    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
}

