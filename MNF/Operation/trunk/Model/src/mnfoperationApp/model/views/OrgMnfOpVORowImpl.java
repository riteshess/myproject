package mnfoperationApp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mnfoperationApp.model.entities.OrgMnfOpEOImpl;

import mnfoperationApp.model.module.MNFOperationAppAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 04 11:49:13 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgMnfOpVORowImpl extends ViewRowImpl {


    public static final int ENTITY_ORGMNFOPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        HoOrgId,
        OpActv,
        OrgId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        InactvDt,
        InactvReason,
        TransOrgDesc,
        TransUsrCreate,
        LOVOrgDescNmVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OPACTV = AttributesEnum.OpActv.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int INACTVREASON = AttributesEnum.InactvReason.index();
    public static final int TRANSORGDESC = AttributesEnum.TransOrgDesc.index();
    public static final int TRANSUSRCREATE = AttributesEnum.TransUsrCreate.index();
    public static final int LOVORGDESCNMVO1 = AttributesEnum.LOVOrgDescNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgMnfOpVORowImpl() {
    }

    /**
     * Gets OrgMnfOpEO entity object.
     * @return the OrgMnfOpEO
     */
    public OrgMnfOpEOImpl getOrgMnfOpEO() {
        return (OrgMnfOpEOImpl) getEntity(ENTITY_ORGMNFOPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OP_ACTV using the alias name OpActv.
     * @return the OP_ACTV
     */
    public String getOpActv() {
        return (String) getAttributeInternal(OPACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ACTV using the alias name OpActv.
     * @param value value to set the OP_ACTV
     */
    public void setOpActv(String value) {
        setAttributeInternal(OPACTV, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for INACTV_REASON using the alias name InactvReason.
     * @return the INACTV_REASON
     */
    public String getInactvReason() {
        return (String) getAttributeInternal(INACTVREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_REASON using the alias name InactvReason.
     * @param value value to set the INACTV_REASON
     */
    public void setInactvReason(String value) {
        setAttributeInternal(INACTVREASON, value);
    }
   

    /**
     * Gets the attribute value for the calculated attribute TransOrgDesc.
     * @return the TransOrgDesc
     */
    public String getTransOrgDesc() {
         if(this.getOrgId() != null){
             ViewObjectImpl impl = getAm().getLOVOrgNm1();
             impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
             impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
             impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("OrgDesc");
                 String s = (a == null ? null : a.toString());
                 return s;
             }
         } 
        return (String) getAttributeInternal(TRANSORGDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgDesc.
     * @param value value to set the  TransOrgDesc
     */
    public void setTransOrgDesc(String value) {
        setAttributeInternal(TRANSORGDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrCreate.
     * @return the TransUsrCreate
     */
    public String getTransUsrCreate() {
            if(this.getUsrIdCreate() != null){
                 ViewObjectImpl impl = getAm().getLOVUserNm1();
                 impl.setNamedWhereClauseParam("UsrIdBind", this.getUsrIdCreate());
                 impl.setNamedWhereClauseParam("SlocIDBind", this.getSlocId());
                 impl.executeQuery(); 
                 Row[] allRowsInRange = impl.getAllRowsInRange();
                 if(allRowsInRange.length > 0){
                     Object a = allRowsInRange[0].getAttribute("UsrName");
                     String s1 = (a == null ? null : a.toString());
                     return s1;
                 }
             }
        return (String) getAttributeInternal(TRANSUSRCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrCreate.
     * @param value value to set the  TransUsrCreate
     */
    public void setTransUsrCreate(String value) {
        setAttributeInternal(TRANSUSRCREATE, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgDescNmVO1.
     */
    public RowSet getLOVOrgDescNmVO1() {
        return (RowSet) getAttributeInternal(LOVORGDESCNMVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFOperationAppAMImpl getAm() {
        MNFOperationAppAMImpl am = (MNFOperationAppAMImpl)resolvElDC("MNFOperationAppAMDataControl");
        return am;
    }
    
    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

}

