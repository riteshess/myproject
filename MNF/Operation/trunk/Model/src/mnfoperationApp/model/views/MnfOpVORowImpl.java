package mnfoperationApp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mnfoperationApp.model.entities.MnfOpEOImpl;
import mnfoperationApp.model.module.MNFOperationAppAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 05 15:42:06 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfOpVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFOPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        HoOrgId,
        OpActv,
        OpDesc,
        OpEffctvDt,
        OpId,
        OpInactvDt,
        OpInactvReason,
        OpLegCd,
        OpRevNo,
        OpRmrk,
        OpStat,
        OpType,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        OpRevDt,
        OpBasis,
        RefOpId,
        TransOpId,
        TransDispRefOpId,
        OpMode,
        TransOpStat,
        TransOpMode,
        TransUsrNm,
        TransOpTyp,
        OpInhseFlg,
        OpOutsrcFlg,
        OpScType,
        OrgMnfOp,
        MnfOpAttch,
        MnfOpTools,
        MnfOpWc,
        LOVUser,
        MnfOpEo1,
        LOVModUser,
        MnfOpVO1,
        LOVOpIdVO1,
        LOVOpTypeVO1,
        LOVOpBasisVO1,
        LOVopStatusVO1,
        LovSubContracttypeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OPACTV = AttributesEnum.OpActv.index();
    public static final int OPDESC = AttributesEnum.OpDesc.index();
    public static final int OPEFFCTVDT = AttributesEnum.OpEffctvDt.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPINACTVDT = AttributesEnum.OpInactvDt.index();
    public static final int OPINACTVREASON = AttributesEnum.OpInactvReason.index();
    public static final int OPLEGCD = AttributesEnum.OpLegCd.index();
    public static final int OPREVNO = AttributesEnum.OpRevNo.index();
    public static final int OPRMRK = AttributesEnum.OpRmrk.index();
    public static final int OPSTAT = AttributesEnum.OpStat.index();
    public static final int OPTYPE = AttributesEnum.OpType.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int OPREVDT = AttributesEnum.OpRevDt.index();
    public static final int OPBASIS = AttributesEnum.OpBasis.index();
    public static final int REFOPID = AttributesEnum.RefOpId.index();
    public static final int TRANSOPID = AttributesEnum.TransOpId.index();
    public static final int TRANSDISPREFOPID = AttributesEnum.TransDispRefOpId.index();
    public static final int OPMODE = AttributesEnum.OpMode.index();
    public static final int TRANSOPSTAT = AttributesEnum.TransOpStat.index();
    public static final int TRANSOPMODE = AttributesEnum.TransOpMode.index();
    public static final int TRANSUSRNM = AttributesEnum.TransUsrNm.index();
    public static final int TRANSOPTYP = AttributesEnum.TransOpTyp.index();
    public static final int OPINHSEFLG = AttributesEnum.OpInhseFlg.index();
    public static final int OPOUTSRCFLG = AttributesEnum.OpOutsrcFlg.index();
    public static final int OPSCTYPE = AttributesEnum.OpScType.index();
    public static final int ORGMNFOP = AttributesEnum.OrgMnfOp.index();
    public static final int MNFOPATTCH = AttributesEnum.MnfOpAttch.index();
    public static final int MNFOPTOOLS = AttributesEnum.MnfOpTools.index();
    public static final int MNFOPWC = AttributesEnum.MnfOpWc.index();
    public static final int LOVUSER = AttributesEnum.LOVUser.index();
    public static final int MNFOPEO1 = AttributesEnum.MnfOpEo1.index();
    public static final int LOVMODUSER = AttributesEnum.LOVModUser.index();
    public static final int MNFOPVO1 = AttributesEnum.MnfOpVO1.index();
    public static final int LOVOPIDVO1 = AttributesEnum.LOVOpIdVO1.index();
    public static final int LOVOPTYPEVO1 = AttributesEnum.LOVOpTypeVO1.index();
    public static final int LOVOPBASISVO1 = AttributesEnum.LOVOpBasisVO1.index();
    public static final int LOVOPSTATUSVO1 = AttributesEnum.LOVopStatusVO1.index();
    public static final int LOVSUBCONTRACTTYPEVO1 = AttributesEnum.LovSubContracttypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfOpVORowImpl() {
    }

    /**
     * Gets MnfOpEO entity object.
     * @return the MnfOpEO
     */
    public MnfOpEOImpl getMnfOpEO() {
        return (MnfOpEOImpl) getEntity(ENTITY_MNFOPEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OP_ACTV using the alias name OpActv.
     * @return the OP_ACTV
     */
    public String getOpActv() {
        return (String) getAttributeInternal(OPACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ACTV using the alias name OpActv.
     * @param value value to set the OP_ACTV
     */
    public void setOpActv(String value) {
        setAttributeInternal(OPACTV, value);
    }

    /**
     * Gets the attribute value for OP_DESC using the alias name OpDesc.
     * @return the OP_DESC
     */
    public String getOpDesc() {
        return (String) getAttributeInternal(OPDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_DESC using the alias name OpDesc.
     * @param value value to set the OP_DESC
     */
    public void setOpDesc(String value) {
        setAttributeInternal(OPDESC, value);
    }

    /**
     * Gets the attribute value for OP_EFFCTV_DT using the alias name OpEffctvDt.
     * @return the OP_EFFCTV_DT
     */
    public Timestamp getOpEffctvDt() {
        return (Timestamp) getAttributeInternal(OPEFFCTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_EFFCTV_DT using the alias name OpEffctvDt.
     * @param value value to set the OP_EFFCTV_DT
     */
    public void setOpEffctvDt(Timestamp value) {
        setAttributeInternal(OPEFFCTVDT, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_INACTV_DT using the alias name OpInactvDt.
     * @return the OP_INACTV_DT
     */
    public Timestamp getOpInactvDt() {
        return (Timestamp) getAttributeInternal(OPINACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_INACTV_DT using the alias name OpInactvDt.
     * @param value value to set the OP_INACTV_DT
     */
    public void setOpInactvDt(Timestamp value) {
        setAttributeInternal(OPINACTVDT, value);
    }

    /**
     * Gets the attribute value for OP_INACTV_REASON using the alias name OpInactvReason.
     * @return the OP_INACTV_REASON
     */
    public String getOpInactvReason() {
        return (String) getAttributeInternal(OPINACTVREASON);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_INACTV_REASON using the alias name OpInactvReason.
     * @param value value to set the OP_INACTV_REASON
     */
    public void setOpInactvReason(String value) {
        setAttributeInternal(OPINACTVREASON, value);
    }

    /**
     * Gets the attribute value for OP_LEG_CD using the alias name OpLegCd.
     * @return the OP_LEG_CD
     */
    public String getOpLegCd() {
        return (String) getAttributeInternal(OPLEGCD);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_LEG_CD using the alias name OpLegCd.
     * @param value value to set the OP_LEG_CD
     */
    public void setOpLegCd(String value) {
        setAttributeInternal(OPLEGCD, value);
    }


    /**
     * Gets the attribute value for OP_REV_NO using the alias name OpRevNo.
     * @return the OP_REV_NO
     */
    public Integer getOpRevNo() {
        return (Integer) getAttributeInternal(OPREVNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_REV_NO using the alias name OpRevNo.
     * @param value value to set the OP_REV_NO
     */
    public void setOpRevNo(Integer value) {
        setAttributeInternal(OPREVNO, value);
    }

    /**
     * Gets the attribute value for OP_RMRK using the alias name OpRmrk.
     * @return the OP_RMRK
     */
    public String getOpRmrk() {
        return (String) getAttributeInternal(OPRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_RMRK using the alias name OpRmrk.
     * @param value value to set the OP_RMRK
     */
    public void setOpRmrk(String value) {
        setAttributeInternal(OPRMRK, value);
    }

    /**
     * Gets the attribute value for OP_STAT using the alias name OpStat.
     * @return the OP_STAT
     */
    public Integer getOpStat() {
        return (Integer) getAttributeInternal(OPSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_STAT using the alias name OpStat.
     * @param value value to set the OP_STAT
     */
    public void setOpStat(Integer value) {
        setAttributeInternal(OPSTAT, value);
    }

    /**
     * Gets the attribute value for OP_TYPE using the alias name OpType.
     * @return the OP_TYPE
     */
    public Integer getOpType() {
        return (Integer) getAttributeInternal(OPTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_TYPE using the alias name OpType.
     * @param value value to set the OP_TYPE
     */
    public void setOpType(Integer value) {
        setAttributeInternal(OPTYPE, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for OP_REV_DT using the alias name OpRevDt.
     * @return the OP_REV_DT
     */
    public Timestamp getOpRevDt() {
        return (Timestamp) getAttributeInternal(OPREVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_REV_DT using the alias name OpRevDt.
     * @param value value to set the OP_REV_DT
     */
    public void setOpRevDt(Timestamp value) {
        setAttributeInternal(OPREVDT, value);
    }

    /**
     * Gets the attribute value for OP_BASIS using the alias name OpBasis.
     * @return the OP_BASIS
     */
    public Integer getOpBasis() {
        return (Integer) getAttributeInternal(OPBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_BASIS using the alias name OpBasis.
     * @param value value to set the OP_BASIS
     */
    public void setOpBasis(Integer value) {
        setAttributeInternal(OPBASIS, value);
    }

    /**
     * Gets the attribute value for REF_OP_ID using the alias name RefOpId.
     * @return the REF_OP_ID
     */
    public String getRefOpId() {
        return (String) getAttributeInternal(REFOPID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_OP_ID using the alias name RefOpId.
     * @param value value to set the REF_OP_ID
     */
    public void setRefOpId(String value) {
        setAttributeInternal(REFOPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpId.
     * @return the TransOpId
     */
    public String getTransOpId() {
        return (String) getAttributeInternal(TRANSOPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpId.
     * @param value value to set the  TransOpId
     */
    public void setTransOpId(String value) {
        setAttributeInternal(TRANSOPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDispRefOpId.
     * @return the TransDispRefOpId
     */
    private String dispOpId = null;
    public String getTransDispRefOpId() {
        if(this.getRefOpId() != null && dispOpId == null){
             ViewObjectImpl impl = getAm().getLOVOpIdDisp1();
             impl.setNamedWhereClauseParam("RefOpIdBindVar", this.getRefOpId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("OpId");
                 String s = (a == null ? null : a.toString());
                 dispOpId = s;
             }
         }
         return dispOpId;
        //return (String) getAttributeInternal(TRANSDISPREFOPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDispRefOpId.
     * @param value value to set the  TransDispRefOpId
     */
    public void setTransDispRefOpId(String value) {
        setAttributeInternal(TRANSDISPREFOPID, value);
    }

    /**
     * Gets the attribute value for OP_MODE using the alias name OpMode.
     * @return the OP_MODE
     */
    public Integer getOpMode() {
        return (Integer) getAttributeInternal(OPMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_MODE using the alias name OpMode.
     * @param value value to set the OP_MODE
     */
    public void setOpMode(Integer value) {
        setAttributeInternal(OPMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpStat.
     * @return the TransOpStat
     */
    private String statNm = null;
    public String getTransOpStat() {
        if(this.getOpStat() != null && statNm == null){
             ViewObjectImpl impl = getAm().getLOVopStatus1();
             impl.setNamedWhereClauseParam("statusBindVar", this.getOpStat());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("AttNm");
                 String s = (a == null ? null : a.toString());
                 statNm = s;
             }
         }
         return statNm;
       // return (String) getAttributeInternal(TRANSOPSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpStat.
     * @param value value to set the  TransOpStat
     */
    public void setTransOpStat(String value) {
        setAttributeInternal(TRANSOPSTAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpMode.
     * @return the TransOpMode
     */
    private String modeNm = null;
    public String getTransOpMode() {
        if(this.getOpMode() != null && modeNm == null){
             ViewObjectImpl impl = getAm().getLOVOpMode1();
             impl.setNamedWhereClauseParam("modeBindVar", this.getOpMode());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("AttNm");
                 String s = (a == null ? null : a.toString());
                 modeNm = s;
             }
         }
         return modeNm;
       // return (String) getAttributeInternal(TRANSOPMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpMode.
     * @param value value to set the  TransOpMode
     */
    public void setTransOpMode(String value) {
        setAttributeInternal(TRANSOPMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrNm.
     * @return the TransUsrNm
     */
    public String getTransUsrNm() {
        if(this.getUsrIdCreate() != null){
             ViewObjectImpl impl = getAm().getLOVUserNm1();
             impl.setNamedWhereClauseParam("UsrIdBind", this.getUsrIdCreate());
             impl.setNamedWhereClauseParam("SlocIDBind", this.getSlocId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("UsrName");
                 String s1 = (a == null ? null : a.toString());
                 return s1;
             }
         }
        return (String) getAttributeInternal(TRANSUSRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrNm.
     * @param value value to set the  TransUsrNm
     */
    public void setTransUsrNm(String value) {
        setAttributeInternal(TRANSUSRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocTyp.
     * @return the TransLocTyp
     */
    private String opLocTyp = null;


    /**
     * Gets the attribute value for the calculated attribute TransOpTyp.
     * @return the TransOpTyp
     */
    private String opType = null;
    public String getTransOpTyp() {
        if(this.getOpType() != null && opType == null){
             ViewObjectImpl impl = getAm().getLOVOpType1();
             impl.setNamedWhereClauseParam("opTypBindVar", this.getOpType());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("AttNm");
                 String s = (a == null ? null : a.toString());
                 opType = s;
             }
         }
         return opType;
      //  return (String) getAttributeInternal(TRANSOPTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpTyp.
     * @param value value to set the  TransOpTyp
     */
    public void setTransOpTyp(String value) {
        setAttributeInternal(TRANSOPTYP, value);
    }

    /**
     * Gets the attribute value for OP_INHSE_FLG using the alias name OpInhseFlg.
     * @return the OP_INHSE_FLG
     */
    public String getOpInhseFlg() {
        return (String) getAttributeInternal(OPINHSEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_INHSE_FLG using the alias name OpInhseFlg.
     * @param value value to set the OP_INHSE_FLG
     */
    public void setOpInhseFlg(String value) {
        setAttributeInternal(OPINHSEFLG, value);
    }

    /**
     * Gets the attribute value for OP_OUTSRC_FLG using the alias name OpOutsrcFlg.
     * @return the OP_OUTSRC_FLG
     */
    public String getOpOutsrcFlg() {
        return (String) getAttributeInternal(OPOUTSRCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_OUTSRC_FLG using the alias name OpOutsrcFlg.
     * @param value value to set the OP_OUTSRC_FLG
     */
    public void setOpOutsrcFlg(String value) {
        setAttributeInternal(OPOUTSRCFLG, value);
    }

    /**
     * Gets the attribute value for OP_SC_TYPE using the alias name OpScType.
     * @return the OP_SC_TYPE
     */
    public Integer getOpScType() {
        return (Integer) getAttributeInternal(OPSCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SC_TYPE using the alias name OpScType.
     * @param value value to set the OP_SC_TYPE
     */
    public void setOpScType(Integer value) {
        setAttributeInternal(OPSCTYPE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgMnfOp.
     */
    public RowIterator getOrgMnfOp() {
        return (RowIterator) getAttributeInternal(ORGMNFOP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfOpAttch.
     */
    public RowIterator getMnfOpAttch() {
        return (RowIterator) getAttributeInternal(MNFOPATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfOpTools.
     */
    public RowIterator getMnfOpTools() {
        return (RowIterator) getAttributeInternal(MNFOPTOOLS);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfOpWc.
     */
    public RowIterator getMnfOpWc() {
        return (RowIterator) getAttributeInternal(MNFOPWC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LOVUser.
     */
    public RowIterator getLOVUser() {
        return (RowIterator) getAttributeInternal(LOVUSER);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfOpEo1.
     */
    public RowIterator getMnfOpEo1() {
        return (RowIterator) getAttributeInternal(MNFOPEO1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LOVModUser.
     */
    public RowIterator getLOVModUser() {
        return (RowIterator) getAttributeInternal(LOVMODUSER);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MnfOpVO1.
     */
    public RowSet getMnfOpVO1() {
        return (RowSet) getAttributeInternal(MNFOPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpIdVO1.
     */
    public RowSet getLOVOpIdVO1() {
        return (RowSet) getAttributeInternal(LOVOPIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpTypeVO1.
     */
    public RowSet getLOVOpTypeVO1() {
        return (RowSet) getAttributeInternal(LOVOPTYPEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVOpBasisVO1.
     */
    public RowSet getLOVOpBasisVO1() {
        return (RowSet) getAttributeInternal(LOVOPBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVopStatusVO1.
     */
    public RowSet getLOVopStatusVO1() {
        return (RowSet) getAttributeInternal(LOVOPSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSubContracttypeVO1.
     */
    public RowSet getLovSubContracttypeVO1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTTYPEVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFOperationAppAMImpl getAm() {
        MNFOperationAppAMImpl am = (MNFOperationAppAMImpl)resolvElDC("MNFOperationAppAMDataControl");
        return am;
    }
    
    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
}

