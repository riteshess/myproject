package mnfoperationApp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import mnfoperationApp.model.entities.MnfOpToolsEOImpl;
import mnfoperationApp.model.module.MNFOperationAppAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 03 10:51:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfOpToolsVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFOPTOOLSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        HoOrgId,
        ItmId,
        ItmQty,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransItemDesc,
        TransUsrCreate,
        ItmActv,
        ItmAmtBs,
        ItmPrice,
        ItmUom,
        TransItmUom,
        TransOrgId,
        LOVItemIdVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSITEMDESC = AttributesEnum.TransItemDesc.index();
    public static final int TRANSUSRCREATE = AttributesEnum.TransUsrCreate.index();
    public static final int ITMACTV = AttributesEnum.ItmActv.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int TRANSITMUOM = AttributesEnum.TransItmUom.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int LOVITEMIDVO1 = AttributesEnum.LOVItemIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfOpToolsVORowImpl() {
    }

    /**
     * Gets MnfOpToolsEO entity object.
     * @return the MnfOpToolsEO
     */
    public MnfOpToolsEOImpl getMnfOpToolsEO() {
        return (MnfOpToolsEOImpl) getEntity(ENTITY_MNFOPTOOLSEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        if ("N".equals(getAm().ChkDuplicateTool(getDocId(), getTransItemDesc()).toString())) {
            setAttributeInternal(ITMID, value);
        } else {
            setTransItemDesc("");
            FacesMessage message = new FacesMessage("Tool already exist..!!");
            message.setSeverity(FacesMessage.SEVERITY_INFO);
            FacesContext fc = FacesContext.getCurrentInstance();
            fc.addMessage(null, message);
        }
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public oracle.jbo.domain.Number getItmQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFOperationAppAMImpl getAm() {
        MNFOperationAppAMImpl am = (MNFOperationAppAMImpl) resolvElDC("MNFOperationAppAMDataControl");
        return am;
    }

    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }


    /**
     * Gets the attribute value for the calculated attribute TransItemDesc.
     * @return the TransItemDesc
     */
    public String getTransItemDesc() {
        if (this.getItmId() != null) {
            ViewObjectImpl impl = getAm().getLOVItemNm1();
            impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object val = allRowsInRange[0].getAttribute("ItmDesc");
                String s = (val == null ? null : val.toString());
                return s;
            }
        }
        return (String) getAttributeInternal(TRANSITEMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemDesc.
     * @param value value to set the  TransItemDesc
     */
    public void setTransItemDesc(String value) {
        setAttributeInternal(TRANSITEMDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransUsrCreate.
     * @return the TransUsrCreate
     */
    public String getTransUsrCreate() {
        if (this.getUsrIdCreate() != null) {
            ViewObjectImpl impl = getAm().getLOVUserNm1();
            impl.setNamedWhereClauseParam("UsrIdBind", this.getUsrIdCreate());
            impl.setNamedWhereClauseParam("SlocIDBind", this.getSlocId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object a = allRowsInRange[0].getAttribute("UsrName");
                String s1 = (a == null ? null : a.toString());
                return s1;
            }
        }
        return (String) getAttributeInternal(TRANSUSRCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrCreate.
     * @param value value to set the  TransUsrCreate
     */
    public void setTransUsrCreate(String value) {
        setAttributeInternal(TRANSUSRCREATE, value);
    }

    /**
     * Gets the attribute value for ITM_ACTV using the alias name ItmActv.
     * @return the ITM_ACTV
     */
    public String getItmActv() {
        return (String) getAttributeInternal(ITMACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ACTV using the alias name ItmActv.
     * @param value value to set the ITM_ACTV
     */
    public void setItmActv(String value) {
        setAttributeInternal(ITMACTV, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmUom.
     * @return the TransItmUom
     */
    public String getTransItmUom() {
        if (this.getItmUom() != null) {
            ViewObjectImpl uomImpl = getAm().getLOVItmUomVO1();
            uomImpl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            uomImpl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            uomImpl.setNamedWhereClauseParam("UomIdBind", this.getItmUom());
            uomImpl.executeQuery();
            Row[] allRowsInRange = uomImpl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object a = allRowsInRange[0].getAttribute("UomDesc");
                String uom = (a == null ? null : a.toString());
                return uom;
            }
        }
        return (String) getAttributeInternal(TRANSITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmUom.
     * @param value value to set the  TransItmUom
     */
    public void setTransItmUom(String value) {
        setAttributeInternal(TRANSITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        //  return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemIdVO1.
     */
    public RowSet getLOVItemIdVO1() {
        return (RowSet) getAttributeInternal(LOVITEMIDVO1);
    }

    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }

}

