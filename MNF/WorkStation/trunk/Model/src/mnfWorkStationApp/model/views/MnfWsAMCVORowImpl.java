package mnfWorkStationApp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import mnfWorkStationApp.model.entities.MnfWsAMCEOImpl;

import mnfWorkStationApp.model.services.MNFWorkStationAppAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 19 09:23:13 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfWsAMCVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFWSAMCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        WsId,
        AmcSrNo,
        AmcDesc,
        AmcInvNo,
        AmcInvDt,
        AmcVendorId,
        AmcVendorAdds,
        AmcSrvCardNo,
        AmcRmrk,
        AmcCurrId,
        AmcAmtSp,
        AmcAmtBs,
        AmcStrtDt,
        AmcEndDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransSupplierName,
        TransSupplierAddr,
        TransCurrId,
        TransBaseCurrID,
        TransBaseConversionVal,
        TransKey,
        LOVSupplierIdVO1,
        LOVCurrVO1,
        LOVCurrVO2;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int WSID = AttributesEnum.WsId.index();
    public static final int AMCSRNO = AttributesEnum.AmcSrNo.index();
    public static final int AMCDESC = AttributesEnum.AmcDesc.index();
    public static final int AMCINVNO = AttributesEnum.AmcInvNo.index();
    public static final int AMCINVDT = AttributesEnum.AmcInvDt.index();
    public static final int AMCVENDORID = AttributesEnum.AmcVendorId.index();
    public static final int AMCVENDORADDS = AttributesEnum.AmcVendorAdds.index();
    public static final int AMCSRVCARDNO = AttributesEnum.AmcSrvCardNo.index();
    public static final int AMCRMRK = AttributesEnum.AmcRmrk.index();
    public static final int AMCCURRID = AttributesEnum.AmcCurrId.index();
    public static final int AMCAMTSP = AttributesEnum.AmcAmtSp.index();
    public static final int AMCAMTBS = AttributesEnum.AmcAmtBs.index();
    public static final int AMCSTRTDT = AttributesEnum.AmcStrtDt.index();
    public static final int AMCENDDT = AttributesEnum.AmcEndDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSSUPPLIERNAME = AttributesEnum.TransSupplierName.index();
    public static final int TRANSSUPPLIERADDR = AttributesEnum.TransSupplierAddr.index();
    public static final int TRANSCURRID = AttributesEnum.TransCurrId.index();
    public static final int TRANSBASECURRID = AttributesEnum.TransBaseCurrID.index();
    public static final int TRANSBASECONVERSIONVAL = AttributesEnum.TransBaseConversionVal.index();
    public static final int TRANSKEY = AttributesEnum.TransKey.index();
    public static final int LOVSUPPLIERIDVO1 = AttributesEnum.LOVSupplierIdVO1.index();
    public static final int LOVCURRVO1 = AttributesEnum.LOVCurrVO1.index();
    public static final int LOVCURRVO2 = AttributesEnum.LOVCurrVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfWsAMCVORowImpl() {
    }

    /**
     * Gets MnfWsAMCEO entity object.
     * @return the MnfWsAMCEO
     */
    public MnfWsAMCEOImpl getMnfWsAMCEO() {
        return (MnfWsAMCEOImpl) getEntity(ENTITY_MNFWSAMCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for WS_ID using the alias name WsId.
     * @return the WS_ID
     */
    public String getWsId() {
        return (String) getAttributeInternal(WSID);
    }

    /**
     * Sets <code>value</code> as attribute value for WS_ID using the alias name WsId.
     * @param value value to set the WS_ID
     */
    public void setWsId(String value) {
        setAttributeInternal(WSID, value);
    }

    /**
     * Gets the attribute value for AMC_SR_NO using the alias name AmcSrNo.
     * @return the AMC_SR_NO
     */
    public Integer getAmcSrNo() {
        return (Integer) getAttributeInternal(AMCSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_SR_NO using the alias name AmcSrNo.
     * @param value value to set the AMC_SR_NO
     */
    public void setAmcSrNo(Integer value) {
        setAttributeInternal(AMCSRNO, value);
    }

    /**
     * Gets the attribute value for AMC_DESC using the alias name AmcDesc.
     * @return the AMC_DESC
     */
    public String getAmcDesc() {
        return (String) getAttributeInternal(AMCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_DESC using the alias name AmcDesc.
     * @param value value to set the AMC_DESC
     */
    public void setAmcDesc(String value) {
        setAttributeInternal(AMCDESC, value);
    }

    /**
     * Gets the attribute value for AMC_INV_NO using the alias name AmcInvNo.
     * @return the AMC_INV_NO
     */
    public String getAmcInvNo() {
        return (String) getAttributeInternal(AMCINVNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_INV_NO using the alias name AmcInvNo.
     * @param value value to set the AMC_INV_NO
     */
    public void setAmcInvNo(String value) {
        setAttributeInternal(AMCINVNO, value);
    }

    /**
     * Gets the attribute value for AMC_INV_DT using the alias name AmcInvDt.
     * @return the AMC_INV_DT
     */
    public Timestamp getAmcInvDt() {
        return (Timestamp) getAttributeInternal(AMCINVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_INV_DT using the alias name AmcInvDt.
     * @param value value to set the AMC_INV_DT
     */
    public void setAmcInvDt(Timestamp value) {
        setAttributeInternal(AMCINVDT, value);
    }

    /**
     * Gets the attribute value for AMC_VENDOR_ID using the alias name AmcVendorId.
     * @return the AMC_VENDOR_ID
     */
    public Integer getAmcVendorId() {
        return (Integer) getAttributeInternal(AMCVENDORID);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_VENDOR_ID using the alias name AmcVendorId.
     * @param value value to set the AMC_VENDOR_ID
     */
    public void setAmcVendorId(Integer value) {
        setAttributeInternal(AMCVENDORID, value);
    }

    /**
     * Gets the attribute value for AMC_VENDOR_ADDS using the alias name AmcVendorAdds.
     * @return the AMC_VENDOR_ADDS
     */
    public String getAmcVendorAdds() {
        return (String) getAttributeInternal(AMCVENDORADDS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_VENDOR_ADDS using the alias name AmcVendorAdds.
     * @param value value to set the AMC_VENDOR_ADDS
     */
    public void setAmcVendorAdds(String value) {
        setAttributeInternal(AMCVENDORADDS, value);
    }

    /**
     * Gets the attribute value for AMC_SRV_CARD_NO using the alias name AmcSrvCardNo.
     * @return the AMC_SRV_CARD_NO
     */
    public String getAmcSrvCardNo() {
        return (String) getAttributeInternal(AMCSRVCARDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_SRV_CARD_NO using the alias name AmcSrvCardNo.
     * @param value value to set the AMC_SRV_CARD_NO
     */
    public void setAmcSrvCardNo(String value) {
        setAttributeInternal(AMCSRVCARDNO, value);
    }

    /**
     * Gets the attribute value for AMC_RMRK using the alias name AmcRmrk.
     * @return the AMC_RMRK
     */
    public String getAmcRmrk() {
        return (String) getAttributeInternal(AMCRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_RMRK using the alias name AmcRmrk.
     * @param value value to set the AMC_RMRK
     */
    public void setAmcRmrk(String value) {
        setAttributeInternal(AMCRMRK, value);
    }

    /**
     * Gets the attribute value for AMC_CURR_ID using the alias name AmcCurrId.
     * @return the AMC_CURR_ID
     */
    public Integer getAmcCurrId() {
        return (Integer) getAttributeInternal(AMCCURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_CURR_ID using the alias name AmcCurrId.
     * @param value value to set the AMC_CURR_ID
     */
    public void setAmcCurrId(Integer value) {
        setAttributeInternal(AMCCURRID, value);
    }

    /**
     * Gets the attribute value for AMC_AMT_SP using the alias name AmcAmtSp.
     * @return the AMC_AMT_SP
     */
    public Number getAmcAmtSp() {
        return (Number) getAttributeInternal(AMCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_AMT_SP using the alias name AmcAmtSp.
     * @param value value to set the AMC_AMT_SP
     */
    public void setAmcAmtSp(Number value) {
        
        setAttributeInternal(AMCAMTSP, value);
    }

    /**
     * Gets the attribute value for AMC_AMT_BS using the alias name AmcAmtBs.
     * @return the AMC_AMT_BS
     */
    public Number getAmcAmtBs() {
        if(getAmcAmtSp() != null){
            Number d = new Number(0);
          if(getTransBaseConversionVal() != null)
                return (Number)getAmcAmtSp().multiply(getTransBaseConversionVal());
            else
            return d;
           
        }
         else
        {
            return (Number) getAttributeInternal(AMCAMTBS);
        }
        
        
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_AMT_BS using the alias name AmcAmtBs.
     * @param value value to set the AMC_AMT_BS
     */
    public void setAmcAmtBs(Number value) {
        if(getAmcAmtSp() != null){
            Number d = new Number(0);
            if(getTransBaseConversionVal() != null)
                setAttributeInternal(AMCAMTBS,(Number)getAmcAmtSp().multiply(getTransBaseConversionVal()));
            else
            setAttributeInternal(AMCAMTBS,d);
           
        }
         else
        {
        setAttributeInternal(AMCAMTBS, value);
        }
    }

    /**
     * Gets the attribute value for AMC_STRT_DT using the alias name AmcStrtDt.
     * @return the AMC_STRT_DT
     */
    public Timestamp getAmcStrtDt() {
        return (Timestamp) getAttributeInternal(AMCSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_STRT_DT using the alias name AmcStrtDt.
     * @param value value to set the AMC_STRT_DT
     */
    public void setAmcStrtDt(Timestamp value) {
        setAttributeInternal(AMCSTRTDT, value);
    }

    /**
     * Gets the attribute value for AMC_END_DT using the alias name AmcEndDt.
     * @return the AMC_END_DT
     */
    public Timestamp getAmcEndDt() {
        return (Timestamp) getAttributeInternal(AMCENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_END_DT using the alias name AmcEndDt.
     * @param value value to set the AMC_END_DT
     */
    public void setAmcEndDt(Timestamp value) {
        setAttributeInternal(AMCENDDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSupplierName.
     * @return the TransSupplierName
     */
    public String getTransSupplierName() {
        //System.out.println("Inside of WSVOROWIMPL Class for supplier");
               if (getAmcVendorId() != null) {
                   ViewObjectImpl itemdescvoimpl = getAm().getLOVSupplierId1();
                   itemdescvoimpl.setNamedWhereClauseParam("cldIdBindVar", getCldId());
                   itemdescvoimpl.setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
                   itemdescvoimpl.setNamedWhereClauseParam("slocIdBindVar", getSlocId());
                   itemdescvoimpl.executeQuery();
                   Row[] wcRow = itemdescvoimpl.getFilteredRows("SupId", getAmcVendorId());
                   if (wcRow.length > 0) {
                       if (wcRow[0].getAttribute("SupNme") != null)
                          // System.out.println("Name of Supplier  is : " + wcRow[0].getAttribute("SupNme").toString());
                       return wcRow[0].getAttribute("SupNme").toString();
                   }
               }
        return (String) getAttributeInternal(TRANSSUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSupplierName.
     * @param value value to set the  TransSupplierName
     */
    public void setTransSupplierName(String value) {
        setAttributeInternal(TRANSSUPPLIERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSupplierAddr.
     * @return the TransSupplierAddr
     */
    public String getTransSupplierAddr() {
        //System.out.println("Inside of WSVOROWIMPL Class for supplier");
                if (getAmcVendorAdds() != null) {
                    ViewObjectImpl itemdescvoimpl = getAm().getLOVSupplierId1();
                    itemdescvoimpl.setNamedWhereClauseParam("cldIdBindVar", getCldId());
                    itemdescvoimpl.setNamedWhereClauseParam("hoOrgIdBindVar", getHoOrgId());
                    itemdescvoimpl.setNamedWhereClauseParam("slocIdBindVar", getSlocId());
                    itemdescvoimpl.executeQuery();
                    Row[] wcRow = itemdescvoimpl.getFilteredRows("SupAdd", getAmcVendorAdds());
                    if (wcRow.length > 0) {
                        if (wcRow[0].getAttribute("SupAddNme") != null) {
                            //System.out.println("Add of Supplier  is : " + wcRow[0].getAttribute("SupAddNme").toString());
                            return wcRow[0].getAttribute("SupAddNme").toString();
                        }
                    }
                }

        return (String) getAttributeInternal(TRANSSUPPLIERADDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSupplierAddr.
     * @param value value to set the  TransSupplierAddr
     */
    public void setTransSupplierAddr(String value) {
        setAttributeInternal(TRANSSUPPLIERADDR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrId.
     * @return the TransCurrId
     */
    public String getTransCurrId() {
        if (getAmcCurrId() != null) {
                   ViewObjectImpl itemdescvoimpl = getAm().getLOVCurrVO1();
                   itemdescvoimpl.setNamedWhereClauseParam("BindCurrId", getTransBaseCurrID());
                   itemdescvoimpl.setNamedWhereClauseParam("BindOrgId", getHoOrgId());
                   itemdescvoimpl.executeQuery();
                   Row[] wcRow = itemdescvoimpl.getFilteredRows("CcCurrIdTxn", getAmcCurrId());
                   if (wcRow.length > 0) {
                       if (wcRow[0].getAttribute("CurrDescTxn") != null) {
                           //System.out.println("cURRENCY  is : " + wcRow[0].getAttribute("CurrDescTxn").toString());
                           return wcRow[0].getAttribute("CurrDescTxn").toString();
                       }
                   }
               }
               
               return (String) getAttributeInternal(TRANSCURRID);
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrId.
     * @param value value to set the  TransCurrId
     */
    public void setTransCurrId(String value) {
        setAttributeInternal(TRANSCURRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBaseCurrID.
     * @return the TransBaseCurrID
     */
    public Integer getTransBaseCurrID() {
        if (getAttributeInternal(TRANSBASECURRID) != null) {
                    return (Integer) getAttributeInternal(TRANSBASECURRID);
                } else {
                    Integer curId;
                    try {
                        curId = Integer.parseInt(callStoredFunction(Types.INTEGER, "app.get_org_def_curr_bs1(?,?,?)", new Object[] {
                                                                    this.getCldId(), this.getSlocId(), this.getHoOrgId()
                        }).toString());
                        setTransBaseCurrID(curId);
                        return curId;
                    } catch (Exception ex) {
                        ex.printStackTrace();
                        return 73;
                    }
                }
        //       return (Integer) getAttributeInternal(TRANSBASECURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBaseCurrID.
     * @param value value to set the  TransBaseCurrID
     */
    public void setTransBaseCurrID(Integer value) {
        setAttributeInternal(TRANSBASECURRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBaseConversionVal.
     * @return the TransBaseConversionVal
     */
    public Number getTransBaseConversionVal() {
        if (getAmcCurrId() != null) {
                    ViewObjectImpl itemdescvoimpl = getAm().getLOVCurrVO1();
                    itemdescvoimpl.setNamedWhereClauseParam("BindCurrId", getTransBaseCurrID());
                    itemdescvoimpl.setNamedWhereClauseParam("BindOrgId", getHoOrgId());
                    itemdescvoimpl.executeQuery();
                    Row[] wcRow = itemdescvoimpl.getFilteredRows("CcCurrIdTxn", getAmcCurrId());
                    if (wcRow.length > 0) {
                        if (wcRow[0].getAttribute("CcBuy") != null) {
                            //System.out.println("Inside BseConversionValue : " + wcRow[0].getAttribute("CcBuy").toString());
                            try {
                                return new Number(wcRow[0].getAttribute("CcBuy").toString());
                            } catch (SQLException sqle) {
                                // TODO: Add catch code
                                sqle.printStackTrace();
                            }
                        }
                    }
                }
        return (Number) getAttributeInternal(TRANSBASECONVERSIONVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBaseConversionVal.
     * @param value value to set the  TransBaseConversionVal
     */
    public void setTransBaseConversionVal(Number value) {
        setAttributeInternal(TRANSBASECONVERSIONVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransKey.
     * @return the TransKey
     */
    public Object getTransKey() {
        return this.getKey();
        //return (Object) getAttributeInternal(TRANSKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransKey.
     * @param value value to set the  TransKey
     */
    public void setTransKey(Object value) {
        setAttributeInternal(TRANSKEY, this.getKey());
        //setAttributeInternal(TRANSKEY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSupplierIdVO1.
     */
    public RowSet getLOVSupplierIdVO1() {
        return (RowSet) getAttributeInternal(LOVSUPPLIERIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrVO1.
     */
    public RowSet getLOVCurrVO1() {
        return (RowSet) getAttributeInternal(LOVCURRVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrVO2.
     */
    public RowSet getLOVCurrVO2() {
        return (RowSet) getAttributeInternal(LOVCURRVO2);
    }
    
    private MNFWorkStationAppAMImpl getAm() {
            return (MNFWorkStationAppAMImpl) getApplicationModule();
        }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                        //System.out.println(bindVars[z] + "zzzzzzzzzzzzzzzzzzzzz");
                    }
                }
                st.executeUpdate();
                //System.out.println("aaaaaaaaaaaaaaaaaaa");
                return st.getObject(1);
            } catch (SQLException e) {
                e.printStackTrace();
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
}

