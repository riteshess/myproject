package mnfroutecard.model.services.common;

import oracle.jbo.ApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 19 15:41:41 IST 2014
// ---------------------------------------------------------------------
public interface MNFRouteCardAM extends ApplicationModule {
    void GlobalVariablesSet();

    void ResetTable();

    void SearchForData();

    void FilterDetailData();

    Boolean FetchDataToRc();

    String createAttchmntRow(String contentTyp, String fileNm, String extn);

    void setBindVariableOfAm();

    Boolean ChkOverHeadDuplicate(String paramName);

    Boolean ChkMachineDownDuplicate(String downName);


    String callWfFunctions();


    String getWfId();

    Integer getDocUsrFromWF();

    void updateWfStatus();

    String ChkActualAvailableQtyEditOrNot();

    Boolean GenerateBarCode();

    void FilterSrNoAsPerItem();

    void IssueAutoItem();

    void InsertIntoPickItmSr();

    void FilterLotWhWise();

    void InsertIntoRcItmLot();

    void FilterBinWhWise();

    void InsertIntoRcItmBin();

    void ReleaseRouteCard();

    Boolean ChkDocumentStatus();


    void RefreshJcVO();

    Boolean GenerateJobCardOnType();

    String getUserName(Integer usrId);


    String ChkAllowWorkStationEntryOrNot();


    Integer chkMandatoryEnteredOrNot();

    void ChkRcBasisVcl(Integer val);

    String GetlotNo();

    void AddLotEntry(String CldId, String OrgId, String HoOrgId, Integer SlocId, String lotId, String lotQty,
                     Integer UserId);

    void AddSerialEntry(String lotId, String serial);

    String AllowLotIdEditable(String cld_id, Integer sloc_id, String org_id);

    String ChkOutputItmSerialized();

    void UpdateDocumentOpStatus(String Flag);

    void IssueAutoItem_SF();

    void InsertIntoPickItmSr_SF();

    void FilterSrNoAsPerItem_SF();

    void FilterLotWhWise_SF();

    void InsertIntoRcItmLot_SF();

    void FilterBinWhWise_SF();

    void InsertIntoRcItmBin_SF();

    String CheckforInputItmLot();

    String checkSourceDocIdValidate(String SrcDispId);

    void deleteAttachFileRow(String path);

    void deleteStkLot();


    void setCreateTFParamAfterCreate();

    void attachOverhead(String operation);

    void attachMachineDowntime();


    void setSrcIdToQcParam();

    void setItemAccordingToOperation(String opId);

    boolean duplicateQcParameter(String shiftName, String itemNme);

    oracle.jbo.domain.Number chkgetYearFyId();

    String chkNmDuplicate(String val, String itm_id);

    oracle.jbo.domain.Number stkStatuspdate();

    oracle.jbo.domain.Number getPendingItmForJC(String cld_id, Integer slc_id, String org_id,
                                                oracle.jbo.domain.Number src_doc_typ, String src_doc_id,
                                                String op_doc_id, oracle.jbo.domain.Number op_sr_no, String output_itm,
                                                Integer jc_rc);

    void generateCostCenterHeaderWise();

    Boolean chkCcApplicableOrNot();

    void sendDataFromTempCcToRcOpItm();

    void insertIntoSubContrator();

    void yieldPercActOutPutQty(oracle.jbo.domain.Number qty);

    String qcFlagChk();

    String shortcloseChk();

    void addToItmStk();

    void defaultDualItmStk();

    Integer chkOutputItmStk(String itmId);

    Integer getItmStkRecord();

    String ChkItmSerialized(String ItmId);

    Integer getSerializedItemCount(String serial, String itmId);

    String qcFlagChkforItems(String ItemId);
}

