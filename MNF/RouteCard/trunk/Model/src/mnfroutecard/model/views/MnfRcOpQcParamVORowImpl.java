package mnfroutecard.model.views;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import mnfroutecard.model.entities.MnfRcOpQcParamEOImpl;

import mnfroutecard.model.services.MNFRouteCardAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 09 15:14:29 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfRcOpQcParamVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFRCOPQCPARAMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ApldFrmGp,
        CldId,
        DocId,
        FailActn,
        HoOrgId,
        ItmId,
        ItmType,
        LowerLimit,
        OpId,
        OpSrNo,
        OrgId,
        ParamId,
        ParamSpec,
        PdoId,
        SlocId,
        StdVal,
        TlrncLower,
        TlrncType,
        TlrncUpper,
        UpperLimit,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransOperationNme,
        ParamType,
        TransItemName,
        TransQcParamter,
        TransKey,
        LOVOpForParameterVO1,
        LOVQcParameterVO1,
        LOVFailActionVO1,
        LOVParameterTypeVO1,
        LOVOpOutputItemVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int APLDFRMGP = AttributesEnum.ApldFrmGp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FAILACTN = AttributesEnum.FailActn.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int LOWERLIMIT = AttributesEnum.LowerLimit.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMSPEC = AttributesEnum.ParamSpec.index();
    public static final int PDOID = AttributesEnum.PdoId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STDVAL = AttributesEnum.StdVal.index();
    public static final int TLRNCLOWER = AttributesEnum.TlrncLower.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int TLRNCUPPER = AttributesEnum.TlrncUpper.index();
    public static final int UPPERLIMIT = AttributesEnum.UpperLimit.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSOPERATIONNME = AttributesEnum.TransOperationNme.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int TRANSITEMNAME = AttributesEnum.TransItemName.index();
    public static final int TRANSQCPARAMTER = AttributesEnum.TransQcParamter.index();
    public static final int TRANSKEY = AttributesEnum.TransKey.index();
    public static final int LOVOPFORPARAMETERVO1 = AttributesEnum.LOVOpForParameterVO1.index();
    public static final int LOVQCPARAMETERVO1 = AttributesEnum.LOVQcParameterVO1.index();
    public static final int LOVFAILACTIONVO1 = AttributesEnum.LOVFailActionVO1.index();
    public static final int LOVPARAMETERTYPEVO1 = AttributesEnum.LOVParameterTypeVO1.index();
    public static final int LOVOPOUTPUTITEMVO1 = AttributesEnum.LOVOpOutputItemVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfRcOpQcParamVORowImpl() {
    }

    /**
     * Gets MnfRcOpQcParamEO entity object.
     * @return the MnfRcOpQcParamEO
     */
    public MnfRcOpQcParamEOImpl getMnfRcOpQcParamEO() {
        return (MnfRcOpQcParamEOImpl) getEntity(ENTITY_MNFRCOPQCPARAMEO);
    }

    /**
     * Gets the attribute value for APLD_FRM_GP using the alias name ApldFrmGp.
     * @return the APLD_FRM_GP
     */
    public String getApldFrmGp() {
        return (String) getAttributeInternal(APLDFRMGP);
    }

    /**
     * Sets <code>value</code> as attribute value for APLD_FRM_GP using the alias name ApldFrmGp.
     * @param value value to set the APLD_FRM_GP
     */
    public void setApldFrmGp(String value) {
        setAttributeInternal(APLDFRMGP, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FAIL_ACTN using the alias name FailActn.
     * @return the FAIL_ACTN
     */
    public Integer getFailActn() {
        return (Integer) getAttributeInternal(FAILACTN);
    }

    /**
     * Sets <code>value</code> as attribute value for FAIL_ACTN using the alias name FailActn.
     * @param value value to set the FAIL_ACTN
     */
    public void setFailActn(Integer value) {
        setAttributeInternal(FAILACTN, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_TYPE using the alias name ItmType.
     * @return the ITM_TYPE
     */
    public Integer getItmType() {
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TYPE using the alias name ItmType.
     * @param value value to set the ITM_TYPE
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
    }

    /**
     * Gets the attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @return the LOWER_LIMIT
     */
    public Number getLowerLimit() {
        return (Number) getAttributeInternal(LOWERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @param value value to set the LOWER_LIMIT
     */
    public void setLowerLimit(Number value) {
        setAttributeInternal(LOWERLIMIT, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
       // System.out.println("Setting operation " + value);
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {
        
        if(!getAm().duplicateQcParameter(getTransQcParamter(), getTransItemName())){
          //  System.out.println("Hellooo NISHAAA");
            setAttributeInternal(PARAMID, value);
        }
         else {
          //  setTransQcParamter("");
            setAttributeInternal(TRANSQCPARAMTER, "");
           showFacesMsg("Duplicate Parameter!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        } 
        
        //setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for PARAM_SPEC using the alias name ParamSpec.
     * @return the PARAM_SPEC
     */
    public String getParamSpec() {
        return (String) getAttributeInternal(PARAMSPEC);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_SPEC using the alias name ParamSpec.
     * @param value value to set the PARAM_SPEC
     */
    public void setParamSpec(String value) {
        setAttributeInternal(PARAMSPEC, value);
    }

    /**
     * Gets the attribute value for PDO_ID using the alias name PdoId.
     * @return the PDO_ID
     */
    public String getPdoId() {
        return (String) getAttributeInternal(PDOID);
    }

    /**
     * Sets <code>value</code> as attribute value for PDO_ID using the alias name PdoId.
     * @param value value to set the PDO_ID
     */
    public void setPdoId(String value) {
        setAttributeInternal(PDOID,(String)getAm().getMnfRcSrcVO1().getCurrentRow().getAttribute("DocIdSrc"));
      //  setAttributeInternal(PDOID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STD_VAL using the alias name StdVal.
     * @return the STD_VAL
     */
    public Number getStdVal() {
        return (Number) getAttributeInternal(STDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for STD_VAL using the alias name StdVal.
     * @param value value to set the STD_VAL
     */
    public void setStdVal(Number value) {
        setAttributeInternal(STDVAL, value);
    }

    /**
     * Gets the attribute value for TLRNC_LOWER using the alias name TlrncLower.
     * @return the TLRNC_LOWER
     */
    public Number getTlrncLower() {
        return (Number) getAttributeInternal(TLRNCLOWER);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_LOWER using the alias name TlrncLower.
     * @param value value to set the TLRNC_LOWER
     */
    public void setTlrncLower(Number value) {
        setAttributeInternal(TLRNCLOWER, value);
    }

    /**
     * Gets the attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @return the TLRNC_TYPE
     */
    public String getTlrncType() {
        return (String) getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_TYPE using the alias name TlrncType.
     * @param value value to set the TLRNC_TYPE
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_UPPER using the alias name TlrncUpper.
     * @return the TLRNC_UPPER
     */
    public Number getTlrncUpper() {
        return (Number) getAttributeInternal(TLRNCUPPER);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_UPPER using the alias name TlrncUpper.
     * @param value value to set the TLRNC_UPPER
     */
    public void setTlrncUpper(Number value) {
        setAttributeInternal(TLRNCUPPER, value);
    }

    /**
     * Gets the attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @return the UPPER_LIMIT
     */
    public Number getUpperLimit() {
        return (Number) getAttributeInternal(UPPERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @param value value to set the UPPER_LIMIT
     */
    public void setUpperLimit(Number value) {
        setAttributeInternal(UPPERLIMIT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOperationNme.
     * @return the TransOperationNme
     */
    public String getTransOperationNme() {
        if (getOpId() != null) {
            
            
            Row[] wcRow = getAm().getLOVOpDescVO1().getFilteredRows("DocId", getOpId());
            if (wcRow.length > 0) {
                if (wcRow[0].getAttribute("OpDesc") != null) {
                    //setTransOpDesc(wcRow[0].getAttribute("OpDesc").toString());
                  //  System.out.println("OP name is " + wcRow[0].getAttribute("OpDesc").toString());
                    return wcRow[0].getAttribute("OpDesc").toString();

                }
            }
        } 
        return (String) getAttributeInternal(TRANSOPERATIONNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOperationNme.
     * @param value value to set the  TransOperationNme
     */
    public void setTransOperationNme(String value) {
        setAttributeInternal(TRANSOPERATIONNME, value);
    }

    /**
     * Gets the attribute value for PARAM_TYPE using the alias name ParamType.
     * @return the PARAM_TYPE
     */
    public Integer getParamType() {
        return (Integer) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_TYPE using the alias name ParamType.
     * @param value value to set the PARAM_TYPE
     */
    public void setParamType(Integer value) {
        setAttributeInternal(PARAMTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemName.
     * @return the TransItemName
     */
    public String getTransItemName() {
        if (getItmId() != null) {
            ViewObjectImpl impl = getAm().getLOVItemFromPrfVO1();
             impl.setNamedWhereClauseParam("BindItmId", this.getItmId());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId()); 
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
           //    System.out.println("Item name  is : " + (String)allRowsInRange[0].getAttribute("ItmDesc"));
                return (String)allRowsInRange[0].getAttribute("ItmDesc");
            }
        }
        return (String) getAttributeInternal(TRANSITEMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemName.
     * @param value value to set the  TransItemName
     */
    public void setTransItemName(String value) {
        setAttributeInternal(TRANSITEMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransQcParamter.
     * @return the TransQcParamter
     */
    public String getTransQcParamter() {
        if (getParamId() != null) {
            ViewObjectImpl impl = getAm().getLOVQcParamNameVO1();
           // impl.setNamedWhereClauseParam("BindParamId", this.getParamId());
           // impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
         //   impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
           // impl.setNamedWhereClauseParam("BindOrgId", this.getHoOrgId());
         //  impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
         //   impl.executeQuery();
            Row[] allRowsInRange = impl.getFilteredRows("ParamId", this.getParamId());
            if (allRowsInRange.length > 0) {
             //  System.out.println("Item name from outputitemvo is : " + (String)allRowsInRange[0].getAttribute("ParamNm"));
                return (String)allRowsInRange[0].getAttribute("ParamNm");
            }
        }
        
      
        return (String) getAttributeInternal(TRANSQCPARAMTER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransQcParamter.
     * @param value value to set the  TransQcParamter
     */
    public void setTransQcParamter(String value) {
          /* if(!getAm().duplicateQcParameter(getTransQcParamter())){
          //  System.out.println("Hellooo NISHAAA");
            setAttributeInternal(TRANSQCPARAMTER, value);
        }  */
                    
        setAttributeInternal(TRANSQCPARAMTER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransKey.
     * @return the TransKey
     */
    public Object getTransKey() {
        return this.getKey();
       // return (Object) getAttributeInternal(TRANSKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransKey.
     * @param value value to set the  TransKey
     */
    public void setTransKey(Object value) {
        setAttributeInternal(TRANSKEY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpForParameterVO1.
     */
    public RowSet getLOVOpForParameterVO1() {
        return (RowSet) getAttributeInternal(LOVOPFORPARAMETERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVQcParameterVO1.
     */
    public RowSet getLOVQcParameterVO1() {
        return (RowSet) getAttributeInternal(LOVQCPARAMETERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFailActionVO1.
     */
    public RowSet getLOVFailActionVO1() {
        return (RowSet) getAttributeInternal(LOVFAILACTIONVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVParameterTypeVO1.
     */
    public RowSet getLOVParameterTypeVO1() {
        return (RowSet) getAttributeInternal(LOVPARAMETERTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpOutputItemVO1.
     */
    public RowSet getLOVOpOutputItemVO1() {
        return (RowSet) getAttributeInternal(LOVOPOUTPUTITEMVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFRouteCardAMImpl getAm() {
        MNFRouteCardAMImpl am = (MNFRouteCardAMImpl)this.getApplicationModule();
        return am;
    }
    
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {
     
        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);
     
    }
}

