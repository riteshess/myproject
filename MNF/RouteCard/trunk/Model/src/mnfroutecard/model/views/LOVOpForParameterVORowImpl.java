package mnfroutecard.model.views;

import mnfroutecard.model.entities.MnfRcOpEOImpl;

import mnfroutecard.model.services.MNFRouteCardAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 03 17:14:20 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVOpForParameterVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFRCOPEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        OpId,
        OpSrNo,
        OperationNme,
        LOVOpDescVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int OPERATIONNME = AttributesEnum.OperationNme.index();
    public static final int LOVOPDESCVO1 = AttributesEnum.LOVOpDescVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVOpForParameterVORowImpl() {
    }

    /**
     * Gets MnfRcOpEO entity object.
     * @return the MnfRcOpEO
     */
    public MnfRcOpEOImpl getMnfRcOpEO() {
        return (MnfRcOpEOImpl) getEntity(ENTITY_MNFRCOPEO);
    }


    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationNme.
     * @return the OperationNme
     */
    public String getOperationNme() {
        if (getOpId() != null) {
            
            
            Row[] wcRow = getAM().getLOVOpDescVO1().getFilteredRows("DocId", getOpId());
            if (wcRow.length > 0) {
                if (wcRow[0].getAttribute("OpDesc") != null) {
                    //setTransOpDesc(wcRow[0].getAttribute("OpDesc").toString());
                    return wcRow[0].getAttribute("OpDesc").toString();

                }
            }
        } 
        return (String) getAttributeInternal(OPERATIONNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationNme.
     * @param value value to set the  OperationNme
     */
    public void setOperationNme(String value) {
        setAttributeInternal(OPERATIONNME, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVOpDescVO1.
     */
    public RowSet getLOVOpDescVO1() {
        return (RowSet) getAttributeInternal(LOVOPDESCVO1);
    }

    public MNFRouteCardAMImpl getAM() {
        return (MNFRouteCardAMImpl) getApplicationModule();

    }
   
       
}

