package mnfroutecard.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import mnfroutecard.model.entities.MnfRcOpItmEOImpl;
import mnfroutecard.model.services.MNFRouteCardAMImpl;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 23 15:46:51 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfRcOpItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFRCOPITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        HoOrgId,
        IssuType,
        ItmBasis,
        ItmId,
        ItmPrice,
        ItmPriceType,
        ItmQty,
        ItmRmrk,
        ItmRtrnFlg,
        ItmRtrnQty,
        ItmScrapPer,
        ItmTotAmt,
        ItmType,
        ItmUom,
        OpId,
        OpSrNo,
        OrgId,
        PdoId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ActItmQty,
        ItemNameDispTrans,
        ItemDispIdTrans,
        OpDescDisplayTrans,
        OpIdDispAllItemsTrans,
        WhId,
        ItmSerializedFlgTrans,
        ItmPickOrderTrans,
        ItmGrpIdTrans,
        ItemIssueCheckTrans,
        ActualItemQtyDispTrans,
        AutoIssueTrans,
        SelectItemTrans,
        SelectLotTrans,
        SelectLotBinTrans,
        StockAvailableStoreTrans,
        ShopFloorAvailableTrans,
        RqmtAreaId,
        ConsmptnFlg,
        CcId,
        MrsId,
        PrjId,
        TransWhId,
        TransProjNme,
        TransReqmtNme,
        MnfRcOpItmLot,
        MnfRcOpItmBin,
        MnfRcOpItmSr,
        MnfItmStkLotVW,
        MnfItmStkBinVw,
        MnfItmStkSrVw,
        MnfItmStkBinRqmtVw,
        MnfItmStkLotRqmtVw,
        MnfItmStkSrRqmtVw,
        LOVItemIdVO1,
        LOVItemTypeVO1,
        LOVOpIdVO1,
        LOVPdoIdVO1,
        LOVItemFromPrfVO1,
        LOVProjectNameVO1,
        LOVWhIdVO1,
        LOVRequirementIdVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ISSUTYPE = AttributesEnum.IssuType.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMPRICETYPE = AttributesEnum.ItmPriceType.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMRMRK = AttributesEnum.ItmRmrk.index();
    public static final int ITMRTRNFLG = AttributesEnum.ItmRtrnFlg.index();
    public static final int ITMRTRNQTY = AttributesEnum.ItmRtrnQty.index();
    public static final int ITMSCRAPPER = AttributesEnum.ItmScrapPer.index();
    public static final int ITMTOTAMT = AttributesEnum.ItmTotAmt.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PDOID = AttributesEnum.PdoId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ACTITMQTY = AttributesEnum.ActItmQty.index();
    public static final int ITEMNAMEDISPTRANS = AttributesEnum.ItemNameDispTrans.index();
    public static final int ITEMDISPIDTRANS = AttributesEnum.ItemDispIdTrans.index();
    public static final int OPDESCDISPLAYTRANS = AttributesEnum.OpDescDisplayTrans.index();
    public static final int OPIDDISPALLITEMSTRANS = AttributesEnum.OpIdDispAllItemsTrans.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITMSERIALIZEDFLGTRANS = AttributesEnum.ItmSerializedFlgTrans.index();
    public static final int ITMPICKORDERTRANS = AttributesEnum.ItmPickOrderTrans.index();
    public static final int ITMGRPIDTRANS = AttributesEnum.ItmGrpIdTrans.index();
    public static final int ITEMISSUECHECKTRANS = AttributesEnum.ItemIssueCheckTrans.index();
    public static final int ACTUALITEMQTYDISPTRANS = AttributesEnum.ActualItemQtyDispTrans.index();
    public static final int AUTOISSUETRANS = AttributesEnum.AutoIssueTrans.index();
    public static final int SELECTITEMTRANS = AttributesEnum.SelectItemTrans.index();
    public static final int SELECTLOTTRANS = AttributesEnum.SelectLotTrans.index();
    public static final int SELECTLOTBINTRANS = AttributesEnum.SelectLotBinTrans.index();
    public static final int STOCKAVAILABLESTORETRANS = AttributesEnum.StockAvailableStoreTrans.index();
    public static final int SHOPFLOORAVAILABLETRANS = AttributesEnum.ShopFloorAvailableTrans.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int CONSMPTNFLG = AttributesEnum.ConsmptnFlg.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int MRSID = AttributesEnum.MrsId.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int TRANSWHID = AttributesEnum.TransWhId.index();
    public static final int TRANSPROJNME = AttributesEnum.TransProjNme.index();
    public static final int TRANSREQMTNME = AttributesEnum.TransReqmtNme.index();
    public static final int MNFRCOPITMLOT = AttributesEnum.MnfRcOpItmLot.index();
    public static final int MNFRCOPITMBIN = AttributesEnum.MnfRcOpItmBin.index();
    public static final int MNFRCOPITMSR = AttributesEnum.MnfRcOpItmSr.index();
    public static final int MNFITMSTKLOTVW = AttributesEnum.MnfItmStkLotVW.index();
    public static final int MNFITMSTKBINVW = AttributesEnum.MnfItmStkBinVw.index();
    public static final int MNFITMSTKSRVW = AttributesEnum.MnfItmStkSrVw.index();
    public static final int MNFITMSTKBINRQMTVW = AttributesEnum.MnfItmStkBinRqmtVw.index();
    public static final int MNFITMSTKLOTRQMTVW = AttributesEnum.MnfItmStkLotRqmtVw.index();
    public static final int MNFITMSTKSRRQMTVW = AttributesEnum.MnfItmStkSrRqmtVw.index();
    public static final int LOVITEMIDVO1 = AttributesEnum.LOVItemIdVO1.index();
    public static final int LOVITEMTYPEVO1 = AttributesEnum.LOVItemTypeVO1.index();
    public static final int LOVOPIDVO1 = AttributesEnum.LOVOpIdVO1.index();
    public static final int LOVPDOIDVO1 = AttributesEnum.LOVPdoIdVO1.index();
    public static final int LOVITEMFROMPRFVO1 = AttributesEnum.LOVItemFromPrfVO1.index();
    public static final int LOVPROJECTNAMEVO1 = AttributesEnum.LOVProjectNameVO1.index();
    public static final int LOVWHIDVO1 = AttributesEnum.LOVWhIdVO1.index();
    public static final int LOVREQUIREMENTIDVO1 = AttributesEnum.LOVRequirementIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfRcOpItmVORowImpl() {
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFRouteCardAMImpl getAm() {
        MNFRouteCardAMImpl am = (MNFRouteCardAMImpl)this.getApplicationModule();
        return am;
    }

    /**
     * Gets MnfRcOpItmEO entity object.
     * @return the MnfRcOpItmEO
     */
    public MnfRcOpItmEOImpl getMnfRcOpItmEO() {
        return (MnfRcOpItmEOImpl)getEntity(ENTITY_MNFRCOPITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ISSU_TYPE using the alias name IssuType.
     * @return the ISSU_TYPE
     */
    public Integer getIssuType() {
        return (Integer)getAttributeInternal(ISSUTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_TYPE using the alias name IssuType.
     * @param value value to set the ISSU_TYPE
     */
    public void setIssuType(Integer value) {
        setAttributeInternal(ISSUTYPE, value);
    }

    /**
     * Gets the attribute value for ITM_BASIS using the alias name ItmBasis.
     * @return the ITM_BASIS
     */
    public Integer getItmBasis() {
        return (Integer)getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_BASIS using the alias name ItmBasis.
     * @param value value to set the ITM_BASIS
     */
    public void setItmBasis(Integer value) {
        setAttributeInternal(ITMBASIS, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_TYPE using the alias name ItmPriceType.
     * @return the ITM_PRICE_TYPE
     */
    public Integer getItmPriceType() {
        return (Integer)getAttributeInternal(ITMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_TYPE using the alias name ItmPriceType.
     * @param value value to set the ITM_PRICE_TYPE
     */
    public void setItmPriceType(Integer value) {
        setAttributeInternal(ITMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number)getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @return the ITM_RMRK
     */
    public String getItmRmrk() {
        return (String)getAttributeInternal(ITMRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @param value value to set the ITM_RMRK
     */
    public void setItmRmrk(String value) {
        setAttributeInternal(ITMRMRK, value);
    }

    /**
     * Gets the attribute value for ITM_RTRN_FLG using the alias name ItmRtrnFlg.
     * @return the ITM_RTRN_FLG
     */
    public String getItmRtrnFlg() {
        return (String)getAttributeInternal(ITMRTRNFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RTRN_FLG using the alias name ItmRtrnFlg.
     * @param value value to set the ITM_RTRN_FLG
     */
    public void setItmRtrnFlg(String value) {
        setAttributeInternal(ITMRTRNFLG, value);
    }

    /**
     * Gets the attribute value for ITM_RTRN_QTY using the alias name ItmRtrnQty.
     * @return the ITM_RTRN_QTY
     */
    public Number getItmRtrnQty() {
        return (Number)getAttributeInternal(ITMRTRNQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RTRN_QTY using the alias name ItmRtrnQty.
     * @param value value to set the ITM_RTRN_QTY
     */
    public void setItmRtrnQty(Number value) {
        setAttributeInternal(ITMRTRNQTY, value);
    }

    /**
     * Gets the attribute value for ITM_SCRAP_PER using the alias name ItmScrapPer.
     * @return the ITM_SCRAP_PER
     */
    public Number getItmScrapPer() {
        return (Number)getAttributeInternal(ITMSCRAPPER);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_SCRAP_PER using the alias name ItmScrapPer.
     * @param value value to set the ITM_SCRAP_PER
     */
    public void setItmScrapPer(Number value) {
        setAttributeInternal(ITMSCRAPPER, value);
    }

    /**
     * Gets the attribute value for ITM_TOT_AMT using the alias name ItmTotAmt.
     * @return the ITM_TOT_AMT
     */
    public Number getItmTotAmt() {
        return (Number)getAttributeInternal(ITMTOTAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TOT_AMT using the alias name ItmTotAmt.
     * @param value value to set the ITM_TOT_AMT
     */
    public void setItmTotAmt(Number value) {
        setAttributeInternal(ITMTOTAMT, value);
    }

    /**
     * Gets the attribute value for ITM_TYPE using the alias name ItmType.
     * @return the ITM_TYPE
     */
    public Integer getItmType() {
        return (Integer)getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TYPE using the alias name ItmType.
     * @param value value to set the ITM_TYPE
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String)getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer)getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PDO_ID using the alias name PdoId.
     * @return the PDO_ID
     */
    public String getPdoId() {
        return (String)getAttributeInternal(PDOID);
    }

    /**
     * Sets <code>value</code> as attribute value for PDO_ID using the alias name PdoId.
     * @param value value to set the PDO_ID
     */
    public void setPdoId(String value) {
        setAttributeInternal(PDOID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ACT_ITM_QTY using the alias name ActItmQty.
     * @return the ACT_ITM_QTY
     */
    public Number getActItmQty() {
        return (Number)getAttributeInternal(ACTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_ITM_QTY using the alias name ActItmQty.
     * @param value value to set the ACT_ITM_QTY
     */
    public void setActItmQty(Number value) {
        setAttributeInternal(ACTITMQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameDispTrans.
     * @return the ItemNameDispTrans
     */
    public String getItemNameDispTrans() {
        if (getAttributeInternal(ITEMNAMEDISPTRANS) == null) {
            ViewObjectImpl impl = getAm().getLOVItemFromPrfVO1();
            impl.setNamedWhereClauseParam("BindItmId", this.getItmId());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String)allRowsInRange[0].getAttribute("ItmDesc");
            }
        }
        return (String)getAttributeInternal(ITEMNAMEDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameDispTrans.
     * @param value value to set the  ItemNameDispTrans
     */
    public void setItemNameDispTrans(String value) {
        setAttributeInternal(ITEMNAMEDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDispIdTrans.
     * @return the ItemDispIdTrans
     */
    public String getItemDispIdTrans() {
        return this.getItmId();
        //return (String) getAttributeInternal(ITEMDISPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDispIdTrans.
     * @param value value to set the  ItemDispIdTrans
     */
    public void setItemDispIdTrans(String value) {
        setAttributeInternal(ITEMDISPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpDescDispTrans.
     * @return the OpDescDispTrans
     */
    public String getOpDescDisplayTrans() {
        if (getAttributeInternal(OPDESCDISPLAYTRANS) == null) {
            ViewObjectImpl impl = getAm().getLOVOpIdVO1();
            impl.setNamedWhereClauseParam("BindOpId", this.getOpId());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String)allRowsInRange[0].getAttribute("OpDesc");
            }
        }
        return (String)getAttributeInternal(OPDESCDISPLAYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpDescDispTrans.
     * @param value value to set the  OpDescDispTrans
     */
    public void setOpDescDisplayTrans(String value) {
        setAttributeInternal(OPDESCDISPLAYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpIdDispAllItemsTrans.
     * @return the OpIdDispAllItemsTrans
     */
    public String getOpIdDispAllItemsTrans() {
        if (getAttributeInternal(OPIDDISPALLITEMSTRANS) == null) {
            ViewObjectImpl impl = getAm().getLOVOpIdVO1();
            impl.setNamedWhereClauseParam("BindOpId", this.getOpId());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String)allRowsInRange[0].getAttribute("OpId");
            }
        }
        return (String)getAttributeInternal(OPIDDISPALLITEMSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpIdDispAllItemsTrans.
     * @param value value to set the  OpIdDispAllItemsTrans
     */
    public void setOpIdDispAllItemsTrans(String value) {
        setAttributeInternal(OPIDDISPALLITEMSTRANS, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSerializedFlgTrans.
     * @return the ItmSerializedFlgTrans
     */
    public String getItmSerializedFlgTrans() {
        return (String)getAttributeInternal(ITMSERIALIZEDFLGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmSerializedFlgTrans.
     * @param value value to set the  ItmSerializedFlgTrans
     */
    public void setItmSerializedFlgTrans(String value) {
        setAttributeInternal(ITMSERIALIZEDFLGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmPickOrderTrans.
     * @return the ItmPickOrderTrans
     */
    public Integer getItmPickOrderTrans() {
        if (getItmId() != null &&
            (getAttributeInternal(ITMPICKORDERTRANS) == null || getItmSerializedFlgTrans() == null ||
             getAttributeInternal(ITMGRPIDTRANS) == null) && (this.getItmType() == 62 || this.getItmType() == 63) && this.getConsmptnFlg().equals("Y")) {
            //MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
            ViewObjectImpl impl = getAm().getLOVItmNmVO1();
            impl.setNamedWhereClauseParam("BindItmId", this.getItmId());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object serializedFlgO = allRowsInRange[0].getAttribute("SerializedFlg");
                Object pickOrderO = allRowsInRange[0].getAttribute("PickOrder");
                String serializedFlg = (serializedFlgO == null ? null : serializedFlgO.toString());
                Integer pickOrder = (pickOrderO == null ? 307 : (Integer) pickOrderO);
                Object grpIdO = allRowsInRange[0].getAttribute("GrpId");
                String grpId = (grpIdO == null ? null : (grpIdO.toString()));


                setItmSerializedFlgTrans(serializedFlg);
                setItmPickOrderTrans(pickOrder);
                setItmGrpIdTrans(grpId);
           //     System.out.println("Setting Serialized Flag to  : "+serializedFlg+" pickOrder : "+pickOrder);
            }
        }
        return (Integer)getAttributeInternal(ITMPICKORDERTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmPickOrderTrans.
     * @param value value to set the  ItmPickOrderTrans
     */
    public void setItmPickOrderTrans(Integer value) {
        setAttributeInternal(ITMPICKORDERTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpIdTrans.
     * @return the ItmGrpIdTrans
     */
    public String getItmGrpIdTrans() {
        return (String)getAttributeInternal(ITMGRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpIdTrans.
     * @param value value to set the  ItmGrpIdTrans
     */
    public void setItmGrpIdTrans(String value) {
        setAttributeInternal(ITMGRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIssueCheckTrans.
     * @return the ItemIssueCheckTrans
     */
    public String getItemIssueCheckTrans() {
            if (getItmId() != null) {
                //ViewObjectImpl lotVO = getAm().getMnfRcOpItmLotVO1();
            ViewObjectImpl lotVO = getAm().getMnfRcOpItmLotVO2();
               // lotVO.executeQuery();
                RowQualifier rq = new RowQualifier(lotVO);
                rq.setWhereClause("SlocId=" + this.getSlocId() + " and CldId='" + this.getCldId() + "' and OrgId='" +
                                  this.getOrgId() + "' and HoOrgId='" + this.getHoOrgId() + "' and ItmId='" +
                                  this.getItmId() + "' and DocId='" + this.getDocId() +"' and PdoId='" + this.getPdoId() +"'");
                Row fltrdrow[] = lotVO.getFilteredRows(rq);
               // System.out.println("Rq-"+rq.getExprStr()+" and tot row in Lot : "+fltrdrow.length);
                if (fltrdrow.length > 0) {
                    return "Y";
                } else {
                    return "N";
                }
        }
       // return "N";
        return (String) getAttributeInternal(ITEMISSUECHECKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIssueCheckTrans.
     * @param value value to set the  ItemIssueCheckTrans
     */
    public void setItemIssueCheckTrans(String value) {
        setAttributeInternal(ITEMISSUECHECKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActualItemQtyDispTrans.
     * @return the ActualItemQtyDispTrans
     */
    public Number getActualItemQtyDispTrans() {
        //return (Number) getAttributeInternal(ACTUALITEMQTYDISPTRANS);
        return this.getActItmQty();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActualItemQtyDispTrans.
     * @param value value to set the  ActualItemQtyDispTrans
     */
    public void setActualItemQtyDispTrans(Number value) {
        setAttributeInternal(ACTUALITEMQTYDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AutoIssueTrans.
     * @return the AutoIssueTrans
     */
    public String getAutoIssueTrans() {
        if (this.getItmPickOrderTrans() != null && this.getItmType() != null) {
          //  System.out.println("Pick Order Val : " + this.getItmPickOrderTrans());
          //  System.out.println("ITM Type : " + this.getItmType());
         //   System.out.println("Itm Issue Type : " + this.getIssuType());
            if ((this.getItmPickOrderTrans() == 305 || this.getItmPickOrderTrans() == 306)
                && (this.getItmType() == 62 || this.getItmType() == 63) && this.getConsmptnFlg().equals("Y")) 
            {
                return "Y";
            }
        }
        return "N";
        //return (String) getAttributeInternal(AUTOISSUETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AutoIssueTrans.
     * @param value value to set the  AutoIssueTrans
     */
    public void setAutoIssueTrans(String value) {
        setAttributeInternal(AUTOISSUETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectItemTrans.
     * @return the SelectItemTrans
     */
    public String getSelectItemTrans() {
        if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
            this.getItmType() != null && this.getIssuType() != null) {
            if (this.getItmSerializedFlgTrans().equalsIgnoreCase("Y") && this.getItmPickOrderTrans() == 307 &&
                (this.getItmType() == 62 || this.getItmType() == 63) && this.getConsmptnFlg().equals("Y")) 
            {
                return "Y";
            }
        }
        return "N";
        //return (String) getAttributeInternal(SELECTITEMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectItemTrans.
     * @param value value to set the  SelectItemTrans
     */
    public void setSelectItemTrans(String value) {
        setAttributeInternal(SELECTITEMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectLotTrans.
     * @return the SelectLotTrans
     */
    public String getSelectLotTrans() {
        if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
            this.getItmType() != null && this.getIssuType() != null) {
            if (this.getItmSerializedFlgTrans().equalsIgnoreCase("N") && this.getItmPickOrderTrans() == 307 &&
                (this.getItmType() == 62 || this.getItmType() == 63) && this.getConsmptnFlg().equals("Y")) 
            {
                return "Y";
            }
        }
        return "N";
        //return (String) getAttributeInternal(SELECTLOTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectLotTrans.
     * @param value value to set the  SelectLotTrans
     */
    public void setSelectLotTrans(String value) {
        setAttributeInternal(SELECTLOTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectLotBinTrans.
     * @return the SelectLotBinTrans
     */
    public String getSelectLotBinTrans() {
            if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
                this.getItmType() != null && this.getIssuType() != null) {
                if (this.getItmSerializedFlgTrans().equalsIgnoreCase("N") && this.getItmPickOrderTrans() == 307 &&
                    (this.getItmType() == 62 || this.getItmType() == 63) && this.getConsmptnFlg().equals("Y")) 
                {
                    return "Y";
                }
            }
            return "N";
        //return (String) getAttributeInternal(SELECTLOTBINTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectLotBinTrans.
     * @param value value to set the  SelectLotBinTrans
     */
    public void setSelectLotBinTrans(String value) {
        setAttributeInternal(SELECTLOTBINTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockAvailableStoreTrans.
     * @return the StockAvailableStoreTrans
     */
    public Number getStockAvailableStoreTrans() {
        if (getAttributeInternal(STOCKAVAILABLESTORETRANS) == null) {
            try {
                Object mrs = getAm().getMnfRcVO().getCurrentRow().getAttribute("MrsId");
                // System.out.println("MyIssueItemChk frm stock ::: " + getItemIssueCheckTrans());
              //  if(mrs != null){
                Object val = this.callStoredFunction(Types.NUMERIC, "MNF.FN_MNF_MM_GET_AVAIL_STK(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                     this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                     this.getItmId(), this.getWhId(), this.getUsrIdCreateDt(), this.getDocId(), this.getMrsId(), this.getItemIssueCheckTrans()});
              //  System.out.println("item stk is :::" + val);
                if (val != null) {
                    setStockAvailableStoreTrans(new Number(val));
                }
               // }
            } catch (Exception e) {
                e.printStackTrace();
             //   System.out.println("ERROR IN CALLING FUNCTION FN_MNF_MM_GET_AVAIL_STK at RcOpItmRowImpl:" +
              //                     e.getMessage());

                setStockAvailableStoreTrans(new Number(0));
            }
        }
        return (Number)getAttributeInternal(STOCKAVAILABLESTORETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockAvailableStoreTrans.
     * @param value value to set the  StockAvailableStoreTrans
     */
    public void setStockAvailableStoreTrans(Number value) {
        setAttributeInternal(STOCKAVAILABLESTORETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShopFloorAvailableTrans.
     * @return the ShopFloorAvailableTrans
     */
    public Number getShopFloorAvailableTrans() {
        if (getAttributeInternal(SHOPFLOORAVAILABLETRANS) == null) {
            try {
              //  System.out.println("MyIssueItemChk frin shop floor : " + getItemIssueCheckTrans());
                Object val = this.callStoredFunction(Types.NUMERIC, "MNF.FN_MNF_SF_GET_AVAIL_STK(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                     this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                     this.getItmId(), this.getWhId(), this.getUsrIdCreateDt(), this.getRqmtAreaId(), this.getDocId(), this.getItemIssueCheckTrans()});
                if (val != null) {
                    setShopFloorAvailableTrans(new Number(val));
                }
            } catch (Exception e) {
                e.printStackTrace();
              //  System.out.println("ERROR IN CALLING FUNCTION FN_MNF_SF_GET_AVAIL_STK at MnfRcOpItmRowImpl:" +
              //                     e.getMessage());

                setShopFloorAvailableTrans(new Number(0));
            }
        }
        return (Number)getAttributeInternal(SHOPFLOORAVAILABLETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShopFloorAvailableTrans.
     * @param value value to set the  ShopFloorAvailableTrans
     */
    public void setShopFloorAvailableTrans(Number value) {
        setAttributeInternal(SHOPFLOORAVAILABLETRANS, value);
    }

    /**
     * Gets the attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @return the RQMT_AREA_ID
     */
    public Integer getRqmtAreaId() {
        return (Integer)getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @param value value to set the RQMT_AREA_ID
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for CONSMPTN_FLG using the alias name ConsmptnFlg.
     * @return the CONSMPTN_FLG
     */
    public String getConsmptnFlg() {
        return (String) getAttributeInternal(CONSMPTNFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for CONSMPTN_FLG using the alias name ConsmptnFlg.
     * @param value value to set the CONSMPTN_FLG
     */
    public void setConsmptnFlg(String value) {
        setAttributeInternal(CONSMPTNFLG, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for MRS_ID using the alias name MrsId.
     * @return the MRS_ID
     */
    public String getMrsId() {
        return (String) getAttributeInternal(MRSID);
    }

    /**
     * Sets <code>value</code> as attribute value for MRS_ID using the alias name MrsId.
     * @param value value to set the MRS_ID
     */
    public void setMrsId(String value) {
        setAttributeInternal(MRSID, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWhId.
     * @return the TransWhId
     */
    public String getTransWhId() {
        String id = this.getWhId();
        if (id != null) {
            MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
            //ViewObjectImpl idVO1 = am.getLOVWhIdVO1();
            ViewObjectImpl idVO1 = am.getLOVWhNmeVO1();

            RowQualifier rQ = new RowQualifier(idVO1);
            rQ.setWhereClause("CldId='" + this.getCldId() + "' AND SlocId=" + this.getSlocId() + " AND HoOrgId='" +
                              this.getHoOrgId() + "' AND OrgId='" + this.getOrgId() + "' AND WhId='" + id + "'");
            Row[] filteredRows = idVO1.getFilteredRows(rQ);
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("WhNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSWHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWhId.
     * @param value value to set the  TransWhId
     */
    public void setTransWhId(String value) {
        setAttributeInternal(TRANSWHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProjNme.
     * @return the TransProjNme
     */
    public String getTransProjNme() {
        MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
        if (this.getWhId() != null) {
            ViewObjectImpl out = am.getLOVProjectNameVO1();
            out.setNamedWhereClauseParam("BindCldId", getCldId());
            out.setNamedWhereClauseParam("BindSlocId", getSlocId());
            out.setNamedWhereClauseParam("BindOrgId", getOrgId());
            out.setNamedWhereClauseParam("BindWhId", getWhId());
            Row[] ar = out.getFilteredRows("PrjId", getPrjId());
            if (ar.length > 0) {
                Object att = ar[0].getAttribute("ProjNm");
                String val = (att == null ? null : att.toString());
                return val;
            }
        }
        return (String) getAttributeInternal(TRANSPROJNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjNme.
     * @param value value to set the  TransProjNme
     */
    public void setTransProjNme(String value) {
        setAttributeInternal(TRANSPROJNME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransReqmtNme.
     * @return the TransReqmtNme
     */
    public String getTransReqmtNme() {
        if (getAttributeInternal(TRANSREQMTNME) == null) {
            Integer id = this.getRqmtAreaId();
            if (id != null) {
                MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
                ViewObjectImpl idVO1 = am.getLOVRequirementIdVO1();

                RowQualifier rQ = new RowQualifier(idVO1);
                rQ.setWhereClause("CldId='" + this.getCldId() + "' AND SlocId=" + this.getSlocId() + " AND OrgId='" +
                                  this.getOrgId() + "' AND RqmtAreaId=" + id);
                Row[] filteredRows = idVO1.getFilteredRows(rQ);
                if (filteredRows.length > 0) {
                    return filteredRows[0].getAttribute("RqmtAreaNm").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSREQMTNME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransReqmtNme.
     * @param value value to set the  TransReqmtNme
     */
    public void setTransReqmtNme(String value) {
        setAttributeInternal(TRANSREQMTNME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRcOpItmLot.
     */
    public RowIterator getMnfRcOpItmLot() {
        return (RowIterator)getAttributeInternal(MNFRCOPITMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRcOpItmBin.
     */
    public RowIterator getMnfRcOpItmBin() {
        return (RowIterator)getAttributeInternal(MNFRCOPITMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfRcOpItmSr.
     */
    public RowIterator getMnfRcOpItmSr() {
        return (RowIterator)getAttributeInternal(MNFRCOPITMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkLotVW.
     */
    public RowIterator getMnfItmStkLotVW() {
        return (RowIterator)getAttributeInternal(MNFITMSTKLOTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkBinVw.
     */
    public RowIterator getMnfItmStkBinVw() {
        return (RowIterator)getAttributeInternal(MNFITMSTKBINVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkSrVw.
     */
    public RowIterator getMnfItmStkSrVw() {
        return (RowIterator)getAttributeInternal(MNFITMSTKSRVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkBinRqmtVw.
     */
    public RowIterator getMnfItmStkBinRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFITMSTKBINRQMTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkLotRqmtVw.
     */
    public RowIterator getMnfItmStkLotRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFITMSTKLOTRQMTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfItmStkSrRqmtVw.
     */
    public RowIterator getMnfItmStkSrRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFITMSTKSRRQMTVW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemIdVO1.
     */
    public RowSet getLOVItemIdVO1() {
        return (RowSet)getAttributeInternal(LOVITEMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemTypeVO1.
     */
    public RowSet getLOVItemTypeVO1() {
        return (RowSet)getAttributeInternal(LOVITEMTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpIdVO1.
     */
    public RowSet getLOVOpIdVO1() {
        return (RowSet)getAttributeInternal(LOVOPIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVPdoIdVO1.
     */
    public RowSet getLOVPdoIdVO1() {
        return (RowSet)getAttributeInternal(LOVPDOIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemFromPrfVO1.
     */
    public RowSet getLOVItemFromPrfVO1() {
        return (RowSet)getAttributeInternal(LOVITEMFROMPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVProjectNameVO1.
     */
    public RowSet getLOVProjectNameVO1() {
        return (RowSet) getAttributeInternal(LOVPROJECTNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWhIdVO1.
     */
    public RowSet getLOVWhIdVO1() {
        return (RowSet) getAttributeInternal(LOVWHIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRequirementIdVO1.
     */
    public RowSet getLOVRequirementIdVO1() {
        return (RowSet) getAttributeInternal(LOVREQUIREMENTIDVO1);
    }

    /********************    STORED Function    *************************************/

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
      //  System.out.println("Inside Callable Function");
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
           // System.out.println("Statement is " + st);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                //    System.out.println("Bind Variable is " + bindVars[z]);
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
         //   System.out.println("Return value is " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

