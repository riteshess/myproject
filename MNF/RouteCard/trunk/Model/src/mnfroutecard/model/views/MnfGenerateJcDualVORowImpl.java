package mnfroutecard.model.views;

import mnfroutecard.model.services.MNFRouteCardAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 09 12:53:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfGenerateJcDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        GenerateTypeTrans,
        OperationNmTrans,
        OperationIdDispTrans,
        OpSrNoJcTrans,
        OutputItmIdJcTrans,
        OutputItmQtyJcTrans,
        WcIdJcTrans,
        OpLocTypeJcTrans,
        WorkStationNmTrans,
        WorkStationIdDispTrans,
        ShiftNmTrans,
        ShiftIdDispTrans,
        EmplNmTrans,
        EmplIdDispTrans,
        StrtDtJcTrans,
        EndDtJcTrans,
        OpRmrkJcTrans,
        UsrIdCreate,
        UsrIdCreateDt,
        RcDocIdTrans,
        PendindOpQty,
        LOVOperationNmVO1,
        LOVEmpIdVO1,
        LOVItemIdVO1,
        LOVLocTypeVO1,
        LOVOperationTypeVO1,
        LOVShiftIdVO1,
        LOVWorkStationIdVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int GENERATETYPETRANS = AttributesEnum.GenerateTypeTrans.index();
    public static final int OPERATIONNMTRANS = AttributesEnum.OperationNmTrans.index();
    public static final int OPERATIONIDDISPTRANS = AttributesEnum.OperationIdDispTrans.index();
    public static final int OPSRNOJCTRANS = AttributesEnum.OpSrNoJcTrans.index();
    public static final int OUTPUTITMIDJCTRANS = AttributesEnum.OutputItmIdJcTrans.index();
    public static final int OUTPUTITMQTYJCTRANS = AttributesEnum.OutputItmQtyJcTrans.index();
    public static final int WCIDJCTRANS = AttributesEnum.WcIdJcTrans.index();
    public static final int OPLOCTYPEJCTRANS = AttributesEnum.OpLocTypeJcTrans.index();
    public static final int WORKSTATIONNMTRANS = AttributesEnum.WorkStationNmTrans.index();
    public static final int WORKSTATIONIDDISPTRANS = AttributesEnum.WorkStationIdDispTrans.index();
    public static final int SHIFTNMTRANS = AttributesEnum.ShiftNmTrans.index();
    public static final int SHIFTIDDISPTRANS = AttributesEnum.ShiftIdDispTrans.index();
    public static final int EMPLNMTRANS = AttributesEnum.EmplNmTrans.index();
    public static final int EMPLIDDISPTRANS = AttributesEnum.EmplIdDispTrans.index();
    public static final int STRTDTJCTRANS = AttributesEnum.StrtDtJcTrans.index();
    public static final int ENDDTJCTRANS = AttributesEnum.EndDtJcTrans.index();
    public static final int OPRMRKJCTRANS = AttributesEnum.OpRmrkJcTrans.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int RCDOCIDTRANS = AttributesEnum.RcDocIdTrans.index();
    public static final int PENDINDOPQTY = AttributesEnum.PendindOpQty.index();
    public static final int LOVOPERATIONNMVO1 = AttributesEnum.LOVOperationNmVO1.index();
    public static final int LOVEMPIDVO1 = AttributesEnum.LOVEmpIdVO1.index();
    public static final int LOVITEMIDVO1 = AttributesEnum.LOVItemIdVO1.index();
    public static final int LOVLOCTYPEVO1 = AttributesEnum.LOVLocTypeVO1.index();
    public static final int LOVOPERATIONTYPEVO1 = AttributesEnum.LOVOperationTypeVO1.index();
    public static final int LOVSHIFTIDVO1 = AttributesEnum.LOVShiftIdVO1.index();
    public static final int LOVWORKSTATIONIDVO1 = AttributesEnum.LOVWorkStationIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfGenerateJcDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute GenerateTypeTrans.
     * @return the GenerateTypeTrans
     */
    public Integer getGenerateTypeTrans() {
        return (Integer)getAttributeInternal(GENERATETYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GenerateTypeTrans.
     * @param value value to set the  GenerateTypeTrans
     */
    public void setGenerateTypeTrans(Integer value) {
        setAttributeInternal(GENERATETYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationNmTrans.
     * @return the OperationNmTrans
     */
    public String getOperationNmTrans() {
        return (String)getAttributeInternal(OPERATIONNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationNmTrans.
     * @param value value to set the  OperationNmTrans
     */
    public void setOperationNmTrans(String value) {
        setAttributeInternal(OPERATIONNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationIdDispTrans.
     * @return the OperationIdDispTrans
     */
    public String getOperationIdDispTrans() {
        return (String)getAttributeInternal(OPERATIONIDDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationIdDispTrans.
     * @param value value to set the  OperationIdDispTrans
     */
    public void setOperationIdDispTrans(String value) {
        setAttributeInternal(OPERATIONIDDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNoJcTrans.
     * @return the OpSrNoJcTrans
     */
    public Integer getOpSrNoJcTrans() {
        return (Integer)getAttributeInternal(OPSRNOJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpSrNoJcTrans.
     * @param value value to set the  OpSrNoJcTrans
     */
    public void setOpSrNoJcTrans(Integer value) {
        setAttributeInternal(OPSRNOJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputItmIdJcTrans.
     * @return the OutputItmIdJcTrans
     */
    public String getOutputItmIdJcTrans() {
        return (String)getAttributeInternal(OUTPUTITMIDJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputItmIdJcTrans.
     * @param value value to set the  OutputItmIdJcTrans
     */
    public void setOutputItmIdJcTrans(String value) {
        setAttributeInternal(OUTPUTITMIDJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputItmQtyJcTrans.
     * @return the OutputItmQtyJcTrans
     */
    public Number getOutputItmQtyJcTrans() {
        return (Number)getAttributeInternal(OUTPUTITMQTYJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputItmQtyJcTrans.
     * @param value value to set the  OutputItmQtyJcTrans
     */
    public void setOutputItmQtyJcTrans(Number value) {
        setAttributeInternal(OUTPUTITMQTYJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WcIdJcTrans.
     * @return the WcIdJcTrans
     */
    public String getWcIdJcTrans() {
        return (String)getAttributeInternal(WCIDJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WcIdJcTrans.
     * @param value value to set the  WcIdJcTrans
     */
    public void setWcIdJcTrans(String value) {
        setAttributeInternal(WCIDJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpLocTypeJcTrans.
     * @return the OpLocTypeJcTrans
     */
    public Integer getOpLocTypeJcTrans() {
        return (Integer)getAttributeInternal(OPLOCTYPEJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpLocTypeJcTrans.
     * @param value value to set the  OpLocTypeJcTrans
     */
    public void setOpLocTypeJcTrans(Integer value) {
        setAttributeInternal(OPLOCTYPEJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkStationNmTrans.
     * @return the WorkStationNmTrans
     */
    public String getWorkStationNmTrans() {
        //return (String)getAttributeInternal(WORKSTATIONNMTRANS);
        return this.getWorkStationIdDispTrans();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkStationNmTrans.
     * @param value value to set the  WorkStationNmTrans
     */
    public void setWorkStationNmTrans(String value) {
        setAttributeInternal(WORKSTATIONNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkStationIdDispTrans.
     * @return the WorkStationIdDispTrans
     */
    public String getWorkStationIdDispTrans() {
        return (String)getAttributeInternal(WORKSTATIONIDDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkStationIdDispTrans.
     * @param value value to set the  WorkStationIdDispTrans
     */
    public void setWorkStationIdDispTrans(String value) {
        setAttributeInternal(WORKSTATIONIDDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftNmTrans.
     * @return the ShiftNmTrans
     */
    public String getShiftNmTrans() {
        //return (String)getAttributeInternal(SHIFTNMTRANS);
        return this.getShiftIdDispTrans();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShiftNmTrans.
     * @param value value to set the  ShiftNmTrans
     */
    public void setShiftNmTrans(String value) {
        setAttributeInternal(SHIFTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftIdDispTrans.
     * @return the ShiftIdDispTrans
     */
    public String getShiftIdDispTrans() {
        return (String)getAttributeInternal(SHIFTIDDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShiftIdDispTrans.
     * @param value value to set the  ShiftIdDispTrans
     */
    public void setShiftIdDispTrans(String value) {
        setAttributeInternal(SHIFTIDDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmplNmTrans.
     * @return the EmplNmTrans
     */
    public String getEmplNmTrans() {
        Integer empId = this.getEmplIdDispTrans();
        MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
        ViewObjectImpl empIdVO1 = am.getLOVEmpIdVO1();

        RowQualifier rQ = new RowQualifier(empIdVO1);
        rQ.setWhereClause("CldId='" + this.getCldId() + "' and SlocId=" + this.getSlocId() + " and HoOrgId='" +
                          this.getHoOrgId() + "' and OrgId='" + this.getOrgId() + "' and EmpId=" + empId);
        Row[] filteredRows = empIdVO1.getFilteredRows(rQ);
        if (filteredRows.length > 0) {
            return filteredRows[0].getAttribute("EmpNm").toString();
        } else {
        return (String)getAttributeInternal(EMPLNMTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmplNmTrans.
     * @param value value to set the  EmplNmTrans
     */
    public void setEmplNmTrans(String value) {
        setAttributeInternal(EMPLNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmplIdDispTrans.
     * @return the EmplIdDispTrans
     */
    public Integer getEmplIdDispTrans() {
        return (Integer)getAttributeInternal(EMPLIDDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmplIdDispTrans.
     * @param value value to set the  EmplIdDispTrans
     */
    public void setEmplIdDispTrans(Integer value) {
        setAttributeInternal(EMPLIDDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StrtDtJcTrans.
     * @return the StrtDtJcTrans
     */
    public Timestamp getStrtDtJcTrans() {
        return (Timestamp)getAttributeInternal(STRTDTJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StrtDtJcTrans.
     * @param value value to set the  StrtDtJcTrans
     */
    public void setStrtDtJcTrans(Timestamp value) {
        setAttributeInternal(STRTDTJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDtJcTrans.
     * @return the EndDtJcTrans
     */
    public Timestamp getEndDtJcTrans() {
        return (Timestamp)getAttributeInternal(ENDDTJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EndDtJcTrans.
     * @param value value to set the  EndDtJcTrans
     */
    public void setEndDtJcTrans(Timestamp value) {
        setAttributeInternal(ENDDTJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OpRmrkJcTrans.
     * @return the OpRmrkJcTrans
     */
    public String getOpRmrkJcTrans() {
        return (String)getAttributeInternal(OPRMRKJCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OpRmrkJcTrans.
     * @param value value to set the  OpRmrkJcTrans
     */
    public void setOpRmrkJcTrans(String value) {
        setAttributeInternal(OPRMRKJCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreate.
     * @param value value to set the  UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreateDt.
     * @param value value to set the  UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RcDocIdTrans.
     * @return the RcDocIdTrans
     */
    public String getRcDocIdTrans() {
        MNFRouteCardAMImpl am = (MNFRouteCardAMImpl)this.getApplicationModule();
        Row currentRow = am.getMnfRcVO().getCurrentRow();
        if(currentRow != null){
            Object docId = currentRow.getAttribute("DocId");
            if(docId != null){
                return docId.toString();
            }
        }
        return (String)getAttributeInternal(RCDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RcDocIdTrans.
     * @param value value to set the  RcDocIdTrans
     */
    public void setRcDocIdTrans(String value) {
        setAttributeInternal(RCDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PendindOpQty.
     * @return the PendindOpQty
     */
    public Number getPendindOpQty() {
        return (Number) getAttributeInternal(PENDINDOPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PendindOpQty.
     * @param value value to set the  PendindOpQty
     */
    public void setPendindOpQty(Number value) {
        setAttributeInternal(PENDINDOPQTY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationNmVO1.
     */
    public RowSet getLOVOperationNmVO1() {
        return (RowSet)getAttributeInternal(LOVOPERATIONNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEmpIdVO1.
     */
    public RowSet getLOVEmpIdVO1() {
        return (RowSet)getAttributeInternal(LOVEMPIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemIdVO1.
     */
    public RowSet getLOVItemIdVO1() {
        return (RowSet)getAttributeInternal(LOVITEMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLocTypeVO1.
     */
    public RowSet getLOVLocTypeVO1() {
        return (RowSet)getAttributeInternal(LOVLOCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationTypeVO1.
     */
    public RowSet getLOVOperationTypeVO1() {
        return (RowSet)getAttributeInternal(LOVOPERATIONTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVShiftIdVO1.
     */
    public RowSet getLOVShiftIdVO1() {
        return (RowSet)getAttributeInternal(LOVSHIFTIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWorkStationIdVO1.
     */
    public RowSet getLOVWorkStationIdVO1() {
        return (RowSet)getAttributeInternal(LOVWORKSTATIONIDVO1);
    }
}

