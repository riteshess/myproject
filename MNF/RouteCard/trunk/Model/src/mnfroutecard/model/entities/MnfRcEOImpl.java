package mnfroutecard.model.entities;

import java.math.BigDecimal;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 19 18:10:57 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfRcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        RcId,
        RcStat,
        StrtDt,
        EndDt,
        RcRmrk,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        RcMode,
        RcType,
        RcBasis,
        QtyBrct,
        WhId,
        RqmtAreaId,
        ActOutptItmQty,
        MrsId,
        OutptItmId,
        OutptItmQty,
        LocType,
        EoId,
        CurrIdSp,
        CurrConvFctr,
        ActStrtDt,
        ActEndDt,
        PrjId,
        MnfRcOp,
        MnfRcAttch,
        MnfRcParam,
        MnfRcBarcode,
        MnfRcItmStk,
        MnfRcOpQcParam;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int RCID = AttributesEnum.RcId.index();
    public static final int RCSTAT = AttributesEnum.RcStat.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int RCRMRK = AttributesEnum.RcRmrk.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int RCMODE = AttributesEnum.RcMode.index();
    public static final int RCTYPE = AttributesEnum.RcType.index();
    public static final int RCBASIS = AttributesEnum.RcBasis.index();
    public static final int QTYBRCT = AttributesEnum.QtyBrct.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int ACTOUTPTITMQTY = AttributesEnum.ActOutptItmQty.index();
    public static final int MRSID = AttributesEnum.MrsId.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int LOCTYPE = AttributesEnum.LocType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int ACTSTRTDT = AttributesEnum.ActStrtDt.index();
    public static final int ACTENDDT = AttributesEnum.ActEndDt.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int MNFRCOP = AttributesEnum.MnfRcOp.index();
    public static final int MNFRCATTCH = AttributesEnum.MnfRcAttch.index();
    public static final int MNFRCPARAM = AttributesEnum.MnfRcParam.index();
    public static final int MNFRCBARCODE = AttributesEnum.MnfRcBarcode.index();
    public static final int MNFRCITMSTK = AttributesEnum.MnfRcItmStk.index();
    public static final int MNFRCOPQCPARAM = AttributesEnum.MnfRcOpQcParam.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfRcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfroutecard.model.entities.MnfRcEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for RcId, using the alias name RcId.
     * @return the value of RcId
     */
    public String getRcId() {
        return (String) getAttributeInternal(RCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcId.
     * @param value value to set the RcId
     */
    public void setRcId(String value) {
        setAttributeInternal(RCID, value);
    }

    /**
     * Gets the attribute value for RcStat, using the alias name RcStat.
     * @return the value of RcStat
     */
    public Integer getRcStat() {
        return (Integer) getAttributeInternal(RCSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcStat.
     * @param value value to set the RcStat
     */
    public void setRcStat(Integer value) {
        setAttributeInternal(RCSTAT, value);
    }


    /**
     * Gets the attribute value for StrtDt, using the alias name StrtDt.
     * @return the value of StrtDt
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StrtDt.
     * @param value value to set the StrtDt
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for EndDt, using the alias name EndDt.
     * @return the value of EndDt
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDt.
     * @param value value to set the EndDt
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for RcRmrk, using the alias name RcRmrk.
     * @return the value of RcRmrk
     */
    public String getRcRmrk() {
        return (String) getAttributeInternal(RCRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcRmrk.
     * @param value value to set the RcRmrk
     */
    public void setRcRmrk(String value) {
        setAttributeInternal(RCRMRK, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for RcMode, using the alias name RcMode.
     * @return the value of RcMode
     */
    public Integer getRcMode() {
        return (Integer) getAttributeInternal(RCMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcMode.
     * @param value value to set the RcMode
     */
    public void setRcMode(Integer value) {
        setAttributeInternal(RCMODE, value);
    }

    /**
     * Gets the attribute value for RcType, using the alias name RcType.
     * @return the value of RcType
     */
    public Integer getRcType() {
        return (Integer) getAttributeInternal(RCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcType.
     * @param value value to set the RcType
     */
    public void setRcType(Integer value) {
        setAttributeInternal(RCTYPE, value);
    }

    /**
     * Gets the attribute value for RcBasis, using the alias name RcBasis.
     * @return the value of RcBasis
     */
    public Integer getRcBasis() {
        return (Integer) getAttributeInternal(RCBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcBasis.
     * @param value value to set the RcBasis
     */
    public void setRcBasis(Integer value) {
        setAttributeInternal(RCBASIS, value);
    }


    /**
     * Gets the attribute value for QtyBrct, using the alias name QtyBrct.
     * @return the value of QtyBrct
     */
    public Integer getQtyBrct() {
        return (Integer) getAttributeInternal(QTYBRCT);
    }

    /**
     * Sets <code>value</code> as the attribute value for QtyBrct.
     * @param value value to set the QtyBrct
     */
    public void setQtyBrct(Integer value) {
        setAttributeInternal(QTYBRCT, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for RqmtAreaId, using the alias name RqmtAreaId.
     * @return the value of RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer)getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaId.
     * @param value value to set the RqmtAreaId
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for ActOutptItmQty, using the alias name ActOutptItmQty.
     * @return the value of ActOutptItmQty
     */
    public oracle.jbo.domain.Number getActOutptItmQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ACTOUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActOutptItmQty.
     * @param value value to set the ActOutptItmQty
     */
    public void setActOutptItmQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(ACTOUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for MrsId, using the alias name MrsId.
     * @return the value of MrsId
     */
    public String getMrsId() {
        return (String) getAttributeInternal(MRSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MrsId.
     * @param value value to set the MrsId
     */
    public void setMrsId(String value) {
        setAttributeInternal(MRSID, value);
    }

    /**
     * Gets the attribute value for OutptItmId, using the alias name OutptItmId.
     * @return the value of OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmId.
     * @param value value to set the OutptItmId
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OutptItmQty, using the alias name OutptItmQty.
     * @return the value of OutptItmQty
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OutptItmQty.
     * @param value value to set the OutptItmQty
     */
    public void setOutptItmQty(Number value) {
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for LocType, using the alias name LocType.
     * @return the value of LocType
     */
    public Integer getLocType() {
        return (Integer) getAttributeInternal(LOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocType.
     * @param value value to set the LocType
     */
    public void setLocType(Integer value) {
        setAttributeInternal(LOCTYPE, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Number getEoId() {
        return (Number) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Number value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConvFctr, using the alias name CurrConvFctr.
     * @return the value of CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvFctr.
     * @param value value to set the CurrConvFctr
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ActStrtDt, using the alias name ActStrtDt.
     * @return the value of ActStrtDt
     */
    public Timestamp getActStrtDt() {
        return (Timestamp) getAttributeInternal(ACTSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActStrtDt.
     * @param value value to set the ActStrtDt
     */
    public void setActStrtDt(Timestamp value) {
        setAttributeInternal(ACTSTRTDT, value);
    }

    /**
     * Gets the attribute value for ActEndDt, using the alias name ActEndDt.
     * @return the value of ActEndDt
     */
    public Timestamp getActEndDt() {
        return (Timestamp) getAttributeInternal(ACTENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActEndDt.
     * @param value value to set the ActEndDt
     */
    public void setActEndDt(Timestamp value) {
        setAttributeInternal(ACTENDDT, value);
    }


    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcOp() {
        return (RowIterator) getAttributeInternal(MNFRCOP);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcAttch() {
        return (RowIterator) getAttributeInternal(MNFRCATTCH);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcParam() {
        return (RowIterator) getAttributeInternal(MNFRCPARAM);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcBarcode() {
        return (RowIterator) getAttributeInternal(MNFRCBARCODE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcItmStk() {
        return (RowIterator) getAttributeInternal(MNFRCITMSTK);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfRcOpQcParam() {
        return (RowIterator) getAttributeInternal(MNFRCOPQCPARAM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        this.setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        this.setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        this.setHoOrgId(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
        this.setOrgId(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
        this.setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        this.setDocDt(new Timestamp(System.currentTimeMillis()));
       // System.out.println("Sys Date is : " + new Timestamp(System.currentTimeMillis()));
        this.setRcStat(72);
        this.setDocId(GetHexDocNoFromFun());
        this.setFyId(GetFyIdFromFun());
        // this.setRcId(GetRcIdFromFun());       
        this.setRcBasis(92); // By Default it will set Rc Basis as PDO
        this.setRcType(80);
        this.setRcMode(79);
        ADFContext.getCurrent().getPageFlowScope().put("CC_CHK", getCostCenterChk());
        if(((String)resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ALW}")).equals("N")){
            setPrjId("PROJ0000");
            ADFContext.getCurrent().getPageFlowScope().put("GLBL_ORG_PROJ_ALW", "N");
        }else
            ADFContext.getCurrent().getPageFlowScope().put("GLBL_ORG_PROJ_ALW", "Y");
          super.create(attributeList);
       
    }
    
    public String getCostCenterChk(){
                String CcChk = null;
                int vv = getCostCenterChk_1();
            if(vv >= 1)
                CcChk= "Y";
            else 
            CcChk="N";
            
            return CcChk;
     }
    
    public int getCostCenterChk_1(){
            int vv=0;
        
            try {
                BigDecimal val =
                    (BigDecimal)callStoredFunction(Types.NUMERIC, "App.fn_is_cost_center_present(?,?,?,?,?)", new Object[] {
                                           this.getCldId(), this.getSlocId(),this.getHoOrgId(), this.getOrgId(), 26003
                });
              vv = val.intValue();
            } catch (Exception e) {
                // TODO: Add catch code
                e.printStackTrace();
            }
           System.out.println("---->> " + vv);
            return vv;
     }


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        if (operation == DML_UPDATE) {
            this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        } else if (operation == DML_INSERT) {
            this.setRcId(GetRcIdFromFun());
        }


        super.doDML(operation, e);
    }

    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /********************    STORED Function    *************************************/

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /** ---------- To create HexDocId Id -------------**/

    public String GetHexDocNoFromFun() {

        String hexDocIdFromFun = "0";
        try {
            hexDocIdFromFun = this.callStoredFunction(Types.VARCHAR, "APP.GET_TXN_ID(?,?,?,?,?,?)", new Object[] {
                                                      this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                      this.getUsrIdCreate(), 26003, 0
            }).toString();

        } catch (Exception e) {
            System.out.println("ERROR IN CALLING FUNCTION GET_TXN_ID at MnfRcEoImpl :" + e.getMessage());
        }
        System.out.println("===========" + hexDocIdFromFun);
        return hexDocIdFromFun;
    }

    /** ---------- To create FYID Id -------------**/

    public Integer GetFyIdFromFun() {
        Integer fyIdFromFun = 0;

        try {
            /* fyIdFromFun = (Integer) this.callStoredFunction(Types.INTEGER, "APP.GET_FY_ID(?,?,?,?)", new Object[] {
                                                            this.getCldId(), this.getOrgId(), this.getDocDt(), "FY"
            }); */
            
           fyIdFromFun = Integer.parseInt(callStoredFunction(Types.VARCHAR,"APP.GET_ORG_FY_ID(?,?,?,?)", new Object[] {
                                                                      getCldId(), getOrgId(), new Timestamp(System.currentTimeMillis()), "FY"
                        }).toString());

        } catch (Exception e) {
            System.out.println("ERROR IN CALLING FUNCTION GET_TXN_ID at MnfRcEoImpl :" + e.getMessage());
        }
        System.out.println("===========" + fyIdFromFun);

        return fyIdFromFun;
    }
    public String getYearFyId() {
        String pdoFyId = null;
        String cldId = null; //resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        /* if (EbizParams.GLBL_APP_CLD_ID() != null) {
            cldId = EbizParams.GLBL_APP_CLD_ID();
        }
        String usrOrg = null; //resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        if (EbizParams.GLBL_APP_USR_ORG() != null) {
            usrOrg = EbizParams.GLBL_APP_USR_ORG();
        } */

        try {
            pdoFyId = (String) callStoredFunction(Types.VARCHAR, "APP.PKG_APP.GET_FY_STAT_FOR_TXN(?,?,?)", new Object[] {
                                                   this.getCldId(), this.getOrgId(), new Timestamp(System.currentTimeMillis())
            });
        } catch (NumberFormatException nfe) {
            // TODO: Add catch code
            nfe.printStackTrace();
        }
        return pdoFyId;

    }


    /** ---------- To create DispRcId Id -------------**/

    public String GetRcIdFromFun() {
        String dispIdFromFum = "0";

        try {
            /* dispIdFromFum = this.callStoredFunction(Types.VARCHAR, "MNF.FN_MNF_GET_PRF_ID(?,?,?,?,?,?,?,?)", new Object[] {
                                                    this.getSlocId(), this.getCldId(), this.getHoOrgId(),
                                                    this.getOrgId(), 26003, null, "MNF$RC", 0
            }).toString(); */

            dispIdFromFum = this.callStoredFunction(Types.VARCHAR, "MNF.FN_MNF_GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                    this.getSlocId(), this.getCldId(), this.getOrgId(), 26003,
                                                    this.getDocId(), 0, "MNF$RC", this.getFyId(), 0
            }).toString();

        } catch (Exception e) {
            System.out.println("ERROR IN CALLING FUNCTION FN_MNF_GET_PRF_ID at MnfRcEoImpl :" + e.getMessage());
        }
        System.out.println("===========" + dispIdFromFum);

        return dispIdFromFum;
    }
    /**
     * Showing an error message.
     *
     * */
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {

        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);

    }

}

