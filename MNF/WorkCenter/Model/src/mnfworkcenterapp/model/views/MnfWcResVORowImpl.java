package mnfworkcenterapp.model.views;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import mnfworkcenterapp.model.entities.MnfWcResEOImpl;

import mnfworkcenterapp.model.module.MNFWorkcenterAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 30 15:03:02 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfWcResVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFWCRESEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        PicFlg,
        ShiftId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcEmpActv,
        WcEmpId,
        WcId,
        TransEmpId,
        TransEmpname,
        TransEmpActv,
        TransShiftId,
        TransShiftDesc,
        transKey,
        MnfWcResVO1,
        MnfShiftVO1,
        LOVAttachEmployeeVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int PICFLG = AttributesEnum.PicFlg.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCEMPACTV = AttributesEnum.WcEmpActv.index();
    public static final int WCEMPID = AttributesEnum.WcEmpId.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int TRANSEMPID = AttributesEnum.TransEmpId.index();
    public static final int TRANSEMPNAME = AttributesEnum.TransEmpname.index();
    public static final int TRANSEMPACTV = AttributesEnum.TransEmpActv.index();
    public static final int TRANSSHIFTID = AttributesEnum.TransShiftId.index();
    public static final int TRANSSHIFTDESC = AttributesEnum.TransShiftDesc.index();
    public static final int TRANSKEY = AttributesEnum.transKey.index();
    public static final int MNFWCRESVO1 = AttributesEnum.MnfWcResVO1.index();
    public static final int MNFSHIFTVO1 = AttributesEnum.MnfShiftVO1.index();
    public static final int LOVATTACHEMPLOYEEVO1 = AttributesEnum.LOVAttachEmployeeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfWcResVORowImpl() {
    }

    /**
     * Gets MnfWcResEO entity object.
     * @return the MnfWcResEO
     */
    public MnfWcResEOImpl getMnfWcResEO() {
        return (MnfWcResEOImpl) getEntity(ENTITY_MNFWCRESEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for PIC_FLG using the alias name PicFlg.
     * @return the PIC_FLG
     */
    public String getPicFlg() {
        return (String) getAttributeInternal(PICFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for PIC_FLG using the alias name PicFlg.
     * @param value value to set the PIC_FLG
     */
    public void setPicFlg(String value) {
        setAttributeInternal(PICFLG, value);
    }

    /**
     * Gets the attribute value for SHIFT_ID using the alias name ShiftId.
     * @return the SHIFT_ID
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIFT_ID using the alias name ShiftId.
     * @param value value to set the SHIFT_ID
     */
    public void setShiftId(String value) {
        if (!getAM().duplicateEmp(getTransShiftDesc(), getTransEmpname())) {
            setAttributeInternal(SHIFTID, value);
        } else {
            setTransShiftDesc(null);
            showFacesMsg("Employee has already been attached to this Shift!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        }
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WC_EMP_ACTV using the alias name WcEmpActv.
     * @return the WC_EMP_ACTV
     */
    public String getWcEmpActv() {
        return (String) getAttributeInternal(WCEMPACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_EMP_ACTV using the alias name WcEmpActv.
     * @param value value to set the WC_EMP_ACTV
     */
    public void setWcEmpActv(String value) {
        setAttributeInternal(WCEMPACTV, value);
    }

    /**
     * Gets the attribute value for WC_EMP_ID using the alias name WcEmpId.
     * @return the WC_EMP_ID
     */
    public Integer getWcEmpId() {
        return (Integer) getAttributeInternal(WCEMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_EMP_ID using the alias name WcEmpId.
     * @param value value to set the WC_EMP_ID
     */
    public void setWcEmpId(Integer value) {
        //if(!getAM().duplicateEmp(getTransEmpname())){
        setAttributeInternal(WCEMPID, value);
        /*   }
          else {
           setTransEmpname(null);
               showFacesMsg("Duplicate Employee!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        }   */
    }

    /**
     * Gets the attribute value for WC_ID using the alias name WcId.
     * @return the WC_ID
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_ID using the alias name WcId.
     * @param value value to set the WC_ID
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpId.
     * @return the TransEmpId
     */
    public Integer getTransEmpId() {
        return (Integer) getAttributeInternal(TRANSEMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpId.
     * @param value value to set the  TransEmpId
     */
    public void setTransEmpId(Integer value) {
        setAttributeInternal(TRANSEMPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpname.
     * @return the TransEmpname
     */
    public String getTransEmpname() {
        if (getWcEmpId() != null) {
            System.out.println("getTransEmpname " + getWcEmpId());
            if (getAM().getLOVAttachEmployee1().getFilteredRows("EoId", getWcEmpId()).length > 0) {
                System.out.println("getTransEmpname " + getWcEmpId());
                return (getAM().getLOVAttachEmployee1().getFilteredRows("EoId",
                                                                        getWcEmpId()))[0].getAttribute("EoNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSEMPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpname.
     * @param value value to set the  TransEmpname
     */
    public void setTransEmpname(String value) {
        setAttributeInternal(TRANSEMPNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEmpActv.
     * @return the TransEmpActv
     */
    public String getTransEmpActv() {
        return (String) getAttributeInternal(TRANSEMPACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpActv.
     * @param value value to set the  TransEmpActv
     */
    public void setTransEmpActv(String value) {
        setAttributeInternal(TRANSEMPACTV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftId.
     * @return the TransShiftId
     */
    public String getTransShiftId() {
        return (String) getAttributeInternal(TRANSSHIFTID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftDesc.
     * @return the TransShiftDesc
     */
    public String getTransShiftDesc() {
        if (getShiftId() != null) {
            if (getAM().getMnfShift1().getFilteredRows("ShiftId", getShiftId()).length > 0) {
                System.out.println("getTransShiftDesc " + getShiftId());
                return (getAM().getMnfShift1().getFilteredRows("ShiftId",
                                                               getShiftId()))[0].getAttribute("ShiftNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSSHIFTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShiftDesc.
     * @param value value to set the  TransShiftDesc
     */
    public void setTransShiftDesc(String value) {
        setAttributeInternal(TRANSSHIFTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transKey.
     * @return the transKey
     */
    public Object gettransKey() {
        return getKey();
        //return (Object) getAttributeInternal(TRANSKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transKey.
     * @param value value to set the  transKey
     */
    public void settransKey(Object value) {
        setAttributeInternal(TRANSKEY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MnfWcResVO1.
     */
    public RowSet getMnfWcResVO1() {
        return (RowSet) getAttributeInternal(MNFWCRESVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> MnfShiftVO1.
     */
    public RowSet getMnfShiftVO1() {
        return (RowSet) getAttributeInternal(MNFSHIFTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAttachEmployeeVO1.
     */
    public RowSet getLOVAttachEmployeeVO1() {
        return (RowSet) getAttributeInternal(LOVATTACHEMPLOYEEVO1);
    }

    private MNFWorkcenterAMImpl getAM() {
        return (MNFWorkcenterAMImpl) this.getApplicationModule();
    }

    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {

        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }
}

