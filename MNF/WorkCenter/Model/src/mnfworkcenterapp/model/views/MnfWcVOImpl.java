package mnfworkcenterapp.model.views;

import java.sql.ResultSet;
import java.sql.Timestamp;

import mnfworkcenterapp.model.views.common.MnfWcVO;

import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.RowFinder;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 01 17:54:45 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfWcVOImpl extends ViewObjectImpl implements MnfWcVO {
    /**
     * This is the default constructor (do not remove).
     */
    public MnfWcVOImpl() {
    }

    /**
     * Returns the variable value for BindSlocId.
     * @return variable value for BindSlocId
     */
    public Integer getBindSlocId() {
        return (Integer) ensureVariableManager().getVariableValue("BindSlocId");
    }

    /**
     * Sets <code>value</code> for variable BindSlocId.
     * @param value value to bind as BindSlocId
     */
    public void setBindSlocId(Integer value) {
        ensureVariableManager().setVariableValue("BindSlocId", value);
    }

    /**
     * Returns the variable value for BindHoOrgId.
     * @return variable value for BindHoOrgId
     */
    public String getBindHoOrgId() {
        return (String) ensureVariableManager().getVariableValue("BindHoOrgId");
    }

    /**
     * Sets <code>value</code> for variable BindHoOrgId.
     * @param value value to bind as BindHoOrgId
     */
    public void setBindHoOrgId(String value) {
        ensureVariableManager().setVariableValue("BindHoOrgId", value);
    }

    /**
     * Returns the variable value for BindCldId.
     * @return variable value for BindCldId
     */
    public String getBindCldId() {
        return (String) ensureVariableManager().getVariableValue("BindCldId");
    }

    /**
     * Sets <code>value</code> for variable BindCldId.
     * @param value value to bind as BindCldId
     */
    public void setBindCldId(String value) {
        ensureVariableManager().setVariableValue("BindCldId", value);
    }

    /**
     * Returns the variable value for actvBind.
     * @return variable value for actvBind
     */
    public String getactvBind() {
        return (String) ensureVariableManager().getVariableValue("actvBind");
    }

    /**
     * Sets <code>value</code> for variable actvBind.
     * @param value value to bind as actvBind
     */
    public void setactvBind(String value) {
        ensureVariableManager().setVariableValue("actvBind", value);
    }

    /**
     * Returns the variable value for idBind.
     * @return variable value for idBind
     */
    public String getidBind() {
        return (String) ensureVariableManager().getVariableValue("idBind");
    }

    /**
     * Sets <code>value</code> for variable idBind.
     * @param value value to bind as idBind
     */
    public void setidBind(String value) {
        ensureVariableManager().setVariableValue("idBind", value);
    }

    /**
     * Returns the variable value for fromDateBind.
     * @return variable value for fromDateBind
     */
    public Timestamp getfromDateBind() {
        return (Timestamp) ensureVariableManager().getVariableValue("fromDateBind");
    }

    /**
     * Sets <code>value</code> for variable fromDateBind.
     * @param value value to bind as fromDateBind
     */
    public void setfromDateBind(Timestamp value) {
        ensureVariableManager().setVariableValue("fromDateBind", value);
    }

    /**
     * Returns the variable value for toDateBind.
     * @return variable value for toDateBind
     */
    public Timestamp gettoDateBind() {
        return (Timestamp) ensureVariableManager().getVariableValue("toDateBind");
    }

    /**
     * Sets <code>value</code> for variable toDateBind.
     * @param value value to bind as toDateBind
     */
    public void settoDateBind(Timestamp value) {
        ensureVariableManager().setVariableValue("toDateBind", value);
    }

    /**
     * Returns the variable value for wcCodeBind.
     * @return variable value for wcCodeBind
     */
    public String getwcCodeBind() {
        return (String) ensureVariableManager().getVariableValue("wcCodeBind");
    }

    /**
     * Sets <code>value</code> for variable wcCodeBind.
     * @param value value to bind as wcCodeBind
     */
    public void setwcCodeBind(String value) {
        ensureVariableManager().setVariableValue("wcCodeBind", value);
    }

    /**
     * Returns the variable value for BindUserId.
     * @return variable value for BindUserId
     */
    public Integer getBindUserId() {
        return (Integer) ensureVariableManager().getVariableValue("BindUserId");
    }

    /**
     * Sets <code>value</code> for variable BindUserId.
     * @param value value to bind as BindUserId
     */
    public void setBindUserId(Integer value) {
        ensureVariableManager().setVariableValue("BindUserId", value);
    }

    /**
     * Returns the variable value for searchwcidBind.
     * @return variable value for searchwcidBind
     */
    public String getsearchwcidBind() {
        return (String) ensureVariableManager().getVariableValue("searchwcidBind");
    }

    /**
     * Sets <code>value</code> for variable searchwcidBind.
     * @param value value to bind as searchwcidBind
     */
    public void setsearchwcidBind(String value) {
        ensureVariableManager().setVariableValue("searchwcidBind", value);
    }

    /**
     * Returns the variable value for wcNameBind.
     * @return variable value for wcNameBind
     */
    public String getwcNameBind() {
        return (String) ensureVariableManager().getVariableValue("wcNameBind");
    }

    /**
     * Sets <code>value</code> for variable wcNameBind.
     * @param value value to bind as wcNameBind
     */
    public void setwcNameBind(String value) {
        ensureVariableManager().setVariableValue("wcNameBind", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
    
    public String invokeRowFinderWorkCenters() {
        String wcName = "";
        Row cRow = this.getCurrentRow();
        if (cRow != null) {
            wcName = (String) cRow.getAttribute("WcDesc");
       }
        
        /* RowFinder rowFinder = this.lookupRowFinder("RowFinder");
        NameValuePairs nvp = new NameValuePairs();
        System.out.println("Inside Row Finder method - 1");
        nvp.setAttribute("WcDesc", wcName);
        System.out.println("Inside Row Finder method - 2");
        RowIterator ri = rowFinder.execute(nvp, this);
        System.out.println("Inside Row Finder method - 3");
        if (ri.getFetchedRowCount() > 0) {
            return "Yes";
        } */
        
        return null;
    }
}

