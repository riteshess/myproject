package mnfworkcenterapp.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;

import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 22 15:35:16 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfWcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        WcId,
        WcDesc,
        WcLegCd,
        WcDeptId,
        WcActv,
        WcInactvReason,
        WcInactvDate,
        WcRmrk,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcBasis,
        RefWcId,
        MnfWcParam,
        MnfWcRes,
        MnfWcAttch,
        OrgMnfWc,
        MnfStationVw,
        MnfWs;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int WCDESC = AttributesEnum.WcDesc.index();
    public static final int WCLEGCD = AttributesEnum.WcLegCd.index();
    public static final int WCDEPTID = AttributesEnum.WcDeptId.index();
    public static final int WCACTV = AttributesEnum.WcActv.index();
    public static final int WCINACTVREASON = AttributesEnum.WcInactvReason.index();
    public static final int WCINACTVDATE = AttributesEnum.WcInactvDate.index();
    public static final int WCRMRK = AttributesEnum.WcRmrk.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCBASIS = AttributesEnum.WcBasis.index();
    public static final int REFWCID = AttributesEnum.RefWcId.index();
    public static final int MNFWCPARAM = AttributesEnum.MnfWcParam.index();
    public static final int MNFWCRES = AttributesEnum.MnfWcRes.index();
    public static final int MNFWCATTCH = AttributesEnum.MnfWcAttch.index();
    public static final int ORGMNFWC = AttributesEnum.OrgMnfWc.index();
    public static final int MNFSTATIONVW = AttributesEnum.MnfStationVw.index();
    public static final int MNFWS = AttributesEnum.MnfWs.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfWcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfworkcenterapp.model.entities.MnfWcEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for WcId, using the alias name WcId.
     * @return the value of WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcId.
     * @param value value to set the WcId
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for WcDesc, using the alias name WcDesc.
     * @return the value of WcDesc
     */
    public String getWcDesc() {
        return (String) getAttributeInternal(WCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcDesc.
     * @param value value to set the WcDesc
     */
    public void setWcDesc(String value) {
        setAttributeInternal(WCDESC, value);
    }

    /**
     * Gets the attribute value for WcLegCd, using the alias name WcLegCd.
     * @return the value of WcLegCd
     */
    public String getWcLegCd() {
        return (String) getAttributeInternal(WCLEGCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcLegCd.
     * @param value value to set the WcLegCd
     */
    public void setWcLegCd(String value) {
        setAttributeInternal(WCLEGCD, value);
    }


    /**
     * Gets the attribute value for WcDeptId, using the alias name WcDeptId.
     * @return the value of WcDeptId
     */
    public String getWcDeptId() {
        return (String) getAttributeInternal(WCDEPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcDeptId.
     * @param value value to set the WcDeptId
     */
    public void setWcDeptId(String value) {
        setAttributeInternal(WCDEPTID, value);
    }

    /**
     * Gets the attribute value for WcActv, using the alias name WcActv.
     * @return the value of WcActv
     */
    public String getWcActv() {
        return (String) getAttributeInternal(WCACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcActv.
     * @param value value to set the WcActv
     */
    public void setWcActv(String value) {
        setAttributeInternal(WCACTV, value);
    }

    /**
     * Gets the attribute value for WcInactvReason, using the alias name WcInactvReason.
     * @return the value of WcInactvReason
     */
    public String getWcInactvReason() {
        return (String) getAttributeInternal(WCINACTVREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcInactvReason.
     * @param value value to set the WcInactvReason
     */
    public void setWcInactvReason(String value) {
        setAttributeInternal(WCINACTVREASON, value);
    }

    /**
     * Gets the attribute value for WcInactvDate, using the alias name WcInactvDate.
     * @return the value of WcInactvDate
     */
    public Timestamp getWcInactvDate() {
        return (Timestamp) getAttributeInternal(WCINACTVDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcInactvDate.
     * @param value value to set the WcInactvDate
     */
    public void setWcInactvDate(Timestamp value) {
        setAttributeInternal(WCINACTVDATE, value);
    }

    /**
     * Gets the attribute value for WcRmrk, using the alias name WcRmrk.
     * @return the value of WcRmrk
     */
    public String getWcRmrk() {
        return (String) getAttributeInternal(WCRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcRmrk.
     * @param value value to set the WcRmrk
     */
    public void setWcRmrk(String value) {
        setAttributeInternal(WCRMRK, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WcBasis, using the alias name WcBasis.
     * @return the value of WcBasis
     */
    public Integer getWcBasis() {
        return (Integer) getAttributeInternal(WCBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for WcBasis.
     * @param value value to set the WcBasis
     */
    public void setWcBasis(Integer value) {
        setAttributeInternal(WCBASIS, value);
    }

    /**
     * Gets the attribute value for RefWcId, using the alias name RefWcId.
     * @return the value of RefWcId
     */
    public String getRefWcId() {
        return (String) getAttributeInternal(REFWCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefWcId.
     * @param value value to set the RefWcId
     */
    public void setRefWcId(String value) {
        setAttributeInternal(REFWCID, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfWcParam() {
        return (RowIterator) getAttributeInternal(MNFWCPARAM);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfWcRes() {
        return (RowIterator) getAttributeInternal(MNFWCRES);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfWcAttch() {
        return (RowIterator) getAttributeInternal(MNFWCATTCH);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgMnfWc() {
        return (RowIterator) getAttributeInternal(ORGMNFWC);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfStationVw() {
        return (RowIterator) getAttributeInternal(MNFSTATIONVW);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfWs() {
        return (RowIterator) getAttributeInternal(MNFWS);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param wcId key constituent
     * @param wcDesc key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String wcId, String wcDesc) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, wcId, wcDesc });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {

        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        Integer slocid = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String orgid = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        String hoorgid = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        // String doc_id = getDocIdFun(userId, orgid, slocid, 18502,cldId);
        setUsrIdCreate(userId);
        // setOrgId(orgid);
        setWcActv("Y");
        setWcBasis(16);
        setSlocId(slocid);
        setCldId(cldId);
        setHoOrgId(hoorgid);
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setWcId(getWCCodeFrmFun(slocid, cldId, hoorgid, orgid, 25504, 0, "MNF$WC", 0));
        System.out.println(getWcId());
        super.create(attributeList);
    }


    /**
     * @param OrgId organisation id
     * @param slocId server location id
     * @param docId document id
     * @param hoOrgId Head Organization id
     * @return next route id
     *  P_SLOC_ID := 1;
            P_CLD_ID := '0000';
            P_HO_ORG_ID := '01';
            P_ORG_ID := '01';
            P_DOC_ID := 25502;
            p_doc_type_id     NUMBER DEFAULT NULL,
            p_tablename       VARCHAR2,
            p_doc_sub_type_id NUMBER DEFAULT 0
     */

    private static int STRING = Types.VARCHAR;

    public String getWCCodeFrmFun(Integer slocId, String cldId, String hoOrgId, String orgId, Integer docId,
                                  Integer docTypeId, String tableName, Integer docSubTypeId) {


        return (String) callStoredFunction(STRING, "mnf.fn_mnf_get_prf_id(?,?,?,?,?,?,?,?)", new Object[] {
                                           slocId, cldId, hoOrgId, orgId, docId, docTypeId, tableName, docSubTypeId
    });
    }


    /** helper method for executing DB function
     * @param sqlReturnType return type of database function
     * @param stmt statement of executing function in database quary
     * @param bindVars input and out parameter of database function.
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(11, end));

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
                setUsrIdMod((Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString())));
            }
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(String data) {
        //  FacesContext fc = FacesContext.getCurrentInstance();
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }

    public Integer getCurrentUser() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
    }

}

