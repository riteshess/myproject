package mnfworkcenterapp.model.views;

import java.math.BigInteger;

import java.sql.Timestamp;

import mnfworkcenterapp.model.module.MNFWorkcenterAMImpl;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 06 15:38:44 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVActiveWorkStationVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        WsId,
        WsDesc,
        WsLegCd,
        WsActv,
        WsInactvReason,
        WsInactvDate,
        WcId,
        WsInvDt,
        WsEmpId,
        ShiftId,
        PicFlg,
        EoNm,
        UsrIdCreateDt,
        WcDesc,
        WsType,
        WsTypeDesc,
        WsLineType,
        WsLineTypeDesc,
        UsrIdCreate,
        UsrIdCreateNm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WSID = AttributesEnum.WsId.index();
    public static final int WSDESC = AttributesEnum.WsDesc.index();
    public static final int WSLEGCD = AttributesEnum.WsLegCd.index();
    public static final int WSACTV = AttributesEnum.WsActv.index();
    public static final int WSINACTVREASON = AttributesEnum.WsInactvReason.index();
    public static final int WSINACTVDATE = AttributesEnum.WsInactvDate.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int WSINVDT = AttributesEnum.WsInvDt.index();
    public static final int WSEMPID = AttributesEnum.WsEmpId.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int PICFLG = AttributesEnum.PicFlg.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int WCDESC = AttributesEnum.WcDesc.index();
    public static final int WSTYPE = AttributesEnum.WsType.index();
    public static final int WSTYPEDESC = AttributesEnum.WsTypeDesc.index();
    public static final int WSLINETYPE = AttributesEnum.WsLineType.index();
    public static final int WSLINETYPEDESC = AttributesEnum.WsLineTypeDesc.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATENM = AttributesEnum.UsrIdCreateNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVActiveWorkStationVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute WsId.
     * @return the WsId
     */
    public String getWsId() {
        if(getWsId()!=null){
           ViewObjectImpl wsViewVO = this.getAM().getLOVActiveWorkStation1();
           wsViewVO.setNamedWhereClauseParam("BindWcId", getWcId());
        }
        return (String) getAttributeInternal(WSID);
    }

    /**
     * Gets the attribute value for the calculated attribute WsDesc.
     * @return the WsDesc
     */
    public String getWsDesc() {
        return (String) getAttributeInternal(WSDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute WsLegCd.
     * @return the WsLegCd
     */
    public String getWsLegCd() {
        return (String) getAttributeInternal(WSLEGCD);
    }

    /**
     * Gets the attribute value for the calculated attribute WsActv.
     * @return the WsActv
     */
    public String getWsActv() {
        return (String) getAttributeInternal(WSACTV);
    }

    /**
     * Gets the attribute value for the calculated attribute WsInactvReason.
     * @return the WsInactvReason
     */
    public String getWsInactvReason() {
        return (String) getAttributeInternal(WSINACTVREASON);
    }

    /**
     * Gets the attribute value for the calculated attribute WsInactvDate.
     * @return the WsInactvDate
     */
    public Timestamp getWsInactvDate() {
        return (Timestamp) getAttributeInternal(WSINACTVDATE);
    }

    /**
     * Gets the attribute value for the calculated attribute WcId.
     * @return the WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Gets the attribute value for the calculated attribute WsInvDt.
     * @return the WsInvDt
     */
    public Timestamp getWsInvDt() {
        return (Timestamp) getAttributeInternal(WSINVDT);
    }

    /**
     * Gets the attribute value for the calculated attribute WsEmpId.
     * @return the WsEmpId
     */
    public BigInteger getWsEmpId() {
        return (BigInteger) getAttributeInternal(WSEMPID);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftId.
     * @return the ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Gets the attribute value for the calculated attribute PicFlg.
     * @return the PicFlg
     */
    public String getPicFlg() {
        return (String) getAttributeInternal(PICFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute WcDesc.
     * @return the WcDesc
     */
    public String getWcDesc() {
        return (String) getAttributeInternal(WCDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute WsType.
     * @return the WsType
     */
    public Integer getWsType() {
        return (Integer) getAttributeInternal(WSTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute WsTypeDesc.
     * @return the WsTypeDesc
     */
    public String getWsTypeDesc() {
        return (String) getAttributeInternal(WSTYPEDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute WsLineType.
     * @return the WsLineType
     */
    public Integer getWsLineType() {
        return (Integer) getAttributeInternal(WSLINETYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute WsLineTypeDesc.
     * @return the WsLineTypeDesc
     */
    public String getWsLineTypeDesc() {
        return (String) getAttributeInternal(WSLINETYPEDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Long getUsrIdCreate() {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateNm.
     * @return the UsrIdCreateNm
     */
    public String getUsrIdCreateNm() {
        return (String) getAttributeInternal(USRIDCREATENM);
    }
    
    private MNFWorkcenterAMImpl getAM(){
        return (MNFWorkcenterAMImpl)this.getApplicationModule();
    }
}

