package mnfproductioncosting.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.Timestamp;

import mnfproductioncosting.model.services.MNFProductionCostingAMImpl;
import mnfproductioncosting.model.services.common.MNFProductionCostingAM;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 09 18:41:48 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProductionCostingSRCVORowImpl extends ViewRowImpl {


    public static final int ENTITY_PRODUCTIONCOSTSRCVO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocTypeSrc,
        DocIdSrc,
        DocDtSrc,
        EndDt,
        StrtDt,
        TransSelection,
        TransJeId,
        OutptItmId,
        OutptItmQty,
        TransOutputItemName,
        TransCheckSel,
        TransSrcJeId,
        ProductionCostingMainVO,
        ProductionCostingCOAVO;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int TRANSSELECTION = AttributesEnum.TransSelection.index();
    public static final int TRANSJEID = AttributesEnum.TransJeId.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int TRANSOUTPUTITEMNAME = AttributesEnum.TransOutputItemName.index();
    public static final int TRANSCHECKSEL = AttributesEnum.TransCheckSel.index();
    public static final int TRANSSRCJEID = AttributesEnum.TransSrcJeId.index();
    public static final int PRODUCTIONCOSTINGMAINVO = AttributesEnum.ProductionCostingMainVO.index();
    public static final int PRODUCTIONCOSTINGCOAVO = AttributesEnum.ProductionCostingCOAVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ProductionCostingSRCVORowImpl() {
    }

    /**
     * Gets ProductionCostSRCVO entity object.
     * @return the ProductionCostSRCVO
     */
    public EntityImpl getProductionCostSRCVO() {
        return (EntityImpl) getEntity(ENTITY_PRODUCTIONCOSTSRCVO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
        setTransJeId(null);
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for "Synchronize:Fix_SQL" using the alias name EndDt.
     * @return the "Synchronize:Fix_SQL"
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for "Synchronize:Fix_SQL" using the alias name EndDt.
     * @param value value to set the "Synchronize:Fix_SQL"
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for "Synchronize:Fix_SQL" using the alias name StrtDt.
     * @return the "Synchronize:Fix_SQL"
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for "Synchronize:Fix_SQL" using the alias name StrtDt.
     * @param value value to set the "Synchronize:Fix_SQL"
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSelection.
     * @return the TransSelection
     */
    public String getTransSelection() {
       
        return (String) getAttributeInternal(TRANSSELECTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSelection.
     * @param value value to set the  TransSelection
     */
    public void setTransSelection(String value) {
        System.out.println("value::: "+value);
        setAttributeInternal(TRANSSELECTION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransJeId.
     * @return the TransJeId
     */
    /* public String getTransJeId() {
        System.out.println("inside jeId getter");
        String docIdSrc = getDocIdSrc();
        System.out.println("doc Id source is"+ docIdSrc);
        
        if(getAttributeInternal(TRANSJEID) == null && getDocIdSrc() != null){
           
            MNFProductionCostingAMImpl am =  (MNFProductionCostingAMImpl)getApplicationModule();
            ViewObjectImpl docIdVO1 = am.getJEIdfromDocIdVO1();
            docIdVO1.setNamedWhereClauseParam("JeDocIdBind",getDocIdSrc());
            docIdVO1.executeQuery();
            Row[] allRowsInRange = docIdVO1.getAllRowsInRange();
            if(allRowsInRange.length>0) {
               Object jeIdO = allRowsInRange[0].getAttribute("JeId");
               if(jeIdO != null){
                   setTransJeId(jeIdO.toString());
               }else{
                   setTransJeId(" ");
               }
            }
        }
        return (String) getAttributeInternal(TRANSJEID);
    } */

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransJeId.
     * @param value value to set the  TransJeId
     */
    public void setTransJeId(String value) {
        setAttributeInternal(TRANSJEID, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @return the OUTPT_ITM_ID
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @param value value to set the OUTPT_ITM_ID
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @return the OUTPT_ITM_QTY
     */
    public BigDecimal getOutptItmQty() {
        return (BigDecimal) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @param value value to set the OUTPT_ITM_QTY
     */
    public void setOutptItmQty(BigDecimal value) {
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOutputItemName.
     * @return the TransOutputItemName
     */
    public String getTransOutputItemName() {
        
        if(getAttributeInternal(TRANSOUTPUTITEMNAME)== null) {
            MNFProductionCostingAMImpl am =  (MNFProductionCostingAMImpl)getApplicationModule();
            String descFrmItmId = EbizParams.getItemDescFrmItmId(am, getOutptItmId());
            return descFrmItmId;           
        }
        
        return (String) getAttributeInternal(TRANSOUTPUTITEMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOutputItemName.
     * @param value value to set the  TransOutputItemName
     */
    public void setTransOutputItemName(String value) {
        setAttributeInternal(TRANSOUTPUTITEMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCheckSel.
     * @return the TransCheckSel
     */
    public String getTransCheckSel() {
        return (String) getAttributeInternal(TRANSCHECKSEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCheckSel.
     * @param value value to set the  TransCheckSel
     */
    public void setTransCheckSel(String value) {
        setAttributeInternal(TRANSCHECKSEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrcJeId.
     * @return the TransSrcJeId
     */
    public String getTransSrcJeId() {
        if(getAttributeInternal(TRANSSRCJEID) == null && getDocIdSrc() != null){
            
            System.out.println("inside jeIdnull  new  getter");
            MNFProductionCostingAMImpl am =  (MNFProductionCostingAMImpl)getApplicationModule();
            ViewObjectImpl docIdVO1 = am.getJEIdfromDocIdVO1();
            docIdVO1.setNamedWhereClauseParam("JeDocIdBind",getDocIdSrc());
            docIdVO1.executeQuery();
            Row[] allRowsInRange = docIdVO1.getAllRowsInRange();
            if(allRowsInRange.length>0) {
               Object jeIdO = allRowsInRange[0].getAttribute("JeId");
               return jeIdO == null ? "NA" : jeIdO.toString();
            }
        }    
        
        return (String) getAttributeInternal(TRANSSRCJEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrcJeId.
     * @param value value to set the  TransSrcJeId
     */
    public void setTransSrcJeId(String value) {
        setAttributeInternal(TRANSSRCJEID, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link ProductionCostingMainVO.
     */
    public Row getProductionCostingMainVO() {
        return (Row) getAttributeInternal(PRODUCTIONCOSTINGMAINVO);
    }

    /**
     * Sets the master-detail link ProductionCostingMainVO between this object and <code>value</code>.
     */
    public void setProductionCostingMainVO(Row value) {
        setAttributeInternal(PRODUCTIONCOSTINGMAINVO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ProductionCostingCOAVO.
     */
    public RowIterator getProductionCostingCOAVO() {
        return (RowIterator) getAttributeInternal(PRODUCTIONCOSTINGCOAVO);
    }
}

