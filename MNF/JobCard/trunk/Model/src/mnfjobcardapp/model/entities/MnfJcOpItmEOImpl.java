package mnfjobcardapp.model.entities;

import adf.utils.ebiz.EbizParams;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 21 15:04:55 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJcOpItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        ItmBasis,
        OpId,
        OpSrNo,
        ItmType,
        ItmId,
        ItmUom,
        IssuType,
        ItmQty,
        ItmPrice,
        ItmTotAmt,
        ItmScrapPer,
        ItmRmrk,
        ItmPriceType,
        ItmRtrnFlg,
        ItmRtrnQty,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        PdoId,
        InptBomId,
        ItmRtrnType,
        ActItmQty,
        WhId,
        RqmtAreaId,
        PrncplInpt,
        CcId,
        RwrkFlg,
        MnfJcOpItmLot,
        MnfJcOpItmBin,
        MnfJcOpItmSr;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ISSUTYPE = AttributesEnum.IssuType.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMTOTAMT = AttributesEnum.ItmTotAmt.index();
    public static final int ITMSCRAPPER = AttributesEnum.ItmScrapPer.index();
    public static final int ITMRMRK = AttributesEnum.ItmRmrk.index();
    public static final int ITMPRICETYPE = AttributesEnum.ItmPriceType.index();
    public static final int ITMRTRNFLG = AttributesEnum.ItmRtrnFlg.index();
    public static final int ITMRTRNQTY = AttributesEnum.ItmRtrnQty.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int PDOID = AttributesEnum.PdoId.index();
    public static final int INPTBOMID = AttributesEnum.InptBomId.index();
    public static final int ITMRTRNTYPE = AttributesEnum.ItmRtrnType.index();
    public static final int ACTITMQTY = AttributesEnum.ActItmQty.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int PRNCPLINPT = AttributesEnum.PrncplInpt.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int RWRKFLG = AttributesEnum.RwrkFlg.index();
    public static final int MNFJCOPITMLOT = AttributesEnum.MnfJcOpItmLot.index();
    public static final int MNFJCOPITMBIN = AttributesEnum.MnfJcOpItmBin.index();
    public static final int MNFJCOPITMSR = AttributesEnum.MnfJcOpItmSr.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJcOpItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfjobcardapp.model.entities.MnfJcOpItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmBasis, using the alias name ItmBasis.
     * @return the value of ItmBasis
     */
    public Integer getItmBasis() {
        return (Integer) getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmBasis.
     * @param value value to set the ItmBasis
     */
    public void setItmBasis(Integer value) {
        setAttributeInternal(ITMBASIS, value);
    }

    /**
     * Gets the attribute value for OpId, using the alias name OpId.
     * @return the value of OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpId.
     * @param value value to set the OpId
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OpSrNo, using the alias name OpSrNo.
     * @return the value of OpSrNo
     */
    public Long getOpSrNo() {
        return (Long) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpSrNo.
     * @param value value to set the OpSrNo
     */
    public void setOpSrNo(Long value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ItmType, using the alias name ItmType.
     * @return the value of ItmType
     */
    public Integer getItmType() {
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmType.
     * @param value value to set the ItmType
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
//        System.out.println("Setting value of UOM "+value);
//        for (StackTraceElement ste : Thread.currentThread().getStackTrace()) {
//            System.out.println(ste);
//        }
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for IssuType, using the alias name IssuType.
     * @return the value of IssuType
     */
    public Integer getIssuType() {
        return (Integer) getAttributeInternal(ISSUTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IssuType.
     * @param value value to set the IssuType
     */
    public void setIssuType(Integer value) {
        setAttributeInternal(ISSUTYPE, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ItmTotAmt, using the alias name ItmTotAmt.
     * @return the value of ItmTotAmt
     */
    public Number getItmTotAmt() {
        return (Number) getAttributeInternal(ITMTOTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmTotAmt.
     * @param value value to set the ItmTotAmt
     */
    public void setItmTotAmt(Number value) {
        setAttributeInternal(ITMTOTAMT, value);
    }

    /**
     * Gets the attribute value for ItmScrapPer, using the alias name ItmScrapPer.
     * @return the value of ItmScrapPer
     */
    public Number getItmScrapPer() {
        return (Number) getAttributeInternal(ITMSCRAPPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmScrapPer.
     * @param value value to set the ItmScrapPer
     */
    public void setItmScrapPer(Number value) {
        setAttributeInternal(ITMSCRAPPER, value);
    }

    /**
     * Gets the attribute value for ItmRmrk, using the alias name ItmRmrk.
     * @return the value of ItmRmrk
     */
    public String getItmRmrk() {
        return (String) getAttributeInternal(ITMRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRmrk.
     * @param value value to set the ItmRmrk
     */
    public void setItmRmrk(String value) {
        setAttributeInternal(ITMRMRK, value);
    }

    /**
     * Gets the attribute value for ItmPriceType, using the alias name ItmPriceType.
     * @return the value of ItmPriceType
     */
    public Integer getItmPriceType() {
        return (Integer) getAttributeInternal(ITMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceType.
     * @param value value to set the ItmPriceType
     */
    public void setItmPriceType(Integer value) {
        setAttributeInternal(ITMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for ItmRtrnFlg, using the alias name ItmRtrnFlg.
     * @return the value of ItmRtrnFlg
     */
    public String getItmRtrnFlg() {
        return (String) getAttributeInternal(ITMRTRNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnFlg.
     * @param value value to set the ItmRtrnFlg
     */
    public void setItmRtrnFlg(String value) {
        setAttributeInternal(ITMRTRNFLG, value);
    }

    /**
     * Gets the attribute value for ItmRtrnQty, using the alias name ItmRtrnQty.
     * @return the value of ItmRtrnQty
     */
    public Number getItmRtrnQty() {
        return (Number) getAttributeInternal(ITMRTRNQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnQty.
     * @param value value to set the ItmRtrnQty
     */
    public void setItmRtrnQty(Number value) {
        setAttributeInternal(ITMRTRNQTY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for PdoId, using the alias name PdoId.
     * @return the value of PdoId
     */
    public String getPdoId() {
        return (String) getAttributeInternal(PDOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PdoId.
     * @param value value to set the PdoId
     */
    public void setPdoId(String value) {
        setAttributeInternal(PDOID, value);
    }

    /**
     * Gets the attribute value for InptBomId, using the alias name InptBomId.
     * @return the value of InptBomId
     */
    public String getInptBomId() {
        return (String) getAttributeInternal(INPTBOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InptBomId.
     * @param value value to set the InptBomId
     */
    public void setInptBomId(String value) {
        setAttributeInternal(INPTBOMID, value);
    }

    /**
     * Gets the attribute value for ItmRtrnType, using the alias name ItmRtrnType.
     * @return the value of ItmRtrnType
     */
    public Integer getItmRtrnType() {
        return (Integer) getAttributeInternal(ITMRTRNTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmRtrnType.
     * @param value value to set the ItmRtrnType
     */
    public void setItmRtrnType(Integer value) {
        setAttributeInternal(ITMRTRNTYPE, value);
    }

    /**
     * Gets the attribute value for ActItmQty, using the alias name ActItmQty.
     * @return the value of ActItmQty
     */
    public Number getActItmQty() {
        return (Number) getAttributeInternal(ACTITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActItmQty.
     * @param value value to set the ActItmQty
     */
    public void setActItmQty(Number value) {
        setAttributeInternal(ACTITMQTY, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for RqmtAreaId, using the alias name RqmtAreaId.
     * @return the value of RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RqmtAreaId.
     * @param value value to set the RqmtAreaId
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for PrncplInpt, using the alias name PrncplInpt.
     * @return the value of PrncplInpt
     */
    public String getPrncplInpt() {
        return (String) getAttributeInternal(PRNCPLINPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrncplInpt.
     * @param value value to set the PrncplInpt
     */
    public void setPrncplInpt(String value) {
        setAttributeInternal(PRNCPLINPT, value);
    }

    /**
     * Gets the attribute value for CcId, using the alias name CcId.
     * @return the value of CcId
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcId.
     * @param value value to set the CcId
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for RwrkFlg, using the alias name RwrkFlg.
     * @return the value of RwrkFlg
     */
    public String getRwrkFlg() {
        return (String) getAttributeInternal(RWRKFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwrkFlg.
     * @param value value to set the RwrkFlg
     */
    public void setRwrkFlg(String value) {
        setAttributeInternal(RWRKFLG, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfJcOpItmLot() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMLOT);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfJcOpItmBin() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMBIN);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnfJcOpItmSr() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMSR);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param opId key constituent
     * @param opSrNo key constituent
     * @param itmType key constituent
     * @param itmId key constituent
     * @param pdoId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String opId, Long opSrNo, Integer itmType, String itmId, String pdoId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId, opId, opSrNo, itmType, itmId, pdoId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setCcId(this.getHexDocNoFromFun());
        this.setUsrIdCreate(EbizParams.GLBL_APP_USR());
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
//        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    public String getHexDocNoFromFun() {

            String hexDocIdFromFun = "0";
            try {
                
                hexDocIdFromFun = this.callStoredFunction(Types.VARCHAR, "APP.GET_TXN_ID_CC(?,?,?,?,?,?,?)", new Object[] {
                                                          this.getCldId(), this.getSlocId(), this.getOrgId(),
                                                          this.getUsrIdCreate(), 26004, 84901,0
                }).toString();

            } catch (Exception e) {
                e.printStackTrace();
                System.out.println("ERROR IN CALLING FUNCTION GET_TXN_ID at BdgEoBudgetEoImpl :" + e.getMessage());
            }
            System.out.println("===========" + hexDocIdFromFun);

            return hexDocIdFromFun;
        }   

  
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

       CallableStatement st = null;
       try {
           // 1. Create a JDBC CallabledStatement
           st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
           // 2. Register the first bind variable for the return value
           st.registerOutParameter(1, sqlReturnType);
           if (bindVars != null) {
               // 3. Loop over values for the bind variables passed in, if any
               for (int z = 0; z < bindVars.length; z++) {
                   // 4. Set the value of user-supplied bind vars in the stmt
                   //   System.out.println("bindVars " + z + " " + bindVars[z]);
                   st.setObject(z + 2, bindVars[z]);
               }
           }
           // 5. Set the value of user-supplied bind vars in the stmt
           st.executeUpdate();
           // 6. Return the value of the first bind variable
           //  System.out.println("Function return " + st.getObject(1));
           return st.getObject(1);
       } catch (Exception e) {
           e.printStackTrace();
           //   System.out.println("In Exception exch and Op and generate-->");

           String msg = e.getMessage();
           //  System.out.println(msg);
           FacesMessage ermsg = new FacesMessage(msg);
           ermsg.setSeverity(FacesMessage.SEVERITY_ERROR);
           FacesContext.getCurrentInstance().addMessage(null, ermsg);
           return null;
       } finally {
           if (st != null) {
               try {
                   // 7. Close the statement
                   st.close();
               } catch (SQLException e) {
                   throw new JboException(e.getMessage());
               }
           }
       }
    }

}

