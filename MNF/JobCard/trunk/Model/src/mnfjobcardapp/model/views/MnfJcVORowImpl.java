package mnfjobcardapp.model.views;

import javax.el.ELContext;
import javax.el.ValueExpression;

import mnfjobcardapp.model.entities.MnfJcEOImpl;
import mnfjobcardapp.model.module.MNFJobcardAppAMImpl;
import mnfjobcardapp.model.views.common.MnfJcVORow;

import oracle.adf.share.ADFContext;
import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 16 14:18:16 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJcVORowImpl extends ViewRowImpl implements MnfJcVORow {


    public static final int ENTITY_MNFJCEO = 0;
    private static ADFLogger adfLog = (ADFLogger) ADFLogger.createADFLogger(MnfJcVORowImpl.class);
    private static ADFLogger _log = 
                ADFLogger.createADFLogger(MnfJcVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        JcId,
        JcStat,
        ShiftId,
        WcId,
        WsId,
        EmpId,
        OpId,
        StrtDt,
        EndDt,
        LocType,
        JcRmrk,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        JcMode,
        JcType,
        OutptItmId,
        OutptItmQty,
        JcBasis,
        OpSrNo,
        QtyBrct,
        WhId,
        RqmtAreaId,
        ActOutptItmQty,
        MrsId,
        OpStat,
        BalOpQty,
        TmpBalOpQty,
        TransUsrNm,
        TransJcMode,
        TransJcStat,
        TransOpId,
        TransItmNm,
        TransEmpNm,
        WhNameTrans,
        TransShiftNm,
        TransOpDesc,
        TransReqArea,
        TransUsrNmMd,
        TransWsNm,
        transQtVal,
        TransPendingQty,
        LovSwitcher,
        TransRevId,
        MaxPreDays,
        TransLocType,
        EoId,
        TransEoName,
        TransCurrConvFctr,
        TransCurrDesc,
        CurrConvFctr,
        CurrIdSp,
        TransCurrDescTxn,
        TransCurrIdSp,
        TransOpYieldPer,
        ActEndDt,
        ActStrtDt,
        ShrtClsFlg,
        LOVOpLocType,
        LOVMnfOpDesc,
        MnfJcAttch,
        MnfJcOpItm,
        MnfJcParam,
        MnfJcParam1,
        MnfWc,
        MnfJcBarcode,
        MnfJcSrc,
        MnfJcItmStk,
        MnfjcOpQcParam,
        MnfAdhocOutItm,
        MnfJcOpInputItem,
        LOVJcBasisVO1,
        LOVJcTypeVO1,
        LOVMnfMppPdoOPVO1,
        LOVSearchWsVO1,
        LOVSearchShiftVO1,
        LOVSearchEmpVO1,
        LOVWhIdVO1,
        LOVReqAreaIdVO1,
        LOVMnfOpDescVO1,
        LovMnfOpVo1,
        LovLocTypeVO1,
        LovSubContracterNmVO1,
        LovSubContracterNmVO2,
        LovAppCurrConvAsonDtVO1,
        LovConvnFactrVO1,
        LovConvnFactrVO2;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int JCID = AttributesEnum.JcId.index();
    public static final int JCSTAT = AttributesEnum.JcStat.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int WSID = AttributesEnum.WsId.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int LOCTYPE = AttributesEnum.LocType.index();
    public static final int JCRMRK = AttributesEnum.JcRmrk.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int JCMODE = AttributesEnum.JcMode.index();
    public static final int JCTYPE = AttributesEnum.JcType.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int JCBASIS = AttributesEnum.JcBasis.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int QTYBRCT = AttributesEnum.QtyBrct.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int ACTOUTPTITMQTY = AttributesEnum.ActOutptItmQty.index();
    public static final int MRSID = AttributesEnum.MrsId.index();
    public static final int OPSTAT = AttributesEnum.OpStat.index();
    public static final int BALOPQTY = AttributesEnum.BalOpQty.index();
    public static final int TMPBALOPQTY = AttributesEnum.TmpBalOpQty.index();
    public static final int TRANSUSRNM = AttributesEnum.TransUsrNm.index();
    public static final int TRANSJCMODE = AttributesEnum.TransJcMode.index();
    public static final int TRANSJCSTAT = AttributesEnum.TransJcStat.index();
    public static final int TRANSOPID = AttributesEnum.TransOpId.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSEMPNM = AttributesEnum.TransEmpNm.index();
    public static final int WHNAMETRANS = AttributesEnum.WhNameTrans.index();
    public static final int TRANSSHIFTNM = AttributesEnum.TransShiftNm.index();
    public static final int TRANSOPDESC = AttributesEnum.TransOpDesc.index();
    public static final int TRANSREQAREA = AttributesEnum.TransReqArea.index();
    public static final int TRANSUSRNMMD = AttributesEnum.TransUsrNmMd.index();
    public static final int TRANSWSNM = AttributesEnum.TransWsNm.index();
    public static final int TRANSQTVAL = AttributesEnum.transQtVal.index();
    public static final int TRANSPENDINGQTY = AttributesEnum.TransPendingQty.index();
    public static final int LOVSWITCHER = AttributesEnum.LovSwitcher.index();
    public static final int TRANSREVID = AttributesEnum.TransRevId.index();
    public static final int MAXPREDAYS = AttributesEnum.MaxPreDays.index();
    public static final int TRANSLOCTYPE = AttributesEnum.TransLocType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int TRANSEONAME = AttributesEnum.TransEoName.index();
    public static final int TRANSCURRCONVFCTR = AttributesEnum.TransCurrConvFctr.index();
    public static final int TRANSCURRDESC = AttributesEnum.TransCurrDesc.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int TRANSCURRDESCTXN = AttributesEnum.TransCurrDescTxn.index();
    public static final int TRANSCURRIDSP = AttributesEnum.TransCurrIdSp.index();
    public static final int TRANSOPYIELDPER = AttributesEnum.TransOpYieldPer.index();
    public static final int ACTENDDT = AttributesEnum.ActEndDt.index();
    public static final int ACTSTRTDT = AttributesEnum.ActStrtDt.index();
    public static final int SHRTCLSFLG = AttributesEnum.ShrtClsFlg.index();
    public static final int LOVOPLOCTYPE = AttributesEnum.LOVOpLocType.index();
    public static final int LOVMNFOPDESC = AttributesEnum.LOVMnfOpDesc.index();
    public static final int MNFJCATTCH = AttributesEnum.MnfJcAttch.index();
    public static final int MNFJCOPITM = AttributesEnum.MnfJcOpItm.index();
    public static final int MNFJCPARAM = AttributesEnum.MnfJcParam.index();
    public static final int MNFJCPARAM1 = AttributesEnum.MnfJcParam1.index();
    public static final int MNFWC = AttributesEnum.MnfWc.index();
    public static final int MNFJCBARCODE = AttributesEnum.MnfJcBarcode.index();
    public static final int MNFJCSRC = AttributesEnum.MnfJcSrc.index();
    public static final int MNFJCITMSTK = AttributesEnum.MnfJcItmStk.index();
    public static final int MNFJCOPQCPARAM = AttributesEnum.MnfjcOpQcParam.index();
    public static final int MNFADHOCOUTITM = AttributesEnum.MnfAdhocOutItm.index();
    public static final int MNFJCOPINPUTITEM = AttributesEnum.MnfJcOpInputItem.index();
    public static final int LOVJCBASISVO1 = AttributesEnum.LOVJcBasisVO1.index();
    public static final int LOVJCTYPEVO1 = AttributesEnum.LOVJcTypeVO1.index();
    public static final int LOVMNFMPPPDOOPVO1 = AttributesEnum.LOVMnfMppPdoOPVO1.index();
    public static final int LOVSEARCHWSVO1 = AttributesEnum.LOVSearchWsVO1.index();
    public static final int LOVSEARCHSHIFTVO1 = AttributesEnum.LOVSearchShiftVO1.index();
    public static final int LOVSEARCHEMPVO1 = AttributesEnum.LOVSearchEmpVO1.index();
    public static final int LOVWHIDVO1 = AttributesEnum.LOVWhIdVO1.index();
    public static final int LOVREQAREAIDVO1 = AttributesEnum.LOVReqAreaIdVO1.index();
    public static final int LOVMNFOPDESCVO1 = AttributesEnum.LOVMnfOpDescVO1.index();
    public static final int LOVMNFOPVO1 = AttributesEnum.LovMnfOpVo1.index();
    public static final int LOVLOCTYPEVO1 = AttributesEnum.LovLocTypeVO1.index();
    public static final int LOVSUBCONTRACTERNMVO1 = AttributesEnum.LovSubContracterNmVO1.index();
    public static final int LOVSUBCONTRACTERNMVO2 = AttributesEnum.LovSubContracterNmVO2.index();
    public static final int LOVAPPCURRCONVASONDTVO1 = AttributesEnum.LovAppCurrConvAsonDtVO1.index();
    public static final int LOVCONVNFACTRVO1 = AttributesEnum.LovConvnFactrVO1.index();
    public static final int LOVCONVNFACTRVO2 = AttributesEnum.LovConvnFactrVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJcVORowImpl() {
    }

    /**
     * Gets MnfJcEO entity object.
     * @return the MnfJcEO
     */
    public MnfJcEOImpl getMnfJcEO() {
        return (MnfJcEOImpl) getEntity(ENTITY_MNFJCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for JC_ID using the alias name JcId.
     * @return the JC_ID
     */
    public String getJcId() {
        return (String) getAttributeInternal(JCID);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_ID using the alias name JcId.
     * @param value value to set the JC_ID
     */
    public void setJcId(String value) {
        setAttributeInternal(JCID, value);
    }

    /**
     * Gets the attribute value for JC_STAT using the alias name JcStat.
     * @return the JC_STAT
     */
    public Integer getJcStat() {
        return (Integer) getAttributeInternal(JCSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_STAT using the alias name JcStat.
     * @param value value to set the JC_STAT
     */
    public void setJcStat(Integer value) {
        setAttributeInternal(JCSTAT, value);
    }

    /**
     * Gets the attribute value for SHIFT_ID using the alias name ShiftId.
     * @return the SHIFT_ID
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIFT_ID using the alias name ShiftId.
     * @param value value to set the SHIFT_ID
     */
    public void setShiftId(String value) {
        setAttributeInternal(SHIFTID, value);
    }


    /**
     * Gets the attribute value for WC_ID using the alias name WcId.
     * @return the WC_ID
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as attribute value for WC_ID using the alias name WcId.
     * @param value value to set the WC_ID
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for WS_ID using the alias name WsId.
     * @return the WS_ID
     */
    public String getWsId() {
        return (String) getAttributeInternal(WSID);
    }

    /**
     * Sets <code>value</code> as attribute value for WS_ID using the alias name WsId.
     * @param value value to set the WS_ID
     */
    public void setWsId(String value) {
        setAttributeInternal(WSID, value);
    }

    /**
     * Gets the attribute value for EMP_ID using the alias name EmpId.
     * @return the EMP_ID
     */
    public Integer getEmpId() {
        return (Integer) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMP_ID using the alias name EmpId.
     * @param value value to set the EMP_ID
     */
    public void setEmpId(Integer value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for STRT_DT using the alias name StrtDt.
     * @return the STRT_DT
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_DT using the alias name StrtDt.
     * @param value value to set the STRT_DT
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for END_DT using the alias name EndDt.
     * @return the END_DT
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DT using the alias name EndDt.
     * @param value value to set the END_DT
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for LOC_TYPE using the alias name LocType.
     * @return the LOC_TYPE
     */
    public Integer getLocType() {
      
        return (Integer) getAttributeInternal(LOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_TYPE using the alias name LocType.
     * @param value value to set the LOC_TYPE
     */
    public void setLocType(Integer value) {
        setAttributeInternal(LOCTYPE, value);
    }

    /**
     * Gets the attribute value for JC_RMRK using the alias name JcRmrk.
     * @return the JC_RMRK
     */
    public String getJcRmrk() {
        return (String) getAttributeInternal(JCRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_RMRK using the alias name JcRmrk.
     * @param value value to set the JC_RMRK
     */
    public void setJcRmrk(String value) {
        setAttributeInternal(JCRMRK, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for JC_MODE using the alias name JcMode.
     * @return the JC_MODE
     */
    public Integer getJcMode() {
        return (Integer) getAttributeInternal(JCMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_MODE using the alias name JcMode.
     * @param value value to set the JC_MODE
     */
    public void setJcMode(Integer value) {
        setAttributeInternal(JCMODE, value);
    }

    /**
     * Gets the attribute value for JC_TYPE using the alias name JcType.
     * @return the JC_TYPE
     */
    public Integer getJcType() {
        return (Integer) getAttributeInternal(JCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_TYPE using the alias name JcType.
     * @param value value to set the JC_TYPE
     */
    public void setJcType(Integer value) {
        setAttributeInternal(JCTYPE, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @return the OUTPT_ITM_ID
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @param value value to set the OUTPT_ITM_ID
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @return the OUTPT_ITM_QTY
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @param value value to set the OUTPT_ITM_QTY
     */
    public void setOutptItmQty(Number value) {
        // System.out.println("Value in setter of Output Item :" + value);
        this.setBalOpQty(value);
        
        if(!this.getJcBasis().equals(new Integer(144))){
            this.setTmpBalOpQty(new Number(0));
            this.setActOutptItmQty(value);
        }
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for JC_BASIS using the alias name JcBasis.
     * @return the JC_BASIS
     */
    public Integer getJcBasis() {
        getAm().getMnfJcSrcVO1().executeQuery();
        return (Integer) getAttributeInternal(JCBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for JC_BASIS using the alias name JcBasis.
     * @param value value to set the JC_BASIS
     */
    public void setJcBasis(Integer value) {
        System.out.println("Setting JC Basis");
        if(value.equals(new Integer(144))){ 
               ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocIdSrc("-1");
               ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocTypeSrc(144);
            ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocDtSrc(new Timestamp(System.currentTimeMillis()));
        } 
          if(value.equals(new Integer(153))){ 
                 ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocIdSrc("-1");
                 ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocTypeSrc(153);
              ((MnfJcSrcVORowImpl)this.getAm().getMnfJcSrcVO1().getCurrentRow()).setDocDtSrc(new Timestamp(System.currentTimeMillis()));
          } 
        setAttributeInternal(JCBASIS, value);
      }

    /**
     * Gets the attribute value for the calculated attribute TransUsrNm.
     * @return the TransUsrNm
     */
    public String getTransUsrNm() {
        if(this.getUsrIdCreate() != null){
             ViewObjectImpl impl = getAm().getLOVUsrNm1();
             impl.setNamedWhereClauseParam("UsrIdBindVar", this.getUsrIdCreate());
             impl.setNamedWhereClauseParam("SlocIDBindVar", this.getSlocId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("UsrName");
                 String usrName = (a == null ? null : a.toString());
                 return usrName;
             }
         }
            return (String) getAttributeInternal(TRANSUSRNM);
    }

    /**
     * Gets the attribute value for the calculated attribute TransJcMode.
     * @return the TransJcMode
     */
    public String getTransJcMode() {
        if(this.getJcMode() != null){
             ViewObjectImpl impl = getAm().getLOVJcMode1();
             impl.setNamedWhereClauseParam("modeBindVar", this.getJcMode());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("AttNm");
                 String mode = (a == null ? null : a.toString());
                 return mode;
             }
         }
        return (String) getAttributeInternal(TRANSJCMODE);
    }

    /**
     * Gets the attribute value for the calculated attribute TransJcStat.
     * @return the TransJcStat
     */
    public String getTransJcStat() {
        if(this.getJcStat() != null){
             ViewObjectImpl impl = getAm().getLOVJcStatus1();
             impl.setNamedWhereClauseParam("statusBindVar", this.getJcStat());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("AttNm");
                 String stat = (a == null ? null : a.toString());
                 return stat;
             }
         }
            return (String) getAttributeInternal(TRANSJCSTAT);
    }


    /**
     * Gets the attribute value for the calculated attribute TransOpId.
     * @return the TransOpId
     */
    public String getTransOpId() {
        //System.out.println("Getting Trans Op Id fro basis "+this.getJcBasis()+ " for Id :"+this.getOpId() +" Lov is "+this.getLovSwitcher() + " AND REV NO IS "+this.getTransRevId());
        if (!this.getJcBasis().equals(new Integer(144))){
            if (this.getOpId() != null) {
                ViewObjectImpl impl = getAm().getLOVOpDispIdVO1();
                impl.setNamedWhereClauseParam("DocIdBind", this.getOpId());
                impl.executeQuery();
                Row[] allRowsInRange = impl.getAllRowsInRange();
                // System.out.println("Count is : "+allRowsInRange.length);
                if (allRowsInRange.length > 0) {
                    Object a = allRowsInRange[0].getAttribute("OpId");
                    String s = (a == null ? null : a.toString());
                    return s;
                }
            }
        }else{
            if (this.getOpId()!=null)
            {
                RowSet rs=this.getLovMnfOpVo1(); 
                Row[] r=this.getLovMnfOpVo1().getFilteredRows("DocId", this.getOpId().trim());
                // System.out.println("length is "+r.length);
                    if(r.length>0){
                        return (String) r[0].getAttribute("OpId");
                    }
            }
        }
      return (String) getAttributeInternal(TRANSOPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpId.
     * @param value value to set the  TransOpId
     */
    public void setTransOpId(String value) {
        setAttributeInternal(TRANSOPID, value);
        
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        //System.out.println("OutputItmId::"+getOutptItmId());
        if(this.getOutptItmId() != null){
            if(!(getJcBasis()==144||getJcBasis()==153)){
             ViewObjectImpl impl = getAm().getLOVOutputItmNmVO1();
             impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
             impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
             impl.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
             impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
             impl.setNamedWhereClauseParam("OutputItmIdBind", this.getOutptItmId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is from TransItemNm: "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("OutptItmDesc");
                 String s1 = (a == null ? null : a.toString());
                 //System.out.println("value of s1"+s1);
                 return s1;
             }
            }
            else {
                
                ViewObjectImpl impl = getAm().getLOVItemNm1();
                impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
                impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
                impl.setNamedWhereClauseParam("BindItemId", this.getOutptItmId());
                impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                //impl.setNamedWhereClauseParam("OutputItmIdBind", this.getOutptItmId());
                impl.executeQuery(); 
                Row[] allRowsInRange = impl.getAllRowsInRange();
                System.out.println("Count is from TransItemNm: "+allRowsInRange.length);
                if(allRowsInRange.length > 0){
                    Object a = allRowsInRange[0].getAttribute("ItmDesc");
                    String s1 = (a == null ? null : a.toString());
                    System.out.println("value of s1"+s1);
                    return s1;
                }
            }
         }
       return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }


    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Long getOpSrNo() {
        return (Long) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Long value) {
        setAttributeInternal(OPSRNO, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransEmpNm.
     * @return the TransEmpNm
     */
    private String EmpName = null;
    public String getTransEmpNm() {
        if(this.getShiftId() != null){
          if(this.getEmpId() != null && EmpName == null){
             ViewObjectImpl impl = getAm().getMnfEmpNm1();
             impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
             impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
             impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
             impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
             impl.setNamedWhereClauseParam("BindempId", this.getEmpId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //// System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("EmpNm");
                 String s = (a == null ? null : a.toString());
                 EmpName = s;
             }
         }
         return EmpName;  
        }
        return "";
       // return (String) getAttributeInternal(TRANSEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEmpNm.
     * @param value value to set the  TransEmpNm
     */
    public void setTransEmpNm(String value) {
        setAttributeInternal(TRANSEMPNM, value);
    }


    /**
     * Gets the attribute value for QTY_BRCT using the alias name QtyBrct.
     * @return the QTY_BRCT
     */
    public Number getQtyBrct() {
        return (Number) getAttributeInternal(QTYBRCT);
    }

    /**
     * Sets <code>value</code> as attribute value for QTY_BRCT using the alias name QtyBrct.
     * @param value value to set the QTY_BRCT
     */
    public void setQtyBrct(Number value) {
        setAttributeInternal(QTYBRCT, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNameTrans.
     * @return the WhNameTrans
     */
    public String getWhNameTrans() {
        if(this.getWhId() != null){
             ViewObjectImpl impl = getAm().getLOVWhName1();
             impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
             impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
             impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
             impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
             impl.setNamedWhereClauseParam("BindWhId", this.getWhId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("WhNm");
                 String r = (a == null ? null : a.toString());
                 return r;
             }
         }
        return (String) getAttributeInternal(WHNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhNameTrans.
     * @param value value to set the  WhNameTrans
     */
    public void setWhNameTrans(String value) {
        setAttributeInternal(WHNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShiftNm.
     * @return the TransShiftNm
     */
    public String getTransShiftNm() {
        if(this.getShiftId() != null){
             ViewObjectImpl impl = getAm().getLovFetchShiftNm1();
             impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
             impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
             impl.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
             impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId()); 
             impl.setNamedWhereClauseParam("ShiftIdBInd", this.getShiftId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("ShiftNm");
                 String p = (a == null ? null : a.toString());
                 return p;
             }
         }
        return (String) getAttributeInternal(TRANSSHIFTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransShiftNm.
     * @param value value to set the  TransShiftNm
     */
    public void setTransShiftNm(String value) {
        setAttributeInternal(TRANSSHIFTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpDesc.
     * @return the TransOpDesc
     */
    public String getTransOpDesc() {
        if (this.getJcBasis().equals(new Integer(144))) {
            if (this.getOpId() != null) {
                ViewObjectImpl impl = getAm().getLOVOpDescNmVO1();
                impl.setNamedWhereClauseParam("DocIdBind", this.getOpId());
                impl.executeQuery();
                Row[] allRowsInRange = impl.getAllRowsInRange();
                //System.out.println("Count is : "+allRowsInRange.length);
                if (allRowsInRange.length > 0) {
                    Object a = allRowsInRange[0].getAttribute("OpDesc");
                    String m = (a == null ? null : a.toString());
                    return m;
                }
            }
        }else{
            if (this.getOpId()!=null)
            {
                ViewObjectImpl vo=(LovMnfOpVoImpl)this.getLovMnfOpVo1().getViewObject();
                RowQualifier rq=new RowQualifier(vo);
                rq.setWhereClause("OpId = '"+this.getOpId() +", AND OpRevNo= '"+this.getTransRevId()+"'");
                Row[] r=vo.getFilteredRowsInRange(rq);
                
                // System.out.println("Executed query is "+rq.getWhereClause());
                // System.out.println("Row Length is "+r.length);
                    if(r.length>0){
                        return (String) r[0].getAttribute("OpDesc");
                    }
            }
        }
       return (String) getAttributeInternal(TRANSOPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpDesc.
     * @param value value to set the  TransOpDesc
     */
    public void setTransOpDesc(String value) {
        setAttributeInternal(TRANSOPDESC, value);
    }

    /**
     * Gets the attribute value for MRS_ID using the alias name MrsId.
     * @return the MRS_ID
     */
    public String getMrsId() {
        return (String) getAttributeInternal(MRSID);
    }

    /**
     * Sets <code>value</code> as attribute value for MRS_ID using the alias name MrsId.
     * @param value value to set the MRS_ID
     */
    public void setMrsId(String value) {
        setAttributeInternal(MRSID, value);
    }


    /**
     * Gets the attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @return the RQMT_AREA_ID
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @param value value to set the RQMT_AREA_ID
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransReqArea.
     * @return the TransReqArea
     */
    public String getTransReqArea() {
        if(this.getRqmtAreaId() != null){
             ViewObjectImpl impl = getAm().getLOVReqAreaIdDispVO1();
             impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
             impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
             impl.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
             impl.setNamedWhereClauseParam("ReqAreaIdBind", this.getRqmtAreaId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("RqmtAreaNm");
                 String t = (a == null ? null : a.toString());
                 return t;
             }
         }
        return (String) getAttributeInternal(TRANSREQAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransReqArea.
     * @param value value to set the  TransReqArea
     */
    public void setTransReqArea(String value) {
        setAttributeInternal(TRANSREQAREA, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransUsrNmMd.
     * @return the TransUsrNmMd
     */
    public String getTransUsrNmMd() {
        if(this.getUsrIdMod() != null){
             ViewObjectImpl impl = getAm().getLOVUsrNmMdVO1();
             impl.setNamedWhereClauseParam("UsrIdBindVar", this.getUsrIdMod());
             impl.setNamedWhereClauseParam("SlocIDBindVar", this.getSlocId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("UsrName");
                 String c = (a == null ? null : a.toString());
                 return c;
             }
         }
        return (String) getAttributeInternal(TRANSUSRNMMD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrNmMd.
     * @param value value to set the  TransUsrNmMd
     */
    public void setTransUsrNmMd(String value) {
        setAttributeInternal(TRANSUSRNMMD, value);
    }


    /**
     * Gets the attribute value for ACT_OUTPT_ITM_QTY using the alias name ActOutptItmQty.
     * @return the ACT_OUTPT_ITM_QTY
     */
    public Number getActOutptItmQty() {
        return (Number) getAttributeInternal(ACTOUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_OUTPT_ITM_QTY using the alias name ActOutptItmQty.
     * @param value value to set the ACT_OUTPT_ITM_QTY
     */
    public void setActOutptItmQty(Number value) {
        if(((MNFJobcardAppAMImpl)this.getApplicationModule()).getMnfAdhocOutItm1().first()!=null){
            ((MNFJobcardAppAMImpl)this.getApplicationModule()).getMnfAdhocOutItm1().first().setAttribute("ActItmQty", value);
        }
        setAttributeInternal(ACTOUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for OP_STAT using the alias name OpStat.
     * @return the OP_STAT
     */
    public Integer getOpStat() {
        return (Integer) getAttributeInternal(OPSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_STAT using the alias name OpStat.
     * @param value value to set the OP_STAT
     */
    public void setOpStat(Integer value) {
        setAttributeInternal(OPSTAT, value);
    }

    /**
     * Gets the attribute value for BAL_OP_QTY using the alias name BalOpQty.
     * @return the BAL_OP_QTY
     */
    public Number getBalOpQty() {
        return (Number) getAttributeInternal(BALOPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_OP_QTY using the alias name BalOpQty.
     * @param value value to set the BAL_OP_QTY
     */
    public void setBalOpQty(Number value) {
        setAttributeInternal(BALOPQTY, value);
    }

    /**
     * Gets the attribute value for TMP_BAL_OP_QTY using the alias name TmpBalOpQty.
     * @return the TMP_BAL_OP_QTY
     */
    public Number getTmpBalOpQty() {
        return (Number) getAttributeInternal(TMPBALOPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TMP_BAL_OP_QTY using the alias name TmpBalOpQty.
     * @param value value to set the TMP_BAL_OP_QTY
     */
    public void setTmpBalOpQty(Number value) {
        setAttributeInternal(TMPBALOPQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWsNm.
     * @return the TransWsNm
     */
    public String getTransWsNm() {
        if(this.getWsId() != null){
             ViewObjectImpl impl = getAm().getLOVworkStationNmVO1();
             impl.setNamedWhereClauseParam("CldIdBindVar", this.getCldId());
             impl.setNamedWhereClauseParam("HoOrgIdBindVar", this.getHoOrgId());
             impl.setNamedWhereClauseParam("OrgIdBindVar", this.getOrgId());
             impl.setNamedWhereClauseParam("SlocIdBindVar", this.getSlocId()); 
             impl.setNamedWhereClauseParam("WcIdBindVar", this.getWcId());
             impl.setNamedWhereClauseParam("WsIdBindVar", this.getWsId());
             impl.executeQuery(); 
             Row[] allRowsInRange = impl.getAllRowsInRange();
             //System.out.println("Count is : "+allRowsInRange.length);
             if(allRowsInRange.length > 0){
                 Object a = allRowsInRange[0].getAttribute("WsDesc");
                 String p = (a == null ? null : a.toString());
                 return p;
             }
         }
        return (String) getAttributeInternal(TRANSWSNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWsNm.
     * @param value value to set the  TransWsNm
     */
    public void setTransWsNm(String value) {
        setAttributeInternal(TRANSWSNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transQtVal.
     * @return the transQtVal
     */
    public Number gettransQtVal() {
       return (Number) getAttributeInternal(TRANSQTVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transQtVal.
     * @param value value to set the  transQtVal
     */
    public void settransQtVal(Number value) {
        setAttributeInternal(TRANSQTVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPendingQty.
     * @return the TransPendingQty
     */
    public Number getTransPendingQty() {
        
       if(!resolvEl("#{pageFlowScope.JC_MODE}").toString().equals("C")){
            Row jcSrc = getAm().getMnfJcSrcVO1().getCurrentRow();
            String docSrcId = (String)jcSrc.getAttribute("DocIdSrc");
            Number tot = new Number(0);
            if(docSrcId != null){
                ViewObjectImpl impl = getAm().getLOVMnfMppPdoOP1();
                impl.setNamedWhereClauseParam("BindCldId", getCldId());
                impl.setNamedWhereClauseParam("BindDocId", docSrcId);
                impl.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
                impl.setNamedWhereClauseParam("BindOrgId", getOrgId());
                impl.setNamedWhereClauseParam("BindSlocId", getSlocId());
                impl.executeQuery();
                Row[] r = impl.getFilteredRows("OpDocId",getOpId());
                if(r.length > 0){
                  // tot = ((Number)r[0].getAttribute("PendingOutptQty")).add(this.getActOutptItmQty());
                    tot = ((Number)r[0].getAttribute("PendingOutptQty")).add(this.getOutptItmQty());
                }
                
               
                
                return tot;
            }
        }else{
           if(this.getJcBasis().toString().trim().equals("144")){
               return new Number(0);
           }
        }
       
       
       _log.info("Pening quatity is "+(Number) getAttributeInternal(TRANSPENDINGQTY));
        return (Number) getAttributeInternal(TRANSPENDINGQTY);
    }
    
    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPendingQty.
     * @param value value to set the  TransPendingQty
     */
    public void setTransPendingQty(Number value) {
            
        setAttributeInternal(TRANSPENDINGQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LovSwitcher.
     * @return the LovSwitcher
     */
    public String getLovSwitcher() {
        return (String) getAttributeInternal(LOVSWITCHER);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRevId.
     * @return the TransRevId
     */
    public String getTransRevId() {
        return (String) getAttributeInternal(TRANSREVID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRevId.
     * @param value value to set the  TransRevId
     */
    public void setTransRevId(String value) {
        setAttributeInternal(TRANSREVID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MaxPreDays.
     * @return the MaxPreDays
     */
    public java.sql.Timestamp getMaxPreDays() {
        return (java.sql.Timestamp) getAttributeInternal(MAXPREDAYS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLocType.
     * @return the TransLocType
     */
    public String getTransLocType() {
        MNFJobcardAppAMImpl am=(MNFJobcardAppAMImpl)this.getApplicationModule();
        ViewObjectImpl optype=am.getLovMnfOpTypeVO1();
        if(getLocType()!=null) {
            Row []rr=optype.getFilteredRows("AttId",getLocType());
            if(rr.length>0) {
                String nm=(String)rr[0].getAttribute("AttNm");
                return nm;
            }
        }
        return (String) getAttributeInternal(TRANSLOCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLocType.
     * @param value value to set the  TransLocType
     */
    public void setTransLocType(String value) {
        setAttributeInternal(TRANSLOCTYPE, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Number getEoId() {
        return (Number) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Number value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoName.
     * @return the TransEoName
     */
    public String getTransEoName() {
       MNFJobcardAppAMImpl am=(MNFJobcardAppAMImpl)this.getApplicationModule();
//        ViewObjectImpl opeo=am.getLovMnfOpEoVO();
//        opeo.setNamedWhereClauseParam("CldIdBind",getCldId());
//        opeo.setNamedWhereClauseParam("HoOrgIdBind",getHoOrgId());
//        opeo.setNamedWhereClauseParam("SlocIdBind",getSlocId());
//        opeo.executeQuery();
//        if(getOpId()!=null) {
//            Row []rr=opeo.getFilteredRows("DocId",getOpId());
//            for(Row r1:rr){
//                String d1=(String)r1.getAttribute("DfltEoFlg");
//                if(d1.equals("Y")) {
//                    Number eoid=(Number)r1.getAttribute("EoId");
//                    ViewObjectImpl sub=am.getLovSubContracterNmVO1();
//                    sub.setNamedWhereClauseParam("CldIdBind",getCldId());
//                    sub.setNamedWhereClauseParam("HoOrgIdBind",getHoOrgId());
//                    sub.setNamedWhereClauseParam("OrgIdBind",getOrgId());
//                    sub.setNamedWhereClauseParam("SlocIdBind", getSlocId());
//                    sub.executeQuery();
//                    if(eoid !=null) {
//                        setEoId(eoid);
//                        ViewObjectImpl curr=am.getLovSubContractCurrIdVO1();
//                        curr.setNamedWhereClauseParam("CldIdBind",getCldId());
//                        curr.setNamedWhereClauseParam("HoOrgIdBind",getHoOrgId());
//                        curr.setNamedWhereClauseParam("OrgIdBind",getOrgId());
//                        curr.setNamedWhereClauseParam("SlocIdBind", getSlocId());
//                        curr.setNamedWhereClauseParam("EoIdBind",eoid);
//                        curr.executeQuery();
//                        //setEoId(eoid);
//                        Row []rr2=curr.getFilteredRows("EoId",eoid);
//                        if(rr2.length>0) {
//                            Integer currid=(Integer)rr2[0].getAttribute("CurrIdSp");
//                            if(currid!=null)
//                            {
//                            setTransCurrIdSp(currid);
//                            }
//                        }
//                        Row []rr1=sub.getFilteredRows("EoId",eoid);
//                        if(rr1.length>0) {
//                            String nm=(String)rr1[0].getAttribute("EoNm");
//                            return nm;
//                        }
//                    }
//                }
//            }
//           
//            
//            
//        }
        if(!resolvEl("#{pageFlowScope.JC_MODE}").toString().equals("C"))
        {
        ViewObjectImpl sub=am.getLovSubContracterNmVO1();
        sub.setNamedWhereClauseParam("CldIdBind",getCldId());
        sub.setNamedWhereClauseParam("HoOrgIdBind",getHoOrgId());
        //sub.setNamedWhereClauseParam("OrgIdBind",getOrgId());
        sub.setNamedWhereClauseParam("SlocIdBind", getSlocId());
        sub.executeQuery();
        if(getEoId()!=null) {
            Row []rr=sub.getFilteredRows("EoId",getEoId());
            if(rr.length>0) {
                setTransCurrIdSp((Integer)rr[0].getAttribute("CurrIdSp"));
                String nm=(String)rr[0].getAttribute("EoNm");
                return nm;
            }
        }
        }
        return (String) getAttributeInternal(TRANSEONAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoName.
     * @param value value to set the  TransEoName
     */
    public void setTransEoName(String value) {
        setAttributeInternal(TRANSEONAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrConvFctr.
     * @return the TransCurrConvFctr
     */
    public Number getTransCurrConvFctr() {
        return (Number) getAttributeInternal(TRANSCURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrConvFctr.
     * @param value value to set the  TransCurrConvFctr
     */
    public void setTransCurrConvFctr(Number value) {
        setAttributeInternal(TRANSCURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrDesc.
     * @return the TransCurrDesc
     */
    public String getTransCurrDesc() {
        return (String) getAttributeInternal(TRANSCURRDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrDesc.
     * @param value value to set the  TransCurrDesc
     */
    public void setTransCurrDesc(String value) {
        setAttributeInternal(TRANSCURRDESC, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrDescTxn.
     * @return the TransCurrDescTxn
     */
    public String getTransCurrDescTxn() {
        MNFJobcardAppAMImpl am=(MNFJobcardAppAMImpl)this.getApplicationModule();
        if (this.getEoId() != null) {
            ViewObjectImpl out = am.getLovConvnFactrVO1();
            out.setNamedWhereClauseParam("BindCldId", getCldId());
            out.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
            out.setNamedWhereClauseParam("BindOrgId", getOrgId());
            out.setNamedWhereClauseParam("BindCurrId", getTransCurrIdSp());
            out.executeQuery();
            
            //Row[] ar = out.getAllRowsInRange();
            Row[] ar = out.getFilteredRows("CcCurrIdTxn",getCurrIdSp());
            if (ar.length > 0) {
                Object att = ar[0].getAttribute("CurrDescTxn");
                
                String val = (att == null ? null : att.toString());
                return val;
            }
        }
        return (String) getAttributeInternal(TRANSCURRDESCTXN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrDescTxn.
     * @param value value to set the  TransCurrDescTxn
     */
    public void setTransCurrDescTxn(String value) {
        setAttributeInternal(TRANSCURRDESCTXN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSp.
     * @return the TransCurrIdSp
     */
    public Integer getTransCurrIdSp() {
        return (Integer) getAttributeInternal(TRANSCURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSp.
     * @param value value to set the  TransCurrIdSp
     */
    public void setTransCurrIdSp(Integer value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpYieldPer.
     * @return the TransOpYieldPer
     */
    public Number getTransOpYieldPer() {
        Row []rr=getAm().getMnfJcSrcVO1().getFilteredRows("DocId",getDocId());
        if(rr.length>0) {
            
            String srcid=(String)rr[0].getAttribute("DocIdSrc");
            if(srcid!=null && getOpId()!=null)
            {
            ViewObjectImpl mnfpdo=getAm().getLovMnfPdoMppOpDispVO1();
            mnfpdo.setNamedWhereClauseParam("BindCldId",getCldId());
            mnfpdo.setNamedWhereClauseParam("BindDocId",srcid);
            mnfpdo.setNamedWhereClauseParam("BindHoOrgId",getHoOrgId());
            mnfpdo.setNamedWhereClauseParam("BindOrgId",getOrgId());
            mnfpdo.setNamedWhereClauseParam("BindSlocId",getSlocId());
            mnfpdo.executeQuery();
            Row fr[]=mnfpdo.getFilteredRows("OpDocId",getOpId());
            if(fr.length>0)
            {
                Number per=(Number)fr[0].getAttribute("OpYieldPer");
                return per;
            }
        }
        
    }
        return (Number) getAttributeInternal(TRANSOPYIELDPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpYieldPer.
     * @param value value to set the  TransOpYieldPer
     */
    public void setTransOpYieldPer(Number value) {
        setAttributeInternal(TRANSOPYIELDPER, value);
    }

    /**
     * Gets the attribute value for ACT_END_DT using the alias name ActEndDt.
     * @return the ACT_END_DT
     */
    public Timestamp getActEndDt() {
        return (Timestamp) getAttributeInternal(ACTENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_END_DT using the alias name ActEndDt.
     * @param value value to set the ACT_END_DT
     */
    public void setActEndDt(Timestamp value) {
        setAttributeInternal(ACTENDDT, value);
    }

    /**
     * Gets the attribute value for ACT_STRT_DT using the alias name ActStrtDt.
     * @return the ACT_STRT_DT
     */
    public Timestamp getActStrtDt() {
        return (Timestamp) getAttributeInternal(ACTSTRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_STRT_DT using the alias name ActStrtDt.
     * @param value value to set the ACT_STRT_DT
     */
    public void setActStrtDt(Timestamp value) {
        setAttributeInternal(ACTSTRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShrtClsFlg.
     * @return the ShrtClsFlg
     */
    public String getShrtClsFlg() {
        return (String) getAttributeInternal(SHRTCLSFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShrtClsFlg.
     * @param value value to set the  ShrtClsFlg
     */
    public void setShrtClsFlg(String value) {
        setAttributeInternal(SHRTCLSFLG, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LOVOpLocType.
     */
    public RowIterator getLOVOpLocType() {
        return (RowIterator) getAttributeInternal(LOVOPLOCTYPE);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LOVMnfOpDesc.
     */
    public RowIterator getLOVMnfOpDesc() {
        return (RowIterator) getAttributeInternal(LOVMNFOPDESC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcAttch.
     */
    public RowIterator getMnfJcAttch() {
        return (RowIterator) getAttributeInternal(MNFJCATTCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItm.
     */
    public RowIterator getMnfJcOpItm() {
        return (RowIterator) getAttributeInternal(MNFJCOPITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcParam.
     */
    public RowIterator getMnfJcParam() {
        return (RowIterator) getAttributeInternal(MNFJCPARAM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcParam1.
     */
    public RowIterator getMnfJcParam1() {
        return (RowIterator) getAttributeInternal(MNFJCPARAM1);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfWc.
     */
    public RowIterator getMnfWc() {
        return (RowIterator) getAttributeInternal(MNFWC);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcBarcode.
     */
    public RowIterator getMnfJcBarcode() {
        return (RowIterator) getAttributeInternal(MNFJCBARCODE);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcSrc.
     */
    public RowIterator getMnfJcSrc() {
        return (RowIterator) getAttributeInternal(MNFJCSRC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcItmStk.
     */
    public RowIterator getMnfJcItmStk() {
        return (RowIterator) getAttributeInternal(MNFJCITMSTK);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfjcOpQcParam.
     */
    public RowIterator getMnfjcOpQcParam() {
        return (RowIterator) getAttributeInternal(MNFJCOPQCPARAM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfAdhocOutItm.
     */
    public RowIterator getMnfAdhocOutItm() {
        return (RowIterator) getAttributeInternal(MNFADHOCOUTITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpInputItem.
     */
    public RowIterator getMnfJcOpInputItem() {
        return (RowIterator) getAttributeInternal(MNFJCOPINPUTITEM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJcBasisVO1.
     */
    public RowSet getLOVJcBasisVO1() {
        return (RowSet) getAttributeInternal(LOVJCBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJcTypeVO1.
     */
    public RowSet getLOVJcTypeVO1() {
        return (RowSet) getAttributeInternal(LOVJCTYPEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVMnfMppPdoOPVO1.
     */
    public RowSet getLOVMnfMppPdoOPVO1() {
        Row r=getAm().getMnfJcSrcVO1().getCurrentRow()== null ? getAm().getMnfJcSrcVO1().first():getAm().getMnfJcSrcVO1().getCurrentRow();
        Object attribute = r.getAttribute("DocIdSrc");
        RowSet rs = (RowSet)getAttributeInternal(LOVMNFMPPPDOOPVO1);
        rs.setNamedWhereClauseParam("BindDocId", attribute);
        rs.executeQuery();        
        return rs;
       // return (RowSet) getAttributeInternal(LOVMNFMPPPDOOPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSearchWsVO1.
     */
    public RowSet getLOVSearchWsVO1() {
        RowSet rs1 = (RowSet)getAttributeInternal(LOVSEARCHWSVO1);
        rs1.setNamedWhereClauseParam("WcIdBindVar", this.getWcId());
        rs1.executeQuery();        
        return rs1;
       // return (RowSet) getAttributeInternal(LOVSEARCHWSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSearchShiftVO1.
     */
    public RowSet getLOVSearchShiftVO1() {
        return (RowSet) getAttributeInternal(LOVSEARCHSHIFTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSearchEmpVO1.
     */
    public RowSet getLOVSearchEmpVO1() {
        return (RowSet) getAttributeInternal(LOVSEARCHEMPVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVWhIdVO1.
     */
    public RowSet getLOVWhIdVO1() {
        return (RowSet) getAttributeInternal(LOVWHIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVReqAreaIdVO1.
     */
    public RowSet getLOVReqAreaIdVO1() {
        return (RowSet) getAttributeInternal(LOVREQAREAIDVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVMnfOpDescVO1.
     */
    public RowSet getLOVMnfOpDescVO1() {
        return (RowSet) getAttributeInternal(LOVMNFOPDESCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfOpVo1.
     */
    public RowSet getLovMnfOpVo1() {
        return (RowSet) getAttributeInternal(LOVMNFOPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLocTypeVO1.
     */
    public RowSet getLovLocTypeVO1() {
        return (RowSet) getAttributeInternal(LOVLOCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSubContracterNmVO1.
     */
    public RowSet getLovSubContracterNmVO1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTERNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSubContracterNmVO2.
     */
    public RowSet getLovSubContracterNmVO2() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTERNMVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppCurrConvAsonDtVO1.
     */
    public RowSet getLovAppCurrConvAsonDtVO1() {
        return (RowSet) getAttributeInternal(LOVAPPCURRCONVASONDTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovConvnFactrVO1.
     */
    public RowSet getLovConvnFactrVO1() {
        return (RowSet) getAttributeInternal(LOVCONVNFACTRVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovConvnFactrVO2.
     */
    public RowSet getLovConvnFactrVO2() {
        return (RowSet) getAttributeInternal(LOVCONVNFACTRVO2);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFJobcardAppAMImpl getAm() {
        return (MNFJobcardAppAMImpl)getApplicationModule();
         
    }
}

