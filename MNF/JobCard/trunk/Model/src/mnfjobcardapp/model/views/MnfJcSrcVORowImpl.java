package mnfjobcardapp.model.views;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import mnfjobcardapp.model.module.MNFJobcardAppAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 12 11:42:29 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJcSrcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFJCSRCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocDtSrc,
        DocId,
        DocIdSrc,
        DocTypeSrc,
        HoOrgId,
        OrgId,
        SlocId,
        WhId,
        TransDocIdSrc,
        LOVSourceDocTypeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int TRANSDOCIDSRC = AttributesEnum.TransDocIdSrc.index();
    public static final int LOVSOURCEDOCTYPEVO1 = AttributesEnum.LOVSourceDocTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJcSrcVORowImpl() {
    }

    /**
     * Gets MnfJcSrcEO entity object.
     * @return the MnfJcSrcEO
     */
    public EntityImpl getMnfJcSrcEO() {
        return (EntityImpl) getEntity(ENTITY_MNFJCSRCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        if(!(this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("144")|| this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("153"))){ 
            if(getAm().checkSourceDocIdValidate(getTransDocIdSrc()).equals("N")){
            setAttributeInternal(DOCDTSRC, value);
            return;
            }
        }else{
            if (this.getDocId()!=null) {
                if (this.getDocId().equals("-1")) {
                    setAttributeInternal(DOCDTSRC, value);
                    return;
                }
            }
        }
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        if(!(this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("144")||this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("153"))){ 
                if(getAm().checkSourceDocIdValidate(getTransDocIdSrc()).equals("N")){
                setAttributeInternal(DOCIDSRC, value);
                return;
                }
            setAttributeInternal(DOCIDSRC, value);
        }else{
            System.out.println("in the else block"+value);
             if (value!=null) {
                if (value.equals("-1")) {
                    setAttributeInternal(DOCIDSRC, value);
                    return;
                }
            }
        }
        
       
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        if(!(this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("144")||this.getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis").toString().equals("153"))){ 
                if(getAm().checkSourceDocIdValidate(getTransDocIdSrc()).equals("N")){
                setAttributeInternal(DOCTYPESRC, value);
                return;
                }
        }else{
            System.out.println(" in the else block of DoctypeSrc::::"+value );
            if (this.getDocId()!=null) {
                    if (this.getDocId().equals("-1")) {
                        setAttributeInternal(DOCTYPESRC, value);
                        return;
                    }
            }
        }
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransDocIdSrc.
     * @return the TransDocIdSrc
     */
    public String getTransDocIdSrc() {
          if(this.getDocIdSrc() != null){
            
            ViewObjectImpl dispIdVO1 = getAm().getLOVSourceDispIdVO1();
            dispIdVO1.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            dispIdVO1.setNamedWhereClauseParam("DocIDBind", this.getDocIdSrc());
            dispIdVO1.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            dispIdVO1.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            dispIdVO1.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            dispIdVO1.executeQuery();
            Row[] allRowsInRange = dispIdVO1.getAllRowsInRange();
            
            if(allRowsInRange.length > 0){
                Object a = allRowsInRange[0].getAttribute("DispDocId");
                String s = (a == null ? null : a.toString());
                return s;
            }
        } 
        return (String) getAttributeInternal(TRANSDOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocIdSrc.
     * @param value value to set the  TransDocIdSrc
     */
    public void setTransDocIdSrc(String value) {
       
       // System.out.println("Setting Trans Value");
        if(getAm().checkSourceDocIdValidate(value).equals("N")){
        setAttributeInternal(TRANSDOCIDSRC, value);
        }
        else{
            StringBuilder saveMsg = new StringBuilder("<html><body><p><b>PDO already used in Route Card.</b></p>");
            saveMsg.append("</body></html>");
            showFacesMsg(saveMsg.toString(), null, FacesMessage.SEVERITY_ERROR, null);
        }
    }


    /**----------------------------------------------------------------**/
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {
     
        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);
     
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVSourceDocTypeVO1.
     */
    public RowSet getLOVSourceDocTypeVO1() {
        Object attribute = getAm().getMnfJc1().getCurrentRow().getAttribute("JcBasis");
       // System.out.println("Value in RowSet-------------------------::::" + attribute);
        RowSet rs = (RowSet) getAttributeInternal(LOVSOURCEDOCTYPEVO1);
        rs.setNamedWhereClauseParam("SrcDocTypeBind", attribute);
        rs.executeQuery();
        return rs;    
      //   return (RowSet) getAttributeInternal(LOVSOURCEDOCTYPEVO1);
    }


    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFJobcardAppAMImpl getAm() {
        return (MNFJobcardAppAMImpl) getApplicationModule();
    }
}

