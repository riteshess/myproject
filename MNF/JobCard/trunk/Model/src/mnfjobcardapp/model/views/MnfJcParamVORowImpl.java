package mnfjobcardapp.model.views;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import mnfjobcardapp.model.entities.MnfJcParamEOImpl;
import mnfjobcardapp.model.module.MNFJobcardAppAMImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 25 10:23:18 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJcParamVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFJCPARAMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        EndDt,
        HoOrgId,
        OrgId,
        ParamId,
        ParamRmrk,
        ParamType,
        ParamVal,
        SlocId,
        StrtDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransParamNm,
        TransAttNm,
        ParamSetId,
        OpId,
        OpSrNo,
        TransOpNm,
        LOVMnfParamNmVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    private static ADFLogger adfLog = (ADFLogger) ADFLogger.createADFLogger(MnfJcParamVORowImpl.class);
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMRMRK = AttributesEnum.ParamRmrk.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int PARAMVAL = AttributesEnum.ParamVal.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSPARAMNM = AttributesEnum.TransParamNm.index();
    public static final int TRANSATTNM = AttributesEnum.TransAttNm.index();
    public static final int PARAMSETID = AttributesEnum.ParamSetId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int TRANSOPNM = AttributesEnum.TransOpNm.index();
    public static final int LOVMNFPARAMNMVO1 = AttributesEnum.LOVMnfParamNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJcParamVORowImpl() {
    }

    /**
     * Gets MnfJcParamEO entity object.
     * @return the MnfJcParamEO
     */
    public MnfJcParamEOImpl getMnfJcParamEO() {
        return (MnfJcParamEOImpl) getEntity(ENTITY_MNFJCPARAMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for END_DT using the alias name EndDt.
     * @return the END_DT
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DT using the alias name EndDt.
     * @param value value to set the END_DT
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {
        if(!getAm().duplicateParamEo(getTransParamNm())){
            setAttributeInternal(PARAMID, value);
        }
        else {
            showFacesMsg("Duplicate Parameter!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        }
    }
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity,
                             String msgMode) {
        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);
    }

    /**
     * Gets the attribute value for PARAM_RMRK using the alias name ParamRmrk.
     * @return the PARAM_RMRK
     */
    public String getParamRmrk() {
        return (String) getAttributeInternal(PARAMRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_RMRK using the alias name ParamRmrk.
     * @param value value to set the PARAM_RMRK
     */
    public void setParamRmrk(String value) {
        setAttributeInternal(PARAMRMRK, value);
    }

    /**
     * Gets the attribute value for PARAM_TYPE using the alias name ParamType.
     * @return the PARAM_TYPE
     */
    public Integer getParamType() {
        return (Integer) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_TYPE using the alias name ParamType.
     * @param value value to set the PARAM_TYPE
     */
    public void setParamType(Integer value) {
        setAttributeInternal(PARAMTYPE, value);
    }

    /**
     * Gets the attribute value for PARAM_VAL using the alias name ParamVal.
     * @return the PARAM_VAL
     */
    public Integer getParamVal() {
        return (Integer) getAttributeInternal(PARAMVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_VAL using the alias name ParamVal.
     * @param value value to set the PARAM_VAL
     */
    public void setParamVal(Integer value) {
        setAttributeInternal(PARAMVAL, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRT_DT using the alias name StrtDt.
     * @return the STRT_DT
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_DT using the alias name StrtDt.
     * @param value value to set the STRT_DT
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransParamNm.
     * @return the TransParamNm
     */
    public String getTransParamNm() {
        if(this.getParamId() != null){
             ViewObjectImpl impl = getAm().getMnfJcParamFetch1();
             Row[] r = impl.getFilteredRows("ParamId", this.getParamId());
                   if(r.length > 0){
                       return r[0].getAttribute("ParamDesc").toString();
                   }
    }
        return (String) getAttributeInternal(TRANSPARAMNM);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransParamNm.
     * @param value value to set the  TransParamNm
     */
    public void setTransParamNm(String value) {
        setAttributeInternal(TRANSPARAMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAttNm.
     * @return the TransAttNm
     */
    public String getTransAttNm() {    
        if(this.getParamId() != null){
             ViewObjectImpl impl = getAm().getMnfJcParamFetch1();
             Row[] r = impl.getFilteredRows("ParamId", this.getParamId());
                   if(r.length > 0){
                       return r[0].getAttribute("AttNm").toString();
                   }
        }
        return (String) getAttributeInternal(TRANSATTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAttNm.
     * @param value value to set the  TransAttNm
     */
    public void setTransAttNm(String value) {
        setAttributeInternal(TRANSATTNM, value);
    }

    /**
     * Gets the attribute value for PARAM_SET_ID using the alias name ParamSetId.
     * @return the PARAM_SET_ID
     */
    public String getParamSetId() {
        return (String) getAttributeInternal(PARAMSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_SET_ID using the alias name ParamSetId.
     * @param value value to set the PARAM_SET_ID
     */
    public void setParamSetId(String value) {
        setAttributeInternal(PARAMSETID, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpNm.
     * @return the TransOpNm
     */
    public String getTransOpNm() {
       ViewObjectImpl op=getAm().getLovAllOpVO1();
       op.setNamedWhereClauseParam("bindCldId",getCldId());
       op.setNamedWhereClauseParam("bindHoOrgId",getHoOrgId());
        op.setNamedWhereClauseParam("bindSlocId",getSlocId());
        op.executeQuery();
        if(getOpId()!=null) {
            Row []rr=op.getFilteredRows("DocId", getOpId());
            if(rr.length>0) {
                 return (String)rr[0].getAttribute("OpDesc");
            }
        }
        return (String) getAttributeInternal(TRANSOPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpNm.
     * @param value value to set the  TransOpNm
     */
    public void setTransOpNm(String value) {
        setAttributeInternal(TRANSOPNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVMnfParamNmVO1.
     */
    public RowSet getLOVMnfParamNmVO1() {
        return (RowSet) getAttributeInternal(LOVMNFPARAMNMVO1);
    }
    
    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFJobcardAppAMImpl getAm() {
        MNFJobcardAppAMImpl am = (MNFJobcardAppAMImpl)resolvElDC("MNFJobcardAppAMDataControl");
        return am;
    }
    
    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
}

