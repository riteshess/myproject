package mnfjobcardapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import mnfjobcardapp.model.entities.MnfJcOpItmEOImpl;
import mnfjobcardapp.model.module.MNFJobcardAppAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 06 16:08:40 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJcOpItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFJCOPITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActItmQty,
        CldId,
        DocId,
        HoOrgId,
        InptBomId,
        IssuType,
        ItmBasis,
        ItmId,
        ItmPrice,
        ItmPriceType,
        ItmQty,
        ItmRmrk,
        ItmRtrnFlg,
        ItmRtrnQty,
        ItmRtrnType,
        ItmScrapPer,
        ItmTotAmt,
        ItmType,
        ItmUom,
        OpId,
        OpSrNo,
        OrgId,
        PdoId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WhId,
        RqmtAreaId,
        PrncplInpt,
        TransItmNm,
        TransPdoNm,
        AutoIssueTrans,
        SelectItemTrans,
        SelectLotTrans,
        SelectLotBinTrans,
        ItmSerializedFlgTrans,
        ItmPickOrderTrans,
        ItmGrpIdTrans,
        ItemIssueCheckTrans,
        ActualItemQtyDispTrans,
        StockAvailableStoreTrans,
        ShopFloorAvailableTrans,
        ItemNameTrans,
        CcId,
        RwrkFlg,
        MnfJcOpItmLot,
        MnfJcOpItmBin,
        MnfJcOpItmSr,
        MnfJcOpItmLotVw,
        MnfJcOpItmBinVw,
        MnfJcOpItmSrVw,
        MnfJcOpItmLotRqmtVw,
        MnfJcOpItmBinRqmtVw,
        MnfJcOpItmSrRqmtVw,
        LovMnfAttVO1,
        LovMnfAttVO2,
        LovMnfAttVO3,
        LovMnfAttVO4,
        LovMnfAttVO5,
        LovUomVO1,
        LOVItemNameVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTITMQTY = AttributesEnum.ActItmQty.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int INPTBOMID = AttributesEnum.InptBomId.index();
    public static final int ISSUTYPE = AttributesEnum.IssuType.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMPRICETYPE = AttributesEnum.ItmPriceType.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMRMRK = AttributesEnum.ItmRmrk.index();
    public static final int ITMRTRNFLG = AttributesEnum.ItmRtrnFlg.index();
    public static final int ITMRTRNQTY = AttributesEnum.ItmRtrnQty.index();
    public static final int ITMRTRNTYPE = AttributesEnum.ItmRtrnType.index();
    public static final int ITMSCRAPPER = AttributesEnum.ItmScrapPer.index();
    public static final int ITMTOTAMT = AttributesEnum.ItmTotAmt.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PDOID = AttributesEnum.PdoId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int PRNCPLINPT = AttributesEnum.PrncplInpt.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSPDONM = AttributesEnum.TransPdoNm.index();
    public static final int AUTOISSUETRANS = AttributesEnum.AutoIssueTrans.index();
    public static final int SELECTITEMTRANS = AttributesEnum.SelectItemTrans.index();
    public static final int SELECTLOTTRANS = AttributesEnum.SelectLotTrans.index();
    public static final int SELECTLOTBINTRANS = AttributesEnum.SelectLotBinTrans.index();
    public static final int ITMSERIALIZEDFLGTRANS = AttributesEnum.ItmSerializedFlgTrans.index();
    public static final int ITMPICKORDERTRANS = AttributesEnum.ItmPickOrderTrans.index();
    public static final int ITMGRPIDTRANS = AttributesEnum.ItmGrpIdTrans.index();
    public static final int ITEMISSUECHECKTRANS = AttributesEnum.ItemIssueCheckTrans.index();
    public static final int ACTUALITEMQTYDISPTRANS = AttributesEnum.ActualItemQtyDispTrans.index();
    public static final int STOCKAVAILABLESTORETRANS = AttributesEnum.StockAvailableStoreTrans.index();
    public static final int SHOPFLOORAVAILABLETRANS = AttributesEnum.ShopFloorAvailableTrans.index();
    public static final int ITEMNAMETRANS = AttributesEnum.ItemNameTrans.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int RWRKFLG = AttributesEnum.RwrkFlg.index();
    public static final int MNFJCOPITMLOT = AttributesEnum.MnfJcOpItmLot.index();
    public static final int MNFJCOPITMBIN = AttributesEnum.MnfJcOpItmBin.index();
    public static final int MNFJCOPITMSR = AttributesEnum.MnfJcOpItmSr.index();
    public static final int MNFJCOPITMLOTVW = AttributesEnum.MnfJcOpItmLotVw.index();
    public static final int MNFJCOPITMBINVW = AttributesEnum.MnfJcOpItmBinVw.index();
    public static final int MNFJCOPITMSRVW = AttributesEnum.MnfJcOpItmSrVw.index();
    public static final int MNFJCOPITMLOTRQMTVW = AttributesEnum.MnfJcOpItmLotRqmtVw.index();
    public static final int MNFJCOPITMBINRQMTVW = AttributesEnum.MnfJcOpItmBinRqmtVw.index();
    public static final int MNFJCOPITMSRRQMTVW = AttributesEnum.MnfJcOpItmSrRqmtVw.index();
    public static final int LOVMNFATTVO1 = AttributesEnum.LovMnfAttVO1.index();
    public static final int LOVMNFATTVO2 = AttributesEnum.LovMnfAttVO2.index();
    public static final int LOVMNFATTVO3 = AttributesEnum.LovMnfAttVO3.index();
    public static final int LOVMNFATTVO4 = AttributesEnum.LovMnfAttVO4.index();
    public static final int LOVMNFATTVO5 = AttributesEnum.LovMnfAttVO5.index();
    public static final int LOVUOMVO1 = AttributesEnum.LovUomVO1.index();
    public static final int LOVITEMNAMEVO1 = AttributesEnum.LOVItemNameVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJcOpItmVORowImpl() {
    }

    /**
     * Gets MnfJcOpItmEO entity object.
     * @return the MnfJcOpItmEO
     */
    public MnfJcOpItmEOImpl getMnfJcOpItmEO() {
        return (MnfJcOpItmEOImpl) getEntity(ENTITY_MNFJCOPITMEO);
    }

    /**
     * Gets the attribute value for ACT_ITM_QTY using the alias name ActItmQty.
     * @return the ACT_ITM_QTY
     */
    public Number getActItmQty() {
        return (Number) getAttributeInternal(ACTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_ITM_QTY using the alias name ActItmQty.
     * @param value value to set the ACT_ITM_QTY
     */
    public void setActItmQty(Number value) {
        setAttributeInternal(ACTITMQTY, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for INPT_BOM_ID using the alias name InptBomId.
     * @return the INPT_BOM_ID
     */
    public String getInptBomId() {
        return (String) getAttributeInternal(INPTBOMID);
    }

    /**
     * Sets <code>value</code> as attribute value for INPT_BOM_ID using the alias name InptBomId.
     * @param value value to set the INPT_BOM_ID
     */
    public void setInptBomId(String value) {
        setAttributeInternal(INPTBOMID, value);
    }

    /**
     * Gets the attribute value for ISSU_TYPE using the alias name IssuType.
     * @return the ISSU_TYPE
     */
    public Integer getIssuType() {
       // System.out.println("getting Isuue type "+(Integer) getAttributeInternal(ISSUTYPE) +" for "+this.getItmId());
        return (Integer) getAttributeInternal(ISSUTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_TYPE using the alias name IssuType.
     * @param value value to set the ISSU_TYPE
     */
    public void setIssuType(Integer value) {
        setAttributeInternal(ISSUTYPE, value);
    }

    /**
     * Gets the attribute value for ITM_BASIS using the alias name ItmBasis.
     * @return the ITM_BASIS
     */
    public Integer getItmBasis() {
        return (Integer) getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_BASIS using the alias name ItmBasis.
     * @param value value to set the ITM_BASIS
     */
    public void setItmBasis(Integer value) {
        setAttributeInternal(ITMBASIS, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        if((Number) getAttributeInternal(ITMPRICE)==null){
            return new Number(0);
        }
        
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
        
        Number price=value;
        Number qty=this.getItmQty();
        
        if(value != null){
            if(price!=null){
                this.setItmTotAmt(qty.multiply(price));    
            }else{
            this.setItmTotAmt(new Number(0));    
            }
        }else{
            this.setItmTotAmt(new Number(0));
        }
    }

    /**
     * Gets the attribute value for ITM_PRICE_TYPE using the alias name ItmPriceType.
     * @return the ITM_PRICE_TYPE
     */
    public Integer getItmPriceType() {
        return (Integer) getAttributeInternal(ITMPRICETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_TYPE using the alias name ItmPriceType.
     * @param value value to set the ITM_PRICE_TYPE
     */
    public void setItmPriceType(Integer value) {
        setAttributeInternal(ITMPRICETYPE, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        if((Number) getAttributeInternal(ITMQTY)==null){
            return new Number(0);
        }
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
        
        Number qty=value;
        Number price=this.getItmPrice();
        
        if(value != null){
            if(price!=null){
                this.setItmTotAmt(qty.multiply(price));    
            }else{
            this.setItmTotAmt(new Number(0));    
            }
        }else{
            this.setItmTotAmt(new Number(0));
        }
    }

    /**
     * Gets the attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @return the ITM_RMRK
     */
    public String getItmRmrk() {
        return (String) getAttributeInternal(ITMRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @param value value to set the ITM_RMRK
     */
    public void setItmRmrk(String value) {
        //// System.out.println("Setting flg value to "+value);
        setAttributeInternal(ITMRMRK, value);
    }

    /**
     * Gets the attribute value for ITM_RTRN_FLG using the alias name ItmRtrnFlg.
     * @return the ITM_RTRN_FLG
     */
    public String getItmRtrnFlg() {
        return (String) getAttributeInternal(ITMRTRNFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RTRN_FLG using the alias name ItmRtrnFlg.
     * @param value value to set the ITM_RTRN_FLG
     */
    public void setItmRtrnFlg(String value) {
        setAttributeInternal(ITMRTRNFLG, value);
    }

    /**
     * Gets the attribute value for ITM_RTRN_QTY using the alias name ItmRtrnQty.
     * @return the ITM_RTRN_QTY
     */
    public Number getItmRtrnQty() {
        return (Number) getAttributeInternal(ITMRTRNQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RTRN_QTY using the alias name ItmRtrnQty.
     * @param value value to set the ITM_RTRN_QTY
     */
    public void setItmRtrnQty(Number value) {
        setAttributeInternal(ITMRTRNQTY, value);
    }

    /**
     * Gets the attribute value for ITM_RTRN_TYPE using the alias name ItmRtrnType.
     * @return the ITM_RTRN_TYPE
     */
    public Integer getItmRtrnType() {
        return (Integer) getAttributeInternal(ITMRTRNTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RTRN_TYPE using the alias name ItmRtrnType.
     * @param value value to set the ITM_RTRN_TYPE
     */
    public void setItmRtrnType(Integer value) {
        setAttributeInternal(ITMRTRNTYPE, value);
    }

    /**
     * Gets the attribute value for ITM_SCRAP_PER using the alias name ItmScrapPer.
     * @return the ITM_SCRAP_PER
     */
    public Number getItmScrapPer() {
        if(getAttributeInternal(ITMSCRAPPER) ==null){
            return new Number(0);
        }
        return (Number) getAttributeInternal(ITMSCRAPPER);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_SCRAP_PER using the alias name ItmScrapPer.
     * @param value value to set the ITM_SCRAP_PER
     */
    public void setItmScrapPer(Number value) {
        setAttributeInternal(ITMSCRAPPER, value);
    }

    /**
     * Gets the attribute value for ITM_TOT_AMT using the alias name ItmTotAmt.
     * @return the ITM_TOT_AMT
     */
    public Number getItmTotAmt() {
        if((Number) getAttributeInternal(ITMTOTAMT) == null){
            return new Number(0);
        }
        return (Number) getAttributeInternal(ITMTOTAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TOT_AMT using the alias name ItmTotAmt.
     * @param value value to set the ITM_TOT_AMT
     */
    public void setItmTotAmt(Number value) {
        setAttributeInternal(ITMTOTAMT, value);
    }

    /**
     * Gets the attribute value for ITM_TYPE using the alias name ItmType.
     * @return the ITM_TYPE
     */
    public Integer getItmType() {
        // System.out.println("Item Type is "+(Integer) getAttributeInternal(ITMTYPE));
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TYPE using the alias name ItmType.
     * @param value value to set the ITM_TYPE
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        // System.out.println("Setting value is "+value );
        // System.out.println("Current thread is "+Thread.getAllStackTraces());
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Long getOpSrNo() {
        return (Long) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Long value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PDO_ID using the alias name PdoId.
     * @return the PDO_ID
     */
    public String getPdoId() {
        return (String) getAttributeInternal(PDOID);
    }

    /**
     * Sets <code>value</code> as attribute value for PDO_ID using the alias name PdoId.
     * @param value value to set the PDO_ID
     */
    public void setPdoId(String value) {
        setAttributeInternal(PDOID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    private String ItemNm = null;
    public String getTransItmNm() {
        if(this.getItmId() != null && ItemNm == null){
                    ViewObjectImpl impl = getAm().getLOVItemNm1();
                    impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
                    impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
                 //   impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
                    impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                    impl.setNamedWhereClauseParam("BindItemId", this.getItmId());
                    impl.executeQuery(); 
                    Row[] allRowsInRange = impl.getAllRowsInRange();
                    //// System.out.println("Count is : "+allRowsInRange.length);
                    if(allRowsInRange.length > 0){
                        Object a = allRowsInRange[0].getAttribute("ItmDesc");
                        String s = (a == null ? null : a.toString());
                        ItemNm = s;
                    }
                }
                return ItemNm;
       // return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPdoNm.
     * @return the TransPdoNm
     */
    private String PdoIdnm = null;
    public String getTransPdoNm() {
        if(this.getPdoId() != null && PdoIdnm == null){
                    ViewObjectImpl impl = getAm().getLOVMnfPdoNm1();
                    impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
                    impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
                    impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
                    impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                    impl.setNamedWhereClauseParam("BindDocId", this.getPdoId());
                    impl.executeQuery(); 
                    Row[] allRowsInRange = impl.getAllRowsInRange();
                    //// System.out.println("Count is : "+allRowsInRange.length);
                    if(allRowsInRange.length > 0){
                        Object a = allRowsInRange[0].getAttribute("PdoId");
                        String s = (a == null ? null : a.toString());
                        PdoIdnm = s;
                    }
                }
                return PdoIdnm;
        //return (String) getAttributeInternal(TRANSPDONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPdoNm.
     * @param value value to set the  TransPdoNm
     */
    public void setTransPdoNm(String value) {
        setAttributeInternal(TRANSPDONM, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AutoIssueTrans.
     * @return the AutoIssueTrans
     */
    public String getAutoIssueTrans() {
        //// System.out.println("Getting auto isuue type");
        if (this.getItmPickOrderTrans() != null && this.getItmType() != null && this.getIssuType() != null) {
            if ((this.getItmPickOrderTrans() == 305 || this.getItmPickOrderTrans() == 306)
                && (this.getItmType() == 62 || this.getItmType() == 63))
            {
                // System.out.println("Returning AutoTrans "+" Y ");
                return "Y";
            }
        }
        // System.out.println("Returning AutoTrans "+" N");
        return "N";
        //return (String) getAttributeInternal(AUTOISSUETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AutoIssueTrans.
     * @param value value to set the  AutoIssueTrans
     */
    public void setAutoIssueTrans(String value) {
        setAttributeInternal(AUTOISSUETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectItemTrans.
     * @return the SelectItemTrans
     */
    public String getSelectItemTrans() {
        if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
            this.getItmType() != null && this.getIssuType() != null) {
            if (this.getItmSerializedFlgTrans().equalsIgnoreCase("Y") && this.getItmPickOrderTrans() == 307 &&
                (this.getItmType() == 62 || this.getItmType() == 63))
            {
                return "Y";
            }
        }
        return "N";
       // return (String) getAttributeInternal(SELECTITEMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectItemTrans.
     * @param value value to set the  SelectItemTrans
     */
    public void setSelectItemTrans(String value) {
        setAttributeInternal(SELECTITEMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectLotTrans.
     * @return the SelectLotTrans
     */
    public String getSelectLotTrans() {
        if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
            this.getItmType() != null && this.getIssuType() != null) {
            if (this.getItmSerializedFlgTrans().equalsIgnoreCase("N") && this.getItmPickOrderTrans() == 307 &&
                (this.getItmType() == 62 || this.getItmType() == 63))
            {
                return "Y";
            }
        }
        return "N";
       // return (String) getAttributeInternal(SELECTLOTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectLotTrans.
     * @param value value to set the  SelectLotTrans
     */
    public void setSelectLotTrans(String value) {
        setAttributeInternal(SELECTLOTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectLotBinTrans.
     * @return the SelectLotBinTrans
     */
    public String getSelectLotBinTrans() {
        if (this.getItmSerializedFlgTrans() != null && this.getItmPickOrderTrans() != null &&
            this.getItmType() != null && this.getIssuType() != null) {
            if (this.getItmSerializedFlgTrans().equalsIgnoreCase("N") && this.getItmPickOrderTrans() == 307 &&
                (this.getItmType() == 62 || this.getItmType() == 63))
            {
                return "Y";
            }
        }
        return "N";
       // return (String) getAttributeInternal(SELECTLOTBINTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectLotBinTrans.
     * @param value value to set the  SelectLotBinTrans
     */
    public void setSelectLotBinTrans(String value) {
        setAttributeInternal(SELECTLOTBINTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSerializedFlgTrans.
     * @return the ItmSerializedFlgTrans
     */
    public String getItmSerializedFlgTrans() {
        return (String) getAttributeInternal(ITMSERIALIZEDFLGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmSerializedFlgTrans.
     * @param value value to set the  ItmSerializedFlgTrans
     */
    public void setItmSerializedFlgTrans(String value) {
        setAttributeInternal(ITMSERIALIZEDFLGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmPickOrderTrans.
     * @return the ItmPickOrderTrans
     */
    public Integer getItmPickOrderTrans() {
        // System.out.println("Values are Item id "+getItmId());
        // System.out.println("PickOrder trans is "+getAttributeInternal(ITMPICKORDERTRANS));
        // System.out.println("ItemGrpId "+getAttributeInternal(ITMGRPIDTRANS));
        if (getItmId() != null &&
            (getAttributeInternal(ITMPICKORDERTRANS) == null || getItmSerializedFlgTrans() == null ||
             getAttributeInternal(ITMGRPIDTRANS) == null) && (this.getItmType() == 62 || this.getItmType() == 63)) {
          //  MNFRouteCardAMImpl am = (MNFRouteCardAMImpl) this.getApplicationModule();
            ViewObjectImpl impl = getAm().getLOVItemName1();
            impl.setNamedWhereClauseParam("BindItmId", this.getItmId().trim());
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindItmDesc", null);
            impl.executeQuery();
           // System.out.println("Row count is Item is "+impl.getRowCount());
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object serializedFlgO = allRowsInRange[0].getAttribute("SerializedFlg");
                Object pickOrderO = allRowsInRange[0].getAttribute("PickOrder");
                String serializedFlg = (serializedFlgO == null ? null : serializedFlgO.toString());
                Integer pickOrder = (pickOrderO == null ? 307 : (Integer) pickOrderO);
                Object grpIdO = allRowsInRange[0].getAttribute("GrpId");
                String grpId = (grpIdO == null ? null : (grpIdO.toString()));


                setItmSerializedFlgTrans(serializedFlg);
                setItmPickOrderTrans(pickOrder);
                setItmGrpIdTrans(grpId);
                this.setItmUom(allRowsInRange[0].getAttribute("UomBasic").toString().trim());
                // System.out.println("Setting Serialized Flag to  : "+serializedFlg+" pickOrder : "+pickOrder);
            }
        }
        // System.out.println("Returning serializable "+(Integer) getAttributeInternal(ITMPICKORDERTRANS));

        return (Integer) getAttributeInternal(ITMPICKORDERTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmPickOrderTrans.
     * @param value value to set the  ItmPickOrderTrans
     */
    public void setItmPickOrderTrans(Integer value) {
        setAttributeInternal(ITMPICKORDERTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpIdTrans.
     * @return the ItmGrpIdTrans
     */
    public String getItmGrpIdTrans() {
        return (String) getAttributeInternal(ITMGRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpIdTrans.
     * @param value value to set the  ItmGrpIdTrans
     */
    public void setItmGrpIdTrans(String value) {
        setAttributeInternal(ITMGRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIssueCheckTrans.
     * @return the ItemIssueCheckTrans
     */
    public String getItemIssueCheckTrans() {
        String checkFunc = getAm().getItmIssueCheckFunc(this.getSlocId(), this.getCldId(), this.getOrgId(), this.getHoOrgId(),
                                                        this.getItmId(), this.getDocId());
        if(checkFunc != null){
            return checkFunc;
        }else{
        return (String) getAttributeInternal(ITEMISSUECHECKTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIssueCheckTrans.
     * @param value value to set the  ItemIssueCheckTrans
     */
    public void setItemIssueCheckTrans(String value) {
        setAttributeInternal(ITEMISSUECHECKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActualItemQtyDispTrans.
     * @return the ActualItemQtyDispTrans
     */
    public Number getActualItemQtyDispTrans() {
     //   return (Number) getAttributeInternal(ACTUALITEMQTYDISPTRANS);
        return this.getActItmQty();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActualItemQtyDispTrans.
     * @param value value to set the  ActualItemQtyDispTrans
     */
    public void setActualItemQtyDispTrans(Number value) {
        setAttributeInternal(ACTUALITEMQTYDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockAvailableStoreTrans.
     * @return the StockAvailableStoreTrans
     */
    public Number getStockAvailableStoreTrans() {
        System.out.println("in the store...");
        String reworkFlagStock=getRwrkFlg().equals("Y")?"R":"S";
               /// System.out.println("Reworkable flag Stock:::"+reworkFlagStock);
                //System.out.println("WHid:::"+getWhId()+"item:"+getItmId()+"docid:"+getDocId());
        if (getAttributeInternal(STOCKAVAILABLESTORETRANS) == null) {
            try {
                Object mrs_id = getAm().getMnfJc1().getCurrentRow().getAttribute("MrsId");
                String value = this.getItemIssueCheckTrans();
                System.out.println("mrsid::"+mrs_id+"value::"+value);
               // if(mrs_id != null){
                Object val = this.callStoredFunction(Types.NUMERIC, "MNF.FN_MNF_MM_GET_AVAIL_STK(?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                        this.getCldId(), this.getSlocId(), this.getOrgId(), this.getItmId(),
                                        this.getWhId(), this.getUsrIdCreateDt(), this.getDocId(), mrs_id, value,reworkFlagStock});
                    System.out.println("Avaliable stock::"+val);
                if(val != null){
                    
                    setStockAvailableStoreTrans(new Number(val));
                }
               // }
            } catch (Exception e) {
                e.printStackTrace();
                // System.out.println("ERROR IN CALLING FUNCTION FN_MNF_MM_GET_AVAIL_STK at RcOpItmRowImpl:" +e.getMessage());
                
                setStockAvailableStoreTrans(new Number(0));
            }
        }
        return (Number) getAttributeInternal(STOCKAVAILABLESTORETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockAvailableStoreTrans.
     * @param value value to set the  StockAvailableStoreTrans
     */
    public void setStockAvailableStoreTrans(Number value) {
        setAttributeInternal(STOCKAVAILABLESTORETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShopFloorAvailableTrans.
     * @return the ShopFloorAvailableTrans
     */
    public Number getShopFloorAvailableTrans() {
        String reworkFlag=getRwrkFlg().equals("Y")?"R":"S";
       System.out.println("Reworkable flag shop floor:::"+reworkFlag);
        //System.out.println("in the getter shopFloor");
        //System.out.println("cldid"+getCldId()+" slocId::"+getSlocId()+" OrgId::"+getOrgId()+"ItmId::"+getItmId());
        //System.out.println("WhId:::"+getWhId()+"UserCreateDt::"+getUsrIdCreateDt()+"Rqmt Area::"+getRqmtAreaId()+"docid::"+getDocId()+"ItemISSUE type::"+getItemIssueCheckTrans());
        if(getAttributeInternal(SHOPFLOORAVAILABLETRANS) == null){
        try {
            Object val = this.callStoredFunction(Types.NUMERIC, "MNF.FN_MNF_SF_GET_AVAIL_STK(?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                    this.getCldId(), this.getSlocId(), this.getOrgId(), this.getItmId(),
                                    this.getWhId(), this.getUsrIdCreateDt(), this.getRqmtAreaId(), this.getDocId(), this.getItemIssueCheckTrans(),reworkFlag
            });
            System.out.println("shop flooor..."+val);
            if(val != null){
                setShopFloorAvailableTrans(new Number(val));
            }
        } catch (Exception e) {
            e.printStackTrace();
            // System.out.println("ERROR IN CALLING FUNCTION FN_MNF_SF_GET_AVAIL_STK at MnfRcOpItmRowImpl:" + e.getMessage());
            
            setShopFloorAvailableTrans(new Number(0));
        }
        }
        return (Number) getAttributeInternal(SHOPFLOORAVAILABLETRANS);
    }

    public void setShopFloorAvailableTrans(Number value) {
        setAttributeInternal(SHOPFLOORAVAILABLETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameTrans.
     * @return the ItemNameTrans
     */
    public String getItemNameTrans() {
        
        if(this.getItmId()!=null){
            RowSet rs=this.getLOVItemNameVO1();
            Row[] r=rs.getFilteredRows("ItmId", this.getItmId());
            
            if(r.length>0){
                return r[0].getAttribute("ItmDesc").toString();
            }
        }
        
        
        return (String) getAttributeInternal(ITEMNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameTrans.
     * @param value value to set the  ItemNameTrans
     */
    public void setItemNameTrans(String value) {
        setAttributeInternal(ITEMNAMETRANS, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for RWRK_FLG using the alias name RwrkFlg.
     * @return the RWRK_FLG
     */
    public String getRwrkFlg() {
        return (String) getAttributeInternal(RWRKFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for RWRK_FLG using the alias name RwrkFlg.
     * @param value value to set the RWRK_FLG
     */
    public void setRwrkFlg(String value) {
        setAttributeInternal(RWRKFLG, value);
    }

    /**
     * Gets the attribute value for PRNCPL_INPT using the alias name PrncplInpt.
     * @return the PRNCPL_INPT
     */
    public String getPrncplInpt() {
        return (String) getAttributeInternal(PRNCPLINPT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRNCPL_INPT using the alias name PrncplInpt.
     * @param value value to set the PRNCPL_INPT
     */
    public void setPrncplInpt(String value) {
        setAttributeInternal(PRNCPLINPT, value);
    }

    /**
     * Gets the attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @return the RQMT_AREA_ID
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @param value value to set the RQMT_AREA_ID
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmLot.
     */
    public RowIterator getMnfJcOpItmLot() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmBin.
     */
    public RowIterator getMnfJcOpItmBin() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmSr.
     */
    public RowIterator getMnfJcOpItmSr() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmLotVw.
     */
    public RowIterator getMnfJcOpItmLotVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMLOTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmBinVw.
     */
    public RowIterator getMnfJcOpItmBinVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMBINVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmSrVw.
     */
    public RowIterator getMnfJcOpItmSrVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMSRVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmLotRqmtVw.
     */
    public RowIterator getMnfJcOpItmLotRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMLOTRQMTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmBinRqmtVw.
     */
    public RowIterator getMnfJcOpItmBinRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMBINRQMTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJcOpItmSrRqmtVw.
     */
    public RowIterator getMnfJcOpItmSrRqmtVw() {
        return (RowIterator) getAttributeInternal(MNFJCOPITMSRRQMTVW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfAttVO1.
     */
    public RowSet getLovMnfAttVO1() {
        return (RowSet) getAttributeInternal(LOVMNFATTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfAttVO2.
     */
    public RowSet getLovMnfAttVO2() {
        return (RowSet) getAttributeInternal(LOVMNFATTVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfAttVO3.
     */
    public RowSet getLovMnfAttVO3() {
        return (RowSet) getAttributeInternal(LOVMNFATTVO3);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfAttVO4.
     */
    public RowSet getLovMnfAttVO4() {
        return (RowSet) getAttributeInternal(LOVMNFATTVO4);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMnfAttVO5.
     */
    public RowSet getLovMnfAttVO5() {
        return (RowSet) getAttributeInternal(LOVMNFATTVO5);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomVO1.
     */
    public RowSet getLovUomVO1() {
        return (RowSet) getAttributeInternal(LOVUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemNameVO1.
     */
    public RowSet getLOVItemNameVO1() {
        return (RowSet) getAttributeInternal(LOVITEMNAMEVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public MNFJobcardAppAMImpl getAm() {
        return (MNFJobcardAppAMImpl)getApplicationModule();         
    }
    
    /********************    STORED Function    *************************************/

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        // System.out.println("Inside Callable Function");
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // System.out.println("Statement is " + st);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    // System.out.println("Bind Variable is " + bindVars[z]);
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            // System.out.println("Return value is " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        
    }
}

