package mnfreportapp.model.views;

import java.sql.CallableStatement;

import java.sql.SQLException;

import java.sql.Types;

import java.util.Date;

import javax.el.ELContext;

import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 15 16:04:51 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MNFReportSearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        StartDateTrans,
        EndDateTrans,
        FileTypeTrans,
        OperationNmTrans,
        OperationIdTrans,
        WorkCeneterNmTrans,
        WorkCenterIdTrans,
        WorkstationNmTrans,
        WorkstationIdTrans,
        OutputItmNmTrans,
        OutputItmIdTrans,
        GrpNmTrans,
        GrpIdTrans,
        bdgMthTrans,
        LOVFileTypeVO1,
        LOVOperationVO1,
        LOVWorkcenterVO1,
        LOVWorkstationVO1,
        LOVItemIdVO1,
        LOVGrpIdVO1,
        LovOrgVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int STARTDATETRANS = AttributesEnum.StartDateTrans.index();
    public static final int ENDDATETRANS = AttributesEnum.EndDateTrans.index();
    public static final int FILETYPETRANS = AttributesEnum.FileTypeTrans.index();
    public static final int OPERATIONNMTRANS = AttributesEnum.OperationNmTrans.index();
    public static final int OPERATIONIDTRANS = AttributesEnum.OperationIdTrans.index();
    public static final int WORKCENETERNMTRANS = AttributesEnum.WorkCeneterNmTrans.index();
    public static final int WORKCENTERIDTRANS = AttributesEnum.WorkCenterIdTrans.index();
    public static final int WORKSTATIONNMTRANS = AttributesEnum.WorkstationNmTrans.index();
    public static final int WORKSTATIONIDTRANS = AttributesEnum.WorkstationIdTrans.index();
    public static final int OUTPUTITMNMTRANS = AttributesEnum.OutputItmNmTrans.index();
    public static final int OUTPUTITMIDTRANS = AttributesEnum.OutputItmIdTrans.index();
    public static final int GRPNMTRANS = AttributesEnum.GrpNmTrans.index();
    public static final int GRPIDTRANS = AttributesEnum.GrpIdTrans.index();
    public static final int BDGMTHTRANS = AttributesEnum.bdgMthTrans.index();
    public static final int LOVFILETYPEVO1 = AttributesEnum.LOVFileTypeVO1.index();
    public static final int LOVOPERATIONVO1 = AttributesEnum.LOVOperationVO1.index();
    public static final int LOVWORKCENTERVO1 = AttributesEnum.LOVWorkcenterVO1.index();
    public static final int LOVWORKSTATIONVO1 = AttributesEnum.LOVWorkstationVO1.index();
    public static final int LOVITEMIDVO1 = AttributesEnum.LOVItemIdVO1.index();
    public static final int LOVGRPIDVO1 = AttributesEnum.LOVGrpIdVO1.index();
    public static final int LOVORGVO = AttributesEnum.LovOrgVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MNFReportSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }
    // Method to call the SQl function
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute StartDateTrans.
     * @return the StartDateTrans
     */
    public Timestamp getStartDateTrans() {
       /* String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Date dt = new Date();
        Timestamp ts = null;
        try {
            dt = (Date) (callStoredFunction(Types.DATE, "APP.fn_get_fy_start_date(?,?,?,?)", new Object[] {
                                            CldId, OrgId, new Timestamp(System.currentTimeMillis()), "FY"
            }));
            ts = new Timestamp(dt.getTime());
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        return ((Timestamp) getAttributeInternal(STARTDATETRANS) == null ? ts :
                (Timestamp) getAttributeInternal(STARTDATETRANS)); */

        return (Timestamp)getAttributeInternal(STARTDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StartDateTrans.
     * @param value value to set the  StartDateTrans
     */
    public void setStartDateTrans(Timestamp value) {
        setAttributeInternal(STARTDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDateTrans.
     * @return the EndDateTrans
     */
    public Timestamp getEndDateTrans() {
//        return ((Timestamp) getAttributeInternal(ENDDATETRANS) == null ? new Timestamp(System.currentTimeMillis()) :
//                (Timestamp) getAttributeInternal(ENDDATETRANS));
          return (Timestamp)getAttributeInternal(ENDDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EndDateTrans.
     * @param value value to set the  EndDateTrans
     */
    public void setEndDateTrans(Timestamp value) {
        setAttributeInternal(ENDDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileTypeTrans.
     * @return the FileTypeTrans
     */
    public String getFileTypeTrans() {
        if (getAttributeInternal(FILETYPETRANS) == null) {
            return "PDF";
        } else
            return (String) getAttributeInternal(FILETYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileTypeTrans.
     * @param value value to set the  FileTypeTrans
     */
    public void setFileTypeTrans(String value) {
        setAttributeInternal(FILETYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationNmTrans.
     * @return the OperationNmTrans
     */
    public String getOperationNmTrans() {
        return (String) getAttributeInternal(OPERATIONNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationNmTrans.
     * @param value value to set the  OperationNmTrans
     */
    public void setOperationNmTrans(String value) {
        setAttributeInternal(OPERATIONNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OperationIdTrans.
     * @return the OperationIdTrans
     */
    public String getOperationIdTrans() {
        return (String) getAttributeInternal(OPERATIONIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OperationIdTrans.
     * @param value value to set the  OperationIdTrans
     */
    public void setOperationIdTrans(String value) {
        setAttributeInternal(OPERATIONIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkCeneterTrans.
     * @return the WorkCeneterTrans
     */
    public String getWorkCeneterNmTrans() {
        return (String) getAttributeInternal(WORKCENETERNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkCeneterTrans.
     * @param value value to set the  WorkCeneterTrans
     */
    public void setWorkCeneterNmTrans(String value) {
        setAttributeInternal(WORKCENETERNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkCenterIdTrans.
     * @return the WorkCenterIdTrans
     */
    public String getWorkCenterIdTrans() {
        return (String) getAttributeInternal(WORKCENTERIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkCenterIdTrans.
     * @param value value to set the  WorkCenterIdTrans
     */
    public void setWorkCenterIdTrans(String value) {
        setAttributeInternal(WORKCENTERIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkstationNmTrans.
     * @return the WorkstationNmTrans
     */
    public String getWorkstationNmTrans() {
        return (String) getAttributeInternal(WORKSTATIONNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkstationNmTrans.
     * @param value value to set the  WorkstationNmTrans
     */
    public void setWorkstationNmTrans(String value) {
        setAttributeInternal(WORKSTATIONNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WorkstationIdTrans.
     * @return the WorkstationIdTrans
     */
    public String getWorkstationIdTrans() {
        return (String) getAttributeInternal(WORKSTATIONIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WorkstationIdTrans.
     * @param value value to set the  WorkstationIdTrans
     */
    public void setWorkstationIdTrans(String value) {
        setAttributeInternal(WORKSTATIONIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputItmNmTrans.
     * @return the OutputItmNmTrans
     */
    public String getOutputItmNmTrans() {
        return (String) getAttributeInternal(OUTPUTITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputItmNmTrans.
     * @param value value to set the  OutputItmNmTrans
     */
    public void setOutputItmNmTrans(String value) {
        setAttributeInternal(OUTPUTITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutputItmIdTrans.
     * @return the OutputItmIdTrans
     */
    public String getOutputItmIdTrans() {
        return (String) getAttributeInternal(OUTPUTITMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutputItmIdTrans.
     * @param value value to set the  OutputItmIdTrans
     */
    public void setOutputItmIdTrans(String value) {
        setAttributeInternal(OUTPUTITMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpNmTrans.
     * @return the GrpNmTrans
     */
    public String getGrpNmTrans() {
        return (String) getAttributeInternal(GRPNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrpNmTrans.
     * @param value value to set the  GrpNmTrans
     */
    public void setGrpNmTrans(String value) {
        setAttributeInternal(GRPNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpIdTrans.
     * @return the GrpIdTrans
     */
    public String getGrpIdTrans() {
        return (String) getAttributeInternal(GRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrpIdTrans.
     * @param value value to set the  GrpIdTrans
     */
    public void setGrpIdTrans(String value) {
        setAttributeInternal(GRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute bdgMthTrans.
     * @return the bdgMthTrans
     */
    public Integer getbdgMthTrans() {
        return (Integer) getAttributeInternal(BDGMTHTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute bdgMthTrans.
     * @param value value to set the  bdgMthTrans
     */
    public void setbdgMthTrans(Integer value) {
        setAttributeInternal(BDGMTHTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFileTypeVO1.
     */
    public RowSet getLOVFileTypeVO1() {
        return (RowSet) getAttributeInternal(LOVFILETYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOperationVO1.
     */
    public RowSet getLOVOperationVO1() {
        return (RowSet) getAttributeInternal(LOVOPERATIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWorkcenterVO1.
     */
    public RowSet getLOVWorkcenterVO1() {
        return (RowSet) getAttributeInternal(LOVWORKCENTERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWorkstationVO1.
     */
    public RowSet getLOVWorkstationVO1() {
        return (RowSet) getAttributeInternal(LOVWORKSTATIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemIdVO1.
     */
    public RowSet getLOVItemIdVO1() {
        return (RowSet) getAttributeInternal(LOVITEMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVGrpIdVO1.
     */
    public RowSet getLOVGrpIdVO1() {
        return (RowSet) getAttributeInternal(LOVGRPIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgVO.
     */
    public RowSet getLovOrgVO() {
        return (RowSet) getAttributeInternal(LOVORGVO);
    }
}

