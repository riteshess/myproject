package mnfshiftprofileapp.model.entities;

import java.math.BigDecimal;

import java.sql.CallableStatement;

import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;

import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 19 09:34:06 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppShiftEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        ShiftId,
        ShiftNm,
        ShiftLegCd,
        ShiftStrtTm,
        ShiftEndTm,
        ShiftBreakTm,
        ShiftAvlTm,
        SiftRmrk,
        ShiftStrech,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidStartDt,
        ValidEndDt,
        ShiftTotTm,
        OrgAppShift;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int SHIFTNM = AttributesEnum.ShiftNm.index();
    public static final int SHIFTLEGCD = AttributesEnum.ShiftLegCd.index();
    public static final int SHIFTSTRTTM = AttributesEnum.ShiftStrtTm.index();
    public static final int SHIFTENDTM = AttributesEnum.ShiftEndTm.index();
    public static final int SHIFTBREAKTM = AttributesEnum.ShiftBreakTm.index();
    public static final int SHIFTAVLTM = AttributesEnum.ShiftAvlTm.index();
    public static final int SIFTRMRK = AttributesEnum.SiftRmrk.index();
    public static final int SHIFTSTRECH = AttributesEnum.ShiftStrech.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDSTARTDT = AttributesEnum.ValidStartDt.index();
    public static final int VALIDENDDT = AttributesEnum.ValidEndDt.index();
    public static final int SHIFTTOTTM = AttributesEnum.ShiftTotTm.index();
    public static final int ORGAPPSHIFT = AttributesEnum.OrgAppShift.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppShiftEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfshiftprofileapp.model.entities.AppShiftEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ShiftId, using the alias name ShiftId.
     * @return the value of ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftId.
     * @param value value to set the ShiftId
     */
    public void setShiftId(String value) {
        setAttributeInternal(SHIFTID, value);
    }

    /**
     * Gets the attribute value for ShiftNm, using the alias name ShiftNm.
     * @return the value of ShiftNm
     */
    public String getShiftNm() {
        return (String) getAttributeInternal(SHIFTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftNm.
     * @param value value to set the ShiftNm
     */
    public void setShiftNm(String value) {
        setAttributeInternal(SHIFTNM, value);
    }

    /**
     * Gets the attribute value for ShiftLegCd, using the alias name ShiftLegCd.
     * @return the value of ShiftLegCd
     */
    public String getShiftLegCd() {
        return (String) getAttributeInternal(SHIFTLEGCD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftLegCd.
     * @param value value to set the ShiftLegCd
     */
    public void setShiftLegCd(String value) {
        setAttributeInternal(SHIFTLEGCD, value);
    }

    /**
     * Gets the attribute value for ShiftStrtTm, using the alias name ShiftStrtTm.
     * @return the value of ShiftStrtTm
     */
    public Timestamp getShiftStrtTm() {
        return (Timestamp) getAttributeInternal(SHIFTSTRTTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftStrtTm.
     * @param value value to set the ShiftStrtTm
     */
    public void setShiftStrtTm(Timestamp value) {
        setAttributeInternal(SHIFTSTRTTM, value);
    }

    /**
     * Gets the attribute value for ShiftEndTm, using the alias name ShiftEndTm.
     * @return the value of ShiftEndTm
     */
    public Timestamp getShiftEndTm() {
        return (Timestamp) getAttributeInternal(SHIFTENDTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftEndTm.
     * @param value value to set the ShiftEndTm
     */
    public void setShiftEndTm(Timestamp value) {
        setAttributeInternal(SHIFTENDTM, value);
    }

    /**
     * Gets the attribute value for ShiftBreakTm, using the alias name ShiftBreakTm.
     * @return the value of ShiftBreakTm
     */
    public Number getShiftBreakTm() {
        return (Number) getAttributeInternal(SHIFTBREAKTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftBreakTm.
     * @param value value to set the ShiftBreakTm
     */
    public void setShiftBreakTm(Number value) {
        setAttributeInternal(SHIFTBREAKTM, value);
    }

    /**
     * Gets the attribute value for ShiftAvlTm, using the alias name ShiftAvlTm.
     * @return the value of ShiftAvlTm
     */
    public Number getShiftAvlTm() {
        return (Number) getAttributeInternal(SHIFTAVLTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftAvlTm.
     * @param value value to set the ShiftAvlTm
     */
    public void setShiftAvlTm(Number value) {
        setAttributeInternal(SHIFTAVLTM, value);
    }

    /**
     * Gets the attribute value for SiftRmrk, using the alias name SiftRmrk.
     * @return the value of SiftRmrk
     */
    public String getSiftRmrk() {
        return (String) getAttributeInternal(SIFTRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for SiftRmrk.
     * @param value value to set the SiftRmrk
     */
    public void setSiftRmrk(String value) {
        setAttributeInternal(SIFTRMRK, value);
    }

    /**
     * Gets the attribute value for ShiftStrech, using the alias name ShiftStrech.
     * @return the value of ShiftStrech
     */
    public String getShiftStrech() {
        return (String) getAttributeInternal(SHIFTSTRECH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftStrech.
     * @param value value to set the ShiftStrech
     */
    public void setShiftStrech(String value) {
        setAttributeInternal(SHIFTSTRECH, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ValidStartDt, using the alias name ValidStartDt.
     * @return the value of ValidStartDt
     */
    public Timestamp getValidStartDt() {
        return (Timestamp) getAttributeInternal(VALIDSTARTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidStartDt.
     * @param value value to set the ValidStartDt
     */
    public void setValidStartDt(Timestamp value) {
        setAttributeInternal(VALIDSTARTDT, value);
    }

    /**
     * Gets the attribute value for ValidEndDt, using the alias name ValidEndDt.
     * @return the value of ValidEndDt
     */
    public Timestamp getValidEndDt() {
        return (Timestamp) getAttributeInternal(VALIDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ValidEndDt.
     * @param value value to set the ValidEndDt
     */
    public void setValidEndDt(Timestamp value) {
        setAttributeInternal(VALIDENDDT, value);
    }


    /**
     * Gets the attribute value for ShiftTotTm, using the alias name ShiftTotTm.
     * @return the value of ShiftTotTm
     */
    public Number getShiftTotTm() {
        return (Number) getAttributeInternal(SHIFTTOTTM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShiftTotTm.
     * @param value value to set the ShiftTotTm
     */
    public void setShiftTotTm(Number value) {
        setAttributeInternal(SHIFTTOTTM, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgAppShift() {
        return (RowIterator) getAttributeInternal(ORGAPPSHIFT);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param shiftId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String shiftId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, shiftId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        String orgID = getHoOrgId();
        super.create(attributeList);
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
            setUsrIdCreate((Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString())));
        }
        if (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}") != null) {
            orgID = (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
        }
        setShiftId(getshiftIdFromFunction(getSlocId(), getCldId(), getHoOrgId(), orgID, 2051, 0, "APP$SHIFT", 0));
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setValidStartDt(new Timestamp(System.currentTimeMillis()));
        /* setShiftStrtTm(new Timestamp(System.currentTimeMillis()));
        setShiftEndTm(new Timestamp(System.currentTimeMillis()));
        setShiftAvlTm(new Number(0)); */
        setShiftStrech("N");
        setShiftBreakTm(new Number(0));
                
    }

    public String getshiftIdFromFunction(Integer slocId, String cldId, String hoOrgId, String orgId, Integer docId,
                                         Integer docTypeId, String tableName, Integer docSubTypeId) {
        return (String) callStoredFunction(Types.VARCHAR, "mnf.fn_mnf_get_prf_id(?,?,?,?,?,?,?,?)", new Object[] {
                                           slocId, cldId, hoOrgId, orgId, docId, docTypeId, tableName, docSubTypeId
        });
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        try {
                    super.lock();
                } catch (RowInconsistentException e) {
                    refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
                    super.lock();
                }
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
                    if (resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null) {
                        setUsrIdMod((Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString())));
                    }
                    setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
                }
                super.doDML(operation, e);
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
                return st.getObject(1);
            } catch (SQLException e) {
                e.printStackTrace();
                int end = e.getMessage().indexOf("\n");
                throw new JboException(e.getMessage().substring(11, end));

            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {
                        throw new JboException(e.getMessage());
                    }
                }
            }
        }
    public Object resolvEl(String data) {
            ADFContext adfCtx = ADFContext.getCurrent();
            ELContext elContext = adfCtx.getELContext();
            ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
            Object Message = valueExp.getValue(elContext).toString();
            return Message;
        }
}

