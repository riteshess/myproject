package mnfjobcardexecutionapp.model.views;

import javax.faces.application.FacesMessage;

import javax.faces.context.FacesContext;

import mnfjobcardexecutionapp.model.entities.MnfJeParamEOImpl;

import mnfjobcardexecutionapp.model.services.MNFJobCardExecutionAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 17 14:36:14 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MNFJeCostingParamVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFJEPARAMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        EndDt,
        HoOrgId,
        OrgId,
        ParamId,
        ParamRmrk,
        ParamType,
        ParamVal,
        SlocId,
        StrtDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        transParamSetDesc,
        transParamDesc,
        transParamType,
        transKey,
        ParamSetId,
        transParamBasis,
        OpId,
        OpSrNo,
        transOpName,
        LOVParameterSetVO1,
        LOVParametersVO1,
        LOVParamValueBasisVO1,
        LovAllOpDescNmVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PARAMRMRK = AttributesEnum.ParamRmrk.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int PARAMVAL = AttributesEnum.ParamVal.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSPARAMSETDESC = AttributesEnum.transParamSetDesc.index();
    public static final int TRANSPARAMDESC = AttributesEnum.transParamDesc.index();
    public static final int TRANSPARAMTYPE = AttributesEnum.transParamType.index();
    public static final int TRANSKEY = AttributesEnum.transKey.index();
    public static final int PARAMSETID = AttributesEnum.ParamSetId.index();
    public static final int TRANSPARAMBASIS = AttributesEnum.transParamBasis.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int TRANSOPNAME = AttributesEnum.transOpName.index();
    public static final int LOVPARAMETERSETVO1 = AttributesEnum.LOVParameterSetVO1.index();
    public static final int LOVPARAMETERSVO1 = AttributesEnum.LOVParametersVO1.index();
    public static final int LOVPARAMVALUEBASISVO1 = AttributesEnum.LOVParamValueBasisVO1.index();
    public static final int LOVALLOPDESCNMVO1 = AttributesEnum.LovAllOpDescNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MNFJeCostingParamVORowImpl() {
    }

    /**
     * Gets MnfJeParamEO entity object.
     * @return the MnfJeParamEO
     */
    public MnfJeParamEOImpl getMnfJeParamEO() {
        return (MnfJeParamEOImpl) getEntity(ENTITY_MNFJEPARAMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for END_DT using the alias name EndDt.
     * @return the END_DT
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DT using the alias name EndDt.
     * @param value value to set the END_DT
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {
        if(!getAM().duplicateCostingParam(gettransParamDesc())){
            setAttributeInternal(PARAMID, value);    
        }
        else {
            showFacesMsg("Duplicate Parameter!! ", " ", FacesMessage.SEVERITY_ERROR, null);
        }
    }

    /**
     * Gets the attribute value for PARAM_RMRK using the alias name ParamRmrk.
     * @return the PARAM_RMRK
     */
    public String getParamRmrk() {
        return (String) getAttributeInternal(PARAMRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_RMRK using the alias name ParamRmrk.
     * @param value value to set the PARAM_RMRK
     */
    public void setParamRmrk(String value) {
        setAttributeInternal(PARAMRMRK, value);
    }

    /**
     * Gets the attribute value for PARAM_TYPE using the alias name ParamType.
     * @return the PARAM_TYPE
     */
    public Number getParamType() {
        return (Number) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_TYPE using the alias name ParamType.
     * @param value value to set the PARAM_TYPE
     */
    public void setParamType(Number value) {
        if(!getAM().duplicateCostingParam(gettransParamDesc())){
            setAttributeInternal(PARAMTYPE, value);  
        }
    }

    /**
     * Gets the attribute value for PARAM_VAL using the alias name ParamVal.
     * @return the PARAM_VAL
     */
    public Number getParamVal() {
        return (Number) getAttributeInternal(PARAMVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_VAL using the alias name ParamVal.
     * @param value value to set the PARAM_VAL
     */
    public void setParamVal(Number value) {
        if(!getAM().duplicateCostingParam(gettransParamDesc())){
            setAttributeInternal(PARAMVAL, value);  
        }
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRT_DT using the alias name StrtDt.
     * @return the STRT_DT
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_DT using the alias name StrtDt.
     * @param value value to set the STRT_DT
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transParamSetDesc.
     * @return the transParamSetDesc
     */
    public String gettransParamSetDesc() {
        if (getParamSetId() != null) {
            if (getAM().getLOVAllParameterSetForViewMode1().getFilteredRows("ParamSetId", getParamSetId()).length > 0) {
                    return (getAM().getLOVAllParameterSetForViewMode1().getFilteredRows("ParamSetId", getParamSetId())[0].getAttribute("ParamSetDesc").toString());
            }
        }
        return (String) getAttributeInternal(TRANSPARAMSETDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transParamSetDesc.
     * @param value value to set the  transParamSetDesc
     */
    public void settransParamSetDesc(String value) {
        setAttributeInternal(TRANSPARAMSETDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transParamDesc.
     * @return the transParamDesc
     */
    public String gettransParamDesc() {
        if (getParamId() != null) {
            if (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()).length > 0) {
                return (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()))[0].getAttribute("ParamNme").toString();
            }
        }
        return (String) getAttributeInternal(TRANSPARAMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transParamDesc.
     * @param value value to set the  transParamDesc
     */
    public void settransParamDesc(String value) {
        setAttributeInternal(TRANSPARAMDESC, value);
    }


    /**
     * Gets the attribute value for the calculated attribute transParamType.
     * @return the transParamType
     */
    public String gettransParamType() {
        if (getParamId() != null) {
            if (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()).length > 0) {
                return (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId())[0].getAttribute("AttNme").toString());
            }
        }
        return (String) getAttributeInternal(TRANSPARAMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transParamType.
     * @param value value to set the  transParamType
     */
    public void settransParamType(String value) {
        if (getParamId() != null) {
            if (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()).length > 0) {
                setAttributeInternal(TRANSPARAMTYPE, getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId())[0].getAttribute("AttNme").toString());
            }
        }
        else {
        setAttributeInternal(TRANSPARAMTYPE, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute transKey.
     * @return the transKey
     */
    public Object gettransKey() {
        return getKey();
        //return (String) getAttributeInternal(TRANSKEY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transKey.
     * @param value value to set the  transKey
     */
    public void settransKey(Object value) {
        setAttributeInternal(TRANSKEY, value);
    }

    /**
     * Gets the attribute value for PARAM_SET_ID using the alias name ParamSetId.
     * @return the PARAM_SET_ID
     */
    public String getParamSetId() {
        return (String) getAttributeInternal(PARAMSETID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_SET_ID using the alias name ParamSetId.
     * @param value value to set the PARAM_SET_ID
     */
    public void setParamSetId(String value) {
        setAttributeInternal(PARAMSETID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transParamBasis.
     * @return the transParamBasis
     */
    public Integer gettransParamBasis() {
        if (getParamId() != null) {
            if (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()).length > 0) {
                return (Integer)(getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()))[0].getAttribute("ParamBasis");
            }
        }
        return (Integer) getAttributeInternal(TRANSPARAMBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transParamBasis.
     * @param value value to set the  transParamBasis
     */
    public void settransParamBasis(Integer value) {
        if (getParamId() != null) {
            if (getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId()).length > 0) {
                setAttributeInternal(TRANSPARAMBASIS,(Integer)getAM().getLOVAllParameterForViewMode1().getFilteredRows("ParamId", getParamId())[0].getAttribute("ParamBasis"));
            }
        }
        else {
            setAttributeInternal(TRANSPARAMBASIS, value);
        }
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transOpName.
     * @return the transOpName
     */
    public String gettransOpName() {
        if(getOpId()!=null){
                MNFJobCardExecutionAMImpl am=(MNFJobCardExecutionAMImpl)this.getApplicationModule();
                ViewObjectImpl opnm=am.getLOVAllOPDescVO1();
                opnm.setNamedWhereClauseParam("BindCLdId",getCldId());
                opnm.setNamedWhereClauseParam("BindHoOrgId",getHoOrgId());
                opnm.setNamedWhereClauseParam("BindOpDocId",getOpId());
                opnm.setNamedWhereClauseParam("BindSlocId",getSlocId());
                opnm.executeQuery();
                System.out.println("cldid::"+getCldId()+"hoorgid"+getHoOrgId()+" "+getOpId()+" "+getSlocId());
                if(getOpId()!=null){
                Row []r=opnm.getAllRowsInRange();
                System.out.println("size::"+r.length+"opid::"+getOpId());
                if(r.length>0)
                {
                    System.out.println("desc::"+r[0].getAttribute("OpDesc"));
                   return (String)r[0].getAttribute("OpDesc");
                }  
                }
                }
        
        return (String) getAttributeInternal(TRANSOPNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOpName.
     * @param value value to set the  transOpName
     */
    public void settransOpName(String value) {
        setAttributeInternal(TRANSOPNAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVParameterSetVO1.
     */
    public RowSet getLOVParameterSetVO1() {
        return (RowSet) getAttributeInternal(LOVPARAMETERSETVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVParametersVO1.
     */
    public RowSet getLOVParametersVO1() {
        return (RowSet) getAttributeInternal(LOVPARAMETERSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVParamValueBasisVO1.
     */
    public RowSet getLOVParamValueBasisVO1() {
        return (RowSet) getAttributeInternal(LOVPARAMVALUEBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAllOpDescNmVO1.
     */
    public RowSet getLovAllOpDescNmVO1() {
        return (RowSet) getAttributeInternal(LOVALLOPDESCNMVO1);
    }

    private MNFJobCardExecutionAMImpl getAM(){
        return (MNFJobCardExecutionAMImpl)getApplicationModule();
    }
    
    public void showFacesMsg(String msgHdr, String msgDtl, javax.faces.application.FacesMessage.Severity msgSeverity, String msgMode) {    
        FacesMessage msg = new FacesMessage(msgHdr);
        msg.setDetail(msgDtl);
        msg.setSeverity(msgSeverity);
        FacesContext.getCurrentInstance().addMessage(null, msg);     
    }
}

