package mnfjobcardexecutionapp.model.views;

import java.math.BigDecimal;

import java.sql.Timestamp;

import mnfjobcardexecutionapp.model.services.MNFJobCardExecutionAMImpl;
import mnfjobcardexecutionapp.model.views.common.LovAllOpDescNmVORow;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 02 17:11:45 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovAllOpDescNmVORowImpl extends ViewRowImpl implements LovAllOpDescNmVORow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocId,
        EmpId,
        EndDt,
        HoOrgId,
        OpId,
        OpLocType,
        OpRmrk,
        OpSrNo,
        OpStat,
        OrgId,
        OutptItmId,
        OutptItmQty,
        PdoPriority,
        ShiftId,
        SlocId,
        StrtDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WcId,
        WsId,
        TransOpNm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPLOCTYPE = AttributesEnum.OpLocType.index();
    public static final int OPRMRK = AttributesEnum.OpRmrk.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int OPSTAT = AttributesEnum.OpStat.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int PDOPRIORITY = AttributesEnum.PdoPriority.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int WSID = AttributesEnum.WsId.index();
    public static final int TRANSOPNM = AttributesEnum.TransOpNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LovAllOpDescNmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpId.
     * @return the EmpId
     */
    public Long getEmpId() {
        return (Long) getAttributeInternal(EMPID);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDt.
     * @return the EndDt
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpId.
     * @return the OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpLocType.
     * @return the OpLocType
     */
    public Integer getOpLocType() {
        return (Integer) getAttributeInternal(OPLOCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute OpRmrk.
     * @return the OpRmrk
     */
    public String getOpRmrk() {
        return (String) getAttributeInternal(OPRMRK);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNo.
     * @return the OpSrNo
     */
    public Long getOpSrNo() {
        return (Long) getAttributeInternal(OPSRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute OpStat.
     * @return the OpStat
     */
    public Integer getOpStat() {
        return (Integer) getAttributeInternal(OPSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OutptItmId.
     * @return the OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute OutptItmQty.
     * @return the OutptItmQty
     */
    public BigDecimal getOutptItmQty() {
        return (BigDecimal) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute PdoPriority.
     * @return the PdoPriority
     */
    public Integer getPdoPriority() {
        return (Integer) getAttributeInternal(PDOPRIORITY);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftId.
     * @return the ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute StrtDt.
     * @return the StrtDt
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Long getUsrIdCreate() {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Long getUsrIdMod() {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for the calculated attribute WcId.
     * @return the WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Gets the attribute value for the calculated attribute WsId.
     * @return the WsId
     */
    public String getWsId() {
        return (String) getAttributeInternal(WSID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpNm.
     * @return the TransOpNm
     */
    public String getTransOpNm() {
        MNFJobCardExecutionAMImpl am=(MNFJobCardExecutionAMImpl)this.getApplicationModule();
        ViewObjectImpl opnm=am.getLOVAllOPDescVO1();
        opnm.setNamedWhereClauseParam("BindCLdId",getCldId());
        opnm.setNamedWhereClauseParam("BindHoOrgId",getHoOrgId());
        opnm.setNamedWhereClauseParam("BindOpDocId",getOpId());
        opnm.setNamedWhereClauseParam("BindSlocId",getSlocId());
        opnm.executeQuery();
        System.out.println("cldid::"+getCldId()+"hoorgid"+getHoOrgId()+" "+getOpId()+" "+getSlocId());
        if(getOpId()!=null){
        Row []r=opnm.getAllRowsInRange();
        System.out.println("size::"+r.length+"opid::"+getOpId());
        if(r.length>0)
        {
            System.out.println("desc::"+r[0].getAttribute("OpDesc"));
           return (String)r[0].getAttribute("OpDesc");
        }  
        }
        return (String) getAttributeInternal(TRANSOPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpNm.
     * @param value value to set the  TransOpNm
     */
    public void setTransOpNm(String value) {
        setAttributeInternal(TRANSOPNM, value);
    }
}

