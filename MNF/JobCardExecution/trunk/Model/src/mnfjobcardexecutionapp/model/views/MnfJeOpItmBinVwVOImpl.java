package mnfjobcardexecutionapp.model.views;

import java.sql.ResultSet;

import mnfjobcardexecutionapp.model.views.common.MnfJeOpItmBinVwVO;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 02 12:32:08 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJeOpItmBinVwVOImpl extends ViewObjectImpl implements MnfJeOpItmBinVwVO {
    /**
     * This is the default constructor (do not remove).
     */
    public MnfJeOpItmBinVwVOImpl() {
    }

    /**
     * Returns the bind variable value for BindCldId.
     * @return bind variable value for BindCldId
     */
    public String getBindCldId() {
        return (String) getNamedWhereClauseParam("BindCldId");
    }

    /**
     * Sets <code>value</code> for bind variable BindCldId.
     * @param value value to bind as BindCldId
     */
    public void setBindCldId(String value) {
        setNamedWhereClauseParam("BindCldId", value);
    }

    /**
     * Returns the bind variable value for BindSlocId.
     * @return bind variable value for BindSlocId
     */
    public Integer getBindSlocId() {
        return (Integer) getNamedWhereClauseParam("BindSlocId");
    }

    /**
     * Sets <code>value</code> for bind variable BindSlocId.
     * @param value value to bind as BindSlocId
     */
    public void setBindSlocId(Integer value) {
        setNamedWhereClauseParam("BindSlocId", value);
    }

    /**
     * Returns the bind variable value for BindOrgId.
     * @return bind variable value for BindOrgId
     */
    public String getBindOrgId() {
        return (String) getNamedWhereClauseParam("BindOrgId");
    }

    /**
     * Sets <code>value</code> for bind variable BindOrgId.
     * @param value value to bind as BindOrgId
     */
    public void setBindOrgId(String value) {
        setNamedWhereClauseParam("BindOrgId", value);
    }

    /**
     * Returns the bind variable value for BindItmId.
     * @return bind variable value for BindItmId
     */
    public String getBindItmId() {
        return (String) getNamedWhereClauseParam("BindItmId");
    }

    /**
     * Sets <code>value</code> for bind variable BindItmId.
     * @param value value to bind as BindItmId
     */
    public void setBindItmId(String value) {
        setNamedWhereClauseParam("BindItmId", value);
    }

    /**
     * Returns the bind variable value for BindWhId.
     * @return bind variable value for BindWhId
     */
    public String getBindWhId() {
        return (String) getNamedWhereClauseParam("BindWhId");
    }

    /**
     * Sets <code>value</code> for bind variable BindWhId.
     * @param value value to bind as BindWhId
     */
    public void setBindWhId(String value) {
        setNamedWhereClauseParam("BindWhId", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
    
    /**Method to calculate total issue quantity
         * @return
         */
        public Number getTotalIssueQtyBin() {
            int totalCount = this.getRowCount();

            this.setRangeSize(totalCount);
            Row[] rr = this.getAllRowsInRange();
            Number totIssue = new Number(0);
            Number zero = new Number(0);
            for (Row r : rr) {
                if (r.getAttribute("transIssueQuantity") != null) {
                    if (((Number) r.getAttribute("transIssueQuantity")).compareTo(zero) > 0) {
                        totIssue = totIssue.add((Number) r.getAttribute("transIssueQuantity"));
                    }
                }
            }
            return totIssue;
        }

    /**
     * Returns the bind variable value for BindStkType.
     * @return bind variable value for BindStkType
     */
    public String getBindStkType() {
        return (String) getNamedWhereClauseParam("BindStkType");
    }

    /**
     * Sets <code>value</code> for bind variable BindStkType.
     * @param value value to bind as BindStkType
     */
    public void setBindStkType(String value) {
        setNamedWhereClauseParam("BindStkType", value);
    }
}

