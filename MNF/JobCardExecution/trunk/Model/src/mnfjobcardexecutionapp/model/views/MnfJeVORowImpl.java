package mnfjobcardexecutionapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ValueExpression;

import mnfjobcardexecutionapp.model.entities.MnfJeEOImpl;

import mnfjobcardexecutionapp.model.services.MNFJobCardExecutionAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 28 14:23:29 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfJeVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MNFJEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocDt,
        DocId,
        EndDt,
        FyId,
        HoOrgId,
        JeBasis,
        JeId,
        JeMode,
        JeRmrk,
        JeStat,
        MrsId,
        OrgId,
        QtyBrct,
        RqmtAreaId,
        SlocId,
        StrtDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        WhId,
        transJcId,
        transRcId,
        transSrcDate,
        transSrcStartDate,
        transSrcEndDate,
        transSrcRequirementArea,
        transOperationDesc,
        transOpItmDesc,
        OutptItmId,
        OutptItmQty,
        ActOutptItmQty,
        transOpSrNo,
        transDocId,
        transOpId,
        transEmpId,
        transShiftId,
        TransOutputItm,
        TransOutputQty,
        TransPendingQty,
        RelJcRc,
        GlVouId,
        TransVoucherId,
        TransRcptNo,
        MnfJeSrc,
        MnfJeParam,
        MnfJeBarcode,
        MnfJeOp,
        MNFJeDowntimeParam,
        MNFJeCostingParam,
        MnfJeOpItm,
        MnfJeOpQcParam,
        LOVAppUserVO1,
        LOVJeStatusVO1,
        LOVRequirementAreaVO1,
        LOVWarehouseNameVO1,
        LOVMnfJcVO1,
        LOVMnfRcVO1,
        LOVJeBasisVO1,
        LOVSourceOperationsVO1,
        LOVJeModeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int JEBASIS = AttributesEnum.JeBasis.index();
    public static final int JEID = AttributesEnum.JeId.index();
    public static final int JEMODE = AttributesEnum.JeMode.index();
    public static final int JERMRK = AttributesEnum.JeRmrk.index();
    public static final int JESTAT = AttributesEnum.JeStat.index();
    public static final int MRSID = AttributesEnum.MrsId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int QTYBRCT = AttributesEnum.QtyBrct.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int TRANSJCID = AttributesEnum.transJcId.index();
    public static final int TRANSRCID = AttributesEnum.transRcId.index();
    public static final int TRANSSRCDATE = AttributesEnum.transSrcDate.index();
    public static final int TRANSSRCSTARTDATE = AttributesEnum.transSrcStartDate.index();
    public static final int TRANSSRCENDDATE = AttributesEnum.transSrcEndDate.index();
    public static final int TRANSSRCREQUIREMENTAREA = AttributesEnum.transSrcRequirementArea.index();
    public static final int TRANSOPERATIONDESC = AttributesEnum.transOperationDesc.index();
    public static final int TRANSOPITMDESC = AttributesEnum.transOpItmDesc.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int ACTOUTPTITMQTY = AttributesEnum.ActOutptItmQty.index();
    public static final int TRANSOPSRNO = AttributesEnum.transOpSrNo.index();
    public static final int TRANSDOCID = AttributesEnum.transDocId.index();
    public static final int TRANSOPID = AttributesEnum.transOpId.index();
    public static final int TRANSEMPID = AttributesEnum.transEmpId.index();
    public static final int TRANSSHIFTID = AttributesEnum.transShiftId.index();
    public static final int TRANSOUTPUTITM = AttributesEnum.TransOutputItm.index();
    public static final int TRANSOUTPUTQTY = AttributesEnum.TransOutputQty.index();
    public static final int TRANSPENDINGQTY = AttributesEnum.TransPendingQty.index();
    public static final int RELJCRC = AttributesEnum.RelJcRc.index();
    public static final int GLVOUID = AttributesEnum.GlVouId.index();
    public static final int TRANSVOUCHERID = AttributesEnum.TransVoucherId.index();
    public static final int TRANSRCPTNO = AttributesEnum.TransRcptNo.index();
    public static final int MNFJESRC = AttributesEnum.MnfJeSrc.index();
    public static final int MNFJEPARAM = AttributesEnum.MnfJeParam.index();
    public static final int MNFJEBARCODE = AttributesEnum.MnfJeBarcode.index();
    public static final int MNFJEOP = AttributesEnum.MnfJeOp.index();
    public static final int MNFJEDOWNTIMEPARAM = AttributesEnum.MNFJeDowntimeParam.index();
    public static final int MNFJECOSTINGPARAM = AttributesEnum.MNFJeCostingParam.index();
    public static final int MNFJEOPITM = AttributesEnum.MnfJeOpItm.index();
    public static final int MNFJEOPQCPARAM = AttributesEnum.MnfJeOpQcParam.index();
    public static final int LOVAPPUSERVO1 = AttributesEnum.LOVAppUserVO1.index();
    public static final int LOVJESTATUSVO1 = AttributesEnum.LOVJeStatusVO1.index();
    public static final int LOVREQUIREMENTAREAVO1 = AttributesEnum.LOVRequirementAreaVO1.index();
    public static final int LOVWAREHOUSENAMEVO1 = AttributesEnum.LOVWarehouseNameVO1.index();
    public static final int LOVMNFJCVO1 = AttributesEnum.LOVMnfJcVO1.index();
    public static final int LOVMNFRCVO1 = AttributesEnum.LOVMnfRcVO1.index();
    public static final int LOVJEBASISVO1 = AttributesEnum.LOVJeBasisVO1.index();
    public static final int LOVSOURCEOPERATIONSVO1 = AttributesEnum.LOVSourceOperationsVO1.index();
    public static final int LOVJEMODEVO1 = AttributesEnum.LOVJeModeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfJeVORowImpl() {
    }

    /**
     * Gets MnfJeEO entity object.
     * @return the MnfJeEO
     */
    public MnfJeEOImpl getMnfJeEO() {
        return (MnfJeEOImpl) getEntity(ENTITY_MNFJEEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for END_DT using the alias name EndDt.
     * @return the END_DT
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for END_DT using the alias name EndDt.
     * @param value value to set the END_DT
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for JE_BASIS using the alias name JeBasis.
     * @return the JE_BASIS
     */
    public Integer getJeBasis() {
        return (Integer) getAttributeInternal(JEBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for JE_BASIS using the alias name JeBasis.
     * @param value value to set the JE_BASIS
     */
    public void setJeBasis(Integer value) {
        setAttributeInternal(JEBASIS, value);
    }

    /**
     * Gets the attribute value for JE_ID using the alias name JeId.
     * @return the JE_ID
     */
    public String getJeId() {
        return (String) getAttributeInternal(JEID);
    }

    /**
     * Sets <code>value</code> as attribute value for JE_ID using the alias name JeId.
     * @param value value to set the JE_ID
     */
    public void setJeId(String value) {
        setAttributeInternal(JEID, value);
    }

    /**
     * Gets the attribute value for JE_MODE using the alias name JeMode.
     * @return the JE_MODE
     */
    public Integer getJeMode() {
        return (Integer) getAttributeInternal(JEMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for JE_MODE using the alias name JeMode.
     * @param value value to set the JE_MODE
     */
    public void setJeMode(Integer value) {
        setAttributeInternal(JEMODE, value);
    }

    /**
     * Gets the attribute value for JE_RMRK using the alias name JeRmrk.
     * @return the JE_RMRK
     */
    public String getJeRmrk() {
        return (String) getAttributeInternal(JERMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for JE_RMRK using the alias name JeRmrk.
     * @param value value to set the JE_RMRK
     */
    public void setJeRmrk(String value) {
        setAttributeInternal(JERMRK, value);
    }

    /**
     * Gets the attribute value for JE_STAT using the alias name JeStat.
     * @return the JE_STAT
     */
    public Integer getJeStat() {
        return (Integer) getAttributeInternal(JESTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for JE_STAT using the alias name JeStat.
     * @param value value to set the JE_STAT
     */
    public void setJeStat(Integer value) {
        setAttributeInternal(JESTAT, value);
    }

    /**
     * Gets the attribute value for MRS_ID using the alias name MrsId.
     * @return the MRS_ID
     */
    public String getMrsId() {
        return (String) getAttributeInternal(MRSID);
    }

    /**
     * Sets <code>value</code> as attribute value for MRS_ID using the alias name MrsId.
     * @param value value to set the MRS_ID
     */
    public void setMrsId(String value) {
        setAttributeInternal(MRSID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for QTY_BRCT using the alias name QtyBrct.
     * @return the QTY_BRCT
     */
    public Number getQtyBrct() {
        return (Number) getAttributeInternal(QTYBRCT);
    }

    /**
     * Sets <code>value</code> as attribute value for QTY_BRCT using the alias name QtyBrct.
     * @param value value to set the QTY_BRCT
     */
    public void setQtyBrct(Number value) {
        setAttributeInternal(QTYBRCT, value);
    }

    /**
     * Gets the attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @return the RQMT_AREA_ID
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Sets <code>value</code> as attribute value for RQMT_AREA_ID using the alias name RqmtAreaId.
     * @param value value to set the RQMT_AREA_ID
     */
    public void setRqmtAreaId(Integer value) {
        setAttributeInternal(RQMTAREAID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRT_DT using the alias name StrtDt.
     * @return the STRT_DT
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_DT using the alias name StrtDt.
     * @param value value to set the STRT_DT
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transJcId.
     * @return the transJcId
     */
    public String gettransJcId() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId = getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                return (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId))[0].getAttribute("JcId").toString();
            }
        }
        return (String) getAttributeInternal(TRANSJCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transJcId.
     * @param value value to set the  transJcId
     */
    public void settransJcId(String value) {
        setAttributeInternal(TRANSJCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transRcId.
     * @return the transRcId
     */
    public String gettransRcId() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId = getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getJeBasis() != null) {
                if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    
                    
                    
                    //setOutptItmId((getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                      //                                             jcRcDocId))[0].getAttribute("OutptItmId").toString());
                    return (getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                                                                   jcRcDocId))[0].getAttribute("RcId").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSRCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transRcId.
     * @param value value to set the  transRcId
     */
    public void settransRcId(String value) {
        setAttributeInternal(TRANSRCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transSrcDate.
     * @return the transSrcDate
     */
    public oracle.jbo.domain.Timestamp gettransSrcDate() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId =
                getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getJeBasis() != null && getJeBasis() == 109) {
                if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllJobCard1().getFilteredRows("DocId",
                                                                                                 jcRcDocId))[0].getAttribute("DocDt");
                }
            } else if (getJeBasis() != null && getJeBasis() == 110) {
                if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                                                                                                 jcRcDocId))[0].getAttribute("DocDt");
                }
            }
        }
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(TRANSSRCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSrcDate.
     * @param value value to set the  transSrcDate
     */
    public void settransSrcDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(TRANSSRCDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transSrcStartDate.
     * @return the transSrcStartDate
     */
    public oracle.jbo.domain.Timestamp gettransSrcStartDate() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId =
                getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getJeBasis() != null && getJeBasis() == 109) {
                if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("StrtDt") != null) {
                        return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllJobCard1().getFilteredRows("DocId",
                                                                                                          jcRcDocId))[0].getAttribute("StrtDt");
                    } else {
                        return new oracle.jbo.domain.Timestamp();
                    }
                }
            } else if (getJeBasis() != null && getJeBasis() == 110) {
                if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("StrtDt") != null) {
                        return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                                                                                                     jcRcDocId))[0].getAttribute("StrtDt");
                    } else {
                        return new oracle.jbo.domain.Timestamp();
                    }
                }
            }
        }
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(TRANSSRCSTARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSrcStartDate.
     * @param value value to set the  transSrcStartDate
     */
    public void settransSrcStartDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(TRANSSRCSTARTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transSrcEndDate.
     * @return the transSrcEndDate
     */
    public oracle.jbo.domain.Timestamp gettransSrcEndDate() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId =
                getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getJeBasis() != null && getJeBasis() == 109) {
                if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("EndDt") != null) {
                        return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllJobCard1().getFilteredRows("DocId",
                                                                                                     jcRcDocId))[0].getAttribute("EndDt");
                    } else {
                        return new oracle.jbo.domain.Timestamp();
                    }
                }
            } else if (getJeBasis() != null && getJeBasis() == 110) {
                if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("EndDt") != null) {
                        return (oracle.jbo.domain.Timestamp) (getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                                                                                                     jcRcDocId))[0].getAttribute("EndDt");
                    } else {
                        return new oracle.jbo.domain.Timestamp();
                    }
                }
            }
        }
        return (oracle.jbo.domain.Timestamp) getAttributeInternal(TRANSSRCENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSrcEndDate.
     * @param value value to set the  transSrcEndDate
     */
    public void settransSrcEndDate(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(TRANSSRCENDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transSrcRequirementArea.
     * @return the transSrcRequirementArea
     */
    public String gettransSrcRequirementArea() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String jcRcDocId =
                getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            if (getJeBasis() != null && getJeBasis() == 109) {
                if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllJobCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("RqmtAreaId") !=
                        null) {
                        return (getAM().getLOVAllJobCard1().getFilteredRows("DocId",
                                                                       jcRcDocId))[0].getAttribute("RqmtAreaId").toString();
                    } else {
                        return "";
                    }
                }
            } else if (getJeBasis() != null && getJeBasis() == 110) {
                if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId).length > 0) {
                    if (getAM().getLOVAllRouteCard1().getFilteredRows("DocId", jcRcDocId)[0].getAttribute("RqmtAreaId") !=
                        null) {
                        return (getAM().getLOVAllRouteCard1().getFilteredRows("DocId",
                                                                       jcRcDocId))[0].getAttribute("RqmtAreaId").toString();
                    } else {
                        return "";
                    }
                }
            }
        }
        return (String) getAttributeInternal(TRANSSRCREQUIREMENTAREA);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transSrcRequirementArea.
     * @param value value to set the  transSrcRequirementArea
     */
    public void settransSrcRequirementArea(String value) {
        setAttributeInternal(TRANSSRCREQUIREMENTAREA, value);
    }


    /**
     * Gets the attribute value for the calculated attribute transOperationDesc.
     * @return the transOperationDesc
     */
    public String gettransOperationDesc() {
        if (gettransOpId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", gettransOpId()).length > 0) {
                return (getAM().getLOVSourceOperations1().getFilteredRows("OpId",
                                                                          gettransOpId()))[0].getAttribute("OpDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSOPERATIONDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOperationDesc.
     * @param value value to set the  transOperationDesc
     */
    public void settransOperationDesc(String value) {
            if (gettransOpId() != null) {
                if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", gettransOpId()).length > 0) {
                    setAttributeInternal(TRANSOPERATIONDESC, (getAM().getLOVSourceOperations1().getFilteredRows("OpId",
                                                                              gettransOpId()))[0].getAttribute("OpDesc").toString());
                }
            } else {
            setAttributeInternal(TRANSOPERATIONDESC, value);
        }
    }


    /**
     * Gets the attribute value for the calculated attribute transOpItmDesc.
     * @return the transOpItmDesc
     */
    public String gettransOpItmDesc() {
        if (getJeBasis()==109) {
            if (gettransOpId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", gettransOpId()).length > 0) {
                return (getAM().getLOVSourceOperations1().getFilteredRows("OpId",
                                                                          gettransOpId()))[0].getAttribute("OutptItmDesc").toString();
            }
            }
        }else{
            return getAM().findItmNm(this.getTransOutputItm());
        }
//        if (gettransOpId() != null) {
//            if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", gettransOpId()).length > 0) {
//                return (getAM().getLOVSourceOperations1().getFilteredRows("OpId",
//                                                                          gettransOpId()))[0].getAttribute("OutptItmDesc").toString();
//            }
//        }
        return (String) getAttributeInternal(TRANSOPITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOpItmDesc.
     * @param value value to set the  transOpItmDesc
     */
    public void settransOpItmDesc(String value) {
            if (gettransOpId() != null) {
                if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", gettransOpId()).length > 0) {
                    setAttributeInternal(TRANSOPITMDESC, (getAM().getLOVSourceOperations1().getFilteredRows("OpId",
                                                                              gettransOpId()))[0].getAttribute("OutptItmDesc").toString());
                }
            }else {
            setAttributeInternal(TRANSOPITMDESC, value);
        }
    }


    /**
     * Gets the attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @return the OUTPT_ITM_ID
     */
    public String getOutptItmId() {
        System.out.println("Getter : "+(String)getAttributeInternal(OUTPTITMID));
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_ID using the alias name OutptItmId.
     * @param value value to set the OUTPT_ITM_ID
     */
    public void setOutptItmId(String value) {
        System.out.println("Setter : "+value);
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @return the OUTPT_ITM_QTY
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OUTPT_ITM_QTY using the alias name OutptItmQty.
     * @param value value to set the OUTPT_ITM_QTY
     */
    public void setOutptItmQty(Number value) {
        setAttributeInternal(OUTPTITMQTY, value);
    }

    /**
     * Gets the attribute value for ACT_OUTPT_ITM_QTY using the alias name ActOutptItmQty.
     * @return the ACT_OUTPT_ITM_QTY
     */
    public Number getActOutptItmQty() {
        return (Number) getAttributeInternal(ACTOUTPTITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_OUTPT_ITM_QTY using the alias name ActOutptItmQty.
     * @param value value to set the ACT_OUTPT_ITM_QTY
     */
    public void setActOutptItmQty(Number value) {
        setAttributeInternal(ACTOUTPTITMQTY, value);
    }


    /**
     * Gets the attribute value for the calculated attribute transOpSrNo.
     * @return the transOpSrNo
     */
    public Integer gettransOpSrNo() {
        if (gettransDocId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()).length > 0) {
                return (Integer)(getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()))[0].getAttribute("OpSrNo");
            }
        }
        return (Integer) getAttributeInternal(TRANSOPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOpSrNo.
     * @param value value to set the  transOpSrNo
     */
    public void settransOpSrNo(Integer value) {
        if (gettransDocId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()).length > 0) {
                setAttributeInternal(TRANSOPSRNO,(Integer)(getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()))[0].getAttribute("OpSrNo"));
            }
        }
        else {
            setAttributeInternal(TRANSOPSRNO, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute transDocId.
     * @return the transDocId
     */
    public String gettransDocId() {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            return getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
        }
        return (String) getAttributeInternal(TRANSDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transDocId.
     * @param value value to set the  transDocId
     */
    public void settransDocId(String value) {
        if (getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId()).length > 0) {
            String docId = getAM().getMnfJeSrc1().getFilteredRows("DocId", getDocId())[0].getAttribute("DocIdSrc").toString();
            setAttributeInternal(TRANSDOCID, docId);
            if(getJeBasis()!=null && getJeBasis()==109){
                settransOpId(getAM().getLOVSourceOperations1().getFilteredRows("DocId", docId)[0].getAttribute("OpId").toString());
                settransOperationDesc(getAM().getLOVSourceOperations1().getFilteredRows("DocId", docId)[0].getAttribute("OpDesc").toString());
                settransOpSrNo(Integer.parseInt(getAM().getLOVSourceOperations1().getFilteredRows("DocId",docId)[0].getAttribute("OpSrNo").toString()));
            }
        }
        else {
        setAttributeInternal(TRANSDOCID, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute transOpId.
     * @return the transOpId
     */
    public String gettransOpId() {
        if (gettransDocId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()).length > 0) {
                return (getAM().getLOVSourceOperations1().getFilteredRows("DocId",
                                                                          gettransDocId()))[0].getAttribute("OpId").toString();
            }
        }
        return (String) getAttributeInternal(TRANSOPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOpId.
     * @param value value to set the  transOpId
     */
    public void settransOpId(String value) {
        if (gettransDocId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("DocId", gettransDocId()).length > 0) {
                setAttributeInternal(TRANSOPID,
                                     getAM().getLOVSourceOperations1().getFilteredRows("DocId",
                                                                                       gettransDocId())[0].getAttribute("OpId").toString());
            }
        } else {
            setAttributeInternal(TRANSOPID, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute transEmpId.
     * @return the transEmpId
     */
    public Integer gettransEmpId() {
        return (Integer) getAttributeInternal(TRANSEMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transEmpId.
     * @param value value to set the  transEmpId
     */
    public void settransEmpId(Integer value) {
        setAttributeInternal(TRANSEMPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transShiftId.
     * @return the transShiftId
     */
    public String gettransShiftId() {
        return (String) getAttributeInternal(TRANSSHIFTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transShiftId.
     * @param value value to set the  transShiftId
     */
    public void settransShiftId(String value) {
        setAttributeInternal(TRANSSHIFTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOutputItm.
     * @return the TransOutputItm
     */
    public String getTransOutputItm() {
        if(this.getJeBasis()==110 && resolvEl("#{pageFlowScope.JobCardExecutionMode}").toString().equals("V")){
            Row[] rs = getAM().getLOVAllRouteCard1().getFilteredRows("DocId", gettransDocId());
            System.out.println(rs.length);
            if(rs.length>0){
                return rs[0].getAttribute("OutptItmId").toString();
            }
        }
        return (String) getAttributeInternal(TRANSOUTPUTITM);
    }
    
    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOutputItm.
     * @param value value to set the  TransOutputItm
     */
    public void setTransOutputItm(String value) {
        setAttributeInternal(TRANSOUTPUTITM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOutputQty.
     * @return the TransOutputQty
     */
    public Number getTransOutputQty() {
        if(this.getJeBasis()==110 && resolvEl("#{pageFlowScope.JobCardExecutionMode}").toString().equals("V")){
            Row[] rs = getAM().getLOVAllRouteCard1().getFilteredRows("DocId", gettransDocId());
            System.out.println(rs.length);
            if(rs.length>0){
                return (Number)rs[0].getAttribute("OutptItmQty");
            }
        }
        return (Number) getAttributeInternal(TRANSOUTPUTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOutputQty.
     * @param value value to set the  TransOutputQty
     */
    public void setTransOutputQty(Number value) {
        setAttributeInternal(TRANSOUTPUTQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPendingQty.
     * @return the TransPendingQty
     */
    public Number getTransPendingQty() {
        System.out.println("value of mode:"+resolvEl("#{pageFlowScope.JobCardExecutionMode}").toString());
        if(!resolvEl("#{pageFlowScope.JobCardExecutionMode}").toString().equals("C")){
                   ViewObjectImpl impl = null;
                   System.out.println("Pending Qty Getter");
                   Row je = getAM().getMnfJe1().getCurrentRow();
                   String docId = (String)je.getAttribute("DocId");
                   System.out.println("DocId : "+docId);
                   ViewObjectImpl jeSrc1 = getAM().getMnfJeSrc1();
                   RowQualifier rq= new RowQualifier(jeSrc1);
                   rq.setWhereClause("CldId='"+getCldId()+"' and SlocId="+getSlocId()+" and OrgId='"+getOrgId()+
                                   "' and HoOrgId='"+getHoOrgId()+"' and DocId='"+docId+"'");
                   Row r1[]=jeSrc1.getFilteredRows(rq);
                   String docSrcId = (String)r1[0].getAttribute("DocIdSrc");
                   System.out.println("Doc Id : "+docSrcId);
                   Number tot = new Number(0);
                   if(docSrcId != null){
                       if(this.getJeBasis() == 109){
                           impl = getAM().getLOVAllJobCard1();
                       }else{
                           impl = getAM().getLOVAllRouteCard1();
                       }
                       impl.setNamedWhereClauseParam("BindCldId", getCldId());
                       impl.setNamedWhereClauseParam("BindSlocId", getSlocId());
                       impl.setNamedWhereClauseParam("BindHoId", getHoOrgId());
                       impl.setNamedWhereClauseParam("BindOrgId", getOrgId());
                       impl.executeQuery();
                       Row[] rs = impl.getFilteredRows("DocId", docSrcId);
                       if(rs.length>0){
                               tot = (Number)rs[0].getAttribute("Pendingqty");
                               System.out.println("Total value Sum : "+tot);
                           }
                   }
                   System.out.println("Output Itm Qty : "+getOutptItmQty());
                   return getOutptItmQty().add((tot==null)?new Number(0):tot);
               }
        else{
        
        return (Number) getAttributeInternal(TRANSPENDINGQTY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPendingQty.
     * @param value value to set the  TransPendingQty
     */
    public void setTransPendingQty(Number value) {
        setAttributeInternal(TRANSPENDINGQTY, value);
    }

    /**
     * Gets the attribute value for REL_JC_RC using the alias name RelJcRc.
     * @return the REL_JC_RC
     */
    public String getRelJcRc() {
        return (String) getAttributeInternal(RELJCRC);
    }

    /**
     * Sets <code>value</code> as attribute value for REL_JC_RC using the alias name RelJcRc.
     * @param value value to set the REL_JC_RC
     */
    public void setRelJcRc(String value) {
        setAttributeInternal(RELJCRC, value);
    }

    /**
     * Gets the attribute value for GL_VOU_ID using the alias name GlVouId.
     * @return the GL_VOU_ID
     */
    public String getGlVouId() {
        return (String) getAttributeInternal(GLVOUID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_VOU_ID using the alias name GlVouId.
     * @param value value to set the GL_VOU_ID
     */
    public void setGlVouId(String value) {
        setAttributeInternal(GLVOUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVoucherId.
     * @return the TransVoucherId
     */
    public String getTransVoucherId() {
        if(getDocId()!=null)
        {
          String voucherId=(String) callStoredFunction(Types.VARCHAR, "MNF.FN_MNF_GET_VOU_NO(?,?,?,?,?,?,?)", new Object[] {
                                                getDocId(),EbizParams.GLBL_APP_USR(),getOrgId().toString(),getSlocId(),getHoOrgId().toString(),getCldId().toString(),"JE"});
          if(voucherId.equalsIgnoreCase("0"))
              return null;
          return voucherId;
        }
        else
        return (String) getAttributeInternal(TRANSVOUCHERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVoucherId.
     * @param value value to set the  TransVoucherId
     */
    public void setTransVoucherId(String value) {
        setAttributeInternal(TRANSVOUCHERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRcptNo.
     * @return the TransRcptNo
     */
    public String getTransRcptNo() {
        if((getDocId()!=null)&&(getWhId()!=null))
        {
          String rcptNo=(String) callStoredFunction(Types.VARCHAR, "MNF.FN_MNF_RETURN_JE_MTL_RCPT(?,?,?,?,?)", new Object[] {
                                                getCldId(),getSlocId(),getOrgId(),getWhId(),getDocId()});
          if(rcptNo.equalsIgnoreCase("N"))
              return null;
          return rcptNo;
        }
        else
        return (String) getAttributeInternal(TRANSRCPTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRcptNo.
     * @param value value to set the  TransRcptNo
     */
    public void setTransRcptNo(String value) {
        setAttributeInternal(TRANSRCPTNO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeSrc.
     */
    public RowIterator getMnfJeSrc() {
        return (RowIterator) getAttributeInternal(MNFJESRC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeParam.
     */
    public RowIterator getMnfJeParam() {
        return (RowIterator) getAttributeInternal(MNFJEPARAM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeBarcode.
     */
    public RowIterator getMnfJeBarcode() {
        return (RowIterator) getAttributeInternal(MNFJEBARCODE);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeOp.
     */
    public RowIterator getMnfJeOp() {
        return (RowIterator) getAttributeInternal(MNFJEOP);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MNFJeDowntimeParam.
     */
    public RowIterator getMNFJeDowntimeParam() {
        return (RowIterator) getAttributeInternal(MNFJEDOWNTIMEPARAM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MNFJeCostingParam.
     */
    public RowIterator getMNFJeCostingParam() {
        return (RowIterator) getAttributeInternal(MNFJECOSTINGPARAM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeOpItm.
     */
    public RowIterator getMnfJeOpItm() {
        return (RowIterator) getAttributeInternal(MNFJEOPITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnfJeOpQcParam.
     */
    public RowIterator getMnfJeOpQcParam() {
        return (RowIterator) getAttributeInternal(MNFJEOPQCPARAM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAppUserVO1.
     */
    public RowSet getLOVAppUserVO1() {
        return (RowSet) getAttributeInternal(LOVAPPUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJeStatusVO1.
     */
    public RowSet getLOVJeStatusVO1() {
        return (RowSet) getAttributeInternal(LOVJESTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRequirementAreaVO1.
     */
    public RowSet getLOVRequirementAreaVO1() {
        return (RowSet) getAttributeInternal(LOVREQUIREMENTAREAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWarehouseNameVO1.
     */
    public RowSet getLOVWarehouseNameVO1() {
        return (RowSet) getAttributeInternal(LOVWAREHOUSENAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVMnfJcVO1.
     */
    public RowSet getLOVMnfJcVO1() {
        return (RowSet) getAttributeInternal(LOVMNFJCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVMnfRcVO1.
     */
    public RowSet getLOVMnfRcVO1() {
        return (RowSet) getAttributeInternal(LOVMNFRCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJeBasisVO1.
     */
    public RowSet getLOVJeBasisVO1() {
        return (RowSet) getAttributeInternal(LOVJEBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSourceOperationsVO1.
     */
    public RowSet getLOVSourceOperationsVO1() {
        return (RowSet) getAttributeInternal(LOVSOURCEOPERATIONSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVJeModeVO1.
     */
    public RowSet getLOVJeModeVO1() {
        return (RowSet) getAttributeInternal(LOVJEMODEVO1);
    }

    private MNFJobCardExecutionAMImpl getAM() {
        return (MNFJobCardExecutionAMImpl) getApplicationModule();
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    System.out.println("Bind Variables " + (z + 1) + " : " + bindVars[z] + "\n");
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

