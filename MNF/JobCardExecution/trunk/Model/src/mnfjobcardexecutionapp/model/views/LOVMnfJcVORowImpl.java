package mnfjobcardexecutionapp.model.views;

import java.math.BigDecimal;

import mnfjobcardexecutionapp.model.services.MNFJobCardExecutionAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 20 12:05:54 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVMnfJcVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MrsId,
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        DocDt,
        JcId,
        JcStat,
        JcMode,
        WhId,
        RqmtAreaId,
        StrtDt,
        EndDt,
        ShiftId,
        EmpId,
        OpId,
        OutptItmId,
        OutptItmQty,
        OpSrNo,
        OpStat,
        PendingOutptQty,
        transOpDesc,
        LOVRequirementAreaVO1,
        LOVWarehouseNameVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MRSID = AttributesEnum.MrsId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int JCID = AttributesEnum.JcId.index();
    public static final int JCSTAT = AttributesEnum.JcStat.index();
    public static final int JCMODE = AttributesEnum.JcMode.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int RQMTAREAID = AttributesEnum.RqmtAreaId.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int OUTPTITMQTY = AttributesEnum.OutptItmQty.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int OPSTAT = AttributesEnum.OpStat.index();
    public static final int PENDINGOUTPTQTY = AttributesEnum.PendingOutptQty.index();
    public static final int TRANSOPDESC = AttributesEnum.transOpDesc.index();
    public static final int LOVREQUIREMENTAREAVO1 = AttributesEnum.LOVRequirementAreaVO1.index();
    public static final int LOVWAREHOUSENAMEVO1 = AttributesEnum.LOVWarehouseNameVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVMnfJcVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute MrsId.
     * @return the MrsId
     */
    public String getMrsId() {
        return (String) getAttributeInternal(MRSID);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute JcId.
     * @return the JcId
     */
    public String getJcId() {
        return (String) getAttributeInternal(JCID);
    }

    /**
     * Gets the attribute value for the calculated attribute JcStat.
     * @return the JcStat
     */
    public Integer getJcStat() {
        return (Integer) getAttributeInternal(JCSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute JcMode.
     * @return the JcMode
     */
    public Integer getJcMode() {
        return (Integer) getAttributeInternal(JCMODE);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaId.
     * @return the RqmtAreaId
     */
    public Integer getRqmtAreaId() {
        return (Integer) getAttributeInternal(RQMTAREAID);
    }

    /**
     * Gets the attribute value for the calculated attribute StrtDt.
     * @return the StrtDt
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDt.
     * @return the EndDt
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftId.
     * @return the ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpId.
     * @return the EmpId
     */
    public Integer getEmpId() {
        return (Integer) getAttributeInternal(EMPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OpId.
     * @return the OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Gets the attribute value for the calculated attribute OutptItmId.
     * @return the OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute OutptItmQty.
     * @return the OutptItmQty
     */
    public Number getOutptItmQty() {
        return (Number) getAttributeInternal(OUTPTITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute OpSrNo.
     * @return the OpSrNo
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Gets the attribute value for the calculated attribute OpStat.
     * @return the OpStat
     */
    public Integer getOpStat() {
        return (Integer) getAttributeInternal(OPSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute PendingOutptQty.
     * @return the PendingOutptQty
     */
    public Number getPendingOutptQty() {
        return (Number) getAttributeInternal(PENDINGOUTPTQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute transOpDesc.
     * @return the transOpDesc
     */
    public String gettransOpDesc() {
        if (getOpId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", getOpId()).length > 0) {
                return (getAM().getLOVSourceOperations1().getFilteredRows("OpId", getOpId()))[0].getAttribute("OpDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSOPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transOpDesc.
     * @param value value to set the  transOpDesc
     */
    public void settransOpDesc(String value) {
        if (getOpId() != null) {
            if (getAM().getLOVSourceOperations1().getFilteredRows("OpId", getOpId()).length > 0) {
                setAttributeInternal(TRANSOPDESC, (getAM().getLOVSourceOperations1().getFilteredRows("OpId", getOpId()))[0].getAttribute("OpDesc").toString());
            }
        }
        setAttributeInternal(TRANSOPDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRequirementAreaVO1.
     */
    public RowSet getLOVRequirementAreaVO1() {
        return (RowSet) getAttributeInternal(LOVREQUIREMENTAREAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWarehouseNameVO1.
     */
    public RowSet getLOVWarehouseNameVO1() {
        return (RowSet) getAttributeInternal(LOVWAREHOUSENAMEVO1);
    }
    
    private MNFJobCardExecutionAMImpl getAM(){
        return(MNFJobCardExecutionAMImpl)this.getApplicationModule();
    }
}

