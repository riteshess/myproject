package mnfcapplanapp.model.views;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 19 17:13:19 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ResourceUtilizationVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        WcId,
        WsId,
        OutptItmId,
        ItmQuantity,
        ResourceDate,
        ItmMaxCap,
        ShiftId,
        TransForColorMode;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WCID = AttributesEnum.WcId.index();
    public static final int WSID = AttributesEnum.WsId.index();
    public static final int OUTPTITMID = AttributesEnum.OutptItmId.index();
    public static final int ITMQUANTITY = AttributesEnum.ItmQuantity.index();
    public static final int RESOURCEDATE = AttributesEnum.ResourceDate.index();
    public static final int ITMMAXCAP = AttributesEnum.ItmMaxCap.index();
    public static final int SHIFTID = AttributesEnum.ShiftId.index();
    public static final int TRANSFORCOLORMODE = AttributesEnum.TransForColorMode.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ResourceUtilizationVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WcId.
     * @return the WcId
     */
    public String getWcId() {
        return (String) getAttributeInternal(WCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WcId.
     * @param value value to set the  WcId
     */
    public void setWcId(String value) {
        setAttributeInternal(WCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WsId.
     * @return the WsId
     */
    public String getWsId() {
        return (String) getAttributeInternal(WSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WsId.
     * @param value value to set the  WsId
     */
    public void setWsId(String value) {
        setAttributeInternal(WSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OutptItmId.
     * @return the OutptItmId
     */
    public String getOutptItmId() {
        return (String) getAttributeInternal(OUTPTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OutptItmId.
     * @param value value to set the  OutptItmId
     */
    public void setOutptItmId(String value) {
        setAttributeInternal(OUTPTITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmQuantity.
     * @return the ItmQuantity
     */
    public Number getItmQuantity() {
        return (Number) getAttributeInternal(ITMQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmQuantity.
     * @param value value to set the  ItmQuantity
     */
    public void setItmQuantity(Number value) {
        setAttributeInternal(ITMQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResourceDate.
     * @return the ResourceDate
     */
    public Timestamp getResourceDate() {
        return (Timestamp) getAttributeInternal(RESOURCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResourceDate.
     * @param value value to set the  ResourceDate
     */
    public void setResourceDate(Timestamp value) {
        setAttributeInternal(RESOURCEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmMaxCap.
     * @return the ItmMaxCap
     */
    public Number getItmMaxCap() {
        return (Number) getAttributeInternal(ITMMAXCAP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmMaxCap.
     * @param value value to set the  ItmMaxCap
     */
    public void setItmMaxCap(Number value) {
        setAttributeInternal(ITMMAXCAP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShiftId.
     * @return the ShiftId
     */
    public String getShiftId() {
        return (String) getAttributeInternal(SHIFTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShiftId.
     * @param value value to set the  ShiftId
     */
    public void setShiftId(String value) {
        setAttributeInternal(SHIFTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransForColorMode.
     * @return the TransForColorMode
     */
    public String getTransForColorMode() {
        if (this.getItmQuantity().compareTo(this.getItmMaxCap()) == -1) {
            return "low";
        } else if (this.getItmQuantity().compareTo(this.getItmMaxCap()) == 1) {
            return "critical";
        } else if (this.getItmQuantity().compareTo(this.getItmMaxCap()) == 0) {
            return "high";
        } else {
            return (String) getAttributeInternal(TRANSFORCOLORMODE);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransForColorMode.
     * @param value value to set the  TransForColorMode
     */
    public void setTransForColorMode(String value) {
        setAttributeInternal(TRANSFORCOLORMODE, value);
    }
}

