package mnfProductionOrderApp.model.entities;

import adf.utils.ebiz.EbizParams;

import javax.el.ELContext;
import javax.el.ValueExpression;

import mnfProductionOrderApp.model.services.MNFProductionorderAppAMImpl;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 23 12:17:58 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnfPdoSRCEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        SrcType,
        SrcDocId,
        ItmId,
        ItmQty,
        DlvDt,
        SoPriority,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EoId,
        MnfPDOEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int SRCTYPE = AttributesEnum.SrcType.index();
    public static final int SRCDOCID = AttributesEnum.SrcDocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int SOPRIORITY = AttributesEnum.SoPriority.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int MNFPDOEO = AttributesEnum.MnfPDOEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnfPdoSRCEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mnfProductionOrderApp.model.entities.MnfPdoSRCEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for SrcType, using the alias name SrcType.
     * @return the value of SrcType
     */
    public Integer getSrcType() {
        return (Integer) getAttributeInternal(SRCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcType.
     * @param value value to set the SrcType
     */
    public void setSrcType(Integer value) {
        setAttributeInternal(SRCTYPE, value);
    }

    /**
     * Gets the attribute value for SrcDocId, using the alias name SrcDocId.
     * @return the value of SrcDocId
     */
    public String getSrcDocId() {
        return (String) getAttributeInternal(SRCDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocId.
     * @param value value to set the SrcDocId
     */
    public void setSrcDocId(String value) {
        setAttributeInternal(SRCDOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        System.out.println("Setter of an item from EOIML :" + value);
        
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmQty, using the alias name ItmQty.
     * @return the value of ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmQty.
     * @param value value to set the ItmQty
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for DlvDt, using the alias name DlvDt.
     * @return the value of DlvDt
     */
    public Timestamp getDlvDt() {
        return (Timestamp) getAttributeInternal(DLVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvDt.
     * @param value value to set the DlvDt
     */
    public void setDlvDt(Timestamp value) {
        setAttributeInternal(DLVDT, value);
    }

    /**
     * Gets the attribute value for SoPriority, using the alias name SoPriority.
     * @return the value of SoPriority
     */
    public Integer getSoPriority() {
        return (Integer) getAttributeInternal(SOPRIORITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoPriority.
     * @param value value to set the SoPriority
     */
    public void setSoPriority(Integer value) {
        setAttributeInternal(SOPRIORITY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * @return the associated entity MnfPDOEOImpl.
     */
    public MnfPDOEOImpl getMnfPDOEO() {
        return (MnfPDOEOImpl) getAttributeInternal(MNFPDOEO);
    }

    /**
     * Sets <code>value</code> as the associated entity MnfPDOEOImpl.
     */
    public void setMnfPDOEO(MnfPDOEOImpl value) {
        setAttributeInternal(MNFPDOEO, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param srcDocId key constituent
     * @param itmId key constituent
     * @param dlvDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String docId, String srcDocId,
                                       String itmId, Timestamp dlvDt) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, docId, srcDocId, itmId, dlvDt });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        //setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        if(EbizParams.GLBL_APP_USR() != null)
             {
                 setUsrIdCreate(EbizParams.GLBL_APP_USR());
             }
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setItmId(getMnfPDOEO().getOutptItmId());
        super.create(attributeList);
        System.out.println("SRC EO IML CREATED : "+ getItmId());
    }
    
    
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {

           // setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
           if(EbizParams.GLBL_APP_USR() != null)
                {
                    setUsrIdMod(EbizParams.GLBL_APP_USR());
                }
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
       
        super.doDML(operation, e);
    }
    

    /**
     * 
     * Method to resolve page flow scope parameter.
     * 
     * */

    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }

}

