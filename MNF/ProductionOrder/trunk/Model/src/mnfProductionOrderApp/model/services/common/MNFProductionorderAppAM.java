package mnfProductionOrderApp.model.services.common;

import java.util.Date;

import java.util.List;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 16 11:14:28 IST 2014
// ---------------------------------------------------------------------
public interface MNFProductionorderAppAM extends ApplicationModule {
    void setFilterData();


    oracle.jbo.domain.Number getOutPutQty();

    void setCreateTFParam(Integer slocId, String cldId, String HoOrdId, String pdoId, Integer usrId, String OrgId,
                          String docId);


    void getSearchResults();

    void updateWfStatus();

    String callWfFunctions();

    Integer getDocUsrFromWF();

    String getUserName();

    String getWfId();

    void resetButtonAction();


    void createPdoSRC();

    void getpreviousProductionOrderInf(String newDocPdoId, String oldDocPdoId);

    String createAttchmntRow(String contentTyp, String fileNm, String extn);

    void createPdoSRCManual();


    oracle.jbo.domain.Number generateJobCard();

    void setpdoId();

    void resetValForJCRC();

    String chkDuplicate(String tab, String val);


    int chkOperationTargetDate();

    void revisedPdoDoc();

    String ChkJCExists();

    void chkGenJcID();

    String operationActiveCheck(String cld_id, String ho_org_id, Integer slc_id);

    void setlovSupplyVOParam();

    void setCreateTFParamAfterCreate(Integer slocId, String cldId, String HoOrdId, String pdoId, Integer usrId,
                                     String OrgId, String docId);

    void getSearchSalesOrder(Integer custId, String salesOrder, String srcTyp);

    oracle.jbo.domain.Number getPendingItmForJC(String cld_id, Integer slc_id, String org_id,
                                                oracle.jbo.domain.Number src_doc_typ, String src_doc_id,
                                                String op_doc_id, oracle.jbo.domain.Number op_sr_no, String output_itm,
                                                Integer jc_rc);

    void createPDOOperation(String Bomdocid, String PdoDocId, oracle.jbo.domain.Number PdoOutputQty, String routeid);

    boolean duplicateOverheadParam(String paramName);

    boolean duplicateParam(String paramName);

    void attachOverhead(String operation);

    void attachCosting(String operation);

    void deleteAttachFileRow(String path);

    boolean duplicateQcParam(String paramName, String opNme);

    oracle.jbo.domain.Number chkgetYearFyId();

    String getUserNameforDoc(Integer u_Id, Integer slc_id);

    void salesTacker();

    String pdoRevChk();

    Boolean chkCcApplicableOrNot();

    void declareGlblValuesForCC();

    void generateCostCenterHeaderWise();

    void sendDataFromTempCcToPdoOpItm();

    

    boolean duplicateSalesForecast(String paramName, Timestamp DlvDt);

    void setCreateBeforeTFParam();

    void updateSoDlvQty();

    void updateShortCloseStatus();

    String shortcloseChk();

    String ItemSerializedFlag(String outItmId);
}

