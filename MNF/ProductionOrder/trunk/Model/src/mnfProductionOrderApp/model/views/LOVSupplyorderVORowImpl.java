package mnfProductionOrderApp.model.views;

import java.math.BigDecimal;

import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 30 12:21:05 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVSupplyorderVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SoId,
        ItmId,
        ItmDesc,
        ItmQty,
        PendingQty,
        DlvDt,
        DocId,
        EoNm,
        EoId,
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        SrcType,
        SoDt,
        TransEONm,
        TransEOID,
        TransSO,
        TransSelectedValue,
        TransSrcTyp,
        LOVSOCustVO,
        LOVSalesOrderVO,
        LOVSoSrcBasisVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SOID = AttributesEnum.SoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int PENDINGQTY = AttributesEnum.PendingQty.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SRCTYPE = AttributesEnum.SrcType.index();
    public static final int SODT = AttributesEnum.SoDt.index();
    public static final int TRANSEONM = AttributesEnum.TransEONm.index();
    public static final int TRANSEOID = AttributesEnum.TransEOID.index();
    public static final int TRANSSO = AttributesEnum.TransSO.index();
    public static final int TRANSSELECTEDVALUE = AttributesEnum.TransSelectedValue.index();
    public static final int TRANSSRCTYP = AttributesEnum.TransSrcTyp.index();
    public static final int LOVSOCUSTVO = AttributesEnum.LOVSOCustVO.index();
    public static final int LOVSALESORDERVO = AttributesEnum.LOVSalesOrderVO.index();
    public static final int LOVSOSRCBASISVO = AttributesEnum.LOVSoSrcBasisVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVSupplyorderVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SoId.
     * @return the SoId
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmQty.
     * @return the ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute PendingQty.
     * @return the PendingQty
     */
    public Number getPendingQty() {
        return (Number) getAttributeInternal(PENDINGQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvDt.
     * @return the DlvDt
     */
    public Timestamp getDlvDt() {
        return (Timestamp) getAttributeInternal(DLVDT);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute SrcType.
     * @return the SrcType
     */
    public Integer getSrcType() {
        return (Integer) getAttributeInternal(SRCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SrcType.
     * @param value value to set the  SrcType
     */
    public void setSrcType(Integer value) {
        setAttributeInternal(SRCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoDt.
     * @return the SoDt
     */
    public Timestamp getSoDt() {
        return (Timestamp) getAttributeInternal(SODT);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEONm.
     * @return the TransEONm
     */
    public String getTransEONm() {
        return (String) getAttributeInternal(TRANSEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEONm.
     * @param value value to set the  TransEONm
     */
    public void setTransEONm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEOID.
     * @return the TransEOID
     */
    public String getTransEOID() {
        return (String) getAttributeInternal(TRANSEOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEOID.
     * @param value value to set the  TransEOID
     */
    public void setTransEOID(String value) {
        setAttributeInternal(TRANSEOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSO.
     * @return the TransSO
     */
    public String getTransSO() {
        return (String) getAttributeInternal(TRANSSO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSO.
     * @param value value to set the  TransSO
     */
    public void setTransSO(String value) {
        setAttributeInternal(TRANSSO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSelectedValue.
     * @return the TransSelectedValue
     */
    public String getTransSelectedValue() {
        return (String) getAttributeInternal(TRANSSELECTEDVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSelectedValue.
     * @param value value to set the  TransSelectedValue
     */
    public void setTransSelectedValue(String value) {
        setAttributeInternal(TRANSSELECTEDVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrcTyp.
     * @return the TransSrcTyp
     */
    public Integer getTransSrcTyp() {
        return 95;
        //return (Integer) getAttributeInternal(TRANSSRCTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrcTyp.
     * @param value value to set the  TransSrcTyp
     */
    public void setTransSrcTyp(Integer value) {
        setAttributeInternal(TRANSSRCTYP, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSOCustVO.
     */
    public RowSet getLOVSOCustVO() {
        return (RowSet) getAttributeInternal(LOVSOCUSTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSalesOrderVO.
     */
    public RowSet getLOVSalesOrderVO() {
        return (RowSet) getAttributeInternal(LOVSALESORDERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSoSrcBasisVO.
     */
    public RowSet getLOVSoSrcBasisVO() {
        return (RowSet) getAttributeInternal(LOVSOSRCBASISVO);
    }
}

