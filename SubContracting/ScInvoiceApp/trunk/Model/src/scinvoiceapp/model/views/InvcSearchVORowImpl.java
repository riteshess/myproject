package scinvoiceapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 19 17:46:04 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class InvcSearchVORowImpl extends ViewRowImpl {


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        DocId,
        DocDt,
        FyId,
        InvcType,
        InvcNo,
        InvcDt,
        EoIdSrc,
        CurrIdSp,
        AuthStat,
        UsrIdCreate,
        CoaId,
        TotAmtBs,
        TotAmtSp,
        OrgIdSrc,
        WhIdSrc,
        InvMode,
        EoNm,
        TransHoOrgId,
        UserName,
        LovCoaVO1,
        LovFyIdVO1,
        LovDocTypeVO1,
        LovWarehouseVO1,
        LovUserVO1,
        LovDocFlowVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int INVCTYPE = AttributesEnum.InvcType.index();
    public static final int INVCNO = AttributesEnum.InvcNo.index();
    public static final int INVCDT = AttributesEnum.InvcDt.index();
    public static final int EOIDSRC = AttributesEnum.EoIdSrc.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int ORGIDSRC = AttributesEnum.OrgIdSrc.index();
    public static final int WHIDSRC = AttributesEnum.WhIdSrc.index();
    public static final int INVMODE = AttributesEnum.InvMode.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int LOVCOAVO1 = AttributesEnum.LovCoaVO1.index();
    public static final int LOVFYIDVO1 = AttributesEnum.LovFyIdVO1.index();
    public static final int LOVDOCTYPEVO1 = AttributesEnum.LovDocTypeVO1.index();
    public static final int LOVWAREHOUSEVO1 = AttributesEnum.LovWarehouseVO1.index();
    public static final int LOVUSERVO1 = AttributesEnum.LovUserVO1.index();
    public static final int LOVDOCFLOWVO1 = AttributesEnum.LovDocFlowVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public InvcSearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute InvcType.
     * @return the InvcType
     */
    public Integer getInvcType() {
        return (Integer) getAttributeInternal(INVCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute InvcNo.
     * @return the InvcNo
     */
    public String getInvcNo() {
        return (String) getAttributeInternal(INVCNO);
    }

    /**
     * Gets the attribute value for the calculated attribute InvcDt.
     * @return the InvcDt
     */
    public Timestamp getInvcDt() {
        return (Timestamp) getAttributeInternal(INVCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdSrc.
     * @return the EoIdSrc
     */
    public Integer getEoIdSrc() {
        return (Integer) getAttributeInternal(EOIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrIdSp.
     * @return the CurrIdSp
     */
    public Long getCurrIdSp() {
        return (Long) getAttributeInternal(CURRIDSP);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthStat.
     * @return the AuthStat
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtBs.
     * @return the TotAmtBs
     */
    public BigDecimal getTotAmtBs() {
        return (BigDecimal) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtSp.
     * @return the TotAmtSp
     */
    public BigDecimal getTotAmtSp() {
        return (BigDecimal) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdSrc.
     * @return the OrgIdSrc
     */
    public String getOrgIdSrc() {
        return (String) getAttributeInternal(ORGIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdSrc.
     * @return the WhIdSrc
     */
    public String getWhIdSrc() {
        return (String) getAttributeInternal(WHIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute InvMode.
     * @return the InvMode
     */
    public Integer getInvMode() {
        return (Integer) getAttributeInternal(INVMODE);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return EbizParams.GLBL_HO_ORG_ID();
    }

    /**
     * Gets the attribute value for the calculated attribute UserName.
     * @return the UserName
     */
    public String getUserName() {
        String userName=(String) getAttributeInternal(USERNAME);
        if(this.getUsrIdCreate()!=null){
           
            Row[] rw=this.getLovUserVO1().getFilteredRows("UsrId", this.getUsrIdCreate());
          
            if(rw.length>0){
                userName=rw[0].getAttribute("UsrName").toString();
            }
        }
      //  System.out.println("User NAmei is "+userName);
        return userName;
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaVO1.
     */
    public RowSet getLovCoaVO1() {
        return (RowSet) getAttributeInternal(LOVCOAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovFyIdVO1.
     */
    public RowSet getLovFyIdVO1() {
        return (RowSet) getAttributeInternal(LOVFYIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDocTypeVO1.
     */
    public RowSet getLovDocTypeVO1() {
        return (RowSet) getAttributeInternal(LOVDOCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWarehouseVO1.
     */
    public RowSet getLovWarehouseVO1() {
        return (RowSet) getAttributeInternal(LOVWAREHOUSEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovUserVO1.
     */
    public RowSet getLovUserVO1() {
        return (RowSet) getAttributeInternal(LOVUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDocFlowVO1.
     */
    public RowSet getLovDocFlowVO1() {
        return (RowSet) getAttributeInternal(LOVDOCFLOWVO1);
    }
}

