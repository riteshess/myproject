package sclp.services;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import sclp.services.common.LandingPageAppModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 03 14:14:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LandingPageAppModuleImpl extends ApplicationModuleImpl implements LandingPageAppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public LandingPageAppModuleImpl() {
    }

    /**
     * Method to set the parameter as first activity in task flow
     * **/
    public void setGlobalParameters(String cld_id, Integer sloc_id, String ho_org_id, String org_id, Integer usr_id) {
        System.out.println("cld_id " + cld_id + " sloc_id " + sloc_id + " ho_org_id " + ho_org_id + " org_id " +
                           org_id + " usr_id " + usr_id);

        setUserDocParam(ho_org_id, org_id, usr_id);
        setTopNCustomerServiceProvider(ho_org_id, org_id, 827, cld_id, sloc_id, 5);
        setTopNProducts(ho_org_id, org_id, 827, cld_id, sloc_id, 5);
        setTopNOperation(ho_org_id, org_id, 827, cld_id, sloc_id);
    }

    /**
     * Method to filter Dashboard Graph Queries TOP CUSTOMERS AND SERVICE PROVIDERS
     * */
    public void setTopNCustomerServiceProvider(String ho_org_id, String org_id, Integer sc_type, String cld_id,
                                               Integer sloc_id, Integer countVal) {
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_cld_id", cld_id);
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_ho_org_id", ho_org_id);
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_org_id", org_id);
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_sc_type",
                                                                     sc_type == 0 ?
                                                                     (Integer) this.getTransientDualVo1().getCurrentRow().getAttribute("TransScType") :
                                                                     sc_type);
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_sloc_id", sloc_id);
        getTopNCustomerServiceProviderVo1().setNamedWhereClauseParam("p_count", countVal);
        getTopNCustomerServiceProviderVo1().executeQuery();
    }

    /**
     * TOP PRODUCTS FILTER QUERY
     * */
    public void setTopNProducts(String ho_org_id, String org_id, Integer p_inv_type, String cld_id, Integer sloc_id,
                                Integer countVal) {
        getTopNProductsVo1().setNamedWhereClauseParam("p_cld_id", cld_id);
        getTopNProductsVo1().setNamedWhereClauseParam("p_ho_org_id", ho_org_id);
        getTopNProductsVo1().setNamedWhereClauseParam("p_org_id", org_id);
        getTopNProductsVo1().setNamedWhereClauseParam("p_inv_type",
                                                      p_inv_type == 0 ?
                                                      (Integer) this.getTransientDualVo1().getCurrentRow().getAttribute("TransScType") :
                                                      p_inv_type);
        getTopNProductsVo1().setNamedWhereClauseParam("p_sloc_id", sloc_id);
        getTopNProductsVo1().setNamedWhereClauseParam("p_count", countVal);
        getTopNProductsVo1().executeQuery();
    }

    /**
     * Filter Operation Query
     * */
    public void setTopNOperation(String ho_org_id, String org_id, Integer p_inv_type, String cld_id, Integer sloc_id) {
        System.out.println("-------------------- " + p_inv_type);
        getTopNOperationVo1().setNamedWhereClauseParam("p_cld_id", cld_id);
        getTopNOperationVo1().setNamedWhereClauseParam("p_ho_org_id", ho_org_id);
        getTopNOperationVo1().setNamedWhereClauseParam("p_org_id", org_id);
        getTopNOperationVo1().setNamedWhereClauseParam("p_inv_type", p_inv_type);
        getTopNOperationVo1().setNamedWhereClauseParam("p_sloc_id", sloc_id);
        getTopNOperationVo1().executeQuery();
    }

    /**
     * Method to set parameter to get the count for document status
     * **/
    public void setUserDocParam(String ho_org_id, String org_id, Integer usr_id) {

        getPendingAtOthersVO1().setNamedWhereClauseParam("BindHoOrgId", ho_org_id);
        getPendingAtOthersVO1().setNamedWhereClauseParam("BindOrgId", org_id);
        getPendingAtOthersVO1().setNamedWhereClauseParam("BindUsrId", usr_id);
        getPendingAtOthersVO1().executeQuery();

        getPendingForMyApprovalVO1().setNamedWhereClauseParam("BindHoOrgId", ho_org_id);
        getPendingForMyApprovalVO1().setNamedWhereClauseParam("BindOrgId", org_id);
        getPendingForMyApprovalVO1().setNamedWhereClauseParam("BindUsrId", usr_id);
        getPendingForMyApprovalVO1().executeQuery();

        getUnpostedDocVO1().setNamedWhereClauseParam("BindHoOrgId", ho_org_id);
        getUnpostedDocVO1().setNamedWhereClauseParam("BindOrgId", org_id);
        getUnpostedDocVO1().setNamedWhereClauseParam("BindUsrId", usr_id);
        getUnpostedDocVO1().executeQuery();

    }


    /**
     * Container's getter for MmTkrUsrVO1.
     * @return MmTkrUsrVO1
     */
    public ViewObjectImpl getMmTkrUsrVO1() {
        return (ViewObjectImpl) findViewObject("MmTkrUsrVO1");
    }

    /**
     * Container's getter for PendingAtOthersVO1.
     * @return PendingAtOthersVO1
     */
    public ViewObjectImpl getPendingAtOthersVO1() {
        return (ViewObjectImpl) findViewObject("PendingAtOthersVO1");
    }

    /**
     * Container's getter for PendingForMyApprovalVO1.
     * @return PendingForMyApprovalVO1
     */
    public ViewObjectImpl getPendingForMyApprovalVO1() {
        return (ViewObjectImpl) findViewObject("PendingForMyApprovalVO1");
    }

    /**
     * Container's getter for UnpostedDocVO1.
     * @return UnpostedDocVO1
     */
    public ViewObjectImpl getUnpostedDocVO1() {
        return (ViewObjectImpl) findViewObject("UnpostedDocVO1");
    }

    /**
     * Container's getter for TransientDualVo1.
     * @return TransientDualVo1
     */
    public ViewObjectImpl getTransientDualVo1() {
        return (ViewObjectImpl) findViewObject("TransientDualVo1");
    }

    /**
     * Container's getter for TopNCustomerServiceProviderVo1.
     * @return TopNCustomerServiceProviderVo1
     */
    public ViewObjectImpl getTopNCustomerServiceProviderVo1() {
        return (ViewObjectImpl) findViewObject("TopNCustomerServiceProviderVo1");
    }

    /**
     * Container's getter for TopNProductsVo1.
     * @return TopNProductsVo1
     */
    public ViewObjectImpl getTopNProductsVo1() {
        return (ViewObjectImpl) findViewObject("TopNProductsVo1");
    }

    /**
     * Container's getter for TopNOperationVo1.
     * @return TopNOperationVo1
     */
    public ViewObjectImpl getTopNOperationVo1() {
        return (ViewObjectImpl) findViewObject("TopNOperationVo1");
    }
}

