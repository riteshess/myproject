package scops.model.entities;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 12 11:28:12 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ScEoItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        EoId,
        SrcDocId,
        SrcDocTxnId,
        OpId,
        ItmId,
        ItmUom,
        ItmPrice,
        DiscType,
        DiscVal,
        TlrncType,
        TlrncVal,
        LeadTime,
        Actv,
        InactvResn,
        InactvDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ItmUomBs,
        ItmPriceUomBs,
        UomConvFctr,
        CurrIdSp,
        EoPartNo,
        EoType,
        DfltEoFlg,
        CurrConvFctr,
        CurrIdBs;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int SRCDOCID = AttributesEnum.SrcDocId.index();
    public static final int SRCDOCTXNID = AttributesEnum.SrcDocTxnId.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int TLRNCVAL = AttributesEnum.TlrncVal.index();
    public static final int LEADTIME = AttributesEnum.LeadTime.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ITMPRICEUOMBS = AttributesEnum.ItmPriceUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int EOPARTNO = AttributesEnum.EoPartNo.index();
    public static final int EOTYPE = AttributesEnum.EoType.index();
    public static final int DFLTEOFLG = AttributesEnum.DfltEoFlg.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDBS = AttributesEnum.CurrIdBs.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ScEoItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("scops.model.entities.ScEoItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for SrcDocId, using the alias name SrcDocId.
     * @return the value of SrcDocId
     */
    public Integer getSrcDocId() {
        return (Integer) getAttributeInternal(SRCDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocId.
     * @param value value to set the SrcDocId
     */
    public void setSrcDocId(Integer value) {
        setAttributeInternal(SRCDOCID, value);
    }

    /**
     * Gets the attribute value for SrcDocTxnId, using the alias name SrcDocTxnId.
     * @return the value of SrcDocTxnId
     */
    public String getSrcDocTxnId() {
        return (String) getAttributeInternal(SRCDOCTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocTxnId.
     * @param value value to set the SrcDocTxnId
     */
    public void setSrcDocTxnId(String value) {
        setAttributeInternal(SRCDOCTXNID, value);
    }

    /**
     * Gets the attribute value for OpId, using the alias name OpId.
     * @return the value of OpId
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OpId.
     * @param value value to set the OpId
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for TlrncType, using the alias name TlrncType.
     * @return the value of TlrncType
     */
    public String getTlrncType() {
        return (String) getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncType.
     * @param value value to set the TlrncType
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for TlrncVal, using the alias name TlrncVal.
     * @return the value of TlrncVal
     */
    public Number getTlrncVal() {
        return (Number) getAttributeInternal(TLRNCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncVal.
     * @param value value to set the TlrncVal
     */
    public void setTlrncVal(Number value) {
        setAttributeInternal(TLRNCVAL, value);
    }

    /**
     * Gets the attribute value for LeadTime, using the alias name LeadTime.
     * @return the value of LeadTime
     */
    public Number getLeadTime() {
        return (Number) getAttributeInternal(LEADTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeadTime.
     * @param value value to set the LeadTime
     */
    public void setLeadTime(Number value) {
        setAttributeInternal(LEADTIME, value);
    }


    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ItmPriceUomBs, using the alias name ItmPriceUomBs.
     * @return the value of ItmPriceUomBs
     */
    public Number getItmPriceUomBs() {
        return (Number) getAttributeInternal(ITMPRICEUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceUomBs.
     * @param value value to set the ItmPriceUomBs
     */
    public void setItmPriceUomBs(Number value) {
        setAttributeInternal(ITMPRICEUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for EoPartNo, using the alias name EoPartNo.
     * @return the value of EoPartNo
     */
    public String getEoPartNo() {
        return (String) getAttributeInternal(EOPARTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoPartNo.
     * @param value value to set the EoPartNo
     */
    public void setEoPartNo(String value) {
        setAttributeInternal(EOPARTNO, value);
    }

    /**
     * Gets the attribute value for EoType, using the alias name EoType.
     * @return the value of EoType
     */
    public Integer getEoType() {
        return (Integer) getAttributeInternal(EOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoType.
     * @param value value to set the EoType
     */
    public void setEoType(Integer value) {
        setAttributeInternal(EOTYPE, value);
    }

    /**
     * Gets the attribute value for DfltEoFlg, using the alias name DfltEoFlg.
     * @return the value of DfltEoFlg
     */
    public String getDfltEoFlg() {
        return (String) getAttributeInternal(DFLTEOFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DfltEoFlg.
     * @param value value to set the DfltEoFlg
     */
    public void setDfltEoFlg(String value) {
        setAttributeInternal(DFLTEOFLG, value);
    }


    /**
     * Gets the attribute value for CurrConvFctr, using the alias name CurrConvFctr.
     * @return the value of CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvFctr.
     * @param value value to set the CurrConvFctr
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }


    /**
     * Gets the attribute value for CurrIdBs, using the alias name CurrIdBs.
     * @return the value of CurrIdBs
     */
    public Integer getCurrIdBs() {
        return (Integer) getAttributeInternal(CURRIDBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdBs.
     * @param value value to set the CurrIdBs
     */
    public void setCurrIdBs(Integer value) {
        setAttributeInternal(CURRIDBS, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param eoId key constituent
     * @param opId key constituent
     * @param itmId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, Integer eoId,
                                       String opId, String itmId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, eoId, opId, itmId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setActv("Y");
        this.setDfltEoFlg("Y");
        this.setUsrIdCreate(EbizParams.GLBL_APP_USR());
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        this.setTlrncType("A");
        this.setTlrncVal(new Number(0));
        this.setLeadTime(new Number(0));
        this.setDiscType("A");
        this.setDiscVal(new Number(0));
        this.setItmPrice(new Number(0));
        this.setItmId("-");
        Integer currIdBs = this.getCurrIdBs(EbizParams.GLBL_APP_USR_ORG()).intValue();
        this.setCurrIdBs(currIdBs);
        this.setCurrIdSp(currIdBs);
        this.setCurrConvFctr(new Number(1));
        super.create(attributeList);
    }

    /** ---------- To get value of currency Base -------------**/
    public BigDecimal getCurrIdBs(String OrgId) {
        return (BigDecimal) callStoredFunction(Types.NUMERIC, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                               OrgId });
    }

    /********************    STORED Function    *************************************/

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(EbizParams.GLBL_APP_USR());
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

