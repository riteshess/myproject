package scop.model.service.common;

import oracle.jbo.ApplicationModule;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 15 12:34:41 IST 2015
// ---------------------------------------------------------------------
public interface SubContractOrderAppModule extends ApplicationModule {
    void mainAppFilter(String CldId, String HoOrgId, String OrgId, Integer SlocId);

    void resetSco_Func();

    void searchSco_Func();

    void GetHexDocNo();

    void viewOtherChargesVw();

    void addOtherCharges();

    void AddTermAndCondition(Integer TncId);

    void selectAllCheckBox(boolean val);

    void setWhIdInDlvSchVw(StringBuffer WhId);

    String callWfFunctions();

    Integer getDocUsrFromWF();

    String getUserName(Integer u_Id, Integer slc_id);

    String getWfId();

    void setDocTypeValue();

    void updateWfStat(String wf_mode);

    void executeAllViewsForInwardOutward();

    void CreateInsertInScoDlvSchdl();

    void executeDlvSchdlView();

    Integer validateDelSchdlParams();

    Integer validateHeaderMandatoryFields();


    void ItemWiseTaxOrder(Integer ruleId);


    void AddOperationFunc();

    Integer validateBomOperationFields();

    Integer validateOperationItems();

    Integer ValidateItemDuplicate(String ItmNm);

    void GenDefaultDeliveryScheduleFunction();

    void DeleteInwardOutwardItem(String voName);

    Integer beforeApplyTaxCheckItem();


    void executeHeaderCalView();

    void setBalanceQtyToSchdlQty();

    Integer ValidateCheckOnSaveAndForward();

    Integer ValidateDefDeliverySchdl();

    Integer ValidateTaxBeforeSaveAndForward();

    void ApplyOrderWiseTax(Integer ruleId);

    void ResetOrderWiseTax();

    void ResetItemWiseTax();

    void MakeCurrentRowInMmScoOpItemTable(String ItemId);

    oracle.jbo.domain.Number orderCalculation();

    void filterLOVTncVo();


    Integer ValidatePaymentSchdule();

    void InsertPaymentSchedule();

    void SetPendAmtToPaymentAmt();

    Integer ValidateDefaultPaymentSchdl();

    void GenDefaultPaymentScheduleFunction();

    Boolean chkCcApplicableOrNot();

    void generateCostCenterHeaderWise();

    void declareGlblValuesForCC();

    void deleteCostCenterItem();

    Boolean isCostCenterApplicable();

    void sendDateFromTempCcToMmScoCc();

    void updateCostCenterAmt();

    void updateCostCenterOnSave();

    Boolean ScoAmendmentMethod();

    void filterMmSco_Func(String cld_id, Integer sloc_id, String ho_org_id, String org_id);

    String allowEditInServiceItemPrice();

    String allowEditInTaxableAmount();
}

