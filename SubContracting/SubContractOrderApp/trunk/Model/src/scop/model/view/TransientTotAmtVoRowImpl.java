package scop.model.view;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;

import scop.model.service.SubContractOrderAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 15 10:37:27 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransientTotAmtVoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        TransAmtBeforeTax,
        TransOtherChargeAmt,
        TransTotCalAmount,
        TransTotTaxAmount,
        TransBomId,
        TransBomDocId,
        TransOpId,
        TransOpDocId,
        TransOpSrNo,
        TransOpRemarks,
        TransCldId,
        TransHoOrgId,
        TransOrgId,
        TransSlocId,
        TransLovType,
        TransCurrNotation,
        LOVBomVo1,
        LOVOpVo1,
        LOVBomBasedOpVo1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSAMTBEFORETAX = AttributesEnum.TransAmtBeforeTax.index();
    public static final int TRANSOTHERCHARGEAMT = AttributesEnum.TransOtherChargeAmt.index();
    public static final int TRANSTOTCALAMOUNT = AttributesEnum.TransTotCalAmount.index();
    public static final int TRANSTOTTAXAMOUNT = AttributesEnum.TransTotTaxAmount.index();
    public static final int TRANSBOMID = AttributesEnum.TransBomId.index();
    public static final int TRANSBOMDOCID = AttributesEnum.TransBomDocId.index();
    public static final int TRANSOPID = AttributesEnum.TransOpId.index();
    public static final int TRANSOPDOCID = AttributesEnum.TransOpDocId.index();
    public static final int TRANSOPSRNO = AttributesEnum.TransOpSrNo.index();
    public static final int TRANSOPREMARKS = AttributesEnum.TransOpRemarks.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSLOVTYPE = AttributesEnum.TransLovType.index();
    public static final int TRANSCURRNOTATION = AttributesEnum.TransCurrNotation.index();
    public static final int LOVBOMVO1 = AttributesEnum.LOVBomVo1.index();
    public static final int LOVOPVO1 = AttributesEnum.LOVOpVo1.index();
    public static final int LOVBOMBASEDOPVO1 = AttributesEnum.LOVBomBasedOpVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransientTotAmtVoRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmtBeforeTax.
     * @return the TransAmtBeforeTax
     */
    public Number getTransAmtBeforeTax() {
        if (getAm().TotAmountBeforeTax() != null) {
            return (Number) getAm().TotAmountBeforeTax();
        }
        return (Number) getAttributeInternal(TRANSAMTBEFORETAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtBeforeTax.
     * @param value value to set the  TransAmtBeforeTax
     */
    public void setTransAmtBeforeTax(Number value) {
        setAttributeInternal(TRANSAMTBEFORETAX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOtherChargeAmt.
     * @return the TransOtherChargeAmt
     */
    public Number getTransOtherChargeAmt() {
        if (getAm().TotOtherChargesAmt() != null) {
            return (Number) getAm().TotOtherChargesAmt();
        }
        return (Number) getAttributeInternal(TRANSOTHERCHARGEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOtherChargeAmt.
     * @param value value to set the  TransOtherChargeAmt
     */
    public void setTransOtherChargeAmt(Number value) {
        setAttributeInternal(TRANSOTHERCHARGEAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotCalAmount.
     * @return the TransTotCalAmount
     */
    public Number getTransTotCalAmount() {
        if (this.getTransAmtBeforeTax() != null && this.getTransOtherChargeAmt() != null &&
            this.getTransTotTaxAmount() != null) {
            Number TotCalAmount = this.getTransAmtBeforeTax().add(this.getTransOtherChargeAmt());
            Number afterTax = TotCalAmount.add(this.getTransTotTaxAmount());
            return afterTax;
        }
        return (Number) getAttributeInternal(TRANSTOTCALAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotCalAmount.
     * @param value value to set the  TransTotCalAmount
     */
    public void setTransTotCalAmount(Number value) {
        setAttributeInternal(TRANSTOTCALAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotTaxAmount.
     * @return the TransTotTaxAmount
     */
    public Number getTransTotTaxAmount() {
        if (getAm().TotTaxAmount("TransientTotAmtVo") != null) {
            return (Number) getAm().TotTaxAmount("TransientTotAmtVo");
        }
        return (Number) getAttributeInternal(TRANSTOTTAXAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotTaxAmount.
     * @param value value to set the  TransTotTaxAmount
     */
    public void setTransTotTaxAmount(Number value) {
        setAttributeInternal(TRANSTOTTAXAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBomId.
     * @return the TransBomId
     */
    public String getTransBomId() {
        return (String) getAttributeInternal(TRANSBOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBomId.
     * @param value value to set the  TransBomId
     */
    public void setTransBomId(String value) {
        setAttributeInternal(TRANSBOMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBomDocId.
     * @return the TransBomDocId
     */
    public String getTransBomDocId() {
        return (String) getAttributeInternal(TRANSBOMDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBomDocId.
     * @param value value to set the  TransBomDocId
     */
    public void setTransBomDocId(String value) {
        setAttributeInternal(TRANSBOMDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpId.
     * @return the TransOpId
     */
    public String getTransOpId() {
        return (String) getAttributeInternal(TRANSOPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpId.
     * @param value value to set the  TransOpId
     */
    public void setTransOpId(String value) {
        setAttributeInternal(TRANSOPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpDocId.
     * @return the TransOpDocId
     */
    public String getTransOpDocId() {
        return (String) getAttributeInternal(TRANSOPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpDocId.
     * @param value value to set the  TransOpDocId
     */
    public void setTransOpDocId(String value) {
        setAttributeInternal(TRANSOPDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpSrNo.
     * @return the TransOpSrNo
     */
    public Integer getTransOpSrNo() {
        return (Integer) getAttributeInternal(TRANSOPSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpSrNo.
     * @param value value to set the  TransOpSrNo
     */
    public void setTransOpSrNo(Integer value) {
        setAttributeInternal(TRANSOPSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpRemarks.
     * @return the TransOpRemarks
     */
    public String getTransOpRemarks() {
        return (String) getAttributeInternal(TRANSOPREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpRemarks.
     * @param value value to set the  TransOpRemarks
     */
    public void setTransOpRemarks(String value) {
        setAttributeInternal(TRANSOPREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return (String) EbizParams.GLBL_APP_CLD_ID();
        //return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return (String) EbizParams.GLBL_HO_ORG_ID();
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return (String) EbizParams.GLBL_APP_USR_ORG();
        //return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return (Integer) EbizParams.GLBL_APP_SERV_LOC();
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLovType.
     * @return the TransLovType
     */
    public String getTransLovType() {
        return (String) getAttributeInternal(TRANSLOVTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLovType.
     * @param value value to set the  TransLovType
     */
    public void setTransLovType(String value) {
        setAttributeInternal(TRANSLOVTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrNotation.
     * @return the TransCurrNotation
     */
    public String getTransCurrNotation() {
        System.out.println("Value of Currency Notation :::::::::: " +
                           getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrIdSp"));
        getAm().getLOVCurrNotationVo1().setNamedWhereClauseParam("BindCurrId",
                                                                 getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrIdSp") ==
                                                                 null ? -1 :
                                                                 getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrIdSp"));
        getAm().getLOVCurrNotationVo1().executeQuery();
        Row[] aR = getAm().getLOVCurrNotationVo1().getAllRowsInRange();
        if (aR.length > 0) {
            System.out.println("Value of Currency Notation :::::: " + (String) aR[0].getAttribute("CurrNotation"));
            return (String) aR[0].getAttribute("CurrNotation");
        } else {
            return (String) getAttributeInternal(TRANSCURRNOTATION);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrNotation.
     * @param value value to set the  TransCurrNotation
     */
    public void setTransCurrNotation(String value) {
        setAttributeInternal(TRANSCURRNOTATION, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBomVo1.
     */
    public RowSet getLOVBomVo1() {
        return (RowSet) getAttributeInternal(LOVBOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOpVo1.
     */
    public RowSet getLOVOpVo1() {
        return (RowSet) getAttributeInternal(LOVOPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBomBasedOpVo1.
     */
    public RowSet getLOVBomBasedOpVo1() {
        return (RowSet) getAttributeInternal(LOVBOMBASEDOPVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SubContractOrderAppModuleImpl getAm() {
        return (SubContractOrderAppModuleImpl) getApplicationModule();
    }
}

