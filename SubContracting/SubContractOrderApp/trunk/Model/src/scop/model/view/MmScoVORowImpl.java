package scop.model.view;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParamsAPPUtils;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;

import scop.model.entity.MmScoImpl;
import scop.model.service.SubContractOrderAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 19 16:44:02 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScoVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSCO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        DocDt,
        DocId,
        FyId,
        HoOrgId,
        OrgId,
        ScoBasis,
        ScoId,
        ScoMode,
        ScoRmrk,
        ScoStat,
        ScoType,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EoId,
        ExtDocDt,
        ExtDocNo,
        CurrConvFctr,
        CurrIdBs,
        CurrIdSp,
        TaxRuleFlg,
        TlrncDays,
        CoaId,
        ShipAdds,
        ScoBomFlg,
        TransEoNm,
        TransEoAddr,
        TransCurrNm,
        TransEoType,
        ScoAmdNo,
        ScoAmdDt,
        MmScoSrcVO,
        MmScoOpVO,
        MmScoOcVO,
        MmScoDlvSchdlVO,
        DlvSchdlViewVo,
        MmScoTrVO,
        MmScoCalcVo,
        MmScoTncVO,
        MmScoPmntSchdlVO,
        LOVSubContractStatusVo1,
        LOVSubContractModeVo1,
        LOVsubContractTypeVo1,
        LOVSubContractBasisVo1,
        LOVCreatedByVo1,
        LOVModifiedByVo1,
        LOVTaxRulesVo1,
        LOVEntityVo1,
        LOVCurrencyInScoVo1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCOBASIS = AttributesEnum.ScoBasis.index();
    public static final int SCOID = AttributesEnum.ScoId.index();
    public static final int SCOMODE = AttributesEnum.ScoMode.index();
    public static final int SCORMRK = AttributesEnum.ScoRmrk.index();
    public static final int SCOSTAT = AttributesEnum.ScoStat.index();
    public static final int SCOTYPE = AttributesEnum.ScoType.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EXTDOCDT = AttributesEnum.ExtDocDt.index();
    public static final int EXTDOCNO = AttributesEnum.ExtDocNo.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDBS = AttributesEnum.CurrIdBs.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int TLRNCDAYS = AttributesEnum.TlrncDays.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int SHIPADDS = AttributesEnum.ShipAdds.index();
    public static final int SCOBOMFLG = AttributesEnum.ScoBomFlg.index();
    public static final int TRANSEONM = AttributesEnum.TransEoNm.index();
    public static final int TRANSEOADDR = AttributesEnum.TransEoAddr.index();
    public static final int TRANSCURRNM = AttributesEnum.TransCurrNm.index();
    public static final int TRANSEOTYPE = AttributesEnum.TransEoType.index();
    public static final int SCOAMDNO = AttributesEnum.ScoAmdNo.index();
    public static final int SCOAMDDT = AttributesEnum.ScoAmdDt.index();
    public static final int MMSCOSRCVO = AttributesEnum.MmScoSrcVO.index();
    public static final int MMSCOOPVO = AttributesEnum.MmScoOpVO.index();
    public static final int MMSCOOCVO = AttributesEnum.MmScoOcVO.index();
    public static final int MMSCODLVSCHDLVO = AttributesEnum.MmScoDlvSchdlVO.index();
    public static final int DLVSCHDLVIEWVO = AttributesEnum.DlvSchdlViewVo.index();
    public static final int MMSCOTRVO = AttributesEnum.MmScoTrVO.index();
    public static final int MMSCOCALCVO = AttributesEnum.MmScoCalcVo.index();
    public static final int MMSCOTNCVO = AttributesEnum.MmScoTncVO.index();
    public static final int MMSCOPMNTSCHDLVO = AttributesEnum.MmScoPmntSchdlVO.index();
    public static final int LOVSUBCONTRACTSTATUSVO1 = AttributesEnum.LOVSubContractStatusVo1.index();
    public static final int LOVSUBCONTRACTMODEVO1 = AttributesEnum.LOVSubContractModeVo1.index();
    public static final int LOVSUBCONTRACTTYPEVO1 = AttributesEnum.LOVsubContractTypeVo1.index();
    public static final int LOVSUBCONTRACTBASISVO1 = AttributesEnum.LOVSubContractBasisVo1.index();
    public static final int LOVCREATEDBYVO1 = AttributesEnum.LOVCreatedByVo1.index();
    public static final int LOVMODIFIEDBYVO1 = AttributesEnum.LOVModifiedByVo1.index();
    public static final int LOVTAXRULESVO1 = AttributesEnum.LOVTaxRulesVo1.index();
    public static final int LOVENTITYVO1 = AttributesEnum.LOVEntityVo1.index();
    public static final int LOVCURRENCYINSCOVO1 = AttributesEnum.LOVCurrencyInScoVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScoVORowImpl() {
    }

    /**
     * Gets MmSco entity object.
     * @return the MmSco
     */
    public MmScoImpl getMmSco() {
        return (MmScoImpl) getEntity(ENTITY_MMSCO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return StaticValue.getTruncatedDt((Timestamp) getAttributeInternal(DOCDT));
        //return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SCO_BASIS using the alias name ScoBasis.
     * @return the SCO_BASIS
     */
    public Integer getScoBasis() {
        return (Integer) getAttributeInternal(SCOBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_BASIS using the alias name ScoBasis.
     * @param value value to set the SCO_BASIS
     */
    public void setScoBasis(Integer value) {
        setAttributeInternal(SCOBASIS, value);
    }

    /**
     * Gets the attribute value for SCO_ID using the alias name ScoId.
     * @return the SCO_ID
     */
    public String getScoId() {
        return (String) getAttributeInternal(SCOID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_ID using the alias name ScoId.
     * @param value value to set the SCO_ID
     */
    public void setScoId(String value) {
        setAttributeInternal(SCOID, value);
    }

    /**
     * Gets the attribute value for SCO_MODE using the alias name ScoMode.
     * @return the SCO_MODE
     */
    public Integer getScoMode() {
        return (Integer) getAttributeInternal(SCOMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_MODE using the alias name ScoMode.
     * @param value value to set the SCO_MODE
     */
    public void setScoMode(Integer value) {
        setAttributeInternal(SCOMODE, value);
    }

    /**
     * Gets the attribute value for SCO_RMRK using the alias name ScoRmrk.
     * @return the SCO_RMRK
     */
    public String getScoRmrk() {
        return (String) getAttributeInternal(SCORMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_RMRK using the alias name ScoRmrk.
     * @param value value to set the SCO_RMRK
     */
    public void setScoRmrk(String value) {
        setAttributeInternal(SCORMRK, value);
    }

    /**
     * Gets the attribute value for SCO_STAT using the alias name ScoStat.
     * @return the SCO_STAT
     */
    public Integer getScoStat() {
        return (Integer) getAttributeInternal(SCOSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_STAT using the alias name ScoStat.
     * @param value value to set the SCO_STAT
     */
    public void setScoStat(Integer value) {
        setAttributeInternal(SCOSTAT, value);
    }

    /**
     * Gets the attribute value for SCO_TYPE using the alias name ScoType.
     * @return the SCO_TYPE
     */
    public Integer getScoType() {
        return (Integer) getAttributeInternal(SCOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_TYPE using the alias name ScoType.
     * @param value value to set the SCO_TYPE
     */
    public void setScoType(Integer value) {
        setAttributeInternal(SCOTYPE, value);
        if (value != null) {
            Integer val = value == 826 ? 68 : 70;
            RowSet entityVo1 = getLOVEntityVo1();
            entityVo1.setNamedWhereClauseParam("EoTypeBind", val);
            entityVo1.executeQuery();
        }
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
        setCoaId(getAm().getCoaIdForCurrEo(value));
        setShipAdds(getAm().getDefaultShippingAddsOfCurrEo(value));
    }

    /**
     * Gets the attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @return the EXT_DOC_DT
     */
    public Timestamp getExtDocDt() {
        return (Timestamp) getAttributeInternal(EXTDOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @param value value to set the EXT_DOC_DT
     */
    public void setExtDocDt(Timestamp value) {
        setAttributeInternal(EXTDOCDT, value);
    }

    /**
     * Gets the attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @return the EXT_DOC_NO
     */
    public String getExtDocNo() {
        return (String) getAttributeInternal(EXTDOCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @param value value to set the EXT_DOC_NO
     */
    public void setExtDocNo(String value) {
        setAttributeInternal(EXTDOCNO, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_BS using the alias name CurrIdBs.
     * @return the CURR_ID_BS
     */
    public Integer getCurrIdBs() {
        return (Integer) getAttributeInternal(CURRIDBS);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_BS using the alias name CurrIdBs.
     * @param value value to set the CURR_ID_BS
     */
    public void setCurrIdBs(Integer value) {
        setAttributeInternal(CURRIDBS, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
        if (value != null) {
            Number currRate = EbizParamsAPPUtils.getCurrRateForCurrId(getAm(), value);
            setCurrConvFctr(currRate);
        } else {
            setCurrConvFctr(new Number(1));
        }
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @return the TLRNC_DAYS
     */
    public Number getTlrncDays() {
        return (Number) getAttributeInternal(TLRNCDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @param value value to set the TLRNC_DAYS
     */
    public void setTlrncDays(Number value) {
        setAttributeInternal(TLRNCDAYS, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for SHIP_ADDS using the alias name ShipAdds.
     * @return the SHIP_ADDS
     */
    public String getShipAdds() {
        return (String) getAttributeInternal(SHIPADDS);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_ADDS using the alias name ShipAdds.
     * @param value value to set the SHIP_ADDS
     */
    public void setShipAdds(String value) {
        setAttributeInternal(SHIPADDS, value);
    }

    /**
     * Gets the attribute value for SCO_BOM_FLG using the alias name ScoBomFlg.
     * @return the SCO_BOM_FLG
     */
    public String getScoBomFlg() {
        return (String) getAttributeInternal(SCOBOMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_BOM_FLG using the alias name ScoBomFlg.
     * @param value value to set the SCO_BOM_FLG
     */
    public void setScoBomFlg(String value) {
        setAttributeInternal(SCOBOMFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoNm.
     * @return the TransEoNm
     */
    public String getTransEoNm() {
        if (this.getEoId() != null && this.getCldId() != null && this.getHoOrgId() != null && this.getOrgId() != null &&
            this.getSlocId() != null) {
            RowQualifier rq = new RowQualifier(getAm().getLOVEntityNmVo1());
            rq.setWhereClause("EoId= '" + this.getEoId() + "' and EoCldId='" + this.getCldId() + "' and EoHoOrgId='" +
                              this.getHoOrgId() + "'" + "and EoOrgId='" + this.getOrgId() + "' and EoSlocId='" +
                              this.getSlocId() + "'");
            Row[] fr = getAm().getLOVEntityNmVo1().getFilteredRows(rq);
            for (Row r : fr) {
                return r.getAttribute("EoNm").toString();
            }
        }
        return (String) getAttributeInternal(TRANSEONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoNm.
     * @param value value to set the  TransEoNm
     */
    public void setTransEoNm(String value) {
        setAttributeInternal(TRANSEONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoAddr.
     * @return the TransEoAddr
     */
    public String getTransEoAddr() {
        if (this.getShipAdds() != null && this.getCldId() != null && this.getSlocId() != null) {
            RowQualifier rq = new RowQualifier(getAm().getLOVAddressVo1());
            rq.setWhereClause("CldId='" + this.getCldId() + "' and AddsId='" + this.getShipAdds() + "' and SlocId='" +
                              this.getSlocId() + "'");
            Row[] fr = getAm().getLOVAddressVo1().getFilteredRows(rq);
            for (Row r : fr) {
                return r.getAttribute("Adds").toString();
            }
        }
        return (String) getAttributeInternal(TRANSEOADDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoAddr.
     * @param value value to set the  TransEoAddr
     */
    public void setTransEoAddr(String value) {
        setAttributeInternal(TRANSEOADDR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrNm.
     * @return the TransCurrNm
     */
    public String getTransCurrNm() {
        if (getCurrIdSp() != null) {
            String s = "";
            Row[] xx = getLOVCurrencyInScoVo1().getFilteredRows("CcCurrIdTxn", getCurrIdSp());
            if (xx.length > 0) {
                s = xx[0].getAttribute("CurrDescTxn").toString();
            }
            return s;
        } else {
            return (String) getAttributeInternal(TRANSCURRNM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrNm.
     * @param value value to set the  TransCurrNm
     */
    public void setTransCurrNm(String value) {
        setAttributeInternal(TRANSCURRNM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransEoType.
     * @return the TransEoType
     */
    public Integer getTransEoType() {
        Integer i = 0;
        if (this.getScoType() == 826) {
            i = 68;
        } else if (this.getScoType() == 827) {
            i = 70;
        }
        return i;
        //return (Integer) getAttributeInternal(TRANSEOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoType.
     * @param value value to set the  TransEoType
     */
    public void setTransEoType(Integer value) {
        setAttributeInternal(TRANSEOTYPE, value);
    }


    /**
     * Gets the attribute value for SCO_AMD_NO using the alias name ScoAmdNo.
     * @return the SCO_AMD_NO
     */
    public Integer getScoAmdNo() {
        return (Integer) getAttributeInternal(SCOAMDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_AMD_NO using the alias name ScoAmdNo.
     * @param value value to set the SCO_AMD_NO
     */
    public void setScoAmdNo(Integer value) {
        setAttributeInternal(SCOAMDNO, value);
    }

    /**
     * Gets the attribute value for SCO_AMD_DT using the alias name ScoAmdDt.
     * @return the SCO_AMD_DT
     */
    public Timestamp getScoAmdDt() {
        return (Timestamp) getAttributeInternal(SCOAMDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_AMD_DT using the alias name ScoAmdDt.
     * @param value value to set the SCO_AMD_DT
     */
    public void setScoAmdDt(Timestamp value) {
        setAttributeInternal(SCOAMDDT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoSrcVO.
     */
    public RowIterator getMmScoSrcVO() {
        return (RowIterator) getAttributeInternal(MMSCOSRCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoOpVO.
     */
    public RowIterator getMmScoOpVO() {
        return (RowIterator) getAttributeInternal(MMSCOOPVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoOcVO.
     */
    public RowIterator getMmScoOcVO() {
        return (RowIterator) getAttributeInternal(MMSCOOCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoDlvSchdlVO.
     */
    public RowIterator getMmScoDlvSchdlVO() {
        return (RowIterator) getAttributeInternal(MMSCODLVSCHDLVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DlvSchdlViewVo.
     */
    public RowIterator getDlvSchdlViewVo() {
        return (RowIterator) getAttributeInternal(DLVSCHDLVIEWVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoTrVO.
     */
    public RowIterator getMmScoTrVO() {
        return (RowIterator) getAttributeInternal(MMSCOTRVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoCalcVo.
     */
    public RowIterator getMmScoCalcVo() {
        return (RowIterator) getAttributeInternal(MMSCOCALCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoTncVO.
     */
    public RowIterator getMmScoTncVO() {
        return (RowIterator) getAttributeInternal(MMSCOTNCVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoPmntSchdlVO.
     */
    public RowIterator getMmScoPmntSchdlVO() {
        return (RowIterator) getAttributeInternal(MMSCOPMNTSCHDLVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractStatusVo1.
     */
    public RowSet getLOVSubContractStatusVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractModeVo1.
     */
    public RowSet getLOVSubContractModeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVsubContractTypeVo1.
     */
    public RowSet getLOVsubContractTypeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractBasisVo1.
     */
    public RowSet getLOVSubContractBasisVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCreatedByVo1.
     */
    public RowSet getLOVCreatedByVo1() {
        return (RowSet) getAttributeInternal(LOVCREATEDBYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVModifiedByVo1.
     */
    public RowSet getLOVModifiedByVo1() {
        return (RowSet) getAttributeInternal(LOVMODIFIEDBYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTaxRulesVo1.
     */
    public RowSet getLOVTaxRulesVo1() {
        return (RowSet) getAttributeInternal(LOVTAXRULESVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEntityVo1.
     */
    public RowSet getLOVEntityVo1() {
        return (RowSet) getAttributeInternal(LOVENTITYVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrencyInScoVo1.
     */
    public RowSet getLOVCurrencyInScoVo1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYINSCOVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SubContractOrderAppModuleImpl getAm() {
        return (SubContractOrderAppModuleImpl) getApplicationModule();
    }
}

