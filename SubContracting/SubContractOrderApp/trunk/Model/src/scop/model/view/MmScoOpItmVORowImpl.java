package scop.model.view;

import adf.utils.bean.StaticValue;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;

import scop.model.entity.MmScoOpItmImpl;
import scop.model.service.SubContractOrderAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 22 11:29:12 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScoOpItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSCOOPITM = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        ConsmptnFlg,
        DocId,
        DocIdSrc,
        DocTypeSrc,
        HoOrgId,
        ItmBasis,
        ItmId,
        ItmPrice,
        ItmQty,
        ItmRmrk,
        ItmType,
        ItmUom,
        OpId,
        OpSrNo,
        OrgId,
        ScoType,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransItemDesc,
        ItmUomBs,
        UomConvFctr,
        AsblAmtBs,
        AsblAmtSp,
        ItmAmtBs,
        ItmAmtGsBs,
        ItmAmtGsSp,
        ItmAmtSp,
        TlrncQtyVal,
        TlrncQtyType,
        PrncplInpt,
        CcId,
        TransCurrIdSp,
        TransEoId,
        MmScoTrVO,
        LOVsubContractTypeVo1,
        LOVSubContractItemTypeVo1,
        LOVItemViewVo1,
        LOVItemUomVo1,
        LOVTolrnceQtyTypeVo1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CONSMPTNFLG = AttributesEnum.ConsmptnFlg.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMRMRK = AttributesEnum.ItmRmrk.index();
    public static final int ITMTYPE = AttributesEnum.ItmType.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int OPID = AttributesEnum.OpId.index();
    public static final int OPSRNO = AttributesEnum.OpSrNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCOTYPE = AttributesEnum.ScoType.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSITEMDESC = AttributesEnum.TransItemDesc.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ASBLAMTBS = AttributesEnum.AsblAmtBs.index();
    public static final int ASBLAMTSP = AttributesEnum.AsblAmtSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTGSBS = AttributesEnum.ItmAmtGsBs.index();
    public static final int ITMAMTGSSP = AttributesEnum.ItmAmtGsSp.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int PRNCPLINPT = AttributesEnum.PrncplInpt.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int TRANSCURRIDSP = AttributesEnum.TransCurrIdSp.index();
    public static final int TRANSEOID = AttributesEnum.TransEoId.index();
    public static final int MMSCOTRVO = AttributesEnum.MmScoTrVO.index();
    public static final int LOVSUBCONTRACTTYPEVO1 = AttributesEnum.LOVsubContractTypeVo1.index();
    public static final int LOVSUBCONTRACTITEMTYPEVO1 = AttributesEnum.LOVSubContractItemTypeVo1.index();
    public static final int LOVITEMVIEWVO1 = AttributesEnum.LOVItemViewVo1.index();
    public static final int LOVITEMUOMVO1 = AttributesEnum.LOVItemUomVo1.index();
    public static final int LOVTOLRNCEQTYTYPEVO1 = AttributesEnum.LOVTolrnceQtyTypeVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScoOpItmVORowImpl() {
    }

    /**
     * Gets MmScoOpItm entity object.
     * @return the MmScoOpItm
     */
    public MmScoOpItmImpl getMmScoOpItm() {
        return (MmScoOpItmImpl) getEntity(ENTITY_MMSCOOPITM);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CONSMPTN_FLG using the alias name ConsmptnFlg.
     * @return the CONSMPTN_FLG
     */
    public String getConsmptnFlg() {
        return (String) getAttributeInternal(CONSMPTNFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for CONSMPTN_FLG using the alias name ConsmptnFlg.
     * @param value value to set the CONSMPTN_FLG
     */
    public void setConsmptnFlg(String value) {
        setAttributeInternal(CONSMPTNFLG, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_BASIS using the alias name ItmBasis.
     * @return the ITM_BASIS
     */
    public Integer getItmBasis() {
        return (Integer) getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_BASIS using the alias name ItmBasis.
     * @param value value to set the ITM_BASIS
     */
    public void setItmBasis(Integer value) {
        setAttributeInternal(ITMBASIS, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        if (valItm == 1) {
            if (value != null) {
                setAttributeInternal(ITMID, value);
            }
        } else {
            setAttributeInternal(ITMID, "_");
        }
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if (valItm == 1) {
            if (getAm().getItemPrice$(this.getOpId(), this.getItmId(),
                                      this.getItmUom()).compareTo(StaticValue.NUMBER_ZERO) == 0) {
                if (value != null) {
                    setAttributeInternal(ITMPRICE, value);
                    this.setItmQty(StaticValue.NUMBER_ZERO);
                    this.setItmAmtSp(StaticValue.NUMBER_ZERO);
                    this.setAsblAmtSp(StaticValue.NUMBER_ZERO);
                    this.getAm().getTransientTotAmtVo1().executeQuery();
                }
            } else {
                if (getAm().getItemPrice$(this.getOpId(), this.getItmId(), this.getItmUom()) != null) {
                    setAttributeInternal(ITMPRICE,
                                         getAm().getItemPrice$(this.getOpId(), this.getItmId(), this.getItmUom()));
                    this.setItmQty(StaticValue.NUMBER_ZERO);
                    this.setItmAmtSp(StaticValue.NUMBER_ZERO);
                    this.setAsblAmtSp(StaticValue.NUMBER_ZERO);
                    this.getAm().getTransientTotAmtVo1().executeQuery();
                }
            }
        } else {
            setAttributeInternal(ITMPRICE, StaticValue.NUMBER_ZERO);
            this.setItmQty(StaticValue.NUMBER_ZERO);
            this.setItmAmtSp(StaticValue.NUMBER_ZERO);
            this.setAsblAmtSp(StaticValue.NUMBER_ZERO);
            this.getAm().getTransientTotAmtVo1().executeQuery();
        }
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        if (value != null) {
            setAttributeInternal(ITMQTY, value);
            Number _amt = value.multiply(this.getItmPrice());
            Number _CurrRate = (Number) getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrConvFctr");
            Number _netAmt = _amt.multiply(_CurrRate);
            this.setItmAmtSp(_amt); // Set Item_amt_sp value
            this.setItmAmtBs(_netAmt); //set Item_amt_bs Value
            this.setItmAmtGsBs(_netAmt);
            this.setItmAmtGsSp(_amt);
            this.setAsblAmtBs(_netAmt);
            this.setAsblAmtSp(_amt);
        }
    }

    /**
     * Gets the attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @return the ITM_RMRK
     */
    public String getItmRmrk() {
        return (String) getAttributeInternal(ITMRMRK);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RMRK using the alias name ItmRmrk.
     * @param value value to set the ITM_RMRK
     */
    public void setItmRmrk(String value) {
        setAttributeInternal(ITMRMRK, value);
    }


    /**
     * Gets the attribute value for ITM_TYPE using the alias name ItmType.
     * @return the ITM_TYPE
     */
    public Integer getItmType() {
        return (Integer) getAttributeInternal(ITMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_TYPE using the alias name ItmType.
     * @param value value to set the ITM_TYPE
     */
    public void setItmType(Integer value) {
        setAttributeInternal(ITMTYPE, value);
        if (value == 830) {
            this.setPrncplInpt("Y");
        } else {
            this.setPrncplInpt("N");
        }
        this.getAm().executeAllViewsForInwardOutward();
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        if (valItm == 1) {
            if (value != null) {
                setAttributeInternal(ITMUOM, value);
            }
        } else {
            setAttributeInternal(ITMUOM, "_");
        }
    }

    /**
     * Gets the attribute value for OP_ID using the alias name OpId.
     * @return the OP_ID
     */
    public String getOpId() {
        return (String) getAttributeInternal(OPID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ID using the alias name OpId.
     * @param value value to set the OP_ID
     */
    public void setOpId(String value) {
        setAttributeInternal(OPID, value);
    }

    /**
     * Gets the attribute value for OP_SR_NO using the alias name OpSrNo.
     * @return the OP_SR_NO
     */
    public Integer getOpSrNo() {
        return (Integer) getAttributeInternal(OPSRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_SR_NO using the alias name OpSrNo.
     * @param value value to set the OP_SR_NO
     */
    public void setOpSrNo(Integer value) {
        setAttributeInternal(OPSRNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SCO_TYPE using the alias name ScoType.
     * @return the SCO_TYPE
     */
    public Integer getScoType() {
        return (Integer) getAttributeInternal(SCOTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SCO_TYPE using the alias name ScoType.
     * @param value value to set the SCO_TYPE
     */
    public void setScoType(Integer value) {
        setAttributeInternal(SCOTYPE, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemDesc.
     * @return the TransItemDesc
     */
    public String getTransItemDesc() {
        if (this.getItmId() != null && this.getCldId() != null && this.getHoOrgId() != null &&
            this.getOrgId() != null && this.getSlocId() != null) {
            RowQualifier rq = new RowQualifier(getAm().getLOVItemNmVo1());
            rq.setWhereClause("ItmId= '" + this.getItmId() + "' and CldId='" + this.getCldId() + "' and HoOrgId='" +
                              this.getHoOrgId() + "' and SlocId='" + this.getSlocId() + "'");
            Row[] fr = getAm().getLOVItemNmVo1().getFilteredRows(rq);
            for (Row r : fr) {
                return r.getAttribute("ItmDesc").toString();
            }
        }
        return (String) getAttributeInternal(TRANSITEMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemDesc.
     * @param value value to set the  TransItemDesc
     */
    Integer valItm = 1;

    public void setTransItemDesc(String value) {
        valItm = getAm().ValidateItemDuplicate(value);
        if (valItm == 1) {
            setAttributeInternal(TRANSITEMDESC, value);
        } else {
            setAttributeInternal(TRANSITEMDESC, value);
            FacesMessage message = new FacesMessage("Duplicate Item Found.");
            message.setSeverity(FacesMessage.SEVERITY_INFO);
            FacesContext fc = FacesContext.getCurrentInstance();
            fc.addMessage(null, message);
        }
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
        this.getAm().executeAllViewsForInwardOutward();
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }


    /**
     * Gets the attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @return the ASBL_AMT_BS
     */
    public Number getAsblAmtBs() {
        return (Number) getAttributeInternal(ASBLAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @param value value to set the ASBL_AMT_BS
     */
    public void setAsblAmtBs(Number value) {
        setAttributeInternal(ASBLAMTBS, value);
    }

    /**
     * Gets the attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @return the ASBL_AMT_SP
     */
    public Number getAsblAmtSp() {
        return (Number) getAttributeInternal(ASBLAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @param value value to set the ASBL_AMT_SP
     */
    public void setAsblAmtSp(Number value) {
        setAttributeInternal(ASBLAMTSP, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @return the ITM_AMT_GS_BS
     */
    public Number getItmAmtGsBs() {
        return (Number) getAttributeInternal(ITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @param value value to set the ITM_AMT_GS_BS
     */
    public void setItmAmtGsBs(Number value) {
        setAttributeInternal(ITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @return the ITM_AMT_GS_SP
     */
    public Number getItmAmtGsSp() {
        return (Number) getAttributeInternal(ITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @param value value to set the ITM_AMT_GS_SP
     */
    public void setItmAmtGsSp(Number value) {
        setAttributeInternal(ITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public Number getTlrncQtyVal() {
        return (Number) getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(Number value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String) getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for PRNCPL_INPT using the alias name PrncplInpt.
     * @return the PRNCPL_INPT
     */
    public String getPrncplInpt() {
        return (String) getAttributeInternal(PRNCPLINPT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRNCPL_INPT using the alias name PrncplInpt.
     * @param value value to set the PRNCPL_INPT
     */
    public void setPrncplInpt(String value) {
        setAttributeInternal(PRNCPLINPT, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSp.
     * @return the TransCurrIdSp
     */
    public Integer getTransCurrIdSp() {
        return (Integer) getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrIdSp");
        // return (Integer) getAttributeInternal(TRANSCURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSp.
     * @param value value to set the  TransCurrIdSp
     */
    public void setTransCurrIdSp(Integer value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoId.
     * @return the TransEoId
     */
    public Integer getTransEoId() {
        return (Integer) getAm().getMmScoVO1().getCurrentRow().getAttribute("EoId");
        // return (Integer) getAttributeInternal(TRANSEOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoId.
     * @param value value to set the  TransEoId
     */
    public void setTransEoId(Integer value) {
        setAttributeInternal(TRANSEOID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmScoTrVO.
     */
    public RowIterator getMmScoTrVO() {
        return (RowIterator) getAttributeInternal(MMSCOTRVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVsubContractTypeVo1.
     */
    public RowSet getLOVsubContractTypeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractItemTypeVo1.
     */
    public RowSet getLOVSubContractItemTypeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTITEMTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemViewVo1.
     */
    public RowSet getLOVItemViewVo1() {
        return (RowSet) getAttributeInternal(LOVITEMVIEWVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemUomVo1.
     */
    public RowSet getLOVItemUomVo1() {
        return (RowSet) getAttributeInternal(LOVITEMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTolrnceQtyTypeVo1.
     */
    public RowSet getLOVTolrnceQtyTypeVo1() {
        return (RowSet) getAttributeInternal(LOVTOLRNCEQTYTYPEVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SubContractOrderAppModuleImpl getAm() {
        return (SubContractOrderAppModuleImpl) getApplicationModule();
    }
}

