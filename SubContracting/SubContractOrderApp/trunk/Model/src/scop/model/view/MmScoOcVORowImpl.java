package scop.model.view;

import adf.utils.ebiz.EbizParamsAPPUtils;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;

import scop.model.entity.MmScoOcImpl;
import scop.model.service.SubContractOrderAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 26 11:20:35 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScoOcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSCOOC = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AmtBs,
        AmtSp,
        CldId,
        CoaId,
        CurrId,
        CurrRate,
        DocId,
        HoOrgId,
        OcDesc,
        OrgId,
        SlocId,
        TranType,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        OcId,
        AmtSpOc,
        TransCurrencyNm,
        LOVCoaNmVo1,
        LOVOcCategoryVo1,
        LOVOcNameVo1,
        LOVCurrencyInScoOcVo1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int CURRRATE = AttributesEnum.CurrRate.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int AMTSPOC = AttributesEnum.AmtSpOc.index();
    public static final int TRANSCURRENCYNM = AttributesEnum.TransCurrencyNm.index();
    public static final int LOVCOANMVO1 = AttributesEnum.LOVCoaNmVo1.index();
    public static final int LOVOCCATEGORYVO1 = AttributesEnum.LOVOcCategoryVo1.index();
    public static final int LOVOCNAMEVO1 = AttributesEnum.LOVOcNameVo1.index();
    public static final int LOVCURRENCYINSCOOCVO1 = AttributesEnum.LOVCurrencyInScoOcVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScoOcVORowImpl() {
    }

    /**
     * Gets MmScoOc entity object.
     * @return the MmScoOc
     */
    public MmScoOcImpl getMmScoOc() {
        return (MmScoOcImpl) getEntity(ENTITY_MMSCOOC);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for CURR_ID using the alias name CurrId.
     * @return the CURR_ID
     */
    public Integer getCurrId() {
        return (Integer) getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID using the alias name CurrId.
     * @param value value to set the CURR_ID
     */
    public void setCurrId(Integer value) {
        if (value != null) {
            Number currRate = EbizParamsAPPUtils.getCurrRateForCurrId(getAm(), value);
            setCurrRate(currRate);
        } else {
            setCurrRate(new Number(1));
        }
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for CURR_RATE using the alias name CurrRate.
     * @return the CURR_RATE
     */
    public Number getCurrRate() {
        return (Number) getAttributeInternal(CURRRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_RATE using the alias name CurrRate.
     * @param value value to set the CURR_RATE
     */
    public void setCurrRate(Number value) {
        setAttributeInternal(CURRRATE, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public Integer getOcDesc() {
        return (Integer) getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for OC_ID using the alias name OcId.
     * @return the OC_ID
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_ID using the alias name OcId.
     * @param value value to set the OC_ID
     */
    public void setOcId(String value) {
        setAttributeInternal(OCID, value);
    }

    /**
     * Gets the attribute value for AMT_SP_OC using the alias name AmtSpOc.
     * @return the AMT_SP_OC
     */
    public Number getAmtSpOc() {
        return (Number) getAttributeInternal(AMTSPOC);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP_OC using the alias name AmtSpOc.
     * @param value value to set the AMT_SP_OC
     */
    public void setAmtSpOc(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        Number scoCurrF = new Number(1);
        if (getAm().getMmScoVO1().getCurrentRow() != null) {
            if (getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrConvFctr") != null)
                scoCurrF = (Number) getAm().getMmScoVO1().getCurrentRow().getAttribute("CurrConvFctr");
        }
        if (getCurrRate() != null) {
            Number bsAmt = (Number) value.multiply(getCurrRate());
            setAmtBs((Number) value.multiply(getCurrRate()).round(6));
            setAmtSp((Number) bsAmt.divide(scoCurrF).round(6));
        }
        setAttributeInternal(AMTSPOC, value);
        getAm().getTransientTotAmtVo1().executeQuery();
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrencyNm.
     * @return the TransCurrencyNm
     */
    public String getTransCurrencyNm() {
        if (getCurrId() != null) {
            String s = "";
            Row[] xx = getLOVCurrencyInScoOcVo1().getFilteredRows("CcCurrIdTxn", getCurrId());
            if (xx.length > 0) {
                s = xx[0].getAttribute("CurrDescTxn").toString();
            }
            return s;
        } else {
            return (String) getAttributeInternal(TRANSCURRENCYNM);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrencyNm.
     * @param value value to set the  TransCurrencyNm
     */
    public void setTransCurrencyNm(String value) {
        setAttributeInternal(TRANSCURRENCYNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCoaNmVo1.
     */
    public RowSet getLOVCoaNmVo1() {
        return (RowSet) getAttributeInternal(LOVCOANMVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVOcCategoryVo1.
     */
    public RowSet getLOVOcCategoryVo1() {
        return (RowSet) getAttributeInternal(LOVOCCATEGORYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOcNameVo1.
     */
    public RowSet getLOVOcNameVo1() {
        return (RowSet) getAttributeInternal(LOVOCNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrencyInScoOcVo1.
     */
    public RowSet getLOVCurrencyInScoOcVo1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYINSCOOCVO1);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SubContractOrderAppModuleImpl getAm() {
        return (SubContractOrderAppModuleImpl) getApplicationModule();
    }
}

