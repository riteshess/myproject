package scop.model.view;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;

import java.sql.Timestamp;

import scop.model.service.SubContractOrderAppModuleImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 15 12:26:19 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransientVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy,
        TransCldId,
        TransHoOrgId,
        TransOrgId,
        TransSlocId,
        TransScoType,
        TransScoBasis,
        TransStatus,
        TransMode,
        TransProductNm,
        TransPrductId,
        TransFromDate,
        TransToDate,
        TransScoDispId,
        TransScoDocId,
        TransDelvryDt,
        TransDelvryMode,
        TransDelvryWhId,
        TransDelvryWhAddr,
        TransDelvryRemrks,
        TransDelvryWhAddrId,
        TrRuleTrans,
        TransUsrCreateDt,
        TotTaxAmtOrdTrans,
        TransTrTotRowCount,
        TransProjectid,
        LOVsubContractTypeVo1,
        LOVSubContractBasisVo1,
        LOVSubContractStatusVo1,
        LOVSubContractModeVo1,
        LOVProductNm1,
        LOVScoDispId1,
        LOVDeliveryModeVo1,
        LOVDeliveryWhVo1,
        LOVTaxRuleIdVO1,
        LOVProjectIdVo1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSSCOTYPE = AttributesEnum.TransScoType.index();
    public static final int TRANSSCOBASIS = AttributesEnum.TransScoBasis.index();
    public static final int TRANSSTATUS = AttributesEnum.TransStatus.index();
    public static final int TRANSMODE = AttributesEnum.TransMode.index();
    public static final int TRANSPRODUCTNM = AttributesEnum.TransProductNm.index();
    public static final int TRANSPRDUCTID = AttributesEnum.TransPrductId.index();
    public static final int TRANSFROMDATE = AttributesEnum.TransFromDate.index();
    public static final int TRANSTODATE = AttributesEnum.TransToDate.index();
    public static final int TRANSSCODISPID = AttributesEnum.TransScoDispId.index();
    public static final int TRANSSCODOCID = AttributesEnum.TransScoDocId.index();
    public static final int TRANSDELVRYDT = AttributesEnum.TransDelvryDt.index();
    public static final int TRANSDELVRYMODE = AttributesEnum.TransDelvryMode.index();
    public static final int TRANSDELVRYWHID = AttributesEnum.TransDelvryWhId.index();
    public static final int TRANSDELVRYWHADDR = AttributesEnum.TransDelvryWhAddr.index();
    public static final int TRANSDELVRYREMRKS = AttributesEnum.TransDelvryRemrks.index();
    public static final int TRANSDELVRYWHADDRID = AttributesEnum.TransDelvryWhAddrId.index();
    public static final int TRRULETRANS = AttributesEnum.TrRuleTrans.index();
    public static final int TRANSUSRCREATEDT = AttributesEnum.TransUsrCreateDt.index();
    public static final int TOTTAXAMTORDTRANS = AttributesEnum.TotTaxAmtOrdTrans.index();
    public static final int TRANSTRTOTROWCOUNT = AttributesEnum.TransTrTotRowCount.index();
    public static final int TRANSPROJECTID = AttributesEnum.TransProjectid.index();
    public static final int LOVSUBCONTRACTTYPEVO1 = AttributesEnum.LOVsubContractTypeVo1.index();
    public static final int LOVSUBCONTRACTBASISVO1 = AttributesEnum.LOVSubContractBasisVo1.index();
    public static final int LOVSUBCONTRACTSTATUSVO1 = AttributesEnum.LOVSubContractStatusVo1.index();
    public static final int LOVSUBCONTRACTMODEVO1 = AttributesEnum.LOVSubContractModeVo1.index();
    public static final int LOVPRODUCTNM1 = AttributesEnum.LOVProductNm1.index();
    public static final int LOVSCODISPID1 = AttributesEnum.LOVScoDispId1.index();
    public static final int LOVDELIVERYMODEVO1 = AttributesEnum.LOVDeliveryModeVo1.index();
    public static final int LOVDELIVERYWHVO1 = AttributesEnum.LOVDeliveryWhVo1.index();
    public static final int LOVTAXRULEIDVO1 = AttributesEnum.LOVTaxRuleIdVO1.index();
    public static final int LOVPROJECTIDVO1 = AttributesEnum.LOVProjectIdVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransientVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        // return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        // return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        // return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setTransOrgId(String value) {
        setAttributeInternal(TRANSORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        // return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransScoType.
     * @return the TransScoType
     */
    public Integer getTransScoType() {
        return (Integer) getAttributeInternal(TRANSSCOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScoType.
     * @param value value to set the  TransScoType
     */
    public void setTransScoType(Integer value) {
        setAttributeInternal(TRANSSCOTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransScoBasis.
     * @return the TransScoBasis
     */
    public Integer getTransScoBasis() {
        return (Integer) getAttributeInternal(TRANSSCOBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScoBasis.
     * @param value value to set the  TransScoBasis
     */
    public void setTransScoBasis(Integer value) {
        setAttributeInternal(TRANSSCOBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStatus.
     * @return the TransStatus
     */
    public Integer getTransStatus() {
        return (Integer) getAttributeInternal(TRANSSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStatus.
     * @param value value to set the  TransStatus
     */
    public void setTransStatus(Integer value) {
        setAttributeInternal(TRANSSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMode.
     * @return the TransMode
     */
    public Integer getTransMode() {
        return (Integer) getAttributeInternal(TRANSMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMode.
     * @param value value to set the  TransMode
     */
    public void setTransMode(Integer value) {
        setAttributeInternal(TRANSMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProductNm.
     * @return the TransProductNm
     */
    public String getTransProductNm() {
        return (String) getAttributeInternal(TRANSPRODUCTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProductNm.
     * @param value value to set the  TransProductNm
     */
    public void setTransProductNm(String value) {
        setAttributeInternal(TRANSPRODUCTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrductId.
     * @return the TransPrductId
     */
    public String getTransPrductId() {
        return (String) getAttributeInternal(TRANSPRDUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrductId.
     * @param value value to set the  TransPrductId
     */
    public void setTransPrductId(String value) {
        setAttributeInternal(TRANSPRDUCTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFromDate.
     * @return the TransFromDate
     */
    public Timestamp getTransFromDate() {
        return (Timestamp) getAttributeInternal(TRANSFROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFromDate.
     * @param value value to set the  TransFromDate
     */
    public void setTransFromDate(Timestamp value) {
        setAttributeInternal(TRANSFROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransToDate.
     * @return the TransToDate
     */
    public Timestamp getTransToDate() {
        return (Timestamp) getAttributeInternal(TRANSTODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransToDate.
     * @param value value to set the  TransToDate
     */
    public void setTransToDate(Timestamp value) {
        setAttributeInternal(TRANSTODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransScoDispId.
     * @return the TransScoDispId
     */
    public String getTransScoDispId() {
        return (String) getAttributeInternal(TRANSSCODISPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScoDispId.
     * @param value value to set the  TransScoDispId
     */
    public void setTransScoDispId(String value) {
        setAttributeInternal(TRANSSCODISPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransScoDocId.
     * @return the TransScoDocId
     */
    public String getTransScoDocId() {
        return (String) getAttributeInternal(TRANSSCODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransScoDocId.
     * @param value value to set the  TransScoDocId
     */
    public void setTransScoDocId(String value) {
        setAttributeInternal(TRANSSCODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryDt.
     * @return the TransDelvryDt
     */
    public Timestamp getTransDelvryDt() {
        return (Timestamp) getAttributeInternal(TRANSDELVRYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryDt.
     * @param value value to set the  TransDelvryDt
     */
    public void setTransDelvryDt(Timestamp value) {
        setAttributeInternal(TRANSDELVRYDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryMode.
     * @return the TransDelvryMode
     */
    public Integer getTransDelvryMode() {
        return (Integer) getAttributeInternal(TRANSDELVRYMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryMode.
     * @param value value to set the  TransDelvryMode
     */
    public void setTransDelvryMode(Integer value) {
        setAttributeInternal(TRANSDELVRYMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryWhId.
     * @return the TransDelvryWhId
     */
    public String getTransDelvryWhId() {
        return (String) getAttributeInternal(TRANSDELVRYWHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryWhId.
     * @param value value to set the  TransDelvryWhId
     */
    public void setTransDelvryWhId(String value) {
        setAttributeInternal(TRANSDELVRYWHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryWhAddr.
     * @return the TransDelvryWhAddr
     */
    public String getTransDelvryWhAddr() {
        return (String) getAttributeInternal(TRANSDELVRYWHADDR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryWhAddr.
     * @param value value to set the  TransDelvryWhAddr
     */
    public void setTransDelvryWhAddr(String value) {
        setAttributeInternal(TRANSDELVRYWHADDR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryRemrks.
     * @return the TransDelvryRemrks
     */
    public String getTransDelvryRemrks() {
        return (String) getAttributeInternal(TRANSDELVRYREMRKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryRemrks.
     * @param value value to set the  TransDelvryRemrks
     */
    public void setTransDelvryRemrks(String value) {
        setAttributeInternal(TRANSDELVRYREMRKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDelvryWhAddrId.
     * @return the TransDelvryWhAddrId
     */
    public String getTransDelvryWhAddrId() {
        return (String) getAttributeInternal(TRANSDELVRYWHADDRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDelvryWhAddrId.
     * @param value value to set the  TransDelvryWhAddrId
     */
    public void setTransDelvryWhAddrId(String value) {
        setAttributeInternal(TRANSDELVRYWHADDRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrRuleTrans.
     * @return the TrRuleTrans
     */
    public Integer getTrRuleTrans() {
        if (getAm().getTaxRuleIdForGetterInTransient() != null) {
            return (Integer) getAm().getTaxRuleIdForGetterInTransient();
        }
        return (Integer) getAttributeInternal(TRRULETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrRuleTrans.
     * @param value value to set the  TrRuleTrans
     */
    public void setTrRuleTrans(Integer value) {
        setAttributeInternal(TRRULETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrCreateDt.
     * @return the TransUsrCreateDt
     */
    public Timestamp getTransUsrCreateDt() {
        return new Timestamp(System.currentTimeMillis());
        // return (Timestamp) getAttributeInternal(TRANSUSRCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrCreateDt.
     * @param value value to set the  TransUsrCreateDt
     */
    public void setTransUsrCreateDt(Timestamp value) {
        setAttributeInternal(TRANSUSRCREATEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotTaxAmtOrdTrans.
     * @return the TotTaxAmtOrdTrans
     */
    public Number getTotTaxAmtOrdTrans() {
        if (getAm().TotTaxAmount("TransientVo") != null) {
            return (Number) getAm().TotTaxAmount("TransientVo");
        }
        return (Number) getAttributeInternal(TOTTAXAMTORDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotTaxAmtOrdTrans.
     * @param value value to set the  TotTaxAmtOrdTrans
     */
    public void setTotTaxAmtOrdTrans(Number value) {
        setAttributeInternal(TOTTAXAMTORDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTrTotRowCount.
     * @return the TransTrTotRowCount
     */
    public Integer getTransTrTotRowCount() {
        if (getAm().TotTaxRowCount() != null) {
            return (Integer) getAm().TotTaxRowCount();
        }
        return (Integer) getAttributeInternal(TRANSTRTOTROWCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTrTotRowCount.
     * @param value value to set the  TransTrTotRowCount
     */
    public void setTransTrTotRowCount(Integer value) {
        setAttributeInternal(TRANSTRTOTROWCOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProjectid.
     * @return the TransProjectid
     */
    public String getTransProjectid() {
        if ((String) getAttributeInternal(TRANSPROJECTID) == null) {
            return "PROJ0000";
        } else {
            return (String) getAttributeInternal(TRANSPROJECTID);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjectid.
     * @param value value to set the  TransProjectid
     */
    public void setTransProjectid(String value) {
        setAttributeInternal(TRANSPROJECTID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVsubContractTypeVo1.
     */
    public RowSet getLOVsubContractTypeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTTYPEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractBasisVo1.
     */
    public RowSet getLOVSubContractBasisVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractStatusVo1.
     */
    public RowSet getLOVSubContractStatusVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSubContractModeVo1.
     */
    public RowSet getLOVSubContractModeVo1() {
        return (RowSet) getAttributeInternal(LOVSUBCONTRACTMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVProductNm1.
     */
    public RowSet getLOVProductNm1() {
        return (RowSet) getAttributeInternal(LOVPRODUCTNM1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVScoDispId1.
     */
    public RowSet getLOVScoDispId1() {
        return (RowSet) getAttributeInternal(LOVSCODISPID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDeliveryModeVo1.
     */
    public RowSet getLOVDeliveryModeVo1() {
        return (RowSet) getAttributeInternal(LOVDELIVERYMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDeliveryWhVo1.
     */
    public RowSet getLOVDeliveryWhVo1() {
        return (RowSet) getAttributeInternal(LOVDELIVERYWHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTaxRuleIdVO1.
     */
    public RowSet getLOVTaxRuleIdVO1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVProjectIdVo1.
     */
    public RowSet getLOVProjectIdVo1() {
        return (RowSet) getAttributeInternal(LOVPROJECTIDVO1);
    }

    /** Function for Resolve Global pageflowscope Values.
     */
    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SubContractOrderAppModuleImpl getAm() {
        return (SubContractOrderAppModuleImpl) getApplicationModule();
    }
}

