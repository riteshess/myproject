package subcontractreceiptapp.model.views;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 15 16:31:45 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ScSearchViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        WhId,
        WhNm,
        DocId,
        DocDt,
        FyId,
        RcptNo,
        RcptDt,
        RcptSrcType,
        RcptStg,
        GeDocId,
        EoIdSrc,
        RqmtAreaIdSrc,
        OrgIdSrc,
        WhIdSrc,
        InvoiceNoSrc,
        InvoiceDtSrc,
        DnNoSrc,
        DnDtSrc,
        EoIdTpt,
        TptBillNo,
        TptBillDt,
        VehicleNo,
        RcptStat,
        InvoiceReqd,
        QcDoneFlg,
        AuthStat,
        UsrIdCreate,
        EoNmTpt,
        EoNmSrc,
        Status,
        UserName,
        LovUserVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return ScSearchViewVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return ScSearchViewVORowImpl.AttributesEnum.firstIndex() +
                   ScSearchViewVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = ScSearchViewVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int RCPTNO = AttributesEnum.RcptNo.index();
    public static final int RCPTDT = AttributesEnum.RcptDt.index();
    public static final int RCPTSRCTYPE = AttributesEnum.RcptSrcType.index();
    public static final int RCPTSTG = AttributesEnum.RcptStg.index();
    public static final int GEDOCID = AttributesEnum.GeDocId.index();
    public static final int EOIDSRC = AttributesEnum.EoIdSrc.index();
    public static final int RQMTAREAIDSRC = AttributesEnum.RqmtAreaIdSrc.index();
    public static final int ORGIDSRC = AttributesEnum.OrgIdSrc.index();
    public static final int WHIDSRC = AttributesEnum.WhIdSrc.index();
    public static final int INVOICENOSRC = AttributesEnum.InvoiceNoSrc.index();
    public static final int INVOICEDTSRC = AttributesEnum.InvoiceDtSrc.index();
    public static final int DNNOSRC = AttributesEnum.DnNoSrc.index();
    public static final int DNDTSRC = AttributesEnum.DnDtSrc.index();
    public static final int EOIDTPT = AttributesEnum.EoIdTpt.index();
    public static final int TPTBILLNO = AttributesEnum.TptBillNo.index();
    public static final int TPTBILLDT = AttributesEnum.TptBillDt.index();
    public static final int VEHICLENO = AttributesEnum.VehicleNo.index();
    public static final int RCPTSTAT = AttributesEnum.RcptStat.index();
    public static final int INVOICEREQD = AttributesEnum.InvoiceReqd.index();
    public static final int QCDONEFLG = AttributesEnum.QcDoneFlg.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int EONMTPT = AttributesEnum.EoNmTpt.index();
    public static final int EONMSRC = AttributesEnum.EoNmSrc.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int LOVUSERVO1 = AttributesEnum.LovUserVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ScSearchViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        return (String) getAttributeInternal(WHNM);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute RcptNo.
     * @return the RcptNo
     */
    public String getRcptNo() {
        return (String) getAttributeInternal(RCPTNO);
    }

    /**
     * Gets the attribute value for the calculated attribute RcptDt.
     * @return the RcptDt
     */
    public Timestamp getRcptDt() {
        return (Timestamp) getAttributeInternal(RCPTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute RcptSrcType.
     * @return the RcptSrcType
     */
    public Integer getRcptSrcType() {
        return (Integer) getAttributeInternal(RCPTSRCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute RcptStg.
     * @return the RcptStg
     */
    public String getRcptStg() {
        return (String) getAttributeInternal(RCPTSTG);
    }

    /**
     * Gets the attribute value for the calculated attribute GeDocId.
     * @return the GeDocId
     */
    public String getGeDocId() {
        return (String) getAttributeInternal(GEDOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdSrc.
     * @return the EoIdSrc
     */
    public Integer getEoIdSrc() {
        return (Integer) getAttributeInternal(EOIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaIdSrc.
     * @return the RqmtAreaIdSrc
     */
    public Integer getRqmtAreaIdSrc() {
        return (Integer) getAttributeInternal(RQMTAREAIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdSrc.
     * @return the OrgIdSrc
     */
    public String getOrgIdSrc() {
        return (String) getAttributeInternal(ORGIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdSrc.
     * @return the WhIdSrc
     */
    public String getWhIdSrc() {
        return (String) getAttributeInternal(WHIDSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNoSrc.
     * @return the InvoiceNoSrc
     */
    public String getInvoiceNoSrc() {
        return (String) getAttributeInternal(INVOICENOSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceDtSrc.
     * @return the InvoiceDtSrc
     */
    public Timestamp getInvoiceDtSrc() {
        return (Timestamp) getAttributeInternal(INVOICEDTSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute DnNoSrc.
     * @return the DnNoSrc
     */
    public String getDnNoSrc() {
        return (String) getAttributeInternal(DNNOSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute DnDtSrc.
     * @return the DnDtSrc
     */
    public Timestamp getDnDtSrc() {
        return (Timestamp) getAttributeInternal(DNDTSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdTpt.
     * @return the EoIdTpt
     */
    public Integer getEoIdTpt() {
        return (Integer) getAttributeInternal(EOIDTPT);
    }

    /**
     * Gets the attribute value for the calculated attribute TptBillNo.
     * @return the TptBillNo
     */
    public String getTptBillNo() {
        return (String) getAttributeInternal(TPTBILLNO);
    }

    /**
     * Gets the attribute value for the calculated attribute TptBillDt.
     * @return the TptBillDt
     */
    public Timestamp getTptBillDt() {
        return (Timestamp) getAttributeInternal(TPTBILLDT);
    }

    /**
     * Gets the attribute value for the calculated attribute VehicleNo.
     * @return the VehicleNo
     */
    public String getVehicleNo() {
        return (String) getAttributeInternal(VEHICLENO);
    }

    /**
     * Gets the attribute value for the calculated attribute RcptStat.
     * @return the RcptStat
     */
    public Integer getRcptStat() {
        return (Integer) getAttributeInternal(RCPTSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceReqd.
     * @return the InvoiceReqd
     */
    public String getInvoiceReqd() {
        return (String) getAttributeInternal(INVOICEREQD);
    }

    /**
     * Gets the attribute value for the calculated attribute QcDoneFlg.
     * @return the QcDoneFlg
     */
    public String getQcDoneFlg() {
        return (String) getAttributeInternal(QCDONEFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthStat.
     * @return the AuthStat
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmTpt.
     * @return the EoNmTpt
     */
    public String getEoNmTpt() {
        return (String) getAttributeInternal(EONMTPT);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmSrc.
     * @return the EoNmSrc
     */
    public String getEoNmSrc() {
        return (String) getAttributeInternal(EONMSRC);
    }

    /**
     * Gets the attribute value for the calculated attribute Status.
     * @return the Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Gets the attribute value for the calculated attribute UserName.
     * @return the UserName
     */
    public String getUserName() {
        String userName=null;
        if(this.getLovUserVO1().getRowCount()>0){
            userName=this.getLovUserVO1().first().getAttribute("UsrName").toString();
        }
        return userName;
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserVO1.
     */
    public RowSet getLovUserVO1() {
        return (RowSet) getAttributeInternal(LOVUSERVO1);
    }
}

