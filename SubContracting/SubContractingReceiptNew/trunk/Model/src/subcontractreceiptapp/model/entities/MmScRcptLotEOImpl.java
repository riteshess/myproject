package subcontractreceiptapp.model.entities;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 26 17:49:16 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScRcptLotEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        WhId,
        DocId,
        DocIdSrc,
        DocDtSrc,
        DlvSchdlNo,
        LotId,
        ItmId,
        ItmUom,
        LotQty,
        LotPrice,
        WarrantyDt,
        ExpiryDt,
        ItmUomBs,
        LotQtyBs,
        LotQtySp,
        RejQtySp,
        RejQtyBs,
        RwkQtySp,
        RwkQtyBs,
        MfgDt,
        BatchNo,
        MmScRcptItm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int LOTQTY = AttributesEnum.LotQty.index();
    public static final int LOTPRICE = AttributesEnum.LotPrice.index();
    public static final int WARRANTYDT = AttributesEnum.WarrantyDt.index();
    public static final int EXPIRYDT = AttributesEnum.ExpiryDt.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int LOTQTYBS = AttributesEnum.LotQtyBs.index();
    public static final int LOTQTYSP = AttributesEnum.LotQtySp.index();
    public static final int REJQTYSP = AttributesEnum.RejQtySp.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int RWKQTYSP = AttributesEnum.RwkQtySp.index();
    public static final int RWKQTYBS = AttributesEnum.RwkQtyBs.index();
    public static final int MFGDT = AttributesEnum.MfgDt.index();
    public static final int BATCHNO = AttributesEnum.BatchNo.index();
    public static final int MMSCRCPTITM = AttributesEnum.MmScRcptItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScRcptLotEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("subcontractreceiptapp.model.entities.MmScRcptLotEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DocDtSrc, using the alias name DocDtSrc.
     * @return the value of DocDtSrc
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDtSrc.
     * @param value value to set the DocDtSrc
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for LotId, using the alias name LotId.
     * @return the value of LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotId.
     * @param value value to set the LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for LotQty, using the alias name LotQty.
     * @return the value of LotQty
     */
    public oracle.jbo.domain.Number getLotQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(LOTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotQty.
     * @param value value to set the LotQty
     */
    public void setLotQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(LOTQTY, value);
    }

    /**
     * Gets the attribute value for LotPrice, using the alias name LotPrice.
     * @return the value of LotPrice
     */
    public Number getLotPrice() {
        return (Number) getAttributeInternal(LOTPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotPrice.
     * @param value value to set the LotPrice
     */
    public void setLotPrice(Number value) {
        setAttributeInternal(LOTPRICE, value);
    }

    /**
     * Gets the attribute value for WarrantyDt, using the alias name WarrantyDt.
     * @return the value of WarrantyDt
     */
    public Timestamp getWarrantyDt() {
        return (Timestamp) getAttributeInternal(WARRANTYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WarrantyDt.
     * @param value value to set the WarrantyDt
     */
    public void setWarrantyDt(Timestamp value) {
        setAttributeInternal(WARRANTYDT, value);
    }

    /**
     * Gets the attribute value for ExpiryDt, using the alias name ExpiryDt.
     * @return the value of ExpiryDt
     */
    public Timestamp getExpiryDt() {
        return (Timestamp) getAttributeInternal(EXPIRYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExpiryDt.
     * @param value value to set the ExpiryDt
     */
    public void setExpiryDt(Timestamp value) {
        setAttributeInternal(EXPIRYDT, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for LotQtyBs, using the alias name LotQtyBs.
     * @return the value of LotQtyBs
     */
    public Number getLotQtyBs() {
        return (Number) getAttributeInternal(LOTQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotQtyBs.
     * @param value value to set the LotQtyBs
     */
    public void setLotQtyBs(Number value) {
        setAttributeInternal(LOTQTYBS, value);
    }

    /**
     * Gets the attribute value for LotQtySp, using the alias name LotQtySp.
     * @return the value of LotQtySp
     */
    public Number getLotQtySp() {
        return (Number) getAttributeInternal(LOTQTYSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotQtySp.
     * @param value value to set the LotQtySp
     */
    public void setLotQtySp(Number value) {
        setAttributeInternal(LOTQTYSP, value);
    }

    /**
     * Gets the attribute value for RejQtySp, using the alias name RejQtySp.
     * @return the value of RejQtySp
     */
    public Number getRejQtySp() {
        return (Number) getAttributeInternal(REJQTYSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejQtySp.
     * @param value value to set the RejQtySp
     */
    public void setRejQtySp(Number value) {
        setAttributeInternal(REJQTYSP, value);
    }

    /**
     * Gets the attribute value for RejQtyBs, using the alias name RejQtyBs.
     * @return the value of RejQtyBs
     */
    public Number getRejQtyBs() {
        return (Number) getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejQtyBs.
     * @param value value to set the RejQtyBs
     */
    public void setRejQtyBs(Number value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for RwkQtySp, using the alias name RwkQtySp.
     * @return the value of RwkQtySp
     */
    public Number getRwkQtySp() {
        return (Number) getAttributeInternal(RWKQTYSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwkQtySp.
     * @param value value to set the RwkQtySp
     */
    public void setRwkQtySp(Number value) {
        setAttributeInternal(RWKQTYSP, value);
    }

    /**
     * Gets the attribute value for RwkQtyBs, using the alias name RwkQtyBs.
     * @return the value of RwkQtyBs
     */
    public Number getRwkQtyBs() {
        return (Number) getAttributeInternal(RWKQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RwkQtyBs.
     * @param value value to set the RwkQtyBs
     */
    public void setRwkQtyBs(Number value) {
        setAttributeInternal(RWKQTYBS, value);
    }

    /**
     * Gets the attribute value for MfgDt, using the alias name MfgDt.
     * @return the value of MfgDt
     */
    public Timestamp getMfgDt() {
        return (Timestamp) getAttributeInternal(MFGDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MfgDt.
     * @param value value to set the MfgDt
     */
    public void setMfgDt(Timestamp value) {
        setAttributeInternal(MFGDT, value);
    }

    /**
     * Gets the attribute value for BatchNo, using the alias name BatchNo.
     * @return the value of BatchNo
     */
    public String getBatchNo() {
        return (String) getAttributeInternal(BATCHNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BatchNo.
     * @param value value to set the BatchNo
     */
    public void setBatchNo(String value) {
        setAttributeInternal(BATCHNO, value);
    }

    /**
     * @return the associated entity MmScRcptItmEOImpl.
     */
    public MmScRcptItmEOImpl getMmScRcptItm() {
        return (MmScRcptItmEOImpl) getAttributeInternal(MMSCRCPTITM);
    }

    /**
     * Sets <code>value</code> as the associated entity MmScRcptItmEOImpl.
     */
    public void setMmScRcptItm(MmScRcptItmEOImpl value) {
        setAttributeInternal(MMSCRCPTITM, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent
     * @param docIdSrc key constituent
     * @param dlvSchdlNo key constituent
     * @param lotId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId,
                                       String docIdSrc, Integer dlvSchdlNo, String lotId, String itmId, String itmUom) {
        return new Key(new Object[] { cldId, slocId, orgId, whId, docId, docIdSrc, dlvSchdlNo, lotId, itmId, itmUom });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setDocDtSrc(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
     //   super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    protected void setAttributeInternal(int index, Object val){
        if(val instanceof oracle.jbo.domain.Number){
             
            val=((oracle.jbo.domain.Number)val).round(6);
        }
      super.setAttributeInternal(index, val);  
    }
}

