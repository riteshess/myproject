package subcontractreceiptapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import subcontractreceiptapp.model.services.SubContractReceiptAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 17 18:07:01 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmScRcptOcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMSCRCPTOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        WhId,
        DocId,
        DocIdSrc,
        DlvSchdlNo,
        CoaId,
        OcDesc,
        TranType,
        OcAmtSp,
        OcAmtBs,
        OcId,
        CurrIdSpOc,
        CurrConvFctrOc,
        OcAmtSpOc,
        CurrencyTrans,
        HeaderCurr,
        OcName,
        HoOrgIdTrans,
        DocTypeId,
        LovCurrencyVO1,
        CurrConFactorVO1,
        LovOtherChargeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int OCAMTSP = AttributesEnum.OcAmtSp.index();
    public static final int OCAMTBS = AttributesEnum.OcAmtBs.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int CURRIDSPOC = AttributesEnum.CurrIdSpOc.index();
    public static final int CURRCONVFCTROC = AttributesEnum.CurrConvFctrOc.index();
    public static final int OCAMTSPOC = AttributesEnum.OcAmtSpOc.index();
    public static final int CURRENCYTRANS = AttributesEnum.CurrencyTrans.index();
    public static final int HEADERCURR = AttributesEnum.HeaderCurr.index();
    public static final int OCNAME = AttributesEnum.OcName.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int LOVCURRENCYVO1 = AttributesEnum.LovCurrencyVO1.index();
    public static final int CURRCONFACTORVO1 = AttributesEnum.CurrConFactorVO1.index();
    public static final int LOVOTHERCHARGEVO1 = AttributesEnum.LovOtherChargeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmScRcptOcVORowImpl() {
    }

    /**
     * Gets MmScRcptOcEO entity object.
     * @return the MmScRcptOcEO
     */
    public EntityImpl getMmScRcptOcEO() {
        return (EntityImpl) getEntity(ENTITY_MMSCRCPTOCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public Integer getOcDesc() {
        return (Integer) getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @return the OC_AMT_SP
     */
    public oracle.jbo.domain.Number getOcAmtSp() {
        return (oracle.jbo.domain.Number) getAttributeInternal(OCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_SP using the alias name OcAmtSp.
     * @param value value to set the OC_AMT_SP
     */
    public void setOcAmtSp(oracle.jbo.domain.Number value) {
        setAttributeInternal(OCAMTSP, value);
    }

    /**
     * Gets the attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @return the OC_AMT_BS
     */
    public oracle.jbo.domain.Number getOcAmtBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(OCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_BS using the alias name OcAmtBs.
     * @param value value to set the OC_AMT_BS
     */
    public void setOcAmtBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(OCAMTBS, value);
    }

    /**
     * Gets the attribute value for OC_ID using the alias name OcId.
     * @return the OC_ID
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_ID using the alias name OcId.
     * @param value value to set the OC_ID
     */
    public void setOcId(String value) {
        setAttributeInternal(OCID, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP_OC using the alias name CurrIdSpOc.
     * @return the CURR_ID_SP_OC
     */
    public Integer getCurrIdSpOc() {
        return (Integer) getAttributeInternal(CURRIDSPOC);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP_OC using the alias name CurrIdSpOc.
     * @param value value to set the CURR_ID_SP_OC
     */
    public void setCurrIdSpOc(Integer value) {
        setAttributeInternal(CURRIDSPOC, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR_OC using the alias name CurrConvFctrOc.
     * @return the CURR_CONV_FCTR_OC
     */
    public oracle.jbo.domain.Number getCurrConvFctrOc() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CURRCONVFCTROC);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR_OC using the alias name CurrConvFctrOc.
     * @param value value to set the CURR_CONV_FCTR_OC
     */
    public void setCurrConvFctrOc(oracle.jbo.domain.Number value) {
        setAttributeInternal(CURRCONVFCTROC, value);
    }

    /**
     * Gets the attribute value for OC_AMT_SP_OC using the alias name OcAmtSpOc.
     * @return the OC_AMT_SP_OC
     */
    public oracle.jbo.domain.Number getOcAmtSpOc() {
        return (oracle.jbo.domain.Number) getAttributeInternal(OCAMTSPOC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_AMT_SP_OC using the alias name OcAmtSpOc.
     * @param value value to set the OC_AMT_SP_OC
     */
    public void setOcAmtSpOc(oracle.jbo.domain.Number value) {
        setAttributeInternal(OCAMTSPOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyTrans.
     * @return the CurrencyTrans
     */
    public String getCurrencyTrans() {
        String curr=(String) getAttributeInternal(CURRENCYTRANS);
        
        if(curr==null){
            if(this.getCurrIdSpOc()!=null){
               Row[] rw= this.getLovCurrencyVO1().getFilteredRows("CurrId", this.getCurrIdSpOc());
               if(rw.length>0){
                   curr=rw[0].getAttribute("CurrDesc").toString();
               }
            }
        }
        
        return curr;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyTrans.
     * @param value value to set the  CurrencyTrans
     */
    public void setCurrencyTrans(String value) {
        setAttributeInternal(CURRENCYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HeaderCurr.
     * @return the HeaderCurr
     */
    public Integer getHeaderCurr() {
        Integer curr=(Integer)((SubContractReceiptAMImpl)this.getApplicationModule()).getMmScRcpt1().getCurrentRow().getAttribute("CurrIdSp");
        return curr;
    }

    /**
     * Gets the attribute value for the calculated attribute OcName.
     * @return the OcName
     */
    public String getOcName() {
        return (String) getAttributeInternal(OCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OcName.
     * @param value value to set the  OcName
     */
    public void setOcName(String value) {
        setAttributeInternal(OCNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        return EbizParams.GLBL_HO_ORG_ID();
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeId.
     * @return the DocTypeId
     */
    public Integer getDocTypeId() {
        Integer docType=(Integer)((SubContractReceiptAMImpl)this.getApplicationModule()).getMmScRcpt1().getCurrentRow().getAttribute("RcptSrcType");
        return docType;
    }



    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO1.
     */
    public RowSet getLovCurrencyVO1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CurrConFactorVO1.
     */
    public RowSet getCurrConFactorVO1() {
        return (RowSet) getAttributeInternal(CURRCONFACTORVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOtherChargeVO1.
     */
    public RowSet getLovOtherChargeVO1() {
        return (RowSet) getAttributeInternal(LOVOTHERCHARGEVO1);
    }
}

