package fagrpapp.model.entities;

import adf.utils.bean.ADFBeanUtils;
import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 22 11:15:43 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppFaGrpPrfEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        CntryId,
        SlocId,
        FaPrfId,
        FaGrpId,
        EffDate,
        FaGrpDesc,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        Finalize1,
        HoOrgId,
        AppFaGrpRule;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CNTRYID = AttributesEnum.CntryId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int FAPRFID = AttributesEnum.FaPrfId.index();
    public static final int FAGRPID = AttributesEnum.FaGrpId.index();
    public static final int EFFDATE = AttributesEnum.EffDate.index();
    public static final int FAGRPDESC = AttributesEnum.FaGrpDesc.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int FINALIZE1 = AttributesEnum.Finalize1.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int APPFAGRPRULE = AttributesEnum.AppFaGrpRule.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppFaGrpPrfEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("fagrpapp.model.entities.AppFaGrpPrfEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CntryId, using the alias name CntryId.
     * @return the value of CntryId
     */
    public Integer getCntryId() {
        return (Integer) getAttributeInternal(CNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CntryId.
     * @param value value to set the CntryId
     */
    public void setCntryId(Integer value) {
        setAttributeInternal(CNTRYID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for FaPrfId, using the alias name FaPrfId.
     * @return the value of FaPrfId
     */
    public Integer getFaPrfId() {
        return (Integer) getAttributeInternal(FAPRFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FaPrfId.
     * @param value value to set the FaPrfId
     */
    public void setFaPrfId(Integer value) {
        setAttributeInternal(FAPRFID, value);
    }

    /**
     * Gets the attribute value for FaGrpId, using the alias name FaGrpId.
     * @return the value of FaGrpId
     */
    public String getFaGrpId() {
        return (String) getAttributeInternal(FAGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FaGrpId.
     * @param value value to set the FaGrpId
     */
    public void setFaGrpId(String value) {
        setAttributeInternal(FAGRPID, value);
    }

    /**
     * Gets the attribute value for EffDate, using the alias name EffDate.
     * @return the value of EffDate
     */
    public Timestamp getEffDate() {
        return (Timestamp) getAttributeInternal(EFFDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffDate.
     * @param value value to set the EffDate
     */
    public void setEffDate(Timestamp value) {
        setAttributeInternal(EFFDATE, value);
    }

    /**
     * Gets the attribute value for FaGrpDesc, using the alias name FaGrpDesc.
     * @return the value of FaGrpDesc
     */
    public String getFaGrpDesc() {
        return (String) getAttributeInternal(FAGRPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for FaGrpDesc.
     * @param value value to set the FaGrpDesc
     */
    public void setFaGrpDesc(String value) {
        setAttributeInternal(FAGRPDESC, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for Finalize1, using the alias name Finalize1.
     * @return the value of Finalize1
     */
    public String getFinalize1() {
        return (String) getAttributeInternal(FINALIZE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Finalize1.
     * @param value value to set the Finalize1
     */
    public void setFinalize1(String value) {
        setAttributeInternal(FINALIZE1, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppFaGrpRule() {
        return (RowIterator) getAttributeInternal(APPFAGRPRULE);
    }


    /**
     * @param cldId key constituent
     * @param cntryId key constituent
     * @param slocId key constituent
     * @param faPrfId key constituent
     * @param faGrpId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer cntryId, Integer slocId, Integer faPrfId, String faGrpId) {
        return new Key(new Object[] { cldId, cntryId, slocId, faPrfId, faGrpId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
//        setOrgId(EbizParams.GLBL_APP_USR_ORG());
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_PRF_ID}")!=null) {
            setFaPrfId( Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_PRF_ID}").toString()));
        }
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_CNTRY_PRF_ID}")!=null) {
            setCntryId(Integer.parseInt( ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_CNTRY_PRF_ID}").toString()));
        } 
        
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }
   
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            setUsrIdMod(EbizParams.GLBL_APP_USR());
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

