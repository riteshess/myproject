package fagrpapp.model.module;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import fagrpapp.model.module.common.FAGrpAM;

import java.sql.Types;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 22 15:20:38 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FAGrpAMImpl extends ApplicationModuleImpl implements FAGrpAM {
    /**
     * This is the default constructor (do not remove).
     */
    public FAGrpAMImpl() {
    }

    /**
     * Container's getter for AppFaGrpPrf1.
     * @return AppFaGrpPrf1
     */
    public ViewObjectImpl getAppFaGrpPrf1() {
        return (ViewObjectImpl) findViewObject("AppFaGrpPrf1");
    }

    /**
     * Container's getter for AppFaGrpRule1.
     * @return AppFaGrpRule1
     */
    public ViewObjectImpl getAppFaGrpRule1() {
        return (ViewObjectImpl) findViewObject("AppFaGrpRule1");
    }

    /**
     * Container's getter for Dual1.
     * @return Dual1
     */
    public ViewObjectImpl getDual1() {
        return (ViewObjectImpl) findViewObject("Dual1");
    }

    /**
     * Container's getter for GrpToGrpRuleVL1.
     * @return GrpToGrpRuleVL1
     */
    public ViewLinkImpl getGrpToGrpRuleVL1() {
        return (ViewLinkImpl) findViewLink("GrpToGrpRuleVL1");
    }

    public void filter() {
        ViewObjectImpl prf = getAppFaGrpPrf1();
        prf.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        prf.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        prf.setNamedWhereClauseParam("BindCntryId", ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_CNTRY_PRF_ID}"));
        prf.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        //       prf.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        prf.executeQuery();
    }

    /**
     * Container's getter for LovGrp1.
     * @return LovGrp1
     */
    public ViewObjectImpl getLovGrp1() {
        return (ViewObjectImpl) findViewObject("LovGrp1");
    }

    public String searchAction(String GroupId, String GroupDesc) {
        System.out.println("GroupId = " + GroupId + " GroupDesc = " + GroupDesc);
        ViewObjectImpl d = getDual1();
        Row currentRow = d.getCurrentRow();
        if (currentRow != null) {
            Object GrpIdTrans = currentRow.getAttribute("GrpIdTrans");
            Object GroupDescTrans = currentRow.getAttribute("GroupDescTrans");
            System.out.println("GroupDescTrans = " + GroupDescTrans + " GrpIdTrans = " + GrpIdTrans);
            ViewObjectImpl prf = getAppFaGrpPrf1();
            prf.setNamedWhereClauseParam("BindGrpDesc", GroupDescTrans);
            prf.setNamedWhereClauseParam("BindGrpId", GrpIdTrans);
            prf.executeQuery();

        }

        return null;
    }

    public String resetAction() {
        ViewObjectImpl prf = getAppFaGrpPrf1();
        prf.setNamedWhereClauseParam("BindGrpDesc", null);
        prf.setNamedWhereClauseParam("BindGrpId", null);
        prf.executeQuery();
        return null;
    }

    public String replicateDataToOrg() {
        ViewObjectImpl prf = getAppFaGrpPrf1();
        Row currentRow = prf.getCurrentRow();
        if (currentRow != null) {
            Object Finalize1 = currentRow.getAttribute("Finalize11");
            if (Finalize1 != null) {
                if (Finalize1.toString().equalsIgnoreCase("Y")) {
                    System.out.println("beofre function calling");
                    getDBTransaction().postChanges();

                    Object callFunction =
                        ADFModelUtils.callFunction(this.getRootApplicationModule(),
                                                   new StringBuilder("app.FN_REP_FA_ITM_GRP_RULE(?,?,?,?,?,?)"), new Object[] {
                                                   EbizParams.GLBL_APP_CLD_ID(), currentRow.getAttribute("CntryId"),
                                                   EbizParams.GLBL_APP_SERV_LOC(), currentRow.getAttribute("FaPrfId"),
                                                   currentRow.getAttribute("FaGrpId"), EbizParams.GLBL_APP_USR()
                    }, Types.VARCHAR);
                    getDBTransaction().postChanges();
                    Object function =
                        ADFModelUtils.callFunction(this.getRootApplicationModule(),
                                                   new StringBuilder("app.fn_rep_fa_itm_rule(?,?,?,?,?,?,?)"), new Object[] {
                                                   EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_HO_ORG_ID(),
                                                   currentRow.getAttribute("CntryId"), EbizParams.GLBL_APP_SERV_LOC(),
                                                   currentRow.getAttribute("FaPrfId"),
                                                   currentRow.getAttribute("FaGrpId"), null
                    }, Types.VARCHAR);
                    System.out.println("callFunction = " + callFunction + " function = " + function);
                }
            }
        }
        return null;
    }

    public String groupnameValid(String Name) {
        System.out.println("Name = " + Name);
        ViewObjectImpl grp = getLovGrp1();
        grp.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        grp.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        grp.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());

        grp.setNamedWhereClauseParam("BindGrpId", null);
        grp.setNamedWhereClauseParam("BindGrpIdDisp", null);

        grp.executeQuery();
        Row[] filteredRows = grp.getFilteredRows("GroupName", Name);
        if (filteredRows.length > 0) {
            Object GrpId = filteredRows[0].getAttribute("GrpId");
            System.out.println("GrpId = " + GrpId);
            if (GrpId != null) {
                ViewObjectImpl prf = getAppFaGrpPrf1();
                Row currentRow = prf.getCurrentRow();
                Row[] row = prf.getFilteredRows("FaGrpId", GrpId);
                System.out.println("row = " + row.length);
                for (int i = 0; i < row.length; i++) {
                    System.out.println("row[i]!=currentRow = " + (row[i] != currentRow));
                    if (row[i] != currentRow) {
                        return "Y";
                    }
                }
            }
        }

        return null;
    }

    public String allRequiredValid() {
        ViewObjectImpl r = getAppFaGrpRule1();
        RowSetIterator rsi = r.createRowSetIterator(null);
        while (rsi.hasNext()) {
            Row next = rsi.next();
            if (next != null) {
                Object FaGrpRuleEffDate = next.getAttribute("FaGrpRuleEffDate");
                if (FaGrpRuleEffDate == null) {
                    return "N";
                }
                if (!ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_IT_LAW}").equals("IT")) {
                    Object DepMthdCoLaw = next.getAttribute("DepMthdCoLaw");
                    if (DepMthdCoLaw == null)
                        return "N";
                    Object DepPerCoLaw = next.getAttribute("DepPerCoLaw");
                    if (DepPerCoLaw == null) {
                        return "N";
                    }
                    Object DepShiftNo = next.getAttribute("DepShiftNo");
                    if (DepShiftNo == null &&
                        ADFModelUtils.resolvEl("pageFlowScope.GLBL_SHIFT_ALW").toString().equalsIgnoreCase("Y"))
                        return "N";
                }
                if (!ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_IT_LAW}").equals("CO")) {
                    Object DepMthdItLaw = next.getAttribute("DepMthdItLaw");
                    if (DepMthdItLaw == null)
                        return "N";
                    Object DepPerItLaw = next.getAttribute("DepPerItLaw");
                    if (DepPerItLaw == null)
                        return "N";
                    /*  Object DepShiftNo = next.getAttribute("DepShiftNo");
                    if (DepShiftNo == null) {
                        return "N";
                    } */

                }

            }
        }
        rsi.closeRowSetIterator();
        return "Y";
    }

    public String coLawDuplicate(String law) {
        ViewObjectImpl r = getAppFaGrpRule1();
        Row currentRow = r.getCurrentRow();
        RowSetIterator rsi = r.createRowSetIterator(null);
        while (rsi.hasNext()) {
            Row next = rsi.next();
            if (next != currentRow) {
                if (next.getAttribute("DepMthdCoLaw").equals(law)) {
                    return "Y";
                }
            }

        }
        rsi.closeRowSetIterator();
        return "N";
    }

    public String shiftDuplicate(Integer shift) {
        ViewObjectImpl r = getAppFaGrpRule1();
        Row currentRow = r.getCurrentRow();
        Object effdt = null;
        System.out.println("shiftt in amimpll is===" + shift);
        effdt = currentRow.getAttribute("FaGrpRuleEffDate");
        System.out.println("date before prf =" + effdt);

        if (effdt == null) {
            ViewObjectImpl prf = getAppFaGrpPrf1();
            Row row = prf.getCurrentRow();
            effdt = row.getAttribute("EffDate");
        }
        System.out.println("date after prf =" + effdt);
        RowSetIterator rsi = r.createRowSetIterator(null);
        while (rsi.hasNext()) {
            Row next = rsi.next();
            if (next != currentRow) {
                System.out.println("next.getAttribute(\"DepShiftNo\") =>>>>> " +
                                   Integer.parseInt(next.getAttribute("DepShiftNo").toString()) + " shift = " + shift);
                System.out.println("next.getAttribute(\"FaGrpRuleEffDate\").toString() = " +
                                   next.getAttribute("FaGrpRuleEffDate").toString());
                System.out.println("effdt  = " + effdt);
                if (next.getAttribute("DepShiftNo").equals(shift) && effdt != null) {
                    System.out.println("next.getAttribute(\"FaGrpRuleEffDate\").toString() = " +
                                       next.getAttribute("FaGrpRuleEffDate").toString());
                    System.out.println("effdt.toString() = " + effdt);
                    if (next.getAttribute("FaGrpRuleEffDate").toString().equals(effdt.toString())) {
                        System.out.println("before returning y");
                        return "Y";
                    }
                }
            }

        }
        rsi.closeRowSetIterator();
        return "N";
    }

    public String refreshItem() {
        Object callFunction =
            ADFModelUtils.callFunction(this.getRootApplicationModule(),
                                       new StringBuilder("app.fn_rep_fa_itm_rule_ref(?,?,?,?,?)"), new Object[] {
                                       EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_HO_ORG_ID(),
                                       Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_CNTRY_PRF_ID}").toString()),
                                       EbizParams.GLBL_APP_SERV_LOC(),
                                       Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_PRF_ID}").toString())
        }, Types.VARCHAR);
        System.out.println("callFunction = " + callFunction);
        getDBTransaction().commit();
       
        return null;
    }

}

