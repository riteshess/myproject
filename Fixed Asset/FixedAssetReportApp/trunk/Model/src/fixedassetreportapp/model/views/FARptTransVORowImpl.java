package fixedassetreportapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import oracle.jbo.domain.Timestamp;

import java.sql.Types;

import java.util.Date;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 29 14:37:32 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FARptTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        CoaNmTrans,
        CoaIdTrans,
        ItemIdTrans,
        ItemNameTrans,
        ItemGrpIdTrans,
        ItemGrpNameTrans,
        FromDtTrans,
        ToDtTrans,
        FyIdTrans,
        FileTypeTrans,
        FADocIdTrans,
        FAIdTrans,
        DepDocIdTrans,
        DepIdTrans,
        LOVCoaNmVO1,
        LOVItemNmVO1,
        LOVItemGrpVO1,
        LOVFyIdVO1,
        LOVOrgNmVO,
        LOVFileTyeVO,
        LOVFAIdVO1,
        LOVDepIdVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int COANMTRANS = AttributesEnum.CoaNmTrans.index();
    public static final int COAIDTRANS = AttributesEnum.CoaIdTrans.index();
    public static final int ITEMIDTRANS = AttributesEnum.ItemIdTrans.index();
    public static final int ITEMNAMETRANS = AttributesEnum.ItemNameTrans.index();
    public static final int ITEMGRPIDTRANS = AttributesEnum.ItemGrpIdTrans.index();
    public static final int ITEMGRPNAMETRANS = AttributesEnum.ItemGrpNameTrans.index();
    public static final int FROMDTTRANS = AttributesEnum.FromDtTrans.index();
    public static final int TODTTRANS = AttributesEnum.ToDtTrans.index();
    public static final int FYIDTRANS = AttributesEnum.FyIdTrans.index();
    public static final int FILETYPETRANS = AttributesEnum.FileTypeTrans.index();
    public static final int FADOCIDTRANS = AttributesEnum.FADocIdTrans.index();
    public static final int FAIDTRANS = AttributesEnum.FAIdTrans.index();
    public static final int DEPDOCIDTRANS = AttributesEnum.DepDocIdTrans.index();
    public static final int DEPIDTRANS = AttributesEnum.DepIdTrans.index();
    public static final int LOVCOANMVO1 = AttributesEnum.LOVCoaNmVO1.index();
    public static final int LOVITEMNMVO1 = AttributesEnum.LOVItemNmVO1.index();
    public static final int LOVITEMGRPVO1 = AttributesEnum.LOVItemGrpVO1.index();
    public static final int LOVFYIDVO1 = AttributesEnum.LOVFyIdVO1.index();
    public static final int LOVORGNMVO = AttributesEnum.LOVOrgNmVO.index();
    public static final int LOVFILETYEVO = AttributesEnum.LOVFileTyeVO.index();
    public static final int LOVFAIDVO1 = AttributesEnum.LOVFAIdVO1.index();
    public static final int LOVDEPIDVO = AttributesEnum.LOVDepIdVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FARptTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
       return (String)resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
       // return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
       return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC }").toString());
       // return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        //return (String) getAttributeInternal(ORGID);
        return (String)resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
       // return (String) getAttributeInternal(HOORGID);
        return (String)resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNmTrans.
     * @return the CoaNmTrans
     */
    public String getCoaNmTrans() {
        return (String) getAttributeInternal(COANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNmTrans.
     * @param value value to set the  CoaNmTrans
     */
    public void setCoaNmTrans(String value) {
        setAttributeInternal(COANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaIdTrans.
     * @return the CoaIdTrans
     */
    public Integer getCoaIdTrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaIdTrans.
     * @param value value to set the  CoaIdTrans
     */
    public void setCoaIdTrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIdTrans.
     * @return the ItemIdTrans
     */
    public String getItemIdTrans() {
        return (String) getAttributeInternal(ITEMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIdTrans.
     * @param value value to set the  ItemIdTrans
     */
    public void setItemIdTrans(String value) {
        setAttributeInternal(ITEMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameTrans.
     * @return the ItemNameTrans
     */
    public String getItemNameTrans() {
        return (String) getAttributeInternal(ITEMNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameTrans.
     * @param value value to set the  ItemNameTrans
     */
    public void setItemNameTrans(String value) {
        setAttributeInternal(ITEMNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGrpIdTrans.
     * @return the ItemGrpIdTrans
     */
    public String getItemGrpIdTrans() {
        return (String) getAttributeInternal(ITEMGRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGrpIdTrans.
     * @param value value to set the  ItemGrpIdTrans
     */
    public void setItemGrpIdTrans(String value) {
        setAttributeInternal(ITEMGRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGrpNameTrans.
     * @return the ItemGrpNameTrans
     */
    public String getItemGrpNameTrans() {
        return (String) getAttributeInternal(ITEMGRPNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGrpNameTrans.
     * @param value value to set the  ItemGrpNameTrans
     */
    public void setItemGrpNameTrans(String value) {
        setAttributeInternal(ITEMGRPNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDtTrans.
     * @return the FromDtTrans
     */
    public Timestamp getFromDtTrans() {
         return (Timestamp) getAttributeInternal(FROMDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDtTrans.
     * @param value value to set the  FromDtTrans
     */
    public void setFromDtTrans(Timestamp value) {
        setAttributeInternal(FROMDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDtTrans.
     * @return the ToDtTrans
     */
    public Timestamp getToDtTrans() {
//       return ((oracle.jbo.domain.Timestamp) getAttributeInternal(TODTTRANS)==null?new oracle.jbo.domain.Timestamp(System.currentTimeMillis()):(oracle.jbo.domain.Timestamp) getAttributeInternal(TODTTRANS));
        return (Timestamp) getAttributeInternal(TODTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDtTrans.
     * @param value value to set the  ToDtTrans
     */
    public void setToDtTrans(Timestamp value) {
        setAttributeInternal(TODTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyIdTrans.
     * @return the FyIdTrans
     */
    public Integer getFyIdTrans() {
        Integer fyId =null;
        try{
       fyId = (Integer) (callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {
                                                           getCldId() , getOrgId(), new Timestamp(System.currentTimeMillis())
              }));
        }catch (Exception e){
            e.printStackTrace();
        }
        return ((Integer) getAttributeInternal(FYIDTRANS) == null) ? fyId : (Integer) getAttributeInternal(FYIDTRANS);
        //        return (String) getAttributeInternal(FYIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyIdTrans.
     * @param value value to set the  FyIdTrans
     */
    public void setFyIdTrans(Integer value) {
        setAttributeInternal(FYIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FileTypeTrans.
     * @return the FileTypeTrans
     */
    public String getFileTypeTrans() {
        if(getAttributeInternal(FILETYPETRANS)==null){
            return "PDF";
        }else
        return (String) getAttributeInternal(FILETYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FileTypeTrans.
     * @param value value to set the  FileTypeTrans
     */
    public void setFileTypeTrans(String value) {
        setAttributeInternal(FILETYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FADocIdTrans.
     * @return the FADocIdTrans
     */
    public String getFADocIdTrans() {
        return (String) getAttributeInternal(FADOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FADocIdTrans.
     * @param value value to set the  FADocIdTrans
     */
    public void setFADocIdTrans(String value) {
        setAttributeInternal(FADOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FAIdTrans.
     * @return the FAIdTrans
     */
    public String getFAIdTrans() {
        return (String) getAttributeInternal(FAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FAIdTrans.
     * @param value value to set the  FAIdTrans
     */
    public void setFAIdTrans(String value) {
        setAttributeInternal(FAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepDocIdTrans.
     * @return the DepDocIdTrans
     */
    public String getDepDocIdTrans() {
        return (String) getAttributeInternal(DEPDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepDocIdTrans.
     * @param value value to set the  DepDocIdTrans
     */
    public void setDepDocIdTrans(String value) {
        setAttributeInternal(DEPDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepIdTrans.
     * @return the DepIdTrans
     */
    public String getDepIdTrans() {
        return (String) getAttributeInternal(DEPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepIdTrans.
     * @param value value to set the  DepIdTrans
     */
    public void setDepIdTrans(String value) {
        setAttributeInternal(DEPIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCoaNmVO1.
     */
    public RowSet getLOVCoaNmVO1() {
        return (RowSet) getAttributeInternal(LOVCOANMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemNmVO1.
     */
    public RowSet getLOVItemNmVO1() {
        return (RowSet) getAttributeInternal(LOVITEMNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemGrpVO1.
     */
    public RowSet getLOVItemGrpVO1() {
        return (RowSet) getAttributeInternal(LOVITEMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFyIdVO1.
     */
    public RowSet getLOVFyIdVO1() {
        return (RowSet) getAttributeInternal(LOVFYIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgNmVO.
     */
    public RowSet getLOVOrgNmVO() {
        return (RowSet) getAttributeInternal(LOVORGNMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFileTyeVO.
     */
    public RowSet getLOVFileTyeVO() {
        return (RowSet) getAttributeInternal(LOVFILETYEVO);
    }
    //user defined to call the SQL Function or Procedure.

    /**
     * Gets the view accessor <code>RowSet</code> LOVFAIdVO1.
     */
    public RowSet getLOVFAIdVO1() {
        return (RowSet) getAttributeInternal(LOVFAIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDepIdVO.
     */
    public RowSet getLOVDepIdVO() {
        return (RowSet) getAttributeInternal(LOVDEPIDVO);
    }
    
    public Object resolvEl(String data) {
        ADFContext adfCtx = ADFContext.getCurrent();
        ELContext elContext = adfCtx.getELContext();
        ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext).toString();

        return Message;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
           CallableStatement st = null;
           try {
               // 1. Create a JDBC CallabledStatement
               st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               // 2. Register the first bind variable for the return value
               st.registerOutParameter(1, sqlReturnType);
               if (bindVars != null) {
                   // 3. Loop over values for the bind variables passed in, if any
                   for (int z = 0; z < bindVars.length; z++) {
                       // 4. Set the value of user-supplied bind vars in the stmt
                       st.setObject(z + 2, bindVars[z]);
                   }
               }
               // 5. Set the value of user-supplied bind vars in the stmt
               st.executeUpdate();
               // 6. Return the value of the first bind variable
               return st.getObject(1);
           } catch (SQLException e) {
               throw new JboException(e);
           } finally {
               if (st != null) {
                   try {
                       // 7. Close the statement
                       st.close();
                   } catch (SQLException e) {
                   }
               }
           }
       }

}

