package fadepreciationapp.model.views;

import fadepreciationapp.model.service.FADeprecationAMImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 15 14:13:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class itemHistoryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        HoOrgId,
        SlocId,
        OrgId,
        FyId,
        PrdId,
        DepExeId,
        ItmGrpId,
        ItmId,
        ItmLblId,
        ItmSeqId,
        DepLawTyp,
        DepShftCoLaw,
        ItmCostCoLaw,
        ItmCostCoLawOpBal,
        DepAccCoLaw,
        DepProcExecFreq,
        DepEfftStDt,
        DepEfftEndDt,
        ItmStDt,
        ItmEndDt,
        FaLnStatus,
        DocId,
        DepExeDispId,
        TransFyDesc,
        TransPrdNm,
        TransItmNm,
        TransGroupNm;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int PRDID = AttributesEnum.PrdId.index();
    public static final int DEPEXEID = AttributesEnum.DepExeId.index();
    public static final int ITMGRPID = AttributesEnum.ItmGrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMLBLID = AttributesEnum.ItmLblId.index();
    public static final int ITMSEQID = AttributesEnum.ItmSeqId.index();
    public static final int DEPLAWTYP = AttributesEnum.DepLawTyp.index();
    public static final int DEPSHFTCOLAW = AttributesEnum.DepShftCoLaw.index();
    public static final int ITMCOSTCOLAW = AttributesEnum.ItmCostCoLaw.index();
    public static final int ITMCOSTCOLAWOPBAL = AttributesEnum.ItmCostCoLawOpBal.index();
    public static final int DEPACCCOLAW = AttributesEnum.DepAccCoLaw.index();
    public static final int DEPPROCEXECFREQ = AttributesEnum.DepProcExecFreq.index();
    public static final int DEPEFFTSTDT = AttributesEnum.DepEfftStDt.index();
    public static final int DEPEFFTENDDT = AttributesEnum.DepEfftEndDt.index();
    public static final int ITMSTDT = AttributesEnum.ItmStDt.index();
    public static final int ITMENDDT = AttributesEnum.ItmEndDt.index();
    public static final int FALNSTATUS = AttributesEnum.FaLnStatus.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DEPEXEDISPID = AttributesEnum.DepExeDispId.index();
    public static final int TRANSFYDESC = AttributesEnum.TransFyDesc.index();
    public static final int TRANSPRDNM = AttributesEnum.TransPrdNm.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSGROUPNM = AttributesEnum.TransGroupNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public itemHistoryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdId.
     * @return the PrdId
     */
    public Integer getPrdId() {
        return (Integer) getAttributeInternal(PRDID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepExeId.
     * @return the DepExeId
     */
    public String getDepExeId() {
        return (String) getAttributeInternal(DEPEXEID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpId.
     * @return the ItmGrpId
     */
    public String getItmGrpId() {
        return (String) getAttributeInternal(ITMGRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmLblId.
     * @return the ItmLblId
     */
    public String getItmLblId() {
        return (String) getAttributeInternal(ITMLBLID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSeqId.
     * @return the ItmSeqId
     */
    public Long getItmSeqId() {
        return (Long) getAttributeInternal(ITMSEQID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepLawTyp.
     * @return the DepLawTyp
     */
    public String getDepLawTyp() {
        return (String) getAttributeInternal(DEPLAWTYP);
    }

    /**
     * Gets the attribute value for the calculated attribute DepShftCoLaw.
     * @return the DepShftCoLaw
     */
    public Integer getDepShftCoLaw() {
        return (Integer) getAttributeInternal(DEPSHFTCOLAW);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmCostCoLaw.
     * @return the ItmCostCoLaw
     */
    public oracle.jbo.domain.Number getItmCostCoLaw() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ITMCOSTCOLAW);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmCostCoLawOpBal.
     * @return the ItmCostCoLawOpBal
     */
    public Number getItmCostCoLawOpBal() {
        return (Number) getAttributeInternal(ITMCOSTCOLAWOPBAL);
    }

    /**
     * Gets the attribute value for the calculated attribute DepAccCoLaw.
     * @return the DepAccCoLaw
     */
    public Number getDepAccCoLaw() {
        return (Number) getAttributeInternal(DEPACCCOLAW);
    }

    /**
     * Gets the attribute value for the calculated attribute DepProcExecFreq.
     * @return the DepProcExecFreq
     */
    public String getDepProcExecFreq() {
        return (String) getAttributeInternal(DEPPROCEXECFREQ);
    }

    /**
     * Gets the attribute value for the calculated attribute DepEfftStDt.
     * @return the DepEfftStDt
     */
    public Date getDepEfftStDt() {
        return (Date) getAttributeInternal(DEPEFFTSTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute DepEfftEndDt.
     * @return the DepEfftEndDt
     */
    public Date getDepEfftEndDt() {
        return (Date) getAttributeInternal(DEPEFFTENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmStDt.
     * @return the ItmStDt
     */
    public Date getItmStDt() {
        return (Date) getAttributeInternal(ITMSTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmEndDt.
     * @return the ItmEndDt
     */
    public Date getItmEndDt() {
        return (Date) getAttributeInternal(ITMENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute FaLnStatus.
     * @return the FaLnStatus
     */
    public String getFaLnStatus() {
        return (String) getAttributeInternal(FALNSTATUS);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute DepExeDispId.
     * @return the DepExeDispId
     */
    public String getDepExeDispId() {
        return (String) getAttributeInternal(DEPEXEDISPID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFyDesc.
     * @return the TransFyDesc
     */
    public String getTransFyDesc() {
        FADeprecationAMImpl am = (FADeprecationAMImpl) this.getApplicationModule();
        ViewObjectImpl descVO = am.getLovFYDescVO();
        descVO.setNamedWhereClauseParam("bindcldid", getCldId());
        descVO.setNamedWhereClauseParam("bindorgid", getOrgId());
        descVO.executeQuery();
        Row[] filteredRows = descVO.getFilteredRows("OrgFyId", getFyId());
        if (filteredRows.length > 0)
            return filteredRows[0].getAttribute("FyDesc").toString();
        else
            return (String) getAttributeInternal(TRANSFYDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFyDesc.
     * @param value value to set the  TransFyDesc
     */
    public void setTransFyDesc(String value) {
        setAttributeInternal(TRANSFYDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrdNm.
     * @return the TransPrdNm
     */
    public String getTransPrdNm() {
        FADeprecationAMImpl am = (FADeprecationAMImpl) this.getApplicationModule();
        ViewObjectImpl prdVO = am.getLovPeriodVO();
        prdVO.setNamedWhereClauseParam("BIndCldId", getCldId());
        prdVO.setNamedWhereClauseParam("BindOrgId", getOrgId());
        prdVO.setNamedWhereClauseParam("BindOrgFyId", getFyId());
        prdVO.executeQuery();
        Row[] filteredRows = prdVO.getFilteredRows("PrdId", getPrdId());
        if (filteredRows.length > 0)
            return filteredRows[0].getAttribute("Prd").toString();
        else
            return (String) getAttributeInternal(TRANSPRDNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrdNm.
     * @param value value to set the  TransPrdNm
     */
    public void setTransPrdNm(String value) {
        setAttributeInternal(TRANSPRDNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        FADeprecationAMImpl am = (FADeprecationAMImpl) this.getApplicationModule();
        ViewObjectImpl itmVO = am.getLovItemVO();
        itmVO.setNamedWhereClauseParam("BindCldId", getCldId());
        itmVO.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
        itmVO.setNamedWhereClauseParam("BindOrgId", getOrgId());
        itmVO.setNamedWhereClauseParam("BindSlocId", getSlocId());
        itmVO.setNamedWhereClauseParam("BindItmGrpId", getItmGrpId());
        itmVO.setNamedWhereClauseParam("BindItmId", getItmId());
        itmVO.executeQuery();
        Row[] filteredRows = itmVO.getFilteredRows("ItmId", getItmId());
        if (filteredRows.length > 0)
            return filteredRows[0].getAttribute("ItmDesc").toString();
        else
            return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGroupNm.
     * @return the TransGroupNm
     */
    public String getTransGroupNm() {
        FADeprecationAMImpl am = (FADeprecationAMImpl) this.getApplicationModule();
        ViewObjectImpl itmGrpVO = am.getLovItmGrpVO();
        itmGrpVO.setNamedWhereClauseParam("BIndSlocId", getSlocId());
        itmGrpVO.setNamedWhereClauseParam("BindCldId", getCldId());
        itmGrpVO.setNamedWhereClauseParam("BindHoOrgId", getHoOrgId());
        itmGrpVO.setNamedWhereClauseParam("BindOrgId", getOrgId());
        itmGrpVO.setNamedWhereClauseParam("BindGrpId", getItmGrpId());
        itmGrpVO.executeQuery();
        Row[] filteredRows = itmGrpVO.getFilteredRows("FaGrpId", getItmGrpId());
        if (filteredRows.length > 0)
            return filteredRows[0].getAttribute("FaGrpDesc").toString();
        else
            return (String) getAttributeInternal(TRANSGROUPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGroupNm.
     * @param value value to set the  TransGroupNm
     */
    public void setTransGroupNm(String value) {
        setAttributeInternal(TRANSGROUPNM, value);
    }
}

