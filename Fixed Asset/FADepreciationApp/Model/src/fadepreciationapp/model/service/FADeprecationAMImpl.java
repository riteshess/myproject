package fadepreciationapp.model.service;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import fadepreciationapp.model.service.common.FADeprecationAM;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.faces.application.FacesMessage;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.myfaces.trinidad.context.RequestContext;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 30 14:02:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FADeprecationAMImpl extends ApplicationModuleImpl implements FADeprecationAM {
    /**
     * This is the default constructor (do not remove).
     */

    public FADeprecationAMImpl() {
    }
    private static int NUMBER = Types.INTEGER;
    private String execId = null;

    /**
     * Container's getter for MmFaDepDtlVO.
     * @return MmFaDepDtlVO
     */
    public ViewObjectImpl getMmFaDepDtlVO() {
        return (ViewObjectImpl) findViewObject("MmFaDepDtlVO");
    }

    /**
     * Container's getter for MmFaDepVO.
     * @return MmFaDepVO
     */
    public ViewObjectImpl getMmFaDepVO() {
        return (ViewObjectImpl) findViewObject("MmFaDepVO");
    }

    /**
     * Container's getter for FADeprecationVO.
     * @return FADeprecationVO
     */
    public ViewObjectImpl getFADeprecationVO() {
        return (ViewObjectImpl) findViewObject("FADeprecationVO");
    }


    /**
     * Container's getter for CurrFyDesc1.
     * @return CurrFyDesc1
     */
    public ViewObjectImpl getCurrFyDescVO() {
        return (ViewObjectImpl) findViewObject("CurrFyDescVO");
    }

    /**
     * Container's getter for LovLawTyp1.
     * @return LovLawTyp1
     */
    public ViewObjectImpl getLovLawTypVO() {
        return (ViewObjectImpl) findViewObject("LovLawTypVO");
    }


    /**
     * Container's getter for FADepCoLAwDtl1.
     * @return FADepCoLAwDtl1
     */
    public ViewObjectImpl getFADepCoLAwDtlVO() {
        return (ViewObjectImpl) findViewObject("FADepCoLAwDtlVO");
    }

    /**
     * Container's getter for FADepItLawDtl1.
     * @return FADepItLawDtl1
     */
    public ViewObjectImpl getFADepItLawDtlVO() {
        return (ViewObjectImpl) findViewObject("FADepItLawDtlVO");
    }

    public void setBindValiables() {
        ViewObjectImpl depItLawDtlVO = this.getFADepItLawDtlVO();
        ViewObjectImpl depCoLAwDtlVO = this.getFADepCoLAwDtlVO();
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        if (depreciationDualVO.getCurrentRow().getAttribute("TransLawTyp").toString().equalsIgnoreCase("CO")) {
            depCoLAwDtlVO.setNamedWhereClauseParam("BindCldID", EbizParams.GLBL_APP_CLD_ID());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindHoorgid", EbizParams.GLBL_HO_ORG_ID());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindorgId", EbizParams.GLBL_APP_USR_ORG());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindExeId", null);
            depCoLAwDtlVO.setNamedWhereClauseParam("BindFyId",
                                                   Integer.parseInt(depreciationDualVO.getCurrentRow().getAttribute("TransFyId").toString()));
            depCoLAwDtlVO.setNamedWhereClauseParam("BindPrdId",
                                                   Integer.parseInt(depreciationDualVO.getCurrentRow().getAttribute("TransPrdId").toString()));
            depCoLAwDtlVO.executeQuery();
        }
        if (depreciationDualVO.getCurrentRow().getAttribute("TransLawTyp").toString().equalsIgnoreCase("IT")) {
            depItLawDtlVO.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            depItLawDtlVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            depItLawDtlVO.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            depItLawDtlVO.setNamedWhereClauseParam("BindHoorgId", EbizParams.GLBL_HO_ORG_ID());
            depItLawDtlVO.setNamedWhereClauseParam("BindExeId", null);
            depItLawDtlVO.setNamedWhereClauseParam("BindFyId",
                                                   Integer.parseInt(depreciationDualVO.getCurrentRow().getAttribute("TransFyId").toString()));

            depItLawDtlVO.executeQuery();
        }
    }

    public Integer getCurrentpendingUser(Integer docId, String txnDocId, Integer docTypId) {
        Integer currUsrId = Integer.parseInt(callStoredFunction(NUMBER, "APP.WF_GET_CUR_USR(?,?,?,?,?,?)", new Object[] {
                                                                EbizParams.GLBL_APP_SERV_LOC(),
                                                                EbizParams.GLBL_APP_CLD_ID(),
                                                                EbizParams.GLBL_APP_USR_ORG(), docId, txnDocId, docTypId
        }).toString());
        if (currUsrId != null) {
            return currUsrId;
        } else {
            return 0;
        }
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            System.out.println(st.getObject(1));

            return st.getObject(1);

        } catch (SQLException e) {
            e.printStackTrace();
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }

    public String getWFId(Integer docId, Integer docTypId) {
        String wfId = callStoredFunction(Types.VARCHAR, "APP.WF_GET_ID(?,?,?,?,?)", new Object[] {
                                         EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(),
                                         EbizParams.GLBL_APP_USR_ORG(), docId, docTypId
        }).toString();
        if (wfId != null) {
            return wfId;
        } else {
            return null;
        }
    }

    public Integer getUserLevel(String wfid, Integer docId, Integer docTypId) {
        Integer usrLvl = Integer.parseInt(callStoredFunction(Types.INTEGER, "APP.WF_GET_USR_LEVEL(?,?,?,?,?,?,?)", new Object[] {
                                                             EbizParams.GLBL_APP_SERV_LOC(),
                                                             EbizParams.GLBL_APP_CLD_ID(),
                                                             EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(),
                                                             wfid, docId, docTypId
        }).toString());
        if (usrLvl != null) {
            return usrLvl;
        } else {
            return null;
        }
    }

    public void insertInWFTxn(Integer docId, Integer docTypId, String wfId, String depExecId, Integer level) {
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_APP_MOD}").toString().equalsIgnoreCase("V")) {
            depExecId = ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_APP_EXEID}").toString();
        }
        callStoredFunction(NUMBER, "APP.WF_INS_TXN(?,?,?,?,?,?,?,?,?,?,?,?,?,?)", new Object[] {
                           EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_USR_ORG(),
                           docId, docTypId, wfId, depExecId, EbizParams.GLBL_APP_USR(), EbizParams.GLBL_APP_USR(),
                           level, level, "I", "A", new oracle.jbo.domain.Number(0)
        });
    }

    public void afterWorkFlow(String wfReturn) {
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_APP_MOD}").toString().equalsIgnoreCase("V")) {
            execId = ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_APP_EXEID}").toString();
        }
        if (wfReturn.equals("A")) {
            String glVouDispId = genGlVouId(execId);
            StringBuilder message = new StringBuilder("<html><body>");
            message.append("<p><b>Record Approved Successfully </b></p>");
            message.append("<b style='color:blue'>Voucher Id In General Ledger is= " + glVouDispId + "</b>");
            message.append("</body></html>");
            ADFModelUtils.showFacesMessage(message.toString(), message.toString(), FacesMessage.SEVERITY_INFO, null);
        } else {
            if (wfReturn.equals("F")) {
                ADFModelUtils.showFacesMessage("Record Forwared Succesfully", "Record Forwared Succesfully",
                                               FacesMessage.SEVERITY_INFO, null);
            } else if (wfReturn.equals("R")) {
                ADFModelUtils.showFacesMessage("Record Rejected Succesfully", "Record Rejected Succesfully",
                                               FacesMessage.SEVERITY_INFO, null);
            } else if (wfReturn.equals("V")) {
                ADFModelUtils.showFacesMessage("Record Reverted Succesfully", "Record Reverted Succesfully",
                                               FacesMessage.SEVERITY_INFO, null);
            }
        }
    }

    /**
     * Container's getter for DepreciationDual1.
     * @return DepreciationDual1
     */
    public ViewObjectImpl getDepreciationDualVO() {
        return (ViewObjectImpl) findViewObject("DepreciationDualVO");
    }

    public String processDepreciation() {
        String frqncy = null;
        Integer prdid = 0;
        Integer blks = 2;
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        Row currentRow = depreciationDualVO.getCurrentRow();
        if (currentRow.getAttribute("TransPrdId") == null) {
            frqncy = "Y";
            prdid = 0;
        } else {
            frqncy = "M";
            prdid = Integer.parseInt(currentRow.getAttribute("TransPrdId").toString());
        }

        String val = callStoredFunction(Types.VARCHAR, "MM.FN_CHK_DEP_PROC_EXE_ALLOW2(?,?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                        EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                        EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(),
                                        currentRow.getAttribute("TransLawTyp"), currentRow.getAttribute("TransFyId"),
                                        frqncy, prdid, currentRow.getAttribute("TransStrtDate"),
                                        currentRow.getAttribute("TransEndDt"), EbizParams.GLBL_APP_USR()
        }).toString();
        if (val.toString().equalsIgnoreCase("Y")) {
            System.out.println("------------------" + currentRow.getAttribute("TransLawTyp"));
            System.out.println("------------------" + currentRow.getAttribute("TransFyId"));
            System.out.println("------------------" + frqncy);
            System.out.println("------------------" + prdid);
            System.out.println("------------------" + currentRow.getAttribute("TransStrtDate"));
            System.out.println("------------------" + currentRow.getAttribute("TransEndDt"));
            if (currentRow.getAttribute("TransLawTyp").toString().equalsIgnoreCase("CO")) {
                execId = callStoredFunction(Types.VARCHAR, "MM.FN_MM_FA_DEP_CO_LAW(?,?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                            EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                            EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(),
                                            currentRow.getAttribute("TransLawTyp"),
                                            currentRow.getAttribute("TransFyId"), frqncy, prdid,
                                            currentRow.getAttribute("TransStrtDate"),
                                            currentRow.getAttribute("TransEndDt"), EbizParams.GLBL_APP_USR()
                }).toString();


            }
            if (currentRow.getAttribute("TransLawTyp").toString().equalsIgnoreCase("IT")) {
                execId = callStoredFunction(Types.VARCHAR, "MM.FN_MM_FA_DEP_IT_LAW(?,?,?,?,?,?,?,?,?,?,?,?)", new Object[] {
                                            EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                            EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(),
                                            currentRow.getAttribute("TransLawTyp"),
                                            currentRow.getAttribute("TransFyId"), frqncy, blks, prdid,
                                            currentRow.getAttribute("TransFyStrtDt"),
                                            currentRow.getAttribute("TransFyEndDt"), EbizParams.GLBL_APP_USR()
                }).toString();
            }
            System.out.println("Value ExecId111 ::::::::::; " + execId);
            this.getDBTransaction().commit();
            this.getFADepCoLAwDtlVO().executeQuery();
            this.getFADepItLawDtlVO().executeQuery();
            if (execId != null) {
                System.out.println("Value ExecId ::::::::::; " + execId);
                return execId;
            } else {
                System.out.println("returan Val ::::::::::::::::::: " + val);
                return val;
            }
        } else
            System.out.println("-------------------------------------------s");
            return val.toString();

    }

    public String chkStrtDtEndDt() {
        System.out.println("in date check functionnnn");
        String funRes = null;
        Date strtDt = null;
        Date endDt = null;
        Integer count = 0;
        ViewObjectImpl checkDepDtlRowCntVO = this.getcheckDepDtlRowCntVO();
        checkDepDtlRowCntVO.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        checkDepDtlRowCntVO.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        checkDepDtlRowCntVO.setNamedWhereClauseParam("bindCldId", EbizParams.GLBL_APP_CLD_ID());
        checkDepDtlRowCntVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        checkDepDtlRowCntVO.executeQuery();
        Row[] allRowsInRange = checkDepDtlRowCntVO.getAllRowsInRange();
        if (allRowsInRange.length > 0)
            count = Integer.parseInt(allRowsInRange[0].getAttribute("Rowcount").toString());
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        Row currentRow = depreciationDualVO.getCurrentRow();
        if (currentRow.getAttribute("TransLawTyp").toString().equalsIgnoreCase("CO")) {
            strtDt = (Date) currentRow.getAttribute("TransStrtDate");
            endDt = (Date) currentRow.getAttribute("TransEndDt");
        } else {
            strtDt = (Date) currentRow.getAttribute("TransFyStrtDt");
            endDt = (Date) currentRow.getAttribute("TransFyEndDt");
        }
        if (count > 0) {
            funRes = callStoredFunction(Types.VARCHAR, "MM.fn_chk_dep_proc_exe_allow(?,?,?,?,?,?,?)", new Object[] {
                                        EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                        EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(), strtDt, endDt,
                                        currentRow.getAttribute("TransLawTyp")
            }).toString();

            if (funRes != null) {
                return funRes.toString();
            } else {
                return "N";
            }
        } else
            return "NR";
    }

    public String genGlVouId(String execid) {
        String glDispId = null;
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        ViewObjectImpl appDocTxnVO = this.getAppDocTxnVO();
        Row currentRow = depreciationDualVO.getCurrentRow();
        try{
        String glVouId = callStoredFunction(Types.VARCHAR, "MM.fn_dep_vou_trans_to_gl (?,?,?,?,?,?,?,?,?)", new Object[] {
                                            EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                            EbizParams.GLBL_HO_ORG_ID(), EbizParams.GLBL_APP_USR_ORG(), 1, execid,
                                            currentRow.getAttribute("transExecDt"), EbizParams.GLBL_APP_USR(),
                                            currentRow.getAttribute("TransLawTyp")
        }).toString();
            
        this.getDBTransaction().commit();
            System.out.println("glVouId########################"+glVouId);
        appDocTxnVO.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        appDocTxnVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        appDocTxnVO.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        appDocTxnVO.setNamedWhereClauseParam("BindDocTxnId", glVouId);
        appDocTxnVO.executeQuery();
        Row[] allRowsInRange = appDocTxnVO.getAllRowsInRange();
        if (allRowsInRange.length > 0) {
            System.out.println("DisplayId :::::::::::::::: " + allRowsInRange[0].getAttribute("DiaplayId").toString());
            glDispId = allRowsInRange[0].getAttribute("DiaplayId").toString();
        }
        }catch(Exception e){
            e.printStackTrace();
            System.out.println("Stack in Trans Function :::::::::::::::::::::; " + e);
        }
        return glDispId;
    }

    public void setAttVal() {
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        depreciationDualVO.getCurrentRow().setAttribute("TransFyStrtDt", null);
        depreciationDualVO.getCurrentRow().setAttribute("TransFyEndDt", null);
        depreciationDualVO.getCurrentRow().setAttribute("TransFyId", null);
        depreciationDualVO.getCurrentRow().setAttribute("TransPrdId", null);
    }

    /**
     * Container's getter for AppDocTxn1.
     * @return AppDocTxn1
     */
    public ViewObjectImpl getAppDocTxnVO() {
        return (ViewObjectImpl) findViewObject("AppDocTxnVO");
    }

    public void filterViaSearch() {
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_APP_MOD}").toString().equalsIgnoreCase("V") &&
            ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_LAW_TYP_SRCH}").toString().equalsIgnoreCase("IT")) {
            ViewObjectImpl depItLawDtlVO = this.getFADepItLawDtlVO();
            depItLawDtlVO.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            depItLawDtlVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            depItLawDtlVO.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            depItLawDtlVO.setNamedWhereClauseParam("BindHoorgId", EbizParams.GLBL_HO_ORG_ID());
            depItLawDtlVO.setNamedWhereClauseParam("BindExeId",
                                                   ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_APP_EXEID}"));
            depItLawDtlVO.setNamedWhereClauseParam("BindFyId",
                                                   Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_FY_ID}").toString()));
            depItLawDtlVO.executeQuery();
        }
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_APP_MOD}").toString().equalsIgnoreCase("V") &&
            ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_LAW_TYP_SRCH}").toString().equalsIgnoreCase("CO")) {
            ViewObjectImpl depCoLAwDtlVO = this.getFADepCoLAwDtlVO();

            depCoLAwDtlVO.setNamedWhereClauseParam("BindCldID", EbizParams.GLBL_APP_CLD_ID());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindHoorgid", EbizParams.GLBL_HO_ORG_ID());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindorgId", EbizParams.GLBL_APP_USR_ORG());
            depCoLAwDtlVO.setNamedWhereClauseParam("BindExeId",
                                                   ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_APP_EXEID}"));
            depCoLAwDtlVO.setNamedWhereClauseParam("BindFyId",
                                                   Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_FY_ID}").toString()));
            depCoLAwDtlVO.setNamedWhereClauseParam("BindPrdId",
                                                   Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_PRD_ID}").toString()));
            depCoLAwDtlVO.executeQuery();
        }
        this.getDepreciationDualVO().executeQuery();
    }

    /**
     * Container's getter for LovPeriod1.
     * @return LovPeriod1
     */
    public ViewObjectImpl getLovPeriodVO() {
        return (ViewObjectImpl) findViewObject("LovPeriodVO");
    }

    /**
     * Container's getter for LovFYDesc1.
     * @return LovFYDesc1
     */
    public ViewObjectImpl getLovFYDescVO() {
        return (ViewObjectImpl) findViewObject("LovFYDescVO");
    }

    public void depProcessDellete() {
        ViewObjectImpl depreciationDualVO = this.getDepreciationDualVO();
        Row currentRow = depreciationDualVO.getCurrentRow();
        Integer fyid = Integer.parseInt(currentRow.getAttribute("TransFyId").toString());
        Integer prdId = Integer.parseInt(currentRow.getAttribute("TransPrdId").toString());
        if (ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_APP_MOD}").toString().equalsIgnoreCase("V")) {
            execId = ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_APP_EXEID}").toString();
            fyid = Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_FY_ID}").toString());
            prdId = Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_PRD_ID}").toString());
        }
        callStoredFunction(Types.VARCHAR, "MM.FN_FA_DEP_EXE_DEL (?,?,?,?,?,?,?)", new Object[] {
                           EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_HO_ORG_ID(),
                           EbizParams.GLBL_APP_USR_ORG(), execId, fyid, prdId
        });
        this.getDBTransaction().commit();
        RequestContext.getCurrentInstance().getPageFlowScope().put("GLBL_APP_MOD", "A");
        this.getFADepCoLAwDtlVO().executeQuery();
        this.getFADepItLawDtlVO().executeQuery();
        this.getDepreciationDualVO().executeQuery();
    }

    /**
     * Container's getter for itemHistory1.
     * @return itemHistory1
     */
    public ViewObjectImpl getitemHistoryVO() {
        return (ViewObjectImpl) findViewObject("itemHistoryVO");
    }

    /**
     * Container's getter for LovItem1.
     * @return LovItem1
     */
    public ViewObjectImpl getLovItemVO() {
        return (ViewObjectImpl) findViewObject("LovItemVO");
    }

    public void executeHistoryVO() {
        ViewObjectImpl historyVO = this.getitemHistoryVO();
        historyVO.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        historyVO.setNamedWhereClauseParam("BindHoorgId", EbizParams.GLBL_HO_ORG_ID());
        historyVO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        historyVO.setNamedWhereClauseParam("BindFyId",
                                           Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_FY_ID}").toString()));
        historyVO.setNamedWhereClauseParam("BindPrdId",
                                           Integer.parseInt(ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_PRD_ID}").toString()));
        historyVO.setNamedWhereClauseParam("BindLawTyp", ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_LAW_TYP}"));
        historyVO.setNamedWhereClauseParam("BindDocId", ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_DOC_ID}"));
        historyVO.setNamedWhereClauseParam("BindItmId", ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_ITM_ID}"));
        historyVO.setNamedWhereClauseParam("BindLblId", ADFModelUtils.resolvEl("#{pageFlowScope.PARAM_ITM_LBL}"));
        historyVO.setNamedWhereClauseParam("BindItmGrpId", null);
        historyVO.executeQuery();

    }

    public void setGlblParamforItemHostory() {
        if (this.getDepreciationDualVO().getCurrentRow().getAttribute("TransLawTyp").toString().equalsIgnoreCase("CO")) {
            Row currentRow = this.getFADepCoLAwDtlVO().getCurrentRow();
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_DOC_ID",
                                                                       currentRow.getAttribute("DocId"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("GLBL_FY_ID",
                                                                       Integer.parseInt(currentRow.getAttribute("FyId").toString()));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_PRD_ID",
                                                                       Integer.parseInt(currentRow.getAttribute("PrdId").toString()));
            RequestContext.getCurrentInstance().getPageFlowScope().put("GLBL_LAW_TYP",
                                                                       currentRow.getAttribute("DepLawTyp"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_ITM_LBL",
                                                                       currentRow.getAttribute("ItmLblId"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_ITM_ID",
                                                                       currentRow.getAttribute("ItmId"));
        }
        if (this.getDepreciationDualVO().getCurrentRow().getAttribute("TransLawTyp").toString().equalsIgnoreCase("IT")) {
            Row currentRow = this.getFADepItLawDtlVO().getCurrentRow();
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_DOC_ID",
                                                                       currentRow.getAttribute("DocId"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("GLBL_FY_ID",
                                                                       Integer.parseInt(currentRow.getAttribute("FyId").toString()));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_PRD_ID",
                                                                       Integer.parseInt(currentRow.getAttribute("PrdId").toString()));
            RequestContext.getCurrentInstance().getPageFlowScope().put("GLBL_LAW_TYP",
                                                                       currentRow.getAttribute("DepLawTyp"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_ITM_LBL",
                                                                       currentRow.getAttribute("ItmLblId"));
            RequestContext.getCurrentInstance().getPageFlowScope().put("PARAM_ITM_ID",
                                                                       currentRow.getAttribute("ItmId"));
        }
    }

    /**
     * Container's getter for LovItmGrp1.
     * @return LovItmGrp1
     */
    public ViewObjectImpl getLovItmGrpVO() {
        return (ViewObjectImpl) findViewObject("LovItmGrpVO");
    }

    /**
     * Container's getter for checkDepDtlRowCnt1.
     * @return checkDepDtlRowCnt1
     */
    public ViewObjectImpl getcheckDepDtlRowCntVO() {
        return (ViewObjectImpl) findViewObject("checkDepDtlRowCntVO");
    }

    public String InvoiceCountMethodAM() {
        System.out.println("in invoicee call method");
        ViewObjectImpl VO = this.getInvoiceCount1();
        VO.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        VO.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        VO.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        VO.setNamedWhereClauseParam("BindDocId", null);
        VO.executeQuery();
        if (VO.getRowCount() == 0) {
            return "Y";
        } else {
            return "N";
        }

    }


    /**
     * Container's getter for InvoiceCount1.
     * @return InvoiceCount1
     */
    public ViewObjectImpl getInvoiceCount1() {
        return (ViewObjectImpl) findViewObject("InvoiceCount1");
    }
}

