package application.model.services;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.client.Configuration;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 09 14:30:55 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class tokenAppAMImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public tokenAppAMImpl() {
    }

    /**
     * Container's getter for tokenApp1.
     * @return tokenApp1
     */
    public ViewObjectImpl gettokenApp1() {
        return (ViewObjectImpl) findViewObject("tokenApp1");
    }
    
    public void releaseAm(tokenAppAMImpl am) {
        Configuration.releaseRootApplicationModule(am, true);
    }
    public tokenAppAMImpl getAm() {
        String appModuleName = "application.model.services.tokenAppAM";
        String appModuleConfig = "tokenAppAMLocal";
        return (tokenAppAMImpl)Configuration.createRootApplicationModule(appModuleName, appModuleConfig);
    }

    @SuppressWarnings("unchecked")
    public Map getInfo(String token){
        System.out.println("Inner Function");
        Map map = new HashMap();
        tokenAppAMImpl am = getAm();
        ViewObjectImpl tkn = am.gettokenApp1();
        tkn.setNamedWhereClauseParam("BindToken", token);
        tkn.executeQuery();
        RowSetIterator itr = tkn.createRowSetIterator(null);
        while(itr.hasNext()){
            Row row = itr.next();
            map.put("srvrId", row.getAttribute("ClientWlsIp"));
            map.put("domain" ,"null");
            map.put("port",row.getAttribute("ClientWlsPort"));
            map.put("cldId" ,"0000");
            map.put("slocID",1);
            map.put("hoNm","Eastern Software System Pvt.Ltd.");
            map.put("usr","Valid");
        }
        itr.closeRowSetIterator();
        releaseAm(am);
        am = null;
        if(map.get("srvrId")==null){
            map.put("srvrId", "null");
            map.put("domain" ,"null");
            map.put("port","null");
            map.put("usr","Invalid");
            map.put("msg","Invalid Token");
            return map;
        }else{
        return map;
        }
        
    }
    @SuppressWarnings("unchecked")
    public Map getSysInfo(){
        Map map = new HashMap();
        Map inner = null;
        List list =  new ArrayList();
        tokenAppAMImpl am = getAm();
        ViewObjectImpl sys = am.getSystem1();
        RowSetIterator itr = sys.createRowSetIterator(null);
        while(itr.hasNext()){
            inner = new HashMap();
            Row row = itr.next();
            inner.put("Parameter", row.getAttribute("Param"));
            inner.put("sysValue" ,row.getAttribute("SystemValue"));
            inner.put("reqValue",row.getAttribute("Req"));
            inner.put("Compliance" ,row.getAttribute("Compliance"));
            list.add(inner);
        }
        itr.closeRowSetIterator();
        releaseAm(am);
        am = null;
        map.put("SystemValue", list);
        return map;
    }
    
    @SuppressWarnings("unchecked")
    public Map getBannerInfo(){
        Map map = new HashMap();
        Map inner = null;
        List list =  new ArrayList();
        tokenAppAMImpl am = getAm();
        ViewObjectImpl bnr = am.getBanner1();
        RowSetIterator itr = bnr.createRowSetIterator(null);
        while(itr.hasNext()){
            inner = new HashMap();
            Row row = itr.next();
            inner.put("Parameter", row.getAttribute("Banner"));
            inner.put("sysValue" ,row.getAttribute("SnapTime"));
            list.add(inner);
        }
        itr.closeRowSetIterator();
        releaseAm(am);
        am = null;
        map.put("BannerInfo", list);
        return map;
    }

    /**
     * Container's getter for System1.
     * @return System1
     */
    public ViewObjectImpl getSystem1() {
        return (ViewObjectImpl) findViewObject("System1");
    }

    /**
     * Container's getter for Banner1.
     * @return Banner1
     */
    public ViewObjectImpl getBanner1() {
        return (ViewObjectImpl) findViewObject("Banner1");
    }
}

