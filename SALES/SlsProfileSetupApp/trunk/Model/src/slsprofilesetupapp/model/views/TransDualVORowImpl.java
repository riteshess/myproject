package slsprofilesetupapp.model.views;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 23 11:11:11 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0 {
            public Object get(TransDualVORowImpl obj) {
                return obj.getSelectobjects0();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransCoaNm {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransCoaNm();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setTransCoaNm((String) value);
            }
        }
        ,
        TransPaymentMode {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransPaymentMode();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setTransPaymentMode((Integer) value);
            }
        }
        ,
        TransCldId {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransCldId();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransOrgId {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransOrgId();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransSlocId {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransSlocId();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransCoaId {
            public Object get(TransDualVORowImpl obj) {
                return obj.getTransCoaId();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setTransCoaId((Integer) value);
            }
        }
        ,
        AttachLovVoForCOA1 {
            public Object get(TransDualVORowImpl obj) {
                return obj.getAttachLovVoForCOA1();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVPaymentModeVO1 {
            public Object get(TransDualVORowImpl obj) {
                return obj.getLOVPaymentModeVO1();
            }

            public void put(TransDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TransDualVORowImpl object);

        public abstract void put(TransDualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int TRANSCOANM = AttributesEnum.TransCoaNm.index();
    public static final int TRANSPAYMENTMODE = AttributesEnum.TransPaymentMode.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSORGID = AttributesEnum.TransOrgId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSCOAID = AttributesEnum.TransCoaId.index();
    public static final int ATTACHLOVVOFORCOA1 = AttributesEnum.AttachLovVoForCOA1.index();
    public static final int LOVPAYMENTMODEVO1 = AttributesEnum.LOVPaymentModeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TransDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaNm.
     * @return the TransCoaNm
     */
    public String getTransCoaNm() {
        return (String) getAttributeInternal(TRANSCOANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaNm.
     * @param value value to set the  TransCoaNm
     */
    public void setTransCoaNm(String value) {
        setAttributeInternal(TRANSCOANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPaymentMode.
     * @return the TransPaymentMode
     */
    public Integer getTransPaymentMode() {
        return (Integer) getAttributeInternal(TRANSPAYMENTMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPaymentMode.
     * @param value value to set the  TransPaymentMode
     */
    public void setTransPaymentMode(Integer value) {
        setAttributeInternal(TRANSPAYMENTMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
         String cldId=EbizParams.GLBL_APP_CLD_ID();
      
      return cldId;
        //return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getTransOrgId() {
        String orgId= EbizParams.GLBL_APP_USR_ORG();
        return orgId;
       // return (String) getAttributeInternal(TRANSORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        String HoOrgId=EbizParams.GLBL_HO_ORG_ID();
        return HoOrgId;
       // return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        Integer slocId=EbizParams.GLBL_APP_SERV_LOC();
        return slocId;
        //return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCoaId.
     * @return the TransCoaId
     */
    public Integer getTransCoaId() {
        return (Integer) getAttributeInternal(TRANSCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCoaId.
     * @param value value to set the  TransCoaId
     */
    public void setTransCoaId(Integer value) {
        setAttributeInternal(TRANSCOAID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AttachLovVoForCOA1.
     */
    public RowSet getAttachLovVoForCOA1() {
        return (RowSet) getAttributeInternal(ATTACHLOVVOFORCOA1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVPaymentModeVO1.
     */
    public RowSet getLOVPaymentModeVO1() {
        return (RowSet) getAttributeInternal(LOVPAYMENTMODEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

