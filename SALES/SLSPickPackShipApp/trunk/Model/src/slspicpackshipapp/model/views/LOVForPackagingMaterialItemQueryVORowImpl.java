package slspicpackshipapp.model.views;

import java.math.BigDecimal;
import java.math.BigInteger;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 11 17:05:00 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVForPackagingMaterialItemQueryVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmDesc {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setItmDesc((String) value);
            }
        },
        UomSls {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getUomSls();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UomClass {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getUomClass();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OrgId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CldId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        HoOrgId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SerializedFlg {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getSerializedFlg();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        PickOrder {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getPickOrder();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        QcReqdFlg {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getQcReqdFlg();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UomBasic {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getUomBasic();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        PriceSls {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getPriceSls();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Actv {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getActv();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        GrpId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getGrpId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SamplItmFlg {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getSamplItmFlg();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmAtt {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getItmAtt();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ChptrId {
            public Object get(LOVForPackagingMaterialItemQueryVORowImpl obj) {
                return obj.getChptrId();
            }

            public void put(LOVForPackagingMaterialItemQueryVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(LOVForPackagingMaterialItemQueryVORowImpl object);

        public abstract void put(LOVForPackagingMaterialItemQueryVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int UOMSLS = AttributesEnum.UomSls.index();
    public static final int UOMCLASS = AttributesEnum.UomClass.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SERIALIZEDFLG = AttributesEnum.SerializedFlg.index();
    public static final int PICKORDER = AttributesEnum.PickOrder.index();
    public static final int QCREQDFLG = AttributesEnum.QcReqdFlg.index();
    public static final int UOMBASIC = AttributesEnum.UomBasic.index();
    public static final int PRICESLS = AttributesEnum.PriceSls.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int SAMPLITMFLG = AttributesEnum.SamplItmFlg.index();
    public static final int ITMATT = AttributesEnum.ItmAtt.index();
    public static final int CHPTRID = AttributesEnum.ChptrId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVForPackagingMaterialItemQueryVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomSls.
     * @return the UomSls
     */
    public String getUomSls() {
        return (String) getAttributeInternal(UOMSLS);
    }

    /**
     * Gets the attribute value for the calculated attribute UomClass.
     * @return the UomClass
     */
    public BigInteger getUomClass() {
        return (BigInteger) getAttributeInternal(UOMCLASS);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute SerializedFlg.
     * @return the SerializedFlg
     */
    public String getSerializedFlg() {
        return (String) getAttributeInternal(SERIALIZEDFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute PickOrder.
     * @return the PickOrder
     */
    public Integer getPickOrder() {
        return (Integer) getAttributeInternal(PICKORDER);
    }

    /**
     * Gets the attribute value for the calculated attribute QcReqdFlg.
     * @return the QcReqdFlg
     */
    public String getQcReqdFlg() {
        return (String) getAttributeInternal(QCREQDFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute UomBasic.
     * @return the UomBasic
     */
    public String getUomBasic() {
        return (String) getAttributeInternal(UOMBASIC);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceSls.
     * @return the PriceSls
     */
    public BigDecimal getPriceSls() {
        return (BigDecimal) getAttributeInternal(PRICESLS);
    }

    /**
     * Gets the attribute value for the calculated attribute Actv.
     * @return the Actv
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpId.
     * @return the GrpId
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute SamplItmFlg.
     * @return the SamplItmFlg
     */
    public String getSamplItmFlg() {
        return (String) getAttributeInternal(SAMPLITMFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAtt.
     * @return the ItmAtt
     */
    public String getItmAtt() {
        return (String) getAttributeInternal(ITMATT);
    }

    /**
     * Gets the attribute value for the calculated attribute ChptrId.
     * @return the ChptrId
     */
    public String getChptrId() {
        return (String) getAttributeInternal(CHPTRID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

