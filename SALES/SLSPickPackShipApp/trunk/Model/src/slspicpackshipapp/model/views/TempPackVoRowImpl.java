package slspicpackshipapp.model.views;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import adf.utils.ebiz.EbizParamsAPPUtils;

import adf.utils.ebiz.EbizParamsMMUtils;

import adf.utils.model.ADFModelUtils;

import java.sql.SQLException;
import java.sql.Types;

import javax.faces.application.FacesMessage;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import slspicpackshipapp.model.service.pickPackShipAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 28 11:24:44 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TempPackVoRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0 {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getSelectobjects0();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setCldIdTrans((String) value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer) value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setOrgIdTrans((String) value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setHoOrgIdTrans((String) value);
            }
        }
        ,
        WhIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getWhIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setWhIdTrans((String) value);
            }
        }
        ,
        ItmDescTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getItmDescTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setItmDescTrans((String) value);
            }
        }
        ,
        ItmIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getItmIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setItmIdTrans((String) value);
            }
        }
        ,
        AvailQtyTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getAvailQtyTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setAvailQtyTrans((Number) value);
            }
        }
        ,
        ItmUomDescTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getItmUomDescTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setItmUomDescTrans((String) value);
            }
        }
        ,
        PickQtyTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getPickQtyTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setPickQtyTrans((Number) value);
            }
        }
        ,
        WhDescTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getWhDescTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmUomIdTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getItmUomIdTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setItmUomIdTrans((String) value);
            }
        }
        ,
        ItmUomBsTrans {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getItmUomBsTrans();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setItmUomBsTrans((String) value);
            }
        }
        ,
        LovWhIdVO1 {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getLovWhIdVO1();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdVO1 {
            public Object get(TempPackVoRowImpl obj) {
                return obj.getLovItmIdVO1();
            }

            public void put(TempPackVoRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(TempPackVoRowImpl object);

        public abstract void put(TempPackVoRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int WHIDTRANS = AttributesEnum.WhIdTrans.index();
    public static final int ITMDESCTRANS = AttributesEnum.ItmDescTrans.index();
    public static final int ITMIDTRANS = AttributesEnum.ItmIdTrans.index();
    public static final int AVAILQTYTRANS = AttributesEnum.AvailQtyTrans.index();
    public static final int ITMUOMDESCTRANS = AttributesEnum.ItmUomDescTrans.index();
    public static final int PICKQTYTRANS = AttributesEnum.PickQtyTrans.index();
    public static final int WHDESCTRANS = AttributesEnum.WhDescTrans.index();
    public static final int ITMUOMIDTRANS = AttributesEnum.ItmUomIdTrans.index();
    public static final int ITMUOMBSTRANS = AttributesEnum.ItmUomBsTrans.index();
    public static final int LOVWHIDVO1 = AttributesEnum.LovWhIdVO1.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TempPackVoRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if(getAttributeInternal(CLDIDTRANS) == null){
            setCldIdTrans(EbizParams.GLBL_APP_CLD_ID());
        }
        return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if(getAttributeInternal(SLOCIDTRANS) == null){
            setSlocIdTrans(EbizParams.GLBL_APP_SERV_LOC());
        }
        return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        if(getAttributeInternal(ORGIDTRANS) == null){
            setOrgIdTrans(EbizParams.GLBL_APP_USR_ORG());
        }
        return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        if(getAttributeInternal(HOORGIDTRANS) == null){
            setHoOrgIdTrans(EbizParams.GLBL_HO_ORG_ID());
        }
        return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdTrans.
     * @return the WhIdTrans
     */
    public String getWhIdTrans() {
        pickPackShipAMImpl am = (pickPackShipAMImpl)getApplicationModule();
        Row currentRow = am.getSlsPack1().getCurrentRow();
        if(currentRow != null){
            Object whIdO = currentRow.getAttribute("WhId");
            return whIdO == null ? null : whIdO.toString();
        }
        return (String) getAttributeInternal(WHIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhIdTrans.
     * @param value value to set the  WhIdTrans
     */
    public void setWhIdTrans(String value) {
        setAttributeInternal(WHIDTRANS, value);
        getAndSetAvailableQty();
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDescTrans.
     * @return the ItmDescTrans
     */
    public String getItmDescTrans() {
        return (String) getAttributeInternal(ITMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDescTrans.
     * @param value value to set the  ItmDescTrans
     */
    public void setItmDescTrans(String value) {
        setAttributeInternal(ITMDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmIdTrans.
     * @return the ItmIdTrans
     */
    public String getItmIdTrans() {
        return (String) getAttributeInternal(ITMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmIdTrans.
     * @param value value to set the  ItmIdTrans
     */
    public void setItmIdTrans(String value) {
        setAttributeInternal(ITMIDTRANS, value);
        getAndSetAvailableQty();
    }

    /**
     * Gets the attribute value for the calculated attribute AvailQtyTrans.
     * @return the AvailQtyTrans
     */
    public Number getAvailQtyTrans() {
        if(getAttributeInternal(AVAILQTYTRANS) == null){
            setAvailQtyTrans(StaticValue.NUMBER_ZERO);
        }
        return (Number) getAttributeInternal(AVAILQTYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvailQtyTrans.
     * @param value value to set the  AvailQtyTrans
     */
    public void setAvailQtyTrans(Number value) {
        setAttributeInternal(AVAILQTYTRANS, value);
    }
    
    public void getAndSetAvailableQty(){
        if (getItmIdTrans() != null && getItmUomIdTrans() != null && getItmUomBsTrans() != null &&
            getWhIdTrans() != null) {
            Number convFactor =
                EbizParamsMMUtils.getItmUomConvFactor((ApplicationModuleImpl) getApplicationModule(), getItmIdTrans(),
                                                      getItmUomIdTrans(), getItmUomBsTrans());
            Object avlStk = null;
            try {
               avlStk =
                   ADFModelUtils.callFunction((ApplicationModuleImpl) getApplicationModule(),
                                              new StringBuilder("SLS.FN_MM_GET_AVAIL_STK(?,?,?,?,?,?,?)"), new Object[] {
                                              getCldIdTrans(), getSlocIdTrans(), getOrgIdTrans(), this.getItmIdTrans(),
                                              this.getWhIdTrans(), StaticValue.getCurrDtWidTimestamp(), convFactor
               }, Types.NUMERIC);
           } catch (Exception e) {
                ADFModelUtils.showFormattedFacesMessage("There have been an error while calling Function FN_MM_GET_AVAIL_STK", 
                                                        "Please try again. If the problem persists, Please contact ESS.", FacesMessage.SEVERITY_ERROR);
                e.printStackTrace();
            }
            if(avlStk != null){
                try {
                    setAvailQtyTrans(new Number(avlStk));
                } catch (SQLException e) {
                }
            }else{
                setAvailQtyTrans(StaticValue.NUMBER_ZERO);
            }
        }
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomTrans.
     * @return the ItmUomTrans
     */
    public String getItmUomDescTrans() {
        if(getAttributeInternal(ITMUOMDESCTRANS) == null && getItmUomIdTrans() != null ){
            String descFrmUOMId = EbizParamsMMUtils.getUOMDescFrmUOMId((ApplicationModuleImpl)getApplicationModule(), getItmUomIdTrans());
            setItmUomDescTrans(descFrmUOMId);
        }
        return (String) getAttributeInternal(ITMUOMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomTrans.
     * @param value value to set the  ItmUomTrans
     */
    public void setItmUomDescTrans(String value) {
        setAttributeInternal(ITMUOMDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PickQtyTrans.
     * @return the PickQtyTrans
     */
    public Number getPickQtyTrans() {
        if(getAttributeInternal(PICKQTYTRANS) == null){
            setPickQtyTrans(StaticValue.NUMBER_ZERO);
        }
        return (Number) getAttributeInternal(PICKQTYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PickQtyTrans.
     * @param value value to set the  PickQtyTrans
     */
    public void setPickQtyTrans(Number value) {
        setAttributeInternal(PICKQTYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhDescTrans.
     * @return the WhDescTrans
     */
    public String getWhDescTrans() {
        return (String) getAttributeInternal(WHDESCTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomIdTrans.
     * @return the ItmUomIdTrans
     */
    public String getItmUomIdTrans() {
        return (String) getAttributeInternal(ITMUOMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomIdTrans.
     * @param value value to set the  ItmUomIdTrans
     */
    public void setItmUomIdTrans(String value) {
        setAttributeInternal(ITMUOMIDTRANS, value);
        setItmUomDescTrans(null);
        getAndSetAvailableQty();
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBsTrans.
     * @return the ItmUomBsTrans
     */
    public String getItmUomBsTrans() {
        return (String) getAttributeInternal(ITMUOMBSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomBsTrans.
     * @param value value to set the  ItmUomBsTrans
     */
    public void setItmUomBsTrans(String value) {
        setAttributeInternal(ITMUOMBSTRANS, value);
        getAndSetAvailableQty();
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhIdVO1.
     */
    public RowSet getLovWhIdVO1() {
        return (RowSet) getAttributeInternal(LOVWHIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

