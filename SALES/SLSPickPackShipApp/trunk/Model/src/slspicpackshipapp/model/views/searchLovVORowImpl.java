package slspicpackshipapp.model.views;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 03 15:27:16 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class searchLovVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ItmId {
            public Object get(searchLovVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmDesc {
            public Object get(searchLovVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setItmDesc((String) value);
            }
        },
        PackNm {
            public Object get(searchLovVORowImpl obj) {
                return obj.getPackNm();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setPackNm((String) value);
            }
        },
        CldIdTrans {
            public Object get(searchLovVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlocIdTrans {
            public Object get(searchLovVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        HoOrgIdTrans {
            public Object get(searchLovVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        OrgIdTrans {
            public Object get(searchLovVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmIdVO1 {
            public Object get(searchLovVORowImpl obj) {
                return obj.getLovItmIdVO1();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsPackItmVO1 {
            public Object get(searchLovVORowImpl obj) {
                return obj.getSlsPackItmVO1();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsPackVO1 {
            public Object get(searchLovVORowImpl obj) {
                return obj.getSlsPackVO1();
            }

            public void put(searchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(searchLovVORowImpl object);

        public abstract void put(searchLovVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int PACKNM = AttributesEnum.PackNm.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();
    public static final int SLSPACKITMVO1 = AttributesEnum.SlsPackItmVO1.index();
    public static final int SLSPACKVO1 = AttributesEnum.SlsPackVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public searchLovVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PackNm.
     * @return the PackNm
     */
    public String getPackNm() {
        return (String) getAttributeInternal(PACKNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PackNm.
     * @param value value to set the  PackNm
     */
    public void setPackNm(String value) {
        setAttributeInternal(PACKNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        return EbizParams.GLBL_APP_CLD_ID();
        //return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        return EbizParams.GLBL_APP_SERV_LOC();
        //return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        return EbizParams.GLBL_HO_ORG_ID();
        //return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        return EbizParams.GLBL_APP_USR_ORG();
        //return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsPackItmVO1.
     */
    public RowSet getSlsPackItmVO1() {
        return (RowSet) getAttributeInternal(SLSPACKITMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsPackVO1.
     */
    public RowSet getSlsPackVO1() {
        return (RowSet) getAttributeInternal(SLSPACKVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

