package slspicpackshipapp.model.views;

import adf.utils.bean.ADFBeanUtils;
import adf.utils.ebiz.EbizParams;

import oracle.jbo.domain.Number;
import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import slspicpackshipapp.model.service.pickPackShipAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 11 12:17:40 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SLSPckMtlBinVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSPCKMTLBINEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        HoOrgId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        OrgId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        WhId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        },
        DocId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        PickId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getPickId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setPickId((String) value);
            }
        },
        LotId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setLotId((String) value);
            }
        },
        BinId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setBinId((String) value);
            }
        },
        ItmId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmUom {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        },
        PckQty {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getPckQty();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setPckQty((oracle.jbo.domain.Number) value);
            }
        },
        PckQtyBs {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getPckQtyBs();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setPckQtyBs((oracle.jbo.domain.Number) value);
            }
        },
        TransItmName {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getTransItmName();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setTransItmName((String) value);
            }
        },
        PrjId {
            public Object get(SLSPckMtlBinVORowImpl obj) {
                return obj.getPrjId();
            }

            public void put(SLSPckMtlBinVORowImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public abstract Object get(SLSPckMtlBinVORowImpl object);

        public abstract void put(SLSPckMtlBinVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PICKID = AttributesEnum.PickId.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int BINID = AttributesEnum.BinId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PCKQTY = AttributesEnum.PckQty.index();
    public static final int PCKQTYBS = AttributesEnum.PckQtyBs.index();
    public static final int TRANSITMNAME = AttributesEnum.TransItmName.index();
    public static final int PRJID = AttributesEnum.PrjId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SLSPckMtlBinVORowImpl() {
    }

    /**
     * Gets SLSPckMtlBinEO entity object.
     * @return the SLSPckMtlBinEO
     */
    public EntityImpl getSLSPckMtlBinEO() {
        return (EntityImpl) getEntity(ENTITY_SLSPCKMTLBINEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PICK_ID using the alias name PickId.
     * @return the PICK_ID
     */
    public String getPickId() {
        return (String) getAttributeInternal(PICKID);
    }

    /**
     * Sets <code>value</code> as attribute value for PICK_ID using the alias name PickId.
     * @param value value to set the PICK_ID
     */
    public void setPickId(String value) {
        setAttributeInternal(PICKID, value);
    }

    /**
     * Gets the attribute value for LOT_ID using the alias name LotId.
     * @return the LOT_ID
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOT_ID using the alias name LotId.
     * @param value value to set the LOT_ID
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for BIN_ID using the alias name BinId.
     * @return the BIN_ID
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as attribute value for BIN_ID using the alias name BinId.
     * @param value value to set the BIN_ID
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {

        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {

        setAttributeInternal(ITMID, value);
        setTransItmName(null);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PCK_QTY using the alias name PckQty.
     * @return the PCK_QTY
     */
    public oracle.jbo.domain.Number getPckQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PCKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PCK_QTY using the alias name PckQty.
     * @param value value to set the PCK_QTY
     */
    public void setPckQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(PCKQTY, value);
    }

    /**
     * Gets the attribute value for PCK_QTY_BS using the alias name PckQtyBs.
     * @return the PCK_QTY_BS
     */
    public oracle.jbo.domain.Number getPckQtyBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PCKQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PCK_QTY_BS using the alias name PckQtyBs.
     * @param value value to set the PCK_QTY_BS
     */
    public void setPckQtyBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(PCKQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmName.
     * @return the TransItmName
     */
    public String getTransItmName() {
        if (getAttributeInternal(TRANSITMNAME) == null & getItmId() != null) {
            pickPackShipAMImpl am = (pickPackShipAMImpl) this.getApplicationModule();
            PackagingMtrlVOImpl impl = am.getPackagingMtrlVO1();
            Row currentRow = impl.getCurrentRow();
            String itmVar = currentRow.getAttribute("ItmId").toString();
            return EbizParams.getItemDescFrmItmId(am, itmVar);
        }
        return (String) getAttributeInternal(TRANSITMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmName.
     * @param value value to set the  TransItmName
     */
    public void setTransItmName(String value) {
        setAttributeInternal(TRANSITMNAME, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

