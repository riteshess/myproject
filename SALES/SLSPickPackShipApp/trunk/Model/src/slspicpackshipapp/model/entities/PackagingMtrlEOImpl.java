package slspicpackshipapp.model.entities;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 26 15:37:18 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PackagingMtrlEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getCldId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        HoOrgId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        DocId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getDocId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        DocDt {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        },
        PickId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getPickId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setPickId((String) value);
            }
        },
        ItmId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getItmId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmUom {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        },
        PckItmQty {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getPckItmQty();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setPckItmQty((Number) value);
            }
        },
        UsrIdCreate {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        IsConsumable {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getIsConsumable();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setIsConsumable((String) value);
            }
        },
        RetFlg {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getRetFlg();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setRetFlg((String) value);
            }
        },
        PckItmQtyBs {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getPckItmQtyBs();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setPckItmQtyBs((Number) value);
            }
        },
        WhId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getWhId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        },
        UomConvFctr {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        },
        ItmUomBs {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        },
        PrjId {
            public Object get(PackagingMtrlEOImpl obj) {
                return obj.getPrjId();
            }

            public void put(PackagingMtrlEOImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(PackagingMtrlEOImpl object);

        public abstract void put(PackagingMtrlEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int PICKID = AttributesEnum.PickId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PCKITMQTY = AttributesEnum.PckItmQty.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ISCONSUMABLE = AttributesEnum.IsConsumable.index();
    public static final int RETFLG = AttributesEnum.RetFlg.index();
    public static final int PCKITMQTYBS = AttributesEnum.PckItmQtyBs.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int PRJID = AttributesEnum.PrjId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PackagingMtrlEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slspicpackshipapp.model.entities.PackagingMtrlEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for PickId, using the alias name PickId.
     * @return the value of PickId
     */
    public String getPickId() {
        return (String) getAttributeInternal(PICKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PickId.
     * @param value value to set the PickId
     */
    public void setPickId(String value) {
        setAttributeInternal(PICKID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PckItmQty, using the alias name PckItmQty.
     * @return the value of PckItmQty
     */
    public oracle.jbo.domain.Number getPckItmQty() {
        return (oracle.jbo.domain.Number) getAttributeInternal(PCKITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PckItmQty.
     * @param value value to set the PckItmQty
     */
    public void setPckItmQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(PCKITMQTY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for IsConsumable, using the alias name IsConsumable.
     * @return the value of IsConsumable
     */
    public String getIsConsumable() {
        return (String) getAttributeInternal(ISCONSUMABLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsConsumable.
     * @param value value to set the IsConsumable
     */
    public void setIsConsumable(String value) {
        setAttributeInternal(ISCONSUMABLE, value);
    }

    /**
     * Gets the attribute value for RetFlg, using the alias name RetFlg.
     * @return the value of RetFlg
     */
    public String getRetFlg() {
        return (String) getAttributeInternal(RETFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for RetFlg.
     * @param value value to set the RetFlg
     */
    public void setRetFlg(String value) {
        setAttributeInternal(RETFLG, value);
    }

    /**
     * Gets the attribute value for PckItmQtyBs, using the alias name PckItmQtyBs.
     * @return the value of PckItmQtyBs
     */
    public Number getPckItmQtyBs() {
        return (Number) getAttributeInternal(PCKITMQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PckItmQtyBs.
     * @param value value to set the PckItmQtyBs
     */
    public void setPckItmQtyBs(Number value) {
        setAttributeInternal(PCKITMQTYBS, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param pickId key constituent
     * @param itmId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       String pickId, String itmId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, pickId, itmId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setIsConsumable("Y");
        //        String defaultProjId =
        //            ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ID}") == null ? "PROJ0000" :
        //            ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ID}").toString();
        //        setPrjId(defaultProjId);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        /*  super.lock(); */
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

