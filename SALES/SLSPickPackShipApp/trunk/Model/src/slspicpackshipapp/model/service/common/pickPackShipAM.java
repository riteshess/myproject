package slspicpackshipapp.model.service.common;

import java.util.ArrayList;

import java.util.Date;
import java.util.HashSet;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 04 11:05:22 IST 2013
// ---------------------------------------------------------------------
public interface pickPackShipAM extends ApplicationModule {
    void filterOrderData(Timestamp pickDate);

    void populateItemToPickList(Row curRow);

    String insertIntoPickItmLot();

    void insertIntoPickItmBin();

    void insertIntoPickItmSr();

    void filterPickSrNoTable();

    String generateDispDocNo(String flag);


    ViewObject getPackObject();

    ViewObject getSearchObject();

    String deleteItmFrmPickList();

    void searchTreeasPerItm(String itmDesc);

    void resetTreeTableFilter();

    void filterShipment(Timestamp dlvDt);


    void resetShipment();

    ViewObject getShipmntSearchView();

    String generateShipment();

    ArrayList checkItemIssueValidation();


    ViewObject getmainSearchView();

    void resetMainSearch();

    void goToPickListAction();

    void populateValinPack();

    String validateGenShipment();

    void issueAutoItem();

    String getCurrentdocId();

    void setOncurRow(String pickId);

    void filterTreeWarehouse(String whId);

    void filterTreeCustomerWise(String eo_nm);

    String setPackVsblParam();

    void updatePickStausCancel(String canc_Flag);


    String shipmntCrtdOrNt();

    void postChange();

    void updateShipmentStausCancel(String canc_Flag, Integer eoId, Date usrIdCreateDt, String shipId, Date ShipDt,
                                   String whId, String docId);


    boolean doShipmentExist();

    void setInitialBindVariablesInSlsShipmntGenVO();

    String getAlertFlag();

    void selectCurrentPiclistOnShipmntPage();

    void refreshPickLov();

    Integer getPackItmRowCount();

    void setValuesForShipmentPage();

    String callFunctionToGetGeneratedVouId();

    boolean isPackQuantityValid(oracle.jbo.domain.Number val);


    StringBuffer getPickEoNm();

    void executePickItmVo();

    void setAddsValToNoneOnPageRun();

    void setCurrPickItmRowWithKey();

    void setPackRowWithkey(Key packKey);

    Key insertItmInPackItm();

    String isCoaIdIsNull();

    void resetOrderData(Timestamp pickDate);


    void delLotbinSrData();

    void rePopulateItemToPickList();

    Boolean isPickSelected();

    String isLotDataExist(Row r);

    void refreshAllVoOncancellation();

    String cancelPickList();

    void UpdateOrdStat(String flag);

    void searchMainSearch();

    StringBuilder isLotQtyValid();

    StringBuilder isIssueQtyValid();

    StringBuilder isBinQtyValid();

    Boolean isCheckForExiseValid();

    void autoIssueItmOnAdd();

    void deSelectAllPickSo();

    void deSelectAllPickSoItms();

    void filterSoPickItems();

    void selectAllPickSo();

    void selectAllPickSoItms();

    ArrayList<StringBuilder> checkIfLotDataExistForAnyOfSelectedRows();

    Boolean addSelectedItemsToPick();

    Boolean arePickEntriesValid();

    void setSoDataOnEdit();

    oracle.jbo.domain.Number getCurrentPickQty();

    void filterShipGenVw();

    String functionsCallOnPickSave(String flag);

    Integer callRelsFunctionOnEdit();

    void insertIntoPck();

    oracle.jbo.domain.Number getPriceForLotForPckMtrl(String lotId, oracle.jbo.domain.Number pickQty);

    void insertIntoPickItmBinForPckMtrl();

    String insertIntoPickItmLotForPckMtrl();

    void insertIntoPickItmSrForPckMtrl();

    StringBuilder isBinQtyValidForPckMtrl();

    StringBuilder isLotQtyValidForPckMtrl();

    void issueAutoItemInPckMtrl();

    void filterPickSrNoTableForPckMtrl();

    oracle.jbo.domain.Number getCurrentPickQtyForPckMtrl();

    void AllocationCommit();


    String chkDuplicateItemforPck(String itmIdBind);

    void fiterItmUom();

    String getAvailStock(oracle.jbo.domain.Number pckQty, String whIdVarBind);

    void editIntoPck();

    String validateLotBinSRForEachPck();

    void cancelPckPrf();

    void cancelShipPrf();

    String callWfFunctions();

    String getWorkFlowIdForPick();

    void functionCallAfterReturnFrmWfFromPick();

    Integer autoIssueAddedItems();

    Integer isUserAllowedToEditPick();

    Boolean isBranchExiseTrading();

    void setAvlStk();

    void executeLovItem();

    void allowFreezePrf();

    Boolean areTablesToBeUpdatedLocked();

    String freezeProfile();

    void searchShipment();

    Boolean cancelShipmnt();

    void filterSelectedShipment(String pickDocId, String shipDocId);

    Boolean isAutoIssueItemExist();


    Boolean chkCcApplicableOrNot();

    void declareGlblValuesForCC();

    void generateCostCenterHeaderWise();


    Boolean isCostCenterApplicable();

    void refreshPickCurr();

    Integer fetchPickHeaderDetailsFromSo();

    Boolean chkSoAdvance(String docId);

    void sendMail();

    Boolean chkMandTrnpFldsEnterOrNot();

    void createRouteInTransport();

    String checkProfileValues(String columnNm);

    String addUserDefinedSrForItem();

    Boolean chkMMPrf();

    void reorderSrNo(Integer sr_No);

    void removeUsrDefindSerial(Integer sr_No);

    Integer generateShipment(ArrayList pickList);

    void sendDateFromTempCcToSlsSoCc(String shipDocId);

    oracle.jbo.domain.Number sumLotAmount(String itmId, String shiDocId, String pickId);

    Boolean isShipPresntForPick();

    Integer addPackMtlItm();

    Integer savePackingMtrlIssuDtls();

    Boolean validatedpackSetup();

    Boolean isPackUsed();

    void setValueForTransport(String whId, String shipAddId);

    Boolean isSoSeachApplicable();

    Boolean isItemPriceBasisApplicable();
}
