package slstaxformtrackapp.model.service;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import java.sql.Types;

import javax.faces.application.FacesMessage;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import slstaxformtrackapp.model.service.common.SlsTaxFormTrackAppAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 27 11:52:48 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTaxFormTrackAppAMImpl extends ApplicationModuleImpl implements SlsTaxFormTrackAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SlsTaxFormTrackAppAMImpl() {
    }

    public void setParams() {
        ViewObjectImpl custVo = this.getLovCustomerNm1();
        custVo.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        custVo.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        custVo.setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        custVo.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        custVo.executeQuery();

        ViewObjectImpl invoiceVo = this.getLovInvoiceNo1();
        invoiceVo.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        invoiceVo.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        invoiceVo.setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        invoiceVo.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        invoiceVo.executeQuery();
    }

    public void searchInvoice() {
        Row currentRow = this.getSearch1().getCurrentRow();
        if (currentRow != null) {

            ViewObjectImpl dataVO1 = this.getLovInvoiceDtl1();
            dataVO1.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
            dataVO1.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
            dataVO1.setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
            dataVO1.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());

            if (currentRow.getAttribute("TransFormTypeId") != null) {
                dataVO1.setNamedWhereClauseParam("FormTypeIdBind", currentRow.getAttribute("TransFormTypeId"));
            } else {
                dataVO1.setNamedWhereClauseParam("FormTypeIdBind", null);
            }

            if (currentRow.getAttribute("TransInvFromDt") != null) {
                dataVO1.setNamedWhereClauseParam("BindFromDt", currentRow.getAttribute("TransInvFromDt"));
            } else {
                dataVO1.setNamedWhereClauseParam("BindFromDt", null);
            }

            if (currentRow.getAttribute("TransInvToDt") != null) {
                dataVO1.setNamedWhereClauseParam("BindToDt", currentRow.getAttribute("TransInvToDt"));
            } else {
                dataVO1.setNamedWhereClauseParam("BindToDt", null);
            }

            if (currentRow.getAttribute("TransCustId") != null) {
                dataVO1.setNamedWhereClauseParam("BindCustId", currentRow.getAttribute("TransCustId"));
            } else {
                dataVO1.setNamedWhereClauseParam("BindCustId", null);
            }

            if (currentRow.getAttribute("TransInvoiceNo") != null) {
                dataVO1.setNamedWhereClauseParam("BindInvoiceNo", currentRow.getAttribute("TransInvoiceNo"));
            } else {
                dataVO1.setNamedWhereClauseParam("BindInvoiceNo", null);
            }
            dataVO1.executeQuery();
        }
    }

    public void reset() {
        ViewObjectImpl dataVO1 = this.getLovInvoiceDtl1();
        dataVO1.setNamedWhereClauseParam("CldIdBind", null);
        dataVO1.setNamedWhereClauseParam("SlocIdBind", -1);
        dataVO1.setNamedWhereClauseParam("HoOrgIdBind", null);
        dataVO1.setNamedWhereClauseParam("OrgIdBind", null);
        dataVO1.executeQuery();
        this.getSearch1().executeQuery();

    }

    public void addReceiveForm() {
        String docId;
        ViewObjectImpl vo = this.getLovInvoiceDtl1();
        Row[] allRowinRange = vo.getAllRowsInRange();
        System.out.println("Length of allRowsInRange :: " + allRowinRange.length);
        Integer i = 0;

        for (Row r : allRowinRange) {
            
            if (r.getAttribute("TransFormReceived") != null) {
                if (r.getAttribute("TransFormReceived").toString().equalsIgnoreCase("True")) {
                    i = 1;
                    docId = (String) r.getAttribute("DocId");
                    Object received =
                        ADFModelUtils.callFunction(this,
                                                            new StringBuilder("SLS.FN_UPDT_INV_DTL(?,?,?,?,?,?,?,?,?)"), new Object[] {
                                                            EbizParams.GLBL_APP_CLD_ID(),
                                                            EbizParams.GLBL_APP_SERV_LOC(),
                                                            EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_HO_ORG_ID(),
                                                            docId, r.getAttribute("TransFormRemarks"),
                                                            r.getAttribute("TransFormRcvdDt"),
                                                            r.getAttribute("TransFormAmt"), r.getAttribute("TransFormNo")

                    }, Types.NUMERIC);
                    i++;
                    if (received == 1) {
                        System.out.println("Remarks updated for Invoice no. :: " + r.getAttribute("DispDocId"));
                    }
                }
            }
        }

        if (i == 0) {
            ADFModelUtils.showFormattedFacesMessage((ADFModelUtils.resolvRsrc("MSG.2678")),                                   //Warning !!
                                                    (ADFModelUtils.resolvRsrc("MSG.2679")),   //Please select atleast one Sales Invoice !!
                                                    FacesMessage.SEVERITY_INFO);
        } else {
            ADFModelUtils.showFormattedFacesMessage((ADFModelUtils.resolvRsrc("MSG.2680")),                       //Successfull !!                    
                                                    (ADFModelUtils.resolvRsrc("MSG.2681")),         //Data updated successfully !!
                                                    FacesMessage.SEVERITY_INFO);
        }

        try {
            this.getDBTransaction().commit();

        } catch (Exception e) {
            e.printStackTrace();
        }

        this.getLovInvoiceDtl1().executeQuery();
    }

    /**
     * Container's getter for Search1.
     * @return Search1
     */
    public ViewObjectImpl getSearch1() {
        return (ViewObjectImpl) findViewObject("Search1");
    }

    /**
     * Container's getter for LovCustomerNm1.
     * @return LovCustomerNm1
     */
    public ViewObjectImpl getLovCustomerNm1() {
        return (ViewObjectImpl) findViewObject("LovCustomerNm1");
    }

    /**
     * Container's getter for LovInvoiceNo1.
     * @return LovInvoiceNo1
     */
    public ViewObjectImpl getLovInvoiceNo1() {
        return (ViewObjectImpl) findViewObject("LovInvoiceNo1");
    }

    /**
     * Container's getter for LovFormType1.
     * @return LovFormType1
     */
    public ViewObjectImpl getLovFormType1() {
        return (ViewObjectImpl) findViewObject("LovFormType1");
    }

    /**
     * Container's getter for LovInvoiceDtl1.
     * @return LovInvoiceDtl1
     */
    public ViewObjectImpl getLovInvoiceDtl1() {
        return (ViewObjectImpl) findViewObject("LovInvoiceDtl1");
    }
}

