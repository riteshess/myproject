package slssalesordapp.model.entities;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jan 08 16:29:43 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoItmTrfEOImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        StringBuffer cldId = new StringBuffer( (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")).toString());
        StringBuffer orgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        setTrfStat("N");
        Integer fyId = 0;
        try {
            //FUNCTION GET_ORG_FY_ID(P_CLDID VARCHAR2, P_ORG_ID VARCHAR2, P_TXN_DT DATE)
            fyId =(Integer)callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID(?,?,?)", new Object[] {cldId.toString(),orgId.toString(), new Timestamp(System.currentTimeMillis()) });
            System.out.println("FY :"+fyId);
            setFyId(fyId);
            
        } catch (Exception e) {
            FacesMessage message =
                new FacesMessage("There have been an error in calling function 'APP.GET_ORG_FY_ID' in EoImpl !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
            e.printStackTrace();
        }

        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(StaticValue.getTruncatedCurrDt());
        super.create(attributeList);
    }
    /**
     * Method to call a Database function
     * @param sqlReturnType
     * @param stmt
     * @param bindVars
     * @return
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                        //System.out.println("___________:"+bindVars[z]);
                    }
                }
                st.executeUpdate();
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {
                    }
                }
            }
        }
    
    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            setUsrIdMod(EbizParams.GLBL_APP_USR());
            setUsrIdModDt(StaticValue.getTruncatedCurrDt());
        }
        super.doDML(operation, e);
    }
    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        ItmId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        FyId {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getFyId();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        OrgIdSrc {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getOrgIdSrc();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setOrgIdSrc((String) value);
            }
        }
        ,
        WhIdSrc {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getWhIdSrc();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setWhIdSrc((String) value);
            }
        }
        ,
        OrgIdDest {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getOrgIdDest();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setOrgIdDest((String) value);
            }
        }
        ,
        WhIdDest {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getWhIdDest();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setWhIdDest((String) value);
            }
        }
        ,
        ItmUom {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        ItmTrfQty {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getItmTrfQty();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setItmTrfQty((Number) value);
            }
        }
        ,
        ItmTrfQtyBs {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getItmTrfQtyBs();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setItmTrfQtyBs((Number) value);
            }
        }
        ,
        AvlQty {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getAvlQty();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setAvlQty((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer) value);
            }
        }
        ,
        DlvDt {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getDlvDt();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setDlvDt((Timestamp) value);
            }
        }
        ,
        TrfStat {
            public Object get(SlsSoItmTrfEOImpl obj) {
                return obj.getTrfStat();
            }

            public void put(SlsSoItmTrfEOImpl obj, Object value) {
                obj.setTrfStat((String) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsSoItmTrfEOImpl object);

        public abstract void put(SlsSoItmTrfEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int ORGIDSRC = AttributesEnum.OrgIdSrc.index();
    public static final int WHIDSRC = AttributesEnum.WhIdSrc.index();
    public static final int ORGIDDEST = AttributesEnum.OrgIdDest.index();
    public static final int WHIDDEST = AttributesEnum.WhIdDest.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMTRFQTY = AttributesEnum.ItmTrfQty.index();
    public static final int ITMTRFQTYBS = AttributesEnum.ItmTrfQtyBs.index();
    public static final int AVLQTY = AttributesEnum.AvlQty.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int TRFSTAT = AttributesEnum.TrfStat.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoItmTrfEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slssalesordapp.model.entities.SlsSoItmTrfEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for OrgIdSrc, using the alias name OrgIdSrc.
     * @return the value of OrgIdSrc
     */
    public String getOrgIdSrc() {
        return (String)getAttributeInternal(ORGIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdSrc.
     * @param value value to set the OrgIdSrc
     */
    public void setOrgIdSrc(String value) {
        setAttributeInternal(ORGIDSRC, value);
    }

    /**
     * Gets the attribute value for WhIdSrc, using the alias name WhIdSrc.
     * @return the value of WhIdSrc
     */
    public String getWhIdSrc() {
        return (String)getAttributeInternal(WHIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhIdSrc.
     * @param value value to set the WhIdSrc
     */
    public void setWhIdSrc(String value) {
        setAttributeInternal(WHIDSRC, value);
    }

    /**
     * Gets the attribute value for OrgIdDest, using the alias name OrgIdDest.
     * @return the value of OrgIdDest
     */
    public String getOrgIdDest() {
        return (String)getAttributeInternal(ORGIDDEST);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdDest.
     * @param value value to set the OrgIdDest
     */
    public void setOrgIdDest(String value) {
        setAttributeInternal(ORGIDDEST, value);
    }

    /**
     * Gets the attribute value for WhIdDest, using the alias name WhIdDest.
     * @return the value of WhIdDest
     */
    public String getWhIdDest() {
        return (String)getAttributeInternal(WHIDDEST);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhIdDest.
     * @param value value to set the WhIdDest
     */
    public void setWhIdDest(String value) {
        setAttributeInternal(WHIDDEST, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ItmTrfQty, using the alias name ItmTrfQty.
     * @return the value of ItmTrfQty
     */
    public Number getItmTrfQty() {
        return (Number)getAttributeInternal(ITMTRFQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmTrfQty.
     * @param value value to set the ItmTrfQty
     */
    public void setItmTrfQty(Number value) {
        setAttributeInternal(ITMTRFQTY, value);
    }

    /**
     * Gets the attribute value for ItmTrfQtyBs, using the alias name ItmTrfQtyBs.
     * @return the value of ItmTrfQtyBs
     */
    public Number getItmTrfQtyBs() {
        return (Number)getAttributeInternal(ITMTRFQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmTrfQtyBs.
     * @param value value to set the ItmTrfQtyBs
     */
    public void setItmTrfQtyBs(Number value) {
        setAttributeInternal(ITMTRFQTYBS, value);
    }

    /**
     * Gets the attribute value for AvlQty, using the alias name AvlQty.
     * @return the value of AvlQty
     */
    public Number getAvlQty() {
        return (Number)getAttributeInternal(AVLQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvlQty.
     * @param value value to set the AvlQty
     */
    public void setAvlQty(Number value) {
        setAttributeInternal(AVLQTY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer)getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for DlvDt, using the alias name DlvDt.
     * @return the value of DlvDt
     */
    public Timestamp getDlvDt() {
        return (Timestamp)getAttributeInternal(DLVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvDt.
     * @param value value to set the DlvDt
     */
    public void setDlvDt(Timestamp value) {
        setAttributeInternal(DLVDT, value);
    }

    /**
     * Gets the attribute value for TrfStat, using the alias name TrfStat.
     * @return the value of TrfStat
     */
    public String getTrfStat() {
        return (String)getAttributeInternal(TRFSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrfStat.
     * @param value value to set the TrfStat
     */
    public void setTrfStat(String value) {
        setAttributeInternal(TRFSTAT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param fyId key constituent
     * @param whIdDest key constituent
     * @param dlvSchdlNo key constituent
     * @param dlvDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       String itmId, Integer fyId, String whIdDest, Integer dlvSchdlNo,
                                       Timestamp dlvDt) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, itmId, fyId, whIdDest, dlvSchdlNo, dlvDt });
    }


}
