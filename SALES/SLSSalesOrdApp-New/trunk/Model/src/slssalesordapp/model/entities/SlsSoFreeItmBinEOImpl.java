package slssalesordapp.model.entities;

import java.math.BigDecimal;

import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowInconsistentException;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 14 15:36:27 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoFreeItmBinEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getWhId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        LotId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getLotId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        BinId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getBinId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setBinId((String)value);
            }
        }
        ,
        FreeItmId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getFreeItmId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setFreeItmId((String)value);
            }
        }
        ,
        DestItmId {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getDestItmId();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setDestItmId((String)value);
            }
        }
        ,
        FreeItmUom {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getFreeItmUom();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setFreeItmUom((String)value);
            }
        }
        ,
        FreeItmQty {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getFreeItmQty();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setFreeItmQty((Number)value);
            }
        }
        ,
        FreeItmQtyBs {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getFreeItmQtyBs();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setFreeItmQtyBs((Number)value);
            }
        }
        ,
        SlsSoItmSchEO {
            public Object get(SlsSoFreeItmBinEOImpl obj) {
                return obj.getSlsSoItmSchEO();
            }

            public void put(SlsSoFreeItmBinEOImpl obj, Object value) {
                obj.setSlsSoItmSchEO((SlsSoItmSchEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SlsSoFreeItmBinEOImpl object);

        public abstract void put(SlsSoFreeItmBinEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int BINID = AttributesEnum.BinId.index();
    public static final int FREEITMID = AttributesEnum.FreeItmId.index();
    public static final int DESTITMID = AttributesEnum.DestItmId.index();
    public static final int FREEITMUOM = AttributesEnum.FreeItmUom.index();
    public static final int FREEITMQTY = AttributesEnum.FreeItmQty.index();
    public static final int FREEITMQTYBS = AttributesEnum.FreeItmQtyBs.index();
    public static final int SLSSOITMSCHEO = AttributesEnum.SlsSoItmSchEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoFreeItmBinEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slssalesordapp.model.entities.SlsSoFreeItmBinEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for LotId, using the alias name LotId.
     * @return the value of LotId
     */
    public String getLotId() {
        return (String)getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LotId.
     * @param value value to set the LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for BinId, using the alias name BinId.
     * @return the value of BinId
     */
    public String getBinId() {
        return (String)getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BinId.
     * @param value value to set the BinId
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for FreeItmId, using the alias name FreeItmId.
     * @return the value of FreeItmId
     */
    public String getFreeItmId() {
        return (String)getAttributeInternal(FREEITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FreeItmId.
     * @param value value to set the FreeItmId
     */
    public void setFreeItmId(String value) {
        setAttributeInternal(FREEITMID, value);
    }

    /**
     * Gets the attribute value for DestItmId, using the alias name DestItmId.
     * @return the value of DestItmId
     */
    public String getDestItmId() {
        return (String)getAttributeInternal(DESTITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DestItmId.
     * @param value value to set the DestItmId
     */
    public void setDestItmId(String value) {
        setAttributeInternal(DESTITMID, value);
    }

    /**
     * Gets the attribute value for FreeItmUom, using the alias name FreeItmUom.
     * @return the value of FreeItmUom
     */
    public String getFreeItmUom() {
        return (String)getAttributeInternal(FREEITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for FreeItmUom.
     * @param value value to set the FreeItmUom
     */
    public void setFreeItmUom(String value) {
        setAttributeInternal(FREEITMUOM, value);
    }

    /**
     * Gets the attribute value for FreeItmQty, using the alias name FreeItmQty.
     * @return the value of FreeItmQty
     */
    public oracle.jbo.domain.Number getFreeItmQty() {
        return (oracle.jbo.domain.Number)getAttributeInternal(FREEITMQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FreeItmQty.
     * @param value value to set the FreeItmQty
     */
    public void setFreeItmQty(oracle.jbo.domain.Number value) {
        setAttributeInternal(FREEITMQTY, value);
    }

    /**
     * Gets the attribute value for FreeItmQtyBs, using the alias name FreeItmQtyBs.
     * @return the value of FreeItmQtyBs
     */
    public Number getFreeItmQtyBs() {
        return (Number)getAttributeInternal(FREEITMQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for FreeItmQtyBs.
     * @param value value to set the FreeItmQtyBs
     */
    public void setFreeItmQtyBs(Number value) {
        setAttributeInternal(FREEITMQTYBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity SlsSoItmSchEOImpl.
     */
    public SlsSoItmSchEOImpl getSlsSoItmSchEO() {
        return (SlsSoItmSchEOImpl)getAttributeInternal(SLSSOITMSCHEO);
    }

    /**
     * Sets <code>value</code> as the associated entity SlsSoItmSchEOImpl.
     */
    public void setSlsSoItmSchEO(SlsSoItmSchEOImpl value) {
        setAttributeInternal(SLSSOITMSCHEO, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent
     * @param lotId key constituent
     * @param binId key constituent
     * @param freeItmId key constituent
     * @param destItmId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String whId,
                                       String docId, String lotId, String binId, String freeItmId, String destItmId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, whId, docId, lotId, binId, freeItmId, destItmId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        /* try {
            super.lock();
        } catch (RowInconsistentException e) {
            refresh(REFRESH_WITH_DB_ONLY_IF_UNCHANGED | REFRESH_CONTAINEES);
            super.lock();
        } */
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

