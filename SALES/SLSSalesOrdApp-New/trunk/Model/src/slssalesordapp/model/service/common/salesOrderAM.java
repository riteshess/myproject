package slssalesordapp.model.service.common;

import java.util.ArrayList;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 28 18:22:06 IST 2013
// ---------------------------------------------------------------------
public interface salesOrderAM extends ApplicationModule {

    String saveDeliverySchedule();

    void donePaySchdlAction();

    void serialNumGen(String voName);

    String paymentDateValidation(Timestamp paydt);

    void postChangesDlvSchdl();

    void dlvrySchdlDiscList();

    void selectAllCheckBox(boolean val);

    void addTnCAction(Row curRow);

    void procTaxOrder(Integer ruleId);

    String newOrOldtax();

    void addOcValues();

    String newOrOldtaxItem();

    void procTaxItem(Integer ruleId);

    String paymntAmtValidator(oracle.jbo.domain.Number pmtAmt);

    void removeOrdTax();

    void removeItmTax();

    String checkOrderTaxAmt();

    void resetAction();

    ViewObject searchVo();


    String itmIdValidator(String itmName);

    String generateDispDocNo();

    oracle.jbo.domain.Number TotAmtBs();

    oracle.jbo.domain.Number TotAmtSp();

    void populateQuotToSo(String quotId);


    void orderCalculation();


    void populatePrevOrdToSo(String quotId);


    void populateTemplateToSo(String templId);

    String checkTaxApplOrNot();

    String ocAmtValidator(oracle.jbo.domain.Number ocAmt);

    void populateSoToSoItmPo();

    void groupSelectedItem();

    void genDrftPurOrder();

    String orderDtValidate(Timestamp ordDate);

    oracle.jbo.domain.Number getLatestItmPrice(Integer eoId);

    void selectAllCheckBoxSugst(boolean val);

    void executeViewObjects();

    oracle.jbo.domain.Number getLatestItmPriceSo(String itmId);

    String saveAsTemp(String tmplDesc);

    Integer getUsrLvl(Integer SlocId, String CldId, String OrgId, Integer UsrId, String WfNo, String DocNo);

    String getWfNo(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    Integer insIntoTxn(Integer SlocId, String CldId, String OrgId, Integer DocNo, String WfNo, Integer usr_idFrm,
                       Integer usr_idTo, Integer levelTo, Integer levelFrm, String action, String remark,
                       oracle.jbo.domain.Number amount);

    Integer pendingCheck(Integer SlocId, String CldId, String OrgId, Integer DocNo);

    String insertIntoSoItmLot();

    void insertIntoSoItmBin();

    void filterSrNoAsPerItem();

    void insertIntoPickItmSr();

    ArrayList checkItemIssueValidation();

    Row getCurOcRow();

    void itmDisclosureList();


    boolean checkDlvSchdlFrItm();

    void issueAutoItem();

    String getcurDocID();

    void setOnCurRow(String doc_id);


    void updOrderStatus();

    String getUserName(Integer uid);

    void generateAutoPaymentSchdl();

    void updateOrderStausCancel(String canc_Flag);

    String checkItemDelete();

    String checkValidateSaveandForward();


    void setTFParamTlrnc();

    String checkOrdAmtDisc(oracle.jbo.domain.Number discVal);

    void setQtyBs(oracle.jbo.domain.Number itmQty);

    Integer getCurrentAmdNo();

    void setAmndmntDtl(String amdNo);

    void filterBinWhWise();

    void filterLotWhWise();

    void setWhIdInDlvSchVw(StringBuffer WhId);

    void setAvailableQuantityOnWarehouseSelection(StringBuffer whId);


    boolean isOrgIdSrcVALID(String whIdSrc);

    boolean isTransferOrderValid();

    void refreshDestWareHouse(StringBuffer orgIdDest);

    Integer getSalesOrderType();

    boolean isItemPriceForEachItmValid();

    boolean doPoExist();

    Integer checkForWf(Integer SlocId, String CldId, String OrgId, Integer UsrId, String WfNo, String DocNo);

    boolean isQuotIdNull();

    void updateOrderStausShortClose(String srt_close_Flag);

    Integer setTransferOrderFlag(StringBuffer flag);

    void changeQuotationStatus();

    Integer chkSlsSo();

    void setpolicy();

    StringBuffer checkPolicyApplied();

    Integer chkEntityType(String eoName);

    Integer chngProsToCust();


    void setSlsSoToNull();

    Boolean checkSchemeAppliedOrNot();

    void addPaymnt();

    boolean isPaymntAmtValid(oracle.jbo.domain.Number amt);

    void delPaymntDtl();

    void fetchandSetRemainingPaymntAmt(Integer CurrId);

    StringBuffer checkShowAtt();

    Boolean checkIfCoaExistsForSelectedEo();

    StringBuffer checkRefOrgApplied();


    Boolean isAdvancePaymentConditionTrue();

    StringBuffer checkforProfileValues(StringBuffer colName);

    Boolean insertPolicyEntry(StringBuffer policyId);

    oracle.jbo.domain.Number getLatestItmPriceSobyItmId(String ItmId);

    String ValidateItmId(String itmId);

    void setValueInRemarkVo();

    Boolean isWorkFlowAndUserValid();

    void executeDlvVws();

    Boolean areEntriesValidForTaxApplication();

    Boolean isItemsForSuggestedOrderSelected();

    Boolean isFinancialYearValid();

    Boolean exportToExcel();

    Row[] getItemRows();

    StringBuilder getExportLink();

    oracle.jbo.domain.Number getTotPriceQtyAmount();

    ArrayList<String> getSuggestedItemDesc(String itmStr);

    Boolean isDeliveryQtyValidForDlvSchdl();

    void insertSoItm();

    void calcAndSetAscblVal();

    void IssueAutoItemFree();

    void FilterSrNoAsPerFreeItem();

    void InsertIntoPickItmSrForFree();

    void FilterLotWhWiseFree();

    String InsertIntoSoItmLotFree();


    void InsertIntoSoItmBinFree();

    oracle.jbo.domain.Number getAndSetDiscountForItmFromPolicy();

    String ChkItemInSchmPresentOrNot(String itmName);

    void setDefaultItmIdIfItmIdIsNull();

    Integer getOrdrType();

    Boolean ItemExistInSchmOrNot();

    void ItemPresentInSoItemOrNot(Boolean showErrorMessaage, Boolean changeDiscountValue);

    void fetchOldPrice();

    Integer getCustomerId();

    Integer validateMandatoryFieldsBeforeAddingItems();

    StringBuilder getSchmTyp(String schmDocId);

    Boolean isSchemeValid(String schDocId);

    void changesSoStatusNdModeOnAmendMent();

    oracle.jbo.domain.Number getUomConvFactorForCurrItm();

    Integer addOtherCharges();

    Integer addItmToTrf();

    void showSaveSucessfullMessage();

    Boolean isDocNoValid(String docNoO, Timestamp docDtO);


    void getValuesBeforeCommit();

    void setValuesBeforeCommit();

    Boolean mandatoryCheck();

    Boolean isPricePolicyValid();

    String getEoPricePlcMethod();

    Boolean isExciseValid();

    Boolean updateLotStatus();

    void setRushOrderStatus();

    void insertSoToSoItmPo(String docId);

    void setBindValuesBin(String whId, String itmId, String docId);

    void setBindValuesBinFree(String whId, String itmId, String docId);

    void setBindValuesLot(String whId, String itmId, String docId);

    void setBindValuesLotFree(String whId, String itmId, String docId);

    void setBindValuesSr(String whId, String itmId, String docId);

    void setBindValuesSrFree(String whId, String itmId, String docId);

    void rollbackSuggestedOrder();

    void prospectAddSetUp();

    Boolean isOrderEligibleToShortClose();

    ArrayList checkFreeItemIssueValidation();

    void FilterFreeBinWhWise(String itmId);

    Boolean chkCcApplicableOrNot();

    void generateCostCenterHeaderWise();

    void sendDateFromTempCcToSlsSoCc();

    void deleteCostCenterItem();

    void updateCostCenterAmt();

    void generateCostCenter();

    void declareGlblValuesForCC();

    String setDefaultSchemPerQty();

    Boolean isCostCenterApplicable();

    void deleteAllDeliverySchedule();

    void updateCostCenterOnSave();

    oracle.jbo.domain.Number insertIntoSchm(String schmId);

    oracle.jbo.domain.Number getTotalItemIssueQtyLot(String itmId);

    void methodToSetVarsToPickTracking();

    void removeScheme(String itmId, String schmId);

    void refreshSchdlDiscList();

    oracle.jbo.domain.Number setNewItmPrice(oracle.jbo.domain.Number price);


    void fetchAndSetDefaultTaxOrderWise();

    Integer isStockAvailableForItems();

    void filterOtherCharges();

    void resetProjectId(String WhrHoId, String areTyp);

    String cancelOrderReq();

    Boolean isItemBasisApplicable();

    Boolean isTrackingApplicable();

    Boolean generateAutoDlvSchdl();

    void resetItemWiseTax();

    void resetTaxableAmountOnAsblAmtChange();

    void createFlexiField();

    Boolean isflexFieldNull();

    Boolean isFlexApplicable();

    void insertDiscountForItem();

    void refreshDiscountBasis();

    void removeDiscBasisForItem();

    String chkPaymentAgaisntIR();
}
