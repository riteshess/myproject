package slssalesordapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.service.salesOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 12 12:21:10 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMGrpItmDtlTempVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EoId {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        ItmIdGrp {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getItmIdGrp();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setItmIdGrp((String)value);
            }
        }
        ,
        ItmUomGrp {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getItmUomGrp();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setItmUomGrp((String)value);
            }
        }
        ,
        OrdQty {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        SlocId {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SoGrpId {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getSoGrpId();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setSoGrpId((String)value);
            }
        }
        ,
        CldId {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        ItmNmTrans {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getItmNmTrans();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setItmNmTrans((String)value);
            }
        }
        ,
        LovItmIdVO1 {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getLovItmIdVO1();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmUom1 {
            public Object get(MMGrpItmDtlTempVORowImpl obj) {
                return obj.getLovItmUom1();
            }

            public void put(MMGrpItmDtlTempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMGrpItmDtlTempVORowImpl object);

        public abstract void put(MMGrpItmDtlTempVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ITMIDGRP = AttributesEnum.ItmIdGrp.index();
    public static final int ITMUOMGRP = AttributesEnum.ItmUomGrp.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SOGRPID = AttributesEnum.SoGrpId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();
    public static final int LOVITMUOM1 = AttributesEnum.LovItmUom1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMGrpItmDtlTempVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmIdGrp.
     * @return the ItmIdGrp
     */
    public String getItmIdGrp() {
        return (String) getAttributeInternal(ITMIDGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmIdGrp.
     * @param value value to set the  ItmIdGrp
     */
    public void setItmIdGrp(String value) {
        setAttributeInternal(ITMIDGRP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomGrp.
     * @return the ItmUomGrp
     */
    public String getItmUomGrp() {
        return (String) getAttributeInternal(ITMUOMGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomGrp.
     * @param value value to set the  ItmUomGrp
     */
    public void setItmUomGrp(String value) {
        setAttributeInternal(ITMUOMGRP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdQty.
     * @return the OrdQty
     */
    public Number getOrdQty() {
        return (Number) getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrdQty.
     * @param value value to set the  OrdQty
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoGrpId.
     * @return the SoGrpId
     */
    public String getSoGrpId() {
        return (String) getAttributeInternal(SOGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoGrpId.
     * @param value value to set the  SoGrpId
     */
    public void setSoGrpId(String value) {
        setAttributeInternal(SOGRPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }
    /**
     * @return
     * Generalized function to call object of application module.
     */
    public salesOrderAMImpl getAm() {
        salesOrderAMImpl am = (salesOrderAMImpl)getApplicationModule();
        return am;
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    public String getItmNmTrans() {
        if(getItmIdGrp() != null && getAttributeInternal(ITMNMTRANS) == null){
            String p_hoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
            
            ViewObjectImpl impl = getAm().getLovItmNmVo1();
            impl.setNamedWhereClauseParam("ItmIdBind", this.getItmIdGrp());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", p_hoOrgId);
            impl.setNamedWhereClauseParam("ItmDescBind", null);
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            StringBuilder str = null;
            System.out.println("Count is in so : "+allRowsInRange.length);
            if(allRowsInRange.length > 0){
                Object a = allRowsInRange[0].getAttribute("ItmDesc");
                str = (a == null ? null : new StringBuilder(a.toString()));
            }
            setItmNmTrans(str.toString());
            
        }
        return (String) getAttributeInternal(ITMNMTRANS);
    }
    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet)getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUom1.
     */
    public RowSet getLovItmUom1() {
        return (RowSet)getAttributeInternal(LOVITMUOM1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
