package slssalesordapp.model.views;

import adf.utils.bean.ADFBeanUtils;
import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import adf.utils.ebiz.EbizParamsAPPUtils;
import adf.utils.ebiz.EbizParamsMMUtils;
import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.entities.SlsSoEOImpl;
import slssalesordapp.model.service.salesOrderAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 27 16:02:47 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSSOEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        EoId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        CashCustNm {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCashCustNm();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCashCustNm((String) value);
            }
        }
        ,
        QuotId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getQuotId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setQuotId((String) value);
            }
        }
        ,
        OrderStat {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getOrderStat();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setOrderStat((Integer) value);
            }
        }
        ,
        SchFlg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSchFlg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSchFlg((String) value);
            }
        }
        ,
        FreightChg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getFreightChg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setFreightChg((String) value);
            }
        }
        ,
        FreightVal {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getFreightVal();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setFreightVal((Number) value);
            }
        }
        ,
        OrderType {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getOrderType();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setOrderType((Integer) value);
            }
        }
        ,
        DiscType {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDiscType();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDiscType((String) value);
            }
        }
        ,
        DiscPerc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDiscPerc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDiscPerc((Integer) value);
            }
        }
        ,
        DiscVal {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDiscVal();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDiscVal((Number) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        CurrIdSp {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCurrIdSp((Integer) value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number) value);
            }
        }
        ,
        CurrIdBs {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCurrIdBs();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCurrIdBs((Integer) value);
            }
        }
        ,
        AdvPayFlg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAdvPayFlg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAdvPayFlg((String) value);
            }
        }
        ,
        HoldTillDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getHoldTillDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setHoldTillDt((Timestamp) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        EoNmTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoNmTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoNmTrans((String) value);
            }
        }
        ,
        CurrDescTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCurrDescTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCurrDescTrans((String) value);
            }
        }
        ,
        ItmAmtSpSumTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getItmAmtSpSumTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setItmAmtSpSumTrans((Number) value);
            }
        }
        ,
        ItmAmtBsSumTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getItmAmtBsSumTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setItmAmtBsSumTrans((Number) value);
            }
        }
        ,
        DlvModeTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDlvModeTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDlvModeTrans((Integer) value);
            }
        }
        ,
        DvlDateTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDvlDateTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDvlDateTrans((Timestamp) value);
            }
        }
        ,
        WhIdAddrTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getWhIdAddrTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setWhIdAddrTrans((String) value);
            }
        }
        ,
        WhIdAddrIdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getWhIdAddrIdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setWhIdAddrIdTrans((String) value);
            }
        }
        ,
        WhIdDlvTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getWhIdDlvTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setWhIdDlvTrans((String) value);
            }
        }
        ,
        PayModeTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPayModeTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPayModeTrans((Integer) value);
            }
        }
        ,
        PayDateTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPayDateTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPayDateTrans((Timestamp) value);
            }
        }
        ,
        PayAmtTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPayAmtTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPayAmtTrans((Number) value);
            }
        }
        ,
        PayAdvFlgTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPayAdvFlgTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPayAdvFlgTrans((String) value);
            }
        }
        ,
        PayAmtSumTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPayAmtSumTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPayAmtSumTrans((Number) value);
            }
        }
        ,
        OcAmtSumTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getOcAmtSumTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setOcAmtSumTrans((Number) value);
            }
        }
        ,
        TotTaxAmtOrdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotTaxAmtOrdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotTaxAmtOrdTrans((Number) value);
            }
        }
        ,
        OrderTotalCostTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getOrderTotalCostTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setOrderTotalCostTrans((Number) value);
            }
        }
        ,
        TotItmDiscSumTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotItmDiscSumTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotItmDiscSumTrans((Number) value);
            }
        }
        ,
        SoDiscAmtTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoDiscAmtTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoDiscAmtTrans((Number) value);
            }
        }
        ,
        CostBeforeDiscTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCostBeforeDiscTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCostBeforeDiscTrans((Number) value);
            }
        }
        ,
        CostBeforeTaxTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCostBeforeTaxTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCostBeforeTaxTrans((Number) value);
            }
        }
        ,
        SoFrghtAmtTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoFrghtAmtTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoFrghtAmtTrans((Number) value);
            }
        }
        ,
        TotTaxableAmtTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotTaxableAmtTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotTaxableAmtTrans((Number) value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String) value);
            }
        }
        ,
        TotAmtBs {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotAmtBs((Number) value);
            }
        }
        ,
        TotAmtSp {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotAmtSp((Number) value);
            }
        }
        ,
        AmdDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAmdDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAmdDt((Timestamp) value);
            }
        }
        ,
        AmdNo {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAmdNo();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAmdNo((String) value);
            }
        }
        ,
        RefSoDocId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getRefSoDocId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setRefSoDocId((String) value);
            }
        }
        ,
        TmplDocId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTmplDocId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTmplDocId((String) value);
            }
        }
        ,
        RefSoDocIdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getRefSoDocIdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setRefSoDocIdTrans((String) value);
            }
        }
        ,
        TmplDocIdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTmplDocIdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTmplDocIdTrans((String) value);
            }
        }
        ,
        ocAmtSumWidSign {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getocAmtSumWidSign();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setocAmtSumWidSign((Number) value);
            }
        }
        ,
        costBfrOcTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getcostBfrOcTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setcostBfrOcTrans((Number) value);
            }
        }
        ,
        InsAmt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getInsAmt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setInsAmt((Number) value);
            }
        }
        ,
        SoBasis {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoBasis();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoBasis((Integer) value);
            }
        }
        ,
        SoId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoId((String) value);
            }
        }
        ,
        TlrncDays {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTlrncDays();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTlrncDays((Integer) value);
            }
        }
        ,
        CoaId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        }
        ,
        WhId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setWhId((String) value);
            }
        }
        ,
        FyId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        SoMode {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoMode();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoMode((Integer) value);
            }
        }
        ,
        cancelOrderTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getcancelOrderTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setcancelOrderTrans((String) value);
            }
        }
        ,
        payAmtPendTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getpayAmtPendTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setpayAmtPendTrans((Number) value);
            }
        }
        ,
        SoVldtDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoVldtDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoVldtDt((Timestamp) value);
            }
        }
        ,
        ShipAdds {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getShipAdds();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setShipAdds((String) value);
            }
        }
        ,
        custAddressTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getcustAddressTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setcustAddressTrans((String) value);
            }
        }
        ,
        AddressTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAddressTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAddressTrans((String) value);
            }
        }
        ,
        AssignedTo {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAssignedTo();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAssignedTo((Integer) value);
            }
        }
        ,
        EoTypeOnOrderTypeTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoTypeOnOrderTypeTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ExtDocDt {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getExtDocDt();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setExtDocDt((Timestamp) value);
            }
        }
        ,
        ExtDocNo {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getExtDocNo();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setExtDocNo((String) value);
            }
        }
        ,
        QuotNmTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getQuotNmTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setQuotNmTrans((String) value);
            }
        }
        ,
        TrRuleTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTrRuleTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTrRuleTrans((Integer) value);
            }
        }
        ,
        srtCloseTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getsrtCloseTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setsrtCloseTrans((String) value);
            }
        }
        ,
        CashCustAdds {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCashCustAdds();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCashCustAdds((String) value);
            }
        }
        ,
        ContractValueTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getContractValueTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setContractValueTrans((Number) value);
            }
        }
        ,
        SoContractBasis {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoContractBasis();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoContractBasis((Integer) value);
            }
        }
        ,
        SoContractPrice {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoContractPrice();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoContractPrice((Number) value);
            }
        }
        ,
        SoContractQty {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoContractQty();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoContractQty((Number) value);
            }
        }
        ,
        SoContractValue {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoContractValue();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoContractValue((Number) value);
            }
        }
        ,
        EoPricePlc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoPricePlc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoPricePlc((String) value);
            }
        }
        ,
        CategoryTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getCategoryTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setCategoryTrans((Integer) value);
            }
        }
        ,
        Remarks {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        QuotIdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getQuotIdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setQuotIdTrans((String) value);
            }
        }
        ,
        DelRemarksTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDelRemarksTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setDelRemarksTrans((String) value);
            }
        }
        ,
        SoDocOriginOrg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoDocOriginOrg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoDocOriginOrg((String) value);
            }
        }
        ,
        TransDocOriginOrg {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransDocOriginOrg();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransDocOriginOrg((String) value);
            }
        }
        ,
        GrossCostBeforeTaxTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getGrossCostBeforeTaxTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setGrossCostBeforeTaxTrans((Number) value);
            }
        }
        ,
        TotItmAmtGsBs {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotItmAmtGsBs();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotItmAmtGsBs((Number) value);
            }
        }
        ,
        TotItmAmtGsSp {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotItmAmtGsSp();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotItmAmtGsSp((Number) value);
            }
        }
        ,
        TransCreditDays {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransCreditDays();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransCreditDays((Number) value);
            }
        }
        ,
        TransCreditLimit {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransCreditLimit();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransCreditLimit((Number) value);
            }
        }
        ,
        TransCurrentBalance {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransCurrentBalance();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransCurrentBalance((Number) value);
            }
        }
        ,
        TransOrderBalance {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransOrderBalance();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransOrderBalance((Number) value);
            }
        }
        ,
        EoCatgTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoCatgTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoCatgTrans((Integer) value);
            }
        }
        ,
        UsrNmTxtTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getUsrNmTxtTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setUsrNmTxtTrans((String) value);
            }
        }
        ,
        AssignedToTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAssignedToTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAssignedToTrans((String) value);
            }
        }
        ,
        EoPlcNmTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoPlcNmTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoPlcNmTrans((String) value);
            }
        }
        ,
        TransVhNo {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransVhNo();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransVhNo((String) value);
            }
        }
        ,
        TotQtyTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTotQtyTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTotQtyTrans((Number) value);
            }
        }
        ,
        ShowTotQty {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getShowTotQty();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setShowTotQty((Boolean) value);
            }
        }
        ,
        TaxFormTypId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTaxFormTypId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTaxFormTypId((Integer) value);
            }
        }
        ,
        SoSubType {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSoSubType();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setSoSubType((Integer) value);
            }
        }
        ,
        PrjId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getPrjId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        }
        ,
        ProjectIdTrans {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getProjectIdTrans();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setProjectIdTrans((String) value);
            }
        }
        ,
        RefTypSrc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getRefTypSrc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setRefTypSrc((Integer) value);
            }
        }
        ,
        ShipToAdds {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getShipToAdds();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setShipToAdds((String) value);
            }
        }
        ,
        ShipToNm {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getShipToNm();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setShipToNm((String) value);
            }
        }
        ,
        TransExmptTaxChk {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getTransExmptTaxChk();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setTransExmptTaxChk((String) value);
            }
        }
        ,
        EoCatgId {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getEoCatgId();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setEoCatgId((Integer) value);
            }
        }
        ,
        SlsSoItm {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoItm();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoDlvSchdl {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoDlvSchdl();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DlvShdlView {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getDlvShdlView();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoPmntSchdl {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoPmntSchdl();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoTnc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoTnc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoTr {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoTr();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoOc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoOc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        RateContractVw {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getRateContractVw();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoCalc {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoCalc();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmSoItmPo {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getMmSoItmPo();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MMDrftPoView {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getMMDrftPoView();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoPaymntVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoPaymntVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppWfAttchVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getAppWfAttchVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmLotVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoItmLotVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmSchVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoItmSchVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmTrfVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoItmTrfVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoTrLinesVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoTrLinesVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoFlxVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getSlsSoFlxVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrId1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovUsrId1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoId1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovEoId1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCurrId1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovCurrId1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTyp1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovDiscTyp1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrdStatus1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovOrdStatus1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrderTyp1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovOrderTyp1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDlvModeVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovDlvModeVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovWhIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWhIdAddrsVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovWhIdAddrsVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPayModeVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovPayModeVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxTypVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovTaxTypVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        quotationLovVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getquotationLovVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDispOrdIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovDispOrdIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTmplDocIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovTmplDocIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSoBasisVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovSoBasisVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSoModeVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovSoModeVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoAddsVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovEoAddsVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxRuleIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovTaxRuleIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQtyContractVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovQtyContractVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPolicyVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovPolicyVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAppDsAttVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovAppDsAttVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        quotationLovVO2 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getquotationLovVO2();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVRefOrgV0_1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLOVRefOrgV0_1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoNmFrmEoIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovEoNmFrmEoIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovEoNmVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovEoNmVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWarrantyVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovWarrantyVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrNmFrmUsrIdVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovUsrNmFrmUsrIdVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovPlcNmVo1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovPlcNmVo1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovTaxFormTypeVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovTaxFormTypeVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrderSubTypVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovOrderSubTypVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVProjectVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLOVProjectVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVProjectVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLOVProjectVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVRefTypeSrcVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLOVRefTypeSrcVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSalesmanVO {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovSalesmanVO();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCustCatgVO1 {
            public Object get(SlsSoVORowImpl obj) {
                return obj.getLovCustCatgVO1();
            }

            public void put(SlsSoVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(SlsSoVORowImpl object);

        public abstract void put(SlsSoVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    private static ADFLogger _log = ADFLogger.createADFLogger(SlsSoVORowImpl.class);
    // private Integer amt_digit = EbizParams.GLBL_AMT_DIGIT();
    //private Integer cur_digit = EbizParams.GLBL_CURR_DIGIT();


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CASHCUSTNM = AttributesEnum.CashCustNm.index();
    public static final int QUOTID = AttributesEnum.QuotId.index();
    public static final int ORDERSTAT = AttributesEnum.OrderStat.index();
    public static final int SCHFLG = AttributesEnum.SchFlg.index();
    public static final int FREIGHTCHG = AttributesEnum.FreightChg.index();
    public static final int FREIGHTVAL = AttributesEnum.FreightVal.index();
    public static final int ORDERTYPE = AttributesEnum.OrderType.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCPERC = AttributesEnum.DiscPerc.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDBS = AttributesEnum.CurrIdBs.index();
    public static final int ADVPAYFLG = AttributesEnum.AdvPayFlg.index();
    public static final int HOLDTILLDT = AttributesEnum.HoldTillDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int CURRDESCTRANS = AttributesEnum.CurrDescTrans.index();
    public static final int ITMAMTSPSUMTRANS = AttributesEnum.ItmAmtSpSumTrans.index();
    public static final int ITMAMTBSSUMTRANS = AttributesEnum.ItmAmtBsSumTrans.index();
    public static final int DLVMODETRANS = AttributesEnum.DlvModeTrans.index();
    public static final int DVLDATETRANS = AttributesEnum.DvlDateTrans.index();
    public static final int WHIDADDRTRANS = AttributesEnum.WhIdAddrTrans.index();
    public static final int WHIDADDRIDTRANS = AttributesEnum.WhIdAddrIdTrans.index();
    public static final int WHIDDLVTRANS = AttributesEnum.WhIdDlvTrans.index();
    public static final int PAYMODETRANS = AttributesEnum.PayModeTrans.index();
    public static final int PAYDATETRANS = AttributesEnum.PayDateTrans.index();
    public static final int PAYAMTTRANS = AttributesEnum.PayAmtTrans.index();
    public static final int PAYADVFLGTRANS = AttributesEnum.PayAdvFlgTrans.index();
    public static final int PAYAMTSUMTRANS = AttributesEnum.PayAmtSumTrans.index();
    public static final int OCAMTSUMTRANS = AttributesEnum.OcAmtSumTrans.index();
    public static final int TOTTAXAMTORDTRANS = AttributesEnum.TotTaxAmtOrdTrans.index();
    public static final int ORDERTOTALCOSTTRANS = AttributesEnum.OrderTotalCostTrans.index();
    public static final int TOTITMDISCSUMTRANS = AttributesEnum.TotItmDiscSumTrans.index();
    public static final int SODISCAMTTRANS = AttributesEnum.SoDiscAmtTrans.index();
    public static final int COSTBEFOREDISCTRANS = AttributesEnum.CostBeforeDiscTrans.index();
    public static final int COSTBEFORETAXTRANS = AttributesEnum.CostBeforeTaxTrans.index();
    public static final int SOFRGHTAMTTRANS = AttributesEnum.SoFrghtAmtTrans.index();
    public static final int TOTTAXABLEAMTTRANS = AttributesEnum.TotTaxableAmtTrans.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int REFSODOCID = AttributesEnum.RefSoDocId.index();
    public static final int TMPLDOCID = AttributesEnum.TmplDocId.index();
    public static final int REFSODOCIDTRANS = AttributesEnum.RefSoDocIdTrans.index();
    public static final int TMPLDOCIDTRANS = AttributesEnum.TmplDocIdTrans.index();
    public static final int OCAMTSUMWIDSIGN = AttributesEnum.ocAmtSumWidSign.index();
    public static final int COSTBFROCTRANS = AttributesEnum.costBfrOcTrans.index();
    public static final int INSAMT = AttributesEnum.InsAmt.index();
    public static final int SOBASIS = AttributesEnum.SoBasis.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int TLRNCDAYS = AttributesEnum.TlrncDays.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int SOMODE = AttributesEnum.SoMode.index();
    public static final int CANCELORDERTRANS = AttributesEnum.cancelOrderTrans.index();
    public static final int PAYAMTPENDTRANS = AttributesEnum.payAmtPendTrans.index();
    public static final int SOVLDTDT = AttributesEnum.SoVldtDt.index();
    public static final int SHIPADDS = AttributesEnum.ShipAdds.index();
    public static final int CUSTADDRESSTRANS = AttributesEnum.custAddressTrans.index();
    public static final int ADDRESSTRANS = AttributesEnum.AddressTrans.index();
    public static final int ASSIGNEDTO = AttributesEnum.AssignedTo.index();
    public static final int EOTYPEONORDERTYPETRANS = AttributesEnum.EoTypeOnOrderTypeTrans.index();
    public static final int EXTDOCDT = AttributesEnum.ExtDocDt.index();
    public static final int EXTDOCNO = AttributesEnum.ExtDocNo.index();
    public static final int QUOTNMTRANS = AttributesEnum.QuotNmTrans.index();
    public static final int TRRULETRANS = AttributesEnum.TrRuleTrans.index();
    public static final int SRTCLOSETRANS = AttributesEnum.srtCloseTrans.index();
    public static final int CASHCUSTADDS = AttributesEnum.CashCustAdds.index();
    public static final int CONTRACTVALUETRANS = AttributesEnum.ContractValueTrans.index();
    public static final int SOCONTRACTBASIS = AttributesEnum.SoContractBasis.index();
    public static final int SOCONTRACTPRICE = AttributesEnum.SoContractPrice.index();
    public static final int SOCONTRACTQTY = AttributesEnum.SoContractQty.index();
    public static final int SOCONTRACTVALUE = AttributesEnum.SoContractValue.index();
    public static final int EOPRICEPLC = AttributesEnum.EoPricePlc.index();
    public static final int CATEGORYTRANS = AttributesEnum.CategoryTrans.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int QUOTIDTRANS = AttributesEnum.QuotIdTrans.index();
    public static final int DELREMARKSTRANS = AttributesEnum.DelRemarksTrans.index();
    public static final int SODOCORIGINORG = AttributesEnum.SoDocOriginOrg.index();
    public static final int TRANSDOCORIGINORG = AttributesEnum.TransDocOriginOrg.index();
    public static final int GROSSCOSTBEFORETAXTRANS = AttributesEnum.GrossCostBeforeTaxTrans.index();
    public static final int TOTITMAMTGSBS = AttributesEnum.TotItmAmtGsBs.index();
    public static final int TOTITMAMTGSSP = AttributesEnum.TotItmAmtGsSp.index();
    public static final int TRANSCREDITDAYS = AttributesEnum.TransCreditDays.index();
    public static final int TRANSCREDITLIMIT = AttributesEnum.TransCreditLimit.index();
    public static final int TRANSCURRENTBALANCE = AttributesEnum.TransCurrentBalance.index();
    public static final int TRANSORDERBALANCE = AttributesEnum.TransOrderBalance.index();
    public static final int EOCATGTRANS = AttributesEnum.EoCatgTrans.index();
    public static final int USRNMTXTTRANS = AttributesEnum.UsrNmTxtTrans.index();
    public static final int ASSIGNEDTOTRANS = AttributesEnum.AssignedToTrans.index();
    public static final int EOPLCNMTRANS = AttributesEnum.EoPlcNmTrans.index();
    public static final int TRANSVHNO = AttributesEnum.TransVhNo.index();
    public static final int TOTQTYTRANS = AttributesEnum.TotQtyTrans.index();
    public static final int SHOWTOTQTY = AttributesEnum.ShowTotQty.index();
    public static final int TAXFORMTYPID = AttributesEnum.TaxFormTypId.index();
    public static final int SOSUBTYPE = AttributesEnum.SoSubType.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int PROJECTIDTRANS = AttributesEnum.ProjectIdTrans.index();
    public static final int REFTYPSRC = AttributesEnum.RefTypSrc.index();
    public static final int SHIPTOADDS = AttributesEnum.ShipToAdds.index();
    public static final int SHIPTONM = AttributesEnum.ShipToNm.index();
    public static final int TRANSEXMPTTAXCHK = AttributesEnum.TransExmptTaxChk.index();
    public static final int EOCATGID = AttributesEnum.EoCatgId.index();
    public static final int SLSSOITM = AttributesEnum.SlsSoItm.index();
    public static final int SLSSODLVSCHDL = AttributesEnum.SlsSoDlvSchdl.index();
    public static final int DLVSHDLVIEW = AttributesEnum.DlvShdlView.index();
    public static final int SLSSOPMNTSCHDL = AttributesEnum.SlsSoPmntSchdl.index();
    public static final int SLSSOTNC = AttributesEnum.SlsSoTnc.index();
    public static final int SLSSOTR = AttributesEnum.SlsSoTr.index();
    public static final int SLSSOOC = AttributesEnum.SlsSoOc.index();
    public static final int RATECONTRACTVW = AttributesEnum.RateContractVw.index();
    public static final int SLSSOCALC = AttributesEnum.SlsSoCalc.index();
    public static final int MMSOITMPO = AttributesEnum.MmSoItmPo.index();
    public static final int MMDRFTPOVIEW = AttributesEnum.MMDrftPoView.index();
    public static final int SLSSOPAYMNTVO = AttributesEnum.SlsSoPaymntVO.index();
    public static final int APPWFATTCHVO = AttributesEnum.AppWfAttchVO.index();
    public static final int SLSSOITMLOTVO = AttributesEnum.SlsSoItmLotVO.index();
    public static final int SLSSOITMSCHVO = AttributesEnum.SlsSoItmSchVO.index();
    public static final int SLSSOITMTRFVO = AttributesEnum.SlsSoItmTrfVO.index();
    public static final int SLSSOTRLINESVO = AttributesEnum.SlsSoTrLinesVO.index();
    public static final int SLSSOFLXVO = AttributesEnum.SlsSoFlxVO.index();
    public static final int LOVUSRID1 = AttributesEnum.LovUsrId1.index();
    public static final int LOVEOID1 = AttributesEnum.LovEoId1.index();
    public static final int LOVCURRID1 = AttributesEnum.LovCurrId1.index();
    public static final int LOVDISCTYP1 = AttributesEnum.LovDiscTyp1.index();
    public static final int LOVORDSTATUS1 = AttributesEnum.LovOrdStatus1.index();
    public static final int LOVORDERTYP1 = AttributesEnum.LovOrderTyp1.index();
    public static final int LOVDLVMODEVO1 = AttributesEnum.LovDlvModeVO1.index();
    public static final int LOVWHIDVO1 = AttributesEnum.LovWhIdVO1.index();
    public static final int LOVWHIDADDRSVO1 = AttributesEnum.LovWhIdAddrsVO1.index();
    public static final int LOVPAYMODEVO1 = AttributesEnum.LovPayModeVO1.index();
    public static final int LOVTAXTYPVO1 = AttributesEnum.LovTaxTypVO1.index();
    public static final int QUOTATIONLOVVO1 = AttributesEnum.quotationLovVO1.index();
    public static final int LOVDISPORDIDVO1 = AttributesEnum.LovDispOrdIdVO1.index();
    public static final int LOVTMPLDOCIDVO1 = AttributesEnum.LovTmplDocIdVO1.index();
    public static final int LOVSOBASISVO1 = AttributesEnum.LovSoBasisVO1.index();
    public static final int LOVSOMODEVO1 = AttributesEnum.LovSoModeVO1.index();
    public static final int LOVEOADDSVO1 = AttributesEnum.LovEoAddsVO1.index();
    public static final int LOVTAXRULEIDVO1 = AttributesEnum.LovTaxRuleIdVO1.index();
    public static final int LOVQTYCONTRACTVO1 = AttributesEnum.LovQtyContractVO1.index();
    public static final int LOVPOLICYVO1 = AttributesEnum.LovPolicyVO1.index();
    public static final int LOVAPPDSATTVO1 = AttributesEnum.LovAppDsAttVO1.index();
    public static final int QUOTATIONLOVVO2 = AttributesEnum.quotationLovVO2.index();
    public static final int LOVREFORGV0_1 = AttributesEnum.LOVRefOrgV0_1.index();
    public static final int LOVEONMFRMEOIDVO1 = AttributesEnum.LovEoNmFrmEoIdVO1.index();
    public static final int LOVEONMVO1 = AttributesEnum.LovEoNmVO1.index();
    public static final int LOVWARRANTYVO1 = AttributesEnum.LovWarrantyVO1.index();
    public static final int LOVUSRNMFRMUSRIDVO1 = AttributesEnum.LovUsrNmFrmUsrIdVO1.index();
    public static final int LOVPLCNMVO1 = AttributesEnum.LovPlcNmVo1.index();
    public static final int LOVTAXFORMTYPEVO1 = AttributesEnum.LovTaxFormTypeVO1.index();
    public static final int LOVORDERSUBTYPVO1 = AttributesEnum.LovOrderSubTypVO1.index();
    public static final int LOVPROJECTVO = AttributesEnum.LOVProjectVO.index();
    public static final int LOVPROJECTVO1 = AttributesEnum.LOVProjectVO1.index();
    public static final int LOVREFTYPESRCVO = AttributesEnum.LOVRefTypeSrcVO.index();
    public static final int LOVSALESMANVO = AttributesEnum.LovSalesmanVO.index();
    public static final int LOVCUSTCATGVO1 = AttributesEnum.LovCustCatgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoVORowImpl() {
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public salesOrderAMImpl getAm() {
        return (salesOrderAMImpl) getApplicationModule();
    }

    /**
     * Gets SlsSoEO entity object.
     * @return the SlsSoEO
     */
    public SlsSoEOImpl getSlsSoEO() {
        return (SlsSoEOImpl) getEntity(ENTITY_SLSSOEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        if (value != null) {
            updateValueOnEOChange(value);
        }
    }
    
    public void updateValueOnEOChange( Integer value){
        setAttributeInternal(EOID, value);
        setTransCurrentBalance(null);
        setTransCreditDays(null);
        setTransCreditLimit(null);
        setTransOrderBalance(null);
        setEoCatgTrans(null);
        setCoaId(getAm().getCoaIdForCurrEo(value));
        setCurrIdSp(EbizParamsAPPUtils.getDefaultCurrIdOfEoId(getAm(), value));
        setAssignedTo(getAm().getSalesExecForEo(value));
        setShipAdds(getAm().getDefaultShippingAddsOfCurrEo(value));
        setEoPricePlc(getAm().getPricePolicyForCurrEo(value));
        eoNm = null;
    }

    /**
     * Gets the attribute value for CASH_CUST_NM using the alias name CashCustNm.
     * @return the CASH_CUST_NM
     */
    public String getCashCustNm() {
        return (String) getAttributeInternal(CASHCUSTNM);
    }

    /**
     * Sets <code>value</code> as attribute value for CASH_CUST_NM using the alias name CashCustNm.
     * @param value value to set the CASH_CUST_NM
     */
    public void setCashCustNm(String value) {
        setAttributeInternal(CASHCUSTNM, value);
    }

    /**
     * Gets the attribute value for QUOT_ID using the alias name QuotId.
     * @return the QUOT_ID
     */
    public String getQuotId() {
        return (String) getAttributeInternal(QUOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_ID using the alias name QuotId.
     * @param value value to set the QUOT_ID
     */
    public void setQuotId(String value) {
        setAttributeInternal(QUOTID, value);
        setQuotIdTrans(null);
    }

    /**
     * Gets the attribute value for ORDER_STAT using the alias name OrderStat.
     * @return the ORDER_STAT
     */
    public Integer getOrderStat() {
        return (Integer) getAttributeInternal(ORDERSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_STAT using the alias name OrderStat.
     * @param value value to set the ORDER_STAT
     */
    public void setOrderStat(Integer value) {
        setAttributeInternal(ORDERSTAT, value);
    }


    /**
     * Gets the attribute value for SCH_FLG using the alias name SchFlg.
     * @return the SCH_FLG
     */
    public String getSchFlg() {
        return (String) getAttributeInternal(SCHFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SCH_FLG using the alias name SchFlg.
     * @param value value to set the SCH_FLG
     */
    public void setSchFlg(String value) {
        setAttributeInternal(SCHFLG, value);
    }

    /**
     * Gets the attribute value for FREIGHT_CHG using the alias name FreightChg.
     * @return the FREIGHT_CHG
     */
    public String getFreightChg() {
        return (String) getAttributeInternal(FREIGHTCHG);
    }

    /**
     * Sets <code>value</code> as attribute value for FREIGHT_CHG using the alias name FreightChg.
     * @param value value to set the FREIGHT_CHG
     */
    public void setFreightChg(String value) {
        setAttributeInternal(FREIGHTCHG, value);
    }

    /**
     * Gets the attribute value for FREIGHT_VAL using the alias name FreightVal.
     * @return the FREIGHT_VAL
     */
    public Number getFreightVal() {
        return (Number) getAttributeInternal(FREIGHTVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for FREIGHT_VAL using the alias name FreightVal.
     * @param value value to set the FREIGHT_VAL
     */
    public void setFreightVal(Number value) {
        setAttributeInternal(FREIGHTVAL, value);
    }

    /**
     * Gets the attribute value for ORDER_TYPE using the alias name OrderType.
     * @return the ORDER_TYPE
     */
    public Integer getOrderType() {
        return (Integer) getAttributeInternal(ORDERTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ORDER_TYPE using the alias name OrderType.
     * @param value value to set the ORDER_TYPE
     */
    public void setOrderType(Integer value) {
        setAttributeInternal(ORDERTYPE, value);
        setSoSubType(0);
        // For setting EOId and EoNm to null at the time of type changes
        // System.out.println("Setting Order typ to : " + value);
        setAttributeInternal(EOID, null);
        eoNm = null;
        if (value != null && (value == 310 || value == 892)) {
            Integer i = this.getAm().getCashCustomerAccForCurrOrg();
            if (i != -1) {
                setEoId(i);
            }
        }
            setEoCatgId(null);
        setTaxFormTypId(null);

        // System.out.println("EoID : " + getEoId());
    }

    /**
     * Gets the attribute value for DISC_TYPE using the alias name DiscType.
     * @return the DISC_TYPE
     */
    public String getDiscType() {
        return (String) getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_TYPE using the alias name DiscType.
     * @param value value to set the DISC_TYPE
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DISC_PERC using the alias name DiscPerc.
     * @return the DISC_PERC
     */
    public Integer getDiscPerc() {
        return (Integer) getAttributeInternal(DISCPERC);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_PERC using the alias name DiscPerc.
     * @param value value to set the DISC_PERC
     */
    public void setDiscPerc(Integer value) {
        setAttributeInternal(DISCPERC, value);
    }

    /**
     * Gets the attribute value for DISC_VAL using the alias name DiscVal.
     * @return the DISC_VAL
     */
    public Number getDiscVal() {
        return (Number) getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_VAL using the alias name DiscVal.
     * @param value value to set the DISC_VAL
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        if (value != null) {
            setAttributeInternal(TAXRULEFLG, value);
            if (value.toString().equals("I")) {
                setTaxAfterDiscFlg("Y");
            }
            setTaxFormTypId(null);
        }
        
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        if (value != null) {
            setAttributeInternal(CURRIDSP, value);
            setCurrConvFctr(getAm().getCurrRateForCurrId(value));
        }

    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        if (getAttributeInternal(CURRCONVFCTR) == null) {
            return new Number(1);
        }
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        if (value != null) {
            setAttributeInternal(CURRCONVFCTR, value);
        }
    }

    /**
     * Gets the attribute value for CURR_ID_BS using the alias name CurrIdBs.
     * @return the CURR_ID_BS
     */
    public Integer getCurrIdBs() {
        return (Integer) getAttributeInternal(CURRIDBS);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_BS using the alias name CurrIdBs.
     * @param value value to set the CURR_ID_BS
     */
    public void setCurrIdBs(Integer value) {
        setAttributeInternal(CURRIDBS, value);
    }

    /**
     * Gets the attribute value for ADV_PAY_FLG using the alias name AdvPayFlg.
     * @return the ADV_PAY_FLG
     */
    public String getAdvPayFlg() {
        return (String) getAttributeInternal(ADVPAYFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ADV_PAY_FLG using the alias name AdvPayFlg.
     * @param value value to set the ADV_PAY_FLG
     */
    public void setAdvPayFlg(String value) {
        setAttributeInternal(ADVPAYFLG, value);
    }


    /**
     * Gets the attribute value for HOLD_TILL_DT using the alias name HoldTillDt.
     * @return the HOLD_TILL_DT
     */
    public Timestamp getHoldTillDt() {
        return (Timestamp) getAttributeInternal(HOLDTILLDT);
    }

    /**
     * Sets <code>value</code> as attribute value for HOLD_TILL_DT using the alias name HoldTillDt.
     * @param value value to set the HOLD_TILL_DT
     */
    public void setHoldTillDt(Timestamp value) {
        setAttributeInternal(HOLDTILLDT, value);
    }


    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        if (value != null) {
            setAttributeInternal(USRIDMOD, value);
        }
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }
    Integer eoNotNl = null;

    /**
     * Gets the attribute value for the calculated attribute EoNmTrans.
     * @return the EoNmTrans
     */
    private String eoNm = null;

    public String getEoNmTrans() {
        if (eoNm == null && getEoId() != null) {
            RowSet eoIdVO = this.getLovEoNmVO1();
            eoIdVO.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            eoIdVO.setNamedWhereClauseParam("CldIdBind", getCldId());
            eoIdVO.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
            eoIdVO.setNamedWhereClauseParam("EoIdBind", getEoId());
            eoIdVO.executeQuery();
            Row[] allRowsInRange = eoIdVO.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object eoNmO = allRowsInRange[0].getAttribute("EoNm");
                eoNm = (eoNmO == null ? null : eoNmO.toString());
                System.out.println("Setting EO Name to : " + eoNm);
            }
        }
        return eoNm;
        //return (String)getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNmTrans.
     * @param value value to set the  EoNmTrans
     */
    public void setEoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrDescTrans.
     * @return the CurrDescTrans
     */
    public String getCurrDescTrans() {

        Integer currId = null;
        String currDesc = null;
        try {
            currId = getCurrIdSp();
        } catch (NullPointerException npe) {
            //  System.out.println(npe);
            npe.printStackTrace();
        }
        if (currId != null) {
            Row[] xx = getLovCurrId1().getFilteredRows("CcCurrIdTxn", currId);

            if (xx.length > 0) {
                currDesc = xx[0].getAttribute("CurrDescTxn").toString();
            }
            //   System.out.println("CurrDesc in RowImpl-->"+currDesc);
            return currDesc;

        } else {
            return (String) getAttributeInternal(CURRDESCTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrDescTrans.
     * @param value value to set the  CurrDescTrans
     */
    public void setCurrDescTrans(String value) {
        setAttributeInternal(CURRDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSpSumTrans.
     * @return the ItmAmtSpSumTrans
     */
    public Number getItmAmtSpSumTrans() {
        // return (Number) getAttributeInternal(ITMAMTSPSUMTRANS);
        return calItmAmtSp();
    }

    protected Number calItmAmtSp() {
        //SlsSoItm.sum("ItmAmtSpTrans")==null ? 0 : SlsSoItm.sum("ItmAmtSpTrans")
        Number tot = new Number(0);

        //RowSetIterator itr = getSlsSoItm().createRow
        Row r[] = getSlsSoItm().getAllRowsInRange();
        for (int i = 0; i < r.length; i++) {
            Number temp = new Number(0);
            if (r[i].getAttribute("ItmAmtSpTrans") != null) {
                temp = (Number) r[i].getAttribute("ItmAmtSpTrans");
            } else {
                temp = new Number(0);
            }
            tot = tot.add(temp);
        }
        //  System.out.println("The total Sp Amount of so is ======================= "+tot);
        return tot;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtSpSumTrans.
     * @param value value to set the  ItmAmtSpSumTrans
     */
    public void setItmAmtSpSumTrans(Number value) {
        setAttributeInternal(ITMAMTSPSUMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBsSumTrans.
     * @return the ItmAmtBsSumTrans
     */
    public Number getItmAmtBsSumTrans() {
        //SlsSoItm.sum("ItmAmtBsTrans")==null ? 0 : SlsSoItm.sum("ItmAmtBsTrans")
        // return (Number) getAttributeInternal(ITMAMTBSSUMTRANS);
        return calcTotalItmAmtBs();
    }

    protected Number calcTotalItmAmtBs() {
        Number tot = new Number(0);

        //RowSetIterator itr = getSlsSoItm().createRow
        Row r[] = getSlsSoItm().getAllRowsInRange();
        for (int i = 0; i < r.length; i++) {
            Number temp = new Number(0);
            if (r[i].getAttribute("ItmAmtBsTrans") != null) {
                temp = (Number) r[i].getAttribute("ItmAmtBsTrans");
            } else {
                temp = new Number(0);
            }
            tot = tot.add(temp);
        }
        // System.out.println("The total ItmAmtBsTrans of so is ======================= "+tot);
        return tot;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtBsSumTrans.
     * @param value value to set the  ItmAmtBsSumTrans
     */
    public void setItmAmtBsSumTrans(Number value) {
        setAttributeInternal(ITMAMTBSSUMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvModeTrans.
     * @return the DlvModeTrans
     */
    public Integer getDlvModeTrans() {
        return (Integer) getAttributeInternal(DLVMODETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DlvModeTrans.
     * @param value value to set the  DlvModeTrans
     */
    public void setDlvModeTrans(Integer value) {
        setAttributeInternal(DLVMODETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DvlDateTrans.
     * @return the DvlDateTrans
     */
    public Timestamp getDvlDateTrans() {
        return (Timestamp) getAttributeInternal(DVLDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DvlDateTrans.
     * @param value value to set the  DvlDateTrans
     */
    public void setDvlDateTrans(Timestamp value) {
        setAttributeInternal(DVLDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdAddrTrans.
     * @return the WhIdAddrTrans
     */
    public String getWhIdAddrTrans() {
        if (getWhIdDlvTrans() != null && getAttributeInternal(WHIDADDRTRANS) == null) {
            int i = getLovWhIdVO1().getRangeSize();
            getLovWhIdVO1().setRangeSize(-1);
            Row[] r = getLovWhIdVO1().getFilteredRows("WhId", getWhIdDlvTrans());
            String addrid = null;
            String addrdesc = null;
            if (r.length > 0) {
                if (r[0].getAttribute("AddsId") != null) {
                    addrid = r[0].getAttribute("AddsId").toString();
                }
            }
            getLovWhIdVO1().setRangeSize(i);

            if (addrid != null) {
                StringBuilder addDescFrmAddsId = EbizParams.getAddDescFrmAddsId(getAm(), addrid);
                setWhIdAddrTrans((addDescFrmAddsId == null ? null : addDescFrmAddsId.toString()));
            }
        }
        return (String) getAttributeInternal(WHIDADDRTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhIdAddrTrans.
     * @param value value to set the  WhIdAddrTrans
     */
    public void setWhIdAddrTrans(String value) {
        setAttributeInternal(WHIDADDRTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdAddrIdTrans.
     * @return the WhIdAddrIdTrans
     */
    public String getWhIdAddrIdTrans() {
        return (String) getAttributeInternal(WHIDADDRIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhIdAddrIdTrans.
     * @param value value to set the  WhIdAddrIdTrans
     */
    public void setWhIdAddrIdTrans(String value) {
        setAttributeInternal(WHIDADDRIDTRANS, value);
        setWhIdAddrTrans(null);
    }

    /**
     * Gets the attribute value for the calculated attribute WhIdDlvTrans.
     * @return the WhIdDlvTrans
     */
    public String getWhIdDlvTrans() {
        //System.out.println("-------"+getAttributeInternal(WHIDDLVTRANS));
        return (String) getAttributeInternal(WHIDDLVTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhIdDlvTrans.
     * @param value value to set the  WhIdDlvTrans
     */
    public void setWhIdDlvTrans(String value) {
        setAttributeInternal(WHIDDLVTRANS, value);
        Object res = EbizParamsAPPUtils.getPrjIdFrmWhId(getAm(), value);
        String projId = res == null ? "PROJ0000" : res.toString();
        // System.out.println(res + " <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Project ID");
        setProjectIdTrans(projId);

    }

    /**
     * Gets the attribute value for the calculated attribute PayModeTrans.
     * @return the PayModeTrans
     */
    public Integer getPayModeTrans() {
        return (Integer) getAttributeInternal(PAYMODETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayModeTrans.
     * @param value value to set the  PayModeTrans
     */
    public void setPayModeTrans(Integer value) {
        setAttributeInternal(PAYMODETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PayDateTrans.
     * @return the PayDateTrans
     */
    public Timestamp getPayDateTrans() {
        return (Timestamp) getAttributeInternal(PAYDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayDateTrans.
     * @param value value to set the  PayDateTrans
     */
    public void setPayDateTrans(Timestamp value) {
        setAttributeInternal(PAYDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PayAmtTrans.
     * @return the PayAmtTrans
     */
    public Number getPayAmtTrans() {
        return (Number) getAttributeInternal(PAYAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayAmtTrans.
     * @param value value to set the  PayAmtTrans
     */
    public void setPayAmtTrans(Number value) {
        setAttributeInternal(PAYAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PayAdvFlgTrans.
     * @return the PayAdvFlgTrans
     */
    public String getPayAdvFlgTrans() {
        return (String) getAttributeInternal(PAYADVFLGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayAdvFlgTrans.
     * @param value value to set the  PayAdvFlgTrans
     */
    public void setPayAdvFlgTrans(String value) {
        setAttributeInternal(PAYADVFLGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PayAmtSumTrans.
     * @return the PayAmtSumTrans
     */
    public Number getPayAmtSumTrans() {
        
        Number tot = new Number(0);
        Row r[] = getSlsSoPmntSchdl().getAllRowsInRange();
        for (int i = 0; i < r.length; i++) {
            Number temp = new Number(0);
            if (r[i].getAttribute("PayAmt") != null) {
                temp = (Number) r[i].getAttribute("PayAmt");
            } else {
                temp = new Number(0);
            }
            tot = tot.add(temp);
        }
          System.out.println("The total paid amount of so is ======================= "+tot);
        return tot;
        //return (Number) getAttributeInternal(PAYAMTSUMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayAmtSumTrans.
     * @param value value to set the  PayAmtSumTrans
     */
    public void setPayAmtSumTrans(Number value) {
        setAttributeInternal(PAYAMTSUMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OcAmtSumTrans.
     * @return the OcAmtSumTrans
     */
    public Number getOcAmtSumTrans() {
        ViewObject oc = getAm().getSlsSoOc1();
        oc.setRangeSize(-1);
        if (oc.getAllRowsInRange().length > 0) {
            Number amt = new Number(0);
            Number ocamt = new Number(0);

            for (Row curr : oc.getAllRowsInRange()) {
                ocamt = (Number) curr.getAttribute("AmtSp");
                if (ocamt == null) {
                    ocamt = new Number(0);
                }
                if (curr.getAttribute("TranType") != null) {
                    if ("Cr".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                        amt = amt.add(ocamt);
                    } else if ("Dr".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                        amt = amt.subtract(ocamt);
                    }
                }
            }

            if (amt.compareTo(0) == -1) {
                amt = amt.multiply(-1);
            }

            return amt;

        } else if (oc.getAllRowsInRange().length == 0) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(OCAMTSUMTRANS);
        }


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OcAmtSumTrans.
     * @param value value to set the  OcAmtSumTrans
     */
    public void setOcAmtSumTrans(Number value) {
        setAttributeInternal(OCAMTSUMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotTaxAmtOrdTrans.
     * @return the TotTaxAmtOrdTrans
     */
    public Number getTotTaxAmtOrdTrans() {
        // return (Number) getAttributeInternal(TOTTAXAMTORDTRANS);
        return calcTotalTaxAmount();

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotTaxAmtOrdTrans.
     * @param value value to set the  TotTaxAmtOrdTrans
     */
    public void setTotTaxAmtOrdTrans(Number value) {
        //  SlsSoItm.sum("taxAmountTrans")==null ? new oracle.jbo.domain.Number(0) : SlsSoItm.sum("taxAmountTrans")

        //  setAttributeInternal(TOTTAXAMTORDTRANS, calcTotalTaxAmount());
        //setAttributeInternal(TOTTAXAMTORDTRANS, value);
    }

    protected Number calcTotalTaxAmount() {
        Number tot = StaticValue.NUMBER_ZERO;
        taxableAmount = StaticValue.NUMBER_ZERO;
        Row r[] = getAm().getSlsSoItm1().getAllRowsInRange();
        //System.out.println(r.length + " <<<< ----------------- total no. og sls so Items");
        for (Row row : r) {
            Object o = row.getAttribute("taxAmountTrans");
            Number temp = (o == null ? new Number(0) : (Number) o);
            // System.out.println(o + " ----  the tax amount trans value ===== ");
            tot = tot.add(temp);

            Object o1 = row.getAttribute("taxableAmountTrans");
            Number temp1 = (o1 == null ? new Number(0) : (Number) o1);
            // System.out.println(o + " ----  the tax amount trans value ===== ");
            taxableAmount = taxableAmount.add(temp1);
        }
        // System.out.println("The total tax of so is ======================= " + tot);
        //    System.out.println("The total taxable amount of so is ======================= " + taxableAmount);
        return tot;
    }

    /**
     * Gets the attribute value for the calculated attribute OrderTotalCostTrans.
     * @return the OrderTotalCostTrans
     */
    public Number getOrderTotalCostTrans() {
        Number curRate = new Number(0);

        if (getCurrConvFctr() != null) {
            curRate = getCurrConvFctr();
        }
        if (getOrderType() != null) {
            if (getOrderType() == 311) {
                Number totalOrdCost = new Number(0);
                ViewObject slsDlv = getAm().getSlsSoDlvSchdl1();
                ViewObject slsItm = getAm().getSlsSoItm1();
                RowSetIterator rsi = slsDlv.createRowSetIterator(null);
                while (rsi.hasNext()) {
                    Row curRow = rsi.next();
                    if (curRow.getAttribute("ItmId") != null && curRow.getAttribute("DlvQty") != null) {
                        Number rate = new Number(0);
                        String itmId = curRow.getAttribute("ItmId").toString();
                        Row rows[] = slsItm.getFilteredRows("ItmId", itmId);
                        rate = (Number) rows[0].getAttribute("ItmRate");
                        Number dlvQty = (Number) curRow.getAttribute("DlvQty");
                        //      _log.info("Itm id-->" + itmId + "dlvqty-->" + dlvQty + "rate--" + rate);
                        Number totAmt = dlvQty.multiply(rate);
                        totalOrdCost = totalOrdCost.add(totAmt);
                        //    _log.info("Total cost-->" + totalOrdCost);
                    }
                }
                /**Set value to database field*/
                setTotAmtSp((Number) totalOrdCost.round(EbizParams.GLBL_AMT_DIGIT()));
                setTotAmtBs((Number) (totalOrdCost.multiply(curRate).round(EbizParams.GLBL_AMT_DIGIT())));
                return totalOrdCost;
            } else {
                Number itmCost = new Number(0);
                Number taxAmt = new Number(0);
                Number ocAmt = new Number(0);
                Number dicount = new Number(0);
                Number fin_dicVal = new Number(0);
                String discTyp = "A";
                String frghtTyp = "A";
                Number frghtChrg = new Number(0);
                Number frghtAmt = new Number(0);
                Number insurncAmt = new Number(0);
                String taxAfterDisc = "N";

                if (getTaxAfterDiscFlg() != null) {
                    taxAfterDisc = getTaxAfterDiscFlg();
                }

                if (getItmAmtSpSumTrans() != null) {
                    itmCost = getItmAmtSpSumTrans();
                }
                if (getocAmtSumWidSign() != null) {
                    ocAmt = getocAmtSumWidSign();
                }
                if (getTotTaxAmtOrdTrans() != null) {
                    taxAmt = getTotTaxAmtOrdTrans();
                }
                if (getDiscVal() != null) {
                    dicount = getDiscVal();
                }
                if (getFreightVal() != null) {
                    frghtChrg = getFreightVal();
                }
                Number totCost = (itmCost.add(taxAmt));
                if (getDiscType() != null) {
                    discTyp = getDiscType();
                }
                if (discTyp.equalsIgnoreCase("A")) {
                    fin_dicVal = dicount;
                } else {
                    if ("N".equals(taxAfterDisc)) {
                        fin_dicVal = (itmCost.multiply(dicount)).divide(new Number(100));
                    } else {
                        fin_dicVal = (totCost.multiply(dicount)).divide(new Number(100));
                    }

                }
                totCost = totCost.subtract(fin_dicVal).add(ocAmt);

                if (getFreightChg() != null) {
                    frghtTyp = getFreightChg();
                }
                if (frghtTyp.equalsIgnoreCase("A")) {
                    frghtAmt = frghtChrg;
                } else {
                    frghtAmt = (totCost.multiply(frghtChrg)).divide(new Number(100));
                }
                if (getInsAmt() != null) {
                    insurncAmt = getInsAmt();
                }
                setSoFrghtAmtTrans(frghtAmt.add(insurncAmt));
                //System.out.println("Total fright charge is:  " + frghtAmt.add(insurncAmt) + "-------");
                if (getOrderType() == 386) {
                    totCost = totCost.add(frghtAmt.add(insurncAmt));
                }
                /**Set value to database field*/
                setTotAmtSp((Number) totCost.round(EbizParams.GLBL_AMT_DIGIT()));
                setTotAmtBs((Number) (totCost.multiply(curRate)).round(EbizParams.GLBL_AMT_DIGIT()));
                return totCost;
            }

        }
        return (Number) getAttributeInternal(ORDERTOTALCOSTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrderTotalCostTrans.
     * @param value value to set the  OrderTotalCostTrans
     */
    public void setOrderTotalCostTrans(Number value) {
        if (value == null) {
            value = new Number(0);
        }
        setAttributeInternal(ORDERTOTALCOSTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotItmDiscSumTrans.
     * @return the TotItmDiscSumTrans
     */
    public Number getTotItmDiscSumTrans() {
        return (Number) getAttributeInternal(TOTITMDISCSUMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotItmDiscSumTrans.
     * @param value value to set the  TotItmDiscSumTrans
     */
    public void setTotItmDiscSumTrans(Number value) {
        setAttributeInternal(TOTITMDISCSUMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoDiscAmtTrans.
     * @return the SoDiscAmtTrans
     */
    public Number getSoDiscAmtTrans() {
        Number discAmt = new Number(0);
        String discTyp = (getDiscType() == null ? "A" : getDiscType());
        String taxAftrDisc = (getTaxAfterDiscFlg() == null ? "N" : getTaxAfterDiscFlg());
        Number val = (getDiscVal() == null ? new Number(0) : getDiscVal());
        if ("A".equals(discTyp)) {
            discAmt = val;
        } else {
            if ("N".equals(taxAftrDisc)) {
                discAmt = getItmAmtSpSumTrans().multiply(val).divide(new Number(100));
            } else {
                discAmt = getCostBeforeDiscTrans().multiply(val).divide(new Number(100));
            }
        }
        return discAmt;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoDiscAmtTrans.
     * @param value value to set the  SoDiscAmtTrans
     */
    public void setSoDiscAmtTrans(Number value) {
        setAttributeInternal(SODISCAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CostBeforeDiscTrans.
     * @return the CostBeforeDiscTrans
     */
    public Number getCostBeforeDiscTrans() {

        Number itmCost = new Number(0);
        Number taxAmt = new Number(0);
        Number ocAmt = new Number(0);

        if (getItmAmtSpSumTrans() != null) {
            itmCost = getItmAmtSpSumTrans();
        }
        if (getOcAmtSumTrans() != null) {
            ocAmt = getOcAmtSumTrans();
        }
        if (getTotTaxAmtOrdTrans() != null) {
            taxAmt = getTotTaxAmtOrdTrans();
        }

        Number totCost = (itmCost.add(taxAmt));

        return totCost;


        //  return (Number) getAttributeInternal(COSTBEFOREDISCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CostBeforeDiscTrans.
     * @param value value to set the  CostBeforeDiscTrans
     */
    public void setCostBeforeDiscTrans(Number value) {
        setAttributeInternal(COSTBEFOREDISCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CostBeforeTaxTrans.
     * @return the CostBeforeTaxTrans
     */
    public Number getCostBeforeTaxTrans() {

        Number itmCost = new Number(0);
        Number totCost = new Number(0);

        if (getItmAmtSpSumTrans() != null) {
            itmCost = getItmAmtSpSumTrans();
        }
        totCost = itmCost;
        return totCost;
        //  return (Number) getAttributeInternal(COSTBEFORETAXTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CostBeforeTaxTrans.
     * @param value value to set the  CostBeforeTaxTrans
     */
    public void setCostBeforeTaxTrans(Number value) {
        setAttributeInternal(COSTBEFORETAXTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoFrghtAmtTrans.
     * @return the SoFrghtAmtTrans
     */
    public Number getSoFrghtAmtTrans() {
        return (Number) getAttributeInternal(SOFRGHTAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoFrghtAmtTrans.
     * @param value value to set the  SoFrghtAmtTrans
     */
    public void setSoFrghtAmtTrans(Number value) {
        setAttributeInternal(SOFRGHTAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotTaxableAmtTrans.
     * @return the TotTaxableAmtTrans
     */

    private Number taxableAmount = StaticValue.NUMBER_ZERO;

    public Number getTotTaxableAmtTrans() {
        //SlsSoItm.sum("taxableAmountTrans")==null ? new oracle.jbo.domain.Number(0) : SlsSoItm.sum("taxableAmountTrans")
        //System.out.println("Total Taxable amount is " + taxableAmount);
        return taxableAmount;
        //return (Number) getAttributeInternal(TOTTAXABLEAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotTaxableAmtTrans.
     * @param value value to set the  TotTaxableAmtTrans
     */
    public void setTotTaxableAmtTrans(Number value) {
        setAttributeInternal(TOTTAXABLEAMTTRANS, value);
    }

    /**
     * Gets the attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @return the TAX_AFTER_DISC_FLG
     */
    public String getTaxAfterDiscFlg() {
        return (String) getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_AFTER_DISC_FLG using the alias name TaxAfterDiscFlg.
     * @param value value to set the TAX_AFTER_DISC_FLG
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(Number value) {
        if (value != null) {
            if (value != null) {
                value = ADFBeanUtils.roundOff(value);
            }
            setAttributeInternal(TOTAMTBS, value);
        }
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(Number value) {
        System.out.println("Setting tot amount sp to : "+value);
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(TOTAMTSP, value);
        getGrossCostBeforeTaxTrans();
    }

    /**
     * Gets the attribute value for AMD_DT using the alias name AmdDt.
     * @return the AMD_DT
     */
    public Timestamp getAmdDt() {
        return (Timestamp) getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_DT using the alias name AmdDt.
     * @param value value to set the AMD_DT
     */
    public void setAmdDt(Timestamp value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for AMD_NO using the alias name AmdNo.
     * @return the AMD_NO
     */
    public String getAmdNo() {
        return (String) getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_NO using the alias name AmdNo.
     * @param value value to set the AMD_NO
     */
    public void setAmdNo(String value) {
        setAttributeInternal(AMDNO, value);
    }


    /**
     * Gets the attribute value for REF_SO_DOC_ID using the alias name RefSoDocId.
     * @return the REF_SO_DOC_ID
     */
    public String getRefSoDocId() {
        return (String) getAttributeInternal(REFSODOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_SO_DOC_ID using the alias name RefSoDocId.
     * @param value value to set the REF_SO_DOC_ID
     */
    public void setRefSoDocId(String value) {
        setAttributeInternal(REFSODOCID, value);
        soDocIdNm = null;
    }

    /**
     * Gets the attribute value for TMPL_DOC_ID using the alias name TmplDocId.
     * @return the TMPL_DOC_ID
     */
    public String getTmplDocId() {
        return (String) getAttributeInternal(TMPLDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TMPL_DOC_ID using the alias name TmplDocId.
     * @param value value to set the TMPL_DOC_ID
     */
    public void setTmplDocId(String value) {
        setAttributeInternal(TMPLDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RefSoDocIdTrans.
     * @return the RefSoDocIdTrans
     */
    private String soDocIdNm = null;

    public String getRefSoDocIdTrans() {
        if (soDocIdNm == null && getRefSoDocId() != null) {
            Object soDispId =
                ADFModelUtils.callFunction(getAm(), new StringBuilder("FN_GET_SO_DISP_ID_FRM_DOC_ID(?,?,?,?,?,?)"), new Object[] {
                                           getSlocId(), getCldId(), getHoOrgId(), getOrgId(), getFyId(), getRefSoDocId()
            }, Types.VARCHAR);
            soDocIdNm = (soDispId == null ? null : soDispId.toString());
        }
        return soDocIdNm;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RefSoDocIdTrans.
     * @param value value to set the  RefSoDocIdTrans
     */
    public void setRefSoDocIdTrans(String value) {
        setAttributeInternal(REFSODOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TmplDocIdTrans.
     * @return the TmplDocIdTrans
     */
    public String getTmplDocIdTrans() {
        String docId = null;
        String docDisp = null;
        try {
            docId = getRefSoDocId();
        } catch (NullPointerException npe) {
            //    System.out.println(npe);
        }
        if (docId != null) {
            Row[] xx = getLovTmplDocIdVO1().getFilteredRows("DocId", docId);

            if (xx.length > 0) {
                docDisp = xx[0].getAttribute("DispDocId").toString();
            }
            //   System.out.println("CurrDesc in RowImpl-->"+currDesc);
            return docDisp;

        } else {
            return (String) getAttributeInternal(TMPLDOCIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TmplDocIdTrans.
     * @param value value to set the  TmplDocIdTrans
     */
    public void setTmplDocIdTrans(String value) {
        setAttributeInternal(TMPLDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ocAmtSumWidSign.
     * @return the ocAmtSumWidSign
     */
    public Number getocAmtSumWidSign() {

        ViewObject oc = getAm().getSlsSoOc1();
        oc.setRangeSize(-1);
        if (oc.getAllRowsInRange().length > 0) {
            Number amt = new Number(0);
            Number ocamt = new Number(0);

            for (Row curr : oc.getAllRowsInRange()) {
                ocamt = (Number) curr.getAttribute("AmtSp");
                if (ocamt == null) {
                    ocamt = new Number(0);
                }
                if (curr.getAttribute("TranType") != null) {
                    if ("Cr".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                        amt = amt.add(ocamt);
                    } else if ("Dr".equalsIgnoreCase(curr.getAttribute("TranType").toString())) {
                        amt = amt.subtract(ocamt);
                    }
                }
            }

            return amt;

        } else if (oc.getAllRowsInRange().length == 0) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(OCAMTSUMWIDSIGN);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ocAmtSumWidSign.
     * @param value value to set the  ocAmtSumWidSign
     */
    public void setocAmtSumWidSign(Number value) {
        setAttributeInternal(OCAMTSUMWIDSIGN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute costBfrOcTrans.
     * @return the costBfrOcTrans
     */
    public Number getcostBfrOcTrans() {
        Number itmCost = new Number(0);
        Number taxAmt = new Number(0);
        Number ocAmt = new Number(0);
        Number dicount = new Number(0);
        Number fin_dicVal = new Number(0);
        String discTyp = "A";
        String frghtTyp = "A";
        Number frghtChrg = new Number(0);
        Number frghtAmt = new Number(0);
        Number insurncAmt = new Number(0);
        if (getOrderType() != null) {
            if (getItmAmtSpSumTrans() != null) {
                itmCost = getItmAmtSpSumTrans();
            }

            if (getTotTaxAmtOrdTrans() != null) {
                taxAmt = getTotTaxAmtOrdTrans();
            }
            if (getDiscVal() != null) {
                dicount = getDiscVal();
            }
            if (getFreightVal() != null) {
                frghtChrg = getFreightVal();
            }
            Number totCost = (itmCost.add(ocAmt).add(taxAmt));
            if (getDiscType() != null) {
                discTyp = getDiscType();
            }
            if (discTyp.equalsIgnoreCase("A")) {
                fin_dicVal = dicount;
            } else {
                fin_dicVal = (totCost.multiply(dicount)).divide(new Number(100));
            }
            totCost = totCost.subtract(fin_dicVal);
            if (getInsAmt() != null) {
                insurncAmt = getInsAmt();
            }
            if (getFreightChg() != null) {
                frghtTyp = getFreightChg();
            }
            if (frghtTyp.equalsIgnoreCase("A")) {
                frghtAmt = frghtChrg;
            } else {
                frghtAmt = (totCost.multiply(frghtChrg)).divide(new Number(100));
            }
            if (getOrderType() == 386) {
                totCost = totCost.add(frghtAmt).add(insurncAmt);
            }

            return totCost;
        } else {
            return (Number) getAttributeInternal(COSTBFROCTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute costBfrOcTrans.
     * @param value value to set the  costBfrOcTrans
     */
    public void setcostBfrOcTrans(Number value) {
        setAttributeInternal(COSTBFROCTRANS, value);
    }

    /**
     * Gets the attribute value for INS_AMT using the alias name InsAmt.
     * @return the INS_AMT
     */
    public Number getInsAmt() {
        return (Number) getAttributeInternal(INSAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for INS_AMT using the alias name InsAmt.
     * @param value value to set the INS_AMT
     */
    public void setInsAmt(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(INSAMT, value);
    }

    /**
     * Gets the attribute value for SO_BASIS using the alias name SoBasis.
     * @return the SO_BASIS
     */
    public Integer getSoBasis() {
        return (Integer) getAttributeInternal(SOBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_BASIS using the alias name SoBasis.
     * @param value value to set the SO_BASIS
     */
    public void setSoBasis(Integer value) {
        setAttributeInternal(SOBASIS, value);
    }

    /**
     * Gets the attribute value for SO_ID using the alias name SoId.
     * @return the SO_ID
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_ID using the alias name SoId.
     * @param value value to set the SO_ID
     */
    public void setSoId(String value) {
        setAttributeInternal(SOID, value);
    }

    /**
     * Gets the attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @return the TLRNC_DAYS
     */
    public Integer getTlrncDays() {
        return (Integer) getAttributeInternal(TLRNCDAYS);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_DAYS using the alias name TlrncDays.
     * @param value value to set the TLRNC_DAYS
     */
    public void setTlrncDays(Integer value) {
        setAttributeInternal(TLRNCDAYS, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {

        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        //System.out.println("Setting COA ID to : " + value);
        if (value != null) {
            setAttributeInternal(COAID, value);
        }

    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
        Object res = EbizParamsAPPUtils.getPrjIdFrmWhId(getAm(), value);
        String projId = res == null ? "PROJ0000" : res.toString();
        setPrjId(projId);

    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for SO_MODE using the alias name SoMode.
     * @return the SO_MODE
     */
    public Integer getSoMode() {
        return (Integer) getAttributeInternal(SOMODE);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_MODE using the alias name SoMode.
     * @param value value to set the SO_MODE
     */
    public void setSoMode(Integer value) {
        setAttributeInternal(SOMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cancelOrderTrans.
     * @return the cancelOrderTrans
     */
    public String getcancelOrderTrans() {
        return (String) getAttributeInternal(CANCELORDERTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cancelOrderTrans.
     * @param value value to set the  cancelOrderTrans
     */
    public void setcancelOrderTrans(String value) {
        setAttributeInternal(CANCELORDERTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute payAmtPendTrans.
     * @return the payAmtPendTrans
     */
    public Number getpayAmtPendTrans() {
        Number totalCost = new Number(0);
        Number paidAmt = new Number(0);
        Number pendingAmt = new Number(0);
        if (getOrderTotalCostTrans() != null) {
            totalCost = (Number) getOrderTotalCostTrans().round(EbizParams.GLBL_AMT_DIGIT());
        }
        if (getPayAmtSumTrans() != null) {
            paidAmt = (Number) getPayAmtSumTrans().round(EbizParams.GLBL_AMT_DIGIT());
        }

        // _log.info("Total Cost-"+totalCost+"paid amt-"+paidAmt);
        pendingAmt = totalCost.subtract(paidAmt);

        return pendingAmt;

        //  return (Number) getAttributeInternal(PAYAMTPENDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute payAmtPendTrans.
     * @param value value to set the  payAmtPendTrans
     */
    public void setpayAmtPendTrans(Number value) {
        setAttributeInternal(PAYAMTPENDTRANS, value);
    }

    /**
     * Gets the attribute value for SO_VLDT_DT using the alias name SoVldtDt.
     * @return the SO_VLDT_DT
     */
    public Timestamp getSoVldtDt() {
        return (Timestamp) getAttributeInternal(SOVLDTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_VLDT_DT using the alias name SoVldtDt.
     * @param value value to set the SO_VLDT_DT
     */
    public void setSoVldtDt(Timestamp value) {
        setAttributeInternal(SOVLDTDT, value);
    }

    /**
     * Gets the attribute value for SHIP_ADDS using the alias name ShipAdds.
     * @return the SHIP_ADDS
     */
    public String getShipAdds() {
        return (String) getAttributeInternal(SHIPADDS);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_ADDS using the alias name ShipAdds.
     * @param value value to set the SHIP_ADDS
     */
    public void setShipAdds(String value) {
        if (value != null) {
            if ((!value.equals(""))) {
                setAttributeInternal(SHIPADDS, value);
                setAddressTrans(null);
            }
        }

    }

    /**
     * Gets the attribute value for the calculated attribute custAddressTrans.
     * @return the custAddressTrans
     */
    public String getcustAddressTrans() {
        return (String) getAttributeInternal(CUSTADDRESSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute custAddressTrans.
     * @param value value to set the  custAddressTrans
     */
    public void setcustAddressTrans(String value) {
        setAttributeInternal(CUSTADDRESSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddressTrans.
     * @return the AddressTrans
     */
    public String getAddressTrans() {
        //System.out.println("Adds id :"+getShipAdds());
        if (getShipAdds() != null && getAttributeInternal(ADDRESSTRANS) == null) {
            ViewObjectImpl addsVo = getAm().getLovAddsFrmAddsId1();
            addsVo.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            addsVo.setNamedWhereClauseParam("CldIdBind", getCldId());
            addsVo.setNamedWhereClauseParam("AddsIdBind", getShipAdds());
            addsVo.executeQuery();

            Row[] allRowsInRange = addsVo.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object addsO = allRowsInRange[0].getAttribute("Adds");
                setAddressTrans((addsO == null ? null : addsO.toString()));
                //System.out.println("Address is : "+addsO);
            }
        }
        return (String) getAttributeInternal(ADDRESSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddressTrans.
     * @param value value to set the  AddressTrans
     */
    public void setAddressTrans(String value) {
        setAttributeInternal(ADDRESSTRANS, value);
    }

    /**
     * Gets the attribute value for ASSIGNED_TO using the alias name AssignedTo.
     * @return the ASSIGNED_TO
     */
    public Integer getAssignedTo() {
       // System.out.println("getting AssignedTo ID to :::::::::::::::::::::::::::::::: " +
        //                   getAttributeInternal(ASSIGNEDTO));
        return (Integer) getAttributeInternal(ASSIGNEDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSIGNED_TO using the alias name AssignedTo.
     * @param value value to set the ASSIGNED_TO
     */
    public void setAssignedTo(Integer value) {
       // System.out.println("Setting AssignedTo ID to :::::::::::::::::::::::::::::::: " + value);
        if (value != null) {
            setAttributeInternal(ASSIGNEDTO, value);
            slsExec = null;
        }
    }

    /**
     * Gets the attribute value for the calculated attribute EoTypeOnOrderTypeTrans.
     * @return the EoTypeOnOrderTypeTrans
     */
    public String getEoTypeOnOrderTypeTrans() {
        if (this.getOrderType() == 310 || this.getOrderType() == 892) {
            return "Y";
        } else {
            return "N";
        }
        //return (String) getAttributeInternal(EOTYPEONORDERTYPETRANS);
    }


    /**
     * Gets the attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @return the EXT_DOC_DT
     */
    public Timestamp getExtDocDt() {
        return (Timestamp) getAttributeInternal(EXTDOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_DT using the alias name ExtDocDt.
     * @param value value to set the EXT_DOC_DT
     */
    public void setExtDocDt(Timestamp value) {
        if (value != null) {
            value = StaticValue.getTruncatedDt(value);
        }
        setAttributeInternal(EXTDOCDT, value);
    }

    /**
     * Gets the attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @return the EXT_DOC_NO
     */
    public String getExtDocNo() {
        return (String) getAttributeInternal(EXTDOCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EXT_DOC_NO using the alias name ExtDocNo.
     * @param value value to set the EXT_DOC_NO
     */
    public void setExtDocNo(String value) {
        setAttributeInternal(EXTDOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotNmTrans.
     * @return the QuotNmTrans
     */
    public String getQuotNmTrans() {
        return (String) getAttributeInternal(QUOTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotNmTrans.
     * @param value value to set the  QuotNmTrans
     */
    public void setQuotNmTrans(String value) {
        setAttributeInternal(QUOTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TrRuleTrans.
     * @return the TrRuleTrans
     */
    public Integer getTrRuleTrans() {
        if (getAttributeInternal(TRRULETRANS) == null) {
            RowIterator itr = this.getSlsSoTr();
            if (itr.getRowCount() > 0) {
                Row next = itr.next();
                if (next.getAttribute("TaxRuleId") != null) {
                    setTrRuleTrans((Integer) next.getAttribute("TaxRuleId"));
                }
            } else {
                setTrRuleTrans(0);
            }
        }
        return (Integer) getAttributeInternal(TRRULETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrRuleTrans.
     * @param value value to set the  TrRuleTrans
     */
    public void setTrRuleTrans(Integer value) {
        setAttributeInternal(TRRULETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute srtCloseTrans.
     * @return the srtCloseTrans
     */
    public String getsrtCloseTrans() {
        return (String) getAttributeInternal(SRTCLOSETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute srtCloseTrans.
     * @param value value to set the  srtCloseTrans
     */
    public void setsrtCloseTrans(String value) {
        setAttributeInternal(SRTCLOSETRANS, value);
    }

    /**
     * Gets the attribute value for CASH_CUST_ADDS using the alias name CashCustAdds.
     * @return the CASH_CUST_ADDS
     */
    public String getCashCustAdds() {
        return (String) getAttributeInternal(CASHCUSTADDS);
    }

    /**
     * Sets <code>value</code> as attribute value for CASH_CUST_ADDS using the alias name CashCustAdds.
     * @param value value to set the CASH_CUST_ADDS
     */
    public void setCashCustAdds(String value) {
        setAttributeInternal(CASHCUSTADDS, value);
    }

    /**
     * Gets the attribute value for SO_CONTRACT_BASIS using the alias name SoContractBasis.
     * @return the SO_CONTRACT_BASIS
     */
    public Integer getSoContractBasis() {
        return (Integer) getAttributeInternal(SOCONTRACTBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_CONTRACT_BASIS using the alias name SoContractBasis.
     * @param value value to set the SO_CONTRACT_BASIS
     */
    public void setSoContractBasis(Integer value) {
        setAttributeInternal(SOCONTRACTBASIS, value);
    }

    /**
     * Gets the attribute value for SO_CONTRACT_PRICE using the alias name SoContractPrice.
     * @return the SO_CONTRACT_PRICE
     */
    public Number getSoContractPrice() {
        return (Number) getAttributeInternal(SOCONTRACTPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_CONTRACT_PRICE using the alias name SoContractPrice.
     * @param value value to set the SO_CONTRACT_PRICE
     */
    public void setSoContractPrice(Number value) {
        setAttributeInternal(SOCONTRACTPRICE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ContractValueTrans.
     * @return the ContractValueTrans
     */
    public Number getContractValueTrans() {
        if (this.getSoContractValue() != null) {
            return this.getSoContractValue();
        } else if (this.getSoContractPrice() != null) {
            return this.getSoContractPrice();
        } else if (this.getSoContractQty() != null) {
            return this.getSoContractQty();
        } else {

            return (Number) getAttributeInternal(CONTRACTVALUETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ContractValueTrans.
     * @param value value to set the  ContractValueTrans
     */
    public void setContractValueTrans(Number value) {
        setAttributeInternal(CONTRACTVALUETRANS, value);
    }

    /**
     * Gets the attribute value for SO_CONTRACT_QTY using the alias name SoContractQty.
     * @return the SO_CONTRACT_QTY
     */
    public Number getSoContractQty() {
        return (Number) getAttributeInternal(SOCONTRACTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_CONTRACT_QTY using the alias name SoContractQty.
     * @param value value to set the SO_CONTRACT_QTY
     */
    public void setSoContractQty(Number value) {
        setAttributeInternal(SOCONTRACTQTY, value);
    }

    /**
     * Gets the attribute value for SO_CONTRACT_VALUE using the alias name SoContractValue.
     * @return the SO_CONTRACT_VALUE
     */
    public Number getSoContractValue() {
        return (Number) getAttributeInternal(SOCONTRACTVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_CONTRACT_VALUE using the alias name SoContractValue.
     * @param value value to set the SO_CONTRACT_VALUE
     */
    public void setSoContractValue(Number value) {
        setAttributeInternal(SOCONTRACTVALUE, value);
    }

    /**
     * Gets the attribute value for EO_PRICE_PLC using the alias name EoPricePlc.
     * @return the EO_PRICE_PLC
     */
    public String getEoPricePlc() {
        return (String) getAttributeInternal(EOPRICEPLC);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_PRICE_PLC using the alias name EoPricePlc.
     * @param value value to set the EO_PRICE_PLC
     */
    public void setEoPricePlc(String value) {
        setAttributeInternal(EOPRICEPLC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryTrans.
     * @return the CategoryTrans
     */
    public Integer getCategoryTrans() {
        return (Integer) getAttributeInternal(CATEGORYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryTrans.
     * @param value value to set the  CategoryTrans
     */
    public void setCategoryTrans(Integer value) {
        setAttributeInternal(CATEGORYTRANS, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuotIdTrans.
     * @return the QuotIdTrans
     */
    public String getQuotIdTrans() {
        String disp = "";
        if (this.getQuotId() != null && getAttributeInternal(QUOTIDTRANS) == null) {
            if (!this.getQuotId().toString().equals("")) {
                RowSet lovVO2 = this.getquotationLovVO2();
                lovVO2.setNamedWhereClauseParam("orgIdBind", this.getOrgId());
                lovVO2.setNamedWhereClauseParam("slocIdBind", this.getSlocId());
                lovVO2.setNamedWhereClauseParam("hoOrgIdBind", this.getHoOrgId());
                lovVO2.setNamedWhereClauseParam("FyIdBind", this.getFyId());
                lovVO2.setNamedWhereClauseParam("cldIdBind", this.getCldId());
                lovVO2.setNamedWhereClauseParam("EoIdBind", this.getEoId());
                lovVO2.setNamedWhereClauseParam("BindQotDocId", getQuotId());
                lovVO2.executeQuery();
                Row[] filteredRows = lovVO2.getAllRowsInRange();
                if (filteredRows.length > 0) {
                    _log.info("Quot Display Id ++ : " + disp);
                    disp = filteredRows[0].getAttribute("DispDocId").toString();
                }
                setQuotIdTrans(disp.toString());
            }
        }
        _log.info("Quot Display Id is : " + disp);
        //return disp.toString();
        return (String) getAttributeInternal(QUOTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuotIdTrans.
     * @param value value to set the  QuotIdTrans
     */
    public void setQuotIdTrans(String value) {
        setAttributeInternal(QUOTIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DelRemarksTrans.
     * @return the DelRemarksTrans
     */
    public String getDelRemarksTrans() {
        return (String) getAttributeInternal(DELREMARKSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DelRemarksTrans.
     * @param value value to set the  DelRemarksTrans
     */
    public void setDelRemarksTrans(String value) {
        setAttributeInternal(DELREMARKSTRANS, value);
    }


    /**
     * Gets the attribute value for SO_DOC_ORIGIN_ORG using the alias name SoDocOriginOrg.
     * @return the SO_DOC_ORIGIN_ORG
     */
    public String getSoDocOriginOrg() {
        return (String) getAttributeInternal(SODOCORIGINORG);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_DOC_ORIGIN_ORG using the alias name SoDocOriginOrg.
     * @param value value to set the SO_DOC_ORIGIN_ORG
     */
    public void setSoDocOriginOrg(String value) {
        setAttributeInternal(SODOCORIGINORG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocOriginOrg.
     * @return the TransDocOriginOrg
     */
    public String getTransDocOriginOrg() {
        if (getAttributeInternal(TRANSDOCORIGINORG) == null) {
            String refOrg = getSoDocOriginOrg();
            if (refOrg != null) {
                // System.out.println("set 1");
                Row r[] = this.getLOVRefOrgV0_1().getFilteredRows("OrgId", refOrg);
                if (r.length > 0) {
                    return r[0].getAttribute("OrgDesc").toString();
                }
            }
        }
        return (String) getAttributeInternal(TRANSDOCORIGINORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocOriginOrg.
     * @param value value to set the  TransDocOriginOrg
     */
    public void setTransDocOriginOrg(String value) {
        setAttributeInternal(TRANSDOCORIGINORG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrossCostBeforeTaxTrans.
     * @return the GrossCostBeforeTaxTrans
     */
    public Number getGrossCostBeforeTaxTrans() {
        Row[] allRowsInRange = getAm().getSlsSoItm1().getAllRowsInRange();
        Number n = StaticValue.NUMBER_ZERO;
        for(Row row : allRowsInRange){
            Object totAmtO = row.getAttribute("TotalAmtWithOtrCharSP");
            if(totAmtO != null){
                n = n.add((Number)totAmtO);
            }
        }
        setTotItmAmtGsSp(n);
        setGrossCostBeforeTaxTrans(n);
        return (Number) getAttributeInternal(GROSSCOSTBEFORETAXTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrossCostBeforeTaxTrans.
     * @param value value to set the  GrossCostBeforeTaxTrans
     */
    public void setGrossCostBeforeTaxTrans(Number value) {
        setAttributeInternal(GROSSCOSTBEFORETAXTRANS, value);
    }

    /**
     * Gets the attribute value for TOT_ITM_AMT_GS_BS using the alias name TotItmAmtGsBs.
     * @return the TOT_ITM_AMT_GS_BS
     */
    public Number getTotItmAmtGsBs() {
        return (Number) getAttributeInternal(TOTITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_ITM_AMT_GS_BS using the alias name TotItmAmtGsBs.
     * @param value value to set the TOT_ITM_AMT_GS_BS
     */
    public void setTotItmAmtGsBs(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(TOTITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for TOT_ITM_AMT_GS_SP using the alias name TotItmAmtGsSp.
     * @return the TOT_ITM_AMT_GS_SP
     */
    public Number getTotItmAmtGsSp() {
        return (Number) getAttributeInternal(TOTITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_ITM_AMT_GS_SP using the alias name TotItmAmtGsSp.
     * @param value value to set the TOT_ITM_AMT_GS_SP
     */
    public void setTotItmAmtGsSp(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        Number cc = (getCurrConvFctr() == null ? new Number(1) : getCurrConvFctr());
        setTotItmAmtGsBs(ADFBeanUtils.roundOff(value.multiply(cc)));
        setAttributeInternal(TOTITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCreditDays.
     * @return the TransCreditDays
     */
    public Number getTransCreditDays() {
        if (getAttributeInternal(TRANSCREDITDAYS) == null && getEoId() != null) {
            Object chkRet = getAm().checkforProfileValuesObjectReturnV(new StringBuffer("SHOW_CUST_OUT_DTL"));
            StringBuffer d = (chkRet == null ? new StringBuffer("") : new StringBuffer(chkRet.toString()));
            Number n = new Number(0);
            if (d.toString().equals("Y")) {
                BigDecimal ret = new BigDecimal(0);
                try {

                    ret = (BigDecimal) callStoredFunction(Types.NUMERIC, "FN_GET_EO_CR_DAYS(?,?,?,?,?)", new Object[] {
                                                          getSlocId(), getCldId(), getOrgId(), getEoId(), 68
                    });
                } catch (Exception e) {
                    FacesMessage message =
                        new FacesMessage("There have been an error in calling function 'FN_GET_EO_CR_DAYS' in SoVoImpl ! " +
                                         e.getMessage());
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    FacesContext.getCurrentInstance().addMessage(null, message);
                    e.printStackTrace();
                }
                ret = (ret == null ? new BigDecimal(0) : ret);

                try {
                    n = new Number(ret);
                } catch (SQLException e) {
                }
            }
            setTransCreditDays(n);
        }
        return (Number) getAttributeInternal(TRANSCREDITDAYS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCreditDays.
     * @param value value to set the  TransCreditDays
     */
    public void setTransCreditDays(Number value) {
        setAttributeInternal(TRANSCREDITDAYS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCreditLimit.
     * @return the TransCreditLimit
     */
    public Number getTransCreditLimit() {
        if (getAttributeInternal(TRANSCREDITLIMIT) == null && getEoId() != null) {
            Object chkRet = getAm().checkforProfileValuesObjectReturnV(new StringBuffer("SHOW_CUST_OUT_DTL"));
            StringBuffer d = (chkRet == null ? new StringBuffer("") : new StringBuffer(chkRet.toString()));
            Number n = new Number(0);
            if (d.toString().equals("Y")) {
                BigDecimal ret = new BigDecimal(0);
                try {

                    ret = (BigDecimal) callStoredFunction(Types.NUMERIC, "FN_GET_EO_CR_LIMIT(?,?,?,?,?)", new Object[] {
                                                          getSlocId(), getCldId(), getOrgId(), getEoId(), 68
                    });
                } catch (Exception e) {
                    FacesMessage message =
                        new FacesMessage("There have been an error in calling function 'FN_GET_EO_CR_LIMIT' in SoVoImpl ! " +
                                         e.getMessage());
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    FacesContext.getCurrentInstance().addMessage(null, message);
                    e.printStackTrace();
                }
                ret = (ret == null ? new BigDecimal(0) : ret);

                try {
                    n = new Number(ret);
                } catch (SQLException e) {
                }
            }
            setTransCreditLimit(n);
        }
        return (Number) getAttributeInternal(TRANSCREDITLIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCreditLimit.
     * @param value value to set the  TransCreditLimit
     */
    public void setTransCreditLimit(Number value) {
        setAttributeInternal(TRANSCREDITLIMIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrentBalance.
     * @return the TransCurrentBalance
     */
    public Number getTransCurrentBalance() {
        //System.out.println("Currenct Balance : "+getAttributeInternal(TRANSCURRENTBALANCE)+" "+getEoId()+" "+getCoaId());
        if (getAttributeInternal(TRANSCURRENTBALANCE) == null && getEoId() != null && getCoaId() != null) {
            Object chkRet = getAm().checkforProfileValuesObjectReturnV(new StringBuffer("SHOW_CUST_OUT_DTL"));
            StringBuffer d = (chkRet == null ? new StringBuffer("") : new StringBuffer(chkRet.toString()));
            Number n = new Number(0);

            if (d.toString().equals("Y")) {
                BigDecimal ret = new BigDecimal(0);
                try {

                    ret = (BigDecimal) callStoredFunction(Types.NUMERIC, "FIN.GET_COA_CL_BAL_ASONDT(?,?,?,?,?,?,?,?,?)", new Object[] {
                                                          getCldId(), getSlocId(), getHoOrgId(), getOrgId(), getDocDt(),
                                                          getCoaId(), "N", "P", "Y"
                    });
                } catch (Exception e) {
                    FacesMessage message =
                        new FacesMessage("There have been an error in calling function 'GET_COA_CL_BAL_ASONDT' in SoVoImpl ! " +
                                         e.getMessage());
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    FacesContext.getCurrentInstance().addMessage(null, message);
                    e.printStackTrace();
                }
                ret = (ret == null ? new BigDecimal(0) : ret);
                try {
                    n = new Number(ret);
                } catch (SQLException e) {
                }
                //  System.out.println("Setting Currency Balance to  : " + n);
            }
            setTransCurrentBalance(n);
        }

        return (Number) getAttributeInternal(TRANSCURRENTBALANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrentBalance.
     * @param value value to set the  TransCurrentBalance
     */
    public void setTransCurrentBalance(Number value) {
        setAttributeInternal(TRANSCURRENTBALANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrderBalance.
     * @return the TransOrderBalance
     */
    public Number getTransOrderBalance() {
        if (getAttributeInternal(TRANSORDERBALANCE) == null && getEoId() != null && getCoaId() != null) {
            Object chkRet = getAm().checkforProfileValuesObjectReturnV(new StringBuffer("SHOW_CUST_OUT_DTL"));
            StringBuffer d = (chkRet == null ? new StringBuffer("") : new StringBuffer(chkRet.toString()));
            Number n = new Number(0);
            if (d.toString().equals("Y")) {
                BigDecimal ret = new BigDecimal(0);
                try { /*
                    function get_coa_cl_bal_asondt(
                    p_cld_id     varchar2,
                    p_sloc_id    number,
                    p_ho_org_id  varchar2,
                    p_org_id     varchar2,
                    p_ason_dt    date,
                    p_coa_id     number,
                    p_inc_temp   varchar2 default 'N',
                    p_inc_txn    varchar2 default 'P',
                    p_inc_op_bal varchar2 default 'Y') */

                    ret = (BigDecimal) callStoredFunction(Types.NUMERIC, "FN_GET_ORD_BAL(?,?,?,?,?,?)", new Object[] {
                                                          getCldId(), getSlocId(), getHoOrgId(), getOrgId(), getEoId(),
                                                          getDocDt(),
                    });
                } catch (Exception e) {
                    FacesMessage message =
                        new FacesMessage("There have been an error in calling function 'FN_GET_ORD_BAL' in SoVoImpl ! " +
                                         e.getMessage());
                    message.setSeverity(FacesMessage.SEVERITY_ERROR);
                    FacesContext.getCurrentInstance().addMessage(null, message);
                    e.printStackTrace();
                }
                ret = (ret == null ? new BigDecimal(0) : ret);
                try {
                    n = new Number(ret);
                } catch (SQLException e) {
                }
                //  System.out.println("Setting Currency Balance to  : " + n);

            }

            setTransOrderBalance(n);
        }


        return (Number) getAttributeInternal(TRANSORDERBALANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrderBalance.
     * @param value value to set the  TransOrderBalance
     */
    public void setTransOrderBalance(Number value) {
        setAttributeInternal(TRANSORDERBALANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoCatgTrans.
     * @return the EoCatgTrans
     */
    public Integer getEoCatgTrans() {
        if (getAttributeInternal(EOCATGTRANS) == null) {
            RowSet eoIdVO = this.getLovEoNmVO1();
            eoIdVO.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            eoIdVO.setNamedWhereClauseParam("CldIdBind", getCldId());
            eoIdVO.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
            eoIdVO.setNamedWhereClauseParam("EoIdBind", getEoId());
            eoIdVO.executeQuery();
            Row[] allRowsInRange = eoIdVO.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object eoCatgO = allRowsInRange[0].getAttribute("CatgId");
                Integer i = (eoCatgO == null ? null : (Integer) eoCatgO);
                setEoCatgTrans(i);
                //   System.out.println("Setting EO Name to : " + eoNm);
            }

        }
        return (Integer) getAttributeInternal(EOCATGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoCatgTrans.
     * @param value value to set the  EoCatgTrans
     */
    public void setEoCatgTrans(Integer value) {
        setAttributeInternal(EOCATGTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute UsrnmTrans.
     * @return the UsrnmTrans
     */
    public String getUsrNmTxtTrans() {
        if (getAttributeInternal(USRNMTXTTRANS) == null && getUsrIdCreate() != null) {
            RowSet frmUsrIdVO1 = this.getLovUsrNmFrmUsrIdVO1();
            frmUsrIdVO1.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            frmUsrIdVO1.setNamedWhereClauseParam("UsrIdBind", getUsrIdCreate());
            frmUsrIdVO1.executeQuery();
            Row[] allRowsInRange = frmUsrIdVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object o = allRowsInRange[0].getAttribute("UsrName");
                if (o != null) {
                    setUsrNmTxtTrans(o.toString());
                }
            }
        }
        return (String) getAttributeInternal(USRNMTXTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrnmTrans.
     * @param value value to set the  UsrnmTrans
     */
    public void setUsrNmTxtTrans(String value) {
        setAttributeInternal(USRNMTXTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AssignedToTrans.
     * @return the AssignedToTrans
     */
    private String slsExec = null;

    public String getAssignedToTrans() {
       // System.out.println(getAssignedTo() + " ************* The Assign to ID");
        if (slsExec == null && getAssignedTo() != null) {
            Object nam = EbizParamsAPPUtils.getEoDescFrmEoId(getAm(), getAssignedTo());
            String name = nam == null ? " " : nam.toString();
            slsExec = name.toString();
        } 
       // System.out.println("Assigned to name : " + slsExec);
        return slsExec;

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AssignedToTrans.
     * @param value value to set the  AssignedToTrans
     */
    public void setAssignedToTrans(String value) {
       // System.out.println("Setting Assigned to as : " + value);
        setAttributeInternal(ASSIGNEDTOTRANS, value);

        //if (value == null) {
        //    System.out.println("Setting Assigned to ================= : " + value);
        //     slsExec = null;
        //}

        // setAttributeInternal(ASSIGNEDTOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoPlcNmTrans.
     * @return the EoPlcNmTrans
     */
    public String getEoPlcNmTrans() {
        if (getAttributeInternal(EOPLCNMTRANS) == null && getEoPricePlc() != null) {
            RowSet lovPlcNmVo1 = getLovPlcNmVo1();
            lovPlcNmVo1.setNamedWhereClauseParam("CldIdBind", getCldId());
            lovPlcNmVo1.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            lovPlcNmVo1.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
            lovPlcNmVo1.setNamedWhereClauseParam("PlcIdBind", getEoPricePlc());
            lovPlcNmVo1.executeQuery();
            Row[] allRowsInRange = lovPlcNmVo1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                setEoPlcNmTrans(allRowsInRange[0].getAttribute("PlcNm").toString());
            }
        }
        return (String) getAttributeInternal(EOPLCNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoPlcNmTrans.
     * @param value value to set the  EoPlcNmTrans
     */
    public void setEoPlcNmTrans(String value) {
        setAttributeInternal(EOPLCNMTRANS, value);
    }

    /**
     * Gets the attribute value for TRANS_VH_NO using the alias name TransVhNo.
     * @return the TRANS_VH_NO
     */
    public String getTransVhNo() {
        return (String) getAttributeInternal(TRANSVHNO);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_VH_NO using the alias name TransVhNo.
     * @param value value to set the TRANS_VH_NO
     */
    public void setTransVhNo(String value) {
        setAttributeInternal(TRANSVHNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotQtyTrans.
     * @return the TotQtyTrans
     */
    public Number getTotQtyTrans() {
        if (getSlsSoItm().getRowCount() > 0) {
            Number b = StaticValue.NUMBER_ZERO;
            Row[] allRowsInRange = getSlsSoItm().getAllRowsInRange();
            for (Row row : allRowsInRange) {
                Object o = row.getAttribute("ItmQty");
                if (o != null) {
                    b = b.add((Number) o);
                }
            }
            setTotQtyTrans(b);
        }
        //SlsSoItm.sum("ItmQty")
        return (Number) getAttributeInternal(TOTQTYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotQtyTrans.
     * @param value value to set the  TotQtyTrans
     */
    public void setTotQtyTrans(Number value) {
        setAttributeInternal(TOTQTYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShowTotQty.
     * @return the ShowTotQty
     */
    public Boolean getShowTotQty() {
        return getAm().isUomSame();
        //return (Boolean) getAttributeInternal(SHOWTOTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShowTotQty.
     * @param value value to set the  ShowTotQty
     */
    public void setShowTotQty(Boolean value) {
        setAttributeInternal(SHOWTOTQTY, value);
    }

    /**
     * Gets the attribute value for TAX_FORM_TYP_ID using the alias name TaxFormTypId.
     * @return the TAX_FORM_TYP_ID
     */
    public Integer getTaxFormTypId() {
        return (Integer) getAttributeInternal(TAXFORMTYPID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_FORM_TYP_ID using the alias name TaxFormTypId.
     * @param value value to set the TAX_FORM_TYP_ID
     */
    public void setTaxFormTypId(Integer value) {
        setAttributeInternal(TAXFORMTYPID, value);
    }

    /**
     * Gets the attribute value for SO_SUB_TYPE using the alias name SoSubType.
     * @return the SO_SUB_TYPE
     */
    public Integer getSoSubType() {
        return (Integer) getAttributeInternal(SOSUBTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_SUB_TYPE using the alias name SoSubType.
     * @param value value to set the SO_SUB_TYPE
     */
    public void setSoSubType(Integer value) {
        setAttributeInternal(SOSUBTYPE, value);
    }

    /**
     * Gets the attribute value for PRJ_ID using the alias name PrjId.
     * @return the PRJ_ID
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as attribute value for PRJ_ID using the alias name PrjId.
     * @param value value to set the PRJ_ID
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProjectIdTrans.
     * @return the ProjectIdTrans
     */
    public String getProjectIdTrans() {
        return (String) getAttributeInternal(PROJECTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProjectIdTrans.
     * @param value value to set the  ProjectIdTrans
     */
    public void setProjectIdTrans(String value) {
        //System.out.println(value + " =========================== this is project Id");
        setAttributeInternal(PROJECTIDTRANS, value);
    }

    /**
     * Gets the attribute value for REF_TYP_SRC using the alias name RefTypSrc.
     * @return the REF_TYP_SRC
     */
    public Integer getRefTypSrc() {
        return (Integer) getAttributeInternal(REFTYPSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_TYP_SRC using the alias name RefTypSrc.
     * @param value value to set the REF_TYP_SRC
     */
    public void setRefTypSrc(Integer value) {
        setAttributeInternal(REFTYPSRC, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_ADDS using the alias name ShipToAdds.
     * @return the SHIP_TO_ADDS
     */
    public String getShipToAdds() {
        return (String) getAttributeInternal(SHIPTOADDS);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_ADDS using the alias name ShipToAdds.
     * @param value value to set the SHIP_TO_ADDS
     */
    public void setShipToAdds(String value) {
        setAttributeInternal(SHIPTOADDS, value);
    }

    /**
     * Gets the attribute value for SHIP_TO_NM using the alias name ShipToNm.
     * @return the SHIP_TO_NM
     */
    public String getShipToNm() {
        return (String) getAttributeInternal(SHIPTONM);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_TO_NM using the alias name ShipToNm.
     * @param value value to set the SHIP_TO_NM
     */
    public void setShipToNm(String value) {
        setAttributeInternal(SHIPTONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExmptTaxChk.
     * @return the TransExmptTaxChk
     */
    public String getTransExmptTaxChk() {
        if (getAttributeInternal(TRANSEXMPTTAXCHK) == null) {
            RowIterator itr = this.getSlsSoTr();
            if (itr.getRowCount() > 0) {
                Row next = itr.next();
                if (next.getAttribute("ExmptFlg") != null) {
                    setTransExmptTaxChk(next.getAttribute("ExmptFlg").toString());
                }
            } else {
                setTransExmptTaxChk("N");
            }
            
        }
        return (String) getAttributeInternal(TRANSEXMPTTAXCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExmptTaxChk.
     * @param value value to set the  TransExmptTaxChk
     */
    public void setTransExmptTaxChk(String value) {
        setAttributeInternal(TRANSEXMPTTAXCHK, value);
    }

    /**
     * Gets the attribute value for EO_CATG_ID using the alias name EoCatgId.
     * @return the EO_CATG_ID
     */
    public Integer getEoCatgId() {
        return (Integer) getAttributeInternal(EOCATGID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_CATG_ID using the alias name EoCatgId.
     * @param value value to set the EO_CATG_ID
     */
    public void setEoCatgId(Integer value) {
        setAttributeInternal(EOCATGID, value);
        System.out.println("Setting Category to | "+value);
        //getLovEoId1().setNamedWhereClauseParam("catgIdBind", value);
    }

    /**
     * Gets the attribute value for the calculated attribute isRefOrgUsedTrans.
     * @return the isRefOrgUsedTrans
     */
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        return ADFModelUtils.callFunction(getAm(), new StringBuilder(stmt), bindVars, sqlReturnType);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItm.
     */
    public RowIterator getSlsSoItm() {
        return (RowIterator) getAttributeInternal(SLSSOITM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoDlvSchdl.
     */
    public RowIterator getSlsSoDlvSchdl() {
        return (RowIterator) getAttributeInternal(SLSSODLVSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link DlvShdlView.
     */
    public RowIterator getDlvShdlView() {
        return (RowIterator) getAttributeInternal(DLVSHDLVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoPmntSchdl.
     */
    public RowIterator getSlsSoPmntSchdl() {
        return (RowIterator) getAttributeInternal(SLSSOPMNTSCHDL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoTnc.
     */
    public RowIterator getSlsSoTnc() {
        return (RowIterator) getAttributeInternal(SLSSOTNC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoTr.
     */
    public RowIterator getSlsSoTr() {
        return (RowIterator) getAttributeInternal(SLSSOTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoOc.
     */
    public RowIterator getSlsSoOc() {
        return (RowIterator) getAttributeInternal(SLSSOOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link RateContractVw.
     */
    public RowIterator getRateContractVw() {
        return (RowIterator) getAttributeInternal(RATECONTRACTVW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoCalc.
     */
    public RowIterator getSlsSoCalc() {
        return (RowIterator) getAttributeInternal(SLSSOCALC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmSoItmPo.
     */
    public RowIterator getMmSoItmPo() {
        return (RowIterator) getAttributeInternal(MMSOITMPO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MMDrftPoView.
     */
    public RowIterator getMMDrftPoView() {
        return (RowIterator) getAttributeInternal(MMDRFTPOVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoPaymntVO.
     */
    public RowIterator getSlsSoPaymntVO() {
        return (RowIterator) getAttributeInternal(SLSSOPAYMNTVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppWfAttchVO.
     */
    public RowIterator getAppWfAttchVO() {
        return (RowIterator) getAttributeInternal(APPWFATTCHVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmLotVO.
     */
    public RowIterator getSlsSoItmLotVO() {
        return (RowIterator) getAttributeInternal(SLSSOITMLOTVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmSchVO.
     */
    public RowIterator getSlsSoItmSchVO() {
        return (RowIterator) getAttributeInternal(SLSSOITMSCHVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmTrfVO.
     */
    public RowIterator getSlsSoItmTrfVO() {
        return (RowIterator) getAttributeInternal(SLSSOITMTRFVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoTrLinesVO.
     */
    public RowIterator getSlsSoTrLinesVO() {
        return (RowIterator) getAttributeInternal(SLSSOTRLINESVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoFlxVO.
     */
    public RowIterator getSlsSoFlxVO() {
        return (RowIterator) getAttributeInternal(SLSSOFLXVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId1.
     */
    public RowSet getLovUsrId1() {
        return (RowSet) getAttributeInternal(LOVUSRID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoId1.
     */
    public RowSet getLovEoId1() {
        return (RowSet) getAttributeInternal(LOVEOID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrId1.
     */
    public RowSet getLovCurrId1() {
        return (RowSet) getAttributeInternal(LOVCURRID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTyp1.
     */
    public RowSet getLovDiscTyp1() {
        return (RowSet) getAttributeInternal(LOVDISCTYP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrdStatus1.
     */
    public RowSet getLovOrdStatus1() {
        return (RowSet) getAttributeInternal(LOVORDSTATUS1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrderTyp1.
     */
    public RowSet getLovOrderTyp1() {
        return (RowSet) getAttributeInternal(LOVORDERTYP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDlvModeVO1.
     */
    public RowSet getLovDlvModeVO1() {
        return (RowSet) getAttributeInternal(LOVDLVMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhIdVO1.
     */
    public RowSet getLovWhIdVO1() {
        return (RowSet) getAttributeInternal(LOVWHIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWhIdAddrsVO1.
     */
    public RowSet getLovWhIdAddrsVO1() {
        return (RowSet) getAttributeInternal(LOVWHIDADDRSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPayModeVO1.
     */
    public RowSet getLovPayModeVO1() {
        return (RowSet) getAttributeInternal(LOVPAYMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxTypVO1.
     */
    public RowSet getLovTaxTypVO1() {
        return (RowSet) getAttributeInternal(LOVTAXTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> quotationLovVO1.
     */
    public RowSet getquotationLovVO1() {
        return (RowSet) getAttributeInternal(QUOTATIONLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDispOrdIdVO1.
     */
    public RowSet getLovDispOrdIdVO1() {
        return (RowSet) getAttributeInternal(LOVDISPORDIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTmplDocIdVO1.
     */
    public RowSet getLovTmplDocIdVO1() {
        return (RowSet) getAttributeInternal(LOVTMPLDOCIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSoBasisVO1.
     */
    public RowSet getLovSoBasisVO1() {
        return (RowSet) getAttributeInternal(LOVSOBASISVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovSoModeVO1.
     */
    public RowSet getLovSoModeVO1() {
        return (RowSet) getAttributeInternal(LOVSOMODEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovEoAddsVO1.
     */
    public RowSet getLovEoAddsVO1() {
        return (RowSet) getAttributeInternal(LOVEOADDSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleIdVO1.
     */
    public RowSet getLovTaxRuleIdVO1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQtyContractVO1.
     */
    public RowSet getLovQtyContractVO1() {
        return (RowSet) getAttributeInternal(LOVQTYCONTRACTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPolicyVO1.
     */
    public RowSet getLovPolicyVO1() {
        return (RowSet) getAttributeInternal(LOVPOLICYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAppDsAttVO1.
     */
    public RowSet getLovAppDsAttVO1() {
        return (RowSet) getAttributeInternal(LOVAPPDSATTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> quotationLovVO2.
     */
    public RowSet getquotationLovVO2() {
        return (RowSet) getAttributeInternal(QUOTATIONLOVVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRefOrgV0_1.
     */
    public RowSet getLOVRefOrgV0_1() {
        return (RowSet) getAttributeInternal(LOVREFORGV0_1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovEoNmFrmEoIdVO1.
     */
    public RowSet getLovEoNmFrmEoIdVO1() {
        return (RowSet) getAttributeInternal(LOVEONMFRMEOIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoNmVO1.
     */
    public RowSet getLovEoNmVO1() {
        return (RowSet) getAttributeInternal(LOVEONMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWarrantyVO1.
     */
    public RowSet getLovWarrantyVO1() {
        return (RowSet) getAttributeInternal(LOVWARRANTYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrNmFrmUsrIdVO1.
     */
    public RowSet getLovUsrNmFrmUsrIdVO1() {
        return (RowSet) getAttributeInternal(LOVUSRNMFRMUSRIDVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovPlcNmVo1.
     */
    public RowSet getLovPlcNmVo1() {
        return (RowSet) getAttributeInternal(LOVPLCNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxFormTypeVO1.
     */
    public RowSet getLovTaxFormTypeVO1() {
        return (RowSet) getAttributeInternal(LOVTAXFORMTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrderSubTypVO1.
     */
    public RowSet getLovOrderSubTypVO1() {
        return (RowSet) getAttributeInternal(LOVORDERSUBTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVProjectVO.
     */
    public RowSet getLOVProjectVO() {
        return (RowSet) getAttributeInternal(LOVPROJECTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVProjectVO1.
     */
    public RowSet getLOVProjectVO1() {
        return (RowSet) getAttributeInternal(LOVPROJECTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRefTypeSrcVO.
     */
    public RowSet getLOVRefTypeSrcVO() {
        return (RowSet) getAttributeInternal(LOVREFTYPESRCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSalesmanVO.
     */
    public RowSet getLovSalesmanVO() {
        return (RowSet) getAttributeInternal(LOVSALESMANVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustCatgVO1.
     */
    public RowSet getLovCustCatgVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTCATGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
