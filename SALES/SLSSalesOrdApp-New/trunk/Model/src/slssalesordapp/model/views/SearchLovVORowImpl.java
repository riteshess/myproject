package slssalesordapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Sep 12 12:37:02 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchLovVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EoId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setEoId((String) value);
            }
        }
        ,
        EoNm {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getEoNm();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setEoNm((String) value);
            }
        }
        ,
        FromDt {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getFromDt();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setFromDt((Timestamp) value);
            }
        }
        ,
        ToDt {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getToDt();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setToDt((Timestamp) value);
            }
        }
        ,
        OrdStatus {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getOrdStatus();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setOrdStatus((Integer) value);
            }
        }
        ,
        OrdTyp {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getOrdTyp();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setOrdTyp((Integer) value);
            }
        }
        ,
        UsrNm {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getUsrNm();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setUsrNm((String) value);
            }
        }
        ,
        UsrId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getUsrId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setUsrId((Integer) value);
            }
        }
        ,
        AmtFrom {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getAmtFrom();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAmtFrom((Number) value);
            }
        }
        ,
        AmtTo {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getAmtTo();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAmtTo((Number) value);
            }
        }
        ,
        DocIdDisp {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getDocIdDisp();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setDocIdDisp((String) value);
            }
        }
        ,
        DocId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrdrMode {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getOrdrMode();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setOrdrMode((Integer) value);
            }
        }
        ,
        AddsId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getAddsId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAddsId((String) value);
            }
        }
        ,
        AddsDesc {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getAddsDesc();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAddsDesc((String) value);
            }
        }
        ,
        TempAddsId {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getTempAddsId();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setTempAddsId((String) value);
            }
        }
        ,
        ExtDocNo {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getExtDocNo();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setExtDocNo((String) value);
            }
        }
        ,
        LovEoId1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovEoId1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrdStatus1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovOrdStatus1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrderTyp1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovOrderTyp1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUsrId1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovUsrId1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDispOrdIdVO1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovDispOrdIdVO1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSoModeVO1 {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLovSoModeVO1();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVAddsForSearchVO {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLOVAddsForSearchVO();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVExtDocNoVO {
            public Object get(SearchLovVORowImpl obj) {
                return obj.getLOVExtDocNoVO();
            }

            public void put(SearchLovVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchLovVORowImpl object);

        public abstract void put(SearchLovVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int FROMDT = AttributesEnum.FromDt.index();
    public static final int TODT = AttributesEnum.ToDt.index();
    public static final int ORDSTATUS = AttributesEnum.OrdStatus.index();
    public static final int ORDTYP = AttributesEnum.OrdTyp.index();
    public static final int USRNM = AttributesEnum.UsrNm.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int AMTFROM = AttributesEnum.AmtFrom.index();
    public static final int AMTTO = AttributesEnum.AmtTo.index();
    public static final int DOCIDDISP = AttributesEnum.DocIdDisp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORDRMODE = AttributesEnum.OrdrMode.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int ADDSDESC = AttributesEnum.AddsDesc.index();
    public static final int TEMPADDSID = AttributesEnum.TempAddsId.index();
    public static final int EXTDOCNO = AttributesEnum.ExtDocNo.index();
    public static final int LOVEOID1 = AttributesEnum.LovEoId1.index();
    public static final int LOVORDSTATUS1 = AttributesEnum.LovOrdStatus1.index();
    public static final int LOVORDERTYP1 = AttributesEnum.LovOrderTyp1.index();
    public static final int LOVUSRID1 = AttributesEnum.LovUsrId1.index();
    public static final int LOVDISPORDIDVO1 = AttributesEnum.LovDispOrdIdVO1.index();
    public static final int LOVSOMODEVO1 = AttributesEnum.LovSoModeVO1.index();
    public static final int LOVADDSFORSEARCHVO = AttributesEnum.LOVAddsForSearchVO.index();
    public static final int LOVEXTDOCNOVO = AttributesEnum.LOVExtDocNoVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchLovVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public String getEoId() {
        return (String) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(String value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNm.
     * @param value value to set the  EoNm
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDt.
     * @return the FromDt
     */
    public Timestamp getFromDt() {
        return (Timestamp) getAttributeInternal(FROMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDt.
     * @param value value to set the  FromDt
     */
    public void setFromDt(Timestamp value) {
        setAttributeInternal(FROMDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDt.
     * @return the ToDt
     */
    public Timestamp getToDt() {
        return (Timestamp) getAttributeInternal(TODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDt.
     * @param value value to set the  ToDt
     */
    public void setToDt(Timestamp value) {
        setAttributeInternal(TODT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdStatus.
     * @return the OrdStatus
     */
    public Integer getOrdStatus() {
        return (Integer) getAttributeInternal(ORDSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrdStatus.
     * @param value value to set the  OrdStatus
     */
    public void setOrdStatus(Integer value) {
        setAttributeInternal(ORDSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdTyp.
     * @return the OrdTyp
     */
    public Integer getOrdTyp() {
        return (Integer) getAttributeInternal(ORDTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrdTyp.
     * @param value value to set the  OrdTyp
     */
    public void setOrdTyp(Integer value) {
        setAttributeInternal(ORDTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrNm.
     * @return the UsrNm
     */
    public String getUsrNm() {
        return (String) getAttributeInternal(USRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrNm.
     * @param value value to set the  UsrNm
     */
    public void setUsrNm(String value) {
        setAttributeInternal(USRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrId.
     * @return the UsrId
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrId.
     * @param value value to set the  UsrId
     */
    public void setUsrId(Integer value) {
        setAttributeInternal(USRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtFrom.
     * @return the AmtFrom
     */
    public Number getAmtFrom() {
        return (Number) getAttributeInternal(AMTFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtFrom.
     * @param value value to set the  AmtFrom
     */
    public void setAmtFrom(Number value) {
        setAttributeInternal(AMTFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtTo.
     * @return the AmtTo
     */
    public Number getAmtTo() {
        return (Number) getAttributeInternal(AMTTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtTo.
     * @param value value to set the  AmtTo
     */
    public void setAmtTo(Number value) {
        setAttributeInternal(AMTTO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdDisp.
     * @return the DocIdDisp
     */
    public String getDocIdDisp() {
        return (String) getAttributeInternal(DOCIDDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdDisp.
     * @param value value to set the  DocIdDisp
     */
    public void setDocIdDisp(String value) {
        setAttributeInternal(DOCIDDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public String getSlocId() {
        String sloc_id = resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        return sloc_id;
        //return (String) getAttributeInternal(SLOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String ho_org_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        return ho_org_id;
       // return (String) getAttributeInternal(HOORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        return org_id;
        //return (String) getAttributeInternal(ORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        return cld_id;
        
     //   return (String) getAttributeInternal(CLDID);
    }


    /**
     * Gets the attribute value for the calculated attribute OrdrMode.
     * @return the OrdrMode
     */
    public Integer getOrdrMode() {
        return (Integer) getAttributeInternal(ORDRMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrdrMode.
     * @param value value to set the  OrdrMode
     */
    public void setOrdrMode(Integer value) {
        setAttributeInternal(ORDRMODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmentId.
     * @return the ShipmentId
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmentId.
     * @param value value to set the  ShipmentId
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsDesc.
     * @return the AddsDesc
     */
    public String getAddsDesc() {
        return (String) getAttributeInternal(ADDSDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddsDesc.
     * @param value value to set the  AddsDesc
     */
    public void setAddsDesc(String value) {
        setAttributeInternal(ADDSDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TempAddsId.
     * @return the TempAddsId
     */
    public String getTempAddsId() {
        return (String) getAttributeInternal(TEMPADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TempAddsId.
     * @param value value to set the  TempAddsId
     */
    public void setTempAddsId(String value) {
        setAttributeInternal(TEMPADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExtDocNo.
     * @return the ExtDocNo
     */
    public String getExtDocNo() {
        return (String) getAttributeInternal(EXTDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExtDocNo.
     * @param value value to set the  ExtDocNo
     */
    public void setExtDocNo(String value) {
        setAttributeInternal(EXTDOCNO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoId1.
     */
    public RowSet getLovEoId1() {
        return (RowSet)getAttributeInternal(LOVEOID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrdStatus1.
     */
    public RowSet getLovOrdStatus1() {
        return (RowSet)getAttributeInternal(LOVORDSTATUS1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrderTyp1.
     */
    public RowSet getLovOrderTyp1() {
        return (RowSet)getAttributeInternal(LOVORDERTYP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrId1.
     */
    public RowSet getLovUsrId1() {
        return (RowSet)getAttributeInternal(LOVUSRID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDispOrdIdVO1.
     */
    public RowSet getLovDispOrdIdVO1() {
        return (RowSet)getAttributeInternal(LOVDISPORDIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSoModeVO1.
     */
    public RowSet getLovSoModeVO1() {
        return (RowSet)getAttributeInternal(LOVSOMODEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAddsForSearchVO.
     */
    public RowSet getLOVAddsForSearchVO() {
        return (RowSet) getAttributeInternal(LOVADDSFORSEARCHVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVExtDocNoVO.
     */
    public RowSet getLOVExtDocNoVO() {
        return (RowSet) getAttributeInternal(LOVEXTDOCNOVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
