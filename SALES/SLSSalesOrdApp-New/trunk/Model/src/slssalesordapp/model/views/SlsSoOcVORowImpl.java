package slssalesordapp.model.views;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.entities.SlsSoOcEOImpl;
import slssalesordapp.model.service.salesOrderAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 03 10:01:44 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoOcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSSOOCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        CoaId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        }
        ,
        AmtSp {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getAmtSp();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAmtSp((Number) value);
            }
        }
        ,
        AmtBs {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getAmtBs();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAmtBs((Number) value);
            }
        }
        ,
        OcDesc {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getOcDesc();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setOcDesc((Integer) value);
            }
        }
        ,
        CurrId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getCurrId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setCurrId((Integer) value);
            }
        }
        ,
        CurrRate {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getCurrRate();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setCurrRate((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        TranType {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getTranType();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setTranType((String) value);
            }
        }
        ,
        CoaDescTrans {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getCoaDescTrans();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OcId {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getOcId();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setOcId((String) value);
            }
        }
        ,
        LovOcDesc1 {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getLovOcDesc1();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAmtTypOcVO1 {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getLovAmtTypOcVO1();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVOtherChargeNameVO {
            public Object get(SlsSoOcVORowImpl obj) {
                return obj.getLOVOtherChargeNameVO();
            }

            public void put(SlsSoOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(SlsSoOcVORowImpl object);

        public abstract void put(SlsSoOcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int CURRRATE = AttributesEnum.CurrRate.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int COADESCTRANS = AttributesEnum.CoaDescTrans.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int LOVOCDESC1 = AttributesEnum.LovOcDesc1.index();
    public static final int LOVAMTTYPOCVO1 = AttributesEnum.LovAmtTypOcVO1.index();
    public static final int LOVOTHERCHARGENAMEVO = AttributesEnum.LOVOtherChargeNameVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoOcVORowImpl() {
    }

    /**
     * Gets SlsSoOcEO entity object.
     * @return the SlsSoOcEO
     */
    public SlsSoOcEOImpl getSlsSoOcEO() {
        return (SlsSoOcEOImpl)getEntity(ENTITY_SLSSOOCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number)getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        Number rate = new Number(1);
        Number amtSp = new Number(0);
        if (getCurrRate() != null) {
            rate = getCurrRate();
        }
        if (value != null) {
            amtSp = value;
        }
        Number amtBs = rate.multiply(amtSp);
        System.out.println("Other Charges base Amoutn is-->"+value);
        setAmtBs(amtBs);
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        Number rate = new Number(1);
        Number amtSp = new Number(0);
        if (getCurrRate() != null) {
            rate = getCurrRate();
        }
        if (getAmtSp() != null) {
            amtSp = getAmtSp();
        }
        Number amtBs = rate.multiply(amtSp);
        if (amtBs != null) {
            return amtBs;
        } else {
            return (Number)getAttributeInternal(AMTBS);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public Integer getOcDesc() {
        return (Integer)getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for CURR_ID using the alias name CurrId.
     * @return the CURR_ID
     */
    public Integer getCurrId() {
        return (Integer)getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID using the alias name CurrId.
     * @param value value to set the CURR_ID
     */
    public void setCurrId(Integer value) {
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for CURR_RATE using the alias name CurrRate.
     * @return the CURR_RATE
     */
    public Number getCurrRate() {
        return (Number)getAttributeInternal(CURRRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_RATE using the alias name CurrRate.
     * @param value value to set the CURR_RATE
     */
    public void setCurrRate(Number value) {
        setAttributeInternal(CURRRATE, value);
    }


    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String)getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CoaDescTrans.
     * @return the CoaDescTrans
     */
    private String coaNm = null; 
    public String getCoaDescTrans() {
        if(getCoaId() != null){
            coaNm = EbizParams.getCoaNameFrmCoaId((salesOrderAMImpl) getApplicationModule(), getCoaId());
        }
        return coaNm;
        //return (String) getAttributeInternal(COADESCTRANS);
    }


    /**
     * Gets the attribute value for OC_ID using the alias name OcId.
     * @return the OC_ID
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_ID using the alias name OcId.
     * @param value value to set the OC_ID
     */
    public void setOcId(String value) {
        setAttributeInternal(OCID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOcDesc1.
     */
    public RowSet getLovOcDesc1() {
        return (RowSet)getAttributeInternal(LOVOCDESC1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAmtTypOcVO1.
     */
    public RowSet getLovAmtTypOcVO1() {
        return (RowSet)getAttributeInternal(LOVAMTTYPOCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOtherChargeNameVO.
     */
    public RowSet getLOVOtherChargeNameVO() {
        return (RowSet) getAttributeInternal(LOVOTHERCHARGENAMEVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
