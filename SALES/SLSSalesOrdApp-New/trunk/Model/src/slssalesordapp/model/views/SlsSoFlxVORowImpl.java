package slssalesordapp.model.views;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.service.salesOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 31 16:10:23 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoFlxVORowImpl extends ViewRowImpl {

    public static final int ENTITY_SLSSOFLXEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        FieldId {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getFieldId();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setFieldId((String) value);
            }
        }
        ,
        FieldVal {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getFieldVal();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setFieldVal((String) value);
            }
        }
        ,
        DataType {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getDataType();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setDataType((Integer) value);
            }
        }
        ,
        DataLen {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getDataLen();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setDataLen((Integer) value);
            }
        }
        ,
        Reqd {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getReqd();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setReqd((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        DateValueTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getDateValueTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setDateValueTrans((Timestamp) value);
            }
        }
        ,
        NumberValueTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getNumberValueTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setNumberValueTrans((Number) value);
            }
        }
        ,
        CharacterValueTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getCharacterValueTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setCharacterValueTrans((String) value);
            }
        }
        ,
        BooleanValueTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getBooleanValueTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setBooleanValueTrans((String) value);
            }
        }
        ,
        LovValueTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getLovValueTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setLovValueTrans((String) value);
            }
        }
        ,
        HasLovTrans {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getHasLovTrans();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setHasLovTrans((String) value);
            }
        }
        ,
        LOVFlxFldNameVO {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getLOVFlxFldNameVO();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVFlxFldLovVO {
            public Object get(SlsSoFlxVORowImpl obj) {
                return obj.getLOVFlxFldLovVO();
            }

            public void put(SlsSoFlxVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(SlsSoFlxVORowImpl object);

        public abstract void put(SlsSoFlxVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FIELDID = AttributesEnum.FieldId.index();
    public static final int FIELDVAL = AttributesEnum.FieldVal.index();
    public static final int DATATYPE = AttributesEnum.DataType.index();
    public static final int DATALEN = AttributesEnum.DataLen.index();
    public static final int REQD = AttributesEnum.Reqd.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DATEVALUETRANS = AttributesEnum.DateValueTrans.index();
    public static final int NUMBERVALUETRANS = AttributesEnum.NumberValueTrans.index();
    public static final int CHARACTERVALUETRANS = AttributesEnum.CharacterValueTrans.index();
    public static final int BOOLEANVALUETRANS = AttributesEnum.BooleanValueTrans.index();
    public static final int LOVVALUETRANS = AttributesEnum.LovValueTrans.index();
    public static final int HASLOVTRANS = AttributesEnum.HasLovTrans.index();
    public static final int LOVFLXFLDNAMEVO = AttributesEnum.LOVFlxFldNameVO.index();
    public static final int LOVFLXFLDLOVVO = AttributesEnum.LOVFlxFldLovVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoFlxVORowImpl() {
    }

    /**
     * Gets SlsSoFlxEO entity object.
     * @return the SlsSoFlxEO
     */
    public EntityImpl getSlsSoFlxEO() {
        return (EntityImpl) getEntity(ENTITY_SLSSOFLXEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FIELD_ID using the alias name FieldId.
     * @return the FIELD_ID
     */
    public String getFieldId() {
        return (String) getAttributeInternal(FIELDID);
    }

    /**
     * Sets <code>value</code> as attribute value for FIELD_ID using the alias name FieldId.
     * @param value value to set the FIELD_ID
     */
    public void setFieldId(String value) {
        setAttributeInternal(FIELDID, value);
    }

    /**
     * Gets the attribute value for FIELD_VAL using the alias name FieldVal.
     * @return the FIELD_VAL
     */
    public String getFieldVal() {
        return (String) getAttributeInternal(FIELDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for FIELD_VAL using the alias name FieldVal.
     * @param value value to set the FIELD_VAL
     */
    public void setFieldVal(String value) {
        setAttributeInternal(FIELDVAL, value);
    }

    /**
     * Gets the attribute value for DATA_TYPE using the alias name DataType.
     * @return the DATA_TYPE
     */
    public Integer getDataType() {
        return (Integer) getAttributeInternal(DATATYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_TYPE using the alias name DataType.
     * @param value value to set the DATA_TYPE
     */
    public void setDataType(Integer value) {
        setAttributeInternal(DATATYPE, value);
    }

    /**
     * Gets the attribute value for DATA_LEN using the alias name DataLen.
     * @return the DATA_LEN
     */
    public Integer getDataLen() {
        return (Integer) getAttributeInternal(DATALEN);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_LEN using the alias name DataLen.
     * @param value value to set the DATA_LEN
     */
    public void setDataLen(Integer value) {
        setAttributeInternal(DATALEN, value);
    }

    /**
     * Gets the attribute value for REQD using the alias name Reqd.
     * @return the REQD
     */
    public String getReqd() {
        return (String) getAttributeInternal(REQD);
    }

    /**
     * Sets <code>value</code> as attribute value for REQD using the alias name Reqd.
     * @param value value to set the REQD
     */
    public void setReqd(String value) {
        setAttributeInternal(REQD, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DateValueTrans.
     * @return the DateValueTrans
     */
    public Timestamp getDateValueTrans() {
        if (getFieldVal() != null) {
            return new Timestamp(getFieldVal());
        } else {
            return (Timestamp) getAttributeInternal(DATEVALUETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DateValueTrans.
     * @param value value to set the  DateValueTrans
     */
    public void setDateValueTrans(Timestamp value) {
        setAttributeInternal(DATEVALUETRANS, value);
        if (value != null) {
            setFieldVal(value.toString());
        }
    }

    /**
     * Gets the attribute value for the calculated attribute NumberValueTrans.
     * @return the NumberValueTrans
     */
    public Number getNumberValueTrans() {
        if (getFieldVal() != null) {
            String tmpNumVal = getFieldVal();
            oracle.jbo.domain.Number variable = null;

            try {
                variable = new oracle.jbo.domain.Number(Double.parseDouble(tmpNumVal));
            } catch (SQLException e) {
                e.printStackTrace();
            }
            return variable;
        } else {
            return (Number) getAttributeInternal(NUMBERVALUETRANS);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumberValueTrans.
     * @param value value to set the  NumberValueTrans
     */
    public void setNumberValueTrans(Number value) {
        setAttributeInternal(NUMBERVALUETRANS, value);
        if (value != null) {
            setFieldVal(value.toString());
        }
    }

    /**
     * Gets the attribute value for the calculated attribute CharacterValueTrans.
     * @return the CharacterValueTrans
     */
    public String getCharacterValueTrans() {
        if (getFieldVal() != null) {
            return getFieldVal();
        } else {
            return (String) getAttributeInternal(CHARACTERVALUETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CharacterValueTrans.
     * @param value value to set the  CharacterValueTrans
     */
    public void setCharacterValueTrans(String value) {
        setAttributeInternal(CHARACTERVALUETRANS, value);
        if (value != null) {
            setFieldVal(value.toString());
        }
    }

    /**
     * Gets the attribute value for the calculated attribute BooleanValueTrans.
     * @return the BooleanValueTrans
     */
    public String getBooleanValueTrans() {
        if (getFieldVal() != null) {
            return getFieldVal();
        } else {
            return (String) getAttributeInternal(BOOLEANVALUETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BooleanValueTrans.
     * @param value value to set the  BooleanValueTrans
     */
    public void setBooleanValueTrans(String value) {
        setAttributeInternal(BOOLEANVALUETRANS, value);
        if (value != null) {
            setFieldVal(value.toString());
        }
    }

    /**
     * Gets the attribute value for the calculated attribute LovValueTrans.
     * @return the LovValueTrans
     */
    public String getLovValueTrans() {
        if (getFieldVal() != null) {
            return getFieldVal();
        } else {
            return (String) getAttributeInternal(LOVVALUETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LovValueTrans.
     * @param value value to set the  LovValueTrans
     */
    public void setLovValueTrans(String value) {
        setAttributeInternal(LOVVALUETRANS, value);
        if (value != null) {
            setFieldVal(value.toString());
        }
    }

    /**
     * Gets the attribute value for the calculated attribute HasLovTrans.
     * @return the HasLovTrans
     */
    public String getHasLovTrans() {

        salesOrderAMImpl am = (salesOrderAMImpl) this.getApplicationModule();
        if (getFieldId() != null) {
            Object o = null;
            String retunVal = null;
            try {
                o = ADFModelUtils.callFunction(am, new StringBuilder("fn_sls_flx_fld_Lov (?,?,?)"), new Object[] {
                                               EbizParams.GLBL_APP_CLD_ID(), 21503, getFieldId()
                }, Types.VARCHAR);
                if (o != null) {
                    retunVal = o.toString();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return retunVal;
        }
        return (String) getAttributeInternal(HASLOVTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HasLovTrans.
     * @param value value to set the  HasLovTrans
     */
    public void setHasLovTrans(String value) {
        setAttributeInternal(HASLOVTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFlxFldNameVO.
     */
    public RowSet getLOVFlxFldNameVO() {
        return (RowSet) getAttributeInternal(LOVFLXFLDNAMEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFlxFldLovVO.
     */
    public RowSet getLOVFlxFldLovVO() {
        return (RowSet) getAttributeInternal(LOVFLXFLDLOVVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

