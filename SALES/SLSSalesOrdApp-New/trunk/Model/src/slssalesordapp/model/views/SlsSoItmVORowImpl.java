package slssalesordapp.model.views;


import adf.utils.bean.ADFBeanUtils;
import adf.utils.bean.StaticValue;

import adf.utils.ebiz.EbizParams;
import adf.utils.ebiz.EbizParamsAPPUtils;
import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Date;

import java.util.Map;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.entities.SlsSoItmEOImpl;
import slssalesordapp.model.service.salesOrderAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 28 12:17:07 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSSOITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        SrNo {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSrNo((Integer) value);
            }
        }
        ,
        ItmId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmRate {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmRate();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmRate((Number) value);
            }
        }
        ,
        ItmUom {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        ItmQty {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmQty();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmQty((Number) value);
            }
        }
        ,
        ItmDiscTyp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscTyp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscTyp((String) value);
            }
        }
        ,
        ItmDiscVal {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscVal();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscVal((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number) value);
            }
        }
        ,
        Remarks {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTlrncQtyType((String) value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTlrncQtyVal((Number) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        ItmNmTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmNmTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmNmTrans((String) value);
            }
        }
        ,
        ItmAmtSpTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtSpTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtSpTrans((Number) value);
            }
        }
        ,
        ItmAmtBsTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtBsTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtBsTrans((Number) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        ItmDiscValTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscValTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscValTrans((Number) value);
            }
        }
        ,
        SchId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSchId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSchId((String) value);
            }
        }
        ,
        TransItmSerializedFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransItmSerializedFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransItmSerializedFlg((String) value);
            }
        }
        ,
        TransItmPickOrder {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransItmPickOrder();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransItmPickOrder((Integer) value);
            }
        }
        ,
        itemIssueCheckTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getitemIssueCheckTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setitemIssueCheckTrans((String) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        ItmQtyBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmQtyBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmQtyBs((Number) value);
            }
        }
        ,
        BalQty {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getBalQty();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setBalQty((Number) value);
            }
        }
        ,
        ItmNmForTableTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmNmForTableTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmNmForTableTrans((String) value);
            }
        }
        ,
        taxAmountTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.gettaxAmountTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.settaxAmountTrans((Number) value);
            }
        }
        ,
        taxableAmountTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.gettaxableAmountTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.settaxableAmountTrans((Number) value);
            }
        }
        ,
        ItemAttrTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItemAttrTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItemAttrTrans((String) value);
            }
        }
        ,
        ItmAmtGsBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtGsBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtGsBs((Number) value);
            }
        }
        ,
        ItmAmtGsSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtGsSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtGsSp((Number) value);
            }
        }
        ,
        TransTaxRuleId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransTaxRuleId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransTaxRuleId((Integer) value);
            }
        }
        ,
        enablePriceFieldTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getenablePriceFieldTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setenablePriceFieldTrans((String) value);
            }
        }
        ,
        TotAmtTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTotAmtTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTotAmtTrans((Number) value);
            }
        }
        ,
        UpdatableFlag {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUpdatableFlag();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUpdatableFlag((Boolean) value);
            }
        }
        ,
        TaxTypTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTaxTypTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTaxTypTrans((String) value);
            }
        }
        ,
        ItmGrpIdTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmGrpIdTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmGrpIdTrans((String) value);
            }
        }
        ,
        TempAmtSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTempAmtSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTempAmtSp((Number) value);
            }
        }
        ,
        OrdrTypTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getOrdrTypTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setOrdrTypTrans((Integer) value);
            }
        }
        ,
        AllowSampleItemTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAllowSampleItemTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAllowSampleItemTrans((String) value);
            }
        }
        ,
        AsblAmtBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAsblAmtBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAsblAmtBs((Number) value);
            }
        }
        ,
        AsblAmtSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAsblAmtSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAsblAmtSp((Number) value);
            }
        }
        ,
        AsblPrice {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAsblPrice();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAsblPrice((Number) value);
            }
        }
        ,
        CountSchmDataTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getCountSchmDataTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setCountSchmDataTrans((Long) value);
            }
        }
        ,
        EoIdFromHeadTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getEoIdFromHeadTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setEoIdFromHeadTrans((Integer) value);
            }
        }
        ,
        EoCatgIdFromHeadTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getEoCatgIdFromHeadTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setEoCatgIdFromHeadTrans((Integer) value);
            }
        }
        ,
        EoExecIdFromHeadTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getEoExecIdFromHeadTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setEoExecIdFromHeadTrans((Integer) value);
            }
        }
        ,
        DispDateFromHeadTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getDispDateFromHeadTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setDispDateFromHeadTrans((String) value);
            }
        }
        ,
        SchmFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSchmFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSchmFlg((String) value);
            }
        }
        ,
        WtyId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getWtyId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setWtyId((String) value);
            }
        }
        ,
        WtyIdDescTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getWtyIdDescTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setWtyIdDescTrans((String) value);
            }
        }
        ,
        CcId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getCcId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setCcId((String) value);
            }
        }
        ,
        AmcFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAmcFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAmcFlg((String) value);
            }
        }
        ,
        EoPartNo {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getEoPartNo();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setEoPartNo((String) value);
            }
        }
        ,
        AllowServiceItemTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getAllowServiceItemTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAllowServiceItemTrans((String) value);
            }
        }
        ,
        TaxDescriptionTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTaxDescriptionTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTaxDescriptionTrans((String) value);
            }
        }
        ,
        ItmBasis {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmBasis();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmBasis((Integer) value);
            }
        }
        ,
        TotalAmtWithOtrCharSP {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTotalAmtWithOtrCharSP();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTotalAmtWithOtrCharSP((Number) value);
            }
        }
        ,
        SlsSo {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSo();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoTr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoTr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmSch {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmSch();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummLot {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummLot();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummBin {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummBin();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummSr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummSr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmBin {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmBin();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmLot {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmLot();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmSr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmSr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewDiscSeqVO {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewDiscSeqVO();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoDiscVO {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoDiscVO();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmId1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovItmId1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTyp1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovDiscTyp1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmUom1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovItmUom1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSchmIdVO1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovSchmIdVO1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSchemeNameVo1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovSchemeNameVo1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWarrantyVO1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovWarrantyVO1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovWtyNmFrmWtyIdVO1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovWtyNmFrmWtyIdVO1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmBasisTypVO {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovItmBasisTypVO();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        /**
         * @param object
         * @return
         */
        public abstract Object get(SlsSoItmVORowImpl object);

        public abstract void put(SlsSoItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMRATE = AttributesEnum.ItmRate.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMDISCTYP = AttributesEnum.ItmDiscTyp.index();
    public static final int ITMDISCVAL = AttributesEnum.ItmDiscVal.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int ITMAMTSPTRANS = AttributesEnum.ItmAmtSpTrans.index();
    public static final int ITMAMTBSTRANS = AttributesEnum.ItmAmtBsTrans.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int ITMDISCVALTRANS = AttributesEnum.ItmDiscValTrans.index();
    public static final int SCHID = AttributesEnum.SchId.index();
    public static final int TRANSITMSERIALIZEDFLG = AttributesEnum.TransItmSerializedFlg.index();
    public static final int TRANSITMPICKORDER = AttributesEnum.TransItmPickOrder.index();
    public static final int ITEMISSUECHECKTRANS = AttributesEnum.itemIssueCheckTrans.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMQTYBS = AttributesEnum.ItmQtyBs.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int ITMNMFORTABLETRANS = AttributesEnum.ItmNmForTableTrans.index();
    public static final int TAXAMOUNTTRANS = AttributesEnum.taxAmountTrans.index();
    public static final int TAXABLEAMOUNTTRANS = AttributesEnum.taxableAmountTrans.index();
    public static final int ITEMATTRTRANS = AttributesEnum.ItemAttrTrans.index();
    public static final int ITMAMTGSBS = AttributesEnum.ItmAmtGsBs.index();
    public static final int ITMAMTGSSP = AttributesEnum.ItmAmtGsSp.index();
    public static final int TRANSTAXRULEID = AttributesEnum.TransTaxRuleId.index();
    public static final int ENABLEPRICEFIELDTRANS = AttributesEnum.enablePriceFieldTrans.index();
    public static final int TOTAMTTRANS = AttributesEnum.TotAmtTrans.index();
    public static final int UPDATABLEFLAG = AttributesEnum.UpdatableFlag.index();
    public static final int TAXTYPTRANS = AttributesEnum.TaxTypTrans.index();
    public static final int ITMGRPIDTRANS = AttributesEnum.ItmGrpIdTrans.index();
    public static final int TEMPAMTSP = AttributesEnum.TempAmtSp.index();
    public static final int ORDRTYPTRANS = AttributesEnum.OrdrTypTrans.index();
    public static final int ALLOWSAMPLEITEMTRANS = AttributesEnum.AllowSampleItemTrans.index();
    public static final int ASBLAMTBS = AttributesEnum.AsblAmtBs.index();
    public static final int ASBLAMTSP = AttributesEnum.AsblAmtSp.index();
    public static final int ASBLPRICE = AttributesEnum.AsblPrice.index();
    public static final int COUNTSCHMDATATRANS = AttributesEnum.CountSchmDataTrans.index();
    public static final int EOIDFROMHEADTRANS = AttributesEnum.EoIdFromHeadTrans.index();
    public static final int EOCATGIDFROMHEADTRANS = AttributesEnum.EoCatgIdFromHeadTrans.index();
    public static final int EOEXECIDFROMHEADTRANS = AttributesEnum.EoExecIdFromHeadTrans.index();
    public static final int DISPDATEFROMHEADTRANS = AttributesEnum.DispDateFromHeadTrans.index();
    public static final int SCHMFLG = AttributesEnum.SchmFlg.index();
    public static final int WTYID = AttributesEnum.WtyId.index();
    public static final int WTYIDDESCTRANS = AttributesEnum.WtyIdDescTrans.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int AMCFLG = AttributesEnum.AmcFlg.index();
    public static final int EOPARTNO = AttributesEnum.EoPartNo.index();
    public static final int ALLOWSERVICEITEMTRANS = AttributesEnum.AllowServiceItemTrans.index();
    public static final int TAXDESCRIPTIONTRANS = AttributesEnum.TaxDescriptionTrans.index();
    public static final int ITMBASIS = AttributesEnum.ItmBasis.index();
    public static final int TOTALAMTWITHOTRCHARSP = AttributesEnum.TotalAmtWithOtrCharSP.index();
    public static final int SLSSO = AttributesEnum.SlsSo.index();
    public static final int SLSSOTR = AttributesEnum.SlsSoTr.index();
    public static final int SLSSOITMSCH = AttributesEnum.SlsSoItmSch.index();
    public static final int VIEWMMSTKSUMMLOT = AttributesEnum.ViewMmStkSummLot.index();
    public static final int VIEWMMSTKSUMMBIN = AttributesEnum.ViewMmStkSummBin.index();
    public static final int VIEWMMSTKSUMMSR = AttributesEnum.ViewMmStkSummSr.index();
    public static final int SLSSOITMBIN = AttributesEnum.SlsSoItmBin.index();
    public static final int SLSSOITMLOT = AttributesEnum.SlsSoItmLot.index();
    public static final int SLSSOITMSR = AttributesEnum.SlsSoItmSr.index();
    public static final int VIEWDISCSEQVO = AttributesEnum.ViewDiscSeqVO.index();
    public static final int SLSSODISCVO = AttributesEnum.SlsSoDiscVO.index();
    public static final int LOVITMID1 = AttributesEnum.LovItmId1.index();
    public static final int LOVDISCTYP1 = AttributesEnum.LovDiscTyp1.index();
    public static final int LOVITMUOM1 = AttributesEnum.LovItmUom1.index();
    public static final int LOVSCHMIDVO1 = AttributesEnum.LovSchmIdVO1.index();
    public static final int LOVSCHEMENAMEVO1 = AttributesEnum.LovSchemeNameVo1.index();
    public static final int LOVWARRANTYVO1 = AttributesEnum.LovWarrantyVO1.index();
    public static final int LOVWTYNMFRMWTYIDVO1 = AttributesEnum.LovWtyNmFrmWtyIdVO1.index();
    public static final int LOVITMBASISTYPVO = AttributesEnum.LovItmBasisTypVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoItmVORowImpl() {
    }

    /**
     * Gets SlsSoItmEO entity object.
     * @return the SlsSoItmEO
     */
    public SlsSoItmEOImpl getSlsSoItmEO() {
        return (SlsSoItmEOImpl) getEntity(ENTITY_SLSSOITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {

        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        if (value != null) {
            Boolean dup = true;
            Row[] allRowsInRange = this.getViewObject().getAllRowsInRange();
            for (Row r : allRowsInRange) {
                if (r != this) {
                    Object itm = r.getAttribute("ItmId");
                    if (value.equals(itm)) {
                        dup = false;
                        break;
                    }
                }
            }
            // System.out.println("Dup : " + dup);
            if (dup) {
                setAttributeInternal(ITMID, value);
            }
            setEoPartNo(getAm().getDefaultPartNo(value)); // setting part no on item id set from amimpl
        }

        // System.out.println("Setting Item id to  : "+value);

        setenablePriceFieldTrans(null);
        itmNm = null;
        setItemAttrTrans(null);
        setTransItmPickOrder(null);
        setWtyId(null);
        wtyDesc = null;
        c = null;


    }

    /**
     * Gets the attribute value for ITM_RATE using the alias name ItmRate.
     * @return the ITM_RATE
     */
    public Number getItmRate() {
        return (Number) getAttributeInternal(ITMRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RATE using the alias name ItmRate.
     * @param value value to set the ITM_RATE
     */
    public void setItmRate(Number value) {
        setAttributeInternal(ITMRATE, value);
        setenablePriceFieldTrans(null);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @return the ITM_DISC_TYP
     */
    public String getItmDiscTyp() {
        return (String) getAttributeInternal(ITMDISCTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @param value value to set the ITM_DISC_TYP
     */
    public void setItmDiscTyp(String value) {
        if (value != null) {
            setAttributeInternal(ITMDISCTYP, value);
            setItmDiscVal(StaticValue.NUMBER_ZERO);
        }
    }

    /**
     * Gets the attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @return the ITM_DISC_VAL
     */
    public Number getItmDiscVal() {
        return (Number) getAttributeInternal(ITMDISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @param value value to set the ITM_DISC_VAL
     */
    public void setItmDiscVal(Number value) {
        // if (value != null) {
        setAttributeInternal(ITMDISCVAL, value);
        //}
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public oracle.jbo.domain.Number getItmAmtBs() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(oracle.jbo.domain.Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public oracle.jbo.domain.Number getItmAmtSp() {
        return (oracle.jbo.domain.Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(oracle.jbo.domain.Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
            setItmAmtBs(value.multiply(getConvFctr()));
            // To Recalculate
            settaxAmountTrans(null);
            settaxableAmountTrans(null);
        }
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }


    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String) getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public oracle.jbo.domain.Number getTlrncQtyVal() {
        return (oracle.jbo.domain.Number) getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(oracle.jbo.domain.Number value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    private String itmNm = null;

    public String getItmNmTrans() {
        if (getItmId() != null &&
            (getAttributeInternal(TRANSITMPICKORDER) == null || getTransItmSerializedFlg() == null ||
             getAttributeInternal(ITMGRPIDTRANS) == null || itmNm == null)) {
            ViewObjectImpl impl = getAm().getLovItmNmVo1();
            impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            impl.setNamedWhereClauseParam("ItmDescBind", null);
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object serializedFlgO = allRowsInRange[0].getAttribute("SerializedFlg");
                Object pickOrderO = allRowsInRange[0].getAttribute("PickOrder");
                String serializedFlg = (serializedFlgO == null ? null : serializedFlgO.toString());
                Integer pickOrder = (pickOrderO == null ? 307 : (Integer) pickOrderO);
                Object grpIdO = allRowsInRange[0].getAttribute("GrpId");
                String grpId = (grpIdO == null ? null : (grpIdO.toString()));

                setTransItmSerializedFlg(serializedFlg);
                setTransItmPickOrder(pickOrder);
                setItmGrpIdTrans(grpId);
                Object o = allRowsInRange[0].getAttribute("ItmDesc");
                if (o != null) {
                    itmNm = o.toString();
                }
            }
        }
        return itmNm;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }


    /**
     * Gets the attribute value for ITM_AMT_SP_TRANS using the alias name ItmAmtSpTrans.
     * @return the ITM_AMT_SP_TRANS
     */

    /**
     * Count is used to minimise getter calculations
     */
    private int count = 1;

    public Number getItmAmtSpTrans() {
        //  System.out.println("False Run !");
        count = count + 1;
        if (count == 3 &&
            ((this.getItmId() != null && isRowCurrent()) ||
             (this.getItmId() != null && getTempAmtSp().compareTo(new Number(0)) <= 0))) {
            //  System.out.println("Calculated Run !");
            /*
        if(((this.getItmId() != null) && isRowCurrent() && count == 3) || (this.getItmId() != null && getTempAmtSp().compareTo(new Number(0))<= 0)  ){
         */count = 0;
            Number amt = new Number(0);
            Number pric = new Number(0);
            Number qty = new Number(0);
            Number disval = new Number(0);
            String disTyp = "A";
            Number hund = new Number(100);

            if (getItmRate() != null) {
                pric = getItmRate();
            }

            if (getItmQty() != null) {
                qty = getItmQty();
            }
            if (getItmDiscVal() != null) {
                //if((Integer) this.getSlsSo().getAttribute("OrderType") != 311)
                if (!getOrdrTypTrans().equals(311)) {
                    disval = getItmDiscVal();
                }
            }
            //  System.out.println(disval + " Discount Value ------<<<<<>>>>");
            if (getItmDiscTyp() != null) {
                disTyp = getItmDiscTyp();
            }
            if (disTyp.equalsIgnoreCase("A")) {
                amt = (pric.multiply(qty)).subtract(disval);
            } else {
                amt = (pric.multiply(qty)).subtract((pric.multiply(qty.multiply(disval)).divide(hund)));
            }
            Object stt = this.getSlsSo().getAttribute("CurrConvFctr");
            Number cc = new Number(1);
            if (stt != null) {
                cc = (Number) stt;
            }

            Number existingAmt =
                (getAttributeInternal(ITMAMTGSSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTGSSP));
            if (amt.compareTo(existingAmt) != 0) {
                this.setItmAmtGsSp(ADFBeanUtils.roundOff(amt));
                /* Number c = amt.multiply(cc);
                if (p_amt != null) {
                    c = (Number) c.round(Integer.parseInt(p_amt));
                }
                this.setItmAmtGsBs(c); */
            }
            amt = ADFBeanUtils.roundOff(amt);

            String s = getTaxTypTrans();
            StringBuffer taxTyp = (s == null ? new StringBuffer("N") : new StringBuffer(s));

            if ("Y".equals(taxTyp.toString())) {
                Number n = gettaxAmountTrans();
                n = (n == null ? StaticValue.NUMBER_ZERO : n);
                amt = amt.subtract(n);
                amt = ADFBeanUtils.roundOff(amt);
                Number itmAmt =
                    (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTSP));
                itmAmt = ADFBeanUtils.roundOff(itmAmt);
                if (amt.compareTo(itmAmt) != 0) {
                    setItmAmtSp(ADFBeanUtils.roundOff(amt));
                }
            } else {
                Number itmAmt =
                    (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTSP));
                if (amt.compareTo(itmAmt) != 0) {
                    setItmAmtSp(ADFBeanUtils.roundOff(amt));
                }
            }
            setTempAmtSp(amt);
        }
        if (count == 3) {
            count = 0;
        }
        return getTempAmtSp();
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP_TRANS using the alias name ItmAmtSpTrans.
     * @param value value to set the ITM_AMT_SP_TRANS
     */
    public void setItmAmtSpTrans(Number value) {
        setAttributeInternal(ITMAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS_TRANS using the alias name ItmAmtBsTrans.
     * @return the ITM_AMT_BS_TRANS
     */
    public Number getItmAmtBsTrans() {
        //setItmAmtBs((Number) getAttributeInternal(ITMAMTBSTRANS));
        //  return (Number) getAttributeInternal(ITMAMTBSTRANS);
        //setItmAmtBs(calcItmAmntBs());
        return getItmAmtBs();
    }

    /**
     * Method to get conversion factor from header
     * @return
     */
    private Number getConvFctr() {
        Object o = getSlsSo().getAttribute("CurrConvFctr");
        return (o == null ? new Number(1) : (Number) o);
    }
    /*     protected Number calcItmAmntBs() {
        Number tot = new Number(0);
        Number conFac =
            getSlsSo().getAttribute("CurrConvFctr") == null ? new Number(0) :
            (Number) getSlsSo().getAttribute("CurrConvFctr");
        Number itmAmntSp = getItmAmtSpTrans() == null ? new Number(0) : getItmAmtSpTrans();
        tot = conFac.multiply(itmAmntSp);
        // System.out.println("The total itmamnt bs of so is ======================= " + tot);
        return tot;
    } */

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS_TRANS using the alias name ItmAmtBsTrans.
     * @param value value to set the ITM_AMT_BS_TRANS
     */
    public void setItmAmtBsTrans(Number value) {
        setAttributeInternal(ITMAMTBSTRANS, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        if (getAttributeInternal(TAXRULEFLG) == null) {
            return "N";
        }
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        // System.out.println("Setting tax rule to :"+value);
        if (value != null) {
            //     System.out.println("Actually || Setting tax rule to :"+value);
            setAttributeInternal(TAXRULEFLG, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDiscValTrans.
     * @return the ItmDiscValTrans
     */
    public Number getItmDiscValTrans() {
        Number pric = new Number(0);
        Number qty = new Number(0);
        Number disval = new Number(0);
        String disTyp = "A";
        Number amt = new Number(0);
        Number hund = new Number(100);
        if (getItmRate() != null) {
            pric = getItmRate();
        }
        if (getItmQty() != null) {
            qty = getItmQty();
        }
        if (getItmDiscVal() != null) {
            disval = getItmDiscVal();
        }
        if (getItmDiscTyp() != null) {
            disTyp = getItmDiscTyp();
        }
        if (disTyp.equalsIgnoreCase("A")) {
            amt = disval;
        } else {
            amt = ((pric.multiply(qty.multiply(disval)).divide(hund)));
        }
        return amt;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDiscValTrans.
     * @param value value to set the  ItmDiscValTrans
     */
    public void setItmDiscValTrans(Number value) {
        //   System.out.println(" trans utem disc val +++++++++++++++++++++ " + value);
        setAttributeInternal(ITMDISCVALTRANS, value);
    }

    /**
     * Gets the attribute value for SCH_ID using the alias name SchId.
     * @return the SCH_ID
     */
    public String getSchId() {
        /* if(getAttributeInternal(SCHID) != null){
            ViewObjectImpl idVO1 = getAm().getLOVSchemeIdVO1();
            idVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            idVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            idVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            idVO1.setNamedWhereClauseParam("BindSchmId", getAttributeInternal(SCHID));
            idVO1.executeQuery();
            Row[] allRowsInRange = idVO1.getAllRowsInRange();
            if(allRowsInRange.length > 0){
                Object SchmNm = allRowsInRange[0].getAttribute("SchmNm");
                return (String) SchmNm;
            }
        } */
        return (String) getAttributeInternal(SCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCH_ID using the alias name SchId.
     * @param value value to set the SCH_ID
     */
    public void setSchId(String value) {
        if (value != null) {
            setAttributeInternal(SCHID, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerializedFlg.
     * @return the TransItmSerializedFlg
     */
    public String getTransItmSerializedFlg() {
        return (String) getAttributeInternal(TRANSITMSERIALIZEDFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerializedFlg.
     * @param value value to set the  TransItmSerializedFlg
     */
    public void setTransItmSerializedFlg(String value) {
        setAttributeInternal(TRANSITMSERIALIZEDFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmPickOrder.
     * @return the TransItmPickOrder
     */
    public Integer getTransItmPickOrder() {
        /* if (getItmId() != null &&
            (getAttributeInternal(TRANSITMPICKORDER) == null || getTransItmSerializedFlg() == null ||
             getAttributeInternal(ITMGRPIDTRANS) == null || itmNm == null)) {
            ViewObjectImpl impl = getAm().getLovItmNmVo1();
            impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            impl.setNamedWhereClauseParam("ItmDescBind", null);
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object serializedFlgO = allRowsInRange[0].getAttribute("SerializedFlg");
                Object pickOrderO = allRowsInRange[0].getAttribute("PickOrder");
                String serializedFlg = (serializedFlgO == null ? null : serializedFlgO.toString());
                Integer pickOrder = (pickOrderO == null ? 307 : (Integer) pickOrderO);
                Object grpIdO = allRowsInRange[0].getAttribute("GrpId");
                String grpId = (grpIdO == null ? null : (grpIdO.toString()));

                setTransItmSerializedFlg(serializedFlg);
                setTransItmPickOrder(pickOrder);
                setItmGrpIdTrans(grpId);
                Object o = allRowsInRange[0].getAttribute("ItmDesc");
                if(o != null){
                    itmNm = o.toString();
                }
            }
             */

        return (Integer) getAttributeInternal(TRANSITMPICKORDER);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmPickOrder.
     * @param value value to set the  TransItmPickOrder
     */
    public void setTransItmPickOrder(Integer value) {
        setAttributeInternal(TRANSITMPICKORDER, value);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public salesOrderAMImpl getAm() {
        salesOrderAMImpl am = (salesOrderAMImpl) getApplicationModule();
        return am;
    }

    /**
     * Gets the attribute value for the calculated attribute itemIssueCheckTrans.
     * @return the itemIssueCheckTranset
     */
    public String getitemIssueCheckTrans() {
        if (getItmId() != null && (getOrdrTypTrans().equals(309) || getOrdrTypTrans().equals(310))) {
            //String itmId = getItmId();
            ViewObjectImpl lotVO = getAm().getSlsSoItmLotVO();
            lotVO.executeQuery();
            RowQualifier rq = new RowQualifier(lotVO);
            rq.setWhereClause("SlocId=" + getSlocId() + " and CldId='" + getCldId() + "' and OrgId='" + getOrgId() +
                              "' and HoOrgId='" + getHoOrgId() + "' and ItmId='" + getItmId() + "'");
            Row fltrdrow[] = lotVO.getFilteredRows(rq);
            //System.out.println("Rq-"+rq.getExprStr()+" For Item : "+getItmNmTrans()+" and tot row in Lot : "+fltrdrow.length);
            if (fltrdrow.length > 0) {
                //i = new StringBuffer("Y");
                return "Y";
            } else {
                return "N";
                //i = new StringBuffer("N");
            }
            //setitemIssueCheckTrans(i.toString());
        }
        return "N";
        // return (String)getAttributeInternal(ITEMISSUECHECKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute itemIssueCheckTrans.
     * @param value value to set the  itemIssueCheckTrans
     */
    public void setitemIssueCheckTrans(String value) {
        setAttributeInternal(ITEMISSUECHECKTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @return the ITM_QTY_BS
     */
    public Number getItmQtyBs() {
        return (Number) getAttributeInternal(ITMQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @param value value to set the ITM_QTY_BS
     */
    public void setItmQtyBs(Number value) {
        setAttributeInternal(ITMQTYBS, value);
    }

    /**
     * Gets the attribute value for BAL_QTY using the alias name BalQty.
     * @return the BAL_QTY
     */
    public Number getBalQty() {
        return (Number) getAttributeInternal(BALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_QTY using the alias name BalQty.
     * @param value value to set the BAL_QTY
     */
    public void setBalQty(Number value) {
        setAttributeInternal(BALQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmForTableTrans.
     * @return the ItmNmForTableTrans
     */
    public String getItmNmForTableTrans() {
        return itmNm;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmForTableTrans.
     * @param value value to set the  ItmNmForTableTrans
     */
    public void setItmNmForTableTrans(String value) {
        setAttributeInternal(ITMNMFORTABLETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxAmountTrans.
     * @return the taxAmountTrans
     */
    public Number gettaxAmountTrans() {
        //System.out.println("Getting gettaxAmountTrans to : "+getAttributeInternal(TAXAMOUNTTRANS));
        if (getAttributeInternal(TAXAMOUNTTRANS) == null && getSlsSoTr().getRowCount() > 0) {
            Number b = StaticValue.NUMBER_ZERO;
            Row[] allRowsInRange = getSlsSoTr().getAllRowsInRange();
            //  System.out.println(allRowsInRange.length + " <<<< -==-=--= total no. og sls so Tr Lines");
            for (Row row : allRowsInRange) {
                Object o = row.getAttribute("TaxAmtSp");
                if (o != null) {
                    b = b.add((Number) o);
                }
            }
            // System.out.println(" the taxAmount  Trans === " + b);
            settaxAmountTrans(b);
        } /* else if(getAttributeInternal(TAXAMOUNTTRANS) == null && getSlsSoTr().getRowCount() <= 0){
            settaxAmountTrans(StaticValue.NUMBER_ZERO);
        } */
        //  System.out.println(getAttributeInternal(TAXAMOUNTTRANS)+ " <<<=== the getter of taxamountTrasn ...");
        return (Number) getAttributeInternal(TAXAMOUNTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxAmountTrans.
     * @param value value to set the  taxAmountTrans
     */
    public void settaxAmountTrans(Number value) {
        // System.out.println("Setting Tax amount to : "+value);
        setAttributeInternal(TAXAMOUNTTRANS, value);
        //  System.out.println("Setting settaxAmountTrans to : "+value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxableAmountTrans.
     * @return the taxableAmountTrans
     */
    //Needs to be set to null for Calculations
    public Number gettaxableAmountTrans() {
        if (getAttributeInternal(TAXABLEAMOUNTTRANS) == null && getSlsSoTr().getRowCount() > 0) {
            Number b = StaticValue.NUMBER_ZERO;
            Row[] allRowsInRange = getSlsSoTr().getAllRowsInRange();
            for (Row row : allRowsInRange) {
                Object o = row.getAttribute("TaxableAmt");
                if (o != null) {
                    b = b.add((Number) o);
                }
            }
            settaxableAmountTrans(b);
        }
        return (Number) getAttributeInternal(TAXABLEAMOUNTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxableAmountTrans.
     * @param value value to set the  taxableAmountTrans
     */
    public void settaxableAmountTrans(Number value) {
        setAttributeInternal(TAXABLEAMOUNTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemAttrTrans.
     * @return the ItemAttrTrans
     */
    public String getItemAttrTrans() {
        StringBuffer attr = new StringBuffer("");
        if (this.getItmId() != null && getAttributeInternal(ITEMATTRTRANS) == null) {
            try {
                Object o = ADFModelUtils.callFunction(getAm(), new StringBuilder("APP.FN_GET_ITM_ATT(?,?,?,?,?,?)"), new Object[] {
                                                      this.getCldId(), this.getSlocId(), this.getHoOrgId(),
                                                      this.getItmId(), "R", ","
                }, Types.VARCHAR);
                if (o != null) {
                    attr = new StringBuffer(o.toString());
                    setItemAttrTrans(attr.toString());
                }

            } catch (Exception e) {
                // TODO: Add catch code
                e.printStackTrace();
            }
        }
        return (String) getAttributeInternal(ITEMATTRTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemAttrTrans.
     * @param value value to set the  ItemAttrTrans
     */
    public void setItemAttrTrans(String value) {
        setAttributeInternal(ITEMATTRTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @return the ITM_AMT_GS_BS
     */
    public Number getItmAmtGsBs() {
        return (Number) getAttributeInternal(ITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @param value value to set the ITM_AMT_GS_BS
     */
    public void setItmAmtGsBs(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(ITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @return the ITM_AMT_GS_SP
     */
    public Number getItmAmtGsSp() {
        return (Number) getAttributeInternal(ITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @param value value to set the ITM_AMT_GS_SP
     */
    public void setItmAmtGsSp(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
            setItmAmtGsBs(value.multiply(getConvFctr()));
        }
        setAttributeInternal(ITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRuleId.
     * @return the TransTaxRuleId
     */
    private Integer taxRuleIdO = null;

    public Integer getTransTaxRuleId() {
        //  System.out.println("Tax rule id : "+getAttributeInternal(TRANSTAXRULEID));
        if ("Y".equalsIgnoreCase(getTaxRuleFlg()) && taxRuleIdO == null) {
            Integer i = 0;
            RowIterator iterator = this.getSlsSoTr();
            //  System.out.println("Tax rule id in : "+getAttributeInternal(TRANSTAXRULEID));
            if (iterator.hasNext()) {
                Object id = iterator.next().getAttribute("TaxRuleId");
                if (id != null) {
                    i = (Integer) id;
                    setTransTaxRuleId(i);
                    setTaxDescriptionTrans(null);
                    taxRuleIdO = i;
                }
            } else {
                taxRuleIdO = 0;
            }
        } else if ("N".equalsIgnoreCase(getTaxRuleFlg()) && taxRuleIdO == null) {
            taxRuleIdO = 0;
        }
        // System.out.println(" Tax rule id from getter of tax id == "+ taxRuleIdO);
        return taxRuleIdO;
        //return (Integer) getAttributeInternal(TRANSTAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuleId.
     * @param value value to set the  TransTaxRuleId
     */
    public void setTransTaxRuleId(Integer value) {
        setAttributeInternal(TRANSTAXRULEID, value);
        if (value == null) {
            taxRuleIdO = null;
        }
    }

    public Boolean isRowCurrent() {
        Boolean b = false;
        Row currentRow = getAm().getSlsSoItm1().getCurrentRow();
        if (currentRow == this) {
            b = true;
        }
        return b;
    }

    /**
     * Gets the attribute value for the calculated attribute enablePriceFieldTrans.
     * @return the enablePriceFieldTrans
     */
    private StringBuffer priceEditableInProfile = null;
    private StringBuilder isPolicyApplied = null;
    private Number c = null;

    public String getenablePriceFieldTrans() {
        StringBuilder b = new StringBuilder("N");
        if (isRowCurrent() && getItmId() != null) {
            if (priceEditableInProfile == null) {
                priceEditableInProfile = getAm().checkforProfileValues(new StringBuffer("EDIT_EO_PRICE"));
            }
            if (isPolicyApplied == null) {
                isPolicyApplied = new StringBuilder(getAm().checkPolicyApplied().toString());
            }
            if ("Y".equals(priceEditableInProfile.toString())) {
                b = new StringBuilder("Y");
            } else {
                b = new StringBuilder("N");
            }
            if ("Y".equals(isPolicyApplied.toString())) {
                Object o =
                    ADFModelUtils.callFunction(getAm(), new StringBuilder("APP.APP_GET_POLICY_PRICE(?,?,?,?,?,?,?)"), new Object[] {
                                               getCldId(), getSlocId(), getHoOrgId(), getOrgId(),
                                               getSlsSo().getAttribute("EoId"), getItmId(), "SO"
                }, Types.NUMERIC);
                // System.out.println("Price Returned from Price Policy : " + o);
                try {
                    c = (o == null ? StaticValue.NUMBER_ZERO : new Number(o));
                } catch (SQLException e) {
                    // System.out.println("Number conversion failed");
                    e.printStackTrace();
                }
                c = (c == null ? new Number(-1) : c);
                if (c.compareTo(StaticValue.NUMBER_ZERO) == 0) {
                    b = new StringBuilder("Y");
                } else {
                    b = new StringBuilder("N");
                }
            }
            setenablePriceFieldTrans(b.toString());
        }
        return b.toString();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute enablePriceFieldTrans.
     * @param value value to set the  enablePriceFieldTrans
     */
    public void setenablePriceFieldTrans(String value) {
        setAttributeInternal(ENABLEPRICEFIELDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtTrans.
     * @return the TotAmtTrans
     */
    public Number getTotAmtTrans() {
        if (getAttributeInternal(TOTAMTTRANS) == null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(TOTAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotAmtTrans.
     * @param value value to set the  TotAmtTrans
     */
    public void setTotAmtTrans(Number value) {
        setAttributeInternal(TOTAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UpdatableFlag.
     * @return the UpdatableFlag
     */
    public Boolean getUpdatableFlag() {
        return (Boolean) getAttributeInternal(UPDATABLEFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UpdatableFlag.
     * @param value value to set the  UpdatableFlag
     */
    public void setUpdatableFlag(Boolean value) {
        setAttributeInternal(UPDATABLEFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaxTypTrans.
     * @return the TaxTypTrans
     */
    private Integer oldTaxRuleId = null;

    public String getTaxTypTrans() {
        if (getAttributeInternal(TAXTYPTRANS) == null || !this.getTransTaxRuleId().equals(oldTaxRuleId)) {
            StringBuffer typ = new StringBuffer("N");
            try {
                if (getTaxRuleFlg().equals("Y")) {
                    Object taxType =
                        ADFModelUtils.callFunction(getAm(), new StringBuilder("SLS.FN_SLS_CHK_TR_TYPE(?,?,?,?)"), new Object[] {
                                                   getCldId(), getSlocId(), getHoOrgId(), this.getTransTaxRuleId()
                    }, Types.VARCHAR);
                    typ = (taxType != null ? new StringBuffer(taxType.toString()) : new StringBuffer("N"));
                    // System.out.println("Tax Inculsive for : " + itmNm + " : " + typ);
                    oldTaxRuleId = this.getTransTaxRuleId();
                    setTaxTypTrans(typ.toString());

                }
            } catch (Exception e) {
                // TODO: Add catch code
                e.printStackTrace();
            }
        }

        return (String) getAttributeInternal(TAXTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxTypTrans.
     * @param value value to set the  TaxTypTrans
     */
    public void setTaxTypTrans(String value) {
        setAttributeInternal(TAXTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpIdTrans.
     * @return the ItmGrpIdTrans
     */
    public String getItmGrpIdTrans() {
        if (getAttributeInternal(ITMGRPIDTRANS) == null) {
            getItmNmTrans();
        }
        return (String) getAttributeInternal(ITMGRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpIdTrans.
     * @param value value to set the  ItmGrpIdTrans
     */
    public void setItmGrpIdTrans(String value) {
        setAttributeInternal(ITMGRPIDTRANS, value);
    }


    /**
     * Gets the attribute value for TEMP_AMT_SP using the alias name TempAmtSp.
     * @return the TEMP_AMT_SP
     */
    public Number getTempAmtSp() {
        if (getAttributeInternal(TEMPAMTSP) == null) {
            setTempAmtSp(new Number(0));
        }
        return (Number) getAttributeInternal(TEMPAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TEMP_AMT_SP using the alias name TempAmtSp.
     * @param value value to set the TEMP_AMT_SP
     */
    public void setTempAmtSp(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);

            //getAm().updateCostCenterAmt();
        }
        setAttributeInternal(TEMPAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrdrTypTrans.
     * @return the OrdrTypTrans
     */
    public Integer getOrdrTypTrans() {
        if (getAttributeInternal(ORDRTYPTRANS) == null) {
            setOrdrTypTrans((Integer) this.getSlsSo().getAttribute("OrderType"));
        }
        return (Integer) getAttributeInternal(ORDRTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrdrTypTrans.
     * @param value value to set the  OrdrTypTrans
     */
    public void setOrdrTypTrans(Integer value) {
        setAttributeInternal(ORDRTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AllowSampleItemTrans.
     * @return the AllowSampleItemTrans
     */
    public String getAllowSampleItemTrans() {
        if (getOrdrTypTrans().equals(695)) {
            return "Y";
        } else {
            return "N";
        }
        //return (String) getAttributeInternal(ALLOWSAMPLEITEMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AllowSampleItemTrans.
     * @param value value to set the  AllowSampleItemTrans
     */
    public void setAllowSampleItemTrans(String value) {
        setAttributeInternal(ALLOWSAMPLEITEMTRANS, value);
    }

    /**
     * Gets the attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @return the ASBL_AMT_BS
     */
    public Number getAsblAmtBs() {
        return (Number) getAttributeInternal(ASBLAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @param value value to set the ASBL_AMT_BS
     */
    public void setAsblAmtBs(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(ASBLAMTBS, value);
    }

    /**
     * Gets the attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @return the ASBL_AMT_SP
     */
    public Number getAsblAmtSp() {
        return (Number) getAttributeInternal(ASBLAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @param value value to set the ASBL_AMT_SP
     */
    public void setAsblAmtSp(Number value) {
        if (value != null) {
            value = ADFBeanUtils.roundOff(value);
        }
        value = (value == null ? StaticValue.NUMBER_ZERO : value);
        setAttributeInternal(ASBLAMTSP, value);
        Object stt = this.getSlsSo().getAttribute("CurrConvFctr");
        Number cc = new Number(1);
        if (stt != null) {
            cc = (Number) stt;
        }
        value = (value == null ? StaticValue.NUMBER_ZERO : value);
        value = ADFBeanUtils.roundOff(value.multiply(cc));
        setAsblAmtBs(value);

    }

    /**
     * Gets the attribute value for ASBL_PRICE using the alias name AsblPrice.
     * @return the ASBL_PRICE
     */
    public Number getAsblPrice() {
        return (Number) getAttributeInternal(ASBLPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_PRICE using the alias name AsblPrice.
     * @param value value to set the ASBL_PRICE
     */
    public void setAsblPrice(Number value) {
        setAttributeInternal(ASBLPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CountSchmDataTrans.
     * @return the CountSchmDataTrans
     */
    public Long getCountSchmDataTrans() {
        long count = this.getLovSchemeNameVo1().getEstimatedRowCount();
        //System.out.println("Count of Rows is "+count);
        return count;
        //return (Long)getAttributeInternal(COUNTSCHMDATATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CountSchmDataTrans.
     * @param value value to set the  CountSchmDataTrans
     */
    public void setCountSchmDataTrans(Long value) {
        setAttributeInternal(COUNTSCHMDATATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdFromHeadTrans.
     * @return the EoIdFromHeadTrans
     */
    public Integer getEoIdFromHeadTrans() {
        Row row = this.getSlsSo();
        Object EoId = row.getAttribute("EoId");
        //System.out.println("Eo Id is " + EoId);
        return (Integer) EoId;
        //return (Integer)getAttributeInternal(EOIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdFromHeadTrans.
     * @param value value to set the  EoIdFromHeadTrans
     */
    public void setEoIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoCatgIdFromHeadTrans.
     * @return the EoCatgIdFromHeadTrans
     */
    public Integer getEoCatgIdFromHeadTrans() {
        SlsSoVORowImpl row = (SlsSoVORowImpl) this.getSlsSo();
        //System.out.println("Category : "+row.getEoCatgTrans());
        return row.getEoCatgTrans();
        //return (Integer)getAttributeInternal(EOCATGIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoCatgIdFromHeadTrans.
     * @param value value to set the  EoCatgIdFromHeadTrans
     */
    public void setEoCatgIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOCATGIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoExecIdFromHeadTrans.
     * @return the EoExecIdFromHeadTrans
     */
    public Integer getEoExecIdFromHeadTrans() {
        Row row = this.getSlsSo();
        Object execIdO = row.getAttribute("AssignedTo");
        //   System.out.println("execid " + execId);
        Integer execId = (Integer) execIdO;
        if (execId == 0) {
            return null;
        } else {
            return execId;
        }
        //return (Integer)getAttributeInternal(EOEXECIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoExecIdFromHeadTrans.
     * @param value value to set the  EoExecIdFromHeadTrans
     */
    public void setEoExecIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOEXECIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DispDateFromHeadTrans.
     * @return the DispDateFromHeadTrans
     */
    public String getDispDateFromHeadTrans() {
        if (getAttributeInternal(DISPDATEFROMHEADTRANS) == null) {
            Row row = this.getSlsSo();
            Timestamp docDt = (Timestamp) row.getAttribute("DocDt");
            Date dt = new Date(System.currentTimeMillis());
            try {
                dt = docDt.dateValue();
            } catch (SQLException e) {
                e.printStackTrace();
            }
            return dt.toString();
        }
        return (String) getAttributeInternal(DISPDATEFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DispDateFromHeadTrans.
     * @param value value to set the  DispDateFromHeadTrans
     */
    public void setDispDateFromHeadTrans(String value) {
        setAttributeInternal(DISPDATEFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for SCHM_FLG using the alias name SchmFlg.
     * @return the SCHM_FLG
     */
    public String getSchmFlg() {
        return (String) getAttributeInternal(SCHMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_FLG using the alias name SchmFlg.
     * @param value value to set the SCHM_FLG
     */
    public void setSchmFlg(String value) {
        setAttributeInternal(SCHMFLG, value);
    }

    /**
     * Gets the attribute value for WTY_ID using the alias name WtyId.
     * @return the WTY_ID
     */
    public String getWtyId() {
        return (String) getAttributeInternal(WTYID);
    }

    /**
     * Sets <code>value</code> as attribute value for WTY_ID using the alias name WtyId.
     * @param value value to set the WTY_ID
     */
    public void setWtyId(String value) {
        setAttributeInternal(WTYID, value);
        setAmcFlg("N");
        wtyDesc = null;
    }

    /**
     * Gets the attribute value for the calculated attribute WtyIdDescTrans.
     * @return the WtyIdDescTrans
     */
    private String wtyDesc = null;

    public String getWtyIdDescTrans() {
        if (wtyDesc == null && getWtyId() != null) {
            RowSet frmWtyIdVO1 = this.getLovWtyNmFrmWtyIdVO1();
            frmWtyIdVO1.setNamedWhereClauseParam("WtyIdBind", getWtyId());
            frmWtyIdVO1.executeQuery();
            Row[] allRowsInRange = frmWtyIdVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object WtyNmO = allRowsInRange[0].getAttribute("WtyNm");
                if (WtyNmO != null) {
                    wtyDesc = WtyNmO.toString();
                }
            }
        }
        return wtyDesc;
        //return (String) getAttributeInternal(WTYIDDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WtyIdDescTrans.
     * @param value value to set the  WtyIdDescTrans
     */
    public void setWtyIdDescTrans(String value) {
        setAttributeInternal(WTYIDDESCTRANS, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for AMC_FLG using the alias name AmcFlg.
     * @return the AMC_FLG
     */
    public String getAmcFlg() {
        return (String) getAttributeInternal(AMCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for AMC_FLG using the alias name AmcFlg.
     * @param value value to set the AMC_FLG
     */
    public void setAmcFlg(String value) {
        setAttributeInternal(AMCFLG, value);
    }

    /**
     * Gets the attribute value for EO_PART_NO using the alias name EoPartNo.
     * @return the EO_PART_NO
     */
    public String getEoPartNo() {
        return (String) getAttributeInternal(EOPARTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_PART_NO using the alias name EoPartNo.
     * @param value value to set the EO_PART_NO
     */
    public void setEoPartNo(String value) {
        setAttributeInternal(EOPARTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AllowServiceItemTrans.
     * @return the AllowServiceItemTrans
     */
    public String getAllowServiceItemTrans() {
        //return (String) getAttributeInternal(ALLOWSERVICEITEMTRANS);
        if (getOrdrTypTrans().equals(309) || getOrdrTypTrans().equals(310)) {
            return "N";
        } else if (getOrdrTypTrans().equals(892) || getOrdrTypTrans().equals(897)) {
            return "Y";
        } else {
            return null;
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AllowServiceItemTrans.
     * @param value value to set the  AllowServiceItemTrans
     */
    public void setAllowServiceItemTrans(String value) {
        setAttributeInternal(ALLOWSERVICEITEMTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TaxDescriptionTrans.
     * @return the TaxDescriptionTrans
     */
    public String getTaxDescriptionTrans() {
        // System.out.println("Tax desc : "+getAttributeInternal(TAXDESCRIPTIONTRANS));
        if (getAttributeInternal(TAXDESCRIPTIONTRANS) == null && getTransTaxRuleId() != -1) {
            //  System.out.println(getTransTaxRuleId()+ " === Tax rule ID for displaying Tax description =====");
            String taxDesc = EbizParamsAPPUtils.getTaxDescFrmTaxId(getAm(), getTransTaxRuleId());
            setTaxDescriptionTrans(taxDesc);
        }
        return (String) getAttributeInternal(TAXDESCRIPTIONTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxDescriptionTrans.
     * @param value value to set the  TaxDescriptionTrans
     */
    public void setTaxDescriptionTrans(String value) {

        setAttributeInternal(TAXDESCRIPTIONTRANS, value);
    }


    /**
     * Gets the attribute value for ITM_BASIS using the alias name ItmBasis.
     * @return the ITM_BASIS
     */
    public Integer getItmBasis() {
        return (Integer) getAttributeInternal(ITMBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_BASIS using the alias name ItmBasis.
     * @param value value to set the ITM_BASIS
     */
    public void setItmBasis(Integer value) {

        setAttributeInternal(ITMBASIS, value);
        getLovItmId1().executeQuery();
        //setItmId(" ");
        //setItmDiscVal(StaticValue.NUMBER_ZERO);
        // setItmNmTrans(null);
        //setItmQty(StaticValue.NUMBER_ZERO);
        //setenablePriceFieldTrans(null);
        // itmNm = null;
        // setItemAttrTrans(null);
        // setTransItmPickOrder(null);
        // setWtyId(null);
        // wtyDesc = null;
        // c = null;
    }

    /**
     * Gets the attribute value for the calculated attribute TotalAmtWithOtrCharSP.
     * @return the TotalAmtWithOtrCharSP
     */
    public Number getTotalAmtWithOtrCharSP() {
        // if (getAttributeInternal(TOTALAMTWITHOTRCHARSP) == null) {

        Number tmpAmt = getAm().calItmWiseOtherCharge(this);
        tmpAmt = tmpAmt.add(getItmAmtGsSp() == null ? StaticValue.NUMBER_ZERO : getItmAmtGsSp());
        return ADFBeanUtils.roundOff(tmpAmt);
        
        //    setTotalAmtWithOtrCharSP(tmpAmt);
        // }
        //  return (Number) getAttributeInternal(TOTALAMTWITHOTRCHARSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalAmtWithOtrCharSP.
     * @param value value to set the  TotalAmtWithOtrCharSP
     */
    public void setTotalAmtWithOtrCharSP(Number value) {
        setAttributeInternal(TOTALAMTWITHOTRCHARSP, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsSo.
     */
    public Row getSlsSo() {
        return (Row) getAttributeInternal(SLSSO);
    }

    /**
     * Sets the master-detail link SlsSo between this object and <code>value</code>.
     */
    public void setSlsSo(Row value) {
        setAttributeInternal(SLSSO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoTr.
     */
    public RowIterator getSlsSoTr() {
        return (RowIterator) getAttributeInternal(SLSSOTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmSch.
     */
    public RowIterator getSlsSoItmSch() {
        return (RowIterator) getAttributeInternal(SLSSOITMSCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummLot.
     */
    public RowIterator getViewMmStkSummLot() {
        return (RowIterator) getAttributeInternal(VIEWMMSTKSUMMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummBin.
     */
    public RowIterator getViewMmStkSummBin() {
        return (RowIterator) getAttributeInternal(VIEWMMSTKSUMMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummSr.
     */
    public RowIterator getViewMmStkSummSr() {
        return (RowIterator) getAttributeInternal(VIEWMMSTKSUMMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmBin.
     */
    public RowIterator getSlsSoItmBin() {
        return (RowIterator) getAttributeInternal(SLSSOITMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmLot.
     */
    public RowIterator getSlsSoItmLot() {
        return (RowIterator) getAttributeInternal(SLSSOITMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmSr.
     */
    public RowIterator getSlsSoItmSr() {
        return (RowIterator) getAttributeInternal(SLSSOITMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewDiscSeqVO.
     */
    public RowIterator getViewDiscSeqVO() {
        return (RowIterator) getAttributeInternal(VIEWDISCSEQVO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoDiscVO.
     */
    public RowIterator getSlsSoDiscVO() {
        return (RowIterator) getAttributeInternal(SLSSODISCVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmId1.
     */
    public RowSet getLovItmId1() {
        return (RowSet) getAttributeInternal(LOVITMID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTyp1.
     */
    public RowSet getLovDiscTyp1() {
        return (RowSet) getAttributeInternal(LOVDISCTYP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUom1.
     */
    public RowSet getLovItmUom1() {
        return (RowSet) getAttributeInternal(LOVITMUOM1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchmIdVO1.
     */
    public RowSet getLovSchmIdVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchemeNameVo1.
     */
    public RowSet getLovSchemeNameVo1() {
        return (RowSet) getAttributeInternal(LOVSCHEMENAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWarrantyVO1.
     */
    public RowSet getLovWarrantyVO1() {
        return (RowSet) getAttributeInternal(LOVWARRANTYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWtyNmFrmWtyIdVO1.
     */
    public RowSet getLovWtyNmFrmWtyIdVO1() {
        return (RowSet) getAttributeInternal(LOVWTYNMFRMWTYIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmBasisTypVO.
     */
    public RowSet getLovItmBasisTypVO() {
        return (RowSet) getAttributeInternal(LOVITMBASISTYPVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public String resolvEl(String data) {
        return ADFModelUtils.resolvEl(data).toString();
    }

    // To set the scheme ID to null in case of removing scheme... commented on 20-june-15 for scheme issue
    public void setCurrentSchId() {
        setAttributeInternal(SCHID, null);
    }
}
