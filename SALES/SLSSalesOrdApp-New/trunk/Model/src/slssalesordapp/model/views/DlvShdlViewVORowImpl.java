package slssalesordapp.model.views;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.service.salesOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jan 07 17:31:56 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DlvShdlViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldId {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocId {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemId {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getItemId();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemUom {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getItemUom();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrdQty {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getOrdQty();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BalanceQty {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getBalanceQty();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmUomBs {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UomConvFctr {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SchmFlg {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getSchmFlg();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SchdlQuantTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getSchdlQuantTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setSchdlQuantTrans((Number) value);
            }
        }
        ,
        SelectItmChekBoxTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getSelectItmChekBoxTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setSelectItmChekBoxTrans((String) value);
            }
        }
        ,
        availableStockTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getavailableStockTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        whIdTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getwhIdTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setwhIdTrans((String) value);
            }
        }
        ,
        ItmDescTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getItmDescTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setItmDescTrans((String) value);
            }
        }
        ,
        ItemDescTrans {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getItemDescTrans();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setItemDescTrans((String) value);
            }
        }
        ,
        SlsSo {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getSlsSo();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdVO1 {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getLovItmIdVO1();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmUom1 {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getLovItmUom1();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmNmVo1 {
            public Object get(DlvShdlViewVORowImpl obj) {
                return obj.getLovItmNmVo1();
            }

            public void put(DlvShdlViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DlvShdlViewVORowImpl object);

        public abstract void put(DlvShdlViewVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int ITEMUOM = AttributesEnum.ItemUom.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int BALANCEQTY = AttributesEnum.BalanceQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int SCHMFLG = AttributesEnum.SchmFlg.index();
    public static final int SCHDLQUANTTRANS = AttributesEnum.SchdlQuantTrans.index();
    public static final int SELECTITMCHEKBOXTRANS = AttributesEnum.SelectItmChekBoxTrans.index();
    public static final int AVAILABLESTOCKTRANS = AttributesEnum.availableStockTrans.index();
    public static final int WHIDTRANS = AttributesEnum.whIdTrans.index();
    public static final int ITMDESCTRANS = AttributesEnum.ItmDescTrans.index();
    public static final int ITEMDESCTRANS = AttributesEnum.ItemDescTrans.index();
    public static final int SLSSO = AttributesEnum.SlsSo.index();
    public static final int LOVITMIDVO1 = AttributesEnum.LovItmIdVO1.index();
    public static final int LOVITMUOM1 = AttributesEnum.LovItmUom1.index();
    public static final int LOVITMNMVO1 = AttributesEnum.LovItmNmVo1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DlvShdlViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute ItemId.
     * @return the ItemId
     */
    public String getItemId() {
        return (String) getAttributeInternal(ITEMID);
    }


    /**
     * Gets the attribute value for the calculated attribute ItemUom.
     * @return the ItemUom
     */
    public String getItemUom() {
        return (String) getAttributeInternal(ITEMUOM);
    }


    /**
     * Gets the attribute value for the calculated attribute OrdQty.
     * @return the OrdQty
     */
    public Number getOrdQty() {
        return (Number) getAttributeInternal(ORDQTY);
    }


    /**
     * Gets the attribute value for the calculated attribute BalanceQty.
     * @return the BalanceQty
     */
    public Number getBalanceQty() {
        return (Number) getAttributeInternal(BALANCEQTY);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }


    /**
     * Gets the attribute value for the calculated attribute UomConvFctr.
     * @return the UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }


    /**
     * Gets the attribute value for the calculated attribute SchmFlg.
     * @return the SchmFlg
     */
    public String getSchmFlg() {
        return (String) getAttributeInternal(SCHMFLG);
    }

    /**
     * Gets the attribute value for the calculated attribute SchdlQuantTrans.
     * @return the SchdlQuantTrans
     */
    public Number getSchdlQuantTrans() {
        return (Number) getAttributeInternal(SCHDLQUANTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchdlQuantTrans.
     * @param value value to set the  SchdlQuantTrans
     */
    public void setSchdlQuantTrans(Number value) {
        setAttributeInternal(SCHDLQUANTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SelectItmChekBoxTrans.
     * @return the SelectItmChekBoxTrans
     */
    public String getSelectItmChekBoxTrans() {
        return (String) getAttributeInternal(SELECTITMCHEKBOXTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SelectItmChekBoxTrans.
     * @param value value to set the  SelectItmChekBoxTrans
     */
    public void setSelectItmChekBoxTrans(String value) {
        setAttributeInternal(SELECTITMCHEKBOXTRANS, value);
        avail = null;
    }

    /**
     * Gets the attribute value for the calculated attribute availableStockTrans.
     * @return the availableStockTrans
     */
    private Number avail = null;
    public Number getavailableStockTrans() {
        if (getwhIdTrans() != null && avail == null) {
            Object o = ADFModelUtils.callFunction((salesOrderAMImpl) getApplicationModule(),
                                       new StringBuilder("SLS.fn_mm_get_avail_stk(?,?,?,?,?,?,?)"), new Object[] {
                                       getCldId(), getSlocId(), getOrgId(), getItemId(), getwhIdTrans(),
                                       StaticValue.getCurrDtWidTimestamp(),getUomConvFctr()
            }, Types.NUMERIC);
            try {
                avail = new Number(o);
            } catch (SQLException e) {
            }
            System.out.println("Returned : "+o);
        }
               
        return avail;
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // System.out.println(bindVars[z] + "z");
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            /* FacesMessage msg=new FacesMessage(e.getMessage());
            msg.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, msg); */

            throw new JboException(e.getMessage());
            // throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                   e.printStackTrace();
                }
            }
        }
    }


    /**
     * Gets the attribute value for the calculated attribute whIdTrans.
     * @return the whIdTrans
     */
    public String getwhIdTrans(){
        return (String) getAttributeInternal(WHIDTRANS);
        //return (String)this.getSlsSo().getAttribute("WhIdDlvTrans");
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute whIdTrans.
     * @param value value to set the  whIdTrans
     */
    public void setwhIdTrans(String value) {
        setAttributeInternal(WHIDTRANS, value);
        avail = null;
        //setavailableStockTrans(null);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDescTrans.
     * @return the ItmDescTrans
     */
    public String getItmDescTrans() {
        System.out.println("Item : "+getItemId()+" Item Desc : "+getAttributeInternal(ITMDESCTRANS) == null);
        if(getAttributeInternal(ITMDESCTRANS) == null && getItemId() != null){
            
            String descFrmItmId =
                EbizParams.getItemDescFrmItmId((salesOrderAMImpl) this.getApplicationModule(), getItemId());
            setItmDescTrans(descFrmItmId);
        }
        return (String) getAttributeInternal(ITMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDescTrans.
     * @param value value to set the  ItmDescTrans
     */
    public void setItmDescTrans(String value) {
        setAttributeInternal(ITMDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDescTrans.
     * @return the ItemDescTrans
     */
    public String getItemDescTrans() {
        if(getItemId() != null && getAttributeInternal(ITEMDESCTRANS) == null){
            String descFrmItmId =
                EbizParams.getItemDescFrmItmId((salesOrderAMImpl) this.getApplicationModule(), getItemId());
            setItemDescTrans(descFrmItmId);
        }
        return (String) getAttributeInternal(ITEMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDescTrans.
     * @param value value to set the  ItemDescTrans
     */
    public void setItemDescTrans(String value) {
        setAttributeInternal(ITEMDESCTRANS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsSo.
     */
    public Row getSlsSo() {
        return (Row)getAttributeInternal(SLSSO);
    }

    /**
     * Sets the master-detail link SlsSo between this object and <code>value</code>.
     */
    public void setSlsSo(Row value) {
        setAttributeInternal(SLSSO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO1.
     */
    public RowSet getLovItmIdVO1() {
        return (RowSet)getAttributeInternal(LOVITMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUom1.
     */
    public RowSet getLovItmUom1() {
        return (RowSet)getAttributeInternal(LOVITMUOM1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmNmVo1.
     */
    public RowSet getLovItmNmVo1() {
        return (RowSet)getAttributeInternal(LOVITMNMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
