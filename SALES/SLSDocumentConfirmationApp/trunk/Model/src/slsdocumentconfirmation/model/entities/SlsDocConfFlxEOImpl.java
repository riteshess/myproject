package slsdocumentconfirmation.model.entities;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import oracle.jbo.domain.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue May 12 10:42:58 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsDocConfFlxEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        DocId,
        FieldId,
        FieldVal,
        DataType,
        DataLen,
        Reqd,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        DocIdSrc;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FIELDID = AttributesEnum.FieldId.index();
    public static final int FIELDVAL = AttributesEnum.FieldVal.index();
    public static final int DATATYPE = AttributesEnum.DataType.index();
    public static final int DATALEN = AttributesEnum.DataLen.index();
    public static final int REQD = AttributesEnum.Reqd.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsDocConfFlxEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slsdocumentconfirmation.model.entities.SlsDocConfFlxEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FieldId, using the alias name FieldId.
     * @return the value of FieldId
     */
    public String getFieldId() {
        return (String) getAttributeInternal(FIELDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FieldId.
     * @param value value to set the FieldId
     */
    public void setFieldId(String value) {
        setAttributeInternal(FIELDID, value);
    }

    /**
     * Gets the attribute value for FieldVal, using the alias name FieldVal.
     * @return the value of FieldVal
     */
    public String getFieldVal() {
        return (String) getAttributeInternal(FIELDVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for FieldVal.
     * @param value value to set the FieldVal
     */
    public void setFieldVal(String value) {
        setAttributeInternal(FIELDVAL, value);
    }

    /**
     * Gets the attribute value for DataType, using the alias name DataType.
     * @return the value of DataType
     */
    public Integer getDataType() {
        return (Integer) getAttributeInternal(DATATYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataType.
     * @param value value to set the DataType
     */
    public void setDataType(Integer value) {
        setAttributeInternal(DATATYPE, value);
    }

    /**
     * Gets the attribute value for DataLen, using the alias name DataLen.
     * @return the value of DataLen
     */
    public Integer getDataLen() {
        return (Integer) getAttributeInternal(DATALEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for DataLen.
     * @param value value to set the DataLen
     */
    public void setDataLen(Integer value) {
        setAttributeInternal(DATALEN, value);
    }

    /**
     * Gets the attribute value for Reqd, using the alias name Reqd.
     * @return the value of Reqd
     */
    public String getReqd() {
        return (String) getAttributeInternal(REQD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Reqd.
     * @param value value to set the Reqd
     */
    public void setReqd(String value) {
        setAttributeInternal(REQD, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param fieldId key constituent
     * @param docIdSrc key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, String docId,
                                       String fieldId, String docIdSrc) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, docId, fieldId, docIdSrc });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(StaticValue.getCurrDtWidTimestamp());
        System.out.println("getKey() :::: "+getKey());
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        /*  super.lock(); */
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE) {
            
            setUsrIdMod(EbizParams.GLBL_APP_USR());
            setUsrIdModDt(StaticValue.getCurrDtWidTimestamp());
        }
        super.doDML(operation, e);
    }
}

