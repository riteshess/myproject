package slssalesinvoiceapp.model.module.view;

import adf.utils.ebiz.EbizParams;

import adf.utils.ebiz.EbizParamsAPPUtils;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;
import java.math.RoundingMode;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesinvoiceapp.model.module.entity.SlsInvShipItmEOImpl;
import slssalesinvoiceapp.model.module.service.SlsSalesInvoiceAppAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 10 15:42:38 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvShipItmVORowImpl extends ViewRowImpl {
    public static final int ENTITY_SLSINVSHIPITMEO = 0;
    private Integer amt_digit = EbizParams.GLBL_AMT_DIGIT();

    public void remove() {

        Row r = getSlsInvTr();
        if (r != null) {
            r.remove();
        }
        super.remove();

    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        DocId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        HoOrgId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        ItmAmtBs {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((BigDecimal) value);
            }
        },
        ItmAmtSp {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((BigDecimal) value);
            }
        },
        ItmDiscTyp {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmDiscTyp();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmDiscTyp((String) value);
            }
        },
        ItmDiscVal {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmDiscVal();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmDiscVal((BigDecimal) value);
            }
        },
        ItmId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        },
        ItmRate {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmRate();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmRate((BigDecimal) value);
            }
        },
        ItmShipQty {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmShipQty();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmShipQty((BigDecimal) value);
            }
        },
        ItmUom {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        },
        OrgId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        Remarks {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        },
        SchId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSchId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSchId((String) value);
            }
        },
        ShipId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getShipId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setShipId((String) value);
            }
        },
        SlocId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        SoId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSoId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSoId((String) value);
            }
        },
        TaxRuleFlg {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        },
        TlrncQtyType {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setTlrncQtyType((String) value);
            }
        },
        TlrncQtyVal {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setTlrncQtyVal((BigDecimal) value);
            }
        },
        UsrIdCreate {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        SuppliItmRate {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSuppliItmRate();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSuppliItmRate((BigDecimal) value);
            }
        },
        TempRateTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getTempRateTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setTempRateTrans((BigDecimal) value);
            }
        },
        OldItmRate {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getOldItmRate();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setOldItmRate((BigDecimal) value);
            }
        },
        ItmAmtGsBs {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmAmtGsBs();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmAmtGsBs((BigDecimal) value);
            }
        },
        ItmAmtGsSp {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmAmtGsSp();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmAmtGsSp((BigDecimal) value);
            }
        },
        taxAmtTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.gettaxAmtTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.settaxAmtTrans((BigDecimal) value);
            }
        },
        taxRuleIdTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.gettaxRuleIdTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.settaxRuleIdTrans((Integer) value);
            }
        },
        ItmDescTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getItmDescTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setItmDescTrans((String) value);
            }
        },
        WtyId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getWtyId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setWtyId((String) value);
            }
        },
        SchmFlg {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSchmFlg();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSchmFlg((String) value);
            }
        },
        AsblAmtBs {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getAsblAmtBs();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAsblAmtBs((BigDecimal) value);
            }
        },
        AsblAmtSp {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getAsblAmtSp();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAsblAmtSp((BigDecimal) value);
            }
        },
        WtyNmTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getWtyNmTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setWtyNmTrans((String) value);
            }
        },
        OldItmShipQty {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getOldItmShipQty();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setOldItmShipQty((BigDecimal) value);
            }
        },
        CcId {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getCcId();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setCcId((String) value);
            }
        },
        EoPartNo {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getEoPartNo();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setEoPartNo((String) value);
            }
        },
        TaxRuleDescTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getTaxRuleDescTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setTaxRuleDescTrans((String) value);
            }
        },
        SoDescTrans {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSoDescTrans();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setSoDescTrans((String) value);
            }
        },
        SlsInvTr {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSlsInvTr();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsInvDtl {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getSlsInvDtl();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LOVItemVO1 {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getLOVItemVO1();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LOVItemUomVO1 {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getLOVItemUomVO1();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LOVDiscTypeVO1 {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getLOVDiscTypeVO1();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmNmFrmItmDescVO1 {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getLovItmNmFrmItmDescVO1();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovWtyVO1 {
            public Object get(SlsInvShipItmVORowImpl obj) {
                return obj.getLovWtyVO1();
            }

            public void put(SlsInvShipItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvShipItmVORowImpl object);

        public abstract void put(SlsInvShipItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMDISCTYP = AttributesEnum.ItmDiscTyp.index();
    public static final int ITMDISCVAL = AttributesEnum.ItmDiscVal.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMRATE = AttributesEnum.ItmRate.index();
    public static final int ITMSHIPQTY = AttributesEnum.ItmShipQty.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SCHID = AttributesEnum.SchId.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SUPPLIITMRATE = AttributesEnum.SuppliItmRate.index();
    public static final int TEMPRATETRANS = AttributesEnum.TempRateTrans.index();
    public static final int OLDITMRATE = AttributesEnum.OldItmRate.index();
    public static final int ITMAMTGSBS = AttributesEnum.ItmAmtGsBs.index();
    public static final int ITMAMTGSSP = AttributesEnum.ItmAmtGsSp.index();
    public static final int TAXAMTTRANS = AttributesEnum.taxAmtTrans.index();
    public static final int TAXRULEIDTRANS = AttributesEnum.taxRuleIdTrans.index();
    public static final int ITMDESCTRANS = AttributesEnum.ItmDescTrans.index();
    public static final int WTYID = AttributesEnum.WtyId.index();
    public static final int SCHMFLG = AttributesEnum.SchmFlg.index();
    public static final int ASBLAMTBS = AttributesEnum.AsblAmtBs.index();
    public static final int ASBLAMTSP = AttributesEnum.AsblAmtSp.index();
    public static final int WTYNMTRANS = AttributesEnum.WtyNmTrans.index();
    public static final int OLDITMSHIPQTY = AttributesEnum.OldItmShipQty.index();
    public static final int CCID = AttributesEnum.CcId.index();
    public static final int EOPARTNO = AttributesEnum.EoPartNo.index();
    public static final int TAXRULEDESCTRANS = AttributesEnum.TaxRuleDescTrans.index();
    public static final int SODESCTRANS = AttributesEnum.SoDescTrans.index();
    public static final int SLSINVTR = AttributesEnum.SlsInvTr.index();
    public static final int SLSINVDTL = AttributesEnum.SlsInvDtl.index();
    public static final int LOVITEMVO1 = AttributesEnum.LOVItemVO1.index();
    public static final int LOVITEMUOMVO1 = AttributesEnum.LOVItemUomVO1.index();
    public static final int LOVDISCTYPEVO1 = AttributesEnum.LOVDiscTypeVO1.index();
    public static final int LOVITMNMFRMITMDESCVO1 = AttributesEnum.LovItmNmFrmItmDescVO1.index();
    public static final int LOVWTYVO1 = AttributesEnum.LovWtyVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvShipItmVORowImpl() {
    }

    /**
     * Gets SlsInvShipItmEO entity object.
     * @return the SlsInvShipItmEO
     */
    public SlsInvShipItmEOImpl getSlsInvShipItmEO() {
        return (SlsInvShipItmEOImpl) getEntity(ENTITY_SLSINVSHIPITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public BigDecimal getItmAmtBs() {
        if (getAttributeInternal(ITMAMTBS) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(BigDecimal value) {
        value = value.setScale(amt_digit, RoundingMode.HALF_UP);
        setAttributeInternal(ITMAMTBS, value);
    }

    private BigDecimal getDiscAmt() {
        BigDecimal b = new BigDecimal(0);
        if ("A".equals(getItmDiscTyp())) {
            b = this.getItmDiscVal();
        } else if ("P".equals(getItmDiscTyp())) {
            BigDecimal total = new BigDecimal(0);
            total = this.getItmRate().multiply(this.getItmShipQty());
            b = getItmDiscVal().multiply(total).divide(new BigDecimal(100));
        }
        //System.out.println("Disc Amount : "+b);
        return b;
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public BigDecimal getItmAmtSp() {
        //if ("N".equals(getSchmFlg())) {
        if (true) {
            BigDecimal value = new BigDecimal(0);
            value = (this.getItmRate().multiply(this.getItmShipQty())).subtract(getDiscAmt());
            value = value.setScale(amt_digit, RoundingMode.HALF_UP);
            // To avoid setter call on every get request
            BigDecimal existingAmt =
                (getAttributeInternal(ITMAMTGSSP) == null ? new BigDecimal(0) :
                 (BigDecimal) getAttributeInternal(ITMAMTGSSP));
            if (value.compareTo(existingAmt) != 0) {
                this.setItmAmtGsSp(value);
                System.out.println("___Item Amout gs updated to  : " + value);
            }
            //System.out.println("Itm Amt Gs : " + getItmAmtGsSp());
            Object stt = this.getSlsInvDtl().getAttribute("TransCurrRate");
            BigDecimal cc = new BigDecimal(1);
            if (stt != null) {
                cc = (BigDecimal) stt;
            }
            if (value.compareTo(existingAmt) != 0) {
                this.setItmAmtGsBs(value.multiply(cc));
            }
            StringBuffer typ = new StringBuffer("N");
            try {
                Integer rulId = (this.gettaxRuleIdTrans() == null ? -1 : this.gettaxRuleIdTrans());
                if (getTaxRuleFlg().equals("Y") || rulId != -1) {
                    Object taxType = callStoredFunction(Types.VARCHAR, "SLS.FN_SLS_CHK_TR_TYPE(?,?,?,?)", new Object[] {
                                                        getCldId(), getSlocId(), getHoOrgId(), rulId
                    });
                    typ = (taxType != null ? new StringBuffer(taxType.toString()) : new StringBuffer("N"));
                }

            } catch (Exception e) {
                //TODO: Add catch code
                e.printStackTrace();
            }
            BigDecimal tempItmAmt =
                (getAttributeInternal(ITMAMTSP) == null ? new BigDecimal(0) :
                 (BigDecimal) getAttributeInternal(ITMAMTSP));
            if ("Y".equals(typ.toString())) {
                value = value.subtract(gettaxAmtTrans());
                if (value.compareTo(tempItmAmt) != 0) {
                    setItmAmtSp(value);
                    setItmAmtBs(value.multiply(cc));
                }
            } else {
                if (value.compareTo(tempItmAmt) != 0) {
                    setItmAmtSp(value);
                    setItmAmtBs(value.multiply(cc));
                }
            }
        }
        return (BigDecimal) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(BigDecimal value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        return ADFModelUtils.callFunction((ApplicationModuleImpl) getApplicationModule(), new StringBuilder(stmt),
                                          bindVars, sqlReturnType);
    }

    /**
     * Gets the attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @return the ITM_DISC_TYP
     */
    public String getItmDiscTyp() {
        if (getAttributeInternal(ITMDISCTYP) == null) {
            return "A";
        }
        return (String) getAttributeInternal(ITMDISCTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @param value value to set the ITM_DISC_TYP
     */
    public void setItmDiscTyp(String value) {
        setAttributeInternal(ITMDISCTYP, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @return the ITM_DISC_VAL
     */
    public BigDecimal getItmDiscVal() {
        if (getAttributeInternal(ITMDISCVAL) == null) {
            setItmDiscVal(new BigDecimal(0));
        }
        return (BigDecimal) getAttributeInternal(ITMDISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @param value value to set the ITM_DISC_VAL
     */
    public void setItmDiscVal(BigDecimal value) {
        setAttributeInternal(ITMDISCVAL, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_RATE using the alias name ItmRate.
     * @return the ITM_RATE
     */
    public BigDecimal getItmRate() {
        if (getAttributeInternal(ITMRATE) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(ITMRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RATE using the alias name ItmRate.
     * @param value value to set the ITM_RATE
     */
    public void setItmRate(BigDecimal value) {
        //setAttributeInternal(ITMRATE, value);
        if (value != null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) this.getApplicationModule();
            Row currentRow = am.getSlsInv().getCurrentRow();
            Integer typ = currentRow.getAttribute("InvType") != null ? (Integer) currentRow.getAttribute("InvType") : 0;
            if (typ.equals(795)) {
                BigDecimal newRate = value;
                newRate.setScale(amt_digit, RoundingMode.HALF_UP);
                setAttributeInternal(ITMRATE, newRate);
                BigDecimal amt = newRate.multiply(this.getItmShipQty());
                amt = amt.subtract(getDiscAmt());
                amt = amt.setScale(amt_digit, RoundingMode.HALF_UP);
                this.setItmAmtSp(amt);
                this.setAsblAmtSp(amt);
                this.setAsblAmtBs(amt);
                BigDecimal currConv = new BigDecimal(1);
                if (currentRow != null) {
                    currConv = (BigDecimal) currentRow.getAttribute("CurrRate");
                }
                this.setItmAmtBs((amt.multiply(currConv)).setScale(amt_digit, RoundingMode.HALF_UP));
            }
        }
        setAttributeInternal(ITMRATE, value);
    }

    /**
     * Gets the attribute value for ITM_SHIP_QTY using the alias name ItmShipQty.
     * @return the ITM_SHIP_QTY
     */
    public BigDecimal getItmShipQty() {
        if (getAttributeInternal(ITMSHIPQTY) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(ITMSHIPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_SHIP_QTY using the alias name ItmShipQty.
     * @param value value to set the ITM_SHIP_QTY
     */
    public void setItmShipQty(BigDecimal value) {
        if (value != null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) this.getApplicationModule();
            Row currentRow = am.getSlsInv().getCurrentRow();
            Integer typ = currentRow.getAttribute("InvType") != null ? (Integer) currentRow.getAttribute("InvType") : 0;
            if (typ.equals(480) || typ.equals(795)) {
                //BigDecimal newRate = value.compareTo(this.getOldItmRate()) == 1 ? value.subtract(this.getOldItmRate()) : new BigDecimal(0);
                //newRate = newRate.setScale(amt_digit, RoundingMode.HALF_UP);
                //this.setItmRate(newRate);

                value = value.setScale(amt_digit, RoundingMode.HALF_UP);
                BigDecimal amt = getItmRate().multiply(value);
                amt = amt.subtract(getDiscAmt());
                amt = amt.setScale(amt_digit, RoundingMode.HALF_UP);

                this.setItmAmtSp(amt);
                this.setAsblAmtSp(amt);
                this.setAsblAmtBs(amt);
                System.out.println("Setting new Amount to : " + amt);
                BigDecimal currConv = new BigDecimal(1);
                if (currentRow != null) {
                    currConv = (BigDecimal) currentRow.getAttribute("CurrRate");
                }
                BigDecimal s = (amt.multiply(currConv)).setScale(amt_digit, RoundingMode.HALF_UP);
                this.setItmAmtBs(s);
                this.setItmAmtGsBs(s);

            }
        }
        setAttributeInternal(ITMSHIPQTY, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SCH_ID using the alias name SchId.
     * @return the SCH_ID
     */
    public String getSchId() {
        return (String) getAttributeInternal(SCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCH_ID using the alias name SchId.
     * @param value value to set the SCH_ID
     */
    public void setSchId(String value) {
        setAttributeInternal(SCHID, value);
    }

    /**
     * Gets the attribute value for SHIP_ID using the alias name ShipId.
     * @return the SHIP_ID
     */
    public String getShipId() {
        return (String) getAttributeInternal(SHIPID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_ID using the alias name ShipId.
     * @param value value to set the SHIP_ID
     */
    public void setShipId(String value) {
        setAttributeInternal(SHIPID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SO_ID using the alias name SoId.
     * @return the SO_ID
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_ID using the alias name SoId.
     * @param value value to set the SO_ID
     */
    public void setSoId(String value) {
        setAttributeInternal(SOID, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        /* System.out.println("Tax rule Flag : "+getAttributeInternal(TAXRULEFLG));
        if(getAttributeInternal(TAXRULEFLG) == null){
            return "false";
        }else{
            Object attributeInternal = getAttributeInternal(TAXRULEFLG);
            if("Y".equals(attributeInternal.toString())){
                return "true";
            }else{
                return "false";
            }
        } */
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        /* if(value != null){
            if (value.equals("true") || value.equals("Y")) {
                setAttributeInternal(TAXRULEFLG, "Y");
            } else {
                setAttributeInternal(TAXRULEFLG, "N");
            }
        }else{
            setAttributeInternal(TAXRULEFLG, "N");
        } */
        setAttributeInternal(TAXRULEFLG, value);
        System.out.println("Setting tax rule flag to : " + value);

    }

    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String) getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public BigDecimal getTlrncQtyVal() {
        return (BigDecimal) getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(BigDecimal value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for SUPPLI_ITM_RATE using the alias name SuppliItmRate.
     * @return the SUPPLI_ITM_RATE
     */
    public BigDecimal getSuppliItmRate() {
        if (getAttributeInternal(SUPPLIITMRATE) == null) {
            return new BigDecimal(0);
        } else {
            return (BigDecimal) getAttributeInternal(SUPPLIITMRATE);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for SUPPLI_ITM_RATE using the alias name SuppliItmRate.
     * @param value value to set the SUPPLI_ITM_RATE
     */
    public void setSuppliItmRate(BigDecimal value) {
        if (value != null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) this.getApplicationModule();
            Row currentRow = am.getSlsInv().getCurrentRow();
            Integer typ = currentRow.getAttribute("InvType") != null ? (Integer) currentRow.getAttribute("InvType") : 0;
            String oprType =
                currentRow.getAttribute("SuppliOperType") != null ? (String) currentRow.getAttribute("SuppliOperType") :
                null;
            System.out.println(oprType + " The operation type to calculate");
            if (typ.equals(480)) {
                BigDecimal newRate = new BigDecimal(0);
                if (oprType.equalsIgnoreCase("A")) {
                    newRate = value.subtract(this.getOldItmRate());
                } else if (oprType.equalsIgnoreCase("S")) {
                    newRate = this.getOldItmRate().subtract(value);
                }

                //                if (oprType.equalsIgnoreCase("A")) {
                //                    newRate =
                //                        value.compareTo(this.getOldItmRate()) == 1 ? value.subtract(this.getOldItmRate()) :
                //                        new BigDecimal(0);
                //                    System.out.println(newRate + " =========== For the Addition Case");
                //                } else {
                //                    newRate =
                //                        value.compareTo(this.getOldItmRate()) == 1 ? this.getOldItmRate().subtract(value) :
                //                        new BigDecimal(0);
                //                    System.out.println(newRate + " =========== For the Subtraction Case");
                //                }
                System.out.println(newRate + " ::::::::::: New Rate ");
                newRate = newRate.setScale(amt_digit, RoundingMode.HALF_UP);
                this.setItmRate(newRate);
                BigDecimal amt = newRate.multiply(this.getItmShipQty());
                amt = amt.subtract(getDiscAmt());
                amt = amt.setScale(amt_digit, RoundingMode.HALF_UP);
                this.setItmAmtSp(amt);
                this.setAsblAmtSp(amt);
                this.setAsblAmtBs(amt);

                BigDecimal currConv = new BigDecimal(1);
                if (currentRow != null) {
                    currConv = (BigDecimal) currentRow.getAttribute("CurrRate");
                }
                this.setItmAmtBs((amt.multiply(currConv)).setScale(amt_digit, RoundingMode.HALF_UP));
            }
        }
        setAttributeInternal(SUPPLIITMRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TempRateTrans.
     * @return the TempRateTrans
     */
    public BigDecimal getTempRateTrans() {
        return (BigDecimal) getAttributeInternal(TEMPRATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TempRateTrans.
     * @param value value to set the  TempRateTrans
     */
    public void setTempRateTrans(BigDecimal value) {


        setAttributeInternal(TEMPRATETRANS, value);
    }

    /**
     * Gets the attribute value for OLD_ITM_RATE using the alias name OldItmRate.
     * @return the OLD_ITM_RATE
     */
    public BigDecimal getOldItmRate() {
        if (getAttributeInternal(OLDITMRATE) == null) {
            return new BigDecimal(0);
        } else {
            return (BigDecimal) getAttributeInternal(OLDITMRATE);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for OLD_ITM_RATE using the alias name OldItmRate.
     * @param value value to set the OLD_ITM_RATE
     */
    public void setOldItmRate(BigDecimal value) {
        setAttributeInternal(OLDITMRATE, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @return the ITM_AMT_GS_BS
     */
    public BigDecimal getItmAmtGsBs() {
        if (getAttributeInternal(ITMAMTGSBS) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(ITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @param value value to set the ITM_AMT_GS_BS
     */
    public void setItmAmtGsBs(BigDecimal value) {
        value = value.setScale(amt_digit, RoundingMode.HALF_UP);
        setAttributeInternal(ITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @return the ITM_AMT_GS_SP
     */
    public BigDecimal getItmAmtGsSp() {
        if (getAttributeInternal(ITMAMTGSSP) == null) {
            return new BigDecimal(0);
        }
        return (BigDecimal) getAttributeInternal(ITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @param value value to set the ITM_AMT_GS_SP
     */
    public void setItmAmtGsSp(BigDecimal value) {
        value = value.setScale(amt_digit, RoundingMode.HALF_UP);
        setAttributeInternal(ITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxAmtTrans.
     * @return the taxAmtTrans
     */
    public BigDecimal gettaxAmtTrans() {
        BigDecimal tx = new BigDecimal(0);
        Row invTr = this.getSlsInvTr();
        if (invTr != null) {
            tx =
                (invTr.getAttribute("TaxAmtSp") == null ? new BigDecimal(0) :
                 (BigDecimal) invTr.getAttribute("TaxAmtSp"));
        }
        return tx;
        //return (BigDecimal) getAttributeInternal(TAXAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxAmtTrans.
     * @param value value to set the  taxAmtTrans
     */
    public void settaxAmtTrans(BigDecimal value) {
        setAttributeInternal(TAXAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxRuleIdTrans.
     * @return the taxRuleIdTrans
     */
    public Integer gettaxRuleIdTrans() {
        return (Integer) getAttributeInternal(TAXRULEIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxRuleIdTrans.
     * @param value value to set the  taxRuleIdTrans
     */
    public void settaxRuleIdTrans(Integer value) {
        setAttributeInternal(TAXRULEIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDescTrans.
     * @return the ItmDescTrans
     */
    public String getItmDescTrans() {
        if (getItmId() != null && getAttributeInternal(ITMDESCTRANS) == null) {
            RowSet descVO1 = this.getLovItmNmFrmItmDescVO1();
            descVO1.setNamedWhereClauseParam("ItmIdBind", getItmId());
            descVO1.executeQuery();
            Row[] allRowsInRange = descVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object itmDesc = allRowsInRange[0].getAttribute("ItmDesc");
                setItmDescTrans(itmDesc == null ? null : itmDesc.toString());
            }
        }
        return (String) getAttributeInternal(ITMDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDescTrans.
     * @param value value to set the  ItmDescTrans
     */
    public void setItmDescTrans(String value) {
        setAttributeInternal(ITMDESCTRANS, value);
    }

    /**
     * Gets the attribute value for WTY_ID using the alias name WtyId.
     * @return the WTY_ID
     */
    public String getWtyId() {
        return (String) getAttributeInternal(WTYID);
    }

    /**
     * Sets <code>value</code> as attribute value for WTY_ID using the alias name WtyId.
     * @param value value to set the WTY_ID
     */
    public void setWtyId(String value) {
        setAttributeInternal(WTYID, value);
    }

    /**
     * Gets the attribute value for SCHM_FLG using the alias name SchmFlg.
     * @return the SCHM_FLG
     */
    public String getSchmFlg() {
        if (getAttributeInternal(SCHMFLG) == null) {
            setSchmFlg("N");
        }
        return (String) getAttributeInternal(SCHMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_FLG using the alias name SchmFlg.
     * @param value value to set the SCHM_FLG
     */
    public void setSchmFlg(String value) {
        setAttributeInternal(SCHMFLG, value);
    }

    /**
     * Gets the attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @return the ASBL_AMT_BS
     */
    public BigDecimal getAsblAmtBs() {
        return (BigDecimal) getAttributeInternal(ASBLAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_BS using the alias name AsblAmtBs.
     * @param value value to set the ASBL_AMT_BS
     */
    public void setAsblAmtBs(BigDecimal value) {
        if (value != null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) this.getApplicationModule();
            Row currentRow = am.getSlsInv().getCurrentRow();
            BigDecimal currConv = new BigDecimal(0);
            if (currentRow != null) {
                currConv = (BigDecimal) currentRow.getAttribute("CurrRate");
                value = value.multiply(currConv);
            }
            value = value.setScale(amt_digit, RoundingMode.HALF_UP);
        }
        setAttributeInternal(ASBLAMTBS, value);
    }

    /**
     * Gets the attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @return the ASBL_AMT_SP
     */
    public BigDecimal getAsblAmtSp() {
        return (BigDecimal) getAttributeInternal(ASBLAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ASBL_AMT_SP using the alias name AsblAmtSp.
     * @param value value to set the ASBL_AMT_SP
     */
    public void setAsblAmtSp(BigDecimal value) {
        setAsblAmtBs(value);
        setAttributeInternal(ASBLAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WtyNmTrans.
     * @return the WtyNmTrans
     */
    public String getWtyNmTrans() {
        if (getAttributeInternal(WTYNMTRANS) == null && getWtyId() != null) {
            getLovWtyVO1().setNamedWhereClauseParam("WtyIdBind", getWtyId());
            getLovWtyVO1().executeQuery();
            Row[] allRowsInRange = getLovWtyVO1().getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                Object wtyNmO = allRowsInRange[0].getAttribute("WtyNm");
                if (wtyNmO != null) {
                    setWtyNmTrans(wtyNmO.toString());
                }
            }
        }
        return (String) getAttributeInternal(WTYNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WtyNmTrans.
     * @param value value to set the  WtyNmTrans
     */
    public void setWtyNmTrans(String value) {
        setAttributeInternal(WTYNMTRANS, value);
    }

    /**
     * Gets the attribute value for OLD_ITM_SHIP_QTY using the alias name OldItmShipQty.
     * @return the OLD_ITM_SHIP_QTY
     */
    public BigDecimal getOldItmShipQty() {
        return (BigDecimal) getAttributeInternal(OLDITMSHIPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OLD_ITM_SHIP_QTY using the alias name OldItmShipQty.
     * @param value value to set the OLD_ITM_SHIP_QTY
     */
    public void setOldItmShipQty(BigDecimal value) {
        setAttributeInternal(OLDITMSHIPQTY, value);
    }

    /**
     * Gets the attribute value for CC_ID using the alias name CcId.
     * @return the CC_ID
     */
    public String getCcId() {
        return (String) getAttributeInternal(CCID);
    }

    /**
     * Sets <code>value</code> as attribute value for CC_ID using the alias name CcId.
     * @param value value to set the CC_ID
     */
    public void setCcId(String value) {
        setAttributeInternal(CCID, value);
    }

    /**
     * Gets the attribute value for EO_PART_NO using the alias name EoPartNo.
     * @return the EO_PART_NO
     */
    public String getEoPartNo() {
        return (String) getAttributeInternal(EOPARTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_PART_NO using the alias name EoPartNo.
     * @param value value to set the EO_PART_NO
     */
    public void setEoPartNo(String value) {
        setAttributeInternal(EOPARTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaxRuleDescTrans.
     * @return the TaxRuleDescTrans
     */
    public String getTaxRuleDescTrans() {
        if (getAttributeInternal(TAXRULEDESCTRANS) == null && gettaxRuleIdTrans() != null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) this.getApplicationModule();
            String taxDesc = EbizParamsAPPUtils.getTaxDescFrmTaxId(am, gettaxRuleIdTrans());
            setTaxRuleDescTrans(taxDesc);
        }
        return (String) getAttributeInternal(TAXRULEDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxRuleDescTrans.
     * @param value value to set the  TaxRuleDescTrans
     */
    public void setTaxRuleDescTrans(String value) {
        setAttributeInternal(TAXRULEDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoDescTrans.
     * @return the SoDescTrans
     */
    public String getSoDescTrans() {
        if (getAttributeInternal(SODESCTRANS) == null) {
            SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl) getApplicationModule();
            ViewObjectImpl lovSoNm = am.getLovSoNmFrmIdVO1();
            lovSoNm.setNamedWhereClauseParam("CldIdBind", getCldId());
            lovSoNm.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            lovSoNm.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
            lovSoNm.setNamedWhereClauseParam("OrgIdBind", getOrgId());
            lovSoNm.setNamedWhereClauseParam("SoDocIdBind", getSoId());
            lovSoNm.executeQuery();
            Row[] allRowsInRange = lovSoNm.getAllRowsInRange();
            Object soIdNm = null;
            if (allRowsInRange.length > 0) {
                soIdNm = allRowsInRange[0].getAttribute("SoId");
            }
            if (soIdNm != null) {
                setSoDescTrans(soIdNm.toString());
            } else {
                setSoDescTrans("");
            }
        }
        return (String) getAttributeInternal(SODESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoDescTrans.
     * @param value value to set the  SoDescTrans
     */
    public void setSoDescTrans(String value) {
        setAttributeInternal(SODESCTRANS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsInvTr.
     */
    public Row getSlsInvTr() {
        return (Row) getAttributeInternal(SLSINVTR);
    }

    /**
     * Sets the master-detail link SlsInvTr between this object and <code>value</code>.
     */
    public void setSlsInvTr(Row value) {
        setAttributeInternal(SLSINVTR, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsInvDtl.
     */
    public Row getSlsInvDtl() {
        return (Row) getAttributeInternal(SLSINVDTL);
    }

    /**
     * Sets the master-detail link SlsInvDtl between this object and <code>value</code>.
     */
    public void setSlsInvDtl(Row value) {
        setAttributeInternal(SLSINVDTL, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemVO1.
     */
    public RowSet getLOVItemVO1() {
        return (RowSet) getAttributeInternal(LOVITEMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemUomVO1.
     */
    public RowSet getLOVItemUomVO1() {
        return (RowSet) getAttributeInternal(LOVITEMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDiscTypeVO1.
     */
    public RowSet getLOVDiscTypeVO1() {
        return (RowSet) getAttributeInternal(LOVDISCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmNmFrmItmDescVO1.
     */
    public RowSet getLovItmNmFrmItmDescVO1() {
        return (RowSet) getAttributeInternal(LOVITMNMFRMITMDESCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovWtyVO1.
     */
    public RowSet getLovWtyVO1() {
        return (RowSet) getAttributeInternal(LOVWTYVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    /* public Object resolvElAmt(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object digit = 2;
        if (valueExp != null) {
            digit = valueExp.getValue(elContext);
        }
        if (digit == null) {
            digit = 2;
        }

        return digit;
    } */
}
