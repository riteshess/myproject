package slssalesinvoiceapp.model.module.view;

import adf.utils.ebiz.EbizParams;

import adf.utils.ebiz.EbizParamsAPPUtils;

import java.math.BigDecimal;

import java.math.RoundingMode;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesinvoiceapp.model.module.entity.SlsInvDtlEOImpl;
import slssalesinvoiceapp.model.module.service.SlsSalesInvoiceAppAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 13 10:05:46 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvDtlVORowImpl extends ViewRowImpl {

    public static final int ENTITY_SLSINVDTLEO = 0;

    public void remove() {

        RowIterator ri = getSlsInvShipItm();
        while (ri.hasNext()) {
            Row r = ri.next();
            if (r != null) {
                r.remove();
            }
        }
        super.remove();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        ShipId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipId((String) value);
            }
        }
        ,
        ShipDt {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipDt();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipDt((Timestamp) value);
            }
        }
        ,
        SrNo {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setSrNo((Integer) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        ShipAmtBs {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipAmtBs();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipAmtBs((BigDecimal) value);
            }
        }
        ,
        ShipAmtSp {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipAmtSp();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipAmtSp((BigDecimal) value);
            }
        }
        ,
        TransCurrId {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getTransCurrId();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setTransCurrId((Integer) value);
            }
        }
        ,
        TransCurrRate {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getTransCurrRate();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setTransCurrRate((BigDecimal) value);
            }
        }
        ,
        TransItmWiseTax {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getTransItmWiseTax();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setTransItmWiseTax((String) value);
            }
        }
        ,
        ShipmntNmTrans {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipmntNmTrans();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipmntNmTrans((String) value);
            }
        }
        ,
        ShipAddsTrans {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getShipAddsTrans();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setShipAddsTrans((String) value);
            }
        }
        ,
        TotAsblAmtTrans {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getTotAsblAmtTrans();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setTotAsblAmtTrans((BigDecimal) value);
            }
        }
        ,
        SlsInvShipItm {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getSlsInvShipItm();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsInv {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getSlsInv();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVShipmentVO1 {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getLOVShipmentVO1();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCurrConv1 {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getLOVCurrConv1();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovShipmntNmVO1 {
            public Object get(SlsInvDtlVORowImpl obj) {
                return obj.getLovShipmntNmVO1();
            }

            public void put(SlsInvDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvDtlVORowImpl object);

        public abstract void put(SlsInvDtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int SHIPDT = AttributesEnum.ShipDt.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SHIPAMTBS = AttributesEnum.ShipAmtBs.index();
    public static final int SHIPAMTSP = AttributesEnum.ShipAmtSp.index();
    public static final int TRANSCURRID = AttributesEnum.TransCurrId.index();
    public static final int TRANSCURRRATE = AttributesEnum.TransCurrRate.index();
    public static final int TRANSITMWISETAX = AttributesEnum.TransItmWiseTax.index();
    public static final int SHIPMNTNMTRANS = AttributesEnum.ShipmntNmTrans.index();
    public static final int SHIPADDSTRANS = AttributesEnum.ShipAddsTrans.index();
    public static final int TOTASBLAMTTRANS = AttributesEnum.TotAsblAmtTrans.index();
    public static final int SLSINVSHIPITM = AttributesEnum.SlsInvShipItm.index();
    public static final int SLSINV = AttributesEnum.SlsInv.index();
    public static final int LOVSHIPMENTVO1 = AttributesEnum.LOVShipmentVO1.index();
    public static final int LOVCURRCONV1 = AttributesEnum.LOVCurrConv1.index();
    public static final int LOVSHIPMNTNMVO1 = AttributesEnum.LovShipmntNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvDtlVORowImpl() {
    }

    /**
     * Gets SlsInvDtlEO entity object.
     * @return the SlsInvDtlEO
     */
    public SlsInvDtlEOImpl getSlsInvDtlEO() {
        return (SlsInvDtlEOImpl) getEntity(ENTITY_SLSINVDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for SHIP_ID using the alias name ShipId.
     * @return the SHIP_ID
     */
    public String getShipId() {
        return (String) getAttributeInternal(SHIPID);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_ID using the alias name ShipId.
     * @param value value to set the SHIP_ID
     */
    public void setShipId(String value) {
        setAttributeInternal(SHIPID, value);
    }

    /**
     * Gets the attribute value for SHIP_DT using the alias name ShipDt.
     * @return the SHIP_DT
     */
    public Timestamp getShipDt() {
        return (Timestamp) getAttributeInternal(SHIPDT);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_DT using the alias name ShipDt.
     * @param value value to set the SHIP_DT
     */
    public void setShipDt(Timestamp value) {
        setAttributeInternal(SHIPDT, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for SHIP_AMT_BS using the alias name ShipAmtBs.
     * @return the SHIP_AMT_BS
     */
    public BigDecimal getShipAmtBs() {
        return (BigDecimal) getAttributeInternal(SHIPAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_AMT_BS using the alias name ShipAmtBs.
     * @param value value to set the SHIP_AMT_BS
     */
    public void setShipAmtBs(BigDecimal value) {
        if (value != null) {
            value = value.setScale(EbizParams.GLBL_AMT_DIGIT(), RoundingMode.HALF_UP);
        }
        setAttributeInternal(SHIPAMTBS, value);
    }

    /**
     * Gets the attribute value for SHIP_AMT_SP using the alias name ShipAmtSp.
     * @return the SHIP_AMT_SP
     */
    // Integer  i is used for the purpose of controlling the recalculation
    // It is set to zero when the Ok Button of the InvoiceShipItems is pressed.
    private Boolean i = true;
    public void setRecalculate(){
        i = true;
    }
    public BigDecimal getShipAmtSp() {
        if (getSlsInv() != null && i == true) {
            if (true) { 
                BigDecimal b = new BigDecimal(0);
                BigDecimal c = new BigDecimal(0);
                RowIterator invShipItm = this.getSlsInvShipItm();
                while (invShipItm.hasNext()) {
                    Row itmRow = invShipItm.next();
                    b = b.add((BigDecimal) itmRow.getAttribute("ItmAmtSp"));
                    if(itmRow.getAttribute("AsblAmtSp") != null){
                        c = c.add((BigDecimal) itmRow.getAttribute("AsblAmtSp"));
                    }
                }
                b.setScale(EbizParams.GLBL_AMT_DIGIT(), RoundingMode.HALF_UP);
                c.setScale(EbizParams.GLBL_AMT_DIGIT(), RoundingMode.HALF_UP);
                setTotAsblAmtTrans(c);
                
                // Condition so that the setter doesn't run for all the get request
                BigDecimal previousAmt =
                    (getAttributeInternal(SHIPAMTSP) == null ? new BigDecimal(0) :
                     (BigDecimal) getAttributeInternal(SHIPAMTSP));
                if (previousAmt.compareTo(b) != 0) {
                    setShipAmtSp(b);
                    BigDecimal j =
                        (getSlsInv().getAttribute("CurrRate") != null ?
                         (BigDecimal) getSlsInv().getAttribute("CurrRate") : new BigDecimal(1));

                    setShipAmtBs(b.multiply(j));
                }
            }
            System.out.println("Calculating Shipment Amt !");
            i = false;
        }
        return (BigDecimal) getAttributeInternal(SHIPAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_AMT_SP using the alias name ShipAmtSp.
     * @param value value to set the SHIP_AMT_SP
     */
    public void setShipAmtSp(BigDecimal value) {
        if (value != null) {
            value = value.setScale(EbizParams.GLBL_AMT_DIGIT(), RoundingMode.HALF_UP);
        }
        setAttributeInternal(SHIPAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransShipId.
     * @return the TransShipId
     */

    /**
     * Gets the attribute value for TRANS_CURR_ID using the alias name TransCurrId.
     * @return the TRANS_CURR_ID
     */
    public Integer getTransCurrId() {
        return (Integer) getAttributeInternal(TRANSCURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_CURR_ID using the alias name TransCurrId.
     * @param value value to set the TRANS_CURR_ID
     */
    public void setTransCurrId(Integer value) {
        setAttributeInternal(TRANSCURRID, value);
    }

    /**
     * Gets the attribute value for TRANS_CURR_RATE using the alias name TransCurrRate.
     * @return the TRANS_CURR_RATE
     */
    public BigDecimal getTransCurrRate() {
        BigDecimal rate = new BigDecimal(1);
        if (getSlsInv() != null) {
            Object a = getSlsInv().getAttribute("CurrRate");
            rate = (a == null ? new BigDecimal(1.00) : (BigDecimal) a);
        }
        return rate;
    }

    /**
     * Sets <code>value</code> as attribute value for TRANS_CURR_RATE using the alias name TransCurrRate.
     * @param value value to set the TRANS_CURR_RATE
     */
    public void setTransCurrRate(BigDecimal value) {
        setAttributeInternal(TRANSCURRRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmWiseTax.
     * @return the TransItmWiseTax
     */
    public String getTransItmWiseTax() {
        RowIterator invShipItm = this.getSlsInvShipItm();
        while (invShipItm.hasNext()) {
            Row next = invShipItm.next();
            if (next.getAttribute("TaxRuleFlg").toString().equals("Y")) {
                //System.out.println("Returned Y");
                return "Y";
            }
        }
        //System.out.println("Returned N");
        return "N";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmWiseTax.
     * @param value value to set the  TransItmWiseTax
     */
    public void setTransItmWiseTax(String value) {
        setAttributeInternal(TRANSITMWISETAX, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ShipmntNmTrans.
     * @return the ShipmntNmTrans
     */
    public String getShipmntNmTrans() {
        if (getAttributeInternal(SHIPMNTNMTRANS) == null && getShipId() != null) {
            Object invTypeO = getSlsInv().getAttribute("InvType");
            Integer invTyp = (invTypeO == null ? -1 : (Integer)invTypeO);
            // To show Sales Order No. in case of service Invoice
            if (invTyp.equals(795) || invTyp.equals(893)) {
                SlsSalesInvoiceAppAMImpl am = (SlsSalesInvoiceAppAMImpl)getApplicationModule();
                ViewObjectImpl lovSoNm = am.getLovSoNmFrmIdVO1();
                lovSoNm.setNamedWhereClauseParam("CldIdBind", getCldId());
                lovSoNm.setNamedWhereClauseParam("SlocIdBind", getSlocId());
                lovSoNm.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
                lovSoNm.setNamedWhereClauseParam("OrgIdBind", getOrgId());
                lovSoNm.setNamedWhereClauseParam("SoDocIdBind", getShipId());
                lovSoNm.executeQuery();
                Row[] allRowsInRange = lovSoNm.getAllRowsInRange();
                if(allRowsInRange.length > 0){
                    Object soIdNm = allRowsInRange[0].getAttribute("SoId");
                    Object shipAdds = allRowsInRange[0].getAttribute("ShipAdds");
                    if (soIdNm != null) {
                        setShipmntNmTrans(soIdNm.toString());
                        if (shipAdds != null) {
                            StringBuilder addDescFrmAddsId =
                                EbizParamsAPPUtils.getAddDescFrmAddsId((SlsSalesInvoiceAppAMImpl) getApplicationModule(),
                                                               shipAdds.toString());
                            setShipAddsTrans(addDescFrmAddsId == null ? null : addDescFrmAddsId.toString());
                        }
                    }
                }
            } else {
                RowSet lovShipmntNmVO1 = this.getLovShipmntNmVO1();
                lovShipmntNmVO1.setNamedWhereClauseParam("DocIdBind", getShipId());
                lovShipmntNmVO1.executeQuery();

                Row[] allRowsInRange = lovShipmntNmVO1.getAllRowsInRange();
                if (allRowsInRange.length > 0) {
                    Object obj = allRowsInRange[0].getAttribute("ShipmntId");
                    Object shipAddsO = allRowsInRange[0].getAttribute("ShipAdds");
                    setShipmntNmTrans((obj == null ? null : obj.toString()));
                    if(shipAddsO != null){
                        StringBuilder addDescFrmAddsId =
                            EbizParamsAPPUtils.getAddDescFrmAddsId((SlsSalesInvoiceAppAMImpl) getApplicationModule(),
                                                           shipAddsO.toString());
                        setShipAddsTrans(addDescFrmAddsId.toString());    
                    }       
                }
            }
        }
        return (String) getAttributeInternal(SHIPMNTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmntNmTrans.
     * @param value value to set the  ShipmntNmTrans
     */
    public void setShipmntNmTrans(String value) {
        setAttributeInternal(SHIPMNTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipAddsTrans.
     * @return the ShipAddsTrans
     */
    public String getShipAddsTrans() {
        return (String) getAttributeInternal(SHIPADDSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipAddsTrans.
     * @param value value to set the  ShipAddsTrans
     */
    public void setShipAddsTrans(String value) {
        setAttributeInternal(SHIPADDSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAsblAmt.
     * @return the TotAsblAmt
     */
    public BigDecimal getTotAsblAmtTrans() {
        return (BigDecimal) getAttributeInternal(TOTASBLAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotAsblAmtTrans.
     * @param value value to set the  TotAsblAmtTrans
     */
    public void setTotAsblAmtTrans(BigDecimal value) {
        setAttributeInternal(TOTASBLAMTTRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsInvShipItm.
     */
    public RowIterator getSlsInvShipItm() {
        return (RowIterator) getAttributeInternal(SLSINVSHIPITM);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsInv.
     */
    public Row getSlsInv() {
        return (Row) getAttributeInternal(SLSINV);
    }

    /**
     * Sets the master-detail link SlsInv between this object and <code>value</code>.
     */
    public void setSlsInv(Row value) {
        setAttributeInternal(SLSINV, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVShipmentVO1.
     */
    public RowSet getLOVShipmentVO1() {
        return (RowSet) getAttributeInternal(LOVSHIPMENTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrConv1.
     */
    public RowSet getLOVCurrConv1() {
        return (RowSet) getAttributeInternal(LOVCURRCONV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShipmntNmVO1.
     */
    public RowSet getLovShipmntNmVO1() {
        return (RowSet) getAttributeInternal(LOVSHIPMNTNMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    public Object resolvElAmt(String data) {
        ADFContext fc = ADFContext.getCurrent();
        //Application app = fc.getApplication();
        ExpressionFactory elFactory = fc.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object digit = 2;
        if (valueExp != null) {
            digit = valueExp.getValue(elContext);
        }
        if (digit == null) {
            digit = 2;
        }

        return digit;
    }
}
