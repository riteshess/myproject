package slspackmasterapp.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 10 10:29:20 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsPackPrfEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        PackId {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getPackId();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setPackId((Integer)value);
            }
        }
        ,
        PackNm {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getPackNm();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setPackNm((String)value);
            }
        }
        ,
        PackWidth {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getPackWidth();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setPackWidth((Number)value);
            }
        }
        ,
        PackLength {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getPackLength();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setPackLength((Number)value);
            }
        }
        ,
        PackHeight {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getPackHeight();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setPackHeight((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        DimenUnit {
            public Object get(SlsPackPrfEOImpl obj) {
                return obj.getDimenUnit();
            }

            public void put(SlsPackPrfEOImpl obj, Object value) {
                obj.setDimenUnit((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsPackPrfEOImpl object);

        public abstract void put(SlsPackPrfEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int PACKID = AttributesEnum.PackId.index();
    public static final int PACKNM = AttributesEnum.PackNm.index();
    public static final int PACKWIDTH = AttributesEnum.PackWidth.index();
    public static final int PACKLENGTH = AttributesEnum.PackLength.index();
    public static final int PACKHEIGHT = AttributesEnum.PackHeight.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DIMENUNIT = AttributesEnum.DimenUnit.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsPackPrfEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slspackmasterapp.model.entity.SlsPackPrfEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for PackId, using the alias name PackId.
     * @return the value of PackId
     */
    public Integer getPackId() {
        return (Integer)getAttributeInternal(PACKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackId.
     * @param value value to set the PackId
     */
    public void setPackId(Integer value) {
        setAttributeInternal(PACKID, value);
    }

    /**
     * Gets the attribute value for PackNm, using the alias name PackNm.
     * @return the value of PackNm
     */
    public String getPackNm() {
        return (String)getAttributeInternal(PACKNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackNm.
     * @param value value to set the PackNm
     */
    public void setPackNm(String value) {
        setAttributeInternal(PACKNM, value);
    }

    /**
     * Gets the attribute value for PackWidth, using the alias name PackWidth.
     * @return the value of PackWidth
     */
    public Number getPackWidth() {
        return (Number)getAttributeInternal(PACKWIDTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackWidth.
     * @param value value to set the PackWidth
     */
    public void setPackWidth(Number value) {
        setAttributeInternal(PACKWIDTH, value);
    }

    /**
     * Gets the attribute value for PackLength, using the alias name PackLength.
     * @return the value of PackLength
     */
    public Number getPackLength() {
        return (Number)getAttributeInternal(PACKLENGTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackLength.
     * @param value value to set the PackLength
     */
    public void setPackLength(Number value) {
        setAttributeInternal(PACKLENGTH, value);
    }

    /**
     * Gets the attribute value for PackHeight, using the alias name PackHeight.
     * @return the value of PackHeight
     */
    public Number getPackHeight() {
        return (Number)getAttributeInternal(PACKHEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackHeight.
     * @param value value to set the PackHeight
     */
    public void setPackHeight(Number value) {
        setAttributeInternal(PACKHEIGHT, value);
    }


    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for DimenUnit, using the alias name DimenUnit.
     * @return the value of DimenUnit
     */
    public String getDimenUnit() {
        return (String)getAttributeInternal(DIMENUNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DimenUnit.
     * @param value value to set the DimenUnit
     */
    public void setDimenUnit(String value) {
        setAttributeInternal(DIMENUNIT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param packId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, Integer packId) {
        return new Key(new Object[]{cldId, slocId, orgId, hoOrgId, packId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        StringBuffer cldId = new StringBuffer( (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")).toString());
        StringBuffer orgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        StringBuffer hoOrgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        
        this.setOrgId(orgId.toString());
        this.setSlocId(slocId);
        this.setHoOrgId(hoOrgId.toString());
        this.setCldId(cldId.toString());
        this.setUsrIdCreate(userId);
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }
    /**
     * For resolving the El
     */
    public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation == DML_UPDATE){
            this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}
