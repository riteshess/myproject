package schemepolicyapp.model.views;

import javax.faces.application.FacesMessage;
import javax.faces.validator.ValidatorException;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;

import schemepolicyapp.model.entities.AppSchmPlcEOImpl;
import schemepolicyapp.model.service.SchemePolicyAppAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 03 11:59:46 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppSchmPlcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPSCHMPLCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        SchmPlcBasis,
        SchmId,
        CatgId,
        EoId,
        ExecId,
        ValidTo,
        Actv,
        InactvResn,
        InactvDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        GrpId,
        ItmId,
        ItmUom,
        MaxAmt,
        MaxQty,
        MinAmt,
        MinQty,
        ValidFrom,
        EoNmTrans,
        ExecNmTrans,
        ItmGrpNmTrans,
        ItmNmTrans,
        SchemeNmTrans,
        CurrentDateTrans,
        ReplFlg,
        SchemeDispTrans,
        LovSchmeBasicVO1,
        LovEoCatgVO1,
        LOVCustVO1,
        LOVSlsManVO1,
        LOVItmGrpVO1,
        LOVItmVO1,
        LOVitmUOMVO1,
        LOVSchemeIdVO1,
        LOVEoIdToEoNmVO1,
        LovItmIdToItmNmVO1,
        LovExecIdToNmVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int SCHMPLCBASIS = AttributesEnum.SchmPlcBasis.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int CATGID = AttributesEnum.CatgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EXECID = AttributesEnum.ExecId.index();
    public static final int VALIDTO = AttributesEnum.ValidTo.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int MAXAMT = AttributesEnum.MaxAmt.index();
    public static final int MAXQTY = AttributesEnum.MaxQty.index();
    public static final int MINAMT = AttributesEnum.MinAmt.index();
    public static final int MINQTY = AttributesEnum.MinQty.index();
    public static final int VALIDFROM = AttributesEnum.ValidFrom.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int EXECNMTRANS = AttributesEnum.ExecNmTrans.index();
    public static final int ITMGRPNMTRANS = AttributesEnum.ItmGrpNmTrans.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int SCHEMENMTRANS = AttributesEnum.SchemeNmTrans.index();
    public static final int CURRENTDATETRANS = AttributesEnum.CurrentDateTrans.index();
    public static final int REPLFLG = AttributesEnum.ReplFlg.index();
    public static final int SCHEMEDISPTRANS = AttributesEnum.SchemeDispTrans.index();
    public static final int LOVSCHMEBASICVO1 = AttributesEnum.LovSchmeBasicVO1.index();
    public static final int LOVEOCATGVO1 = AttributesEnum.LovEoCatgVO1.index();
    public static final int LOVCUSTVO1 = AttributesEnum.LOVCustVO1.index();
    public static final int LOVSLSMANVO1 = AttributesEnum.LOVSlsManVO1.index();
    public static final int LOVITMGRPVO1 = AttributesEnum.LOVItmGrpVO1.index();
    public static final int LOVITMVO1 = AttributesEnum.LOVItmVO1.index();
    public static final int LOVITMUOMVO1 = AttributesEnum.LOVitmUOMVO1.index();
    public static final int LOVSCHEMEIDVO1 = AttributesEnum.LOVSchemeIdVO1.index();
    public static final int LOVEOIDTOEONMVO1 = AttributesEnum.LOVEoIdToEoNmVO1.index();
    public static final int LOVITMIDTOITMNMVO1 = AttributesEnum.LovItmIdToItmNmVO1.index();
    public static final int LOVEXECIDTONMVO1 = AttributesEnum.LovExecIdToNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppSchmPlcVORowImpl() {
    }

    /**
     * Gets AppSchmPlcEO entity object.
     * @return the AppSchmPlcEO
     */
    public AppSchmPlcEOImpl getAppSchmPlcEO() {
        return (AppSchmPlcEOImpl) getEntity(ENTITY_APPSCHMPLCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for SCHM_PLC_BASIS using the alias name SchmPlcBasis.
     * @return the SCHM_PLC_BASIS
     */
    public Integer getSchmPlcBasis() {
        return (Integer) getAttributeInternal(SCHMPLCBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_PLC_BASIS using the alias name SchmPlcBasis.
     * @param value value to set the SCHM_PLC_BASIS
     */
    public void setSchmPlcBasis(Integer value) {
        setAttributeInternal(SCHMPLCBASIS, value);

        if (value != null) {
            if (value.equals(718)) {
                this.setCatgId(0);
                this.setExecId(0);
                this.setExecNmTrans(null);
            } else if (value.equals(722)) {
                this.setCatgId(0);
                this.setEoId(0);
                this.setEoNmTrans(null);
            } else if (value.equals(720)) {
                this.setEoId(0);
                this.setExecId(0);
                this.setEoNmTrans(null);
                this.setExecNmTrans(null);
            }
        }

    }

    /**
     * Gets the attribute value for SCHM_ID using the alias name SchmId.
     * @return the SCHM_ID
     */
    public String getSchmId() {
        /* if (getAttributeInternal(SCHMID) != null) {
            String id = (String) getAttributeInternal(SCHMID);
            return id.substring(2, id.length());
        } */
        return (String) getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_ID using the alias name SchmId.
     * @param value value to set the SCHM_ID
     */
    public void setSchmId(String value) {
     SchemePolicyAppAMImpl am=(SchemePolicyAppAMImpl)getApplicationModule();
      Integer rows =am.checkForDuplicateData(getSchmPlcBasis(), value, getCatgId(), getEoId(), getExecId());
        if (rows > 0) {
            throw new ValidatorException(new FacesMessage(FacesMessage.SEVERITY_ERROR, "Duplicate Value exists!!", ""));
        }
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for CATG_ID using the alias name CatgId.
     * @return the CATG_ID
     */
    public Integer getCatgId() {
        return (Integer) getAttributeInternal(CATGID);
    }

    /**
     * Sets <code>value</code> as attribute value for CATG_ID using the alias name CatgId.
     * @param value value to set the CATG_ID
     */
    public void setCatgId(Integer value) {
        setAttributeInternal(CATGID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
        eoNm = null;
    }

    /**
     * Gets the attribute value for EXEC_ID using the alias name ExecId.
     * @return the EXEC_ID
     */
    public Integer getExecId() {
        return (Integer) getAttributeInternal(EXECID);
    }

    /**
     * Sets <code>value</code> as attribute value for EXEC_ID using the alias name ExecId.
     * @param value value to set the EXEC_ID
     */
    public void setExecId(Integer value) {
        setAttributeInternal(EXECID, value);
        execNm=null;
    }

    /**
     * Gets the attribute value for VALID_TO using the alias name ValidTo.
     * @return the VALID_TO
     */
    public Date getValidTo() {
        return (Date) getAttributeInternal(VALIDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_TO using the alias name ValidTo.
     * @param value value to set the VALID_TO
     */
    public void setValidTo(Date value) {
        setAttributeInternal(VALIDTO, value);
    }

    /**
     * Gets the attribute value for ACTV using the alias name Actv.
     * @return the ACTV
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV using the alias name Actv.
     * @param value value to set the ACTV
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for INACTV_RESN using the alias name InactvResn.
     * @return the INACTV_RESN
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_RESN using the alias name InactvResn.
     * @param value value to set the INACTV_RESN
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
        itmNm =null;
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for MAX_AMT using the alias name MaxAmt.
     * @return the MAX_AMT
     */
    public Number getMaxAmt() {
        return (Number) getAttributeInternal(MAXAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_AMT using the alias name MaxAmt.
     * @param value value to set the MAX_AMT
     */
    public void setMaxAmt(Number value) {
        setAttributeInternal(MAXAMT, value);
    }

    /**
     * Gets the attribute value for MAX_QTY using the alias name MaxQty.
     * @return the MAX_QTY
     */
    public Number getMaxQty() {
        return (Number) getAttributeInternal(MAXQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_QTY using the alias name MaxQty.
     * @param value value to set the MAX_QTY
     */
    public void setMaxQty(Number value) {
        setAttributeInternal(MAXQTY, value);
    }

    /**
     * Gets the attribute value for MIN_AMT using the alias name MinAmt.
     * @return the MIN_AMT
     */
    public Number getMinAmt() {
        return (Number) getAttributeInternal(MINAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_AMT using the alias name MinAmt.
     * @param value value to set the MIN_AMT
     */
    public void setMinAmt(Number value) {
        setAttributeInternal(MINAMT, value);
    }

    /**
     * Gets the attribute value for MIN_QTY using the alias name MinQty.
     * @return the MIN_QTY
     */
    public Number getMinQty() {
        return (Number) getAttributeInternal(MINQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_QTY using the alias name MinQty.
     * @param value value to set the MIN_QTY
     */
    public void setMinQty(Number value) {
        setAttributeInternal(MINQTY, value);
    }

    /**
     * Gets the attribute value for VALID_FROM using the alias name ValidFrom.
     * @return the VALID_FROM
     */
    public Date getValidFrom() {
        return (Date) getAttributeInternal(VALIDFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_FROM using the alias name ValidFrom.
     * @param value value to set the VALID_FROM
     */
    public void setValidFrom(Date value) {
        setAttributeInternal(VALIDFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmTrans.
     * @return the EoNmTrans
     */
    private String eoNm = null;

    public String getEoNmTrans() {

        /**
         * if plc basis is customer category then no customer name is to be shown.
         */
        if (this.getSchmPlcBasis() != null && this.getSchmPlcBasis().equals(720)) {
            return null;
        }
        /* if (this.getEoId() != null && getAttributeInternal(EONMTRANS) == null) {
            RowSet custVO1 = this.getLOVCustVO1();
            Row[] filteredRows = custVO1.getFilteredRows("EoId", this.getEoId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("EoNm").toString();
            }else
                return (String) getAttributeInternal(EONMTRANS);
        } */

        if (eoNm == null && getEoId() != null && getEoId() != 0) {
            RowSet eoIdToEoNmVO1 = this.getLOVEoIdToEoNmVO1();
            eoIdToEoNmVO1.setNamedWhereClauseParam("EoIdBind", getEoId());
            eoIdToEoNmVO1.executeQuery();
            Row[] filteredRows = eoIdToEoNmVO1.getAllRowsInRange();
        //    Row[] filteredRows = eoIdToEoNmVO1.getFilteredRows("EoId", getEoId());
            if (filteredRows.length > 0) {
                eoNm = filteredRows[0].getAttribute("EoNm").toString();
            }
        }
        return eoNm;

        //  return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNmTrans.
     * @param value value to set the  EoNmTrans
     */
    public void setEoNmTrans(String value) {

        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExecNmTrans.
     * @return the ExecNmTrans
     */
    private String execNm;
    public String getExecNmTrans() {
        /* if (this.getExecId() != null && getAttributeInternal(EXECNMTRANS) == null) {
            RowSet custVO1 = this.getLOVSlsManVO1();
            Row[] filteredRows = custVO1.getFilteredRows("EoId", this.getExecId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("EoNm").toString();
            } else
                return (String) getAttributeInternal(EXECNMTRANS);
        } */
       //return (String) getAttributeInternal(EXECNMTRANS);
           if(execNm == null && this.getExecId() != null && this.getExecId() != 0) {
            RowSet execIdToNmVO1 = this.getLovExecIdToNmVO1();
            execIdToNmVO1.setNamedWhereClauseParam("EoIdBind", this.getExecId());
            execIdToNmVO1.executeQuery();
            Row[] filteredRows = execIdToNmVO1.getAllRowsInRange();
            System.out.println("row lwngth is "+execIdToNmVO1.getRowCount());
            System.out.println(execIdToNmVO1);
          //  Row[] filteredRows = execIdToNmVO1.getFilteredRows("EoId", this.getExecId());
            System.out.println("Filter rows are: "+filteredRows.length);
            if(filteredRows.length>0)
                
                execNm = filteredRows[0].getAttribute("EoNm").toString();
        }
        return execNm;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExecNmTrans.
     * @param value value to set the  ExecNmTrans
     */
    public void setExecNmTrans(String value) {
        setAttributeInternal(EXECNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpNmTrans.
     * @return the ItmGrpNmTrans
     */
    public String getItmGrpNmTrans() {
        if (this.getGrpId() != null && getAttributeInternal(ITMGRPNMTRANS) == null) {
            RowSet custVO1 = this.getLOVItmGrpVO1();
            Row[] filteredRows = custVO1.getFilteredRows("GrpId", this.getGrpId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("GrpNm").toString();
            } else
                return (String) getAttributeInternal(ITMGRPNMTRANS);
        }
        return (String) getAttributeInternal(ITMGRPNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpNmTrans.
     * @param value value to set the  ItmGrpNmTrans
     */
    public void setItmGrpNmTrans(String value) {
        setAttributeInternal(ITMGRPNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    private String itmNm;

    public String getItmNmTrans() {
        /*  if (this.getItmId() != null && getAttributeInternal(ITMNMTRANS) == null) {
            RowSet custVO1 = this.getLOVItmVO1();
            Row[] filteredRows = custVO1.getFilteredRows("ItmId", this.getItmId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("ItmDesc").toString();
            } else
                return (String) getAttributeInternal(ITMNMTRANS);
        } */
        if (itmNm == null && this.getItmId() != null && this.getItmId()!= "") {
            RowSet idToItmNmVO1 = this.getLovItmIdToItmNmVO1();
            idToItmNmVO1.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            idToItmNmVO1.executeQuery();
            Row[] filteredRows = idToItmNmVO1.getAllRowsInRange();
            //  Row[] filteredRows = idToItmNmVO1.getFilteredRows("ItmId", this.getItmId());
            if (filteredRows.length > 0)
                itmNm = filteredRows[0].getAttribute("ItmDesc").toString();
        }
        return itmNm;
        //return (String) getAttributeInternal(ITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeNmTrans.
     * @return the SchemeNmTrans
     */
    public String getSchemeNmTrans() {
        if (this.getSchmId() != null && getAttributeInternal(SCHEMENMTRANS) == null) {
            RowSet custVO1 = this.getLOVSchemeIdVO1();
            Row[] filteredRows = custVO1.getFilteredRows("DocId", this.getSchmId());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("SchmNm").toString();
            } else
                return (String) getAttributeInternal(SCHEMENMTRANS);
        }
        return (String) getAttributeInternal(SCHEMENMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeNmTrans.
     * @param value value to set the  SchemeNmTrans
     */
    public void setSchemeNmTrans(String value) {
        setAttributeInternal(SCHEMENMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrentDateTrans.
     * @return the CurrentDateTrans
     */
    public Date getCurrentDateTrans() {
        return (Date) getAttributeInternal(CURRENTDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrentDateTrans.
     * @param value value to set the  CurrentDateTrans
     */
    public void setCurrentDateTrans(Date value) {
        setAttributeInternal(CURRENTDATETRANS, value);
    }

    /**
     * Gets the attribute value for REPL_FLG using the alias name ReplFlg.
     * @return the REPL_FLG
     */
    public String getReplFlg() {
        return (String) getAttributeInternal(REPLFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for REPL_FLG using the alias name ReplFlg.
     * @param value value to set the REPL_FLG
     */
    public void setReplFlg(String value) {
        setAttributeInternal(REPLFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeDispTrans.
     * @return the SchemeDispTrans
     */
    public String getSchemeDispTrans() {

        if (this.getSchmId() != null && getAttributeInternal(SCHEMEDISPTRANS) == null) {
            RowSet custVO1 = this.getLOVSchemeIdVO1();
            Row[] filteredRows = custVO1.getFilteredRows("DocId", this.getSchmId());
            System.out.println("disply rows are: " + filteredRows.length + "\t" + custVO1.getRowCount());
            System.out.println("Row count: " + custVO1.getRowCount());
            if (filteredRows.length > 0) {
                return filteredRows[0].getAttribute("DispId").toString();
            } else
                return (String) getAttributeInternal(SCHEMEDISPTRANS);
        }

        return (String) getAttributeInternal(SCHEMEDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeDispTrans.
     * @param value value to set the  SchemeDispTrans
     */
    public void setSchemeDispTrans(String value) {
        setAttributeInternal(SCHEMEDISPTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchmeBasicVO1.
     */
    public RowSet getLovSchmeBasicVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMEBASICVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoCatgVO1.
     */
    public RowSet getLovEoCatgVO1() {
        return (RowSet) getAttributeInternal(LOVEOCATGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustVO1.
     */
    public RowSet getLOVCustVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSlsManVO1.
     */
    public RowSet getLOVSlsManVO1() {
        return (RowSet) getAttributeInternal(LOVSLSMANVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItmGrpVO1.
     */
    public RowSet getLOVItmGrpVO1() {
        return (RowSet) getAttributeInternal(LOVITMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItmVO1.
     */
    public RowSet getLOVItmVO1() {
        return (RowSet) getAttributeInternal(LOVITMVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVitmUOMVO1.
     */
    public RowSet getLOVitmUOMVO1() {
        return (RowSet) getAttributeInternal(LOVITMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchemeIdVO1.
     */
    public RowSet getLOVSchemeIdVO1() {
        return (RowSet) getAttributeInternal(LOVSCHEMEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoIdToEoNmVO1.
     */
    public RowSet getLOVEoIdToEoNmVO1() {
        return (RowSet) getAttributeInternal(LOVEOIDTOEONMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdToItmNmVO1.
     */
    public RowSet getLovItmIdToItmNmVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDTOITMNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovExecIdToNmVO1.
     */
    public RowSet getLovExecIdToNmVO1() {
        return (RowSet) getAttributeInternal(LOVEXECIDTONMVO1);
    }

    public String getOldSchemId() {
        byte status = EntityImpl.STATUS_UNMODIFIED;
        return (String) getAttributeInternal(SCHMID, status);
    }
}

