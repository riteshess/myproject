package schemepolicyapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 31 15:48:51 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class plcySearchDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        SchmeName,
        SchmeId,
        CatgId,
        EoId,
        EoNm,
        SlsManId,
        SlsManNm,
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        SchemeBasisTrans,
        ValidFrom,
        ValidTo,
        LovEoCatgVO1,
        LOVCustVO1,
        LovSchmeBasicVO1,
        LOVSlsManVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int SCHMENAME = AttributesEnum.SchmeName.index();
    public static final int SCHMEID = AttributesEnum.SchmeId.index();
    public static final int CATGID = AttributesEnum.CatgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int SLSMANID = AttributesEnum.SlsManId.index();
    public static final int SLSMANNM = AttributesEnum.SlsManNm.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCHEMEBASISTRANS = AttributesEnum.SchemeBasisTrans.index();
    public static final int VALIDFROM = AttributesEnum.ValidFrom.index();
    public static final int VALIDTO = AttributesEnum.ValidTo.index();
    public static final int LOVEOCATGVO1 = AttributesEnum.LovEoCatgVO1.index();
    public static final int LOVCUSTVO1 = AttributesEnum.LOVCustVO1.index();
    public static final int LOVSCHMEBASICVO1 = AttributesEnum.LovSchmeBasicVO1.index();
    public static final int LOVSLSMANVO1 = AttributesEnum.LOVSlsManVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public plcySearchDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Selectobjects0.
     * @param value value to set the  Selectobjects0
     */
    public void setSelectobjects0(String value) {
        setAttributeInternal(SELECTOBJECTS0, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchmeName.
     * @return the SchmeName
     */
    public String getSchmeName() {
        return (String) getAttributeInternal(SCHMENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmeName.
     * @param value value to set the  SchmeName
     */
    public void setSchmeName(String value) {
        setAttributeInternal(SCHMENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchmeId.
     * @return the SchmeId
     */
    public String getSchmeId() {
        return (String) getAttributeInternal(SCHMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmeId.
     * @param value value to set the  SchmeId
     */
    public void setSchmeId(String value) {
        setAttributeInternal(SCHMEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CatgId.
     * @return the CatgId
     */
    public Integer getCatgId() {
        return (Integer) getAttributeInternal(CATGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CatgId.
     * @param value value to set the  CatgId
     */
    public void setCatgId(Integer value) {
        setAttributeInternal(CATGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNm.
     * @param value value to set the  EoNm
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlsManId.
     * @return the SlsManId
     */
    public Integer getSlsManId() {
        return (Integer) getAttributeInternal(SLSMANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlsManId.
     * @param value value to set the  SlsManId
     */
    public void setSlsManId(Integer value) {
        setAttributeInternal(SLSMANID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlsManNm.
     * @return the SlsManNm
     */
    public String getSlsManNm() {
        return (String) getAttributeInternal(SLSMANNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlsManNm.
     * @param value value to set the  SlsManNm
     */
    public void setSlsManNm(String value) {
        setAttributeInternal(SLSMANNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        if (val != null)
            return val.toString();

        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        if (val != null)
            return Integer.parseInt(val.toString());
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        if (val != null)
            return val.toString();
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if (val != null)
            return val.toString();
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeBasisTrans.
     * @return the SchemeBasisTrans
     */
    public Integer getSchemeBasisTrans() {
        return (Integer) getAttributeInternal(SCHEMEBASISTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeBasisTrans.
     * @param value value to set the  SchemeBasisTrans
     */
    public void setSchemeBasisTrans(Integer value) {
        setAttributeInternal(SCHEMEBASISTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValidFrom.
     * @return the ValidFrom
     */
    public Date getValidFrom() {
        return (Date) getAttributeInternal(VALIDFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValidFrom.
     * @param value value to set the  ValidFrom
     */
    public void setValidFrom(Date value) {
        setAttributeInternal(VALIDFROM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValidTo.
     * @return the ValidTo
     */
    public Date getValidTo() {
        return (Date) getAttributeInternal(VALIDTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValidTo.
     * @param value value to set the  ValidTo
     */
    public void setValidTo(Date value) {
        setAttributeInternal(VALIDTO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoCatgVO1.
     */
    public RowSet getLovEoCatgVO1() {
        return (RowSet) getAttributeInternal(LOVEOCATGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustVO1.
     */
    public RowSet getLOVCustVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchmeBasicVO1.
     */
    public RowSet getLovSchmeBasicVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMEBASICVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSlsManVO1.
     */
    public RowSet getLOVSlsManVO1() {
        return (RowSet) getAttributeInternal(LOVSLSMANVO1);
    }

    public Object resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        return valueExp.getValue(elContext);
    }
}

