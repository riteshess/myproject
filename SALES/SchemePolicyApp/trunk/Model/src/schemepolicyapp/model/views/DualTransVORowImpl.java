package schemepolicyapp.model.views;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;

import schemepolicyapp.model.service.SchemePolicyAppAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 30 10:12:07 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        schemeBasisTrans,
        categoryTrans,
        EoIdTrans,
        SchemeIdTrans,
        SchemeNmTrans,
        ExecIdTrans,
        GrpIdTrans,
        ValidFromTrans,
        ValidToTrans,
        ItemNmTrans,
        ItemUomTrans,
        ReplFlagTrans,
        EoNmTrans,
        QuantityTrans,
        AmountTrans,
        ItemIdTrans,
        CldIdTrans,
        SlocIdTrans,
        HoOrgIdTrans,
        GrpNmTrans,
        OrgIdTrans,
        ExecNmTrans,
        DocIdTrans,
        newSchmNmTrans,
        newSchmIdTrans,
        newSchmDocIdTrans,
        FyIdTrans,
        LovEoCatgVO1,
        LOVCustVO1,
        LovExecIdToNmVO1,
        LovSchmeBasicVO1,
        LOVSchemeIdVO1,
        LOVSchemeIdVO2,
        LOVItmGrpVO1,
        LovItmIdToItmNmVO1,
        LOVItmVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int SCHEMEBASISTRANS = AttributesEnum.schemeBasisTrans.index();
    public static final int CATEGORYTRANS = AttributesEnum.categoryTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int SCHEMEIDTRANS = AttributesEnum.SchemeIdTrans.index();
    public static final int SCHEMENMTRANS = AttributesEnum.SchemeNmTrans.index();
    public static final int EXECIDTRANS = AttributesEnum.ExecIdTrans.index();
    public static final int GRPIDTRANS = AttributesEnum.GrpIdTrans.index();
    public static final int VALIDFROMTRANS = AttributesEnum.ValidFromTrans.index();
    public static final int VALIDTOTRANS = AttributesEnum.ValidToTrans.index();
    public static final int ITEMNMTRANS = AttributesEnum.ItemNmTrans.index();
    public static final int ITEMUOMTRANS = AttributesEnum.ItemUomTrans.index();
    public static final int REPLFLAGTRANS = AttributesEnum.ReplFlagTrans.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int QUANTITYTRANS = AttributesEnum.QuantityTrans.index();
    public static final int AMOUNTTRANS = AttributesEnum.AmountTrans.index();
    public static final int ITEMIDTRANS = AttributesEnum.ItemIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int GRPNMTRANS = AttributesEnum.GrpNmTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int EXECNMTRANS = AttributesEnum.ExecNmTrans.index();
    public static final int DOCIDTRANS = AttributesEnum.DocIdTrans.index();
    public static final int NEWSCHMNMTRANS = AttributesEnum.newSchmNmTrans.index();
    public static final int NEWSCHMIDTRANS = AttributesEnum.newSchmIdTrans.index();
    public static final int NEWSCHMDOCIDTRANS = AttributesEnum.newSchmDocIdTrans.index();
    public static final int FYIDTRANS = AttributesEnum.FyIdTrans.index();
    public static final int LOVEOCATGVO1 = AttributesEnum.LovEoCatgVO1.index();
    public static final int LOVCUSTVO1 = AttributesEnum.LOVCustVO1.index();
    public static final int LOVEXECIDTONMVO1 = AttributesEnum.LovExecIdToNmVO1.index();
    public static final int LOVSCHMEBASICVO1 = AttributesEnum.LovSchmeBasicVO1.index();
    public static final int LOVSCHEMEIDVO1 = AttributesEnum.LOVSchemeIdVO1.index();
    public static final int LOVSCHEMEIDVO2 = AttributesEnum.LOVSchemeIdVO2.index();
    public static final int LOVITMGRPVO1 = AttributesEnum.LOVItmGrpVO1.index();
    public static final int LOVITMIDTOITMNMVO1 = AttributesEnum.LovItmIdToItmNmVO1.index();
    public static final int LOVITMVO1 = AttributesEnum.LOVItmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute schemeBasisTrans.
     * @return the schemeBasisTrans
     */
    public Integer getschemeBasisTrans() {
        return (Integer) getAttributeInternal(SCHEMEBASISTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute schemeBasisTrans.
     * @param value value to set the  schemeBasisTrans
     */
    public void setschemeBasisTrans(Integer value) {
        setAttributeInternal(SCHEMEBASISTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute categoryTrans.
     * @return the categoryTrans
     */
    public Integer getcategoryTrans() {
        return (Integer) getAttributeInternal(CATEGORYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute categoryTrans.
     * @param value value to set the  categoryTrans
     */
    public void setcategoryTrans(Integer value) {
        setAttributeInternal(CATEGORYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdTrans.
     * @return the EoIdTrans
     */
    public Integer getEoIdTrans() {
        return (Integer) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdTrans.
     * @param value value to set the  EoIdTrans
     */
    public void setEoIdTrans(Integer value) {
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeIdTrans.
     * @return the SchemeIdTrans
     */
    public String getSchemeIdTrans() {
        return (String) getAttributeInternal(SCHEMEIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeIdTrans.
     * @param value value to set the  SchemeIdTrans
     */
    public void setSchemeIdTrans(String value) {
        setAttributeInternal(SCHEMEIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeNmTrans.
     * @return the SchemeNmTrans
     */
    public String getSchemeNmTrans() {
        return (String) getAttributeInternal(SCHEMENMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeNmTrans.
     * @param value value to set the  SchemeNmTrans
     */
    public void setSchemeNmTrans(String value) {
        setAttributeInternal(SCHEMENMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExecIdTrans.
     * @return the ExecIdTrans
     */
    public Integer getExecIdTrans() {
        return (Integer) getAttributeInternal(EXECIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExecIdTrans.
     * @param value value to set the  ExecIdTrans
     */
    public void setExecIdTrans(Integer value) {
        setAttributeInternal(EXECIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpIdTrans.
     * @return the GrpIdTrans
     */
    public String getGrpIdTrans() {
        return (String) getAttributeInternal(GRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrpIdTrans.
     * @param value value to set the  GrpIdTrans
     */
    public void setGrpIdTrans(String value) {
        setAttributeInternal(GRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValidFromTrans.
     * @return the ValidFromTrans
     */
    public Date getValidFromTrans() {
        return (Date) getAttributeInternal(VALIDFROMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValidFromTrans.
     * @param value value to set the  ValidFromTrans
     */
    public void setValidFromTrans(Date value) {
        setAttributeInternal(VALIDFROMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ValidToTrans.
     * @return the ValidToTrans
     */
    public Date getValidToTrans() {
        return (Date) getAttributeInternal(VALIDTOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ValidToTrans.
     * @param value value to set the  ValidToTrans
     */
    public void setValidToTrans(Date value) {
        setAttributeInternal(VALIDTOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNmTrans.
     * @return the ItemNmTrans
     */
    public String getItemNmTrans() {
        return (String) getAttributeInternal(ITEMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNmTrans.
     * @param value value to set the  ItemNmTrans
     */
    public void setItemNmTrans(String value) {
        setAttributeInternal(ITEMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemUomTrans.
     * @return the ItemUomTrans
     */
    public String getItemUomTrans() {
        return (String) getAttributeInternal(ITEMUOMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemUomTrans.
     * @param value value to set the  ItemUomTrans
     */
    public void setItemUomTrans(String value) {
        setAttributeInternal(ITEMUOMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReplFlagTrans.
     * @return the ReplFlagTrans
     */
    public String getReplFlagTrans() {
        return (String) getAttributeInternal(REPLFLAGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReplFlagTrans.
     * @param value value to set the  ReplFlagTrans
     */
    public void setReplFlagTrans(String value) {
        if(value==null){
            value="N";
        }
        setAttributeInternal(REPLFLAGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmTrans.
     * @return the EoNmTrans
     */
    public String getEoNmTrans() {
        return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNmTrans.
     * @param value value to set the  EoNmTrans
     */
    public void setEoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute QuantityTrans.
     * @return the QuantityTrans
     */
    public Number getQuantityTrans() {
        return (Number) getAttributeInternal(QUANTITYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute QuantityTrans.
     * @param value value to set the  QuantityTrans
     */
    public void setQuantityTrans(Number value) {
        setAttributeInternal(QUANTITYTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmountTrans.
     * @return the AmountTrans
     */
    public Number getAmountTrans() {
        return (Number) getAttributeInternal(AMOUNTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmountTrans.
     * @param value value to set the  AmountTrans
     */
    public void setAmountTrans(Number value) {
        setAttributeInternal(AMOUNTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemIdTrans.
     * @return the ItemIdTrans
     */
    public String getItemIdTrans() {
        return (String) getAttributeInternal(ITEMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemIdTrans.
     * @param value value to set the  ItemIdTrans
     */
    public void setItemIdTrans(String value) {
        setAttributeInternal(ITEMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        return EbizParams.GLBL_APP_CLD_ID();
        //return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        return (Integer)EbizParams.GLBL_APP_SERV_LOC();
       // return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        System.out.println("Ho_Org_Id is ::: "+EbizParams.GLBL_HO_ORG_ID());
        return EbizParams.GLBL_HO_ORG_ID().toString();
        //return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpNmTrans.
     * @return the GrpNmTrans
     */
    public String getGrpNmTrans() {
        return (String) getAttributeInternal(GRPNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrpNmTrans.
     * @param value value to set the  GrpNmTrans
     */
    public void setGrpNmTrans(String value) {
        setAttributeInternal(GRPNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        return EbizParams.GLBL_APP_USR_ORG().toString();
        //return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExecNmTrans.
     * @return the ExecNmTrans
     */
    public String getExecNmTrans() {
        return (String) getAttributeInternal(EXECNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExecNmTrans.
     * @param value value to set the  ExecNmTrans
     */
    public void setExecNmTrans(String value) {
        setAttributeInternal(EXECNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdTrans.
     * @return the DocIdTrans
     */
    public String getDocIdTrans() {
        return (String) getAttributeInternal(DOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdTrans.
     * @param value value to set the  DocIdTrans
     */
    public void setDocIdTrans(String value) {
        setAttributeInternal(DOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute newSchmNmTrans.
     * @return the newSchmNmTrans
     */
    public String getnewSchmNmTrans() {
        return (String) getAttributeInternal(NEWSCHMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute newSchmNmTrans.
     * @param value value to set the  newSchmNmTrans
     */
    public void setnewSchmNmTrans(String value) {
        setAttributeInternal(NEWSCHMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute newSchmIdTrans.
     * @return the newSchmIdTrans
     */
    public String getnewSchmIdTrans() {
        return (String) getAttributeInternal(NEWSCHMIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute newSchmIdTrans.
     * @param value value to set the  newSchmIdTrans
     */
    public void setnewSchmIdTrans(String value) {
        setAttributeInternal(NEWSCHMIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute newSchmDocIdTrans.
     * @return the newSchmDocIdTrans
     */
    public String getnewSchmDocIdTrans() {
        return (String) getAttributeInternal(NEWSCHMDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute newSchmDocIdTrans.
     * @param value value to set the  newSchmDocIdTrans
     */
    public void setnewSchmDocIdTrans(String value) {
        setAttributeInternal(NEWSCHMDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyIdTrans.
     * @return the FyIdTrans
     */
    public Integer getFyIdTrans() {
        Integer fyid=null;
        if(getAttributeInternal(FYIDTRANS)==null){
       fyid= EbizParams.getFyIdOnCurrDtAndCurrOrg((SchemePolicyAppAMImpl)getApplicationModule());
        System.out.println("FYID in Dual :::: "+fyid);
        }
        return fyid;
        //return (Integer) getAttributeInternal(FYIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyIdTrans.
     * @param value value to set the  FyIdTrans
     */
    public void setFyIdTrans(Integer value) {
        setAttributeInternal(FYIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovEoCatgVO1.
     */
    public RowSet getLovEoCatgVO1() {
        return (RowSet) getAttributeInternal(LOVEOCATGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustVO1.
     */
    public RowSet getLOVCustVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovExecIdToNmVO1.
     */
    public RowSet getLovExecIdToNmVO1() {
        return (RowSet) getAttributeInternal(LOVEXECIDTONMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchmeBasicVO1.
     */
    public RowSet getLovSchmeBasicVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMEBASICVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchemeIdVO1.
     */
    public RowSet getLOVSchemeIdVO1() {
        return (RowSet) getAttributeInternal(LOVSCHEMEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchemeIdVO2.
     */
    public RowSet getLOVSchemeIdVO2() {
        return (RowSet) getAttributeInternal(LOVSCHEMEIDVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItmGrpVO1.
     */
    public RowSet getLOVItmGrpVO1() {
        return (RowSet) getAttributeInternal(LOVITMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdToItmNmVO1.
     */
    public RowSet getLovItmIdToItmNmVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDTOITMNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItmVO1.
     */
    public RowSet getLOVItmVO1() {
        return (RowSet) getAttributeInternal(LOVITMVO1);
    }
}

