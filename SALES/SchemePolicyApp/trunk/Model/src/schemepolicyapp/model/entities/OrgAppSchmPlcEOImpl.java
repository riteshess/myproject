package schemepolicyapp.model.entities;

import java.math.BigDecimal;
import java.math.BigInteger;

//import java.sql.Timestamp;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 05 17:16:23 PST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgAppSchmPlcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        SchmPlcBasis,
        SchmId,
        CatgId,
        EoId,
        ExecId,
        MinQty,
        MaxQty,
        MinAmt,
        MaxAmt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SCHMPLCBASIS = AttributesEnum.SchmPlcBasis.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int CATGID = AttributesEnum.CatgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EXECID = AttributesEnum.ExecId.index();
    public static final int MINQTY = AttributesEnum.MinQty.index();
    public static final int MAXQTY = AttributesEnum.MaxQty.index();
    public static final int MINAMT = AttributesEnum.MinAmt.index();
    public static final int MAXAMT = AttributesEnum.MaxAmt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgAppSchmPlcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("schemepolicyapp.model.entities.OrgAppSchmPlcEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SchmPlcBasis, using the alias name SchmPlcBasis.
     * @return the value of SchmPlcBasis
     */
    public Integer getSchmPlcBasis() {
        return (Integer) getAttributeInternal(SCHMPLCBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmPlcBasis.
     * @param value value to set the SchmPlcBasis
     */
    public void setSchmPlcBasis(Integer value) {
        setAttributeInternal(SCHMPLCBASIS, value);
    }

    /**
     * Gets the attribute value for SchmId, using the alias name SchmId.
     * @return the value of SchmId
     */
    public String getSchmId() {
        return (String) getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchmId.
     * @param value value to set the SchmId
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for CatgId, using the alias name CatgId.
     * @return the value of CatgId
     */
    public Integer getCatgId() {
        return (Integer) getAttributeInternal(CATGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CatgId.
     * @param value value to set the CatgId
     */
    public void setCatgId(Integer value) {
        setAttributeInternal(CATGID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ExecId, using the alias name ExecId.
     * @return the value of ExecId
     */
    public Integer getExecId() {
        return (Integer) getAttributeInternal(EXECID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExecId.
     * @param value value to set the ExecId
     */
    public void setExecId(Integer value) {
        setAttributeInternal(EXECID, value);
    }

    /**
     * Gets the attribute value for MinQty, using the alias name MinQty.
     * @return the value of MinQty
     */
    public Number getMinQty() {
        return (Number) getAttributeInternal(MINQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinQty.
     * @param value value to set the MinQty
     */
    public void setMinQty(Number value) {
        setAttributeInternal(MINQTY, value);
    }

    /**
     * Gets the attribute value for MaxQty, using the alias name MaxQty.
     * @return the value of MaxQty
     */
    public Number getMaxQty() {
        return (Number) getAttributeInternal(MAXQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxQty.
     * @param value value to set the MaxQty
     */
    public void setMaxQty(Number value) {
        setAttributeInternal(MAXQTY, value);
    }

    /**
     * Gets the attribute value for MinAmt, using the alias name MinAmt.
     * @return the value of MinAmt
     */
    public Number getMinAmt() {
        return (Number) getAttributeInternal(MINAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinAmt.
     * @param value value to set the MinAmt
     */
    public void setMinAmt(Number value) {
        setAttributeInternal(MINAMT, value);
    }

    /**
     * Gets the attribute value for MaxAmt, using the alias name MaxAmt.
     * @return the value of MaxAmt
     */
    public Number getMaxAmt() {
        return (Number) getAttributeInternal(MAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxAmt.
     * @param value value to set the MaxAmt
     */
    public void setMaxAmt(Number value) {
        setAttributeInternal(MAXAMT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param orgId key constituent
     * @param schmPlcBasis key constituent
     * @param schmId key constituent
     * @param catgId key constituent
     * @param eoId key constituent
     * @param execId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, String orgId, Integer schmPlcBasis,
                                       String schmId, Integer catgId, Integer eoId, Integer execId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, orgId, schmPlcBasis, schmId, catgId, eoId, execId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
        setCldId(getParamCldId());
        setSlocId(getParamSlocId());
        setHoOrgId(getParamHoOrgId());
        setUsrIdCreate(getParamUsrId());
        setUsrIdMod(getParamUsrId());
        setUsrIdCreateDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
        setUsrIdModDt(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    
    public Object resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        return valueExp.getValue(elContext);
    }

    private String getParamCldId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        if (val != null)
            return val.toString();
        return null;
    }

    private String getParamHoOrgId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        if (val != null)
            return val.toString();
        return null;
    }

    private String getParamOrgId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if (val != null)
            return val.toString();
        return null;
    }

    private Integer getParamSlocId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        if (val != null)
            return Integer.parseInt(val.toString());
        return null;
    }

    private Integer getParamUsrId() {
        Object val = this.resolvEl("#{pageFlowScope.GLBL_APP_USR}");
        if (val != null)
        return Integer.parseInt(val.toString());
        return null;
    }
}

