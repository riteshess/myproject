package slspricemasterapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 18 11:36:33 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ItemTypeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmDesc {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setItmDesc((String)value);
            }
        }
        ,
        UomSls {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getUomSls();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setUomSls((String)value);
            }
        }
        ,
        UomClass {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getUomClass();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setUomClass((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        Actv {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getActv();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        GrpId {
            public Object get(ItemTypeVORowImpl obj) {
                return obj.getGrpId();
            }

            public void put(ItemTypeVORowImpl obj, Object value) {
                obj.setGrpId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ItemTypeVORowImpl object);

        public abstract void put(ItemTypeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int UOMSLS = AttributesEnum.UomSls.index();
    public static final int UOMCLASS = AttributesEnum.UomClass.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int GRPID = AttributesEnum.GrpId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ItemTypeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
     public String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String msg = valueExp.getValue(elContext).toString();
            return msg;
        }
    public Integer getSlocId() {
        Integer sloc_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()); 
        return sloc_id;
      //  return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomSls.
     * @return the UomSls
     */
    public String getUomSls() {
        return (String) getAttributeInternal(UOMSLS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomSls.
     * @param value value to set the  UomSls
     */
    public void setUomSls(String value) {
        setAttributeInternal(UOMSLS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomClass.
     * @return the UomClass
     */
    public Integer getUomClass() {
        return (Integer) getAttributeInternal(UOMCLASS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomClass.
     * @param value value to set the  UomClass
     */
    public void setUomClass(Integer value) {
        setAttributeInternal(UOMCLASS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        
        String org_id =  resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString(); 
       // System.out.println(org_id);
        return org_id;
        
      //  return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
       // System.out.println("ENter in SearchLovVoRowImpl class's getcldId getter...");
        String cld_id =  resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString(); 
        return cld_id;
       // return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Actv.
     * @return the Actv
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Actv.
     * @param value value to set the  Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GrpId.
     * @return the GrpId
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GrpId.
     * @param value value to set the  GrpId
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
