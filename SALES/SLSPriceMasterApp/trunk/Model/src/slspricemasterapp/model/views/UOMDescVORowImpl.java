package slspricemasterapp.model.views;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 31 19:49:04 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UOMDescVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        UomId {
            public Object get(UOMDescVORowImpl obj) {
                return obj.getUomId();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.setUomId((String)value);
            }
        }
        ,
        UomDesc {
            public Object get(UOMDescVORowImpl obj) {
                return obj.getUomDesc();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.setUomDesc((String)value);
            }
        }
        ,
        transAmtPstRB {
            public Object get(UOMDescVORowImpl obj) {
                return obj.gettransAmtPstRB();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.settransAmtPstRB((String)value);
            }
        }
        ,
        transAddSubRB {
            public Object get(UOMDescVORowImpl obj) {
                return obj.gettransAddSubRB();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.settransAddSubRB((String)value);
            }
        }
        ,
        MrpTypeLovVO1 {
            public Object get(UOMDescVORowImpl obj) {
                return obj.getMrpTypeLovVO1();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAmtPerVO1 {
            public Object get(UOMDescVORowImpl obj) {
                return obj.getLovAmtPerVO1();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovAddSubVO1 {
            public Object get(UOMDescVORowImpl obj) {
                return obj.getLovAddSubVO1();
            }

            public void put(UOMDescVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(UOMDescVORowImpl object);

        public abstract void put(UOMDescVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int UOMID = AttributesEnum.UomId.index();
    public static final int UOMDESC = AttributesEnum.UomDesc.index();
    public static final int TRANSAMTPSTRB = AttributesEnum.transAmtPstRB.index();
    public static final int TRANSADDSUBRB = AttributesEnum.transAddSubRB.index();
    public static final int MRPTYPELOVVO1 = AttributesEnum.MrpTypeLovVO1.index();
    public static final int LOVAMTPERVO1 = AttributesEnum.LovAmtPerVO1.index();
    public static final int LOVADDSUBVO1 = AttributesEnum.LovAddSubVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UOMDescVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute UomId.
     * @return the UomId
     */
    public String getUomId() {
        return (String) getAttributeInternal(UOMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomId.
     * @param value value to set the  UomId
     */
    public void setUomId(String value) {
        setAttributeInternal(UOMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomDesc.
     * @return the UomDesc
     */
    public String getUomDesc() {
        return (String) getAttributeInternal(UOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomDesc.
     * @param value value to set the  UomDesc
     */
    public void setUomDesc(String value) {
        setAttributeInternal(UOMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transAmtPstRB.
     * @return the transAmtPstRB
     */
    public String gettransAmtPstRB() {
        if(getAttributeInternal(TRANSAMTPSTRB) == null){
            return "A";
        }
        return (String) getAttributeInternal(TRANSAMTPSTRB);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transAmtPstRB.
     * @param value value to set the  transAmtPstRB
     */
    public void settransAmtPstRB(String value) {
        setAttributeInternal(TRANSAMTPSTRB, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transAddSubRB.
     * @return the transAddSubRB
     */
    public String gettransAddSubRB() {
        if(getAttributeInternal(TRANSADDSUBRB) == null){
            return "A";
        }
        return (String) getAttributeInternal(TRANSADDSUBRB);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transAddSubRB.
     * @param value value to set the  transAddSubRB
     */
    public void settransAddSubRB(String value) {
        setAttributeInternal(TRANSADDSUBRB, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MrpTypeLovVO1.
     */
    public RowSet getMrpTypeLovVO1() {
        return (RowSet)getAttributeInternal(MRPTYPELOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAmtPerVO1.
     */
    public RowSet getLovAmtPerVO1() {
        return (RowSet)getAttributeInternal(LOVAMTPERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddSubVO1.
     */
    public RowSet getLovAddSubVO1() {
        return (RowSet)getAttributeInternal(LOVADDSUBVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
