package slspricemasterapp.model.views;

import java.util.List;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaItem;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Dec 13 18:36:06 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ItemTypeVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public ItemTypeVOImpl() {
    }

    /**
     * Returns the variable value for BindItemDesc.
     * @return variable value for BindItemDesc
     */
    public String getBindItemDesc() {
        return (String)ensureVariableManager().getVariableValue("BindItemDesc");
    }

    /**
     * Sets <code>value</code> for variable BindItemDesc.
     * @param value value to bind as BindItemDesc
     */
    public void setBindItemDesc(String value) {
        ensureVariableManager().setVariableValue("BindItemDesc", value);
    }

    /**
     * Returns the variable value for BindItemId.
     * @return variable value for BindItemId
     */
    public String getBindItemId() {
        return (String)ensureVariableManager().getVariableValue("BindItemId");
    }

    /**
     * Sets <code>value</code> for variable BindItemId.
     * @param value value to bind as BindItemId
     */
    public void setBindItemId(String value) {
        ensureVariableManager().setVariableValue("BindItemId", value);
    }

    /**
     * Returns the variable value for BindSlocId.
     * @return variable value for BindSlocId
     */
    public Integer getBindSlocId() {
        return (Integer)ensureVariableManager().getVariableValue("BindSlocId");
    }

    /**
     * Sets <code>value</code> for variable BindSlocId.
     * @param value value to bind as BindSlocId
     */
    public void setBindSlocId(Integer value) {
        ensureVariableManager().setVariableValue("BindSlocId", value);
    }

    /**
     * Returns the variable value for BindOrgId.
     * @return variable value for BindOrgId
     */
    public String getBindOrgId() {
        return (String)ensureVariableManager().getVariableValue("BindOrgId");
    }

    /**
     * Sets <code>value</code> for variable BindOrgId.
     * @param value value to bind as BindOrgId
     */
    public void setBindOrgId(String value) {
        ensureVariableManager().setVariableValue("BindOrgId", value);
    }

    /**
     * Returns the variable value for BindCldId.
     * @return variable value for BindCldId
     */
    public String getBindCldId() {
        return (String)ensureVariableManager().getVariableValue("BindCldId");
    }

    /**
     * Sets <code>value</code> for variable BindCldId.
     * @param value value to bind as BindCldId
     */
    public void setBindCldId(String value) {
        ensureVariableManager().setVariableValue("BindCldId", value);
    }

    /**
     * Returns the variable value for BindHoOrgId.
     * @return variable value for BindHoOrgId
     */
    public String getBindHoOrgId() {
        return (String)ensureVariableManager().getVariableValue("BindHoOrgId");
    }

    /**
     * Sets <code>value</code> for variable BindHoOrgId.
     * @param value value to bind as BindHoOrgId
     */
    public void setBindHoOrgId(String value) {
        ensureVariableManager().setVariableValue("BindHoOrgId", value);
    }

    /**
     * Returns the variable value for BindActv.
     * @return variable value for BindActv
     */
    public String getBindActv() {
        return (String)ensureVariableManager().getVariableValue("BindActv");
    }

    /**
     * Sets <code>value</code> for variable BindActv.
     * @param value value to bind as BindActv
     */
    public void setBindActv(String value) {
        ensureVariableManager().setVariableValue("BindActv", value);
    }

    /**
     * Returns the variable value for BindGrpId.
     * @return variable value for BindGrpId
     */
    public String getBindGrpId() {
        return (String)ensureVariableManager().getVariableValue("BindGrpId");
    }

    /**
     * Sets <code>value</code> for variable BindGrpId.
     * @param value value to bind as BindGrpId
     */
    public void setBindGrpId(String value) {
        ensureVariableManager().setVariableValue("BindGrpId", value);
    }
    @Override
        public void applyViewCriteria(ViewCriteria viewCriteria, boolean b) {
       // System.out.println("View Critera with boolean");
            super.applyViewCriteria(supressStartsWithClauseForLov(viewCriteria), b);
        }
        
        public ViewCriteria supressStartsWithClauseForLov(ViewCriteria vc){
          //  System.out.println("===========================");
          //  System.out.println( "  outside " + vc.getName());
            if(vc != null && vc.getName().contains("__lov__filterlist__vcr__")){
            //    System.out.println( "  Inside " + vc.getName());
                ViewCriteriaRow currentRow = (ViewCriteriaRow)vc.getCurrentRow();
                if(currentRow != null){
             //       System.out.println(" Current row "+currentRow );
                    List criteriaItems = currentRow.getCriteriaItems();
                    for(int i = 0 ; i < criteriaItems.size() ; i++){
                        ViewCriteriaItem object = (ViewCriteriaItem)criteriaItems.get(i);
                        if(object != null){
                   //         System.out.println("Operator is : "+object.getOperator());
                            if("STARTSWITH".equals(object.getOperator())){
                                object.setOperator("CONTAINS");
                            }
                        }
                    }
                }
            }
            return vc;
        }
}
