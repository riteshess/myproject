package slsreportapp.model.views;

import javax.el.ELContext;
import javax.el.ValueExpression;

import oracle.adf.share.ADFContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 02 14:47:05 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TransSearchTemplate {
            public Object get(SearchVORowImpl obj) {
                return obj.getTransSearchTemplate();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTransSearchTemplate((String) value);
            }
        }
        ,
        TransMdlId {
            public Object get(SearchVORowImpl obj) {
                return obj.getTransMdlId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTransMdlId((Integer) value);
            }
        }
        ,
        GDocIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getGDocIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setGDocIdTrans((Integer) value);
            }
        }
        ,
        ViewNmSchmTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getViewNmSchmTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setViewNmSchmTrans((String) value);
            }
        }
        ,
        ViewDescTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getViewDescTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setViewDescTrans((String) value);
            }
        }
        ,
        ViewAliasTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getViewAliasTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setViewAliasTrans((String) value);
            }
        }
        ,
        SchmNmTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getSchmNmTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                
                obj.setSchmNmTrans((calcModule()));
            }
        }
        ,
        AppNmTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getAppNmTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAppNmTrans((String) value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String) value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setCldIdTrans((String) value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer) value);
            }
        }
        ,
        TransMdlDescTempNm {
            public Object get(SearchVORowImpl obj) {
                return obj.getTransMdlDescTempNm();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTransMdlDescTempNm((String) value);
            }
        }
        ,
        TransMdlDescTempId {
            public Object get(SearchVORowImpl obj) {
                return obj.getTransMdlDescTempId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTransMdlDescTempId((String) value);
            }
        }
        ,
        AppNameVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getAppNameVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVViewNmVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getLOVViewNmVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVSchmNmVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getLOVSchmNmVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ColDataTypeVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getColDataTypeVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsRptMdlVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getSlsRptMdlVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SLsRptMdlTabVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getSLsRptMdlTabVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsRptMdlColParaVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getSlsRptMdlColParaVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppRptMdlTabVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getAppRptMdlTabVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SearchVORowImpl object);

        public abstract void put(SearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int TRANSSEARCHTEMPLATE = AttributesEnum.TransSearchTemplate.index();
    public static final int TRANSMDLID = AttributesEnum.TransMdlId.index();
    public static final int GDOCIDTRANS = AttributesEnum.GDocIdTrans.index();
    public static final int VIEWNMSCHMTRANS = AttributesEnum.ViewNmSchmTrans.index();
    public static final int VIEWDESCTRANS = AttributesEnum.ViewDescTrans.index();
    public static final int VIEWALIASTRANS = AttributesEnum.ViewAliasTrans.index();
    public static final int SCHMNMTRANS = AttributesEnum.SchmNmTrans.index();
    public static final int APPNMTRANS = AttributesEnum.AppNmTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int TRANSMDLDESCTEMPNM = AttributesEnum.TransMdlDescTempNm.index();
    public static final int TRANSMDLDESCTEMPID = AttributesEnum.TransMdlDescTempId.index();
    public static final int APPNAMEVO1 = AttributesEnum.AppNameVO1.index();
    public static final int LOVVIEWNMVO1 = AttributesEnum.LOVViewNmVO1.index();
    public static final int LOVSCHMNMVO1 = AttributesEnum.LOVSchmNmVO1.index();
    public static final int COLDATATYPEVO1 = AttributesEnum.ColDataTypeVO1.index();
    public static final int SLSRPTMDLVO1 = AttributesEnum.SlsRptMdlVO1.index();
    public static final int SLSRPTMDLTABVO1 = AttributesEnum.SLsRptMdlTabVO1.index();
    public static final int SLSRPTMDLCOLPARAVO1 = AttributesEnum.SlsRptMdlColParaVO1.index();
    public static final int APPRPTMDLTABVO1 = AttributesEnum.AppRptMdlTabVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSearchTemplate.
     * @return the TransSearchTemplate
     */
    public String getTransSearchTemplate() {
        return (String) getAttributeInternal(TRANSSEARCHTEMPLATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSearchTemplate.
     * @param value value to set the  TransSearchTemplate
     */
    public void setTransSearchTemplate(String value) {
        setAttributeInternal(TRANSSEARCHTEMPLATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMdlId.
     * @return the TransMdlId
     */
    public Integer getTransMdlId() {
        return (Integer) getAttributeInternal(TRANSMDLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMdlId.
     * @param value value to set the  TransMdlId
     */
    public void setTransMdlId(Integer value) {
        setAttributeInternal(TRANSMDLID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GDocIdTrans.
     * @return the GDocIdTrans
     */
    public Integer getGDocIdTrans() {
        if(resolvEl("#{pageFlowScope.PFORM_ID}").toString() != null){
            Integer glblDocId=Integer.parseInt(resolvEl("#{pageFlowScope.PFORM_ID}").toString());
            return glblDocId;
            }else
       return (Integer) getAttributeInternal(GDOCIDTRANS);
    }
    public static Object resolvEl(String data) {
           ADFContext adfCtx = ADFContext.getCurrent();
           ELContext elContext = adfCtx.getELContext();
           ValueExpression valueExp = adfCtx.getExpressionFactory().createValueExpression(elContext, data, Object.class);
           String Message = valueExp.getValue(elContext).toString();
           return Message;
       }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GDocIdTrans.
     * @param value value to set the  GDocIdTrans
     */
    public void setGDocIdTrans(Integer value) {
        setAttributeInternal(GDOCIDTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ViewNmSchmTrans.
     * @return the ViewNmSchmTrans
     */
    public String getViewNmSchmTrans() {
        return (String) getAttributeInternal(VIEWNMSCHMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ViewNmSchmTrans.
     * @param value value to set the  ViewNmSchmTrans
     */
    public void setViewNmSchmTrans(String value) {
        setAttributeInternal(VIEWNMSCHMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ViewDescTrans.
     * @return the ViewDescTrans
     */
    public String getViewDescTrans() {
        return (String) getAttributeInternal(VIEWDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ViewDescTrans.
     * @param value value to set the  ViewDescTrans
     */
    public void setViewDescTrans(String value) {
        setAttributeInternal(VIEWDESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ViewAliasTrans.
     * @return the ViewAliasTrans
     */
    public String getViewAliasTrans() {
        return (String) getAttributeInternal(VIEWALIASTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ViewAliasTrans.
     * @param value value to set the  ViewAliasTrans
     */
    public void setViewAliasTrans(String value) {
        setAttributeInternal(VIEWALIASTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SchmNmTrans.
     * @return the SchmNmTrans
     */
    public String getSchmNmTrans() {
    
      return calcModule();
      //return (String) getAttributeInternal(SCHMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchmNmTrans.
     * @param value value to set the  SchmNmTrans
     */
    public void setSchmNmTrans(String value) {
       
        setAttributeInternal(SCHMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AppNmTrans.
     * @return the AppNmTrans
     */
    public String getAppNmTrans() {
        return (String) getAttributeInternal(APPNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AppNmTrans.
     * @param value value to set the  AppNmTrans
     */
    public void setAppNmTrans(String value) {
        setAttributeInternal(APPNMTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString() != null){
            String orgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            System.out.println("OrgId--"+orgId);
            return orgId;
            }else
        return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString() != null){
            String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            System.out.println("CLdId------"+cldId);
            return cldId;
            }else
        return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!= null){
            Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            System.out.println("slocId----"+slocId);
            return slocId;
            }else
        return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMdlDescTempNm.
     * @return the TransMdlDescTempNm
     */
    public String getTransMdlDescTempNm() {
        return (String) getAttributeInternal(TRANSMDLDESCTEMPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMdlDescTempNm.
     * @param value value to set the  TransMdlDescTempNm
     */
    public void setTransMdlDescTempNm(String value) {
        setAttributeInternal(TRANSMDLDESCTEMPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransMdlDescTempId.
     * @return the TransMdlDescTempId
     */
    public String getTransMdlDescTempId() {
        return (String) getAttributeInternal(TRANSMDLDESCTEMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransMdlDescTempId.
     * @param value value to set the  TransMdlDescTempId
     */
    public void setTransMdlDescTempId(String value) {
        setAttributeInternal(TRANSMDLDESCTEMPID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppNameVO1.
     */
    public RowSet getAppNameVO1() {
        return (RowSet) getAttributeInternal(APPNAMEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVViewNmVO1.
     */
    public RowSet getLOVViewNmVO1() {
        return (RowSet) getAttributeInternal(LOVVIEWNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchmNmVO1.
     */
    public RowSet getLOVSchmNmVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ColDataTypeVO1.
     */
    public RowSet getColDataTypeVO1() {
        return (RowSet) getAttributeInternal(COLDATATYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsRptMdlVO1.
     */
    public RowSet getSlsRptMdlVO1() {
        return (RowSet) getAttributeInternal(SLSRPTMDLVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SLsRptMdlTabVO1.
     */
    public RowSet getSLsRptMdlTabVO1() {
        return (RowSet) getAttributeInternal(SLSRPTMDLTABVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsRptMdlColParaVO1.
     */
    public RowSet getSlsRptMdlColParaVO1() {
        return (RowSet) getAttributeInternal(SLSRPTMDLCOLPARAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppRptMdlTabVO1.
     */
    public RowSet getAppRptMdlTabVO1() {
        return (RowSet) getAttributeInternal(APPRPTMDLTABVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    public static String calcModule(){
        Integer glblDocId = Integer.parseInt(resolvEl("#{pageFlowScope.PFORM_ID}").toString());
        // vo.setNamedWhereClauseParam("BindGlblDocId", glblDocId);
        String Module="";
        System.out.println("GLOBAL DOC ID___________" + glblDocId);
        if(glblDocId==18524){
            Module="MM";
        } else if(glblDocId==18526){
            Module="MM";
        }else if(glblDocId==21511){
            Module="SLS";
        } else if(glblDocId==11516){
            Module="FIN";        
        } else if(glblDocId==11517){
            Module="FIN";
        } else if(glblDocId==11518){
            Module="FIN";   
        } else if(glblDocId==29503){
            Module="HCM";
        } else if(glblDocId==24501){
            Module="MNF";
        } else if(glblDocId==23010){
            Module="SVC";
        }
        
        return Module;
    }
  
}

