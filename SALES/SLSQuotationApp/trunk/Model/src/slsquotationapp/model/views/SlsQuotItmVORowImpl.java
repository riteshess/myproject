package slsquotationapp.model.views;

import adf.utils.bean.ADFBeanUtils;
import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slsquotationapp.model.entities.SlsQuotItmEOImpl;
import slsquotationapp.model.module.SlsQuotationAppAMImpl;
import slsquotationapp.model.module.common.SlsQuotationAppAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 30 18:59:44 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsQuotItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSQUOTITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        SrNo {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSrNo((Integer) value);
            }
        }
        ,
        ItmId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmId((String) value);
            }
        }
        ,
        ItmPrice {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number) value);
            }
        }
        ,
        ItmUom {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmUom((String) value);
            }
        }
        ,
        QuotQty {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getQuotQty();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setQuotQty((Number) value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTlrncQtyType((String) value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTlrncQtyVal((Number) value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number) value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number) value);
            }
        }
        ,
        SchId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSchId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSchId((String) value);
            }
        }
        ,
        ItmDiscTyp {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmDiscTyp();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmDiscTyp((String) value);
            }
        }
        ,
        ItmDiscVal {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmDiscVal();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmDiscVal((Number) value);
            }
        }
        ,
        Remarks {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        ItemNameTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItemNameTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItemNameTrans((String) value);
            }
        }
        ,
        TotalValueTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTotalValueTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTotalValueTrans((Number) value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String) value);
            }
        }
        ,
        ConversionFactTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getConversionFactTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TaxAmountTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTaxAmountTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTaxAmountTrans((Number) value);
            }
        }
        ,
        ItmBasicTotwithDiscount {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmBasicTotwithDiscount();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmBasicTotwithDiscount((Number) value);
            }
        }
        ,
        SchemeNameTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSchemeNameTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSchemeNameTrans((String) value);
            }
        }
        ,
        SchmId {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSchmId();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSchmId((String) value);
            }
        }
        ,
        ItmUomBs {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String) value);
            }
        }
        ,
        DiscountValueTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getDiscountValueTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setDiscountValueTrans((Number) value);
            }
        }
        ,
        ItmAmtGsBs {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmAmtGsBs();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmAmtGsBs((Number) value);
            }
        }
        ,
        ItmAmtGsSp {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmAmtGsSp();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmAmtGsSp((Number) value);
            }
        }
        ,
        IsTaxInclusiveTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getIsTaxInclusiveTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setIsTaxInclusiveTrans((Boolean) value);
            }
        }
        ,
        TaxRuleIdTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getTaxRuleIdTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setTaxRuleIdTrans((Integer) value);
            }
        }
        ,
        EnablePriceFieldTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getEnablePriceFieldTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setEnablePriceFieldTrans((String) value);
            }
        }
        ,
        ItmQtyBs {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmQtyBs();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmQtyBs((Number) value);
            }
        }
        ,
        UomConvFctr {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number) value);
            }
        }
        ,
        SchmFlg {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSchmFlg();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setSchmFlg((String) value);
            }
        }
        ,
        ItmGrpIdTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getItmGrpIdTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setItmGrpIdTrans((String) value);
            }
        }
        ,
        EoIdFromHeadTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getEoIdFromHeadTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setEoIdFromHeadTrans((Integer) value);
            }
        }
        ,
        EoCatgIdFromHeadTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getEoCatgIdFromHeadTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setEoCatgIdFromHeadTrans((Integer) value);
            }
        }
        ,
        EoExecIdFromHeadTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getEoExecIdFromHeadTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setEoExecIdFromHeadTrans((Integer) value);
            }
        }
        ,
        CountSchmDataTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getCountSchmDataTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setCountSchmDataTrans((Long) value);
            }
        }
        ,
        CategoryIdTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getCategoryIdTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setCategoryIdTrans((Integer) value);
            }
        }
        ,
        DocDtFromHeadTrans {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getDocDtFromHeadTrans();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setDocDtFromHeadTrans((Timestamp) value);
            }
        }
        ,
        EoPartNo {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getEoPartNo();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setEoPartNo((String) value);
            }
        }
        ,
        SlsQuot {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSlsQuot();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsQuotTr {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSlsQuotTr();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsQuotItmSch {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getSlsQuotItmSch();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVAppSecUserVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVAppSecUserVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVItemVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVItemVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVUOMVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVUOMVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVDiscTypVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVDiscTypVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVSchemeVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVSchemeVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVTlrncTypeVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVTlrncTypeVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVSchmNameVO1 {
            public Object get(SlsQuotItmVORowImpl obj) {
                return obj.getLOVSchmNameVO1();
            }

            public void put(SlsQuotItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static int firstIndex = 0;

        public abstract Object get(SlsQuotItmVORowImpl object);

        public abstract void put(SlsQuotItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    private int AMT_DIGIT = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}"));


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int QUOTQTY = AttributesEnum.QuotQty.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int SCHID = AttributesEnum.SchId.index();
    public static final int ITMDISCTYP = AttributesEnum.ItmDiscTyp.index();
    public static final int ITMDISCVAL = AttributesEnum.ItmDiscVal.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITEMNAMETRANS = AttributesEnum.ItemNameTrans.index();
    public static final int TOTALVALUETRANS = AttributesEnum.TotalValueTrans.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int CONVERSIONFACTTRANS = AttributesEnum.ConversionFactTrans.index();
    public static final int TAXAMOUNTTRANS = AttributesEnum.TaxAmountTrans.index();
    public static final int ITMBASICTOTWITHDISCOUNT = AttributesEnum.ItmBasicTotwithDiscount.index();
    public static final int SCHEMENAMETRANS = AttributesEnum.SchemeNameTrans.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int DISCOUNTVALUETRANS = AttributesEnum.DiscountValueTrans.index();
    public static final int ITMAMTGSBS = AttributesEnum.ItmAmtGsBs.index();
    public static final int ITMAMTGSSP = AttributesEnum.ItmAmtGsSp.index();
    public static final int ISTAXINCLUSIVETRANS = AttributesEnum.IsTaxInclusiveTrans.index();
    public static final int TAXRULEIDTRANS = AttributesEnum.TaxRuleIdTrans.index();
    public static final int ENABLEPRICEFIELDTRANS = AttributesEnum.EnablePriceFieldTrans.index();
    public static final int ITMQTYBS = AttributesEnum.ItmQtyBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int SCHMFLG = AttributesEnum.SchmFlg.index();
    public static final int ITMGRPIDTRANS = AttributesEnum.ItmGrpIdTrans.index();
    public static final int EOIDFROMHEADTRANS = AttributesEnum.EoIdFromHeadTrans.index();
    public static final int EOCATGIDFROMHEADTRANS = AttributesEnum.EoCatgIdFromHeadTrans.index();
    public static final int EOEXECIDFROMHEADTRANS = AttributesEnum.EoExecIdFromHeadTrans.index();
    public static final int COUNTSCHMDATATRANS = AttributesEnum.CountSchmDataTrans.index();
    public static final int CATEGORYIDTRANS = AttributesEnum.CategoryIdTrans.index();
    public static final int DOCDTFROMHEADTRANS = AttributesEnum.DocDtFromHeadTrans.index();
    public static final int EOPARTNO = AttributesEnum.EoPartNo.index();
    public static final int SLSQUOT = AttributesEnum.SlsQuot.index();
    public static final int SLSQUOTTR = AttributesEnum.SlsQuotTr.index();
    public static final int SLSQUOTITMSCH = AttributesEnum.SlsQuotItmSch.index();
    public static final int LOVAPPSECUSERVO1 = AttributesEnum.LOVAppSecUserVO1.index();
    public static final int LOVITEMVO1 = AttributesEnum.LOVItemVO1.index();
    public static final int LOVUOMVO1 = AttributesEnum.LOVUOMVO1.index();
    public static final int LOVDISCTYPVO1 = AttributesEnum.LOVDiscTypVO1.index();
    public static final int LOVSCHEMEVO1 = AttributesEnum.LOVSchemeVO1.index();
    public static final int LOVTLRNCTYPEVO1 = AttributesEnum.LOVTlrncTypeVO1.index();
    public static final int LOVSCHMNAMEVO1 = AttributesEnum.LOVSchmNameVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsQuotItmVORowImpl() {
    }

    /**
     * Gets SlsQuotItmEO entity object.
     * @return the SlsQuotItmEO
     */
    public SlsQuotItmEOImpl getSlsQuotItmEO() {
        return (SlsQuotItmEOImpl) getEntity(ENTITY_SLSQUOTITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_DT using the alias name DocDt.
     * @return the DOC_DT
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT using the alias name DocDt.
     * @param value value to set the DOC_DT
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setEnablePriceFieldTrans(null);
        if (value != null) {
            SlsQuotationAppAMImpl applicationModule = (SlsQuotationAppAMImpl) getApplicationModule();
            Boolean b = applicationModule.isItmIdValid(new StringBuffer(value));
            //System.out.println("Returned " + b);
            if (b == true) {
                //System.out.println("Setting itemId to : " + value);
                setAttributeInternal(ITMID, value);
                itmNm = null;
                // setItmIdTrans(null);
            }
        } else {
            setAttributeInternal(ITMID, value);
            itmNm = null;
        }
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        if ((Number) getAttributeInternal(ITMPRICE) == null) {
            return new Number(0);
        } else {

            return (Number) getAttributeInternal(ITMPRICE);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if (value == null) {
            value = new Number(0);
            setAttributeInternal(ITMPRICE, value.round(AMT_DIGIT));
        } else {
            setAttributeInternal(ITMPRICE, value.round(AMT_DIGIT));
        }
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for QUOT_QTY using the alias name QuotQty.
     * @return the QUOT_QTY
     */
    public Number getQuotQty() {
        if ((Number) getAttributeInternal(QUOTQTY) == null) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(QUOTQTY);
        }

    }

    /**
     * Sets <code>value</code> as attribute value for QUOT_QTY using the alias name QuotQty.
     * @param value value to set the QUOT_QTY
     */
    public void setQuotQty(Number value) {
        if (value == null) {
            value = new Number(0);
            setAttributeInternal(QUOTQTY, value.round(AMT_DIGIT));
        } else {
            setAttributeInternal(QUOTQTY, value.round(AMT_DIGIT));
        }

    }

    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String) getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public Number getTlrncQtyVal() {
        if ((Number) getAttributeInternal(TLRNCQTYVAL) == null) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(TLRNCQTYVAL);
        }

    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(Number value) {
        if (value == null) {
            setAttributeInternal(TLRNCQTYVAL, new Number(0).round(AMT_DIGIT));
        } else {
            setAttributeInternal(TLRNCQTYVAL, value.round(AMT_DIGIT));
        }

    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value.round(AMT_DIGIT));
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public Number getItmAmtSp() {
        if (getAttributeInternal(ITMAMTSP) == null) {
            return new Number(0);
        }
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(Number value) {
        Number amt = value;
SlsQuotationAppAMImpl am=(SlsQuotationAppAMImpl)getApplicationModule();
        Object stt =am.getSlsQuot1().getCurrentRow().getAttribute("CurrConvFctr");
        Number cc = new Number(1);
        if (stt != null) {
            cc = (Number) stt;
        }
        //System.out.println("Cc : "+cc);
        /* BigDecimal existingAmt =
            (getAttributeInternal(ITMAMTGSSP) == null ? new BigDecimal(0) : (BigDecimal)getAttributeInternal(ITMAMTGSSP)); */
        Number existingAmt =
            (getAttributeInternal(ITMAMTGSSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTGSSP));
        try {
            // Number val = new Number(existingAmt);
            if (value.compareTo(existingAmt) != 0) {
               // System.out.println("Done----------");
                setItmAmtGsSp(amt);
                setItmAmtGsBs(value.multiply(cc));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        //System.out.println("Gross Sp : "+amt);
        //System.out.println("Gross Bs : "+amt.multiply(cc));
        if (IsTaxInclusive().equals("Y")) {
            amt = amt.subtract(getTaxAmountTrans());
            /* BigDecimal eAmt =
                (getAttributeInternal(ITMAMTSP) == null ? new BigDecimal(0) : (BigDecimal)getAttributeInternal(ITMAMTSP)); */
            Number eAmt =
                (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTSP));
            if (value.compareTo(eAmt) != 0) {
                setAttributeInternal(ITMAMTSP, amt.round(AMT_DIGIT));
                setItmAmtBs(amt.multiply(cc));
            }
        } else {
            /* BigDecimal eAmt =
                (getAttributeInternal(ITMAMTSP) == null ? new BigDecimal(0) : (BigDecimal)getAttributeInternal(ITMAMTSP)); */
            Number eAmt =
                (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number) getAttributeInternal(ITMAMTSP));
            if (value.compareTo(eAmt) != 0) {
                setAttributeInternal(ITMAMTSP, amt.round(AMT_DIGIT));
                setItmAmtBs(amt.multiply(cc));
            }
        }
        //System.out.println("Amt sp : "+getItmAmtSp());
        //System.out.println("Amt bs : "+getItmAmtBs());

    }

    /**
     * Gets the attribute value for SCH_ID using the alias name SchId.
     * @return the SCH_ID
     */
    public String getSchId() {
        return (String) getAttributeInternal(SCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCH_ID using the alias name SchId.
     * @param value value to set the SCH_ID
     */
    public void setSchId(String value) {
        setAttributeInternal(SCHID, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @return the ITM_DISC_TYP
     */
    public String getItmDiscTyp() {
        if (getAttributeInternal(ITMDISCTYP) == null) {
            setItmDiscTyp("A");
        }
        return (String) getAttributeInternal(ITMDISCTYP);

    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @param value value to set the ITM_DISC_TYP
     */
    public void setItmDiscTyp(String value) {
        setAttributeInternal(ITMDISCTYP, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @return the ITM_DISC_VAL
     */
    public Number getItmDiscVal() {
        if ((Number) getAttributeInternal(ITMDISCVAL) == null) {
            return new Number(0);
        } else {
            return (Number) getAttributeInternal(ITMDISCVAL);
        }
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @param value value to set the ITM_DISC_VAL
     */
    public void setItmDiscVal(Number value) {
       // System.out.println("Setting discount val to : " + value);
        if (value == null) {
            value = new Number(0);
           setAttributeInternal(ITMDISCVAL,value);
        } else {
            setAttributeInternal(ITMDISCVAL,value);
        }
    }


    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameTrans.
     * @return the ItemNameTrans
     */
    private String itmNm = null;

    public String getItemNameTrans() {
        if(getItmId() != null && itmNm==null){
            //System.out.println("in getter:::"+getItmId());
            itmNm = EbizParams.getItemDescFrmItmId(getAm(), getItmId());System.out.println("itm nm :::: "+itmNm);
        }
        return itmNm;
    
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameTrans.
     * @param value value to set the  ItemNameTrans
     */
    public void setItemNameTrans(String value) {
        setAttributeInternal(ITEMNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalValueTrans.
     * @return the TotalValueTrans
     */
    public Number getTotalValueTrans() {
        Number n = new Number(0);
        Number totalPrice = this.getQuotQty().multiply(this.getItmPrice());
        Number discountValue = DiscountValue();
        n = totalPrice.subtract(discountValue);
        this.setItmAmtSp(n);
        if (this.getIsTaxInclusiveTrans() == true) {
            n = getItmAmtSp().add(getTaxAmountTrans());
        } else {
            n = n.add(getTaxAmountTrans());
        }
        return n;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalValueTrans.
     * @param value value to set the  TotalValueTrans
     */
    public void setTotalValueTrans(Number value) {
        setAttributeInternal(TOTALVALUETRANS, value.round(AMT_DIGIT));
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String) getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConversionFactTrans.
     * @return the ConversionFactTrans
     */
    public Number getConversionFactTrans() {
        return (Number) getAttributeInternal(CONVERSIONFACTTRANS);
    }


    /**
     * Gets the attribute value for the calculated attribute TaxAmountTrans.
     * @return the TaxAmountTrans
     */
    public Number getTaxAmountTrans() {

        if (this.getSlsQuotTr() == null) {
            return new Number(0);
        } else if (this.getSlsQuotTr().getAttribute("TaxAmtBs") == null) {
            return new Number(0);
        } else {
            return ((Number) this.getSlsQuotTr().getAttribute("TaxAmtBs")).divide(this.getConversionFactTrans());
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxAmountTrans.
     * @param value value to set the  TaxAmountTrans
     */
    public void setTaxAmountTrans(Number value) {
        setAttributeInternal(TAXAMOUNTTRANS, value.round(AMT_DIGIT));
    }

    /**
     * Gets the attribute value for the calculated attribute ItmBasicTotwithDiscount.
     * @return the ItmBasicTotwithDiscount
     */
    public Number getItmBasicTotwithDiscount() {
        Number n = (Number) this.getTaxAmountTrans().minus(this.getTaxAmountTrans());
        return n;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmBasicTotwithDiscount.
     * @param value value to set the  ItmBasicTotwithDiscount
     */
    public void setItmBasicTotwithDiscount(Number value) {
        setAttributeInternal(ITMBASICTOTWITHDISCOUNT, value.round(AMT_DIGIT));
    }

    /**
     * Gets the attribute value for the calculated attribute SchemeNameTrans.
     * @return the SchemeNameTrans
     */
    public String getSchemeNameTrans() {
       // System.out.println("schm Id is outside "+getSchmId());
        if (getAttributeInternal(SCHEMENAMETRANS) == null && getSchmId() != null){
       // System.out.println("schm Id is inside "+getSchmId());
            String schNmVar =null;
            SlsQuotationAppAMImpl am = (SlsQuotationAppAMImpl)getApplicationModule();
            ViewObjectImpl impl = am.getLOVSchemeName1();
                impl.setNamedWhereClauseParam("P_CLD_ID", getCldId());
            impl.setNamedWhereClauseParam("P_HO_ORG_ID", getHoOrgId());
            impl.setNamedWhereClauseParam("P_SCHM_DOC_ID", getSchmId());
            impl.setNamedWhereClauseParam("P_SLOC_ID", getSlocId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if(allRowsInRange.length>0){
                schNmVar =  allRowsInRange[0].getAttribute("SchmNm").toString();
                //System.out.println("scheme name is "+schNmVar);
                }
            setSchemeNameTrans(schNmVar);
          // return schNmVar;
        }
     return (String) getAttributeInternal(SCHEMENAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SchemeNameTrans.
     * @param value value to set the  SchemeNameTrans
     */
    public void setSchemeNameTrans(String value) {
        setAttributeInternal(SCHEMENAMETRANS, value);
    }

    /**
     * Gets the attribute value for SCHM_ID using the alias name SchmId.
     * @return the SCHM_ID
     */
    public String getSchmId() {
        return (String) getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_ID using the alias name SchmId.
     * @param value value to set the SCHM_ID
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
        setSchemeNameTrans(null);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiscountValueTrans.
     * @return the DiscountValueTrans
     */
    public Number getDiscountValueTrans() {
        return DiscountValue();
        //return (String) getAttributeInternal(DISCOUNTVALUETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiscountValueTrans.
     * @param value value to set the  DiscountValueTrans
     */
    public void setDiscountValueTrans(Number value) {
        setAttributeInternal(DISCOUNTVALUETRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @return the ITM_AMT_GS_BS
     */
    public Number getItmAmtGsBs() {
        return (Number) getAttributeInternal(ITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @param value value to set the ITM_AMT_GS_BS
     */
    public void setItmAmtGsBs(Number value) {
        if (value!=null) {
            value = ADFBeanUtils.roundOff(value);
        }
        setAttributeInternal(ITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @return the ITM_AMT_GS_SP
     */
    public Number getItmAmtGsSp() {
        return (Number) getAttributeInternal(ITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @param value value to set the ITM_AMT_GS_SP
     */
    public void setItmAmtGsSp(Number value) {
        setAttributeInternal(ITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IsTaxInclusiveTrans.
     * @return the IsTaxInclusiveTrans
     */
    public Boolean getIsTaxInclusiveTrans() {
        if (IsTaxInclusive().equals("Y")) {
            return true;
        } else {
            return false;
        }
        //return (Boolean) getAttributeInternal(ISTAXINCLUSIVETRANS);
    }

    private String IsTaxInclusive() {
        Integer idTrans = this.getTaxRuleIdTrans();
        StringBuffer typ = new StringBuffer("N");
        try {
            if (getTaxRuleFlg().equals("Y")) {
                Object taxType = callStoredFunction(Types.VARCHAR, "SLS.FN_SLS_CHK_TR_TYPE(?,?,?,?)", new Object[] {
                                                    getCldId(), getSlocId(), getHoOrgId(), idTrans
                });
                typ = (taxType != null ? new StringBuffer(taxType.toString()) : new StringBuffer("N"));
              //  System.out.println("Tax Inculsive : " + typ);
            }

        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        return typ.toString();
    }

    private Number DiscountValue() {
        Number pric = this.getItmPrice();
        Number qty = this.getQuotQty();
        Number disval = this.getItmDiscVal();
        String disTyp = this.getItmDiscTyp();
        Number amt = new Number(0);
        Number hund = new Number(100);
        if (disTyp.equalsIgnoreCase("A")) {
            amt = disval;
        } else if (disTyp.equalsIgnoreCase("P")) {
            amt = ((pric.multiply(qty.multiply(disval)).divide(hund)));
        }
        //System.out.println("Discount  : "+amt);
        return amt;
    }


    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            /* FacesMessage msg=new FacesMessage(e.getMessage());
            msg.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, msg); */

            throw new JboException(e.getMessage());
            // throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IsTaxInclusiveTrans.
     * @param value value to set the  IsTaxInclusiveTrans
     */
    public void setIsTaxInclusiveTrans(Boolean value) {
        setAttributeInternal(ISTAXINCLUSIVETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TaxRuleIdTrans.
     * @return the TaxRuleIdTrans
     */
    public Integer getTaxRuleIdTrans() {
        return (Integer) getAttributeInternal(TAXRULEIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TaxRuleIdTrans.
     * @param value value to set the  TaxRuleIdTrans
     */
    public void setTaxRuleIdTrans(Integer value) {
        setAttributeInternal(TAXRULEIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EnablePriceFieldTrans.
     * @return the EnablePriceFieldTrans
     */
    public String getEnablePriceFieldTrans() {
        if (getAttributeInternal(ENABLEPRICEFIELDTRANS) == null && getItmId() != null) {
            SlsQuotationAppAMImpl am = (SlsQuotationAppAMImpl) this.getApplicationModule();
            StringBuffer b = new StringBuffer("");
            if ("Y".equals(am.checkPolicyApplied().toString())) {
                Row row = am.getSlsQuot1().getCurrentRow();
                Integer eoId = (row.getAttribute("EoId") == null ? 0 : (Integer) row.getAttribute("EoId"));
                BigDecimal policyPrice = new BigDecimal(-4);
                if (eoId != 0 && getItmId() != null) {
                    policyPrice =
                        (BigDecimal) callStoredFunction(Types.NUMERIC, "APP.APP_GET_POLICY_PRICE(?,?,?,?,?,?,?)", new Object[] {
                                                        getCldId(), getSlocId(), getHoOrgId(), getOrgId(), eoId,
                                                        getItmId(), "SO"
                    });

                }
               // System.out.println("_____________________ !" + policyPrice);
                if (policyPrice == null) {
                    b = new StringBuffer("Y");
                } else if (policyPrice.compareTo(new BigDecimal(0)) == 0) {
                    b = new StringBuffer("Y");
                } else {
                    b = new StringBuffer("N");
                }
            } else {
                b = new StringBuffer("Y");
                StringBuffer priceEditableInProfile = am.checkforProfileValues(new StringBuffer("EDIT_EO_PRICE"));
              //  System.out.println("Editable price : " + priceEditableInProfile);

                if ("Y".equals(priceEditableInProfile.toString())) {
                    b = new StringBuffer("Y");
                    
                } else {
                    b = new StringBuffer("N");
                }
            }
            setEnablePriceFieldTrans(b.toString());
          //  System.out.println("Enable field value : " + b);
        }
        return (String) getAttributeInternal(ENABLEPRICEFIELDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EnablePriceFieldTrans.
     * @param value value to set the  EnablePriceFieldTrans
     */
    public void setEnablePriceFieldTrans(String value) {
        setAttributeInternal(ENABLEPRICEFIELDTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @return the ITM_QTY_BS
     */
    public Number getItmQtyBs() {
        return (Number) getAttributeInternal(ITMQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @param value value to set the ITM_QTY_BS
     */
    public void setItmQtyBs(Number value) {
        /*  if(value!=null){
            value = value.multiply(getUomConvFctr());
        } */
        setAttributeInternal(ITMQTYBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for SCHM_FLG using the alias name SchmFlg.
     * @return the SCHM_FLG
     */
    public String getSchmFlg() {
        return (String) getAttributeInternal(SCHMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_FLG using the alias name SchmFlg.
     * @param value value to set the SCHM_FLG
     */
    public void setSchmFlg(String value) {
        setAttributeInternal(SCHMFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpIdTrans.
     * @return the ItmGrpIdTrans
     */
    public String getItmGrpIdTrans() {
        if (getAttributeInternal(ITMGRPIDTRANS) == null && this.getItmId() != null) {
            ViewObjectImpl impl = getAm().getLOVItemIdVO1();
            impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            impl.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            String itmGrp = null;
            if (allRowsInRange.length > 0) {
                Object a = allRowsInRange[0].getAttribute("GrpId");
                itmGrp = (a == null ? null : a.toString());
            }
            return itmGrp;
        }
        return (String) getAttributeInternal(ITMGRPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmGrpIdTrans.
     * @param value value to set the  ItmGrpIdTrans
     */
    public void setItmGrpIdTrans(String value) {
        setAttributeInternal(ITMGRPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdFromHeadTrans.
     * @return the EoIdFromHeadTrans
     */
    public Integer getEoIdFromHeadTrans() {
        if (getAttributeInternal(EOIDFROMHEADTRANS) == null) {
            Row row = this.getSlsQuot();
            Object EoId = row.getAttribute("EoId");
           // System.out.println("Eo Id is " + EoId);
            return (Integer) EoId;
        }
        return (Integer) getAttributeInternal(EOIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdFromHeadTrans.
     * @param value value to set the  EoIdFromHeadTrans
     */
    public void setEoIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoCatgIdFromHeadTrans.
     * @return the EoCatgIdFromHeadTrans
     */
    public Integer getEoCatgIdFromHeadTrans() {
        if (getAttributeInternal(EOCATGIDFROMHEADTRANS) == null) {
            Row row = this.getSlsQuot();
            Object EoCatgId = row.getAttribute("CategoryTrans");
            Integer eoIdFromHeadTrans = this.getEoIdFromHeadTrans();
            ViewObjectImpl eoId1 = getAm().getLOVCustomer1();
            eoId1.setRangeSize(-1);
            Row[] filteredRows = eoId1.getFilteredRows("EoId", eoIdFromHeadTrans);
            // System.out.println("Filtered Rows "+filteredRows.length);
            if (filteredRows.length > 0) {
                Object CatgId = filteredRows[0].getAttribute("CatgId");
                EoCatgId = CatgId;
            }
           // System.out.println("Cat id " + EoCatgId);
            return (Integer) EoCatgId;
        }
        return (Integer) getAttributeInternal(EOCATGIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoCatgIdFromHeadTrans.
     * @param value value to set the  EoCatgIdFromHeadTrans
     */
    public void setEoCatgIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOCATGIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoExecIdFromHeadTrans.
     * @return the EoExecIdFromHeadTrans
     */
    public Integer getEoExecIdFromHeadTrans() {
        if (getAttributeInternal(EOEXECIDFROMHEADTRANS) == null) {
            Row row = this.getSlsQuot();
            Object execId = row.getAttribute("AssignedTo");
            System.out.println("execid " + execId);
            return (Integer) execId;
        }
        return (Integer) getAttributeInternal(EOEXECIDFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoExecIdFromHeadTrans.
     * @param value value to set the  EoExecIdFromHeadTrans
     */
    public void setEoExecIdFromHeadTrans(Integer value) {
        setAttributeInternal(EOEXECIDFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CountSchmDataTrans.
     * @return the CountSchmDataTrans
     */
    public Long getCountSchmDataTrans() {
        long count = this.getLOVSchemeVO1().getEstimatedRowCount();
        //System.out.println("Count of Rows is "+count);
        return count;
        //return (Long) getAttributeInternal(COUNTSCHMDATATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CountSchmDataTrans.
     * @param value value to set the  CountSchmDataTrans
     */
    public void setCountSchmDataTrans(Long value) {
        setAttributeInternal(COUNTSCHMDATATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CategoryIdTrans.
     * @return the CategoryIdTrans
     */
    public Integer getCategoryIdTrans() {
        if (getAttributeInternal(CATEGORYIDTRANS) == null) {
            Row row = this.getSlsQuot();
            Object categoryId = row.getAttribute("EoCatg");
            //System.out.println("Eo Id is " + categoryId);
            return (Integer) categoryId;
        }
        return (Integer) getAttributeInternal(CATEGORYIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CategoryIdTrans.
     * @param value value to set the  CategoryIdTrans
     */
    public void setCategoryIdTrans(Integer value) {
        setAttributeInternal(CATEGORYIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocDtFromHeadTrans.
     * @return the DocDtFromHeadTrans
     */
    public Timestamp getDocDtFromHeadTrans() {
        if(getAttributeInternal(DOCDTFROMHEADTRANS) == null){
        Row row = this.getSlsQuot();
        Object docDt = row.getAttribute("DocDt");
        //System.out.println("Eo Id is " + categoryId);
        return (Timestamp) docDt;
        }
        return (Timestamp) getAttributeInternal(DOCDTFROMHEADTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocDtFromHeadTrans.
     * @param value value to set the  DocDtFromHeadTrans
     */
    public void setDocDtFromHeadTrans(Timestamp value) {
        setAttributeInternal(DOCDTFROMHEADTRANS, value);
    }

    /**
     * Gets the attribute value for EO_PART_NO using the alias name EoPartNo.
     * @return the EO_PART_NO
     */
    public String getEoPartNo() {
        return (String) getAttributeInternal(EOPARTNO);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_PART_NO using the alias name EoPartNo.
     * @param value value to set the EO_PART_NO
     */
    public void setEoPartNo(String value) {
        setAttributeInternal(EOPARTNO, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsQuot.
     */
    public Row getSlsQuot() {
        return (Row) getAttributeInternal(SLSQUOT);
    }

    /**
     * Sets the master-detail link SlsQuot between this object and <code>value</code>.
     */
    public void setSlsQuot(Row value) {
        setAttributeInternal(SLSQUOT, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link SlsQuotTr.
     */
    public Row getSlsQuotTr() {
        return (Row) getAttributeInternal(SLSQUOTTR);
    }

    /**
     * Sets the master-detail link SlsQuotTr between this object and <code>value</code>.
     */
    public void setSlsQuotTr(Row value) {
        setAttributeInternal(SLSQUOTTR, value);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsQuotItmSch.
     */
    public RowIterator getSlsQuotItmSch() {
        return (RowIterator) getAttributeInternal(SLSQUOTITMSCH);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAppSecUserVO1.
     */
    public RowSet getLOVAppSecUserVO1() {
        return (RowSet) getAttributeInternal(LOVAPPSECUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemVO1.
     */
    public RowSet getLOVItemVO1() {
        return (RowSet) getAttributeInternal(LOVITEMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUOMVO1.
     */
    public RowSet getLOVUOMVO1() {
        return (RowSet) getAttributeInternal(LOVUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDiscTypVO1.
     */
    public RowSet getLOVDiscTypVO1() {
        return (RowSet) getAttributeInternal(LOVDISCTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchemeVO1.
     */
    public RowSet getLOVSchemeVO1() {
        return (RowSet) getAttributeInternal(LOVSCHEMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTlrncTypeVO1.
     */
    public RowSet getLOVTlrncTypeVO1() {
        return (RowSet) getAttributeInternal(LOVTLRNCTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchmNameVO1.
     */
    public RowSet getLOVSchmNameVO1() {
        return (RowSet) getAttributeInternal(LOVSCHMNAMEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * Method for resolving the El
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public SlsQuotationAppAMImpl getAm() {
        SlsQuotationAppAMImpl am = (SlsQuotationAppAMImpl) getApplicationModule();
        return am;
    }
}
