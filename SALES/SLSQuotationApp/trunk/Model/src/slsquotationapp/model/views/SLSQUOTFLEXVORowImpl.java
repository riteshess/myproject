package slsquotationapp.model.views;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.sql.Timestamp;

import java.sql.Types;

import java.text.DateFormat;
import java.text.SimpleDateFormat;

import java.util.Date;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewCriteria;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slsquotationapp.model.module.SlsQuotationAppAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 05 14:58:28 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SLSQUOTFLEXVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSQUOTFLEXEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        HoOrgId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        OrgId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        DocId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        FieldId {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFieldId();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFieldId((String) value);
            }
        },
        FieldVal {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFieldVal();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFieldVal((String) value);
            }
        },
        DataType {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getDataType();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setDataType((Integer) value);
            }
        },
        DataLen {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getDataLen();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setDataLen((Integer) value);
            }
        },
        Reqd {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getReqd();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setReqd((String) value);
            }
        },
        UsrIdCreate {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Long) value);
            }
        },
        UsrIdCreateDt {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setUsrIdMod((Long) value);
            }
        },
        UsrIdModDt {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        },
        TransFieldNM {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getTransFieldNM();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setTransFieldNM((String) value);
            }
        },
        FldValNum {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFldValNum();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFldValNum((Number) value);
            }
        },
        FldValString {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFldValString();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFldValString((String) value);
            }
        },
        FldValBol {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFldValBol();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFldValBol((String) value);
            }
        },
        FldValDate {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getFldValDate();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setFldValDate((Timestamp) value);
            }
        },
        TransHasLov {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getTransHasLov();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setTransHasLov((String) value);
            }
        },
        TransFld {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getTransFld();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setTransFld((String) value);
            }
        },
        LovQueryForFlexFieldsVO1 {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getLovQueryForFlexFieldsVO1();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovQueryForFlexLovVO1 {
            public Object get(SLSQUOTFLEXVORowImpl obj) {
                return obj.getLovQueryForFlexLovVO1();
            }

            public void put(SLSQUOTFLEXVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public abstract Object get(SLSQUOTFLEXVORowImpl object);

        public abstract void put(SLSQUOTFLEXVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FIELDID = AttributesEnum.FieldId.index();
    public static final int FIELDVAL = AttributesEnum.FieldVal.index();
    public static final int DATATYPE = AttributesEnum.DataType.index();
    public static final int DATALEN = AttributesEnum.DataLen.index();
    public static final int REQD = AttributesEnum.Reqd.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSFIELDNM = AttributesEnum.TransFieldNM.index();
    public static final int FLDVALNUM = AttributesEnum.FldValNum.index();
    public static final int FLDVALSTRING = AttributesEnum.FldValString.index();
    public static final int FLDVALBOL = AttributesEnum.FldValBol.index();
    public static final int FLDVALDATE = AttributesEnum.FldValDate.index();
    public static final int TRANSHASLOV = AttributesEnum.TransHasLov.index();
    public static final int TRANSFLD = AttributesEnum.TransFld.index();
    public static final int LOVQUERYFORFLEXFIELDSVO1 = AttributesEnum.LovQueryForFlexFieldsVO1.index();
    public static final int LOVQUERYFORFLEXLOVVO1 = AttributesEnum.LovQueryForFlexLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SLSQUOTFLEXVORowImpl() {
    }

    /**
     * Gets SLSQUOTFLEXEO entity object.
     * @return the SLSQUOTFLEXEO
     */
    public EntityImpl getSLSQUOTFLEXEO() {
        return (EntityImpl) getEntity(ENTITY_SLSQUOTFLEXEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FIELD_ID using the alias name FieldId.
     * @return the FIELD_ID
     */
    public String getFieldId() {
        return (String) getAttributeInternal(FIELDID);
    }

    /**
     * Sets <code>value</code> as attribute value for FIELD_ID using the alias name FieldId.
     * @param value value to set the FIELD_ID
     */
    public void setFieldId(String value) {
        setAttributeInternal(FIELDID, value);
    }

    /**
     * Gets the attribute value for FIELD_VAL using the alias name FieldVal.
     * @return the FIELD_VAL
     */
    public String getFieldVal() {
        return (String) getAttributeInternal(FIELDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for FIELD_VAL using the alias name FieldVal.
     * @param value value to set the FIELD_VAL
     */
    public void setFieldVal(String value) {
        setAttributeInternal(FIELDVAL, value);
    }

    /**
     * Gets the attribute value for DATA_TYPE using the alias name DataType.
     * @return the DATA_TYPE
     */
    public Integer getDataType() {
        return (Integer) getAttributeInternal(DATATYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_TYPE using the alias name DataType.
     * @param value value to set the DATA_TYPE
     */
    public void setDataType(Integer value) {
        setAttributeInternal(DATATYPE, value);
    }

    /**
     * Gets the attribute value for DATA_LEN using the alias name DataLen.
     * @return the DATA_LEN
     */
    public Integer getDataLen() {
        return (Integer) getAttributeInternal(DATALEN);
    }

    /**
     * Sets <code>value</code> as attribute value for DATA_LEN using the alias name DataLen.
     * @param value value to set the DATA_LEN
     */
    public void setDataLen(Integer value) {
        setAttributeInternal(DATALEN, value);
    }

    /**
     * Gets the attribute value for REQD using the alias name Reqd.
     * @return the REQD
     */
    public String getReqd() {
        return (String) getAttributeInternal(REQD);
    }

    /**
     * Sets <code>value</code> as attribute value for REQD using the alias name Reqd.
     * @param value value to set the REQD
     */
    public void setReqd(String value) {
        setAttributeInternal(REQD, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Long getUsrIdCreate() {
        return (Long) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Long value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Long getUsrIdMod() {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Long value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFieldNM.
     * @return the TransFieldNM
     */

    /**
     * Gets the attribute value for the calculated attribute TransFieldNM.
     * @return the TransFieldNM
     */
    public String getTransFieldNM() {
        if (getFieldId() != null && getAttributeInternal(TRANSFIELDNM) == null) {
            SlsQuotationAppAMImpl am = (SlsQuotationAppAMImpl) getApplicationModule();

            ViewObjectImpl fields1 = am.getLovQueryForFlexFieldsVO1();
            fields1.setNamedWhereClauseParam("bindCldId", EbizParams.GLBL_APP_CLD_ID());

            fields1.executeQuery();
            Row[] ftrRows = fields1.getFilteredRows("FldId", getFieldId());
            System.out.println("Total no of rows : for flexi field ::::: " + ftrRows);
            String fieldNm = null;
            if (ftrRows.length > 0) {
                fieldNm = ftrRows[0].getAttribute("FldNm") == null ? " " : ftrRows[0].getAttribute("FldNm").toString();
            }
            System.out.println("fieldNm" + fieldNm);
            return fieldNm;
        }
        return (String) getAttributeInternal(TRANSFIELDNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFieldNM.
     * @param value value to set the  TransFieldNM
     */
    public void setTransFieldNM(String value) {
        setAttributeInternal(TRANSFIELDNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FldValNum.
     * @return the FldValNum
     */
    public Number getFldValNum() {
        Number val = new Number(0);
        if (getFieldVal() != null && getDataType().compareTo(758) == 0) {
            try {
                val = new Number(getFieldVal());
            } catch (Exception e) {
                System.out.println("Exception  occured::" + e);
            }
            return (val);
        }
        return (Number) getAttributeInternal(FLDVALNUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FldValNum.
     * @param value value to set the  FldValNum
     */
    public void setFldValNum(Number value) {
        if (value != null) {
            String num = value.toString();
            setFieldVal(num);
        }
        setAttributeInternal(FLDVALNUM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute FldValString.
     * @return the FldValString
     */
    public String getFldValString() {
        if (getFieldVal() != null && getDataType().compareTo(757) == 0) {
            return (getFieldVal());
        }
        return (String) getAttributeInternal(FLDVALSTRING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FldValString.
     * @param value value to set the  FldValString
     */
    public void setFldValString(String value) {
        if (value != null) {
            setFieldVal(value);
        }
        setAttributeInternal(FLDVALSTRING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FldValBol.
     * @return the FldValBol
     */
    public String getFldValBol() {
        if (getFieldVal() != null && getDataType().compareTo(759) == 0) {
            return (getFieldVal());
        }
        return (String) getAttributeInternal(FLDVALBOL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FldValBol.
     * @param value value to set the  FldValBol
     */
    public void setFldValBol(String value) {
        if (value != null) {
            System.out.println("Value of Boll::" + value);
            setFieldVal(value);
        }
        setAttributeInternal(FLDVALBOL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FldValDate.
     * @return the FldValDate
     */
    public Timestamp getFldValDate() {
        if (getFieldVal() != null && getDataType().compareTo(756) == 0) {
            try {
                final String OLD_FORMAT = "yyyy-MM-dd";
                final String NEW_FORMAT = "yyyy-MM-dd HH:mm:ss.SSS";
                String oldDateString = getFieldVal();
                String newDateString;

                DateFormat formatter = new SimpleDateFormat(OLD_FORMAT);
                Date d = formatter.parse(oldDateString);
                ((SimpleDateFormat) formatter).applyPattern(NEW_FORMAT);
                newDateString = formatter.format(d);
                // System.out.println(newDateString);

                Timestamp ts = Timestamp.valueOf(newDateString);
                //  System.out.println(ts);
                return (ts);
            } catch (Exception e) {
                // System.out.println("Exception  occured:::" + e);
            }
        }
        return (Timestamp) getAttributeInternal(FLDVALDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FldValDate.
     * @param value value to set the  FldValDate
     */
    public void setFldValDate(Timestamp value) {
        if (value != null) {
            String date = value.toString();
            setFieldVal(date);
        }
        setAttributeInternal(FLDVALDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHasLov.
     * @return the TransHasLov
     */
    public String getTransHasLov() {

        SlsQuotationAppAMImpl am = (SlsQuotationAppAMImpl) this.getApplicationModule();

        if (getFieldId() != null) {
            Object o = null;
            String retunVal = null;
            try {
                o = ADFModelUtils.callFunction(am, new StringBuilder("fn_sls_flx_fld_Lov (?,?,?)"), new Object[] {
                                               EbizParams.GLBL_APP_CLD_ID(), 21502, getFieldId()
                }, Types.VARCHAR);
                if (o != null) {
                    retunVal = o.toString();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            return retunVal;
        }
        return (String) getAttributeInternal(TRANSHASLOV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHasLov.
     * @param value value to set the  TransHasLov
     */
    public void setTransHasLov(String value) {
        setAttributeInternal(TRANSHASLOV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFld.
     * @return the TransFld
     */
    public String getTransFld() {
        if (getTransHasLov().equalsIgnoreCase("Y")) {
            return getFieldVal();
        }
        return (String) getAttributeInternal(TRANSFLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFld.
     * @param value value to set the  TransFld
     */
    public void setTransFld(String value) {
        setAttributeInternal(TRANSFLD, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQueryForFlexFieldsVO1.
     */
    public RowSet getLovQueryForFlexFieldsVO1() {
        return (RowSet) getAttributeInternal(LOVQUERYFORFLEXFIELDSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQueryForFlexLovVO1.
     */
    public RowSet getLovQueryForFlexLovVO1() {
        return (RowSet) getAttributeInternal(LOVQUERYFORFLEXLOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

