package slspricevssalesanalysisapp.model.services;

import adf.utils.bean.StaticValue;
import adf.utils.ebiz.EbizParams;

import java.sql.SQLException;

import oracle.jbo.domain.Timestamp;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import java.util.Calendar;
import java.util.Date;

import java.util.Locale;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;


import slspricevssalesanalysisapp.model.services.common.SLSPriceVsSalesAnalysisAM;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 20 12:59:22 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SLSPriceVsSalesAnalysisAMImpl extends ApplicationModuleImpl implements SLSPriceVsSalesAnalysisAM {
    /**
     * This is the default constructor (do not remove).
     */
    public SLSPriceVsSalesAnalysisAMImpl() {
    }

    /**
     * Container's getter for SLSPriceVsSalesVO1.
     * @return SLSPriceVsSalesVO1
     */
    public ViewObjectImpl getSLSPriceVsSalesVO1() {
        return (ViewObjectImpl) findViewObject("SLSPriceVsSalesVO1");
    }

    public void setInitialVariables() {
        //        getSLSPriceVsSalesVO1().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        //        getSLSPriceVsSalesVO1().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        //        getSLSPriceVsSalesVO1().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        //        getSLSPriceVsSalesVO1().setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        //        getSLSPriceVsSalesVO1().executeQuery();
        setBindValuesPriceQtyBsLineGraph();
        setBindValuesPriceQtyBsTableView();
        setBindValuesDualPriceVsDemand();
    }

    public void setBindValuesPriceQtyBsLineGraph() {
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getSLSPriceVsQtyBsLineGraph().executeQuery();
    }

    public void setBindValuesPriceQtyBsTableView() {
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        getSLSPriceVsQtyBsTableView().executeQuery();
    }

    public void setBindValuesDualPriceVsDemand() {
        getDualForSearchPriceVsDemands().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        getDualForSearchPriceVsDemands().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        getDualForSearchPriceVsDemands().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        getDualForSearchPriceVsDemands().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        // getSLSPriceVsQtyBsLineGraph().executeQuery();
    }

    /**
     * Container's getter for SLSPriceVsSoVO1.
     * @return SLSPriceVsSoVO1
     */
    public ViewObjectImpl getSLSPriceVsSoVO1() {
        return (ViewObjectImpl) findViewObject("SLSPriceVsSoVO1");
    }

    /**
     * Container's getter for SLSProfitabilityVO1.
     * @return SLSProfitabilityVO1
     */
    public ViewObjectImpl getSLSProfitabilityVO1() {
        return (ViewObjectImpl) findViewObject("SLSProfitabilityVO1");
    }

    /**
     *  Method to set Initial Bind variables for Sales Profitability
     */
    public void setInitialVarInSlsProfilability() {
        getSLSProfitabilityVO1().setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        getSLSProfitabilityVO1().setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        getSLSProfitabilityVO1().setNamedWhereClauseParam("HoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        getSLSProfitabilityVO1().setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        getSLSProfitabilityVO1().executeQuery();
    }

    /**
     * Container's getter for SLSProfitabilityVO2.
     * @return SLSProfitabilityVO2
     */
    public ViewObjectImpl getSLSProfitabilityVOForTableView() {
        return (ViewObjectImpl) findViewObject("SLSProfitabilityVOForTableView");
    }

    /**
     *Method to filter profit data based on graph selection
     * @param frmDt
     * @param toDt
     */
    public void setDataFilterOnProfitabilityTable(Timestamp frmDt, Timestamp toDt) {
        if (frmDt != null && toDt != null) {
            frmDt = StaticValue.getTruncatedDt(frmDt);
            toDt = StaticValue.getTruncatedDt(toDt);
            Date fromDate = null;
            Date toDate = null;
            try {
                fromDate = frmDt.dateValue();
                toDate = toDt.dateValue();
            } catch (Exception e) {
                e.printStackTrace();
            }

            System.out.println(fromDate + " ============== From ");
            System.out.println(toDate + " ============== To ");
            //getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("CldIdBind", fromDate);
            // getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("SlocIdBind", toDate);
            // getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("OrgIdBind", fromDate);
            //getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("HoOrgIdBind", toDate);
            //getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("ItmId", fromDate);
            // getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("EoIdBind", toDate);
            getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("FrmDtBind", fromDate);
            getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("ToDtBind", toDate);

            getSLSProfitabilityVOForTableView().executeQuery();
            System.out.println(getSLSProfitabilityVOForTableView().getRowCount() + " after filter");
        }
    }

    /**
     * Method to reset the table for profit view
     */
    public void resetProfitabilityTable() {
        getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("FrmDtBind", null);
        getSLSProfitabilityVOForTableView().setNamedWhereClauseParam("ToDtBind", null);

        getSLSProfitabilityVOForTableView().executeQuery();
    }

    /**
     * Container's getter for SLSPriceVsSo1.
     * @return SLSPriceVsSo1
     */
    public ViewObjectImpl getSLSPriceVsForTableView() {
        return (ViewObjectImpl) findViewObject("SLSPriceVsForTableView");
    }


    /**
     * Container's getter for SLSPriceVsQtyBs1.
     * @return SLSPriceVsQtyBs1
     */
    public ViewObjectImpl getSLSPriceVsQtyBsLineGraph() {
        return (ViewObjectImpl) findViewObject("SLSPriceVsQtyBsLineGraph");
    }

    /**
     * Container's getter for SLSPriceVsQtyBs2.
     * @return SLSPriceVsQtyBs2
     */
    public ViewObjectImpl getSLSPriceVsQtyBsTableView() {
        return (ViewObjectImpl) findViewObject("SLSPriceVsQtyBsTableView");
    }

    /**
     * Container's getter for DualForSearchPriceVsDemands1.
     * @return DualForSearchPriceVsDemands1
     */
    public ViewObjectImpl getDualForSearchPriceVsDemands() {
        return (ViewObjectImpl) findViewObject("DualForSearchPriceVsDemands");
    }

    /**
     * Method to search the price vs demands
     */

    public void searchPriceVsDemands() {
        Row curRow = getDualForSearchPriceVsDemands().getCurrentRow();

        Object strtDate = curRow.getAttribute("FromDate");
        Object endDate = curRow.getAttribute("ToDate");
        Object itmId = curRow.getAttribute("ItemId");
        System.out.println(strtDate + " ==================== Start Date");
        System.out.println(endDate + " ==================== End Date");
        Date fromDate = null;
        Date toDate = null;
        if (strtDate != null) {
            Timestamp st = (Timestamp) strtDate;
            try {
                fromDate = st.dateValue();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (endDate != null) {
            Timestamp end = (Timestamp) endDate;
            try {
                toDate = end.dateValue();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindItmId", itmId);
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("FrmDtBind", fromDate);
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("ToDtBind", toDate);
        getSLSPriceVsQtyBsLineGraph().executeQuery();
       // System.out.println("Query : " + getSLSPriceVsQtyBsLineGraph().getQuery());

        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindItmId", itmId);
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("FrmDtBind", fromDate);
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("ToDtBind", toDate);
        getSLSPriceVsQtyBsTableView().executeQuery();
    }

    /**
     * Method to Reset the price vs demands
     */
    public void resetPriceVsDemands() {
        getDualForSearchPriceVsDemands().executeQuery();
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindItmId", null);
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("FrmDtBind", null);
        getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("ToDtBind", null);
        getSLSPriceVsQtyBsLineGraph().executeQuery();

        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("BindItmId", null);
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("FrmDtBind", null);
        getSLSPriceVsQtyBsTableView().setNamedWhereClauseParam("ToDtBind", null);
        getSLSPriceVsQtyBsTableView().executeQuery();
        
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindCldId", null);
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindSlocId", null);
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindHoOrgId",null);
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindOrgId", null);
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("FrmDtBind",null);
        getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("ToDtBind", null);
        getPriceVsDemand2ndLevelItem1().executeQuery();
        
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindCldId", null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindSlocId", null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindHoOrgId", null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindOrgId", null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindItmId",null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("FrmDtBind", null);
        getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("ToDtBind", null);
        getPriceVsDemand3rdLevelInvoice1().executeQuery();
    }

    /**
     * Meemthod to set Values for Price Vs Demand Item level 2
     */
    public void filterItemFrPriceVsDemand() {
        Row curRow = getSLSPriceVsQtyBsTableView().getCurrentRow();
        if (curRow != null) {
            String curMont = curRow.getAttribute("MnthYear").toString();
            System.out.println(curMont + " Current Month");
           /// String mont = curMont.substring(0, 3);
           // System.out.println(mont + " Month");
                       
            String dateString = "01-".concat(curMont);       
            System.out.println(dateString + " Start Date in String");
            Date today = new Date(dateString);  

            Calendar calendar = Calendar.getInstance();  
            calendar.setTime(today);  

            calendar.add(Calendar.MONTH, 1);  
            calendar.set(Calendar.DAY_OF_MONTH, 1);  
            calendar.add(Calendar.DATE, -1);  

            Date lastDayOfMonth = calendar.getTime();  

            DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  
            System.out.println("Today            : " + sdf.format(today));  
            System.out.println("Last Day of Month: " + sdf.format(lastDayOfMonth));
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("FrmDtBind", sdf.format(today));
            getPriceVsDemand2ndLevelItem1().setNamedWhereClauseParam("ToDtBind", sdf.format(lastDayOfMonth));
            getPriceVsDemand2ndLevelItem1().executeQuery();
            
          //  getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("FrmDtBind", sdf.format(today));
         //   getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("ToDtBind", sdf.format(lastDayOfMonth));
          //  getSLSPriceVsQtyBsLineGraph().executeQuery();
           
        }
    }
    /**
     * Meemthod to set Values for Price Vs Demand Invoice level 3
     */
    public void filterInvoiceFrPriceVsDemand() {
        Row curRow = getPriceVsDemand2ndLevelItem1().getCurrentRow();
        if (curRow != null) {
            String curMont = curRow.getAttribute("MnthYear").toString();
            String itmId = curRow.getAttribute("ItmId").toString();
            System.out.println(curMont + " Current Month");
            String mont = curMont.substring(0, 3);
            System.out.println(mont + " Month");
                       
            String dateString = "01-".concat(curMont);       
            System.out.println(dateString + " Start Date in String");
            Date today = new Date(dateString);  

            Calendar calendar = Calendar.getInstance();  
            calendar.setTime(today);  

            calendar.add(Calendar.MONTH, 1);  
            calendar.set(Calendar.DAY_OF_MONTH, 1);  
            calendar.add(Calendar.DATE, -1);  

            Date lastDayOfMonth = calendar.getTime();  

            DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");  
            System.out.println("Today            : " + sdf.format(today));  
            System.out.println("Last Day of Month: " + sdf.format(lastDayOfMonth));
            System.out.println(itmId + " Current Item Id");
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("BindItmId", itmId);
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("FrmDtBind", sdf.format(today));
            getPriceVsDemand3rdLevelInvoice1().setNamedWhereClauseParam("ToDtBind", sdf.format(lastDayOfMonth));
            getPriceVsDemand3rdLevelInvoice1().executeQuery();
            
            getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("BindItmId", itmId);
          //  getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("FrmDtBind", sdf.format(today));
          //  getSLSPriceVsQtyBsLineGraph().setNamedWhereClauseParam("ToDtBind", sdf.format(lastDayOfMonth));
            getSLSPriceVsQtyBsLineGraph().executeQuery();
           
        }
    }

    /**
     * Container's getter for PriceVsDemand2ndLevelItem1.
     * @return PriceVsDemand2ndLevelItem1
     */
    public ViewObjectImpl getPriceVsDemand2ndLevelItem1() {
        return (ViewObjectImpl) findViewObject("PriceVsDemand2ndLevelItem1");
    }

    /**
     * Container's getter for PriceVsDemand3rdLevelInvoice1.
     * @return PriceVsDemand3rdLevelInvoice1
     */
    public ViewObjectImpl getPriceVsDemand3rdLevelInvoice1() {
        return (ViewObjectImpl) findViewObject("PriceVsDemand3rdLevelInvoice1");
    }
}

