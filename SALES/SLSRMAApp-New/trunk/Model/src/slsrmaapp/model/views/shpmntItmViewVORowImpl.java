package slsrmaapp.model.views;

import adf.utils.bean.ADFBeanUtils;
import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slsrmaapp.model.services.SlsRmaAppAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 04 14:28:58 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class shpmntItmViewVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EoId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        WhId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        DocId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        DocDt {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ShipmntQty {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getShipmntQty();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmUom {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmPrice {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmAmtSp {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmAmtBs {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CurrIdSp {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CurrIdBs {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getCurrIdBs();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CurrConvFctr {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmDesc {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        PickId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getPickId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SoId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getSoId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        UomConvFctr {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItmUomBs {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ShipmntId {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getShipmntId();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        rejectedQuantTrans {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getrejectedQuantTrans();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setrejectedQuantTrans((Number) value);
            }
        },
        RetrnQtyForGeItem {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getRetrnQtyForGeItem();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setRetrnQtyForGeItem((Number) value);
            }
        },
        ReturnQtyForShip {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getReturnQtyForShip();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setReturnQtyForShip((Number) value);
            }
        },
        BSrejectedQuantTrans {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getBSrejectedQuantTrans();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setBSrejectedQuantTrans((Number) value);
            }
        },
        ItemNameLovVO1 {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItemNameLovVO1();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ItemUomDescLovVO1 {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getItemUomDescLovVO1();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovPickIdVO1 {
            public Object get(shpmntItmViewVORowImpl obj) {
                return obj.getLovPickIdVO1();
            }

            public void put(shpmntItmViewVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(shpmntItmViewVORowImpl object);

        public abstract void put(shpmntItmViewVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EOID = AttributesEnum.EoId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SHIPMNTQTY = AttributesEnum.ShipmntQty.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRIDBS = AttributesEnum.CurrIdBs.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int PICKID = AttributesEnum.PickId.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int SHIPMNTID = AttributesEnum.ShipmntId.index();
    public static final int REJECTEDQUANTTRANS = AttributesEnum.rejectedQuantTrans.index();
    public static final int RETRNQTYFORGEITEM = AttributesEnum.RetrnQtyForGeItem.index();
    public static final int RETURNQTYFORSHIP = AttributesEnum.ReturnQtyForShip.index();
    public static final int BSREJECTEDQUANTTRANS = AttributesEnum.BSrejectedQuantTrans.index();
    public static final int ITEMNAMELOVVO1 = AttributesEnum.ItemNameLovVO1.index();
    public static final int ITEMUOMDESCLOVVO1 = AttributesEnum.ItemUomDescLovVO1.index();
    public static final int LOVPICKIDVO1 = AttributesEnum.LovPickIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public shpmntItmViewVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }


    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = null;
        if (valueExp.getValue(elContext) != null)
            msg = valueExp.getValue(elContext).toString();
        else
            msg = null;
        return msg;
    }


    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }


    /**
     * Gets the attribute value for the calculated attribute ShipmntQty.
     * @return the ShipmntQty
     */
    public Number getShipmntQty() {
        return (Number) getAttributeInternal(SHIPMNTQTY);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmPrice.
     * @return the ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmAmtSp.
     * @return the ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }


    /**
     * Gets the attribute value for the calculated attribute CurrIdSp.
     * @return the CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }


    /**
     * Gets the attribute value for the calculated attribute CurrIdBs.
     * @return the CurrIdBs
     */
    public Integer getCurrIdBs() {
        return (Integer) getAttributeInternal(CURRIDBS);
    }


    /**
     * Gets the attribute value for the calculated attribute CurrConvFctr.
     * @return the CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute PickId.
     * @return the PickId
     */
    public String getPickId() {
        return (String) getAttributeInternal(PICKID);
    }

    /**
     * Gets the attribute value for the calculated attribute SoId.
     * @return the SoId
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Gets the attribute value for the calculated attribute UomConvFctr.
     * @return the UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmntId.
     * @return the ShipmntId
     */
    public String getShipmntId() {
        return (String) getAttributeInternal(SHIPMNTID);
    }

    /**
     * Gets the attribute value for the calculated attribute rejectedQuantTrans.
     * @return the rejectedQuantTrans
     */
    public Number getrejectedQuantTrans() {
        Number QTY = new Number(0);
        if (getAttributeInternal(REJECTEDQUANTTRANS) == null) {
            SlsRmaAppAMImpl am = (SlsRmaAppAMImpl) getApplicationModule();
            ViewObjectImpl vo = am.getSlsRmaItem2();
            Row rw[] = vo.getFilteredRows("ItmId", this.getItmId());

            System.out.println("no of rows in slalrma vo is =" + rw.length);
            if (rw.length > 0)
                for (Integer i = 0; i < rw.length; i++) {
                    System.out.println("now i am in row set ioterator");
                    QTY = (Number) rw[i].getAttribute("RcptQty");
                }
            return QTY;
        } else {
            return (Number) getAttributeInternal(REJECTEDQUANTTRANS);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute rejectedQuantTrans.
     * @param value value to set the  rejectedQuantTrans
     */
    public void setrejectedQuantTrans(Number value) {
        if (value != null) {
            SlsRmaAppAMImpl am = (SlsRmaAppAMImpl) getApplicationModule();
            ViewObjectImpl impl = am.getItemNameLov1();
            impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            impl.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            impl.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            impl.setNamedWhereClauseParam("BindItemId", getItmId());
            impl.executeQuery();
            Row[] itmRw = impl.getFilteredRows("ItmId", getItmId());
            System.out.println("Filtered rows length for itm serialised query :: " + itmRw.length);
            if (itmRw.length > 0) {
                System.out.println("Serialized flag is :::: " + itmRw[0].getAttribute("SerializedFlg"));
                String srFlg = itmRw[0].getAttribute("SerializedFlg").toString();
                if (srFlg.equalsIgnoreCase("Y")) {
                    value = ADFBeanUtils.roundOff(0, value);
                }
            }

        }
        setAttributeInternal(REJECTEDQUANTTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute RetrnQtyForGeItem.
     * @return the RetrnQtyForGeItem
     */
    public Number getRetrnQtyForGeItem() {
        Number geQty = new Number(0);
        Row r = getAM().getSlsRmaItmTemp2().getCurrentRow();
        if (r != null) {
            Object itm = r.getAttribute("ItmId");
            if (itm != null && getItmId().equalsIgnoreCase(itm.toString())) {
                Object qty = getAM().getSlsRmaItmTemp2().getCurrentRow().getAttribute("GeQty");
                geQty = qty == null ? new Number(0) : (Number) qty;
            }
        }
        return geQty;
        //return (Number) getAttributeInternal(RETRNQTYFORGEITEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RetrnQtyForGeItem.
     * @param value value to set the  RetrnQtyForGeItem
     */
    public void setRetrnQtyForGeItem(Number value) {
        setAttributeInternal(RETRNQTYFORGEITEM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReturnQtyForShip.
     * @return the ReturnQtyForShip
     */
    public Number getReturnQtyForShip() {
        return (Number) getAttributeInternal(RETURNQTYFORSHIP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReturnQtyForShip.
     * @param value value to set the  ReturnQtyForShip
     */
    public void setReturnQtyForShip(Number value) {
        setAttributeInternal(RETURNQTYFORSHIP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BSrejectedQuantTrans.
     * @return the BSrejectedQuantTrans
     */
    public Number getBSrejectedQuantTrans() {
        //return (Number) getAttributeInternal(BSREJECTEDQUANTTRANS);
        Number QTY = new Number(0);
        if (getAttributeInternal(BSREJECTEDQUANTTRANS) == null) {
            SlsRmaAppAMImpl am = (SlsRmaAppAMImpl) getApplicationModule();
            ViewObjectImpl vo = am.getSlsRmaItem2();
            Row rw[] = vo.getFilteredRows("ItmId", this.getItmId());

            // System.out.println("no of rows in slalrma vo is =" + rw.length);
            if (rw.length > 0)
                for (Integer i = 0; i < rw.length; i++) {
                    //   System.out.println("now i am in row set ioterator");
                    QTY = (Number) rw[i].getAttribute("ItmQtyBs");
                }
            return QTY;
        } else {
            return (Number) getAttributeInternal(BSREJECTEDQUANTTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BSrejectedQuantTrans.
     * @param value value to set the  BSrejectedQuantTrans
     */
    public void setBSrejectedQuantTrans(Number value) {
        if (value != null) {
            SlsRmaAppAMImpl am = (SlsRmaAppAMImpl) getApplicationModule();
            ViewObjectImpl impl = am.getItemNameLov1();
            impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            impl.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            impl.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            impl.setNamedWhereClauseParam("BindItemId", getItmId());
            impl.executeQuery();
            Row[] itmRw = impl.getFilteredRows("ItmId", getItmId());
            System.out.println("Filtered rows length for itm serialised query :: " + itmRw.length);
            if (itmRw.length > 0) {
                System.out.println("Serialized flag is :::: " + itmRw[0].getAttribute("SerializedFlg"));
                String srFlg = itmRw[0].getAttribute("SerializedFlg").toString();
                if (srFlg.equalsIgnoreCase("Y")) {
                    value = ADFBeanUtils.roundOff(0, value);
                }
            }

        }
        setAttributeInternal(BSREJECTEDQUANTTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemNameLovVO1.
     */
    public RowSet getItemNameLovVO1() {
        return (RowSet) getAttributeInternal(ITEMNAMELOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemUomDescLovVO1.
     */
    public RowSet getItemUomDescLovVO1() {
        return (RowSet) getAttributeInternal(ITEMUOMDESCLOVVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovPickIdVO1.
     */
    public RowSet getLovPickIdVO1() {
        return (RowSet) getAttributeInternal(LOVPICKIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    public Integer getparamSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
    }

    public Integer getparamUsrId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
    }

    public String getparamOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
    }

    public String getparamCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
    }

    public String getparamHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }


    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    protected SlsRmaAppAMImpl getAM() {
        return (SlsRmaAppAMImpl) getApplicationModule();
    }
}
