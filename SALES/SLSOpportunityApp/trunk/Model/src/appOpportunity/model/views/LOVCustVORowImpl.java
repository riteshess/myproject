package appOpportunity.model.views;

import java.math.BigDecimal;
import java.math.BigInteger;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 22 15:03:40 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVCustVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        EoType {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getEoType();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setEoType((Integer)value);
            }
        }
        ,
        EoId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        CashCust {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getCashCust();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setCashCust((String)value);
            }
        }
        ,
        EoNm {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getEoNm();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setEoNm((String)value);
            }
        }
        ,
        CatgId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getCatgId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setCatgId((Integer)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setCurrIdSp((BigInteger)value);
            }
        }
        ,
        NaId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getNaId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setNaId((BigInteger)value);
            }
        }
        ,
        CoaId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setCoaId((BigInteger)value);
            }
        }
        ,
        ConvFctr {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getConvFctr();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setConvFctr((BigDecimal)value);
            }
        }
        ,
        EoSmanId {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getEoSmanId();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setEoSmanId((BigInteger)value);
            }
        }
        ,
        DfltBillAdds {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getDfltBillAdds();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setDfltBillAdds((String)value);
            }
        }
        ,
        LOVEoTypeVO1 {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getLOVEoTypeVO1();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVEoCatVO1 {
            public Object get(LOVCustVORowImpl obj) {
                return obj.getLOVEoCatVO1();
            }

            public void put(LOVCustVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LOVCustVORowImpl object);

        public abstract void put(LOVCustVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int EOTYPE = AttributesEnum.EoType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int CASHCUST = AttributesEnum.CashCust.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int CATGID = AttributesEnum.CatgId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int NAID = AttributesEnum.NaId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CONVFCTR = AttributesEnum.ConvFctr.index();
    public static final int EOSMANID = AttributesEnum.EoSmanId.index();
    public static final int DFLTBILLADDS = AttributesEnum.DfltBillAdds.index();
    public static final int LOVEOTYPEVO1 = AttributesEnum.LOVEoTypeVO1.index();
    public static final int LOVEOCATVO1 = AttributesEnum.LOVEoCatVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVCustVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgId.
     * @return the TransOrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgId.
     * @param value value to set the  TransOrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoType.
     * @return the EoType
     */
    public Integer getEoType() {
        return (Integer) getAttributeInternal(EOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoType.
     * @param value value to set the  EoType
     */
    public void setEoType(Integer value) {
        setAttributeInternal(EOTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CashCust.
     * @return the CashCust
     */
    public String getCashCust() {
        return (String) getAttributeInternal(CASHCUST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CashCust.
     * @param value value to set the  CashCust
     */
    public void setCashCust(String value) {
        setAttributeInternal(CASHCUST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNm.
     * @param value value to set the  EoNm
     */
    public void setEoNm(String value) {
        setAttributeInternal(EONM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CatgId.
     * @return the CatgId
     */
    public Integer getCatgId() {
        return (Integer) getAttributeInternal(CATGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CatgId.
     * @param value value to set the  CatgId
     */
    public void setCatgId(Integer value) {
        setAttributeInternal(CATGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrIdSp.
     * @return the CurrIdSp
     */
    public BigInteger getCurrIdSp() {
        return (BigInteger) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrIdSp.
     * @param value value to set the  CurrIdSp
     */
    public void setCurrIdSp(BigInteger value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NaId.
     * @return the NaId
     */
    public BigInteger getNaId() {
        return (BigInteger) getAttributeInternal(NAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NaId.
     * @param value value to set the  NaId
     */
    public void setNaId(BigInteger value) {
        setAttributeInternal(NAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public BigInteger getCoaId() {
        return (BigInteger) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaId.
     * @param value value to set the  CoaId
     */
    public void setCoaId(BigInteger value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ConvFctr.
     * @return the ConvFctr
     */
    public BigDecimal getConvFctr() {
        return (BigDecimal) getAttributeInternal(CONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ConvFctr.
     * @param value value to set the  ConvFctr
     */
    public void setConvFctr(BigDecimal value) {
        setAttributeInternal(CONVFCTR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoSmanId.
     * @return the EoSmanId
     */
    public BigInteger getEoSmanId() {
        return (BigInteger) getAttributeInternal(EOSMANID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoSmanId.
     * @param value value to set the  EoSmanId
     */
    public void setEoSmanId(BigInteger value) {
        setAttributeInternal(EOSMANID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DfltBillAdds.
     * @return the DfltBillAdds
     */
    public String getDfltBillAdds() {
        return (String) getAttributeInternal(DFLTBILLADDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DfltBillAdds.
     * @param value value to set the  DfltBillAdds
     */
    public void setDfltBillAdds(String value) {
        setAttributeInternal(DFLTBILLADDS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoTypeVO1.
     */
    public RowSet getLOVEoTypeVO1() {
        return (RowSet)getAttributeInternal(LOVEOTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoCatVO1.
     */
    public RowSet getLOVEoCatVO1() {
        return (RowSet)getAttributeInternal(LOVEOCATVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
