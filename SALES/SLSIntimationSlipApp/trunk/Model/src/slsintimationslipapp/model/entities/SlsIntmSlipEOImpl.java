package slsintimationslipapp.model.entities;

import adf.utils.bean.StaticValue;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.jbo.server.ViewObjectImpl;

import slsintimationslipapp.model.service.SlsIntimationSlipAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 30 11:03:31 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsIntmSlipEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        OrgId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        DocId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        }
        ,
        DocDt {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setDocDt((Timestamp) value);
            }
        }
        ,
        DispDocId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getDispDocId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setDispDocId((String) value);
            }
        }
        ,
        EoId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getEoId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setEoId((Integer) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        FyId {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getFyId();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setFyId((Integer) value);
            }
        }
        ,
        IntmMode {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getIntmMode();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setIntmMode((Integer) value);
            }
        }
        ,
        IntmStat {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getIntmStat();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setIntmStat((Integer) value);
            }
        }
        ,
        Remarks {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        SlsIntmFlx {
            public Object get(SlsIntmSlipEOImpl obj) {
                return obj.getSlsIntmFlx();
            }

            public void put(SlsIntmSlipEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsIntmSlipEOImpl object);

        public abstract void put(SlsIntmSlipEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int DISPDOCID = AttributesEnum.DispDocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int INTMMODE = AttributesEnum.IntmMode.index();
    public static final int INTMSTAT = AttributesEnum.IntmStat.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SLSINTMFLX = AttributesEnum.SlsIntmFlx.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsIntmSlipEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slsintimationslipapp.model.entities.SlsIntmSlipEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for DispDocId, using the alias name DispDocId.
     * @return the value of DispDocId
     */
    public String getDispDocId() {
        return (String)getAttributeInternal(DISPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DispDocId.
     * @param value value to set the DispDocId
     */
    public void setDispDocId(String value) {
        setAttributeInternal(DISPDOCID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        if(value != null)
            value = StaticValue.getTruncatedDt(value);
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        if(value != null)
            value = StaticValue.getTruncatedDt(value);
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for IntmMode, using the alias name IntmMode.
     * @return the value of IntmMode
     */
    public Integer getIntmMode() {
        return (Integer)getAttributeInternal(INTMMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntmMode.
     * @param value value to set the IntmMode
     */
    public void setIntmMode(Integer value) {
        setAttributeInternal(INTMMODE, value);
    }

    /**
     * Gets the attribute value for IntmStat, using the alias name IntmStat.
     * @return the value of IntmStat
     */
    public Integer getIntmStat() {
        return (Integer)getAttributeInternal(INTMSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntmStat.
     * @param value value to set the IntmStat
     */
    public void setIntmStat(Integer value) {
        setAttributeInternal(INTMSTAT, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsIntmFlx() {
        return (RowIterator) getAttributeInternal(SLSINTMFLX);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param docDt key constituent
     * @param eoId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       Timestamp docDt, Integer eoId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, docDt, eoId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Object docTxnId = EbizParams.generateDocTxnId(getApplicationModule(), 21509, 0);
        if(docTxnId != null){
            setDocId(docTxnId.toString());
        }
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setOrgId(EbizParams.GLBL_APP_USR_ORG());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(StaticValue.getCurrDtWidTimestamp());
        setUsrIdModDt(StaticValue.getCurrDtWidTimestamp());
        setFyId(EbizParams.getFyIdOnCurrDtAndCurrOrg(getApplicationModule())); 
        super.create(attributeList);
    }
    
    /**
     * To display disp doc id
     * @return
     */
    public Object getDispId() {
        return ADFModelUtils.callFunction(getApplicationModule(),
                                          new StringBuilder("SLS.GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?)"), new Object[] {
                                          EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(),
                                          EbizParams.GLBL_APP_USR_ORG(), 21509, getDocId(),
                                          null, "SLS$INTM$SLIP",
                                          EbizParams.getFyIdOnCurrDtAndCurrOrg(getApplicationModule())
    }, Types.VARCHAR);
    }
            
    /**
     * Method to get instance of currrent Application Module
     * @return
     */
    protected SlsIntimationSlipAMImpl getApplicationModule() {
        return (SlsIntimationSlipAMImpl) ADFModelUtils.resolvEl("#{data.SlsIntimationSlipAMDataControl.dataProvider}");
    }    

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation == DML_INSERT){
            Object dispDocId = getDispId();
            if(dispDocId != null){
                setDispDocId(dispDocId.toString());
            }
        }
        super.doDML(operation, e);
    }

}
