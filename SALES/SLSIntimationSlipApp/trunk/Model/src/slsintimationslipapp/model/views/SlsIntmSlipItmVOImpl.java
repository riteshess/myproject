package slsintimationslipapp.model.views;

import java.sql.ResultSet;
import java.sql.Timestamp;

import java.util.Map;

import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 05 16:10:32 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsIntmSlipItmVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public SlsIntmSlipItmVOImpl() {
    }

    /**
     * Returns the variable value for cldidbindvar.
     * @return variable value for cldidbindvar
     */
    public String getcldidbindvar() {
        return (String)ensureVariableManager().getVariableValue("cldidbindvar");
    }

    /**
     * Sets <code>value</code> for variable cldidbindvar.
     * @param value value to bind as cldidbindvar
     */
    public void setcldidbindvar(String value) {
        ensureVariableManager().setVariableValue("cldidbindvar", value);
    }

    /**
     * Returns the variable value for slocIdBindVar.
     * @return variable value for slocIdBindVar
     */
    public Integer getslocIdBindVar() {
        return (Integer)ensureVariableManager().getVariableValue("slocIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable slocIdBindVar.
     * @param value value to bind as slocIdBindVar
     */
    public void setslocIdBindVar(Integer value) {
        ensureVariableManager().setVariableValue("slocIdBindVar", value);
    }

    /**
     * Returns the variable value for orgIdBindVar.
     * @return variable value for orgIdBindVar
     */
    public String getorgIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("orgIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable orgIdBindVar.
     * @param value value to bind as orgIdBindVar
     */
    public void setorgIdBindVar(String value) {
        ensureVariableManager().setVariableValue("orgIdBindVar", value);
    }

    /**
     * Returns the variable value for hoOrgIdBindVar.
     * @return variable value for hoOrgIdBindVar
     */
    public String gethoOrgIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("hoOrgIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable hoOrgIdBindVar.
     * @param value value to bind as hoOrgIdBindVar
     */
    public void sethoOrgIdBindVar(String value) {
        ensureVariableManager().setVariableValue("hoOrgIdBindVar", value);
    }

    /**
     * Returns the variable value for docIdbindVar.
     * @return variable value for docIdbindVar
     */
    public String getdocIdbindVar() {
        return (String)ensureVariableManager().getVariableValue("docIdbindVar");
    }

    /**
     * Sets <code>value</code> for variable docIdbindVar.
     * @param value value to bind as docIdbindVar
     */
    public void setdocIdbindVar(String value) {
        ensureVariableManager().setVariableValue("docIdbindVar", value);
    }

    /**
     * Returns the variable value for docDtBindVar.
     * @return variable value for docDtBindVar
     */
    public Timestamp getdocDtBindVar() {
        return (Timestamp)ensureVariableManager().getVariableValue("docDtBindVar");
    }

    /**
     * Sets <code>value</code> for variable docDtBindVar.
     * @param value value to bind as docDtBindVar
     */
    public void setdocDtBindVar(Timestamp value) {
        ensureVariableManager().setVariableValue("docDtBindVar", value);
    }

    /**
     * Returns the variable value for shipDocIdBindVar.
     * @return variable value for shipDocIdBindVar
     */
    public String getshipDocIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("shipDocIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable shipDocIdBindVar.
     * @param value value to bind as shipDocIdBindVar
     */
    public void setshipDocIdBindVar(String value) {
        ensureVariableManager().setVariableValue("shipDocIdBindVar", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }
    
    //private Map<>

    /**
     * Returns the variable value for itemIdBindVar.
     * @return variable value for itemIdBindVar
     */
    public String getitemIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("itemIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable itemIdBindVar.
     * @param value value to bind as itemIdBindVar
     */
    public void setitemIdBindVar(String value) {
        ensureVariableManager().setVariableValue("itemIdBindVar", value);
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }
}
