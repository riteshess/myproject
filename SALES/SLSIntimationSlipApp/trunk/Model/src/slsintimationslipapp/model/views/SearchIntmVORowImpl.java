package slsintimationslipapp.model.views;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 28 14:49:21 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchIntmVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0 {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getSelectobjects0();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        IntmDispIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getIntmDispIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setIntmDispIdTrans((String) value);
            }
        }
        ,
        IntmDocTxnIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getIntmDocTxnIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setIntmDocTxnIdTrans((String) value);
            }
        }
        ,
        EoIdTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getEoIdTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setEoIdTrans((String) value);
            }
        }
        ,
        EoDescTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getEoDescTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setEoDescTrans((String) value);
            }
        }
        ,
        FromDtTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getFromDtTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setFromDtTrans((Timestamp) value);
            }
        }
        ,
        ToDtTrans {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getToDtTrans();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setToDtTrans((Timestamp) value);
            }
        }
        ,
        LOVIntimIdVO1 {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getLOVIntimIdVO1();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVConsigneeVO1 {
            public Object get(SearchIntmVORowImpl obj) {
                return obj.getLOVConsigneeVO1();
            }

            public void put(SearchIntmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SearchIntmVORowImpl object);

        public abstract void put(SearchIntmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int INTMDISPIDTRANS = AttributesEnum.IntmDispIdTrans.index();
    public static final int INTMDOCTXNIDTRANS = AttributesEnum.IntmDocTxnIdTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int EODESCTRANS = AttributesEnum.EoDescTrans.index();
    public static final int FROMDTTRANS = AttributesEnum.FromDtTrans.index();
    public static final int TODTTRANS = AttributesEnum.ToDtTrans.index();
    public static final int LOVINTIMIDVO1 = AttributesEnum.LOVIntimIdVO1.index();
    public static final int LOVCONSIGNEEVO1 = AttributesEnum.LOVConsigneeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchIntmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        return EbizParams.GLBL_APP_SERV_LOC();
        //return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        return EbizParams.GLBL_APP_USR_ORG();
        //return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        return EbizParams.GLBL_HO_ORG_ID();
        //return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        return EbizParams.GLBL_APP_CLD_ID();
        //return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute IntmDispIdTrans.
     * @return the IntmDispIdTrans
     */
    public String getIntmDispIdTrans() {
        return (String) getAttributeInternal(INTMDISPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IntmDispIdTrans.
     * @param value value to set the  IntmDispIdTrans
     */
    public void setIntmDispIdTrans(String value) {
        setAttributeInternal(INTMDISPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IntmDocTxnIdTrans.
     * @return the IntmDocTxnIdTrans
     */
    public String getIntmDocTxnIdTrans() {
        return (String) getAttributeInternal(INTMDOCTXNIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IntmDocTxnIdTrans.
     * @param value value to set the  IntmDocTxnIdTrans
     */
    public void setIntmDocTxnIdTrans(String value) {
        setAttributeInternal(INTMDOCTXNIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdTrans.
     * @return the EoIdTrans
     */
    public String getEoIdTrans() {
        return (String) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdTrans.
     * @param value value to set the  EoIdTrans
     */
    public void setEoIdTrans(String value) {
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoDescTrans.
     * @return the EoDescTrans
     */
    public String getEoDescTrans() {
        return (String) getAttributeInternal(EODESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoDescTrans.
     * @param value value to set the  EoDescTrans
     */
    public void setEoDescTrans(String value) {
        setAttributeInternal(EODESCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDtTrans.
     * @return the FromDtTrans
     */
    public Timestamp getFromDtTrans() {
        return (Timestamp) getAttributeInternal(FROMDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDtTrans.
     * @param value value to set the  FromDtTrans
     */
    public void setFromDtTrans(Timestamp value) {
        setAttributeInternal(FROMDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDtTrans.
     * @return the ToDtTrans
     */
    public Timestamp getToDtTrans() {
        return (Timestamp) getAttributeInternal(TODTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDtTrans.
     * @param value value to set the  ToDtTrans
     */
    public void setToDtTrans(Timestamp value) {
        setAttributeInternal(TODTTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIntimIdVO1.
     */
    public RowSet getLOVIntimIdVO1() {
        return (RowSet) getAttributeInternal(LOVINTIMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVConsigneeVO1.
     */
    public RowSet getLOVConsigneeVO1() {
        return (RowSet) getAttributeInternal(LOVCONSIGNEEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

