package slsintimationslipapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 15 17:33:32 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsIntmSlipItmMstrVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocDt {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShipmntDocId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getShipmntDocId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShipId {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getShipId();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ShipDate {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getShipDate();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsIntmSlip {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getSlsIntmSlip();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsIntmSlipItm {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getSlsIntmSlipItm();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVShipmntDocIdVO {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getLOVShipmntDocIdVO();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovShimntIdVO1 {
            public Object get(SlsIntmSlipItmMstrVORowImpl obj) {
                return obj.getLovShimntIdVO1();
            }

            public void put(SlsIntmSlipItmMstrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsIntmSlipItmMstrVORowImpl object);

        public abstract void put(SlsIntmSlipItmMstrVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SHIPMNTDOCID = AttributesEnum.ShipmntDocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int SHIPDATE = AttributesEnum.ShipDate.index();
    public static final int SLSINTMSLIP = AttributesEnum.SlsIntmSlip.index();
    public static final int SLSINTMSLIPITM = AttributesEnum.SlsIntmSlipItm.index();
    public static final int LOVSHIPMNTDOCIDVO = AttributesEnum.LOVShipmntDocIdVO.index();
    public static final int LOVSHIMNTIDVO1 = AttributesEnum.LovShimntIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsIntmSlipItmMstrVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }


    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }


    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute DocDt.
     * @return the DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp) getAttributeInternal(DOCDT);
    }


    /**
     * Gets the attribute value for the calculated attribute ShipmntDocId.
     * @return the ShipmntDocId
     */
    public String getShipmntDocId() {
        return (String) getAttributeInternal(SHIPMNTDOCID);
    }


    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }


    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for the calculated attribute ShipId.
     * @return the ShipId
     */
    public String getShipId() {
        return (String) getAttributeInternal(SHIPID);
    }


    /**
     * Gets the attribute value for the calculated attribute ShipDate.
     * @return the ShipDate
     */
    public Timestamp getShipDate() {
        return (Timestamp) getAttributeInternal(SHIPDATE);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link SlsIntmSlip.
     */
    public Row getSlsIntmSlip() {
        return (Row)getAttributeInternal(SLSINTMSLIP);
    }

    /**
     * Sets the master-detail link SlsIntmSlip between this object and <code>value</code>.
     */
    public void setSlsIntmSlip(Row value) {
        setAttributeInternal(SLSINTMSLIP, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsIntmSlipItm.
     */
    public RowIterator getSlsIntmSlipItm() {
        return (RowIterator)getAttributeInternal(SLSINTMSLIPITM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVShipmntDocIdVO.
     */
    public RowSet getLOVShipmntDocIdVO() {
        return (RowSet)getAttributeInternal(LOVSHIPMNTDOCIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShimntIdVO1.
     */
    public RowSet getLovShimntIdVO1() {
        return (RowSet)getAttributeInternal(LOVSHIMNTIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
