package appschemeprofile.model.views;

import appschemeprofile.model.entities.AppSchmEOImpl;

import appschemeprofile.model.services.AppSchemeProfileAMImpl;

import java.math.BigDecimal;
import java.math.BigInteger;
import oracle.jbo.domain.Number;
import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import java.text.SimpleDateFormat;

import java.util.Date;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 31 16:32:08 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppSchmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPSCHMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActvFlg,
        CldId,
        GrpId,
        GrpItmFlg,
        HoOrgId,
        InactvDt,
        InactvResn,
        ItmId,
        ItmUom,
        MaxAmt,
        MaxQty,
        MinAmt,
        MinQty,
        SchmCalcTyp,
        SchmDesc,
        SchmId,
        SchmNm,
        SchmTyp,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ValidFrom,
        ValidTo,
        ItemNameTrans,
        ItemGroupNameTrans,
        ItemDispNameTrans,
        ItemGroupDispNameTrans,
        DocId,
        UnlmtAmt,
        UnlmtQty,
        FyId,
        DifferenceInDateTrans,
        Finalize,
        AppSchmDtl,
        AppSchmItm,
        LOVUserNameVO1,
        LOVSchemeTypeVO1,
        LOVApplicableOnVO1,
        LOVItemNameActvVO1,
        LOVUomBasisVO1,
        LOVItemGroupActvVO1,
        LOVCalcTypeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTVFLG = AttributesEnum.ActvFlg.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int GRPID = AttributesEnum.GrpId.index();
    public static final int GRPITMFLG = AttributesEnum.GrpItmFlg.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int MAXAMT = AttributesEnum.MaxAmt.index();
    public static final int MAXQTY = AttributesEnum.MaxQty.index();
    public static final int MINAMT = AttributesEnum.MinAmt.index();
    public static final int MINQTY = AttributesEnum.MinQty.index();
    public static final int SCHMCALCTYP = AttributesEnum.SchmCalcTyp.index();
    public static final int SCHMDESC = AttributesEnum.SchmDesc.index();
    public static final int SCHMID = AttributesEnum.SchmId.index();
    public static final int SCHMNM = AttributesEnum.SchmNm.index();
    public static final int SCHMTYP = AttributesEnum.SchmTyp.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VALIDFROM = AttributesEnum.ValidFrom.index();
    public static final int VALIDTO = AttributesEnum.ValidTo.index();
    public static final int ITEMNAMETRANS = AttributesEnum.ItemNameTrans.index();
    public static final int ITEMGROUPNAMETRANS = AttributesEnum.ItemGroupNameTrans.index();
    public static final int ITEMDISPNAMETRANS = AttributesEnum.ItemDispNameTrans.index();
    public static final int ITEMGROUPDISPNAMETRANS = AttributesEnum.ItemGroupDispNameTrans.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int UNLMTAMT = AttributesEnum.UnlmtAmt.index();
    public static final int UNLMTQTY = AttributesEnum.UnlmtQty.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int DIFFERENCEINDATETRANS = AttributesEnum.DifferenceInDateTrans.index();
    public static final int FINALIZE = AttributesEnum.Finalize.index();
    public static final int APPSCHMDTL = AttributesEnum.AppSchmDtl.index();
    public static final int APPSCHMITM = AttributesEnum.AppSchmItm.index();
    public static final int LOVUSERNAMEVO1 = AttributesEnum.LOVUserNameVO1.index();
    public static final int LOVSCHEMETYPEVO1 = AttributesEnum.LOVSchemeTypeVO1.index();
    public static final int LOVAPPLICABLEONVO1 = AttributesEnum.LOVApplicableOnVO1.index();
    public static final int LOVITEMNAMEACTVVO1 = AttributesEnum.LOVItemNameActvVO1.index();
    public static final int LOVUOMBASISVO1 = AttributesEnum.LOVUomBasisVO1.index();
    public static final int LOVITEMGROUPACTVVO1 = AttributesEnum.LOVItemGroupActvVO1.index();
    public static final int LOVCALCTYPEVO1 = AttributesEnum.LOVCalcTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppSchmVORowImpl() {
    }

    /**
     * Gets AppSchmEO entity object.
     * @return the AppSchmEO
     */
    public AppSchmEOImpl getAppSchmEO() {
        return (AppSchmEOImpl) getEntity(ENTITY_APPSCHMEO);
    }

    /**
     * Gets the attribute value for ACTV_FLG using the alias name ActvFlg.
     * @return the ACTV_FLG
     */
    public String getActvFlg() {
        return (String) getAttributeInternal(ACTVFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV_FLG using the alias name ActvFlg.
     * @param value value to set the ACTV_FLG
     */
    public void setActvFlg(String value) {
        setAttributeInternal(ACTVFLG, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for GRP_ID using the alias name GrpId.
     * @return the GRP_ID
     */
    public String getGrpId() {
        return (String) getAttributeInternal(GRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ID using the alias name GrpId.
     * @param value value to set the GRP_ID
     */
    public void setGrpId(String value) {
        setAttributeInternal(GRPID, value);
    }

    /**
     * Gets the attribute value for GRP_ITM_FLG using the alias name GrpItmFlg.
     * @return the GRP_ITM_FLG
     */
    public String getGrpItmFlg() {
        return (String) getAttributeInternal(GRPITMFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for GRP_ITM_FLG using the alias name GrpItmFlg.
     * @param value value to set the GRP_ITM_FLG
     */
    public void setGrpItmFlg(String value) {
        setAttributeInternal(GRPITMFLG, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for INACTV_RESN using the alias name InactvResn.
     * @return the INACTV_RESN
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_RESN using the alias name InactvResn.
     * @param value value to set the INACTV_RESN
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for MAX_AMT using the alias name MaxAmt.
     * @return the MAX_AMT
     */
    public Number getMaxAmt() {
        return (Number) getAttributeInternal(MAXAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_AMT using the alias name MaxAmt.
     * @param value value to set the MAX_AMT
     */
    public void setMaxAmt(Number value) {
        setAttributeInternal(MAXAMT, value);
    }

    /**
     * Gets the attribute value for MAX_QTY using the alias name MaxQty.
     * @return the MAX_QTY
     */
    public Number getMaxQty() {
        return (Number) getAttributeInternal(MAXQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for MAX_QTY using the alias name MaxQty.
     * @param value value to set the MAX_QTY
     */
    public void setMaxQty(Number value) {
        setAttributeInternal(MAXQTY, value);
    }

    /**
     * Gets the attribute value for MIN_AMT using the alias name MinAmt.
     * @return the MIN_AMT
     */
    public Number getMinAmt() {

        return (Number) getAttributeInternal(MINAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_AMT using the alias name MinAmt.
     * @param value value to set the MIN_AMT
     */
    public void setMinAmt(Number value) {


        setAttributeInternal(MINAMT, value);
    }

    /**
     * Gets the attribute value for MIN_QTY using the alias name MinQty.
     * @return the MIN_QTY
     */
    public Number getMinQty() {
        return (Number) getAttributeInternal(MINQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_QTY using the alias name MinQty.
     * @param value value to set the MIN_QTY
     */
    public void setMinQty(Number value) {
        setAttributeInternal(MINQTY, value);
    }

    /**
     * Gets the attribute value for SCHM_CALC_TYP using the alias name SchmCalcTyp.
     * @return the SCHM_CALC_TYP
     */
    public String getSchmCalcTyp() {
        return (String) getAttributeInternal(SCHMCALCTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_CALC_TYP using the alias name SchmCalcTyp.
     * @param value value to set the SCHM_CALC_TYP
     */
    public void setSchmCalcTyp(String value) {
        setAttributeInternal(SCHMCALCTYP, value);
    }

    /**
     * Gets the attribute value for SCHM_DESC using the alias name SchmDesc.
     * @return the SCHM_DESC
     */
    public String getSchmDesc() {
        return (String) getAttributeInternal(SCHMDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_DESC using the alias name SchmDesc.
     * @param value value to set the SCHM_DESC
     */
    public void setSchmDesc(String value) {
        setAttributeInternal(SCHMDESC, value);
    }

    /**
     * Gets the attribute value for SCHM_ID using the alias name SchmId.
     * @return the SCHM_ID
     */
    public String getSchmId() {
        /*  if (getAttributeInternal(SCHMID) != null) {
            String val = (String) getAttributeInternal(SCHMID);
            val = val.substring(2);
            return val;
        }  */
        return (String) getAttributeInternal(SCHMID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_ID using the alias name SchmId.
     * @param value value to set the SCHM_ID
     */
    public void setSchmId(String value) {
        setAttributeInternal(SCHMID, value);
    }

    /**
     * Gets the attribute value for SCHM_NM using the alias name SchmNm.
     * @return the SCHM_NM
     */
    public String getSchmNm() {
        return (String) getAttributeInternal(SCHMNM);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_NM using the alias name SchmNm.
     * @param value value to set the SCHM_NM
     */
    public void setSchmNm(String value) {
        setAttributeInternal(SCHMNM, value);
    }

    /**
     * Gets the attribute value for SCHM_TYP using the alias name SchmTyp.
     * @return the SCHM_TYP
     */
    public String getSchmTyp() {
        return (String) getAttributeInternal(SCHMTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for SCHM_TYP using the alias name SchmTyp.
     * @param value value to set the SCHM_TYP
     */
    public void setSchmTyp(String value) {
        setAttributeInternal(SCHMTYP, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VALID_FROM using the alias name ValidFrom.
     * @return the VALID_FROM
     */
    public Timestamp getValidFrom() {
        return (Timestamp) getAttributeInternal(VALIDFROM);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_FROM using the alias name ValidFrom.
     * @param value value to set the VALID_FROM
     */
    public void setValidFrom(Timestamp value) {
        setAttributeInternal(VALIDFROM, value);
    }

    /**
     * Gets the attribute value for VALID_TO using the alias name ValidTo.
     * @return the VALID_TO
     */
    public Timestamp getValidTo() {
        return (Timestamp) getAttributeInternal(VALIDTO);
    }

    /**
     * Sets <code>value</code> as attribute value for VALID_TO using the alias name ValidTo.
     * @param value value to set the VALID_TO
     */
    public void setValidTo(Timestamp value) {
        setAttributeInternal(VALIDTO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameTrans.
     * @return the ItemNameTrans
     */
    public String getItemNameTrans() {
        if (getAttributeInternal(ITEMNAMETRANS) == null && this.getItmId() != null) {
            ViewObjectImpl impl = getAm().getLOVItemNameVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindItmId", this.getItmId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("ItmDesc");
            }
        }
        return (String) getAttributeInternal(ITEMNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameTrans.
     * @param value value to set the  ItemNameTrans
     */
    public void setItemNameTrans(String value) {
        setAttributeInternal(ITEMNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGroupNameTrans.
     * @return the ItemGroupNameTrans
     */
    public String getItemGroupNameTrans() {
        if (getAttributeInternal(ITEMGROUPNAMETRANS) == null && this.getGrpId() != null) {
            ViewObjectImpl groupVO1 = getAm().getLOVItemGroupVO1();
            groupVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            groupVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            groupVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            groupVO1.setNamedWhereClauseParam("BindGrpId", this.getGrpId());
            groupVO1.executeQuery();
            Row[] allRowsInRange = groupVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("GrpNm");
            }
        }
        return (String) getAttributeInternal(ITEMGROUPNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGroupNameTrans.
     * @param value value to set the  ItemGroupNameTrans
     */
    public void setItemGroupNameTrans(String value) {
        setAttributeInternal(ITEMGROUPNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDispNameTrans.
     * @return the ItemDispNameTrans
     */
    public String getItemDispNameTrans() {
        if (getAttributeInternal(ITEMDISPNAMETRANS) == null && this.getItmId() != null) {
            ViewObjectImpl impl = getAm().getLOVItemNameVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindItmId", this.getItmId());
            impl.executeQuery();
            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("ItmDesc");
            }
        }
        return (String) getAttributeInternal(ITEMDISPNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDispNameTrans.
     * @param value value to set the  ItemDispNameTrans
     */
    public void setItemDispNameTrans(String value) {
        setAttributeInternal(ITEMDISPNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGroupDispNameTrans.
     * @return the ItemGroupDispNameTrans
     */
    public String getItemGroupDispNameTrans() {
        if (getAttributeInternal(ITEMGROUPDISPNAMETRANS) == null && this.getGrpId() != null) {
            ViewObjectImpl groupVO1 = getAm().getLOVItemGroupVO1();
            groupVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            groupVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            groupVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            groupVO1.setNamedWhereClauseParam("BindGrpId", this.getGrpId());
            groupVO1.executeQuery();
            Row[] allRowsInRange = groupVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("GrpNm");
            }
        }
        return (String) getAttributeInternal(ITEMGROUPDISPNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGroupDispNameTrans.
     * @param value value to set the  ItemGroupDispNameTrans
     */
    public void setItemGroupDispNameTrans(String value) {
        setAttributeInternal(ITEMGROUPDISPNAMETRANS, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for UNLMT_AMT using the alias name UnlmtAmt.
     * @return the UNLMT_AMT
     */
    public String getUnlmtAmt() {
        return (String) getAttributeInternal(UNLMTAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for UNLMT_AMT using the alias name UnlmtAmt.
     * @param value value to set the UNLMT_AMT
     */
    public void setUnlmtAmt(String value) {
        setAttributeInternal(UNLMTAMT, value);
        setMaxAmt(null);
    }

    /**
     * Gets the attribute value for UNLMT_QTY using the alias name UnlmtQty.
     * @return the UNLMT_QTY
     */
    public String getUnlmtQty() {
        return (String) getAttributeInternal(UNLMTQTY);
        
    }

    /**
     * Sets <code>value</code> as attribute value for UNLMT_QTY using the alias name UnlmtQty.
     * @param value value to set the UNLMT_QTY
     */
    public void setUnlmtQty(String value) {
        setAttributeInternal(UNLMTQTY, value);
        setMaxQty(null);
    }


    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute DifferenceInDateTrans.
     * @return the DifferenceInDateTrans
     */
    public String getDifferenceInDateTrans() {
        if (this.getValidFrom() != null && this.getValidTo() != null) {

            Timestamp dateStart = new Timestamp(System.currentTimeMillis());
            Timestamp dateStop = this.getValidTo();
            try {
                if (dateStop.compareTo(dateStart) < 0 &&
                    !dateStart.dateValue().toString().equals(dateStop.dateValue().toString())) {
                    return "0 days";
                } else {
                    try {

                        long diff = dateStop.getTime() - dateStart.getTime();

                        //long diffSeconds = diff / 1000 % 60;
                        long diffMinutes = diff / (60 * 1000) % 60;
                        long diffHours = diff / (60 * 60 * 1000) % 24;
                        long diffDays = diff / (24 * 60 * 60 * 1000);

                        if (diffHours > 0) {
                            diffDays = diffDays + 1;
                        }

                        String val = diffDays + " days";

                        System.out.print(diffDays + " days, ");
                        System.out.print(diffHours + " hours, ");
                        System.out.print(diffMinutes + " minutes, ");
                        //System.out.print(diffSeconds + " seconds.");

                        if (diffDays < 0 || diffHours < 0 || diffMinutes < 0) {
                            val = "1 day";
                        }

                        return val;
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return (String) getAttributeInternal(DIFFERENCEINDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DifferenceInDateTrans.
     * @param value value to set the  DifferenceInDateTrans
     */
    public void setDifferenceInDateTrans(String value) {
        setAttributeInternal(DIFFERENCEINDATETRANS, value);
    }

    /**
     * Gets the attribute value for FINALIZE using the alias name Finalize.
     * @return the FINALIZE
     */
    public String getFinalize() {
        return (String) getAttributeInternal(FINALIZE);
    }

    /**
     * Sets <code>value</code> as attribute value for FINALIZE using the alias name Finalize.
     * @param value value to set the FINALIZE
     */
    public void setFinalize(String value) {
        setAttributeInternal(FINALIZE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppSchmDtl.
     */
    public RowIterator getAppSchmDtl() {
        return (RowIterator) getAttributeInternal(APPSCHMDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppSchmItm.
     */
    public RowIterator getAppSchmItm() {
        return (RowIterator) getAttributeInternal(APPSCHMITM);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserNameVO1.
     */
    public RowSet getLOVUserNameVO1() {
        return (RowSet) getAttributeInternal(LOVUSERNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSchemeTypeVO1.
     */
    public RowSet getLOVSchemeTypeVO1() {
        return (RowSet) getAttributeInternal(LOVSCHEMETYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVApplicableOnVO1.
     */
    public RowSet getLOVApplicableOnVO1() {
        return (RowSet) getAttributeInternal(LOVAPPLICABLEONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemNameActvVO1.
     */
    public RowSet getLOVItemNameActvVO1() {
        return (RowSet) getAttributeInternal(LOVITEMNAMEACTVVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVUomBasisVO1.
     */
    public RowSet getLOVUomBasisVO1() {
        return (RowSet) getAttributeInternal(LOVUOMBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemGroupActvVO1.
     */
    public RowSet getLOVItemGroupActvVO1() {
        return (RowSet) getAttributeInternal(LOVITEMGROUPACTVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCalcTypeVO1.
     */
    public RowSet getLOVCalcTypeVO1() {
        return (RowSet) getAttributeInternal(LOVCALCTYPEVO1);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    System.out.println("baind val is " + bindVars[z]);
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage());

        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Get Application Module
     */
    public AppSchemeProfileAMImpl getAm() {
        return (AppSchemeProfileAMImpl) this.getApplicationModule();
    }

    public String resolvEl(String data) {
        String val = null;
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        if (Message != null) {
            val = Message.toString();
        }
        return val;
    }

}

