package slssecondarysaleapp.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 04 16:06:12 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(SlsSsEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        SsId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getSsId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setSsId((String)value);
            }
        }
        ,
        EoId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getEoId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        ShipId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getShipId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setShipId((String)value);
            }
        }
        ,
        Remarks {
            public Object get(SlsSsEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        FyId {
            public Object get(SlsSsEOImpl obj) {
                return obj.getFyId();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSsEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSsEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSsEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSsEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        SlsSsItm {
            public Object get(SlsSsEOImpl obj) {
                return obj.getSlsSsItm();
            }

            public void put(SlsSsEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsSsEOImpl object);

        public abstract void put(SlsSsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SSID = AttributesEnum.SsId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SLSSSITM = AttributesEnum.SlsSsItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slssecondarysaleapp.model.entities.SlsSsEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for SsId, using the alias name SsId.
     * @return the value of SsId
     */
    public String getSsId() {
        return (String)getAttributeInternal(SSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SsId.
     * @param value value to set the SsId
     */
    public void setSsId(String value) {
        setAttributeInternal(SSID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ShipId, using the alias name ShipId.
     * @return the value of ShipId
     */
    public String getShipId() {
        return (String)getAttributeInternal(SHIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipId.
     * @param value value to set the ShipId
     */
    public void setShipId(String value) {
        setAttributeInternal(SHIPID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsSsItm() {
        return (RowIterator)getAttributeInternal(SLSSSITM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId) {
        return new Key(new Object[]{cldId, slocId, orgId, hoOrgId, docId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        Integer userId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        StringBuffer cldId = new StringBuffer((resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")).toString());
        StringBuffer orgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
        StringBuffer hoOrgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        
        this.setSlocId(slocId);
        this.setCldId(cldId.toString());
        this.setOrgId(orgId.toString());
        this.setHoOrgId(hoOrgId.toString());
        this.setUsrIdCreate(userId);
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        this.setDocDt(new Timestamp(System.currentTimeMillis()));
        
        Integer fyId = 0;
        try {
            //FUNCTION GET_ORG_FY_ID(P_CLDID VARCHAR2, P_ORG_ID VARCHAR2, P_TXN_DT DATE)
            fyId =
        (Integer)callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID(?,?,?)", new Object[] { cldId.toString(),
                                                                                      orgId.toString(),
                                                                                      new Timestamp(System.currentTimeMillis()) });
            //  System.out.println("FY :"+fyId);
            setFyId(fyId);
        } catch (Exception e) {
            FacesMessage message =
                new FacesMessage("There have been an error in calling function 'APP.GET_ORG_FY_ID' in EoImpl !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
            e.printStackTrace();
        }

        try {
            //GET_TXN_ID(USR_ID NUMBER,ORG_ID VARCHAR2 DEFAULT '00', SVR_LOC_ID NUMBER DEFAULT 0, DOC_ID NUMBER DEFAULT 0,p_cld_id varchar2)
            StringBuffer QUOTE_DOC_ID =
                new StringBuffer((callStoredFunction(Types.VARCHAR, "APP.GET_TXN_ID(?,?,?,?,?,?)",
                                                     new Object[] { cldId.toString(), slocId, orgId.toString(), userId,
                                                                    21502, 0 })).toString());
            this.setDocId(QUOTE_DOC_ID.toString());
            // System.out.println("DocId :"+QUOTE_DOC_ID);
            //GET_ORG_DEF_CURR_BS1(PARAM_ORG_ID VARCHAR2)
            /* Integer i =
                (Integer)callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] { orgId.toString() });
            System.out.println("Curr id bs " + i);
            this.setCurrIdBs(i); */


        } catch (Exception e) {
            e.printStackTrace();
            FacesMessage message = new FacesMessage("There have been an error in calling function 'GET_TXN_ID' !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
        }
        
    }
    /**
     * For resolving the El
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    //System.out.println("___________:"+bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }

    /**
     * Add locking logic here.
     */
     final Lock lock = new ReentrantLock();

    public void lock() {
        lock.lock();
        try {super.lock();}
        catch(Exception e){}
        finally{
        lock.unlock();
        }

    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        if (operation == DML_INSERT) {
            this.setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
            this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));

            this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        
    }
    
    }


