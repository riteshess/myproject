package slscustomerprofileapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 30 12:12:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchCustdtlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CustomerNameTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getCustomerNameTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setCustomerNameTrans((String) value);
            }
        }
        ,
        OnHoldTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getOnHoldTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setOnHoldTrans((String) value);
            }
        }
        ,
        BlackListedTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getBlackListedTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setBlackListedTrans((String) value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setHoOrgIdTrans((String) value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String) value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer) value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setCldIdTrans((String) value);
            }
        }
        ,
        CustomerVO1 {
            public Object get(SearchCustdtlVORowImpl obj) {
                return obj.getCustomerVO1();
            }

            public void put(SearchCustdtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SearchCustdtlVORowImpl object);

        public abstract void put(SearchCustdtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CUSTOMERNAMETRANS = AttributesEnum.CustomerNameTrans.index();
    public static final int ONHOLDTRANS = AttributesEnum.OnHoldTrans.index();
    public static final int BLACKLISTEDTRANS = AttributesEnum.BlackListedTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int CUSTOMERVO1 = AttributesEnum.CustomerVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchCustdtlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerNameTrans.
     * @return the CustomerNameTrans
     */
    public String getCustomerNameTrans() {
        return (String) getAttributeInternal(CUSTOMERNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerNameTrans.
     * @param value value to set the  CustomerNameTrans
     */
    public void setCustomerNameTrans(String value) {
        setAttributeInternal(CUSTOMERNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OnHoldTrans.
     * @return the OnHoldTrans
     */
    public String getOnHoldTrans() {
        
        
        return (String) getAttributeInternal(ONHOLDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OnHoldTrans.
     * @param value value to set the  OnHoldTrans
     */
    public void setOnHoldTrans(String value) {
        setAttributeInternal(ONHOLDTRANS, value);
    }
    public Integer getparamSlocId() {
      
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
    }

    public Integer getparamUsrId() {
        
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
    }

    public String getparamOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
    }

    public String getparamCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
    }

    public String getparamHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Gets the attribute value for the calculated attribute BlackListedTrans.
     * @return the BlackListedTrans
     */
    public String getBlackListedTrans() {
        return (String) getAttributeInternal(BLACKLISTEDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BlackListedTrans.
     * @param value value to set the  BlackListedTrans
     */
    public void setBlackListedTrans(String value) {
        setAttributeInternal(BLACKLISTEDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        String Ho_Id=getparamHoOrgId().toString();
        return Ho_Id;
       // return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        String org_Id=getparamOrgId().toString();
        return org_Id;
        //return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
      Integer sloc=(Integer)  getparamSlocId();
       return sloc;
       // return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        String cld = getparamCldId().toString();
        return cld;
        //return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CustomerVO1.
     */
    public RowSet getCustomerVO1() {
        return (RowSet) getAttributeInternal(CUSTOMERVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

