package applcparam.model.entities;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;
import java.math.BigInteger;

import oracle.jbo.domain.Timestamp;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 10 14:51:05 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class APPLCParamEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        ParamId,
        PramNm,
        ParamType,
        ParamBasis,
        ParamReq,
        ParamValDt,
        ParamValNo,
        ParamValCh,
        ParamValBl,
        ParamRmrk,
        ParamActv,
        InactvDt,
        InactvReason,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int PRAMNM = AttributesEnum.PramNm.index();
    public static final int PARAMTYPE = AttributesEnum.ParamType.index();
    public static final int PARAMBASIS = AttributesEnum.ParamBasis.index();
    public static final int PARAMREQ = AttributesEnum.ParamReq.index();
    public static final int PARAMVALDT = AttributesEnum.ParamValDt.index();
    public static final int PARAMVALNO = AttributesEnum.ParamValNo.index();
    public static final int PARAMVALCH = AttributesEnum.ParamValCh.index();
    public static final int PARAMVALBL = AttributesEnum.ParamValBl.index();
    public static final int PARAMRMRK = AttributesEnum.ParamRmrk.index();
    public static final int PARAMACTV = AttributesEnum.ParamActv.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int INACTVREASON = AttributesEnum.InactvReason.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public APPLCParamEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("applcparam.model.entities.APPLCParamEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ParamId, using the alias name ParamId.
     * @return the value of ParamId
     */
    public Integer getParamId() {
        return (Integer) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamId.
     * @param value value to set the ParamId
     */
    public void setParamId(Integer value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for PramNm, using the alias name PramNm.
     * @return the value of PramNm
     */
    public String getPramNm() {
        return (String) getAttributeInternal(PRAMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PramNm.
     * @param value value to set the PramNm
     */
    public void setPramNm(String value) {
        setAttributeInternal(PRAMNM, value);
    }

    /**
     * Gets the attribute value for ParamType, using the alias name ParamType.
     * @return the value of ParamType
     */
    public Integer getParamType() {
        return (Integer) getAttributeInternal(PARAMTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamType.
     * @param value value to set the ParamType
     */
    public void setParamType(Integer value) {
        setAttributeInternal(PARAMTYPE, value);
    }

    /**
     * Gets the attribute value for ParamBasis, using the alias name ParamBasis.
     * @return the value of ParamBasis
     */
    public Integer getParamBasis() {
        return (Integer) getAttributeInternal(PARAMBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamBasis.
     * @param value value to set the ParamBasis
     */
    public void setParamBasis(Integer value) {
        setAttributeInternal(PARAMBASIS, value);
    }

    /**
     * Gets the attribute value for ParamReq, using the alias name ParamReq.
     * @return the value of ParamReq
     */
    public String getParamReq() {
        return (String) getAttributeInternal(PARAMREQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamReq.
     * @param value value to set the ParamReq
     */
    public void setParamReq(String value) {
        setAttributeInternal(PARAMREQ, value);
    }

    /**
     * Gets the attribute value for ParamValDt, using the alias name ParamValDt.
     * @return the value of ParamValDt
     */
    public Timestamp getParamValDt() {
        return (Timestamp) getAttributeInternal(PARAMVALDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamValDt.
     * @param value value to set the ParamValDt
     */
    public void setParamValDt(Timestamp value) {
        setAttributeInternal(PARAMVALDT, value);
    }

    /**
     * Gets the attribute value for ParamValNo, using the alias name ParamValNo.
     * @return the value of ParamValNo
     */
    public Number getParamValNo() {
        return (Number) getAttributeInternal(PARAMVALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamValNo.
     * @param value value to set the ParamValNo
     */
    public void setParamValNo(Number value) {
        setAttributeInternal(PARAMVALNO, value);
    }

    /**
     * Gets the attribute value for ParamValCh, using the alias name ParamValCh.
     * @return the value of ParamValCh
     */
    public String getParamValCh() {
        return (String) getAttributeInternal(PARAMVALCH);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamValCh.
     * @param value value to set the ParamValCh
     */
    public void setParamValCh(String value) {
        setAttributeInternal(PARAMVALCH, value);
    }

    /**
     * Gets the attribute value for ParamValBl, using the alias name ParamValBl.
     * @return the value of ParamValBl
     */
    public String getParamValBl() {
        return (String) getAttributeInternal(PARAMVALBL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamValBl.
     * @param value value to set the ParamValBl
     */
    public void setParamValBl(String value) {
        setAttributeInternal(PARAMVALBL, value);
    }

    /**
     * Gets the attribute value for ParamRmrk, using the alias name ParamRmrk.
     * @return the value of ParamRmrk
     */
    public String getParamRmrk() {
        return (String) getAttributeInternal(PARAMRMRK);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamRmrk.
     * @param value value to set the ParamRmrk
     */
    public void setParamRmrk(String value) {
        setAttributeInternal(PARAMRMRK, value);
    }

    /**
     * Gets the attribute value for ParamActv, using the alias name ParamActv.
     * @return the value of ParamActv
     */
    public String getParamActv() {
        return (String) getAttributeInternal(PARAMACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParamActv.
     * @param value value to set the ParamActv
     */
    public void setParamActv(String value) {
        setAttributeInternal(PARAMACTV, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for InactvReason, using the alias name InactvReason.
     * @return the value of InactvReason
     */
    public String getInactvReason() {
        return (String) getAttributeInternal(INACTVREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvReason.
     * @param value value to set the InactvReason
     */
    public void setInactvReason(String value) {
        setAttributeInternal(INACTVREASON, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param paramId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, Integer paramId) {
        return new Key(new Object[] { cldId, slocId, hoOrgId, paramId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */

    protected void create(AttributeList attributeList) {
        setParamId(-1);
        setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        setCldId(EbizParams.GLBL_APP_CLD_ID());
        setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        setUsrIdCreate(EbizParams.GLBL_APP_USR());
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setParamType(756);
        setParamReq("N");
        setParamActv("Y");
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            System.out.println("Uppdate DoDml Call");
            Integer p_user_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(p_user_id);
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));

        }
        super.doDML(operation, e);
    }
}

