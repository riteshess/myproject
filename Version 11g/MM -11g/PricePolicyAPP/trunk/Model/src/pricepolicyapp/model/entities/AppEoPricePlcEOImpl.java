package pricepolicyapp.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 18 19:23:37 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppEoPricePlcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        EoId {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getEoId();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        PlcId {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getPlcId();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setPlcId((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        StrtDt {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getStrtDt();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setStrtDt((Timestamp)value);
            }
        }
        ,
        EndDt {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getEndDt();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setEndDt((Timestamp)value);
            }
        }
        ,
        AppPricePlc {
            public Object get(AppEoPricePlcEOImpl obj) {
                return obj.getAppPricePlc();
            }

            public void put(AppEoPricePlcEOImpl obj, Object value) {
                obj.setAppPricePlc((AppPricePlcEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppEoPricePlcEOImpl object);

        public abstract void put(AppEoPricePlcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int PLCID = AttributesEnum.PlcId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int APPPRICEPLC = AttributesEnum.AppPricePlc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppEoPricePlcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("pricepolicyapp.model.entities.AppEoPricePlcEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for PlcId, using the alias name PlcId.
     * @return the value of PlcId
     */
    public String getPlcId() {
        return (String)getAttributeInternal(PLCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PlcId.
     * @param value value to set the PlcId
     */
    public void setPlcId(String value) {
        setAttributeInternal(PLCID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for StrtDt, using the alias name StrtDt.
     * @return the value of StrtDt
     */
    public Timestamp getStrtDt() {
        return (Timestamp)getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for StrtDt.
     * @param value value to set the StrtDt
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for EndDt, using the alias name EndDt.
     * @return the value of EndDt
     */
    public Timestamp getEndDt() {
        return (Timestamp)getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDt.
     * @param value value to set the EndDt
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppPricePlcEOImpl.
     */
    public AppPricePlcEOImpl getAppPricePlc() {
        return (AppPricePlcEOImpl)getAttributeInternal(APPPRICEPLC);
    }

    /**
     * Sets <code>value</code> as the associated entity AppPricePlcEOImpl.
     */
    public void setAppPricePlc(AppPricePlcEOImpl value) {
        setAttributeInternal(APPPRICEPLC, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param hoOrgId key constituent
     * @param eoId key constituent
     * @param plcId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String hoOrgId, Integer eoId, String plcId) {
        return new Key(new Object[]{cldId, slocId, hoOrgId, eoId, plcId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setStrtDt(new Timestamp(System.currentTimeMillis()));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
