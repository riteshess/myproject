package mmreceiptmtl.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmreceiptmtl.model.entities.MmMtlRcptItmEOImpl;
import mmreceiptmtl.model.services.MMReceiptMtlAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 02 16:24:12 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlRcptItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMMTLRCPTITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setDocIdSrc((String)value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        PendQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setPendQty((Number)value);
            }
        }
        ,
        DlvNoteQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getDlvNoteQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setDlvNoteQty((Number)value);
            }
        }
        ,
        FocFlg {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getFocFlg();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setFocFlg((String)value);
            }
        }
        ,
        RwkQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRwkQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRwkQty((Number)value);
            }
        }
        ,
        RejQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRejQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRejQty((Number)value);
            }
        }
        ,
        RcptQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRcptQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRcptQty((Number)value);
            }
        }
        ,
        RejResn {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRejResn();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRejResn((String)value);
            }
        }
        ,
        QcReqdFlg {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcReqdFlg();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcReqdFlg((String)value);
            }
        }
        ,
        QcDoneFlg {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcDoneFlg();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcDoneFlg((String)value);
            }
        }
        ,
        QcTxnId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcTxnId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcTxnId((String)value);
            }
        }
        ,
        QcRwkQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcRwkQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcRwkQty((Number)value);
            }
        }
        ,
        QcRejQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcRejQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcRejQty((Number)value);
            }
        }
        ,
        QcRejResn {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcRejResn();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcRejResn((String)value);
            }
        }
        ,
        FinalRcptQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getFinalRcptQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setFinalRcptQty((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        RwkQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRwkQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRwkQtyBs((Number)value);
            }
        }
        ,
        RejQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRejQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRejQtyBs((Number)value);
            }
        }
        ,
        RcptQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getRcptQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setRcptQtyBs((Number)value);
            }
        }
        ,
        QcRwkQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcRwkQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcRwkQtyBs((Number)value);
            }
        }
        ,
        QcRejQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcRejQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcRejQtyBs((Number)value);
            }
        }
        ,
        FinalRcptQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getFinalRcptQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setFinalRcptQtyBs((Number)value);
            }
        }
        ,
        LndPrice {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getLndPrice();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setLndPrice((Number)value);
            }
        }
        ,
        QcOverrideFlg {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcOverrideFlg();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcOverrideFlg((String)value);
            }
        }
        ,
        QcOverrideResn {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getQcOverrideResn();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setQcOverrideResn((String)value);
            }
        }
        ,
        TotRcptQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTotRcptQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTotRcptQty((Number)value);
            }
        }
        ,
        TotRcptQtyBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTotRcptQtyBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTotRcptQtyBs((Number)value);
            }
        }
        ,
        LndPriceBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getLndPriceBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setLndPriceBs((Number)value);
            }
        }
        ,
        PurPrice {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getPurPrice();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setPurPrice((Number)value);
            }
        }
        ,
        PurPriceBs {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getPurPriceBs();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setPurPriceBs((Number)value);
            }
        }
        ,
        TransItemName {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransItemName();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransItemName((String)value);
            }
        }
        ,
        TransIsItemSerial {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransIsItemSerial();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransIsItemSerial((String)value);
            }
        }
        ,
        TransTotalQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransTotalQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransTotalQty((Number)value);
            }
        }
        ,
        TransSrNo {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransSrNo();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransSrNo((String)value);
            }
        }
        ,
        TransItmLotChk {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransItmLotChk();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransItmLotChk((String)value);
            }
        }
        ,
        TransItmBinChk {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransItmBinChk();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransItmBinChk((String)value);
            }
        }
        ,
        TransSrLotId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransSrLotId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransSrLotId((String)value);
            }
        }
        ,
        TransSrBinId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransSrBinId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransSrBinId((String)value);
            }
        }
        ,
        TransSrSerialNo {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransSrSerialNo();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransSrSerialNo((String)value);
            }
        }
        ,
        TransCountAccept {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransCountAccept();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransCountAccept((Number)value);
            }
        }
        ,
        TransCountRejected {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransCountRejected();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransCountRejected((Number)value);
            }
        }
        ,
        TransCountRework {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransCountRework();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransCountRework((Number)value);
            }
        }
        ,
        TransIsRej {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransIsRej();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransIsRej((Boolean)value);
            }
        }
        ,
        transGeRcptQty {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.gettransGeRcptQty();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.settransGeRcptQty((Number)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        TransItmGrpDesc {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransItmGrpDesc();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransItmGrpDesc((String)value);
            }
        }
        ,
        TransItmAttDesc {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getTransItmAttDesc();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setTransItmAttDesc((String)value);
            }
        }
        ,
        MmMtlRcptLot {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getMmMtlRcptLot();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlRcptBin {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getMmMtlRcptBin();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlRcptSr {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getMmMtlRcptSr();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlRcptSrno {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getMmMtlRcptSrno();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdVO {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getLovItmIdVO();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomVO {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getLovUomVO();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlRcptSrnoVO1 {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getMmMtlRcptSrnoVO1();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovBinVO {
            public Object get(MmMtlRcptItmVORowImpl obj) {
                return obj.getLovBinVO();
            }

            public void put(MmMtlRcptItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlRcptItmVORowImpl object);

        public abstract void put(MmMtlRcptItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int DLVNOTEQTY = AttributesEnum.DlvNoteQty.index();
    public static final int FOCFLG = AttributesEnum.FocFlg.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int REJQTY = AttributesEnum.RejQty.index();
    public static final int RCPTQTY = AttributesEnum.RcptQty.index();
    public static final int REJRESN = AttributesEnum.RejResn.index();
    public static final int QCREQDFLG = AttributesEnum.QcReqdFlg.index();
    public static final int QCDONEFLG = AttributesEnum.QcDoneFlg.index();
    public static final int QCTXNID = AttributesEnum.QcTxnId.index();
    public static final int QCRWKQTY = AttributesEnum.QcRwkQty.index();
    public static final int QCREJQTY = AttributesEnum.QcRejQty.index();
    public static final int QCREJRESN = AttributesEnum.QcRejResn.index();
    public static final int FINALRCPTQTY = AttributesEnum.FinalRcptQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int RWKQTYBS = AttributesEnum.RwkQtyBs.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int RCPTQTYBS = AttributesEnum.RcptQtyBs.index();
    public static final int QCRWKQTYBS = AttributesEnum.QcRwkQtyBs.index();
    public static final int QCREJQTYBS = AttributesEnum.QcRejQtyBs.index();
    public static final int FINALRCPTQTYBS = AttributesEnum.FinalRcptQtyBs.index();
    public static final int LNDPRICE = AttributesEnum.LndPrice.index();
    public static final int QCOVERRIDEFLG = AttributesEnum.QcOverrideFlg.index();
    public static final int QCOVERRIDERESN = AttributesEnum.QcOverrideResn.index();
    public static final int TOTRCPTQTY = AttributesEnum.TotRcptQty.index();
    public static final int TOTRCPTQTYBS = AttributesEnum.TotRcptQtyBs.index();
    public static final int LNDPRICEBS = AttributesEnum.LndPriceBs.index();
    public static final int PURPRICE = AttributesEnum.PurPrice.index();
    public static final int PURPRICEBS = AttributesEnum.PurPriceBs.index();
    public static final int TRANSITEMNAME = AttributesEnum.TransItemName.index();
    public static final int TRANSISITEMSERIAL = AttributesEnum.TransIsItemSerial.index();
    public static final int TRANSTOTALQTY = AttributesEnum.TransTotalQty.index();
    public static final int TRANSSRNO = AttributesEnum.TransSrNo.index();
    public static final int TRANSITMLOTCHK = AttributesEnum.TransItmLotChk.index();
    public static final int TRANSITMBINCHK = AttributesEnum.TransItmBinChk.index();
    public static final int TRANSSRLOTID = AttributesEnum.TransSrLotId.index();
    public static final int TRANSSRBINID = AttributesEnum.TransSrBinId.index();
    public static final int TRANSSRSERIALNO = AttributesEnum.TransSrSerialNo.index();
    public static final int TRANSCOUNTACCEPT = AttributesEnum.TransCountAccept.index();
    public static final int TRANSCOUNTREJECTED = AttributesEnum.TransCountRejected.index();
    public static final int TRANSCOUNTREWORK = AttributesEnum.TransCountRework.index();
    public static final int TRANSISREJ = AttributesEnum.TransIsRej.index();
    public static final int TRANSGERCPTQTY = AttributesEnum.transGeRcptQty.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSITMGRPDESC = AttributesEnum.TransItmGrpDesc.index();
    public static final int TRANSITMATTDESC = AttributesEnum.TransItmAttDesc.index();
    public static final int MMMTLRCPTLOT = AttributesEnum.MmMtlRcptLot.index();
    public static final int MMMTLRCPTBIN = AttributesEnum.MmMtlRcptBin.index();
    public static final int MMMTLRCPTSR = AttributesEnum.MmMtlRcptSr.index();
    public static final int MMMTLRCPTSRNO = AttributesEnum.MmMtlRcptSrno.index();
    public static final int LOVITMIDVO = AttributesEnum.LovItmIdVO.index();
    public static final int LOVUOMVO = AttributesEnum.LovUomVO.index();
    public static final int MMMTLRCPTSRNOVO1 = AttributesEnum.MmMtlRcptSrnoVO1.index();
    public static final int LOVBINVO = AttributesEnum.LovBinVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlRcptItmVORowImpl() {
    }

    /**
     * Gets MmMtlRcptItmEO entity object.
     * @return the MmMtlRcptItmEO
     */
    public MmMtlRcptItmEOImpl getMmMtlRcptItmEO() {
        return (MmMtlRcptItmEOImpl)getEntity(ENTITY_MMMTLRCPTITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for DLV_NOTE_QTY using the alias name DlvNoteQty.
     * @return the DLV_NOTE_QTY
     */
    public Number getDlvNoteQty() {
        return (Number) getAttributeInternal(DLVNOTEQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_NOTE_QTY using the alias name DlvNoteQty.
     * @param value value to set the DLV_NOTE_QTY
     */
    public void setDlvNoteQty(Number value) {
        if(value==null)
            value=new Number(0);
        Number fct=new Number(1);
        if(getUomConvFctr()!=null)
            fct=getUomConvFctr();
        setAttributeInternal(DLVNOTEQTY, value);
    }

    /**
     * Gets the attribute value for FOC_FLG using the alias name FocFlg.
     * @return the FOC_FLG
     */
    public String getFocFlg() {
        return (String) getAttributeInternal(FOCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for FOC_FLG using the alias name FocFlg.
     * @param value value to set the FOC_FLG
     */
    public void setFocFlg(String value) {
        setAttributeInternal(FOCFLG, value);
    }

    /**
     * Gets the attribute value for RWK_QTY using the alias name RwkQty.
     * @return the RWK_QTY
     */
    public Number getRwkQty() {
        return (Number) getAttributeInternal(RWKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RWK_QTY using the alias name RwkQty.
     * @param value value to set the RWK_QTY
     */
    public void setRwkQty(Number value) {
        Number zero=new Number(0);
        if(value==null)
            value=zero;
        Number tot=zero;
        Number fctr=zero;
        
        Number rej=zero;
        Number rcpt=zero;
        Number rwk=zero;
        Number qcrej=zero;
        
        if(this.getRejQty()!=null){
            rej=this.getRejQty();
        }
        if(this.getRcptQty()!=null){
            rcpt=this.getRcptQty();
        }
        if(value!=null){
            rwk=value;
        }
        tot=rcpt.add(rej.add(rwk));
        
        if(this.getUomConvFctr()!=null){
            fctr=this.getUomConvFctr();
        }
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
        
        Object obj= am.getMmMtlRcpt().getCurrentRow().getAttribute("RcptSrcType");
        Object docObj=am.getMmMtlRcpt().getCurrentRow().getAttribute("TransSrcDocType");
        if(this.getQcRejQty()!=null){
           qcrej=this.getQcRejQty();
        }
        if(obj!=null){
           if(((Integer)obj).compareTo(396)==0 || ((Integer)docObj).compareTo(267)==0){
              
           }else{
               this.setFinalRcptQty(tot.subtract(rej.add(rwk.add(qcrej))));
               this.setFinalRcptQtyBs( fctr.multiply(tot.subtract(rej.add(rwk.add(qcrej)))));
           }
        }
        
            
            this.setRcptQtyBs(fctr.multiply(rcpt));
            this.setRejQtyBs(fctr.multiply(rej));
            this.setRwkQtyBs(fctr.multiply(rwk));
            setTotRcptQty(tot);
            setTotRcptQtyBs(fctr.multiply(tot));
        
        setAttributeInternal(RWKQTY, value);
    }

    /**
     * Gets the attribute value for REJ_QTY using the alias name RejQty.
     * @return the REJ_QTY
     */
    public Number getRejQty() {
        return (Number) getAttributeInternal(REJQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY using the alias name RejQty.
     * @param value value to set the REJ_QTY
     */
    public void setRejQty(Number value) {
        Number zero=new Number(0);
        if(value==null)
            value=zero;
        
        Number tot=zero;
        Number fctr=zero;
        
        Number rej=zero;
        Number rcpt=zero;
        Number rwk=zero;
        Number qcrej=zero;
        
        
        if(this.getRcptQty()!=null){
            rcpt=this.getRcptQty();
        }
        if(value!=null){
            rej=value;
        }
        if(this.getRwkQty()!=null){
            rwk=this.getRwkQty();
        }
        tot=rcpt.add(rej.add(rwk));
        
        if(this.getUomConvFctr()!=null){
            fctr=this.getUomConvFctr();
        }
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
        
        Object obj= am.getMmMtlRcpt().getCurrentRow().getAttribute("RcptSrcType");
        Object docObj=am.getMmMtlRcpt().getCurrentRow().getAttribute("TransSrcDocType");
        if(this.getQcRejQty()!=null){
           qcrej=this.getQcRejQty();
        }
        if(obj!=null){
           if(((Integer)obj).compareTo(396)==0 || ((Integer)docObj).compareTo(267)==0){
              
           }else{
               this.setFinalRcptQty(tot.subtract(rej.add(rwk.add(qcrej))));
               this.setFinalRcptQtyBs( fctr.multiply(tot.subtract(rej.add(rwk.add(qcrej)))));
           }
        }
        
            
            this.setRcptQtyBs(fctr.multiply(rcpt));
            this.setRejQtyBs(fctr.multiply(rej));
            this.setRwkQtyBs(fctr.multiply(rwk));
            setTotRcptQty(tot);
            setTotRcptQtyBs(fctr.multiply(tot));
        setAttributeInternal(REJQTY, value);
    }

    /**
     * Gets the attribute value for RCPT_QTY using the alias name RcptQty.
     * @return the RCPT_QTY
     */
    public Number getRcptQty() {
        return (Number) getAttributeInternal(RCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RCPT_QTY using the alias name RcptQty.
     * @param value value to set the RCPT_QTY
     */
    public void setRcptQty(Number value) {
        if(value==null){
            value=new Number(0);
        }
        Number zero=new Number(0);
        Number tot=zero;
        Number fctr=zero;
        
        Number rej=zero;
        Number rcpt=zero;
        Number rwk=zero;
        Number qcrej=zero;
        
        if(this.getRejQty()!=null){
            rej=this.getRejQty();
        }
        if(value!=null){
            rcpt=value;
        }
        if(this.getRwkQty()!=null){
            rwk=this.getRwkQty();
        }
        tot=rcpt.add(rej.add(rwk));
        
        if(this.getUomConvFctr()!=null){
            fctr=this.getUomConvFctr();
        }
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
        
        Object obj= am.getMmMtlRcpt().getCurrentRow().getAttribute("RcptSrcType");
        Object docObj=am.getMmMtlRcpt().getCurrentRow().getAttribute("TransSrcDocType");
        if(this.getQcRejQty()!=null){
           qcrej=this.getQcRejQty();
        }
        if(obj!=null){
           if(((Integer)obj).compareTo(396)==0 || ((Integer)docObj).compareTo(267)==0){
              
           }else{
               this.setFinalRcptQty(tot.subtract(rej.add(rwk.add(qcrej))));
               this.setFinalRcptQtyBs( fctr.multiply(tot.subtract(rej.add(rwk.add(qcrej)))));
           }
        }
        
            
            this.setRcptQtyBs(fctr.multiply(rcpt));
            this.setRejQtyBs(fctr.multiply(rej));
            this.setRwkQtyBs(fctr.multiply(rwk));
            setTotRcptQty(tot);
            setTotRcptQtyBs(fctr.multiply(tot));
           
        setAttributeInternal(RCPTQTY, value);
    }

    /**
     * Gets the attribute value for REJ_RESN using the alias name RejResn.
     * @return the REJ_RESN
     */
    public String getRejResn() {
        return (String) getAttributeInternal(REJRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_RESN using the alias name RejResn.
     * @param value value to set the REJ_RESN
     */
    public void setRejResn(String value) {
        setAttributeInternal(REJRESN, value);
    }

    /**
     * Gets the attribute value for QC_REQD_FLG using the alias name QcReqdFlg.
     * @return the QC_REQD_FLG
     */
    public String getQcReqdFlg() {
        return (String) getAttributeInternal(QCREQDFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_REQD_FLG using the alias name QcReqdFlg.
     * @param value value to set the QC_REQD_FLG
     */
    public void setQcReqdFlg(String value) {
        setAttributeInternal(QCREQDFLG, value);
    }

    /**
     * Gets the attribute value for QC_DONE_FLG using the alias name QcDoneFlg.
     * @return the QC_DONE_FLG
     */
    public String getQcDoneFlg() {
        return (String) getAttributeInternal(QCDONEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_DONE_FLG using the alias name QcDoneFlg.
     * @param value value to set the QC_DONE_FLG
     */
    public void setQcDoneFlg(String value) {
        setAttributeInternal(QCDONEFLG, value);
    }

    /**
     * Gets the attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @return the QC_TXN_ID
     */
    public String getQcTxnId() {
        return (String) getAttributeInternal(QCTXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @param value value to set the QC_TXN_ID
     */
    public void setQcTxnId(String value) {
        setAttributeInternal(QCTXNID, value);
    }

    /**
     * Gets the attribute value for QC_RWK_QTY using the alias name QcRwkQty.
     * @return the QC_RWK_QTY
     */
    public Number getQcRwkQty() {
        return (Number) getAttributeInternal(QCRWKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_RWK_QTY using the alias name QcRwkQty.
     * @param value value to set the QC_RWK_QTY
     */
    public void setQcRwkQty(Number value) {
        setAttributeInternal(QCRWKQTY, value);
    }

    /**
     * Gets the attribute value for QC_REJ_QTY using the alias name QcRejQty.
     * @return the QC_REJ_QTY
     */
    public Number getQcRejQty() {
        return (Number) getAttributeInternal(QCREJQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_REJ_QTY using the alias name QcRejQty.
     * @param value value to set the QC_REJ_QTY
     */
    public void setQcRejQty(Number value) {
        setAttributeInternal(QCREJQTY, value);
    }

    /**
     * Gets the attribute value for QC_REJ_RESN using the alias name QcRejResn.
     * @return the QC_REJ_RESN
     */
    public String getQcRejResn() {
        return (String) getAttributeInternal(QCREJRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_REJ_RESN using the alias name QcRejResn.
     * @param value value to set the QC_REJ_RESN
     */
    public void setQcRejResn(String value) {
        setAttributeInternal(QCREJRESN, value);
    }

    /**
     * Gets the attribute value for FINAL_RCPT_QTY using the alias name FinalRcptQty.
     * @return the FINAL_RCPT_QTY
     */
    public Number getFinalRcptQty() {
        return (Number) getAttributeInternal(FINALRCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_RCPT_QTY using the alias name FinalRcptQty.
     * @param value value to set the FINAL_RCPT_QTY
     */
    public void setFinalRcptQty(Number value) {
        if(value == null)
            value=new Number(0);
        Number fct=new Number(1);
        if(getUomConvFctr()!=null)
            fct=getUomConvFctr();
        setFinalRcptQtyBs(value.multiply(fct));
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();  
        Object obj= am.getMmMtlRcpt().getCurrentRow().getAttribute("RcptSrcType");       
        if(obj!=null){
            if(((Integer)obj).compareTo(396)==0 || ((Integer)obj).compareTo(334)==0){
               setRcptQty(value);
               setTotRcptQty(value);
               setRcptQtyBs(value.multiply(fct));
                setTotRcptQtyBs(value.multiply(fct));
            }
        }
        setAttributeInternal(FINALRCPTQTY, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for RWK_QTY_BS using the alias name RwkQtyBs.
     * @return the RWK_QTY_BS
     */
    public Number getRwkQtyBs() {
        return (Number) getAttributeInternal(RWKQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for RWK_QTY_BS using the alias name RwkQtyBs.
     * @param value value to set the RWK_QTY_BS
     */
    public void setRwkQtyBs(Number value) {
        setAttributeInternal(RWKQTYBS, value);
    }

    /**
     * Gets the attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @return the REJ_QTY_BS
     */
    public Number getRejQtyBs() {
        return (Number) getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @param value value to set the REJ_QTY_BS
     */
    public void setRejQtyBs(Number value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for RCPT_QTY_BS using the alias name RcptQtyBs.
     * @return the RCPT_QTY_BS
     */
    public Number getRcptQtyBs() {
        return (Number) getAttributeInternal(RCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for RCPT_QTY_BS using the alias name RcptQtyBs.
     * @param value value to set the RCPT_QTY_BS
     */
    public void setRcptQtyBs(Number value) {
        if(value==null)
            value=new Number(0);
        setAttributeInternal(RCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for QC_RWK_QTY_BS using the alias name QcRwkQtyBs.
     * @return the QC_RWK_QTY_BS
     */
    public Number getQcRwkQtyBs() {
        return (Number) getAttributeInternal(QCRWKQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_RWK_QTY_BS using the alias name QcRwkQtyBs.
     * @param value value to set the QC_RWK_QTY_BS
     */
    public void setQcRwkQtyBs(Number value) {
        setAttributeInternal(QCRWKQTYBS, value);
    }

    /**
     * Gets the attribute value for QC_REJ_QTY_BS using the alias name QcRejQtyBs.
     * @return the QC_REJ_QTY_BS
     */
    public Number getQcRejQtyBs() {
        return (Number) getAttributeInternal(QCREJQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_REJ_QTY_BS using the alias name QcRejQtyBs.
     * @param value value to set the QC_REJ_QTY_BS
     */
    public void setQcRejQtyBs(Number value) {
        setAttributeInternal(QCREJQTYBS, value);
    }

    /**
     * Gets the attribute value for FINAL_RCPT_QTY_BS using the alias name FinalRcptQtyBs.
     * @return the FINAL_RCPT_QTY_BS
     */
    public Number getFinalRcptQtyBs() {
        return (Number) getAttributeInternal(FINALRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_RCPT_QTY_BS using the alias name FinalRcptQtyBs.
     * @param value value to set the FINAL_RCPT_QTY_BS
     */
    public void setFinalRcptQtyBs(Number value) {
        setAttributeInternal(FINALRCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for LND_PRICE using the alias name LndPrice.
     * @return the LND_PRICE
     */
    public Number getLndPrice() {
        return (Number) getAttributeInternal(LNDPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for LND_PRICE using the alias name LndPrice.
     * @param value value to set the LND_PRICE
     */
    public void setLndPrice(Number value) {
        if(value==null){
            value =new Number(0);
        }
        if(value!=null){
            setLndPriceBs(value);
            setPurPrice(value);
            setPurPriceBs(value);
        }
        setAttributeInternal(LNDPRICE, value);
    }

    /**
     * Gets the attribute value for QC_OVERRIDE_FLG using the alias name QcOverrideFlg.
     * @return the QC_OVERRIDE_FLG
     */
    public String getQcOverrideFlg() {
        return (String) getAttributeInternal(QCOVERRIDEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_OVERRIDE_FLG using the alias name QcOverrideFlg.
     * @param value value to set the QC_OVERRIDE_FLG
     */
    public void setQcOverrideFlg(String value) {
        setAttributeInternal(QCOVERRIDEFLG, value);
    }

    /**
     * Gets the attribute value for QC_OVERRIDE_RESN using the alias name QcOverrideResn.
     * @return the QC_OVERRIDE_RESN
     */
    public String getQcOverrideResn() {
        return (String) getAttributeInternal(QCOVERRIDERESN);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_OVERRIDE_RESN using the alias name QcOverrideResn.
     * @param value value to set the QC_OVERRIDE_RESN
     */
    public void setQcOverrideResn(String value) {
        setAttributeInternal(QCOVERRIDERESN, value);
    }

    /**
     * Gets the attribute value for TOT_RCPT_QTY using the alias name TotRcptQty.
     * @return the TOT_RCPT_QTY
     */
    public Number getTotRcptQty() {
        return (Number)getAttributeInternal(TOTRCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_RCPT_QTY using the alias name TotRcptQty.
     * @param value value to set the TOT_RCPT_QTY
     */
    public void setTotRcptQty(Number value) {
        if(value==null)
            value=new Number(0);
        Number fct=new Number(1);
        if(getUomConvFctr()!=null)
            fct=getUomConvFctr();
        setFinalRcptQtyBs(value.multiply(fct));
        setAttributeInternal(TOTRCPTQTY, value);
    }

    /**
     * Gets the attribute value for TOT_RCPT_QTY_BS using the alias name TotRcptQtyBs.
     * @return the TOT_RCPT_QTY_BS
     */
    public Number getTotRcptQtyBs() {
        return (Number)getAttributeInternal(TOTRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_RCPT_QTY_BS using the alias name TotRcptQtyBs.
     * @param value value to set the TOT_RCPT_QTY_BS
     */
    public void setTotRcptQtyBs(Number value) {
        setAttributeInternal(TOTRCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for LND_PRICE_BS using the alias name LndPriceBs.
     * @return the LND_PRICE_BS
     */
    public Number getLndPriceBs() {
        return (Number) getAttributeInternal(LNDPRICEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for LND_PRICE_BS using the alias name LndPriceBs.
     * @param value value to set the LND_PRICE_BS
     */
    public void setLndPriceBs(Number value) {
        setAttributeInternal(LNDPRICEBS, value);
    }

    /**
     * Gets the attribute value for PUR_PRICE using the alias name PurPrice.
     * @return the PUR_PRICE
     */
    public Number getPurPrice() {
        return (Number) getAttributeInternal(PURPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for PUR_PRICE using the alias name PurPrice.
     * @param value value to set the PUR_PRICE
     */
    public void setPurPrice(Number value) {
        setAttributeInternal(PURPRICE, value);
    }

    /**
     * Gets the attribute value for PUR_PRICE_BS using the alias name PurPriceBs.
     * @return the PUR_PRICE_BS
     */
    public Number getPurPriceBs() {
        return (Number) getAttributeInternal(PURPRICEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for PUR_PRICE_BS using the alias name PurPriceBs.
     * @param value value to set the PUR_PRICE_BS
     */
    public void setPurPriceBs(Number value) {
        setAttributeInternal(PURPRICEBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItemName.
     * @return the TransItemName
     */
    public String getTransItemName() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
              
              String inputitm=null;
              String itmDesc=null;
              try{
                  inputitm=getItmId();
                 //x.getAttribute("TvouCoaId");
                 }catch(NullPointerException npe){
                    
              }
              if(inputitm!=null){
                  am.getLovItmForDisp().setNamedWhereClauseParam("slocIdBind", getSlocId());
                  am.getLovItmForDisp().setNamedWhereClauseParam("cldIdBind", getCldId());
                am.getLovItmForDisp().setNamedWhereClauseParam("hoOrgIdBind",getTransHoOrgId() );
                  am.getLovItmForDisp().setNamedWhereClauseParam("orgIdBind", getOrgId() );
                  am.getLovItmForDisp().setNamedWhereClauseParam("itmIdBind",inputitm);
                  am.getLovItmForDisp().setNamedWhereClauseParam("itmNameBind",null);
                  am.getLovItmForDisp().executeQuery();
                 Row[] xx=am.getLovItmForDisp().getFilteredRows("ItmId", inputitm);
              // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
                 if(xx.length>0){
                       itmDesc= xx[0].getAttribute("ItmDesc").toString();
                 }
                 return itmDesc;
              
              }else{
        
                        return (String) getAttributeInternal(TRANSITEMNAME);
              }
    }


    public Object resolvElDC(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp =
               elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
           return valueExp.getValue(elContext);
    }
    
    
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItemName.
     * @param value value to set the  TransItemName
     */
    public void setTransItemName(String value) {
        setAttributeInternal(TRANSITEMNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsItemSerial.
     * @return the TransIsItemSerial
     */
    public String getTransIsItemSerial() {
        String srlFg="N";
        if(getItmId()!=null){
            MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
            am.getLovItmForDisp().setNamedWhereClauseParam("slocIdBind", getSlocId());
            am.getLovItmForDisp().setNamedWhereClauseParam("cldIdBind", getCldId());
            am.getLovItmForDisp().setNamedWhereClauseParam("hoOrgIdBind",getTransHoOrgId() );
            am.getLovItmForDisp().setNamedWhereClauseParam("orgIdBind", getOrgId() );
            am.getLovItmForDisp().setNamedWhereClauseParam("itmIdBind",this.getItmId());
            am.getLovItmForDisp().setNamedWhereClauseParam("itmNameBind",null);
            am.getLovItmForDisp().executeQuery();
            RowQualifier rq=new RowQualifier(am.getLovItmForDisp());
            rq.setWhereClause("ItmId='"+this.getItmId()+"' and SlocId="+this.getSlocId()+" and OrgId='"+this.getOrgId()+"' and CldId='"+this.getCldId()+"'");
           
            Row[] rw=am.getLovItmForDisp().getFilteredRows(rq);
           
            if(rw.length>0){
                if(rw[0].getAttribute("SerializedFlg")!=null){
                   
                    srlFg=rw[0].getAttribute("SerializedFlg").toString();
                   
                    return srlFg;
                }    
            }
        }else{
            return srlFg;
        }
        return srlFg;
        //return (String) getAttributeInternal(TRANSISITEMSERIAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsItemSerial.
     * @param value value to set the  TransIsItemSerial
     */
    public void setTransIsItemSerial(String value) {
        setAttributeInternal(TRANSISITEMSERIAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalQty.
     * @return the TransTotalQty
     */
    public Number getTransTotalQty() {
        Number zero=new Number(0);
        Number tot=zero;
        Number fctr=zero;
        
        Number rej=zero;
        Number rcpt=zero;
        Number rwk=zero;
        Number qcrej=zero;
        
        if(this.getRejQty()!=null){
            rej=this.getRejQty();
        }
        if(this.getRcptQty()!=null){
            rcpt=this.getRcptQty();
        }
        if(this.getRwkQty()!=null){
            rwk=this.getRwkQty();
        }
        tot=rcpt.add(rej.add(rwk));
        
        if(this.getUomConvFctr()!=null){
            fctr=this.getUomConvFctr();
        }
       MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();  
       Object obj= am.getMmMtlRcpt().getCurrentRow().getAttribute("RcptSrcType");
       Object docObj=am.getMmMtlRcpt().getCurrentRow().getAttribute("TransSrcDocType");
       if(this.getQcRejQty()!=null){
           qcrej=this.getQcRejQty();
       }
       if(obj!=null){
           if(((Integer)obj).compareTo(396)==0 || ((Integer)docObj).compareTo(267)==0){
              
           }else{
              // this.setFinalRcptQty(tot.subtract(rej.add(rwk.add(qcrej))));
              // this.setFinalRcptQtyBs( fctr.multiply(tot.subtract(rej.add(rwk.add(qcrej)))));
           }
       }
        
            
           // this.setRcptQtyBs(fctr.multiply(rcpt));
           // this.setRejQtyBs(fctr.multiply(rej));
           // this.setRwkQtyBs(fctr.multiply(rwk));
           // setTotRcptQty(tot);
           // setTotRcptQtyBs(fctr.multiply(tot));
            return tot;
    
           // return (Number) getAttributeInternal(TRANSTOTALQTY);
      
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalQty.
     * @param value value to set the  TransTotalQty
     */
    public void setTransTotalQty(Number value) {
        setAttributeInternal(TRANSTOTALQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrNo.
     * @return the TransSrNo
     */
    public String getTransSrNo() {
        return (String) getAttributeInternal(TRANSSRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrNo.
     * @param value value to set the  TransSrNo
     */
    public void setTransSrNo(String value) {
        setAttributeInternal(TRANSSRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmLotChk.
     * @return the TransItmLotChk -- Y -- invalid
     *                               N -- valid
     *                               O -- No rows
     */
    public String getTransItmLotChk() {
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
        RowSetIterator rsi=am.getMmMtlRcptLot1().createRowSetIterator(null);
        Number lotsum=new Number(0);
        Number rcptqty=new Number(0);
        if(this.getRcptQty()!=null){
            rcptqty=this.getRcptQty();
        }
        while(rsi.hasNext()){
            lotsum=lotsum.add((Number)rsi.next().getAttribute("LotQty")); 
        }
        if(rsi.getRowCount()==0){
            return "O";
        }
        if(rcptqty.compareTo(lotsum)!=0){
          return "Y";    
        }else{
            return "N";
        }
        //return (String) getAttributeInternal(TRANSITMLOTCHK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmLotChk.
     * @param value value to set the  TransItmLotChk
     */
    public void setTransItmLotChk(String value) {
        setAttributeInternal(TRANSITMLOTCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmBinChk.
     * @return the TransItmBinChk -- Y -- invalid
     *                               N -- valid
     *                               O -- No rows
     */
    public String getTransItmBinChk() {
        MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
        String parambinChk = resolvEl("#{pageFlowScope.GLBL_ORG_BIN_CHK}");
        ViewObjectImpl rcptVo=am.getMmMtlRcpt();
        ViewObjectImpl binVo=am.getMmMtlRcptBin2();
        RowQualifier rq=new RowQualifier(binVo);
        rq.setWhereClause("CldId='"+this.getCldId()+"' and SlocId="+this.getSlocId()+" and OrgId='"+this.getOrgId()+"' and WhId='"+this.getWhId()+"' and DocId='"+this.getDocId()+"' and DocIdSrc='"+this.getDocIdSrc()+"' and DlvSchdlNo="+this.getDlvSchdlNo()+" and ItmId='"+this.getItmId()+"' and ItmUom='"+this.getItmUom()+"'");
        Row[] binRw=binVo.getFilteredRows(rq);
        
        if(parambinChk.equals("N")){
            return "N";
        }
        
        if(binRw.length==0){
            return "O";
        }
        Number binsum=new Number(0);
        Number rcptqty=new Number(0);
        
        if((Integer)rcptVo.getCurrentRow().getAttribute("RcptStg")==346){ //at store
            if(this.getRcptQty()!=null){
                rcptqty=this.getRcptQty();
            }
       
        }else{
            if(this.getFinalRcptQty()!=null){
                rcptqty=this.getFinalRcptQty();
            }
        }
        
        for(Row rw:binRw){
            binsum=binsum.add((Number)rw.getAttribute("BinQty")); 
        }
        if(rcptqty.compareTo(binsum)!=0){
          return "Y";    
        }else{
          return "N";
        }
        //return (String) getAttributeInternal(TRANSITMBINCHK);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmBinChk.
     * @param value value to set the  TransItmBinChk
     */
    public void setTransItmBinChk(String value) {
        setAttributeInternal(TRANSITMBINCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrLotId.
     * @return the TransSrLotId
     */
    public String getTransSrLotId() {
        String parambinChk = resolvEl("#{pageFlowScope.GLBL_ORG_BIN_CHK}");
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        if("Y".equals(parambinChk)){
           
            Row binrw=am.getMmMtlRcptBin1().getCurrentRow();
            if(binrw!=null){
                if(binrw.getAttribute("LotId")!=null){
                    return binrw.getAttribute("LotId").toString();
                }else{
                    return (String) getAttributeInternal(TRANSSRLOTID);
                }
            }else{
                return (String) getAttributeInternal(TRANSSRLOTID);
            }
        }else{
            Row lotRw=am.getMmMtlRcptLot1().getCurrentRow();
            if(lotRw!=null){
                if(lotRw.getAttribute("LotId")!=null){
                    return lotRw.getAttribute("LotId").toString();
                }else{
                    return (String) getAttributeInternal(TRANSSRLOTID);
                }
            }else{
                return (String) getAttributeInternal(TRANSSRLOTID);
            }
        }
        
        //return (String) getAttributeInternal(TRANSSRLOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrLotId.
     * @param value value to set the  TransSrLotId
     */
    public void setTransSrLotId(String value) {
        setAttributeInternal(TRANSSRLOTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrBinId.
     * @return the TransSrBinId
     */
    public String getTransSrBinId() {
        String parambinChk = resolvEl("#{pageFlowScope.GLBL_ORG_BIN_CHK}");
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        if("Y".equals(parambinChk)){
            Row binrw=am.getMmMtlRcptBin1().getCurrentRow();
            if(binrw!=null){
                if(binrw.getAttribute("BinId")!=null){
                    return binrw.getAttribute("BinId").toString();
                }else{
                    return (String) getAttributeInternal(TRANSSRBINID);
                }
            }else{
                return (String) getAttributeInternal(TRANSSRBINID);
            }
        }else{
            return "0";
        }
      //  return (String) getAttributeInternal(TRANSSRBINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrBinId.
     * @param value value to set the  TransSrBinId
     */
    public void setTransSrBinId(String value) {
        setAttributeInternal(TRANSSRBINID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrSerialNo.
     * @return the TransSrSerialNo
     */
    public String getTransSrSerialNo() {
        return (String) getAttributeInternal(TRANSSRSERIALNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrSerialNo.
     * @param value value to set the  TransSrSerialNo
     */
    public void setTransSrSerialNo(String value) {
        setAttributeInternal(TRANSSRSERIALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCountAccept.
     * @return the TransCountAccept
     */
    public Number getTransCountAccept() {
        
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        RowSetIterator rsi=am.getMmMtlRcptSrno1().createRowSetIterator(null);
        Integer count=new Integer(0);
        while(rsi.hasNext()){
            Row srRw=rsi.next();
            if(srRw.getAttribute("StoreRslt")!=null){
                String sr=srRw.getAttribute("StoreRslt").toString();
                if(sr.equals("A")){
                    count=count+1;
                }
            }      
        }
        rsi.closeRowSetIterator();
        Number cnt=new Number(0);
        try {
            cnt = new Number(count);
        } catch (SQLException e) {
        }
        return cnt;
        //return (Number) getAttributeInternal(TRANSCOUNTACCEPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCountAccept.
     * @param value value to set the  TransCountAccept
     */
    public void setTransCountAccept(Number value) {
        setAttributeInternal(TRANSCOUNTACCEPT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCountRejected.
     * @return the TransCountRejected
     */
    public Number getTransCountRejected() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        RowSetIterator rsi=am.getMmMtlRcptSrno1().createRowSetIterator(null);
        Integer count=new Integer(0);
        while(rsi.hasNext()){
            Row srRw=rsi.next();
            if(srRw.getAttribute("StoreRslt")!=null){
                String sr=srRw.getAttribute("StoreRslt").toString();
                if(sr.equals("R")){
                    count=count+1;
                }
            }      
        }
        rsi.closeRowSetIterator();
        Number cnt=new Number(0);
        try {
            cnt = new Number(count);
        } catch (SQLException e) {
        }
        return cnt;
       // return (Number) getAttributeInternal(TRANSCOUNTREJECTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCountRejected.
     * @param value value to set the  TransCountRejected
     */
    public void setTransCountRejected(Number value) {
        setAttributeInternal(TRANSCOUNTREJECTED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCountRework.
     * @return the TransCountRework
     */
    public Number getTransCountRework() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        RowSetIterator rsi=am.getMmMtlRcptSrno1().createRowSetIterator(null);
        Integer count=new Integer(0);
        while(rsi.hasNext()){
            Row srRw=rsi.next();
            if(srRw.getAttribute("StoreRslt")!=null){
                String sr=srRw.getAttribute("StoreRslt").toString();
                if(sr.equals("W")){
                    count=count+1;
                }
            }      
        }
        rsi.closeRowSetIterator();
        Number cnt=new Number(0);
        try {
            cnt = new Number(count);
        } catch (SQLException e) {
        }
        return cnt;
        //return (Number) getAttributeInternal(TRANSCOUNTREWORK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCountRework.
     * @param value value to set the  TransCountRework
     */
    public void setTransCountRework(Number value) {
        setAttributeInternal(TRANSCOUNTREWORK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsRej.
     * @return the TransIsRej
     */
    public Boolean getTransIsRej() {
        if(getRejQty()!=null && getRejQty().compareTo(new Number(0))!=0)
            return true;
        else
            return false;
      //  return (Boolean) getAttributeInternal(TRANSISREJ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIsRej.
     * @param value value to set the  TransIsRej
     */
    public void setTransIsRej(Boolean value) {
        setAttributeInternal(TRANSISREJ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transGeRcptQty.
     * @return the transGeRcptQty
     */
    public Number gettransGeRcptQty() {
      //  return (Number) getAttributeInternal(TRANSGERCPTQTY);
        if(resolvEl("#{pageFlowScope.GLBL_ORG_GE_CHK}").equals("Y"))
        {
            MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
            Integer srcType = (Integer)am.getMmMtlRcpt().getCurrentRow().getAttribute("TransSrcDocType");
    //if(srcType.equals(266)){
      String docId = (String)am.getMmMtlRcpt().getCurrentRow().getAttribute("GeDocId");
      am.getMmMtlGeItm().setNamedWhereClauseParam("cldIdBindVar", getCldId());
        am.getMmMtlGeItm().setNamedWhereClauseParam("slocIdBindVar", getSlocId());
        am.getMmMtlGeItm().setNamedWhereClauseParam("orgIdBindVar", getOrgId());
        am.getMmMtlGeItm().setNamedWhereClauseParam("whIdBindVar", getWhId());
        am.getMmMtlGeItm().setNamedWhereClauseParam("docIdBindVar", docId);
        am.getMmMtlGeItm().setNamedWhereClauseParam("docIdSrcBindVar", getDocIdSrc());
        am.getMmMtlGeItm().setNamedWhereClauseParam("dlvSchdlNoBindVar", getDlvSchdlNo());
        am.getMmMtlGeItm().setNamedWhereClauseParam("itmIdBindVar", getItmId());
        am.getMmMtlGeItm().setNamedWhereClauseParam("itmUomBindVar", getItmUom());
    //    System.out.println("Item id used to filter="+getItmId());
        am.getMmMtlGeItm().executeQuery();
        Number qty=new Number(0);
       Row[] fr=am.getMmMtlGeItm().getAllRowsInRange();
    //   System.out.println("rcptItmRowImpl->gettransGeRcptQty->No of rows in geitm="+fr.length);
       if(fr.length>0)
       { 
           if(fr[0].getAttribute("RcptQty")!=null)
               qty = (Number)fr[0].getAttribute("RcptQty");
       //    System.out.println("rowimpl ItmId in GE="+fr[0].getAttribute("ItmId"));
       //      System.out.println("rowimpl RcptQty in GE="+qty);
       }
   
       return qty;
          /*   }
            else
                return new Number(0); */
        }
        else
            return new Number(0);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transGeRcptQty.
     * @param value value to set the  transGeRcptQty
     */
    public void settransGeRcptQty(Number value) {
        setAttributeInternal(TRANSGERCPTQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmGrpDesc.
     * @return the TransItmGrpDesc
     */
    public String getTransItmGrpDesc() {
        MMReceiptMtlAMImpl am = (MMReceiptMtlAMImpl)this.getApplicationModule();
        if(getItmId()!=null){
            am.getLovItmForDisp().setNamedWhereClauseParam("slocIdBind", getSlocId());
            am.getLovItmForDisp().setNamedWhereClauseParam("cldIdBind", getCldId());
           am.getLovItmForDisp().setNamedWhereClauseParam("hoOrgIdBind",getTransHoOrgId() );
            am.getLovItmForDisp().setNamedWhereClauseParam("orgIdBind", getOrgId() );
            am.getLovItmForDisp().setNamedWhereClauseParam("itmIdBind",getItmId());
            am.getLovItmForDisp().setNamedWhereClauseParam("itmNameBind",null);
            am.getLovItmForDisp().executeQuery();
           Row[] xx=am.getLovItmForDisp().getFilteredRows("ItmId", getItmId());
        Object attdetail=null;
       System.out.println("grp id length is "+xx.length);
        if(xx.length>0){
        attdetail=callStoredFunction(Types.VARCHAR, "APP.GET_ITM_GRP_PATH(?,?,?,?)",new Object[] {getSlocId(), getCldId(), getTransHoOrgId(),xx[0].getAttribute("GrpId")});
        System.out.println("function return "+attdetail+" grp and itm id is " +xx[0].getAttribute("GrpId")+" "+getItmId());
        
        } if(attdetail!=null){
        return attdetail.toString();
        }else{
            return (String) getAttributeInternal(TRANSITMGRPDESC);
        }
        }else{
            return (String) getAttributeInternal(TRANSITMGRPDESC);
        }
        
        //return (String) getAttributeInternal(TRANSITMGRPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmGrpDesc.
     * @param value value to set the  TransItmGrpDesc
     */
    public void setTransItmGrpDesc(String value) {
        setAttributeInternal(TRANSITMGRPDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmAttDesc.
     * @return the TransItmAttDesc
     */
    public String getTransItmAttDesc() {
        System.out.println("get item id is " + getItmId()+getCldId()+" "+getSlocId()+" "+getTransHoOrgId());
        if (getItmId() != null) {

            Object attdetail =
                callStoredFunction(Types.VARCHAR, "APP.FN_GET_ITM_ATT(?,?,?,?,?,?)", new Object[] { getCldId(),getSlocId(),getTransHoOrgId(),getItmId(), "R","," });
                 System.out.println("function return " + attdetail + " " + getItmId());
            if (attdetail != null) {
                return attdetail.toString();
            } else {
                return "None";
            }
        } else {
            return "None";
        }
        
    }



    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmAttDesc.
     * @param value value to set the  TransItmAttDesc
     */
    public void setTransItmAttDesc(String value) {
        setAttributeInternal(TRANSITMATTDESC, value);
    }



    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                MMReceiptMtlAMImpl am=(MMReceiptMtlAMImpl)this.getApplicationModule();
                st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
     
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) { throw new JboException(e);
                    }
                }
            }
        }




    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlRcptLot.
     */
    public RowIterator getMmMtlRcptLot() {
        return (RowIterator)getAttributeInternal(MMMTLRCPTLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlRcptBin.
     */
    public RowIterator getMmMtlRcptBin() {
        return (RowIterator)getAttributeInternal(MMMTLRCPTBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlRcptSr.
     */
    public RowIterator getMmMtlRcptSr() {
        return (RowIterator)getAttributeInternal(MMMTLRCPTSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlRcptSrno.
     */
    public RowIterator getMmMtlRcptSrno() {
        return (RowIterator)getAttributeInternal(MMMTLRCPTSRNO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO.
     */
    public RowSet getLovItmIdVO() {
        return (RowSet)getAttributeInternal(LOVITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomVO.
     */
    public RowSet getLovUomVO() {
        return (RowSet)getAttributeInternal(LOVUOMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmMtlRcptSrnoVO1.
     */
    public RowSet getMmMtlRcptSrnoVO1() {
        return (RowSet)getAttributeInternal(MMMTLRCPTSRNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBinVO.
     */
    public RowSet getLovBinVO() {
        return (RowSet)getAttributeInternal(LOVBINVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
