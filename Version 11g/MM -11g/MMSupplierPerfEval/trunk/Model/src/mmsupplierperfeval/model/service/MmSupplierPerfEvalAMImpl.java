package mmsupplierperfeval.model.service;

import mmsupplierperfeval.model.views.AppEoPrfVOImpl;
import mmsupplierperfeval.model.views.DualVOImpl;
import mmsupplierperfeval.model.views.MmEoPerfEvalVOImpl;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 09 12:38:26 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmSupplierPerfEvalAMImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public MmSupplierPerfEvalAMImpl() {
    }

    /**
     * Container's getter for MmEoPerfEval.
     * @return MmEoPerfEval
     */
    public MmEoPerfEvalVOImpl getMmEoPerfEval() {
        return (MmEoPerfEvalVOImpl)findViewObject("MmEoPerfEval");
    }

    /**
     * Container's getter for MmEvalParam.
     * @return MmEvalParam
     */
    public ViewObjectImpl getMmEvalParam() {
        return (ViewObjectImpl)findViewObject("MmEvalParam");
    }

    /**
     * Container's getter for MmEoPerfEvalView.
     * @return MmEoPerfEvalView
     */
    public MmEoPerfEvalVOImpl getMmEoPerfEvalView() {
        return (MmEoPerfEvalVOImpl)findViewObject("MmEoPerfEvalView");
    }

    /**
     * Container's getter for ParamSetLOV1.
     * @return ParamSetLOV1
     */
    public ViewObjectImpl getParamSetLOV1() {
        return (ViewObjectImpl)findViewObject("ParamSetLOV1");
    }

    /**
     * Container's getter for MmEoPerfRest1.
     * @return MmEoPerfRest1
     */
    public ViewObjectImpl getMmEoPerfRest1() {
        return (ViewObjectImpl)findViewObject("MmEoPerfRest1");
    }

    /**
     * Container's getter for Dual.
     * @return Dual
     */
    public ViewObjectImpl getDual() {
        return (ViewObjectImpl)findViewObject("Dual");
    }

    /**
     * Container's getter for MmEoPerfEvalViewForReEval.
     * @return MmEoPerfEvalViewForReEval
     */
    public ViewObjectImpl getMmEoPerfEvalViewForReEval() {
        return (ViewObjectImpl)findViewObject("MmEoPerfEvalViewForReEval");
    }

    /**
     * Container's getter for AppEoPrf.
     * @return AppEoPrf
     */
    public ViewObjectImpl getAppEoPrf() {
        return (ViewObjectImpl)findViewObject("AppEoPrf");
    }

    /**
     * Container's getter for MmEoPerfEval1.
     * @return MmEoPerfEval1
     */
    public MmEoPerfEvalVOImpl getMmEoPerfEval1() {
        return (MmEoPerfEvalVOImpl)findViewObject("MmEoPerfEval1");
    }

    /**
     * Container's getter for AppEoPrfToMMPerfEvalVL1.
     * @return AppEoPrfToMMPerfEvalVL1
     */
    public ViewLinkImpl getAppEoPrfToMMPerfEvalVL1() {
        return (ViewLinkImpl)findViewLink("AppEoPrfToMMPerfEvalVL1");
    }


    /**
     * Container's getter for MmEoPerfRsltNew.
     * @return MmEoPerfRsltNew
     */
    public ViewObjectImpl getMmEoPerfRsltNew() {
        return (ViewObjectImpl)findViewObject("MmEoPerfRsltNew");
    }
}
