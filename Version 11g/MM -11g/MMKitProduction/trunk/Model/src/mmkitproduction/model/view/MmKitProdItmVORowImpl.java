package mmkitproduction.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmkitproduction.model.services.MMKitProductionAMImpl;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 21 11:47:55 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmKitProdItmVORowImpl extends ViewRowImpl {

 private static ADFLogger adflog=ADFLogger.createADFLogger(MmKitProdItmVORowImpl.class);
    public static final int ENTITY_MMKITPRODITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        IpItmId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getIpItmId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setIpItmId((String)value);
            }
        }
        ,
        IpItmUom {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getIpItmUom();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setIpItmUom((String)value);
            }
        }
        ,
        OkQty {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getOkQty();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setOkQty((Number)value);
            }
        }
        ,
        OpItmId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getOpItmId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setOpItmId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        TotQty {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getTotQty();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setTotQty((Number)value);
            }
        }
        ,
        WhId {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        StkTrans {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getStkTrans();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setStkTrans((Number)value);
            }
        }
        ,
        StkTrnsFlg {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getStkTrnsFlg();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setStkTrnsFlg((String)value);
            }
        }
        ,
        ChkEmpty {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getChkEmpty();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setChkEmpty((String)value);
            }
        }
        ,
        MmKitWhVO1 {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getMmKitWhVO1();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        InputItmDetailVO1 {
            public Object get(MmKitProdItmVORowImpl obj) {
                return obj.getInputItmDetailVO1();
            }

            public void put(MmKitProdItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmKitProdItmVORowImpl object);

        public abstract void put(MmKitProdItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int IPITMID = AttributesEnum.IpItmId.index();
    public static final int IPITMUOM = AttributesEnum.IpItmUom.index();
    public static final int OKQTY = AttributesEnum.OkQty.index();
    public static final int OPITMID = AttributesEnum.OpItmId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TOTQTY = AttributesEnum.TotQty.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int STKTRANS = AttributesEnum.StkTrans.index();
    public static final int STKTRNSFLG = AttributesEnum.StkTrnsFlg.index();
    public static final int CHKEMPTY = AttributesEnum.ChkEmpty.index();
    public static final int MMKITWHVO1 = AttributesEnum.MmKitWhVO1.index();
    public static final int INPUTITMDETAILVO1 = AttributesEnum.InputItmDetailVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmKitProdItmVORowImpl() {
    }

    /**
     * Gets MmKitProdItmEO entity object.
     * @return the MmKitProdItmEO
     */
    public EntityImpl getMmKitProdItmEO() {
        return (EntityImpl)getEntity(ENTITY_MMKITPRODITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for IP_ITM_ID using the alias name IpItmId.
     * @return the IP_ITM_ID
     */
    public String getIpItmId() {
        return (String) getAttributeInternal(IPITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for IP_ITM_ID using the alias name IpItmId.
     * @param value value to set the IP_ITM_ID
     */
    public void setIpItmId(String value) {
        setAttributeInternal(IPITMID, value);
    }

    /**
     * Gets the attribute value for IP_ITM_UOM using the alias name IpItmUom.
     * @return the IP_ITM_UOM
     */
    public String getIpItmUom() {
        return (String) getAttributeInternal(IPITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for IP_ITM_UOM using the alias name IpItmUom.
     * @param value value to set the IP_ITM_UOM
     */
    public void setIpItmUom(String value) {
        setAttributeInternal(IPITMUOM, value);
    }

    /**
     * Gets the attribute value for OK_QTY using the alias name OkQty.
     * @return the OK_QTY
     */
    public Number getOkQty() {
        return (Number) getAttributeInternal(OKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OK_QTY using the alias name OkQty.
     * @param value value to set the OK_QTY
     */
    public void setOkQty(Number value) {
        setAttributeInternal(OKQTY, value);
    }

    /**
     * Gets the attribute value for OP_ITM_ID using the alias name OpItmId.
     * @return the OP_ITM_ID
     */
    public String getOpItmId() {
        return (String) getAttributeInternal(OPITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for OP_ITM_ID using the alias name OpItmId.
     * @param value value to set the OP_ITM_ID
     */
    public void setOpItmId(String value) {
        setAttributeInternal(OPITMID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TOT_QTY using the alias name TotQty.
     * @return the TOT_QTY
     */
    public Number getTotQty() {
        return (Number) getAttributeInternal(TOTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_QTY using the alias name TotQty.
     * @param value value to set the TOT_QTY
     */
    public void setTotQty(Number value) {
        setAttributeInternal(TOTQTY, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkTrans.
     * @return the StkTrans
     */
    public Number getStkTrans() {
        this.getIpItmId();
        // 
        return (Number) getAttributeInternal(STKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkTrans.
     * @param value value to set the  StkTrans
     */
    public void setStkTrans(Number value) {
        setAttributeInternal(STKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkTrnsFlg.
     * @return the StkTrnsFlg
     */
     public Object resolvElDC(String data) {
     FacesContext fc = FacesContext.getCurrentInstance();
     Application app = fc.getApplication();
     ExpressionFactory elFactory = app.getExpressionFactory();
     ELContext elContext = fc.getELContext();
     ValueExpression valueExp =
     elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
     return valueExp.getValue(elContext);
     }
     
    public String getStkTrnsFlg() {
        
       MMKitProductionAMImpl am=(MMKitProductionAMImpl)this.getApplicationModule();
       ViewObjectImpl itmstkVo=am.getMmKitProdItmStkO1();
                String inptId=this.getIpItmId();
                String DocId=this.getDocId();
                int SlocId=this.getSlocId();
                String CldId=this.getCldId();
                String OrgId=this.getOrgId();
                String whId=this.getWhId();
        RowQualifier rowQualifier = new RowQualifier(itmstkVo);
        
        rowQualifier.setWhereClause("IpItmId= '"+inptId+"' AND DocId= '"+DocId+"' AND CldId= '"+CldId+"' AND OrgId= '"+OrgId+"' AND WhId= '"+whId+"' AND SlocId= "+SlocId);
       // System.out.println("In rowImpl");
        Row[] filteredrows= itmstkVo.getFilteredRows(rowQualifier);
       // System.out.println("Get Fil rows"+filteredrows.length);
        
        if(filteredrows.length>0){
            return "Y";
        }else{
            return "N";
        }
      /*   String inptId=this.getIpItmId();
        String DocId=this.getDocId();
        int SlocId=this.getSlocId();
        String CldId=this.getCldId();
        String OrgId=this.getOrgId();
        String whId=this.getWhId();
        MMKitProductionAMImpl am =(MMKitProductionAMImpl)resolvElDC("MMKitProductionAMDataControl");
        MmKitProdItmStkOImpl itmstkVo = am.getMmKitProdItmStkO1();
        RowQualifier rowQualifier = new RowQualifier(itmstkVo);
        
        rowQualifier.setWhereClause("IpItmId= '"+inptId+"' AND DocId= '"+DocId+"' AND CldId= '"+CldId+"' AND OrgId= '"+OrgId+"' AND WhId= '"+whId+"' AND SlocId= "+SlocId);
        //Row[] filteredRows = inptitem.getFilteredRows(rowQualifier);
        System.out.println("Itm Stk vo count: "+ itmstkVo);
       
        Row[] filteredrows= itmstkVo.getFilteredRows(rowQualifier);
       System.out.println("Filtered Rows length"+filteredrows.length);
        if(filteredrows.length>0) {
            //System.out.println("setted value is Y" );
            return "Y";
         
        }
        else{
            //System.out.println(" setted value is N");
            return "N";
        } */

       
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkTrnsFlg.
     * @param value value to set the  StkTrnsFlg
     */
    public void setStkTrnsFlg(String value) {
        setAttributeInternal(STKTRNSFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChkEmpty.
     * @return the ChkEmpty
     */
    public String getChkEmpty() {
        
       return (String) getAttributeInternal(CHKEMPTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChkEmpty.
     * @param value value to set the  ChkEmpty
     */
    public void setChkEmpty(String value) {
        setAttributeInternal(CHKEMPTY, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmKitWhVO1.
     */
    public RowSet getMmKitWhVO1() {
        return (RowSet)getAttributeInternal(MMKITWHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> InputItmDetailVO1.
     */
    public RowSet getInputItmDetailVO1() {
        return (RowSet)getAttributeInternal(INPUTITMDETAILVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
