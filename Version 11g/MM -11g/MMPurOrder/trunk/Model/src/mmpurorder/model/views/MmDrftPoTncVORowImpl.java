package mmpurorder.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmpurorder.model.entities.MmDrftPoTncEOImpl;

import mmpurorder.model.service.PurOrderAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 15 16:10:36 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmDrftPoTncVORowImpl extends ViewRowImpl {

    public static final int ENTITY_MMDRFTPOTNCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        EntityId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        Priority {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getPriority();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setPriority((Integer)value);
            }
        }
        ,
        SlocId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        TncId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getTncId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setTncId((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        AmdNo {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getAmdNo();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setAmdNo((Integer)value);
            }
        }
        ,
        AmdDt {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getAmdDt();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setAmdDt((Date)value);
            }
        }
        ,
        CldId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        TranstncDesc {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getTranstncDesc();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setTranstncDesc((String)value);
            }
        }
        ,
        LovTncId {
            public Object get(MmDrftPoTncVORowImpl obj) {
                return obj.getLovTncId();
            }

            public void put(MmDrftPoTncVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmDrftPoTncVORowImpl object);

        public abstract void put(MmDrftPoTncVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TNCID = AttributesEnum.TncId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int AMDNO = AttributesEnum.AmdNo.index();
    public static final int AMDDT = AttributesEnum.AmdDt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int TRANSTNCDESC = AttributesEnum.TranstncDesc.index();
    public static final int LOVTNCID = AttributesEnum.LovTncId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmDrftPoTncVORowImpl() {
    }

    /**
     * Gets MmDrftPoTncEO entity object.
     * @return the MmDrftPoTncEO
     */
    public MmDrftPoTncEOImpl getMmDrftPoTncEO() {
        return (MmDrftPoTncEOImpl)getEntity(ENTITY_MMDRFTPOTNCEO);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public Integer getPriority() {
        return (Integer) getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(Integer value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TNC_ID using the alias name TncId.
     * @return the TNC_ID
     */
    public Integer getTncId() {
        return (Integer) getAttributeInternal(TNCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TNC_ID using the alias name TncId.
     * @param value value to set the TNC_ID
     */
    public void setTncId(Integer value) {
        setAttributeInternal(TNCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for AMD_NO using the alias name AmdNo.
     * @return the AMD_NO
     */
    public Integer getAmdNo() {
        return (Integer) getAttributeInternal(AMDNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_NO using the alias name AmdNo.
     * @param value value to set the AMD_NO
     */
    public void setAmdNo(Integer value) {
        setAttributeInternal(AMDNO, value);
    }

    /**
     * Gets the attribute value for AMD_DT using the alias name AmdDt.
     * @return the AMD_DT
     */
    public Date getAmdDt() {
        return (Date) getAttributeInternal(AMDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMD_DT using the alias name AmdDt.
     * @param value value to set the AMD_DT
     */
    public void setAmdDt(Date value) {
        setAttributeInternal(AMDDT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }
    public PurOrderAMImpl getAm() {
        return (PurOrderAMImpl)resolvElDC("PurOrderAMDataControl");
    }
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
    /**
     * Gets the attribute value for the calculated attribute TranstncDesc.
     * @return the TranstncDesc
     */
    public String getTranstncDesc() {
        if(getTncId()!=null)
        {
               
               /*  getAm().getLovTncId().setNamedWhereClauseParam("BindSlocId", getSlocId());
                getAm().getLovTncId().setNamedWhereClauseParam("BindCldId", getCldId());
                getAm().getLovTncId().setNamedWhereClauseParam("BindOrgId", getOrgId());
                getAm().getLovTncId().executeQuery(); */
            RowQualifier rq=new RowQualifier(getAm().getLovTncId());
           rq.setWhereClause("SlocId="+getSlocId()+" and TncId="+getTncId());
             Row r[]=   getAm().getLovTncId().getFilteredRows(rq);
             if(r.length>0)
                 return (String)r[0].getAttribute("TncDesc");
            }
       
        return (String) getAttributeInternal(TRANSTNCDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranstncDesc.
     * @param value value to set the  TranstncDesc
     */
    public void setTranstncDesc(String value) {
        setAttributeInternal(TRANSTNCDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTncId.
     */
    public RowSet getLovTncId() {
        return (RowSet)getAttributeInternal(LOVTNCID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
