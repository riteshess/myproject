package mmmaterialreqslip.model.view;

import java.sql.ResultSet;

import oracle.jbo.domain.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;


import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 12:52:36 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMrsVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public MmMrsVOImpl() {
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }


    /**
     * Returns the variable value for BindReqArea.
     * @return variable value for BindReqArea
     */
    public String getBindReqArea() {
        return (String)ensureVariableManager().getVariableValue("BindReqArea");
    }

    /**
     * Sets <code>value</code> for variable BindReqArea.
     * @param value value to bind as BindReqArea
     */
    public void setBindReqArea(String value) {
        ensureVariableManager().setVariableValue("BindReqArea", value);
    }

    /**
     * Returns the variable value for BindWh.
     * @return variable value for BindWh
     */
    public String getBindWh() {
        return (String)ensureVariableManager().getVariableValue("BindWh");
    }

    /**
     * Sets <code>value</code> for variable BindWh.
     * @param value value to bind as BindWh
     */
    public void setBindWh(String value) {
        ensureVariableManager().setVariableValue("BindWh", value);
    }

    /**
     * Returns the variable value for BindMrsNo.
     * @return variable value for BindMrsNo
     */
    public String getBindMrsNo() {
        return (String)ensureVariableManager().getVariableValue("BindMrsNo");
    }

    /**
     * Sets <code>value</code> for variable BindMrsNo.
     * @param value value to bind as BindMrsNo
     */
    public void setBindMrsNo(String value) {
        ensureVariableManager().setVariableValue("BindMrsNo", value);
    }

    /**
     * Returns the variable value for MrsTxnBind.
     * @return variable value for MrsTxnBind
     */
    public String getMrsTxnBind() {
        return (String)ensureVariableManager().getVariableValue("MrsTxnBind");
    }

    /**
     * Sets <code>value</code> for variable MrsTxnBind.
     * @param value value to bind as MrsTxnBind
     */
    public String resolvEl(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String msg = valueExp.getValue(elContext).toString();
         return msg;
     }
    public void setMrsTxnBind(String value) {
       ensureVariableManager().setVariableValue("MrsTxnBind",value);
    }

    /**
     * Returns the variable value for BindMrsStatus.
     * @return variable value for BindMrsStatus
     */
    public Integer getBindMrsStatus() {
        return (Integer)ensureVariableManager().getVariableValue("BindMrsStatus");
    }

    /**
     * Sets <code>value</code> for variable BindMrsStatus.
     * @param value value to bind as BindMrsStatus
     */
    public void setBindMrsStatus(Integer value) {
        ensureVariableManager().setVariableValue("BindMrsStatus", value);
    }

    /**
     * Returns the variable value for BindMrsDtFrom.
     * @return variable value for BindMrsDtFrom
     */
    public Timestamp getBindMrsDtFrom() {
        return (Timestamp)ensureVariableManager().getVariableValue("BindMrsDtFrom");
    }

    /**
     * Sets <code>value</code> for variable BindMrsDtFrom.
     * @param value value to bind as BindMrsDtFrom
     */
    public void setBindMrsDtFrom(Timestamp value) {
        ensureVariableManager().setVariableValue("BindMrsDtFrom", value);
    }

    /**
     * Returns the variable value for BindMrsDtTo.
     * @return variable value for BindMrsDtTo
     */
    public Timestamp getBindMrsDtTo() {
        return (Timestamp)ensureVariableManager().getVariableValue("BindMrsDtTo");
    }

    /**
     * Sets <code>value</code> for variable BindMrsDtTo.
     * @param value value to bind as BindMrsDtTo
     */
    public void setBindMrsDtTo(Timestamp value) {
        ensureVariableManager().setVariableValue("BindMrsDtTo", value);
    }

    /**
     * Returns the variable value for BindCld.
     * @return variable value for BindCld
     */
    public String getBindCld() {
        return (String)ensureVariableManager().getVariableValue("BindCld");
    }

    /**
     * Sets <code>value</code> for variable BindCld.
     * @param value value to bind as BindCld
     */
    public void setBindCld(String value) {
        ensureVariableManager().setVariableValue("BindCld", value);
    }

    /**
     * Returns the variable value for BindSloc.
     * @return variable value for BindSloc
     */
    public Integer getBindSloc() {
        return (Integer)ensureVariableManager().getVariableValue("BindSloc");
    }

    /**
     * Sets <code>value</code> for variable BindSloc.
     * @param value value to bind as BindSloc
     */
    public void setBindSloc(Integer value) {
        ensureVariableManager().setVariableValue("BindSloc", value);
    }

    /**
     * Returns the variable value for BindOrg.
     * @return variable value for BindOrg
     */
    public String getBindOrg() {
        return (String)ensureVariableManager().getVariableValue("BindOrg");
    }

    /**
     * Sets <code>value</code> for variable BindOrg.
     * @param value value to bind as BindOrg
     */
    public void setBindOrg(String value) {
        ensureVariableManager().setVariableValue("BindOrg", value);
    }
}
