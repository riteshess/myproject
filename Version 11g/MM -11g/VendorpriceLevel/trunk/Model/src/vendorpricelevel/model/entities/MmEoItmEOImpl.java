package vendorpricelevel.model.entities;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import vendorpricelevel.model.services.vendorpriceAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 07 11:47:17 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmEoItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        EoId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getEoId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        LeadTime {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getLeadTime();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setLeadTime((Integer)value);
            }
        }
        ,
        Actv {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getActv();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        DiscType {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        TlrncType {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getTlrncType();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setTlrncType((String)value);
            }
        }
        ,
        TlrncVal {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getTlrncVal();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setTlrncVal((Number)value);
            }
        }
        ,
        OrdQty {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getOrdQty();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setOrdQty((Number)value);
            }
        }
        ,
        CldId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SrcDocId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getSrcDocId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setSrcDocId((Integer)value);
            }
        }
        ,
        SrcDocTxnId {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getSrcDocTxnId();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setSrcDocTxnId((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        ItmPriceUomBs {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getItmPriceUomBs();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setItmPriceUomBs((Number)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmEoItmEOImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmEoItmEOImpl obj, Object value) {
                obj.setCurrIdSp((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmEoItmEOImpl object);

        public abstract void put(MmEoItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int LEADTIME = AttributesEnum.LeadTime.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int TLRNCTYPE = AttributesEnum.TlrncType.index();
    public static final int TLRNCVAL = AttributesEnum.TlrncVal.index();
    public static final int ORDQTY = AttributesEnum.OrdQty.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SRCDOCID = AttributesEnum.SrcDocId.index();
    public static final int SRCDOCTXNID = AttributesEnum.SrcDocTxnId.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ITMPRICEUOMBS = AttributesEnum.ItmPriceUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmEoItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("vendorpricelevel.model.entities.MmEoItmEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }


    /**
     * Gets the attribute value for LeadTime, using the alias name LeadTime.
     * @return the value of LeadTime
     */
    public Integer getLeadTime() {
        return (Integer)getAttributeInternal(LEADTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LeadTime.
     * @param value value to set the LeadTime
     */
    public void setLeadTime(Integer value) {
        setAttributeInternal(LEADTIME, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Date getInactvDt() {
        return (Date)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for TlrncType, using the alias name TlrncType.
     * @return the value of TlrncType
     */
    public String getTlrncType() {
        return (String)getAttributeInternal(TLRNCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncType.
     * @param value value to set the TlrncType
     */
    public void setTlrncType(String value) {
        setAttributeInternal(TLRNCTYPE, value);
    }

    /**
     * Gets the attribute value for TlrncVal, using the alias name TlrncVal.
     * @return the value of TlrncVal
     */
    public Number getTlrncVal() {
        return (Number)getAttributeInternal(TLRNCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncVal.
     * @param value value to set the TlrncVal
     */
    public void setTlrncVal(Number value) {
        setAttributeInternal(TLRNCVAL, value);
    }

    /**
     * Gets the attribute value for OrdQty, using the alias name OrdQty.
     * @return the value of OrdQty
     */
    public Number getOrdQty() {
        return (Number)getAttributeInternal(ORDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrdQty.
     * @param value value to set the OrdQty
     */
    public void setOrdQty(Number value) {
        setAttributeInternal(ORDQTY, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SrcDocId, using the alias name SrcDocId.
     * @return the value of SrcDocId
     */
    public Integer getSrcDocId() {
        return (Integer)getAttributeInternal(SRCDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocId.
     * @param value value to set the SrcDocId
     */
    public void setSrcDocId(Integer value) {
        setAttributeInternal(SRCDOCID, value);
    }

    /**
     * Gets the attribute value for SrcDocTxnId, using the alias name SrcDocTxnId.
     * @return the value of SrcDocTxnId
     */
    public String getSrcDocTxnId() {
        return (String)getAttributeInternal(SRCDOCTXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocTxnId.
     * @param value value to set the SrcDocTxnId
     */
    public void setSrcDocTxnId(String value) {
        setAttributeInternal(SRCDOCTXNID, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ItmPriceUomBs, using the alias name ItmPriceUomBs.
     * @return the value of ItmPriceUomBs
     */
    public Number getItmPriceUomBs() {
        return (Number)getAttributeInternal(ITMPRICEUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceUomBs.
     * @param value value to set the ItmPriceUomBs
     */
    public void setItmPriceUomBs(Number value) {
        setAttributeInternal(ITMPRICEUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer)getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param eoId key constituent
     * @param itmId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, Integer eoId, String itmId, String cldId) {
        return new Key(new Object[]{slocId, orgId, eoId, itmId, cldId});
    }
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =
    elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    
    protected void create(AttributeList attributeList) {
        vendorpriceAMImpl am =(vendorpriceAMImpl)resolvElDC("vendorpriceAMDataControl");
        Row curr=am.getAppEoPrf().getCurrentRow();
        Integer usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdCreate(usrid);
        String org=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        setOrgId(org);
        String cld=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        setCldId(cld);
        Integer sloc=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        setSlocId(sloc);
        Integer currsp=0;
        if(curr.getAttribute("SuppCurrId")!=null){
             currsp= Integer.parseInt(curr.getAttribute("SuppCurrId").toString());
        }
        System.out.println("going to set curr id with this value"+currsp);
        setCurrIdSp(currsp);
        super.create(attributeList);
    }
    
    public String resolvEl(String data){
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message=valueExp.getValue(elContext).toString();
           return Message;
         }
    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            Integer usridMod=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(usridMod);
        
        }
        super.doDML(operation, e);
    }
}
