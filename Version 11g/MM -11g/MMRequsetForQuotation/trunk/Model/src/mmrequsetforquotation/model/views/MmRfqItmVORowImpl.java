package mmrequsetforquotation.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmrequsetforquotation.model.entities.MmRfqItmEOImpl;

import mmrequsetforquotation.model.services.mmRfqAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 01 19:01:09 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmRfqItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMRFQITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        EntityId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        RfqQty {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getRfqQty();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setRfqQty((Number)value);
            }
        }
        ,
        SlocId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        SoDocId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getSoDocId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setSoDocId((String)value);
            }
        }
        ,
        SoQty {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getSoQty();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setSoQty((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        DesiredDisc {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getDesiredDisc();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setDesiredDisc((Number)value);
            }
        }
        ,
        DesiredPrice {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getDesiredPrice();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setDesiredPrice((Number)value);
            }
        }
        ,
        CldId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        ItemNmTrans {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getItemNmTrans();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setItemNmTrans((String)value);
            }
        }
        ,
        TransClass {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransClass();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransClass((Integer)value);
            }
        }
        ,
        TransLatestPrice {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransLatestPrice();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransLatestPrice((BigDecimal)value);
            }
        }
        ,
        TransLatestDate {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransLatestDate();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransLatestDate((String)value);
            }
        }
        ,
        TransBestDate {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransBestDate();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransBestDate((String)value);
            }
        }
        ,
        TransBestPrice {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransBestPrice();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransBestPrice((BigDecimal)value);
            }
        }
        ,
        TransLatestSupp {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransLatestSupp();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransLatestSupp((String)value);
            }
        }
        ,
        TransBestSupp {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransBestSupp();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransBestSupp((String)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        MMPendOrdVw {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getMMPendOrdVw();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItemLOV1 {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getItemLOV1();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        uomLOV1 {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getuomLOV1();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        sgstdOrdrLOV1 {
            public Object get(MmRfqItmVORowImpl obj) {
                return obj.getsgstdOrdrLOV1();
            }

            public void put(MmRfqItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmRfqItmVORowImpl object);

        public abstract void put(MmRfqItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RFQQTY = AttributesEnum.RfqQty.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SODOCID = AttributesEnum.SoDocId.index();
    public static final int SOQTY = AttributesEnum.SoQty.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DESIREDDISC = AttributesEnum.DesiredDisc.index();
    public static final int DESIREDPRICE = AttributesEnum.DesiredPrice.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ITEMNMTRANS = AttributesEnum.ItemNmTrans.index();
    public static final int TRANSCLASS = AttributesEnum.TransClass.index();
    public static final int TRANSLATESTPRICE = AttributesEnum.TransLatestPrice.index();
    public static final int TRANSLATESTDATE = AttributesEnum.TransLatestDate.index();
    public static final int TRANSBESTDATE = AttributesEnum.TransBestDate.index();
    public static final int TRANSBESTPRICE = AttributesEnum.TransBestPrice.index();
    public static final int TRANSLATESTSUPP = AttributesEnum.TransLatestSupp.index();
    public static final int TRANSBESTSUPP = AttributesEnum.TransBestSupp.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int MMPENDORDVW = AttributesEnum.MMPendOrdVw.index();
    public static final int ITEMLOV1 = AttributesEnum.ItemLOV1.index();
    public static final int UOMLOV1 = AttributesEnum.uomLOV1.index();
    public static final int SGSTDORDRLOV1 = AttributesEnum.sgstdOrdrLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmRfqItmVORowImpl() {
    }

    /**
     * Gets MmRfqItmEO entity object.
     * @return the MmRfqItmEO
     */
    public MmRfqItmEOImpl getMmRfqItmEO() {
        return (MmRfqItmEOImpl)getEntity(ENTITY_MMRFQITMEO);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ENTITY_ID using the alias name EntityId.
     * @return the ENTITY_ID
     */
    public Integer getEntityId() {
        return (Integer) getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_ID using the alias name EntityId.
     * @param value value to set the ENTITY_ID
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RFQ_QTY using the alias name RfqQty.
     * @return the RFQ_QTY
     */
    public Number getRfqQty() {
        return (Number)getAttributeInternal(RFQQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RFQ_QTY using the alias name RfqQty.
     * @param value value to set the RFQ_QTY
     */
    public void setRfqQty(Number value) {
        setAttributeInternal(RFQQTY, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SO_DOC_ID using the alias name SoDocId.
     * @return the SO_DOC_ID
     */
    public String getSoDocId() {
        return (String) getAttributeInternal(SODOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_DOC_ID using the alias name SoDocId.
     * @param value value to set the SO_DOC_ID
     */
    public void setSoDocId(String value) {
        setAttributeInternal(SODOCID, value);
    }

    /**
     * Gets the attribute value for SO_QTY using the alias name SoQty.
     * @return the SO_QTY
     */
    public Number getSoQty() {
        return (Number)getAttributeInternal(SOQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_QTY using the alias name SoQty.
     * @param value value to set the SO_QTY
     */
    public void setSoQty(Number value) {
        setAttributeInternal(SOQTY, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNmTrans.
     * @return the ItemNmTrans
     */
     public Object resolvElDC(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp =
             elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
         return valueExp.getValue(elContext);

     }
    public String getItemNmTrans() {
        
        mmRfqAMImpl am = (mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");

        String inputitm=null;
        String itmDesc=null;
        try{
        inputitm=getItmId();
        //x.getAttribute("TvouCoaId");
        }catch(NullPointerException npe){

        }
        if(inputitm!=null){
        ViewObjectImpl tunevo=am.getMMItmTune();
        tunevo.setNamedWhereClauseParam("bindItmId", getItmId());
        tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
        tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
        tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
        tunevo.executeQuery();
        Row[] xx=tunevo.getFilteredRows("ItmId", inputitm);
        // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
        if(xx.length>0){
        itmDesc= xx[0].getAttribute("ItmDesc").toString();
        }
        return itmDesc;

        }else{
        return (String) getAttributeInternal(ITEMNMTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNmTrans.
     * @param value value to set the  ItemNmTrans
     */
    public void setItemNmTrans(String value) {
        setAttributeInternal(ITEMNMTRANS, value);
    }

    /**
     * Gets the attribute value for DESIRED_DISC using the alias name DesiredDisc.
     * @return the DESIRED_DISC
     */
    public oracle.jbo.domain.Number getDesiredDisc() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DESIREDDISC);
    }

    /**
     * Sets <code>value</code> as attribute value for DESIRED_DISC using the alias name DesiredDisc.
     * @param value value to set the DESIRED_DISC
     */
    public void setDesiredDisc(oracle.jbo.domain.Number value) {
        setAttributeInternal(DESIREDDISC, value);
    }

    /**
     * Gets the attribute value for DESIRED_PRICE using the alias name DesiredPrice.
     * @return the DESIRED_PRICE
     */
    public oracle.jbo.domain.Number getDesiredPrice() {
        return (oracle.jbo.domain.Number) getAttributeInternal(DESIREDPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for DESIRED_PRICE using the alias name DesiredPrice.
     * @param value value to set the DESIRED_PRICE
     */
    public void setDesiredPrice(oracle.jbo.domain.Number value) {
        setAttributeInternal(DESIREDPRICE, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransClass.
     * @return the TransClass
     */
    public Integer getTransClass() {
        mmRfqAMImpl am = (mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");

        String inputuom=null;
        Integer uomClass=null;
        try{
        inputuom=getItmUom();
           
        //x.getAttribute("TvouCoaId");
        }catch(NullPointerException npe){

        }
        if(inputuom!=null){
        Row[] xx=am.getuomLOV1().getFilteredRows("UomId", inputuom);
        if(xx.length>0){
        uomClass = (Integer)xx[0].getAttribute("UomClass");
        }
        return uomClass;

        }else{
        return (Integer) getAttributeInternal(TRANSCLASS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransClass.
     * @param value value to set the  TransClass
     */
    public void setTransClass(Integer value) {
        setAttributeInternal(TRANSCLASS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLatestPrice.
     * @return the TransLatestPrice
     */
    public BigDecimal getTransLatestPrice() {

       BigDecimal bg= callStoredFunctionLatest("PKG_MM_RFQ.GET_LATEST_PRICE(?,?,?,?,?,?,?)", new Object[] { getSlocId(),getCldId(), getOrgId(), getItmId() });
       return bg;
       // return (BigDecimal) getAttributeInternal(TRANSLATESTPRICE);
    }
    
    private static int NUMBER = Types.NUMERIC;
    private static int VARCHAR = Types.VARCHAR;
    
    protected BigDecimal callStoredFunction(String stmt, Object[] bindVars) {
        //used to get best price
        CallableStatement st = null;
        try {
            /** 1. Create a JDBC CallabledStatement */
            mmRfqAMImpl am = (mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin " + stmt + ";end;", 0);
            /** 2. Register the first bind variable for the return value. and last 2 variable for output variable of function. */
            st.setObject(1, bindVars[0]);
            st.setObject(2, bindVars[1]);
            st.setObject(3, bindVars[2]);
            st.setObject(4, bindVars[3]);
            st.registerOutParameter(5, NUMBER);
            st.registerOutParameter(6, VARCHAR);
            st.registerOutParameter(7, VARCHAR);
            /** 5. Set the value of user-supplied bind vars in the stmt */
            st.executeUpdate();
        BigDecimal bb=new BigDecimal(0);
            try {
               
                
                    if(st.getObject(5)!=null){
                        bb=(BigDecimal)st.getObject(5);
                    }
                
               
              /*   setBestPrice((BigDecimal)st.getObject(4));
                setSuppNmbest((st.getObject(5).toString()));
                setDatebest(st.getObject(6).toString()); */
                
                setTransBestDate(st.getObject(7).toString());
                setTransBestSupp((st.getObject(6).toString()));
                
            } catch (NullPointerException e) {
                System.out.println(e);
                e.printStackTrace();
            }
            return bb;
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    /** 7. Close the statement */
                    st.close();
                } catch (SQLException e) {

                }
            }
        }
    }



    protected BigDecimal callStoredFunctionLatest(String stmt, Object[] bindVars) {
        //used to get latest price
        CallableStatement st = null;
        try {
            /** 1. Create a JDBC CallabledStatement */
            mmRfqAMImpl am = (mmRfqAMImpl)resolvElDC("mmRfqAMDataControl");
            st = am.getDBTransaction().createCallableStatement("begin " + stmt + ";end;", 0);
            /** 2. Register the first bind variable for the return value. and last 2 variable for output variable of function. */
            st.setObject(1, bindVars[0]);
            st.setObject(2, bindVars[1]);
            st.setObject(3, bindVars[2]);
            st.setObject(4, bindVars[3]);
            st.registerOutParameter(5, NUMBER);
            st.registerOutParameter(6, VARCHAR);
            st.registerOutParameter(7, VARCHAR);
            /** 5. Set the value of user-supplied bind vars in the stmt */
            st.executeUpdate();
            BigDecimal bb=new BigDecimal(0);
            try {
                if(st.getObject(5)!=null){
                    bb=(BigDecimal)st.getObject(5);
                }
                setTransLatestDate(st.getObject(7).toString());
                setTransLatestSupp(st.getObject(6).toString());
          /*       setLatestPrice((BigDecimal)st.getObject(4));
                setSuppNmlatest((st.getObject(5).toString()));
                setDatelatest(st.getObject(6).toString());
                
           */  } catch (NullPointerException e) {
                System.out.println(e);
                e.printStackTrace();
            }

            return bb;
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    /** 7. Close the statement */
                    st.close();
                } catch (SQLException e) {

                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLatestPrice.
     * @param value value to set the  TransLatestPrice
     */
    public void setTransLatestPrice(BigDecimal value) {
        setAttributeInternal(TRANSLATESTPRICE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransLatestDate.
     * @return the TransLatestDate
     */
    public String getTransLatestDate() {
        return (String) getAttributeInternal(TRANSLATESTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLatestDate.
     * @param value value to set the  TransLatestDate
     */
    public void setTransLatestDate(String value) {
        setAttributeInternal(TRANSLATESTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBestDate.
     * @return the TransBestDate
     */
    public String getTransBestDate() {
        return (String) getAttributeInternal(TRANSBESTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBestDate.
     * @param value value to set the  TransBestDate
     */
    public void setTransBestDate(String value) {
        setAttributeInternal(TRANSBESTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBestPrice.
     * @return the TransBestPrice
     */
    public BigDecimal getTransBestPrice() {
        BigDecimal bg= callStoredFunction("PKG_MM_RFQ.GET_BEST_PRICE(?,?,?,?,?,?,?)", new Object[] { getSlocId(),getCldId(), getOrgId(), getItmId() });
        return bg;
        
        //return (BigDecimal) getAttributeInternal(TRANSBESTPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBestPrice.
     * @param value value to set the  TransBestPrice
     */
    public void setTransBestPrice(BigDecimal value) {
        setAttributeInternal(TRANSBESTPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLatestSupp.
     * @return the TransLatestSupp
     */
    public String getTransLatestSupp() {
        return (String) getAttributeInternal(TRANSLATESTSUPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLatestSupp.
     * @param value value to set the  TransLatestSupp
     */
    public void setTransLatestSupp(String value) {
        setAttributeInternal(TRANSLATESTSUPP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBestSupp.
     * @return the TransBestSupp
     */
    public String getTransBestSupp() {
        return (String) getAttributeInternal(TRANSBESTSUPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBestSupp.
     * @param value value to set the  TransBestSupp
     */
    public void setTransBestSupp(String value) {
        setAttributeInternal(TRANSBESTSUPP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        if(getAttributeInternal(TRANSHOORGID)!=null){
        return (String) getAttributeInternal(TRANSHOORGID);
        }else{
            return (String) resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        }
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MMPendOrdVw.
     */
    public RowIterator getMMPendOrdVw() {
        return (RowIterator)getAttributeInternal(MMPENDORDVW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemLOV1.
     */
    public RowSet getItemLOV1() {
        return (RowSet)getAttributeInternal(ITEMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> uomLOV1.
     */
    public RowSet getuomLOV1() {
        return (RowSet)getAttributeInternal(UOMLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> sgstdOrdrLOV1.
     */
    public RowSet getsgstdOrdrLOV1() {
        
        return (RowSet)getAttributeInternal(SGSTDORDRLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
