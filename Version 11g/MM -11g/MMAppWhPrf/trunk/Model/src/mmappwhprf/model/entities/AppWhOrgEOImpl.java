package mmappwhprf.model.entities;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.concurrent.locks.Lock;

import java.util.concurrent.locks.ReentrantLock;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import javax.faces.application.Application;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 14 12:24:30 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWhOrgEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        WhNm {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhNm();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhNm((String)value);
            }
        }
        ,
        WhOnrshpType {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhOnrshpType();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhOnrshpType((Integer)value);
            }
        }
        ,
        WhStrgType {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhStrgType();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhStrgType((Integer)value);
            }
        }
        ,
        AddsId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getAddsId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setAddsId((String)value);
            }
        }
        ,
        WhDesc {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhDesc();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhDesc((String)value);
            }
        }
        ,
        Actv {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getActv();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setInactvDt((Timestamp)value);
            }
        }
        ,
        WhEntId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getWhEntId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setWhEntId((BigInteger)value);
            }
        }
        ,
        HoOrgId {
            public Object get(AppWhOrgEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(AppWhOrgEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppWhOrgEOImpl object);

        public abstract void put(AppWhOrgEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int WHONRSHPTYPE = AttributesEnum.WhOnrshpType.index();
    public static final int WHSTRGTYPE = AttributesEnum.WhStrgType.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int WHDESC = AttributesEnum.WhDesc.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int WHENTID = AttributesEnum.WhEntId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    
    
    final Lock lock = new ReentrantLock();
    
    /**
     * This is the default constructor (do not remove).
     */
    public AppWhOrgEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WhNm, using the alias name WhNm.
     * @return the value of WhNm
     */
    public String getWhNm() {
        return (String)getAttributeInternal(WHNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhNm.
     * @param value value to set the WhNm
     */
    public void setWhNm(String value) {
        if(value!=null)
        setAttributeInternal(WHNM, value.toUpperCase());
        else
            setAttributeInternal(WHNM, value);
    }

    /**
     * Gets the attribute value for WhOnrshpType, using the alias name WhOnrshpType.
     * @return the value of WhOnrshpType
     */
    public Integer getWhOnrshpType() {
        return (Integer)getAttributeInternal(WHONRSHPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhOnrshpType.
     * @param value value to set the WhOnrshpType
     */
    public void setWhOnrshpType(Integer value) {
        setAttributeInternal(WHONRSHPTYPE, value);
    }

    /**
     * Gets the attribute value for WhStrgType, using the alias name WhStrgType.
     * @return the value of WhStrgType
     */
    public Integer getWhStrgType() {
        return (Integer)getAttributeInternal(WHSTRGTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhStrgType.
     * @param value value to set the WhStrgType
     */
    public void setWhStrgType(Integer value) {
        setAttributeInternal(WHSTRGTYPE, value);
    }

    /**
     * Gets the attribute value for AddsId, using the alias name AddsId.
     * @return the value of AddsId
     */
    public String getAddsId() {
        return (String)getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsId.
     * @param value value to set the AddsId
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for WhDesc, using the alias name WhDesc.
     * @return the value of WhDesc
     */
    public String getWhDesc() {
        return (String)getAttributeInternal(WHDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhDesc.
     * @param value value to set the WhDesc
     */
    public void setWhDesc(String value) {
        setAttributeInternal(WHDESC, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Timestamp getInactvDt() {
        return (Timestamp)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for WhEntId, using the alias name WhEntId.
     * @return the value of WhEntId
     */
    public BigInteger getWhEntId() {
        return (BigInteger)getAttributeInternal(WHENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhEntId.
     * @param value value to set the WhEntId
     */
    public void setWhEntId(BigInteger value) {
        setAttributeInternal(WHENTID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param hoOrgId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String hoOrgId) {
        return new Key(new Object[]{cldId, slocId, orgId, whId, hoOrgId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmappwhprf.model.entities.AppWhOrgEO");
    }
    
    public Object resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    Object Message=valueExp.getValue(elContext);
    return Message;
    }
    
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
            setSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        }
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
            System.out.println("cld id-- "+resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
            setCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        }
        if(resolvEl("pageFlowScope.GLBL_HO_ORG_ID")!=null){
            System.out.println("ho org id-- "+resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
            setHoOrgId(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString());
        }
        if(resolvEl("#{pageFlowScope. GLBL_APP_USR_ORG}")!=null){
            setOrgId(resolvEl("#{pageFlowScope. GLBL_APP_USR_ORG}").toString());
        }
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR}")!=null){
            setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
        }
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setActv("Y");
        String ho = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        String org=resolvEl("#{pageFlowScope. GLBL_APP_USR_ORG}").toString();
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String whid =
           (String)(callStoredFunction(Types.VARCHAR, "APP.FN_APP_GEN_ID (?,?,?,?,?)", new Object[] {slocId,cldId,ho,org, "APP$WH$ORG" }));
        System.out.println("Wh id is-->" + whid);
        setWhId(whid);
        super.create(attributeList);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                
                st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                       
                    }
                }
                st.executeUpdate();
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {
                    }
                }
            }
        }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
     //   super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            if(resolvEl("#{pageFlowScope.GLBL_APP_USR}")!=null){
                setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString()));
                setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
            }
        }
        super.doDML(operation, e);
    }
}
