package materialreturnnote.model.views;


import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import materialreturnnote.model.entities.MmMrnItmStkEOImpl;
import materialreturnnote.model.service.MaterialReturnNoteAMImpl;

import materialreturnnote.model.service.common.MaterialReturnNoteAM;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 05 10:47:42 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMrnItmStkVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMMRNITMSTKEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    ADFLogger adf_log=(ADFLogger)ADFLogger.createADFLogger(MmMrnItmStkVORowImpl.class);
    public enum AttributesEnum {
        CldId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        LotId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        SrNo {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        EoId {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        TotRetQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTotRetQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTotRetQty((Number)value);
            }
        }
        ,
        OkQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getOkQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setOkQty((Number)value);
            }
        }
        ,
        RejQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getRejQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setRejQty((Number)value);
            }
        }
        ,
        RwkQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getRwkQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setRwkQty((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        OkQtyBs {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getOkQtyBs();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setOkQtyBs((Number)value);
            }
        }
        ,
        RejQtyBs {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getRejQtyBs();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setRejQtyBs((Number)value);
            }
        }
        ,
        RwkQtyBs {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getRwkQtyBs();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setRwkQtyBs((Number)value);
            }
        }
        ,
        DocIdPurRet {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getDocIdPurRet();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setDocIdPurRet((String)value);
            }
        }
        ,
        DocIdRcptBack {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getDocIdRcptBack();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setDocIdRcptBack((String)value);
            }
        }
        ,
        ScrpQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getScrpQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setScrpQty((Number)value);
            }
        }
        ,
        ScrpQtyBs {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getScrpQtyBs();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setScrpQtyBs((Number)value);
            }
        }
        ,
        TransIssuDoc {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTransIssuDoc();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTransIssuDoc((String)value);
            }
        }
        ,
        TransSrCheck {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTransSrCheck();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTransSrCheck((Integer)value);
            }
        }
        ,
        TransItmSerialChk {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTransItmSerialChk();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTransItmSerialChk((String)value);
            }
        }
        ,
        TransOkRejRB {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTransOkRejRB();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTransOkRejRB((String)value);
            }
        }
        ,
        TranstotIssLotQty {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTranstotIssLotQty();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTranstotIssLotQty((Number)value);
            }
        }
        ,
        TransSrNo {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getTransSrNo();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setTransSrNo((String)value);
            }
        }
        ,
        LocSRNoFromIssueVO {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getLocSRNoFromIssueVO();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOkRejVO {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getLovOkRejVO();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovLotNoFromIssueVO {
            public Object get(MmMrnItmStkVORowImpl obj) {
                return obj.getLovLotNoFromIssueVO();
            }

            public void put(MmMrnItmStkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMrnItmStkVORowImpl object);

        public abstract void put(MmMrnItmStkVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int TOTRETQTY = AttributesEnum.TotRetQty.index();
    public static final int OKQTY = AttributesEnum.OkQty.index();
    public static final int REJQTY = AttributesEnum.RejQty.index();
    public static final int RWKQTY = AttributesEnum.RwkQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int OKQTYBS = AttributesEnum.OkQtyBs.index();
    public static final int REJQTYBS = AttributesEnum.RejQtyBs.index();
    public static final int RWKQTYBS = AttributesEnum.RwkQtyBs.index();
    public static final int DOCIDPURRET = AttributesEnum.DocIdPurRet.index();
    public static final int DOCIDRCPTBACK = AttributesEnum.DocIdRcptBack.index();
    public static final int SCRPQTY = AttributesEnum.ScrpQty.index();
    public static final int SCRPQTYBS = AttributesEnum.ScrpQtyBs.index();
    public static final int TRANSISSUDOC = AttributesEnum.TransIssuDoc.index();
    public static final int TRANSSRCHECK = AttributesEnum.TransSrCheck.index();
    public static final int TRANSITMSERIALCHK = AttributesEnum.TransItmSerialChk.index();
    public static final int TRANSOKREJRB = AttributesEnum.TransOkRejRB.index();
    public static final int TRANSTOTISSLOTQTY = AttributesEnum.TranstotIssLotQty.index();
    public static final int TRANSSRNO = AttributesEnum.TransSrNo.index();
    public static final int LOCSRNOFROMISSUEVO = AttributesEnum.LocSRNoFromIssueVO.index();
    public static final int LOVOKREJVO = AttributesEnum.LovOkRejVO.index();
    public static final int LOVLOTNOFROMISSUEVO = AttributesEnum.LovLotNoFromIssueVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMrnItmStkVORowImpl() {
    }

    /**
     * Gets MmMrnItmStkEO entity object.
     * @return the MmMrnItmStkEO
     */
    public MmMrnItmStkEOImpl getMmMrnItmStkEO() {
        return (MmMrnItmStkEOImpl)getEntity(ENTITY_MMMRNITMSTKEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for LOT_ID using the alias name LotId.
     * @return the LOT_ID
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOT_ID using the alias name LotId.
     * @param value value to set the LOT_ID
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public String getSrNo() {
       /*  System.out.println(getItmId()+"-----------------"+getTransItmSerialChk());
       if(getItmId()!=null && getTransItmSerialChk().equalsIgnoreCase("N")){
                return "0";
       }else if(getAttributeInternal(SRNO)!=null){ */
           return (String) getAttributeInternal(SRNO);
      /*  }
        else{
        return  "0";
    } */
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @return the DOC_ID_RCPT
     */
    public String getDocIdRcpt() {
        return (String) getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @param value value to set the DOC_ID_RCPT
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for TOT_RET_QTY using the alias name TotRetQty.
     * @return the TOT_RET_QTY
     */
    public Number getTotRetQty() {
        return (Number) getAttributeInternal(TOTRETQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_RET_QTY using the alias name TotRetQty.
     * @param value value to set the TOT_RET_QTY
     */
    public void setTotRetQty(Number value) {
        setAttributeInternal(TOTRETQTY, value);
    }

    /**
     * Gets the attribute value for OK_QTY using the alias name OkQty.
     * @return the OK_QTY
     */
    public Number getOkQty() {
        return (Number) getAttributeInternal(OKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for OK_QTY using the alias name OkQty.
     * @param value value to set the OK_QTY
     */
    public void setOkQty(Number value) {
        if(value==null){
            value = new Number(0);
        }
        if(getRejQty()!=null & getRwkQty()!=null && getScrpQty()!=null){
            Number total = (Number)getRejQty().add(getRwkQty()).add(getScrpQty()).add(value);
            setTotRetQty(total);
            setOkQtyBs(value);// for change later
            setItmUomBs(getItmUom());
           // adf_log.info("total quantity set is "+total);
        }
        setAttributeInternal(OKQTY, value);
    }

    /**
     * Gets the attribute value for REJ_QTY using the alias name RejQty.
     * @return the REJ_QTY
     */
    public Number getRejQty() {
        return (Number) getAttributeInternal(REJQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY using the alias name RejQty.
     * @param value value to set the REJ_QTY
     */
    public void setRejQty(Number value) {
        if(value==null){
            value = new Number(0);
        }
        if(getOkQty()!=null & getRwkQty()!=null && getScrpQty()!=null){
            Number total = (Number)getOkQty().add(getRwkQty()).add(getScrpQty()).add(value);
            setTotRetQty(total);
            setRejQtyBs(value); // for later change
            setItmUomBs(getItmUom());
          //  adf_log.info("total quantity set is "+total);
            
        }
        setAttributeInternal(REJQTY, value);
    }

    /**
     * Gets the attribute value for RWK_QTY using the alias name RwkQty.
     * @return the RWK_QTY
     */
    public Number getRwkQty() {
        return (Number) getAttributeInternal(RWKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for RWK_QTY using the alias name RwkQty.
     * @param value value to set the RWK_QTY
     */
    public void setRwkQty(Number value) {
        if(value==null){
            value = new Number(0);
        }
        if(getOkQty()!=null & getRejQty()!=null && getScrpQty()!=null){
            Number total = (Number)getOkQty().add(getRejQty()).add(getScrpQty()).add(value);
            setTotRetQty(total);
            setRwkQtyBs(value); // for later change
            setItmUomBs(getItmUom());
          //  adf_log.info("total quantity set is "+total);
        }
        setAttributeInternal(RWKQTY, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
       
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for OK_QTY_BS using the alias name OkQtyBs.
     * @return the OK_QTY_BS
     */
    public Number getOkQtyBs() {
        return (Number) getAttributeInternal(OKQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for OK_QTY_BS using the alias name OkQtyBs.
     * @param value value to set the OK_QTY_BS
     */
    public void setOkQtyBs(Number value) {
        setAttributeInternal(OKQTYBS, value);
    }

    /**
     * Gets the attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @return the REJ_QTY_BS
     */
    public Number getRejQtyBs() {
        return (Number) getAttributeInternal(REJQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for REJ_QTY_BS using the alias name RejQtyBs.
     * @param value value to set the REJ_QTY_BS
     */
    public void setRejQtyBs(Number value) {
        setAttributeInternal(REJQTYBS, value);
    }

    /**
     * Gets the attribute value for RWK_QTY_BS using the alias name RwkQtyBs.
     * @return the RWK_QTY_BS
     */
    public Number getRwkQtyBs() {
        return (Number) getAttributeInternal(RWKQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for RWK_QTY_BS using the alias name RwkQtyBs.
     * @param value value to set the RWK_QTY_BS
     */
    public void setRwkQtyBs(Number value) {
        setAttributeInternal(RWKQTYBS, value);
    }

    /**
     * Gets the attribute value for DOC_ID_PUR_RET using the alias name DocIdPurRet.
     * @return the DOC_ID_PUR_RET
     */
    public String getDocIdPurRet() {
        return (String) getAttributeInternal(DOCIDPURRET);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_PUR_RET using the alias name DocIdPurRet.
     * @param value value to set the DOC_ID_PUR_RET
     */
    public void setDocIdPurRet(String value) {
        setAttributeInternal(DOCIDPURRET, value);
    }

    /**
     * Gets the attribute value for DOC_ID_RCPT_BACK using the alias name DocIdRcptBack.
     * @return the DOC_ID_RCPT_BACK
     */
    public String getDocIdRcptBack() {
        return (String) getAttributeInternal(DOCIDRCPTBACK);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_RCPT_BACK using the alias name DocIdRcptBack.
     * @param value value to set the DOC_ID_RCPT_BACK
     */
    public void setDocIdRcptBack(String value) {
        setAttributeInternal(DOCIDRCPTBACK, value);
    }

    /**
     * Gets the attribute value for SCRP_QTY using the alias name ScrpQty.
     * @return the SCRP_QTY
     */
    public Number getScrpQty() {
        return (Number) getAttributeInternal(SCRPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SCRP_QTY using the alias name ScrpQty.
     * @param value value to set the SCRP_QTY
     */
    public void setScrpQty(Number value) {
        if(value==null){
            value = new Number(0);
        }
        if(getOkQty()!=null & getRwkQty()!=null && getRejQty()!=null){
            Number total = (Number)getOkQty().add(getRwkQty()).add(getRejQty()).add(value);
            setTotRetQty(total);
            setScrpQtyBs(value);
            setItmUomBs(getItmUom());
        }
        setAttributeInternal(SCRPQTY, value);
    }

    /**
     * Gets the attribute value for SCRP_QTY_BS using the alias name ScrpQtyBs.
     * @return the SCRP_QTY_BS
     */
    public Number getScrpQtyBs() {
        return (Number) getAttributeInternal(SCRPQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for SCRP_QTY_BS using the alias name ScrpQtyBs.
     * @param value value to set the SCRP_QTY_BS
     */
    public void setScrpQtyBs(Number value) {
        setAttributeInternal(SCRPQTYBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIssuDoc.
     * @return the TransIssuDoc
     */
    public String getTransIssuDoc() {
        return (String) getAttributeInternal(TRANSISSUDOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIssuDoc.
     * @param value value to set the  TransIssuDoc
     */
    public void setTransIssuDoc(String value) {
        setAttributeInternal(TRANSISSUDOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrCheck.
     * @return the TransSrCheck
     */
    public Integer getTransSrCheck() {
        String itmId = null;
        Integer pickOrd = 0;
        MaterialReturnNoteAMImpl am = (MaterialReturnNoteAMImpl)this.getApplicationModule();
        if(getItmId()!=null){
            try{
                itmId= getItmId();
                
            }catch(NullPointerException npe){
                }
        }
        if(itmId!=null){
            Row[] xx = am.getLovItmId().getFilteredRows("ItmId", itmId);
            if(xx.length>0){
            if(xx[0].getAttribute("PickOrder")!=null){
                pickOrd= Integer.parseInt(xx[0].getAttribute("PickOrder").toString());
            }else{
                pickOrd = 307;
            }
               }
            return pickOrd;
        }else{
        return (Integer) getAttributeInternal(TRANSSRCHECK);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrCheck.
     * @param value value to set the  TransSrCheck
     */
    public void setTransSrCheck(Integer value) {
        setAttributeInternal(TRANSSRCHECK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerialChk.
     * @return the TransItmSerialChk
     */
    public String getTransItmSerialChk() {
        String itmId = null;
        String flg = null;
        MaterialReturnNoteAMImpl am = (MaterialReturnNoteAMImpl)this.getApplicationModule();
        if(getItmId()!=null){
            try{
                itmId= getItmId();
                
            }catch(NullPointerException npe){
                }
        }
        if(itmId!=null){
            Row[] xx = am.getLovItmId().getFilteredRows("ItmId", itmId);
            if(xx.length>0){
                flg= xx[0].getAttribute("SerializedFlg").toString();
               }
            return flg;
        }else{
        return (String) getAttributeInternal(TRANSITMSERIALCHK);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerialChk.
     * @param value value to set the  TransItmSerialChk
     */
    public void setTransItmSerialChk(String value) {
        setAttributeInternal(TRANSITMSERIALCHK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOkRejRB.
     * @return the TransOkRejRB
     */
    public String getTransOkRejRB() {
        if(getOkQty().compareTo(new Number(1))==0){
            return "O";
        }else if(getRejQty().compareTo(new Number(1))==0){
            return "R";
        }else if(getRwkQty().compareTo(new Number(1))==0){
            return "W";
        }else if(getScrpQty().compareTo(new Number(1))==0){
              return "S";  
        }else{
        return (String) getAttributeInternal(TRANSOKREJRB);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOkRejRB.
     * @param value value to set the  TransOkRejRB
     */
    public void setTransOkRejRB(String value) {
        if(value !=null && getTransItmSerialChk()!=null){
            if(getTransItmSerialChk().equalsIgnoreCase("Y")){
            if(value.equalsIgnoreCase("O")){  // O for Ok 
                setOkQty(new Number(1));
                setRejQty(new Number(0));
                setRwkQty(new Number(0));
                setScrpQty(new Number(0));
                setTotRetQty(new Number(1));
            }else if(value.equalsIgnoreCase("R")){ // R for Rejected
                setOkQty(new Number(0));
                setRejQty(new Number(1));
                setRwkQty(new Number(0));
                setScrpQty(new Number(0));
                setTotRetQty(new Number(1));
            }else if(value.equalsIgnoreCase("W")){   // W for Reworkable
                setOkQty(new Number(0));
                setRejQty(new Number(0));
                setRwkQty(new Number(1));
                setScrpQty(new Number(0));
                setTotRetQty(new Number(1));
            }
            else if(value.equalsIgnoreCase("S")){  // S for Scrap
                 setOkQty(new Number(0));
                 setRejQty(new Number(0));
                 setRwkQty(new Number(0));
                 setScrpQty(new Number(1));
               setTotRetQty(new Number(1));
           }
            setItmUomBs(getItmUom());
        }
        }
        setAttributeInternal(TRANSOKREJRB, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranstotIssLotQty.
     * @return the TranstotIssLotQty
     */
    public Number getTranstotIssLotQty() {
        MaterialReturnNoteAMImpl am=(MaterialReturnNoteAMImpl)this.getApplicationModule();
        Row mrnVo=am.getMmMrn().getCurrentRow();
        
        if( getAttributeInternal(TRANSTOTISSLOTQTY)!=null){
        adf_log.info("lot id and item id is "+getLotId() +"item id is "+getItmId()+" curr rqmt id is "+mrnVo.getAttribute("RqmtAreaId"));
            Number avlQty =null;
         if(getLotId()!=null && getItmId()!=null && mrnVo.getAttribute("RqmtAreaId")!=null){

                MmMrnItmStkEOImpl eO = getMmMrnItmStkEO();
            BigDecimal avlQty1 = (BigDecimal)callStoredFunction(Types.NUMERIC, "MM_MRN_AVL_QTY(?,?,?,?,?,?)", new Object[]{getCldId(),getSlocId(),getOrgId(),getLotId(),getItmId(),mrnVo.getAttribute("RqmtAreaId")});
            try{
             avlQty=new Number(avlQty1);
            }catch(Exception e){
                adf_log.info("value not converted "+e);
                         
            }
             adf_log.info("available quantity i-------------------- "+avlQty);
         }
         return avlQty;
        }else if(getAttributeInternal(TRANSTOTISSLOTQTY)== null || ((Number)getAttributeInternal(TRANSTOTISSLOTQTY)).compareTo(new Number(0))==0){
            adf_log.info("lot id and item id is "+getLotId() +"item id is "+getItmId()+" curr rqmt id is "+mrnVo.getAttribute("RqmtAreaId"));
                Number avlQty =null;
             if(getLotId()!=null && getItmId()!=null && mrnVo.getAttribute("RqmtAreaId")!=null){

                   // MmMrnItmStkEOImpl eO = getMmMrnItmStkEO();
                BigDecimal avlQty1 = (BigDecimal)callStoredFunction(Types.NUMERIC, "MM_MRN_AVL_QTY(?,?,?,?,?,?)", new Object[]{getCldId(),getSlocId(),getOrgId(),getLotId(),getItmId(),mrnVo.getAttribute("RqmtAreaId")});
                try{
                 avlQty=new Number(avlQty1);
                }catch(Exception e){
                    adf_log.info("value not converted "+e);
                             
                }
                 adf_log.info("available quantity i-------------------- "+avlQty);
             }
             return avlQty;
        }
         
        return (Number) getAttributeInternal(TRANSTOTISSLOTQTY);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);

            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranstotIssLotQty.
     * @param value value to set the  TranstotIssLotQty
     */
    public void setTranstotIssLotQty(Number value) {
        setAttributeInternal(TRANSTOTISSLOTQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSrNo.
     * @return the TransSrNo
     */
    public String getTransSrNo() {
        if(getAttributeInternal(TRANSSRNO)!=null){
            return (String) getAttributeInternal(TRANSSRNO);
        }else{ String flag=null;
            if(getSrNo()!=null){
               
                MaterialReturnNoteAMImpl am=(MaterialReturnNoteAMImpl)this.getApplicationModule();
                ViewObjectImpl srno=am.getSrNoForView();
                srno.setNamedWhereClauseParam("bindDocId", getDocId());
                srno.setNamedWhereClauseParam("bindSrNo", getSrNo());
                srno.setNamedWhereClauseParam("bindOrgId", getOrgId());
                srno.executeQuery();
                Row [] rr1=srno.getFilteredRows("SrNo", getSrNo());
                if(rr1.length>0){
                    flag=rr1[0].getAttribute("SrNo").toString();
                }
                //adf_log.info("row length found "+rr1.length +"sr no value is ---------- "+flag);
             }
            return flag;
        }
        
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSrNo.
     * @param value value to set the  TransSrNo
     */
    public void setTransSrNo(String value) {
        setAttributeInternal(TRANSSRNO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LocSRNoFromIssueVO.
     */
    public RowSet getLocSRNoFromIssueVO() {
        return (RowSet)getAttributeInternal(LOCSRNOFROMISSUEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOkRejVO.
     */
    public RowSet getLovOkRejVO() {
        return (RowSet)getAttributeInternal(LOVOKREJVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLotNoFromIssueVO.
     */
    public RowSet getLovLotNoFromIssueVO() {
        return (RowSet)getAttributeInternal(LOVLOTNOFROMISSUEVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
