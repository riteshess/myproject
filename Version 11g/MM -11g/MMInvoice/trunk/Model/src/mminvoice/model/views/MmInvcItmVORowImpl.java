package mminvoice.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mminvoice.model.entities.MmInvcItmEOImpl;
import mminvoice.model.services.MMInvoiceAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 07 12:57:40 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvcItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMINVCITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        DocIdPo {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDocIdPo();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDocIdPo((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        FocFlg {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getFocFlg();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setFocFlg((String)value);
            }
        }
        ,
        FinalRcptQty {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getFinalRcptQty();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setFinalRcptQty((Number)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPriceBs((Number)value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDiscAmtSp((Number)value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setDiscAmtBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        FinalRcptQtyBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getFinalRcptQtyBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setFinalRcptQtyBs((Number)value);
            }
        }
        ,
        TransCurrConvFctr {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransCurrConvFctr();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransCurrConvFctr((Number)value);
            }
        }
        ,
        TransItmAmtWoutDc {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransItmAmtWoutDc();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransItmAmtWoutDc((Number)value);
            }
        }
        ,
        TransTaxableAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransTaxableAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransTaxableAmt((Number)value);
            }
        }
        ,
        TransItmTotAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransItmTotAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransItmTotAmt((Number)value);
            }
        }
        ,
        TransTaxAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransTaxAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransTaxAmt((Number)value);
            }
        }
        ,
        TransTdsOnAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransTdsOnAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransTdsOnAmt((Number)value);
            }
        }
        ,
        TransTdsAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransTdsAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransTdsAmt((Number)value);
            }
        }
        ,
        HoOrgId {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        ItmPriceBsNew {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPriceBsNew();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPriceBsNew((Number)value);
            }
        }
        ,
        ItmPriceBsOld {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPriceBsOld();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPriceBsOld((Number)value);
            }
        }
        ,
        ItmPriceNew {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPriceNew();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPriceNew((Number)value);
            }
        }
        ,
        ItmPriceOld {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getItmPriceOld();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setItmPriceOld((Number)value);
            }
        }
        ,
        TransItmDesc {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransItmDesc();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransItmDesc((String)value);
            }
        }
        ,
        TransUomNm {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTransUomNm();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTransUomNm((String)value);
            }
        }
        ,
        TranTaxItmAmt {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTranTaxItmAmt();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTranTaxItmAmt((Number)value);
            }
        }
        ,
        TaxableAmtBs {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTaxableAmtBs();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTaxableAmtBs((Number)value);
            }
        }
        ,
        TaxableAmtBsOrig {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTaxableAmtBsOrig();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTaxableAmtBsOrig((Number)value);
            }
        }
        ,
        TaxableAmtSp {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTaxableAmtSp();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTaxableAmtSp((Number)value);
            }
        }
        ,
        TaxableAmtSpOrig {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getTaxableAmtSpOrig();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setTaxableAmtSpOrig((Number)value);
            }
        }
        ,
        MmInvcTr {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getMmInvcTr();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmInvcSrc {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getMmInvcSrc();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmInvcTds {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getMmInvcTds();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdVO {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getLovItmIdVO();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomIdVO {
            public Object get(MmInvcItmVORowImpl obj) {
                return obj.getLovUomIdVO();
            }

            public void put(MmInvcItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmInvcItmVORowImpl object);

        public abstract void put(MmInvcItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int DOCIDPO = AttributesEnum.DocIdPo.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int FOCFLG = AttributesEnum.FocFlg.index();
    public static final int FINALRCPTQTY = AttributesEnum.FinalRcptQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int FINALRCPTQTYBS = AttributesEnum.FinalRcptQtyBs.index();
    public static final int TRANSCURRCONVFCTR = AttributesEnum.TransCurrConvFctr.index();
    public static final int TRANSITMAMTWOUTDC = AttributesEnum.TransItmAmtWoutDc.index();
    public static final int TRANSTAXABLEAMT = AttributesEnum.TransTaxableAmt.index();
    public static final int TRANSITMTOTAMT = AttributesEnum.TransItmTotAmt.index();
    public static final int TRANSTAXAMT = AttributesEnum.TransTaxAmt.index();
    public static final int TRANSTDSONAMT = AttributesEnum.TransTdsOnAmt.index();
    public static final int TRANSTDSAMT = AttributesEnum.TransTdsAmt.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMPRICEBSNEW = AttributesEnum.ItmPriceBsNew.index();
    public static final int ITMPRICEBSOLD = AttributesEnum.ItmPriceBsOld.index();
    public static final int ITMPRICENEW = AttributesEnum.ItmPriceNew.index();
    public static final int ITMPRICEOLD = AttributesEnum.ItmPriceOld.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSUOMNM = AttributesEnum.TransUomNm.index();
    public static final int TRANTAXITMAMT = AttributesEnum.TranTaxItmAmt.index();
    public static final int TAXABLEAMTBS = AttributesEnum.TaxableAmtBs.index();
    public static final int TAXABLEAMTBSORIG = AttributesEnum.TaxableAmtBsOrig.index();
    public static final int TAXABLEAMTSP = AttributesEnum.TaxableAmtSp.index();
    public static final int TAXABLEAMTSPORIG = AttributesEnum.TaxableAmtSpOrig.index();
    public static final int MMINVCTR = AttributesEnum.MmInvcTr.index();
    public static final int MMINVCSRC = AttributesEnum.MmInvcSrc.index();
    public static final int MMINVCTDS = AttributesEnum.MmInvcTds.index();
    public static final int LOVITMIDVO = AttributesEnum.LovItmIdVO.index();
    public static final int LOVUOMIDVO = AttributesEnum.LovUomIdVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvcItmVORowImpl() {
    }

    /**
     * Gets MmInvcItmEO entity object.
     * @return the MmInvcItmEO
     */
    public MmInvcItmEOImpl getMmInvcItmEO() {
        return (MmInvcItmEOImpl)getEntity(ENTITY_MMINVCITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @return the DOC_ID_RCPT
     */
    public String getDocIdRcpt() {
        return (String) getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_RCPT using the alias name DocIdRcpt.
     * @param value value to set the DOC_ID_RCPT
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for DOC_ID_PO using the alias name DocIdPo.
     * @return the DOC_ID_PO
     */
    public String getDocIdPo() {
        return (String) getAttributeInternal(DOCIDPO);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_PO using the alias name DocIdPo.
     * @param value value to set the DOC_ID_PO
     */
    public void setDocIdPo(String value) {
        setAttributeInternal(DOCIDPO, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for FOC_FLG using the alias name FocFlg.
     * @return the FOC_FLG
     */
    public String getFocFlg() {
        return (String) getAttributeInternal(FOCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for FOC_FLG using the alias name FocFlg.
     * @param value value to set the FOC_FLG
     */
    public void setFocFlg(String value) {
        setAttributeInternal(FOCFLG, value);
    }

    /**
     * Gets the attribute value for FINAL_RCPT_QTY using the alias name FinalRcptQty.
     * @return the FINAL_RCPT_QTY
     */
    public Number getFinalRcptQty() {
        return (Number) getAttributeInternal(FINALRCPTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_RCPT_QTY using the alias name FinalRcptQty.
     * @param value value to set the FINAL_RCPT_QTY
     */
    public void setFinalRcptQty(Number value) {
        if(value != null)
            {setAttributeInternal(FINALRCPTQTY, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(FINALRCPTQTY, value);}
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICE, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICE, value);}
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @return the ITM_PRICE_BS
     */
    public Number getItmPriceBs() {
        return (Number) getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS using the alias name ItmPriceBs.
     * @param value value to set the ITM_PRICE_BS
     */
    public void setItmPriceBs(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICEBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICEBS, value);}
    }

    /**
     * Gets the attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @return the DISC_AMT_SP
     */
    public Number getDiscAmtSp() {
        return (Number) getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_SP using the alias name DiscAmtSp.
     * @param value value to set the DISC_AMT_SP
     */
    public void setDiscAmtSp(Number value) {
        if(value != null)
            {setAttributeInternal(DISCAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(DISCAMTSP, value);}
    }

    /**
     * Gets the attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @return the DISC_AMT_BS
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISC_AMT_BS using the alias name DiscAmtBs.
     * @param value value to set the DISC_AMT_BS
     */
    public void setDiscAmtBs(Number value) {
        if(value != null)
            {setAttributeInternal(DISCAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(DISCAMTBS, value);}
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(Number value) {
        if(value != null)
        {setAttributeInternal(ITMAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMAMTSP, value);}
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        if(value != null)
            {setAttributeInternal(ITMAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMAMTBS, value);}
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        if(value != null)
            {setAttributeInternal(UOMCONVFCTR, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(UOMCONVFCTR, value);}
    }

    /**
     * Gets the attribute value for FINAL_RCPT_QTY_BS using the alias name FinalRcptQtyBs.
     * @return the FINAL_RCPT_QTY_BS
     */
    public Number getFinalRcptQtyBs() {
        return (Number) getAttributeInternal(FINALRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for FINAL_RCPT_QTY_BS using the alias name FinalRcptQtyBs.
     * @param value value to set the FINAL_RCPT_QTY_BS
     */
    public void setFinalRcptQtyBs(Number value) {
        if(value != null)
            {setAttributeInternal(FINALRCPTQTYBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(FINALRCPTQTYBS, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrConvFctr.
     * @return the TransCurrConvFctr
     */
    public Number getTransCurrConvFctr() {
        return (Number)this.getMmInvcSrc().getAttribute("CurrConvFctr");
        //return (Number) getAttributeInternal(TRANSCURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrConvFctr.
     * @param value value to set the  TransCurrConvFctr
     */
    public void setTransCurrConvFctr(Number value) {
        if(value != null)
        {setAttributeInternal(TRANSCURRCONVFCTR, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSCURRCONVFCTR, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmAmtWoutDc.
     * @return the TransItmAmtWoutDc
     */
    public Number getTransItmAmtWoutDc() {
        Number zero=new Number(0);
        Number qty=this.getFinalRcptQty();
        Number price=this.getItmPrice();
        if(qty==null){
            qty=zero;
        }
        if(price==null){
            price=zero;
        }
        
        
        /*
         * Number uomcc = this.getUomConvFctr();
         * if(uomcc == null)
        {uomcc=new Number(1);}
        System.out.println("UOM CONV FACTOR : "+uomcc);
         */
        
       
        
        Number amt=qty.multiply(price);
        
        return amt;
        //return (Number) getAttributeInternal(TRANSITMAMTWOUTDC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmAmtWoutDc.
     * @param value value to set the  TransItmAmtWoutDc
     */
    public void setTransItmAmtWoutDc(Number value) {
        if(value != null)
            {setAttributeInternal(TRANSITMAMTWOUTDC, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSITMAMTWOUTDC, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxableAmt.
     * @return the TransTaxableAmt
     */
    public Number getTransTaxableAmt() {
        String txAftrDisc=this.getMmInvcSrc().getAttribute("TaxAfterDiscFlg").toString();
        Number val=new Number(0);
        if("Y".equalsIgnoreCase(txAftrDisc)){
        Number disc=this.getDiscAmtSp();
        if(disc==null){
            disc=new Number(0);
        }
            val=this.getTransItmAmtWoutDc().subtract(disc);
        }else{
            val=this.getTransItmAmtWoutDc();
        }
        return val;
        //return (Number) getAttributeInternal(TRANSTAXABLEAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxableAmt.
     * @param value value to set the  TransTaxableAmt
     */
    public void setTransTaxableAmt(Number value) {
        if(value != null)
            {setAttributeInternal(TRANSTAXABLEAMT, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSTAXABLEAMT, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmTotAmt.
     * @return the TransItmTotAmt
     */
    public Number getTransItmTotAmt() {
        Number zero=new Number(0);
        Number taxAmt=zero;
        Number totamt=zero;
        Number tdsAmt=zero;
      /*   RowQualifier rq=new RowQualifier(am.getMmInvcTr());
        rq.setWhereClause("ItmId='"+this.getItmId()+"' and ItmUom='"+this.getItmUom()+"'");
        
        Row[] txRw=am.getMmInvcTr().getFilteredRows(rq); */
    /*     if(getMmInvcTr().getRowCount()>0){
            //System.out.println("Rowset tr-->"+(Number)(getMmInvcTr().getRowCountInRange()[0]).getAttribute("TaxAmt"));   
           
        } */
        
     /*   Row[] rwTr=am.getMmInvcTr().getAllRowsInRange();
        if(rwTr.length>0){
         System.out.println("Ranged tr-->"+(Number)rwTr[0].getAttribute("TaxAmt"));   
              taxAmt= (Number)rwTr[0].getAttribute("TaxAmt");
               if(taxAmt==null){
                   taxAmt=zero;
               }
        } 
         */
     taxAmt=this.getTransTaxAmt(); 
     if(taxAmt==null){
         taxAmt=zero;
     }
     
     tdsAmt=this.getTransTdsAmt();
     if(tdsAmt==null){
         tdsAmt=zero;
     }
     /*    
        if(txRw.length>0){
           taxAmt= (Number)txRw[0].getAttribute("TaxAmt");  
            if(taxAmt==null){
                taxAmt=new Number(0);
            }
        }
         */
        
        String txAftrDisc=this.getMmInvcSrc().getAttribute("TaxAfterDiscFlg").toString();
        Number disc=this.getDiscAmtSp();
        /*   System.out.println(txAftrDisc+"--txAftrDisc<--->Tax Amt--"+taxAmt); */
        if(disc==null){
            disc=new Number(0);
        }
        
        if("Y".equalsIgnoreCase(txAftrDisc)){
           totamt= (this.getTransItmAmtWoutDc().subtract(disc)).add(taxAmt);
         //  System.out.println("TOTAMT--"+totamt);
        }else{
           totamt=(this.getTransItmAmtWoutDc().add(taxAmt)).subtract(disc);
         //   System.out.println("TOTAMTq--"+totamt);
        }          
        
        totamt=totamt.subtract(tdsAmt);
        
    //    System.out.println("TOTAL AMT : "+totamt);
        
        return totamt;
        //return (Number) getAttributeInternal(TRANSITMTOTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmTotAmt.
     * @param value value to set the  TransItmTotAmt
     */
    public void setTransItmTotAmt(Number value) {
        if(value != null)
            {setAttributeInternal(TRANSITMTOTAMT, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSITMTOTAMT, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxAmt.
     * @return the TransTaxAmt
     */
    public Number getTransTaxAmt() {
        return (Number) getAttributeInternal(TRANSTAXAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxAmt.
     * @param value value to set the  TransTaxAmt
     */
    public void setTransTaxAmt(Number value) {
        if(value != null)
            { setAttributeInternal(TRANSTAXAMT, value.round(getAmtRoundOff()));}
        else
        { setAttributeInternal(TRANSTAXAMT, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransTdsOnAmt.
     * @return the TransTdsOnAmt
     */
    public Number getTransTdsOnAmt() {
        
        Number val=new Number(0);
        Number disc=this.getDiscAmtSp();
        if(disc==null){
            disc=new Number(0);
        }
        
        val=this.getTransItmAmtWoutDc().subtract(disc);
        
        return val;
        
        //return (Number) getAttributeInternal(TRANSTDSONAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTdsOnAmt.
     * @param value value to set the  TransTdsOnAmt
     */
    public void setTransTdsOnAmt(Number value) {
        if(value != null)
            {setAttributeInternal(TRANSTDSONAMT, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSTDSONAMT, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransTdsAmt.
     * @return the TransTdsAmt
     */
    public Number getTransTdsAmt() {
        return (Number) getAttributeInternal(TRANSTDSAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTdsAmt.
     * @param value value to set the  TransTdsAmt
     */
    public void setTransTdsAmt(Number value) {
        if(value != null)
            {setAttributeInternal(TRANSTDSAMT, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSTDSAMT, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        StringBuffer hoOrgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        if(hoOrgId != null)
         {return hoOrgId.toString();}
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS_NEW using the alias name ItmPriceBsNew.
     * @return the ITM_PRICE_BS_NEW
     */
    public Number getItmPriceBsNew() {
        return (Number) getAttributeInternal(ITMPRICEBSNEW);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS_NEW using the alias name ItmPriceBsNew.
     * @param value value to set the ITM_PRICE_BS_NEW
     */
    public void setItmPriceBsNew(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICEBSNEW, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICEBSNEW, value);}
    }

    /**
     * Gets the attribute value for ITM_PRICE_BS_OLD using the alias name ItmPriceBsOld.
     * @return the ITM_PRICE_BS_OLD
     */
    public Number getItmPriceBsOld() {
        return (Number) getAttributeInternal(ITMPRICEBSOLD);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_BS_OLD using the alias name ItmPriceBsOld.
     * @param value value to set the ITM_PRICE_BS_OLD
     */
    public void setItmPriceBsOld(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICEBSOLD, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICEBSOLD, value);}
    }

    /**
     * Gets the attribute value for ITM_PRICE_NEW using the alias name ItmPriceNew.
     * @return the ITM_PRICE_NEW
     */
    public Number getItmPriceNew() {
        return (Number) getAttributeInternal(ITMPRICENEW);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_NEW using the alias name ItmPriceNew.
     * @param value value to set the ITM_PRICE_NEW
     */
    public void setItmPriceNew(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICENEW, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICENEW, value);}
    }

    /**
     * Gets the attribute value for ITM_PRICE_OLD using the alias name ItmPriceOld.
     * @return the ITM_PRICE_OLD
     */
    public Number getItmPriceOld() {
        return (Number) getAttributeInternal(ITMPRICEOLD);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE_OLD using the alias name ItmPriceOld.
     * @param value value to set the ITM_PRICE_OLD
     */
    public void setItmPriceOld(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICEOLD, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICEOLD, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        
        if(this.getItmId() != null)
        {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl voItem = am.getItem();
            voItem.setNamedWhereClauseParam("bindCldId", this.getCldId());
            voItem.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            voItem.setNamedWhereClauseParam("bindHoOrgId", this.getHoOrgId());
            voItem.setNamedWhereClauseParam("bindItmId", this.getItmId());
            voItem.executeQuery();
                                  
            Row r[]=voItem.getFilteredRows("ItmId", this.getItmId());
            if(r.length>0)
            {return r[0].getAttribute("ItmDesc").toString();}
            else
            {return (String) getAttributeInternal(TRANSITMDESC);}
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomNm.
     * @return the TransUomNm
     */
    public String getTransUomNm() {
        if(this.getItmUom() != null)
        {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl voUom = am.getLovUomVw();
            voUom.setNamedWhereClauseParam("bindCldId", this.getCldId());
            voUom.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            voUom.setNamedWhereClauseParam("bindUomId", this.getItmUom());
            voUom.executeQuery();
                                  
            Row r[]=voUom.getFilteredRows("UomId", this.getItmUom());
            if(r.length>0)
            {return r[0].getAttribute("UomNm").toString();}
            else
            {return (String) getAttributeInternal(TRANSUOMNM);}
        }
        return (String) getAttributeInternal(TRANSUOMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomNm.
     * @param value value to set the  TransUomNm
     */
    public void setTransUomNm(String value) {
        setAttributeInternal(TRANSUOMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranTaxItmAmt.
     * @return the TranTaxItmAmt
     */
    public Number getTranTaxItmAmt() {
        Number zero=new Number(0);
        if(getAttributeInternal(TRANTAXITMAMT)!=null && ((Number)getAttributeInternal(TRANTAXITMAMT)).compareTo(zero)>0){
            return (Number) getAttributeInternal(TRANTAXITMAMT);
        }else{
            Number taxableamt=new Number(0);
            if(getTransTaxableAmt()!=null)
                taxableamt=getTransTaxableAmt();
            return taxableamt;
        }
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranTaxItmAmt.
     * @param value value to set the  TranTaxItmAmt
     */
    public void setTranTaxItmAmt(Number value) {
        setAttributeInternal(TRANTAXITMAMT, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT_BS using the alias name TaxableAmtBs.
     * @return the TAXABLE_AMT_BS
     */
    public Number getTaxableAmtBs() {
        return (Number) getAttributeInternal(TAXABLEAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT_BS using the alias name TaxableAmtBs.
     * @param value value to set the TAXABLE_AMT_BS
     */
    public void setTaxableAmtBs(Number value) {
        setAttributeInternal(TAXABLEAMTBS, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT_BS_ORIG using the alias name TaxableAmtBsOrig.
     * @return the TAXABLE_AMT_BS_ORIG
     */
    public Number getTaxableAmtBsOrig() {
        return (Number) getAttributeInternal(TAXABLEAMTBSORIG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT_BS_ORIG using the alias name TaxableAmtBsOrig.
     * @param value value to set the TAXABLE_AMT_BS_ORIG
     */
    public void setTaxableAmtBsOrig(Number value) {
        setAttributeInternal(TAXABLEAMTBSORIG, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT_SP using the alias name TaxableAmtSp.
     * @return the TAXABLE_AMT_SP
     */
    public Number getTaxableAmtSp() {
        return (Number) getAttributeInternal(TAXABLEAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT_SP using the alias name TaxableAmtSp.
     * @param value value to set the TAXABLE_AMT_SP
     */
    public void setTaxableAmtSp(Number value) {
        setAttributeInternal(TAXABLEAMTSP, value);
    }

    /**
     * Gets the attribute value for TAXABLE_AMT_SP_ORIG using the alias name TaxableAmtSpOrig.
     * @return the TAXABLE_AMT_SP_ORIG
     */
    public Number getTaxableAmtSpOrig() {
        return (Number) getAttributeInternal(TAXABLEAMTSPORIG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAXABLE_AMT_SP_ORIG using the alias name TaxableAmtSpOrig.
     * @param value value to set the TAXABLE_AMT_SP_ORIG
     */
    public void setTaxableAmtSpOrig(Number value) {
        setAttributeInternal(TAXABLEAMTSPORIG, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcTr.
     */
    public RowIterator getMmInvcTr() {
        return (RowIterator)getAttributeInternal(MMINVCTR);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link MmInvcSrc.
     */
    public Row getMmInvcSrc() {
        return (Row)getAttributeInternal(MMINVCSRC);
    }

    /**
     * Sets the master-detail link MmInvcSrc between this object and <code>value</code>.
     */
    public void setMmInvcSrc(Row value) {
        setAttributeInternal(MMINVCSRC, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmInvcTds.
     */
    public RowIterator getMmInvcTds() {
        return (RowIterator)getAttributeInternal(MMINVCTDS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO.
     */
    public RowSet getLovItmIdVO() {
        return (RowSet)getAttributeInternal(LOVITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO.
     */
    public RowSet getLovUomIdVO() {
        return (RowSet)getAttributeInternal(LOVUOMIDVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    
    protected String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }
    
    private Integer getAmtRoundOff()
     {
         Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}").toString()); 
         return roundOff;
     }
     
     private Integer getCurrRoundOff()
     {
         Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}").toString()); 
         return roundOff;
     }
}


