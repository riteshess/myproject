package mminvoice.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mminvoice.model.services.MMInvoiceAMImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 16 15:03:57 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SelectTIItemVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdRcpt {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDocIdRcpt();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDocIdRcpt((String)value);
            }
        }
        ,
        DocIdPo {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDocIdPo();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDocIdPo((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        FocFlg {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getFocFlg();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setFocFlg((String)value);
            }
        }
        ,
        FinalRcptQty {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getFinalRcptQty();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setFinalRcptQty((Number)value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDiscAmtSp((Number)value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDiscAmtBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        FinalRcptQtyBs {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getFinalRcptQtyBs();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setFinalRcptQtyBs((Number)value);
            }
        }
        ,
        ItmPrice {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        NewPrice {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getNewPrice();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setNewPrice((Number)value);
            }
        }
        ,
        DiffPrice {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getDiffPrice();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setDiffPrice((Number)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        TransItmDesc {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getTransItmDesc();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setTransItmDesc((String)value);
            }
        }
        ,
        TransIssuNo {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getTransIssuNo();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setTransIssuNo((String)value);
            }
        }
        ,
        TransTrfNo {
            public Object get(SelectTIItemVORowImpl obj) {
                return obj.getTransTrfNo();
            }

            public void put(SelectTIItemVORowImpl obj, Object value) {
                obj.setTransTrfNo((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SelectTIItemVORowImpl object);

        public abstract void put(SelectTIItemVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDRCPT = AttributesEnum.DocIdRcpt.index();
    public static final int DOCIDPO = AttributesEnum.DocIdPo.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int FOCFLG = AttributesEnum.FocFlg.index();
    public static final int FINALRCPTQTY = AttributesEnum.FinalRcptQty.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int FINALRCPTQTYBS = AttributesEnum.FinalRcptQtyBs.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int NEWPRICE = AttributesEnum.NewPrice.index();
    public static final int DIFFPRICE = AttributesEnum.DiffPrice.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSISSUNO = AttributesEnum.TransIssuNo.index();
    public static final int TRANSTRFNO = AttributesEnum.TransTrfNo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SelectTIItemVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdRcpt.
     * @return the DocIdRcpt
     */
    public String getDocIdRcpt() {
        return (String) getAttributeInternal(DOCIDRCPT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdRcpt.
     * @param value value to set the  DocIdRcpt
     */
    public void setDocIdRcpt(String value) {
        setAttributeInternal(DOCIDRCPT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdPo.
     * @return the DocIdPo
     */
    public String getDocIdPo() {
        return (String) getAttributeInternal(DOCIDPO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdPo.
     * @param value value to set the  DocIdPo
     */
    public void setDocIdPo(String value) {
        setAttributeInternal(DOCIDPO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DlvSchdlNo.
     * @return the DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DlvSchdlNo.
     * @param value value to set the  DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUom.
     * @param value value to set the  ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FocFlg.
     * @return the FocFlg
     */
    public String getFocFlg() {
        return (String) getAttributeInternal(FOCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FocFlg.
     * @param value value to set the  FocFlg
     */
    public void setFocFlg(String value) {
        setAttributeInternal(FOCFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinalRcptQty.
     * @return the FinalRcptQty
     */
    public Number getFinalRcptQty() {
        return (Number) getAttributeInternal(FINALRCPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinalRcptQty.
     * @param value value to set the  FinalRcptQty
     */
    public void setFinalRcptQty(Number value) {
        if(value != null)
            {setAttributeInternal(FINALRCPTQTY, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(FINALRCPTQTY, value);}
      
    }

    /**
     * Gets the attribute value for the calculated attribute DiscAmtSp.
     * @return the DiscAmtSp
     */
    public Number getDiscAmtSp() {
        return (Number) getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiscAmtSp.
     * @param value value to set the  DiscAmtSp
     */
    public void setDiscAmtSp(Number value) {
        if(value != null)
            {setAttributeInternal(DISCAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(DISCAMTSP, value);}
       
    }

    /**
     * Gets the attribute value for the calculated attribute DiscAmtBs.
     * @return the DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number) getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiscAmtBs.
     * @param value value to set the  DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        if(value != null)
            {setAttributeInternal(DISCAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(DISCAMTBS, value);}
       
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSp.
     * @return the ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtSp.
     * @param value value to set the  ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        if(value != null)
            {setAttributeInternal(ITMAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMAMTSP, value);}
      
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmAmtBs.
     * @param value value to set the  ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        if(value != null)
            {setAttributeInternal(ITMAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMAMTBS, value);}
       
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUomBs.
     * @return the ItmUomBs
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmUomBs.
     * @param value value to set the  ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UomConvFctr.
     * @return the UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UomConvFctr.
     * @param value value to set the  UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        if(value != null)
            {setAttributeInternal(UOMCONVFCTR, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(UOMCONVFCTR, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute FinalRcptQtyBs.
     * @return the FinalRcptQtyBs
     */
    public Number getFinalRcptQtyBs() {
        return (Number) getAttributeInternal(FINALRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinalRcptQtyBs.
     * @param value value to set the  FinalRcptQtyBs
     */
    public void setFinalRcptQtyBs(Number value) {
        if(value != null)
            {setAttributeInternal(FINALRCPTQTYBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(FINALRCPTQTYBS, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute ItmPrice.
     * @return the ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmPrice.
     * @param value value to set the  ItmPrice
     */
    public void setItmPrice(Number value) {
        if(value != null)
            {setAttributeInternal(ITMPRICE, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ITMPRICE, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute NewPrice.
     * @return the NewPrice
     */
    public Number getNewPrice() {
        return (Number) getAttributeInternal(NEWPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewPrice.
     * @param value value to set the  NewPrice
     */
    public void setNewPrice(Number value) {
        if(value != null)
            {setAttributeInternal(NEWPRICE, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(NEWPRICE, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute DiffPrice.
     * @return the DiffPrice
     */
    public Number getDiffPrice() {
        Number newPrice = this.getNewPrice();
        Number zero = new Number(0);
        if(newPrice == null)
        {newPrice=zero;}
        
        Number oldPrice = this.getItmPrice();
        if(oldPrice.compareTo(newPrice) > 0)
        {return zero;}
        
        Number diff = newPrice.subtract(oldPrice);
        return diff;
        //return (Number) getAttributeInternal(DIFFPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiffPrice.
     * @param value value to set the  DiffPrice
     */
    public void setDiffPrice(Number value) {
        if(value != null)
            {setAttributeInternal(DIFFPRICE, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(DIFFPRICE, value);}
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        StringBuffer hoOrgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}"));
        if(hoOrgId != null)
         {return hoOrgId.toString();}
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    
     private String resolvEl(String data) {
             FacesContext fc = FacesContext.getCurrentInstance();
             Application app = fc.getApplication();
             ExpressionFactory elFactory = app.getExpressionFactory();
             ELContext elContext = fc.getELContext();
             ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
             String Message = valueExp.getValue(elContext).toString();
             return Message;
         }
    
    public String getTransItmDesc() {
        if(this.getItmId() != null)
        {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl voItem = am.getItem();
            voItem.setNamedWhereClauseParam("bindCldId", this.getCldId());
            voItem.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            voItem.setNamedWhereClauseParam("bindHoOrgId", this.getHoOrgId());
            voItem.setNamedWhereClauseParam("bindItmId", this.getItmId());
            voItem.executeQuery();
                                  
            Row r[]=voItem.getFilteredRows("ItmId", this.getItmId());
            if(r.length>0)
            {return r[0].getAttribute("ItmDesc").toString();}
            else
            {return (String) getAttributeInternal(TRANSITMDESC);}
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIssuNo.
     * @return the TransIssuNo
     */
    public String getTransIssuNo() {
        if(this.getDocIdRcpt() != null)
        {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl voItem = am.getIssuVw();
            voItem.setNamedWhereClauseParam("bindCldId", this.getCldId());
            voItem.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            voItem.setNamedWhereClauseParam("bindOrgId", this.getOrgId());
            voItem.setNamedWhereClauseParam("bindDocId", this.getDocIdRcpt());
            voItem.executeQuery();
                                  
            Row r[]=voItem.getFilteredRows("DocId", this.getDocIdRcpt());
            if(r.length>0)
            {return r[0].getAttribute("IssuNo").toString();}
            else
            {return (String) getAttributeInternal(TRANSISSUNO);}
        }
        return (String) getAttributeInternal(TRANSISSUNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransIssuNo.
     * @param value value to set the  TransIssuNo
     */
    public void setTransIssuNo(String value) {
        setAttributeInternal(TRANSISSUNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTrfNo.
     * @return the TransTrfNo
     */
    public String getTransTrfNo() {
        if(this.getDocIdPo() != null)
        {
            MMInvoiceAMImpl am = (MMInvoiceAMImpl)this.getApplicationModule();
            ViewObjectImpl voItem = am.getTrfOrdVw();
            voItem.setNamedWhereClauseParam("bindCldId", this.getCldId());
            voItem.setNamedWhereClauseParam("bindSlocId", this.getSlocId());
            voItem.setNamedWhereClauseParam("bindOrgId", this.getOrgId());
            voItem.setNamedWhereClauseParam("bindDocId", this.getDocIdPo());
            voItem.executeQuery();
                                  
            Row r[]=voItem.getFilteredRows("DocId", this.getDocIdPo());
            if(r.length>0)
            {return r[0].getAttribute("TrfNo").toString();}
            else
            {return (String) getAttributeInternal(TRANSTRFNO);}
        }
        return (String) getAttributeInternal(TRANSTRFNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTrfNo.
     * @param value value to set the  TransTrfNo
     */
    public void setTransTrfNo(String value) {
        setAttributeInternal(TRANSTRFNO, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    private Integer getAmtRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}").toString()); 
        return roundOff;
    }
    
    private Integer getCurrRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}").toString()); 
        return roundOff;
    }
}
