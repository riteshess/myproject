package mminvoice.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 18 10:57:14 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MMInvcAdjVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMINVCADJEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AdjAmtBs {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getAdjAmtBs();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setAdjAmtBs((Number)value);
            }
        }
        ,
        AdjAmtSp {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getAdjAmtSp();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setAdjAmtSp((Number)value);
            }
        }
        ,
        ApGlSlNo {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getApGlSlNo();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setApGlSlNo((Integer)value);
            }
        }
        ,
        ApSlNo {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getApSlNo();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setApSlNo((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        CoaId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        DocId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        GlAmtBs {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getGlAmtBs();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setGlAmtBs((Number)value);
            }
        }
        ,
        GlAmtSp {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getGlAmtSp();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setGlAmtSp((Number)value);
            }
        }
        ,
        OrgId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        SrNo {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setSrNo((Integer)value);
            }
        }
        ,
        TranType {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getTranType();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setTranType((String)value);
            }
        }
        ,
        GlDocId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getGlDocId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setGlDocId((String)value);
            }
        }
        ,
        GlDocDt {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getGlDocDt();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setGlDocDt((Timestamp)value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setCurrConvFctr((Number)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setCurrIdSp((Long)value);
            }
        }
        ,
        vouDispId {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getvouDispId();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setvouDispId((String)value);
            }
        }
        ,
        TransTotalAmt {
            public Object get(MMInvcAdjVORowImpl obj) {
                return obj.getTransTotalAmt();
            }

            public void put(MMInvcAdjVORowImpl obj, Object value) {
                obj.setTransTotalAmt((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MMInvcAdjVORowImpl object);

        public abstract void put(MMInvcAdjVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ADJAMTBS = AttributesEnum.AdjAmtBs.index();
    public static final int ADJAMTSP = AttributesEnum.AdjAmtSp.index();
    public static final int APGLSLNO = AttributesEnum.ApGlSlNo.index();
    public static final int APSLNO = AttributesEnum.ApSlNo.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int GLAMTBS = AttributesEnum.GlAmtBs.index();
    public static final int GLAMTSP = AttributesEnum.GlAmtSp.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int GLDOCID = AttributesEnum.GlDocId.index();
    public static final int GLDOCDT = AttributesEnum.GlDocDt.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int VOUDISPID = AttributesEnum.vouDispId.index();
    public static final int TRANSTOTALAMT = AttributesEnum.TransTotalAmt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MMInvcAdjVORowImpl() {
    }

    /**
     * Gets MmInvcAdjEO entity object.
     * @return the MmInvcAdjEO
     */
    public EntityImpl getMmInvcAdjEO() {
        return (EntityImpl)getEntity(ENTITY_MMINVCADJEO);
    }

    /**
     * Gets the attribute value for ADJ_AMT_BS using the alias name AdjAmtBs.
     * @return the ADJ_AMT_BS
     */
    public Number getAdjAmtBs() {
        return (Number) getAttributeInternal(ADJAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJ_AMT_BS using the alias name AdjAmtBs.
     * @param value value to set the ADJ_AMT_BS
     */
    public void setAdjAmtBs(Number value) {
        if(value != null)
        {setAttributeInternal(ADJAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ADJAMTBS, value);}
       
    }

    /**
     * Gets the attribute value for ADJ_AMT_SP using the alias name AdjAmtSp.
     * @return the ADJ_AMT_SP
     */
    public Number getAdjAmtSp() {
        return (Number) getAttributeInternal(ADJAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJ_AMT_SP using the alias name AdjAmtSp.
     * @param value value to set the ADJ_AMT_SP
     */
    public void setAdjAmtSp(Number value) {
        if(value !=null)
            {setAttributeInternal(ADJAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(ADJAMTSP, value);}
    }

    /**
     * Gets the attribute value for AP_GL_SL_NO using the alias name ApGlSlNo.
     * @return the AP_GL_SL_NO
     */
    public Integer getApGlSlNo() {
        return (Integer) getAttributeInternal(APGLSLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AP_GL_SL_NO using the alias name ApGlSlNo.
     * @param value value to set the AP_GL_SL_NO
     */
    public void setApGlSlNo(Integer value) {
        setAttributeInternal(APGLSLNO, value);
    }

    /**
     * Gets the attribute value for AP_SL_NO using the alias name ApSlNo.
     * @return the AP_SL_NO
     */
    public Integer getApSlNo() {
        return (Integer) getAttributeInternal(APSLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for AP_SL_NO using the alias name ApSlNo.
     * @param value value to set the AP_SL_NO
     */
    public void setApSlNo(Integer value) {
        setAttributeInternal(APSLNO, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for GL_AMT_BS using the alias name GlAmtBs.
     * @return the GL_AMT_BS
     */
    public Number getGlAmtBs() {
        return (Number) getAttributeInternal(GLAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_AMT_BS using the alias name GlAmtBs.
     * @param value value to set the GL_AMT_BS
     */
    public void setGlAmtBs(Number value) {
        if(value != null)
            {setAttributeInternal(GLAMTBS, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(GLAMTBS, value);}
    }

    /**
     * Gets the attribute value for GL_AMT_SP using the alias name GlAmtSp.
     * @return the GL_AMT_SP
     */
    public Number getGlAmtSp() {
        return (Number) getAttributeInternal(GLAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_AMT_SP using the alias name GlAmtSp.
     * @param value value to set the GL_AMT_SP
     */
    public void setGlAmtSp(Number value) {
        if(value != null)
            {setAttributeInternal(GLAMTSP, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(GLAMTSP, value);}
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for GL_DOC_ID using the alias name GlDocId.
     * @return the GL_DOC_ID
     */
    public String getGlDocId() {
        return (String) getAttributeInternal(GLDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_DOC_ID using the alias name GlDocId.
     * @param value value to set the GL_DOC_ID
     */
    public void setGlDocId(String value) {
        setAttributeInternal(GLDOCID, value);
    }

    /**
     * Gets the attribute value for GL_DOC_DT using the alias name GlDocDt.
     * @return the GL_DOC_DT
     */
    public Timestamp getGlDocDt() {
        return (Timestamp) getAttributeInternal(GLDOCDT);
    }

    /**
     * Sets <code>value</code> as attribute value for GL_DOC_DT using the alias name GlDocDt.
     * @param value value to set the GL_DOC_DT
     */
    public void setGlDocDt(Timestamp value) {
        setAttributeInternal(GLDOCDT, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number)getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        if(value != null)
            {setAttributeInternal(CURRCONVFCTR, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(CURRCONVFCTR, value);}
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Long getCurrIdSp() {
        return (Long) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Long value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute vouDispId.
     * @return the vouDispId
     */
    public String getvouDispId() {
        Object dispId =(Object)(callStoredFunction(Types.VARCHAR, "MM.MM_GET_VOU_NO(?,?,?,?)", new Object[] {this.getCldId(),this.getSlocId(),this.getOrgId(),this.getGlDocId()}));
        if(dispId != null)
         {return String.valueOf(dispId).toString().substring(2);}
        return (String) getAttributeInternal(VOUDISPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute vouDispId.
     * @param value value to set the  vouDispId
     */
    public void setvouDispId(String value) {
        setAttributeInternal(VOUDISPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotalAmt.
     * @return the TransTotalAmt
     */
    public Number getTransTotalAmt() {
        return (Number)getAttributeInternal(TRANSTOTALAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotalAmt.
     * @param value value to set the  TransTotalAmt
     */
    public void setTransTotalAmt(Number value) {
        if(value !=null)
            {setAttributeInternal(TRANSTOTALAMT, value.round(getAmtRoundOff()));}
        else
        {setAttributeInternal(TRANSTOTALAMT, value);}
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
          CallableStatement st = null;
          try {
               st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               st.registerOutParameter(1, sqlReturnType);
              if (bindVars != null) {
                  for (int z = 0; z < bindVars.length; z++) {
                      st.setObject(z + 2, bindVars[z]);
                  }
              }
              st.executeUpdate();

              return st.getObject(1);
          } catch (SQLException e) {
              
             int end = e.getMessage().indexOf("\n");
              //  throw new JboException(e.getMessage().substring(11, end));
              String msg = e.getMessage();
              FacesMessage ermsg = new FacesMessage(msg);
              ermsg.setSeverity(FacesMessage.SEVERITY_ERROR);
              FacesContext.getCurrentInstance().addMessage(null, ermsg);
            //  throw new JboException(e);
              return null;
          } finally {
              if (st != null) {
                  try {
                      st.close();
                  } catch (SQLException e) {
                 }
             }
          }
      }
    
    
    private String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }
    
    private Integer getAmtRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}").toString()); 
        return roundOff;
    }
    
    private Integer getCurrRoundOff()
    {
        Integer roundOff=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_CURR_DIGIT}").toString()); 
        return roundOff;
    }
}
