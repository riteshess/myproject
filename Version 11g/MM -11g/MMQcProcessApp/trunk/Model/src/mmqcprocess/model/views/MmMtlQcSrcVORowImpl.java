package mmqcprocess.model.views;

import mmqcprocess.model.service.QcProcessAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 16 11:27:08 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlQcSrcVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMMTLQCSRCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        QcTxnId {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getQcTxnId();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setQcTxnId((String)value);
            }
        }
        ,
        DocTypeSrc {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getDocTypeSrc();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setDocTypeSrc((Integer)value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setDocIdSrc((String)value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        DocIdSrcDisp {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getDocIdSrcDisp();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setDocIdSrcDisp((String)value);
            }
        }
        ,
        MmMtlQcRslt {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getMmMtlQcRslt();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovMtlRcptSrcVO {
            public Object get(MmMtlQcSrcVORowImpl obj) {
                return obj.getLovMtlRcptSrcVO();
            }

            public void put(MmMtlQcSrcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlQcSrcVORowImpl object);

        public abstract void put(MmMtlQcSrcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int QCTXNID = AttributesEnum.QcTxnId.index();
    public static final int DOCTYPESRC = AttributesEnum.DocTypeSrc.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int DOCIDSRCDISP = AttributesEnum.DocIdSrcDisp.index();
    public static final int MMMTLQCRSLT = AttributesEnum.MmMtlQcRslt.index();
    public static final int LOVMTLRCPTSRCVO = AttributesEnum.LovMtlRcptSrcVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlQcSrcVORowImpl() {
    }

    /**
     * Gets MmMtlQcSrcEO entity object.
     * @return the MmMtlQcSrcEO
     */
    public EntityImpl getMmMtlQcSrcEO() {
        return (EntityImpl)getEntity(ENTITY_MMMTLQCSRCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @return the QC_TXN_ID
     */
    public String getQcTxnId() {
        return (String) getAttributeInternal(QCTXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @param value value to set the QC_TXN_ID
     */
    public void setQcTxnId(String value) {
        setAttributeInternal(QCTXNID, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @return the DOC_TYPE_SRC
     */
    public Integer getDocTypeSrc() {
        return (Integer) getAttributeInternal(DOCTYPESRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_SRC using the alias name DocTypeSrc.
     * @param value value to set the DOC_TYPE_SRC
     */
    public void setDocTypeSrc(Integer value) {
        setAttributeInternal(DOCTYPESRC, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdSrcDisp.
     * @return the DocIdSrcDisp
     */
    public String getDocIdSrcDisp() {
        Integer type=this.getDocTypeSrc();
        String doc=this.getDocIdSrc();
       QcProcessAMImpl am=(QcProcessAMImpl)this.getApplicationModule();
        if(type.equals(266)){
            Row[] po=am.getLovPoNoForView().getFilteredRows("DocId",doc);
            return po[0].getAttribute("AuthPoNo").toString();
        }else if(type.equals(270)){
            Row[] to=am.getLovTransferOrd().getFilteredRows("DocId",doc);
            return to[0].getAttribute("TrfNo").toString(); 
        }else{
        return (String) getAttributeInternal(DOCIDSRCDISP);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdSrcDisp.
     * @param value value to set the  DocIdSrcDisp
     */
    public void setDocIdSrcDisp(String value) {
        setAttributeInternal(DOCIDSRCDISP, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlQcRslt.
     */
    public RowIterator getMmMtlQcRslt() {
        return (RowIterator)getAttributeInternal(MMMTLQCRSLT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMtlRcptSrcVO.
     */
    public RowSet getLovMtlRcptSrcVO() {
        return (RowSet)getAttributeInternal(LOVMTLRCPTSRCVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
