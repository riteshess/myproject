package mmqcprocess.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmqcprocess.model.entities.MmMtlQcDtlEOImpl;

import mmqcprocess.model.service.QcProcessAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 26 18:54:27 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlQcDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMMTLQCDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        QcTxnId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getQcTxnId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setQcTxnId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ChkSrlNo {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getChkSrlNo();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setChkSrlNo((Integer)value);
            }
        }
        ,
        ParamId {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getParamId();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setParamId((String)value);
            }
        }
        ,
        StdVal {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getStdVal();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setStdVal((Number)value);
            }
        }
        ,
        LowerLimit {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getLowerLimit();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setLowerLimit((Number)value);
            }
        }
        ,
        UpperLimit {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getUpperLimit();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setUpperLimit((Number)value);
            }
        }
        ,
        ActualVal {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getActualVal();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setActualVal((Number)value);
            }
        }
        ,
        QcRslt {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getQcRslt();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setQcRslt((Integer)value);
            }
        }
        ,
        SrNo {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setDocIdSrc((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        TransParamType {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getTransParamType();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setTransParamType((Integer)value);
            }
        }
        ,
        TransActualValNo {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getTransActualValNo();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setTransActualValNo((Number)value);
            }
        }
        ,
        TransActualValCB {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getTransActualValCB();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setTransActualValCB((Integer)value);
            }
        }
        ,
        TransFailAction {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getTransFailAction();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setTransFailAction((Integer)value);
            }
        }
        ,
        LovParamIdVO {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getLovParamIdVO();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovQcResultVO {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getLovQcResultVO();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LocQCItmVO {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getLocQCItmVO();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovParamTypeVO {
            public Object get(MmMtlQcDtlVORowImpl obj) {
                return obj.getLovParamTypeVO();
            }

            public void put(MmMtlQcDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlQcDtlVORowImpl object);

        public abstract void put(MmMtlQcDtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int QCTXNID = AttributesEnum.QcTxnId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int CHKSRLNO = AttributesEnum.ChkSrlNo.index();
    public static final int PARAMID = AttributesEnum.ParamId.index();
    public static final int STDVAL = AttributesEnum.StdVal.index();
    public static final int LOWERLIMIT = AttributesEnum.LowerLimit.index();
    public static final int UPPERLIMIT = AttributesEnum.UpperLimit.index();
    public static final int ACTUALVAL = AttributesEnum.ActualVal.index();
    public static final int QCRSLT = AttributesEnum.QcRslt.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int TRANSPARAMTYPE = AttributesEnum.TransParamType.index();
    public static final int TRANSACTUALVALNO = AttributesEnum.TransActualValNo.index();
    public static final int TRANSACTUALVALCB = AttributesEnum.TransActualValCB.index();
    public static final int TRANSFAILACTION = AttributesEnum.TransFailAction.index();
    public static final int LOVPARAMIDVO = AttributesEnum.LovParamIdVO.index();
    public static final int LOVQCRESULTVO = AttributesEnum.LovQcResultVO.index();
    public static final int LOCQCITMVO = AttributesEnum.LocQCItmVO.index();
    public static final int LOVPARAMTYPEVO = AttributesEnum.LovParamTypeVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlQcDtlVORowImpl() {
    }

    /**
     * Gets MmMtlQcDtlEO entity object.
     * @return the MmMtlQcDtlEO
     */
    public MmMtlQcDtlEOImpl getMmMtlQcDtlEO() {
        return (MmMtlQcDtlEOImpl)getEntity(ENTITY_MMMTLQCDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @return the QC_TXN_ID
     */
    public String getQcTxnId() {
        return (String) getAttributeInternal(QCTXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_TXN_ID using the alias name QcTxnId.
     * @param value value to set the QC_TXN_ID
     */
    public void setQcTxnId(String value) {
        setAttributeInternal(QCTXNID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for CHK_SRL_NO using the alias name ChkSrlNo.
     * @return the CHK_SRL_NO
     */
    public Integer getChkSrlNo() {
        return (Integer) getAttributeInternal(CHKSRLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for CHK_SRL_NO using the alias name ChkSrlNo.
     * @param value value to set the CHK_SRL_NO
     */
    public void setChkSrlNo(Integer value) {
        setAttributeInternal(CHKSRLNO, value);
    }

    /**
     * Gets the attribute value for PARAM_ID using the alias name ParamId.
     * @return the PARAM_ID
     */
    public String getParamId() {
        return (String) getAttributeInternal(PARAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for PARAM_ID using the alias name ParamId.
     * @param value value to set the PARAM_ID
     */
    public void setParamId(String value) {
        setAttributeInternal(PARAMID, value);
    }

    /**
     * Gets the attribute value for STD_VAL using the alias name StdVal.
     * @return the STD_VAL
     */
    public Number getStdVal() {
        return (Number) getAttributeInternal(STDVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for STD_VAL using the alias name StdVal.
     * @param value value to set the STD_VAL
     */
    public void setStdVal(Number value) {
        setAttributeInternal(STDVAL, value);
    }

    /**
     * Gets the attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @return the LOWER_LIMIT
     */
    public Number getLowerLimit() {
        return (Number) getAttributeInternal(LOWERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for LOWER_LIMIT using the alias name LowerLimit.
     * @param value value to set the LOWER_LIMIT
     */
    public void setLowerLimit(Number value) {
        setAttributeInternal(LOWERLIMIT, value);
    }

    /**
     * Gets the attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @return the UPPER_LIMIT
     */
    public Number getUpperLimit() {
        return (Number) getAttributeInternal(UPPERLIMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for UPPER_LIMIT using the alias name UpperLimit.
     * @param value value to set the UPPER_LIMIT
     */
    public void setUpperLimit(Number value) {
        setAttributeInternal(UPPERLIMIT, value);
    }

    /**
     * Gets the attribute value for ACTUAL_VAL using the alias name ActualVal.
     * @return the ACTUAL_VAL
     */
    public Number getActualVal() {
        return (Number) getAttributeInternal(ACTUALVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTUAL_VAL using the alias name ActualVal.
     * @param value value to set the ACTUAL_VAL
     */
    public void setActualVal(Number value) {
        setAttributeInternal(ACTUALVAL, value);
    }

    /**
     * Gets the attribute value for QC_RSLT using the alias name QcRslt.
     * @return the QC_RSLT
     */
    public Integer getQcRslt() {
        return (Integer) getAttributeInternal(QCRSLT);
    }

    /**
     * Sets <code>value</code> as attribute value for QC_RSLT using the alias name QcRslt.
     * @param value value to set the QC_RSLT
     */
    public void setQcRslt(Integer value) {
        setAttributeInternal(QCRSLT, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public String getSrNo() {
        return (String) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @return the DLV_SCHDL_NO
     */
    public Integer getDlvSchdlNo() {
        return (Integer) getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_SCHDL_NO using the alias name DlvSchdlNo.
     * @param value value to set the DLV_SCHDL_NO
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    public Object resolvElDC(String data) {
      FacesContext fc = FacesContext.getCurrentInstance();
      Application app = fc.getApplication();
      ExpressionFactory elFactory = app.getExpressionFactory();
      ELContext elContext = fc.getELContext();
      ValueExpression valueExp =
     elFactory.createValueExpression
    (elContext, "#{data." + data + ".dataProvider}", Object.class);
            return valueExp.getValue(elContext);
        }


    /**
     * Gets the attribute value for the calculated attribute TransParamType.
     * @return the TransParamType
     */
    public Integer getTransParamType() {
        QcProcessAMImpl am = (QcProcessAMImpl)resolvElDC("QcProcessAMDataControl");

        String inputParmId=null;
        Integer paramType=null;
        try{
        inputParmId=getParamId();
        }catch(NullPointerException npe){

        }
        if(inputParmId!=null){
        Row[] xx=am.getLovParamIdVO().getFilteredRows("ParamId", inputParmId);
        if(xx.length>0){
        paramType = (Integer)xx[0].getAttribute("ParamType");
        }
        return paramType;

        }else{
            return (Integer) getAttributeInternal(TRANSPARAMTYPE);
        }
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransParamType.
     * @param value value to set the  TransParamType
     */
    public void setTransParamType(Integer value) {
        setAttributeInternal(TRANSPARAMTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualValNo.
     * @return the TransActualValNo
     */
    public Number getTransActualValNo() {
        if(getTransParamType()==274){
            Number val = getActualVal();
            return val;
        }else{
        return (Number) getAttributeInternal(TRANSACTUALVALNO);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualValNo.
     * @param value value to set the  TransActualValNo
     */
    public void setTransActualValNo(Number value) {
        if(value == null){
            value = new Number(0);
        }
        if(getTransParamType()!=null && getLowerLimit()!=null && getUpperLimit()!=null && getTransFailAction()!=null){
            if(getTransParamType()==274){
                setActualVal(value);
                if(value.compareTo(getLowerLimit()) >=0 && value.compareTo(getUpperLimit())<=0){
                setQcRslt(284);
            }else if(getTransFailAction()==285){
                    setQcRslt(285);
                }else if(getTransFailAction()==286){
                    setQcRslt(286);
                }
        }
        }
        setAttributeInternal(TRANSACTUALVALNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransActualValCB.
     * @return the TransActualValCB
     */
    public Integer getTransActualValCB() {
        
            if(getActualVal()!=null && getActualVal().compareTo(new Number(0))==0){
                return 0;
            }else if(getActualVal()!=null && getActualVal().compareTo(new Number(1))==0){
                return 1;
            }
        else{
        return (Integer) getAttributeInternal(TRANSACTUALVALCB);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransActualValCB.
     * @param value value to set the  TransActualValCB
     */
    public void setTransActualValCB(Integer value) {
        if(getTransParamType()!=null && getTransFailAction()!=null){
        if(getTransParamType()==275){
            if(value == 1){
                setActualVal(new Number(1));
                setQcRslt(284);
            }else if(getTransFailAction()==285){
                setActualVal(new Number(0));
                setQcRslt(285);
            }else if(getTransFailAction()==286){
                setActualVal(new Number(0));
                setQcRslt(286);
            }
        }
        }
        setAttributeInternal(TRANSACTUALVALCB, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransFailAction.
     * @return the TransFailAction
     */
    public Integer getTransFailAction() {
        String itmId=null;
        String paramId = null;
        try{
            itmId= getItmId();
            paramId = getParamId();
            
        }catch(NullPointerException npe){
            
        }
        QcProcessAMImpl am = (QcProcessAMImpl)resolvElDC("QcProcessAMDataControl");
        ViewObjectImpl vo = am.getParamFailActnVO();
        vo.setRangeSize(-1);
        RowQualifier rowQualifier =new RowQualifier(vo);
        rowQualifier.setWhereClause(" ItmId ='"+itmId+"' and ParamId ='"+paramId+"'");
        Row[] rows=vo.getFilteredRows(rowQualifier);
        if(rows.length>0){
            Integer failAct = Integer.parseInt(rows[0].getAttribute("FailActn").toString());
            return failAct;
        }else{
        return (Integer) getAttributeInternal(TRANSFAILACTION);
    }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransFailAction.
     * @param value value to set the  TransFailAction
     */
    public void setTransFailAction(Integer value) {
        setAttributeInternal(TRANSFAILACTION, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovParamIdVO.
     */
    public RowSet getLovParamIdVO() {
        return (RowSet)getAttributeInternal(LOVPARAMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovQcResultVO.
     */
    public RowSet getLovQcResultVO() {
        return (RowSet)getAttributeInternal(LOVQCRESULTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LocQCItmVO.
     */
    public RowSet getLocQCItmVO() {
        return (RowSet)getAttributeInternal(LOCQCITMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovParamTypeVO.
     */
    public RowSet getLovParamTypeVO() {
        return (RowSet)getAttributeInternal(LOVPARAMTYPEVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
