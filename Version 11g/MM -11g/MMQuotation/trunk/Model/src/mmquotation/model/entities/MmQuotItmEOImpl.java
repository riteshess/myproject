package mmquotation.model.entities;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmquotation.model.service.QuotationAMImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 13 12:42:30 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmQuotItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        QuotQty {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getQuotQty();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setQuotQty((Number)value);
            }
        }
        ,
        ItmPrice {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmPrice();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        }
        ,
        DiscType {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        RejAlwd {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getRejAlwd();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setRejAlwd((String)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EntityId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setTlrncQtyType((String)value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setTlrncQtyVal((Number)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmAmtBs_Trans {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmAmtBs_Trans();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmAmtBs_Trans((Number)value);
            }
        }
        ,
        ItmAmtSp_Trans {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmAmtSp_Trans();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmAmtSp_Trans((Number)value);
            }
        }
        ,
        ItmAmtSpAftTax_Trans {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmAmtSpAftTax_Trans();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmAmtSpAftTax_Trans((Number)value);
            }
        }
        ,
        CldId {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        ItmPriceBs {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmPriceBs();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmPriceBs((Number)value);
            }
        }
        ,
        DiscAmtBs {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getDiscAmtBs();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setDiscAmtBs((Number)value);
            }
        }
        ,
        DiscAmtSp {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getDiscAmtSp();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setDiscAmtSp((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        TotDiscAmtBs {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getTotDiscAmtBs();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setTotDiscAmtBs((Number)value);
            }
        }
        ,
        TotDiscAmtSp {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getTotDiscAmtSp();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setTotDiscAmtSp((Number)value);
            }
        }
        ,
        MmQuot {
            public Object get(MmQuotItmEOImpl obj) {
                return obj.getMmQuot();
            }

            public void put(MmQuotItmEOImpl obj, Object value) {
                obj.setMmQuot((MmQuotEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmQuotItmEOImpl object);

        public abstract void put(MmQuotItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int QUOTQTY = AttributesEnum.QuotQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int REJALWD = AttributesEnum.RejAlwd.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMAMTBS_TRANS = AttributesEnum.ItmAmtBs_Trans.index();
    public static final int ITMAMTSP_TRANS = AttributesEnum.ItmAmtSp_Trans.index();
    public static final int ITMAMTSPAFTTAX_TRANS = AttributesEnum.ItmAmtSpAftTax_Trans.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ITMPRICEBS = AttributesEnum.ItmPriceBs.index();
    public static final int DISCAMTBS = AttributesEnum.DiscAmtBs.index();
    public static final int DISCAMTSP = AttributesEnum.DiscAmtSp.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int TOTDISCAMTBS = AttributesEnum.TotDiscAmtBs.index();
    public static final int TOTDISCAMTSP = AttributesEnum.TotDiscAmtSp.index();
    public static final int MMQUOT = AttributesEnum.MmQuot.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmQuotItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmquotation.model.entities.MmQuotItmEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for QuotQty, using the alias name QuotQty.
     * @return the value of QuotQty
     */
    public Number getQuotQty() {
        return (Number)getAttributeInternal(QUOTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for QuotQty.
     * @param value value to set the QuotQty
     */
    public void setQuotQty(Number value) {
        setAttributeInternal(QUOTQTY, value);
    }

    /**
     * Gets the attribute value for ItmPrice, using the alias name ItmPrice.
     * @return the value of ItmPrice
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPrice.
     * @param value value to set the ItmPrice
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for RejAlwd, using the alias name RejAlwd.
     * @return the value of RejAlwd
     */
    public String getRejAlwd() {
        return (String)getAttributeInternal(REJALWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for RejAlwd.
     * @param value value to set the RejAlwd
     */
    public void setRejAlwd(String value) {
        setAttributeInternal(REJALWD, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs, using the alias name ItmAmtBs.
     * @return the value of ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number)getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs.
     * @param value value to set the ItmAmtBs
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp, using the alias name ItmAmtSp.
     * @return the value of ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number)getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp.
     * @param value value to set the ItmAmtSp
     */
    public void setItmAmtSp(Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for TlrncQtyType, using the alias name TlrncQtyType.
     * @return the value of TlrncQtyType
     */
    public String getTlrncQtyType() {
        return (String)getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyType.
     * @param value value to set the TlrncQtyType
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TlrncQtyVal, using the alias name TlrncQtyVal.
     * @return the value of TlrncQtyVal
     */
    public Number getTlrncQtyVal() {
        return (Number)getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for TlrncQtyVal.
     * @param value value to set the TlrncQtyVal
     */
    public void setTlrncQtyVal(Number value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ItmAmtBs_Trans, using the alias name ItmAmtBs_Trans.
     * @return the value of ItmAmtBs_Trans
     */
    public Number getItmAmtBs_Trans() {
        return (Number)getAttributeInternal(ITMAMTBS_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtBs_Trans.
     * @param value value to set the ItmAmtBs_Trans
     */
    public void setItmAmtBs_Trans(Number value) {
        setAttributeInternal(ITMAMTBS_TRANS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSp_Trans, using the alias name ItmAmtSp_Trans.
     * @return the value of ItmAmtSp_Trans
     */
    public Number getItmAmtSp_Trans() {
        return (Number)getAttributeInternal(ITMAMTSP_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSp_Trans.
     * @param value value to set the ItmAmtSp_Trans
     */
    public void setItmAmtSp_Trans(Number value) {
        setAttributeInternal(ITMAMTSP_TRANS, value);
    }

    /**
     * Gets the attribute value for ItmAmtSpAftTax_Trans, using the alias name ItmAmtSpAftTax_Trans.
     * @return the value of ItmAmtSpAftTax_Trans
     */
    public Number getItmAmtSpAftTax_Trans() {
        return (Number)getAttributeInternal(ITMAMTSPAFTTAX_TRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmAmtSpAftTax_Trans.
     * @param value value to set the ItmAmtSpAftTax_Trans
     */
    public void setItmAmtSpAftTax_Trans(Number value) {
        setAttributeInternal(ITMAMTSPAFTTAX_TRANS, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for ItmPriceBs, using the alias name ItmPriceBs.
     * @return the value of ItmPriceBs
     */
    public Number getItmPriceBs() {
        return (Number)getAttributeInternal(ITMPRICEBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmPriceBs.
     * @param value value to set the ItmPriceBs
     */
    public void setItmPriceBs(Number value) {
        setAttributeInternal(ITMPRICEBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtBs, using the alias name DiscAmtBs.
     * @return the value of DiscAmtBs
     */
    public Number getDiscAmtBs() {
        return (Number)getAttributeInternal(DISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtBs.
     * @param value value to set the DiscAmtBs
     */
    public void setDiscAmtBs(Number value) {
        setAttributeInternal(DISCAMTBS, value);
    }

    /**
     * Gets the attribute value for DiscAmtSp, using the alias name DiscAmtSp.
     * @return the value of DiscAmtSp
     */
    public Number getDiscAmtSp() {
        return (Number)getAttributeInternal(DISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscAmtSp.
     * @param value value to set the DiscAmtSp
     */
    public void setDiscAmtSp(Number value) {
        setAttributeInternal(DISCAMTSP, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for TotDiscAmtBs, using the alias name TotDiscAmtBs.
     * @return the value of TotDiscAmtBs
     */
    public Number getTotDiscAmtBs() {
        return (Number)getAttributeInternal(TOTDISCAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotDiscAmtBs.
     * @param value value to set the TotDiscAmtBs
     */
    public void setTotDiscAmtBs(Number value) {
        setAttributeInternal(TOTDISCAMTBS, value);
    }

    /**
     * Gets the attribute value for TotDiscAmtSp, using the alias name TotDiscAmtSp.
     * @return the value of TotDiscAmtSp
     */
    public Number getTotDiscAmtSp() {
        return (Number)getAttributeInternal(TOTDISCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotDiscAmtSp.
     * @param value value to set the TotDiscAmtSp
     */
    public void setTotDiscAmtSp(Number value) {
        setAttributeInternal(TOTDISCAMTSP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MmQuotEOImpl.
     */
    public MmQuotEOImpl getMmQuot() {
        return (MmQuotEOImpl)getAttributeInternal(MMQUOT);
    }

    /**
     * Sets <code>value</code> as the associated entity MmQuotEOImpl.
     */
    public void setMmQuot(MmQuotEOImpl value) {
        setAttributeInternal(MMQUOT, value);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent
     * @param itmUom key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, String itmId, String itmUom,
                                       String cldId) {
        return new Key(new Object[]{slocId, orgId, docId, itmId, itmUom, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer UserId = Integer.parseInt(resolveEl("#{pageFlowScope.GLBL_APP_USR1}"));
        setUsrIdCreate(UserId);
        super.create(attributeList);
    }
    public String resolveEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     public Object resolvElDC(String data) {
       FacesContext fc = FacesContext.getCurrentInstance();
       Application app = fc.getApplication();
       ExpressionFactory elFactory = app.getExpressionFactory();
       ELContext elContext = fc.getELContext();
       ValueExpression valueExp =
      elFactory.createValueExpression
     (elContext, "#{data." + data + ".dataProvider}", Object.class);
             return valueExp.getValue(elContext);
         }
    protected void doDML(int operation, TransactionEvent e) {
        System.out.println("inside itm do dml");
       /*  System.out.println("getItmAmtBs_Trans():"+getItmAmtBs_Trans());
        QuotationAMImpl am = (QuotationAMImpl)resolvElDC("QuotationAMDataControl");
        Number currFctr = (Number)am.getMmQuot1().getCurrentRow().getAttribute("CurrConvFctr");
        Number transSp = new Number(0);
        if(getItmAmtSpAftTax_Trans() != null){
            transSp = (Number)getItmAmtSpAftTax_Trans();
        }
        System.out.println("transSp--------------"+transSp);
        System.out.println("currency--------------"+currFctr);
        Number itmBs = currFctr.multiply(transSp);
        System.out.println("getItmAmtSpAftTax_Trans() :"+getItmAmtSpAftTax_Trans());
                  if(itmBs!=null){
                      setItmAmtBs(itmBs);
                  }
                  if(getItmAmtSpAftTax_Trans()!=null){
                      setItmAmtSp(getItmAmtSpAftTax_Trans());
                  } */
        if (operation == DML_UPDATE) {
            Integer UserId = Integer.parseInt(resolveEl("#{pageFlowScope.GLBL_APP_USR1}"));

            setUsrIdMod(UserId);

        }

        super.doDML(operation, e);
    }
}
