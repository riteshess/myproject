package inventoryreportapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 22 10:37:55 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StockTakeVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CldId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        StockTkePrfId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockTkePrfId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockTkePrfId((String)value);
            }
        }
        ,
        StockPrfDflt {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockPrfDflt();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockPrfDflt((String)value);
            }
        }
        ,
        StockMnthCyc {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockMnthCyc();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockMnthCyc((Integer)value);
            }
        }
        ,
        StockTkeCycle {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockTkeCycle();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockTkeCycle((Integer)value);
            }
        }
        ,
        StockTkNo {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockTkNo();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockTkNo((String)value);
            }
        }
        ,
        StockTakeDocId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStockTakeDocId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStockTakeDocId((String)value);
            }
        }
        ,
        AuthStat {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getAuthStat();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAuthStat((String)value);
            }
        }
        ,
        StkTkStat {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getStkTkStat();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setStkTkStat((Integer)value);
            }
        }
        ,
        FyId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        WhId {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        LOVStockTKPRf1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVStockTKPRf1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVYNVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVYNVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVMnthSelCr1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVMnthSelCr1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVStkTkCycle1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVStkTkCycle1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVFinancialYearVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVFinancialYearVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVDocIdForStockTakeVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVDocIdForStockTakeVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVStockTakeStatusVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVStockTakeStatusVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVAuthStatForStockTakeVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVAuthStatForStockTakeVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVWarehouseForStockTakeVO1 {
            public Object get(StockTakeVORowImpl obj) {
                return obj.getLOVWarehouseForStockTakeVO1();
            }

            public void put(StockTakeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(StockTakeVORowImpl object);

        public abstract void put(StockTakeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int STOCKTKEPRFID = AttributesEnum.StockTkePrfId.index();
    public static final int STOCKPRFDFLT = AttributesEnum.StockPrfDflt.index();
    public static final int STOCKMNTHCYC = AttributesEnum.StockMnthCyc.index();
    public static final int STOCKTKECYCLE = AttributesEnum.StockTkeCycle.index();
    public static final int STOCKTKNO = AttributesEnum.StockTkNo.index();
    public static final int STOCKTAKEDOCID = AttributesEnum.StockTakeDocId.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int STKTKSTAT = AttributesEnum.StkTkStat.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int LOVSTOCKTKPRF1 = AttributesEnum.LOVStockTKPRf1.index();
    public static final int LOVYNVO1 = AttributesEnum.LOVYNVO1.index();
    public static final int LOVMNTHSELCR1 = AttributesEnum.LOVMnthSelCr1.index();
    public static final int LOVSTKTKCYCLE1 = AttributesEnum.LOVStkTkCycle1.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();
    public static final int LOVFINANCIALYEARVO1 = AttributesEnum.LOVFinancialYearVO1.index();
    public static final int LOVDOCIDFORSTOCKTAKEVO1 = AttributesEnum.LOVDocIdForStockTakeVO1.index();
    public static final int LOVSTOCKTAKESTATUSVO1 = AttributesEnum.LOVStockTakeStatusVO1.index();
    public static final int LOVAUTHSTATFORSTOCKTAKEVO1 = AttributesEnum.LOVAuthStatForStockTakeVO1.index();
    public static final int LOVWAREHOUSEFORSTOCKTAKEVO1 = AttributesEnum.LOVWarehouseForStockTakeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public StockTakeVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
            cldid=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            return cldid;
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer sloc;
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
         sloc =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            return sloc;
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null){
         orgid =resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            return orgid;
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String hoorgid;
        if(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}")!=null){
         hoorgid =resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
            return hoorgid;
        }
        return (String) getAttributeInternal(HOORGID);
    }
    
    
    
    public Object resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    Object Message=valueExp.getValue(elContext);
    return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockTkePrfId.
     * @return the StockTkePrfId
     */
    public String getStockTkePrfId() {
        return (String) getAttributeInternal(STOCKTKEPRFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockTkePrfId.
     * @param value value to set the  StockTkePrfId
     */
    public void setStockTkePrfId(String value) {
        setAttributeInternal(STOCKTKEPRFID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockPrfDflt.
     * @return the StockPrfDflt
     */
    public String getStockPrfDflt() {
        return (String) getAttributeInternal(STOCKPRFDFLT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockPrfDflt.
     * @param value value to set the  StockPrfDflt
     */
    public void setStockPrfDflt(String value) {
        setAttributeInternal(STOCKPRFDFLT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockMnthCyc.
     * @return the StockMnthCyc
     */
    public Integer getStockMnthCyc() {
        return (Integer) getAttributeInternal(STOCKMNTHCYC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockMnthCyc.
     * @param value value to set the  StockMnthCyc
     */
    public void setStockMnthCyc(Integer value) {
        setAttributeInternal(STOCKMNTHCYC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockTkeCycle.
     * @return the StockTkeCycle
     */
    public Integer getStockTkeCycle() {
        return (Integer) getAttributeInternal(STOCKTKECYCLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockTkeCycle.
     * @param value value to set the  StockTkeCycle
     */
    public void setStockTkeCycle(Integer value) {
        setAttributeInternal(STOCKTKECYCLE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockTkNo.
     * @return the StockTkNo
     */
    public String getStockTkNo() {
        return (String) getAttributeInternal(STOCKTKNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockTkNo.
     * @param value value to set the  StockTkNo
     */
    public void setStockTkNo(String value) {
        setAttributeInternal(STOCKTKNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StockTakeDocId.
     * @return the StockTakeDocId
     */
    public String getStockTakeDocId() {
        return (String) getAttributeInternal(STOCKTAKEDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StockTakeDocId.
     * @param value value to set the  StockTakeDocId
     */
    public void setStockTakeDocId(String value) {
        setAttributeInternal(STOCKTAKEDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AuthStat.
     * @return the AuthStat
     */
    public String getAuthStat() {
        return (String) getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AuthStat.
     * @param value value to set the  AuthStat
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StkTkStat.
     * @return the StkTkStat
     */
    public Integer getStkTkStat() {
        return (Integer) getAttributeInternal(STKTKSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StkTkStat.
     * @param value value to set the  StkTkStat
     */
    public void setStkTkStat(Integer value) {
        setAttributeInternal(STKTKSTAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        return ((Integer) getAttributeInternal(FYID) == null)?fyId:(Integer) getAttributeInternal(FYID);
        //return (Integer) getAttributeInternal(FYID);
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt,
                                          Object[] bindVars) {
        CallableStatement st = null;
        try {
          // 1. Create a JDBC CallabledStatement
          st =
              getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;",
                                                         0);
          // 2. Register the first bind variable for the return value
          st.registerOutParameter(1, sqlReturnType);
          if (bindVars != null) {
            // 3. Loop over values for the bind variables passed in, if any
            for (int z = 0; z < bindVars.length; z++) {
              // 4. Set the value of user-supplied bind vars in the stmt
              st.setObject(z + 2, bindVars[z]);
            }
          }
          // 5. Set the value of user-supplied bind vars in the stmt
          st.executeUpdate();
          // 6. Return the value of the first bind variable
          return st.getObject(1);
        } catch (SQLException e) {
          throw new JboException(e);
        } finally {
          if (st != null) {
            try {
              // 7. Close the statement
              st.close();
            } catch (SQLException e) {
            }
          }
        }
      }
    
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyId.
     * @param value value to set the  FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStockTKPRf1.
     */
    public RowSet getLOVStockTKPRf1() {
        return (RowSet)getAttributeInternal(LOVSTOCKTKPRF1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVYNVO1.
     */
    public RowSet getLOVYNVO1() {
        return (RowSet)getAttributeInternal(LOVYNVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVMnthSelCr1.
     */
    public RowSet getLOVMnthSelCr1() {
        return (RowSet)getAttributeInternal(LOVMNTHSELCR1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStkTkCycle1.
     */
    public RowSet getLOVStkTkCycle1() {
        return (RowSet)getAttributeInternal(LOVSTKTKCYCLE1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFinancialYearVO1.
     */
    public RowSet getLOVFinancialYearVO1() {
        return (RowSet)getAttributeInternal(LOVFINANCIALYEARVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDocIdForStockTakeVO1.
     */
    public RowSet getLOVDocIdForStockTakeVO1() {
        return (RowSet)getAttributeInternal(LOVDOCIDFORSTOCKTAKEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStockTakeStatusVO1.
     */
    public RowSet getLOVStockTakeStatusVO1() {
        return (RowSet)getAttributeInternal(LOVSTOCKTAKESTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAuthStatForStockTakeVO1.
     */
    public RowSet getLOVAuthStatForStockTakeVO1() {
        return (RowSet)getAttributeInternal(LOVAUTHSTATFORSTOCKTAKEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWarehouseForStockTakeVO1.
     */
    public RowSet getLOVWarehouseForStockTakeVO1() {
        return (RowSet)getAttributeInternal(LOVWAREHOUSEFORSTOCKTAKEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
