package inventoryreportapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 26 11:09:51 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchMaterialOutwardVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CldId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        ItemId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getItemId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setItemId((String)value);
            }
        }
        ,
        ItemNm {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getItemNm();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setItemNm((String)value);
            }
        }
        ,
        IssueFrmDate {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueFrmDate();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueFrmDate((Date)value);
            }
        }
        ,
        IssueToDate {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueToDate();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueToDate((Date)value);
            }
        }
        ,
        FyId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        IssueNo {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueNo();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueNo((String)value);
            }
        }
        ,
        IssueNoDocId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueNoDocId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueNoDocId((String)value);
            }
        }
        ,
        IssueType {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueType();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueType((Integer)value);
            }
        }
        ,
        IssueSrcId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueSrcId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueSrcId((String)value);
            }
        }
        ,
        IssueSrcNm {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getIssueSrcNm();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setIssueSrcNm((String)value);
            }
        }
        ,
        DocTypSrc {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getDocTypSrc();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setDocTypSrc((Integer)value);
            }
        }
        ,
        DocNo {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getDocNo();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setDocNo((String)value);
            }
        }
        ,
        DocNoId {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getDocNoId();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setDocNoId((String)value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVWarehouseVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVWarehouseVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVIssueSrcTypVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVIssueSrcTypVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVDocTypForIssueVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVDocTypForIssueVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVFinancialYearVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVFinancialYearVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVIssueNoWiseItemVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVIssueNoWiseItemVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVIssueNoVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVIssueNoVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVIssueSrcNameVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVIssueSrcNameVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVDocumentNoIssueVO1 {
            public Object get(SearchMaterialOutwardVORowImpl obj) {
                return obj.getLOVDocumentNoIssueVO1();
            }

            public void put(SearchMaterialOutwardVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchMaterialOutwardVORowImpl object);

        public abstract void put(SearchMaterialOutwardVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int ITEMNM = AttributesEnum.ItemNm.index();
    public static final int ISSUEFRMDATE = AttributesEnum.IssueFrmDate.index();
    public static final int ISSUETODATE = AttributesEnum.IssueToDate.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int ISSUENO = AttributesEnum.IssueNo.index();
    public static final int ISSUENODOCID = AttributesEnum.IssueNoDocId.index();
    public static final int ISSUETYPE = AttributesEnum.IssueType.index();
    public static final int ISSUESRCID = AttributesEnum.IssueSrcId.index();
    public static final int ISSUESRCNM = AttributesEnum.IssueSrcNm.index();
    public static final int DOCTYPSRC = AttributesEnum.DocTypSrc.index();
    public static final int DOCNO = AttributesEnum.DocNo.index();
    public static final int DOCNOID = AttributesEnum.DocNoId.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();
    public static final int LOVWAREHOUSEVO1 = AttributesEnum.LOVWarehouseVO1.index();
    public static final int LOVISSUESRCTYPVO1 = AttributesEnum.LOVIssueSrcTypVO1.index();
    public static final int LOVDOCTYPFORISSUEVO1 = AttributesEnum.LOVDocTypForIssueVO1.index();
    public static final int LOVFINANCIALYEARVO1 = AttributesEnum.LOVFinancialYearVO1.index();
    public static final int LOVISSUENOWISEITEMVO1 = AttributesEnum.LOVIssueNoWiseItemVO1.index();
    public static final int LOVISSUENOVO1 = AttributesEnum.LOVIssueNoVO1.index();
    public static final int LOVISSUESRCNAMEVO1 = AttributesEnum.LOVIssueSrcNameVO1.index();
    public static final int LOVDOCUMENTNOISSUEVO1 = AttributesEnum.LOVDocumentNoIssueVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchMaterialOutwardVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }
    
    public Object resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    Object Message=valueExp.getValue(elContext);
    return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
            cldid=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            return cldid;
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer sloc;
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
         sloc =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            return sloc;
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null){
         orgid =resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            return orgid;
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemId.
     * @return the ItemId
     */
    public String getItemId() {
        return (String) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemId.
     * @param value value to set the  ItemId
     */
    public void setItemId(String value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNm.
     * @return the ItemNm
     */
    public String getItemNm() {
        return (String) getAttributeInternal(ITEMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNm.
     * @param value value to set the  ItemNm
     */
    public void setItemNm(String value) {
        setAttributeInternal(ITEMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueFrmDate.
     * @return the IssueFrmDate
     */
    public Date getIssueFrmDate() {
        return (Date) getAttributeInternal(ISSUEFRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueFrmDate.
     * @param value value to set the  IssueFrmDate
     */
    public void setIssueFrmDate(Date value) {
        setAttributeInternal(ISSUEFRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueToDate.
     * @return the IssueToDate
     */
    public Date getIssueToDate() {
        return (Date) getAttributeInternal(ISSUETODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueToDate.
     * @param value value to set the  IssueToDate
     */
    public void setIssueToDate(Date value) {
        setAttributeInternal(ISSUETODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
     protected Object callStoredFunction(int sqlReturnType, String stmt,
                                           Object[] bindVars) {
         CallableStatement st = null;
         try {
           // 1. Create a JDBC CallabledStatement
           st =
               getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;",
                                                          0);
           // 2. Register the first bind variable for the return value
           st.registerOutParameter(1, sqlReturnType);
           if (bindVars != null) {
             // 3. Loop over values for the bind variables passed in, if any
             for (int z = 0; z < bindVars.length; z++) {
               // 4. Set the value of user-supplied bind vars in the stmt
               st.setObject(z + 2, bindVars[z]);
             }
           }
           // 5. Set the value of user-supplied bind vars in the stmt
           st.executeUpdate();
           // 6. Return the value of the first bind variable
           return st.getObject(1);
         } catch (SQLException e) {
           throw new JboException(e);
         } finally {
           if (st != null) {
             try {
               // 7. Close the statement
               st.close();
             } catch (SQLException e) {
             }
           }
         }
       }
    
    public Integer getFyId() {
        String CldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String OrgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        Integer fyId =(Integer)(callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {CldId,OrgId,new Timestamp(System.currentTimeMillis())}));
        return ((Integer) getAttributeInternal(FYID) == null)?fyId:(Integer) getAttributeInternal(FYID);
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyId.
     * @param value value to set the  FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueNo.
     * @return the IssueNo
     */
    public String getIssueNo() {
        return (String) getAttributeInternal(ISSUENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueNo.
     * @param value value to set the  IssueNo
     */
    public void setIssueNo(String value) {
        setAttributeInternal(ISSUENO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueNoDocId.
     * @return the IssueNoDocId
     */
    public String getIssueNoDocId() {
        return (String) getAttributeInternal(ISSUENODOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueNoDocId.
     * @param value value to set the  IssueNoDocId
     */
    public void setIssueNoDocId(String value) {
        setAttributeInternal(ISSUENODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueType.
     * @return the IssueType
     */
    public Integer getIssueType() {
        return (Integer) getAttributeInternal(ISSUETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueType.
     * @param value value to set the  IssueType
     */
    public void setIssueType(Integer value) {
        setAttributeInternal(ISSUETYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueSrcId.
     * @return the IssueSrcId
     */
    public String getIssueSrcId() {
        return (String) getAttributeInternal(ISSUESRCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueSrcId.
     * @param value value to set the  IssueSrcId
     */
    public void setIssueSrcId(String value) {
        setAttributeInternal(ISSUESRCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute IssueSrcNm.
     * @return the IssueSrcNm
     */
    public String getIssueSrcNm() {
        return (String) getAttributeInternal(ISSUESRCNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute IssueSrcNm.
     * @param value value to set the  IssueSrcNm
     */
    public void setIssueSrcNm(String value) {
        setAttributeInternal(ISSUESRCNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypSrc.
     * @return the DocTypSrc
     */
    public Integer getDocTypSrc() {
        return (Integer) getAttributeInternal(DOCTYPSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocTypSrc.
     * @param value value to set the  DocTypSrc
     */
    public void setDocTypSrc(Integer value) {
        setAttributeInternal(DOCTYPSRC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocNo.
     * @return the DocNo
     */
    public String getDocNo() {
        return (String) getAttributeInternal(DOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocNo.
     * @param value value to set the  DocNo
     */
    public void setDocNo(String value) {
        setAttributeInternal(DOCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocNoId.
     * @return the DocNoId
     */
    public String getDocNoId() {
        return (String) getAttributeInternal(DOCNOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocNoId.
     * @param value value to set the  DocNoId
     */
    public void setDocNoId(String value) {
        setAttributeInternal(DOCNOID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWarehouseVO1.
     */
    public RowSet getLOVWarehouseVO1() {
        return (RowSet)getAttributeInternal(LOVWAREHOUSEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIssueSrcTypVO1.
     */
    public RowSet getLOVIssueSrcTypVO1() {
        return (RowSet)getAttributeInternal(LOVISSUESRCTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDocTypForIssueVO1.
     */
    public RowSet getLOVDocTypForIssueVO1() {
        return (RowSet)getAttributeInternal(LOVDOCTYPFORISSUEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFinancialYearVO1.
     */
    public RowSet getLOVFinancialYearVO1() {
        return (RowSet)getAttributeInternal(LOVFINANCIALYEARVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIssueNoWiseItemVO1.
     */
    public RowSet getLOVIssueNoWiseItemVO1() {
        return (RowSet)getAttributeInternal(LOVISSUENOWISEITEMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIssueNoVO1.
     */
    public RowSet getLOVIssueNoVO1() {
        return (RowSet)getAttributeInternal(LOVISSUENOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIssueSrcNameVO1.
     */
    public RowSet getLOVIssueSrcNameVO1() {
        return (RowSet)getAttributeInternal(LOVISSUESRCNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDocumentNoIssueVO1.
     */
    public RowSet getLOVDocumentNoIssueVO1() {
        return (RowSet)getAttributeInternal(LOVDOCUMENTNOISSUEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
