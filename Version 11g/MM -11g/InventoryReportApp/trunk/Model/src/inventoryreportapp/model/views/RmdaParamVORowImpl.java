package inventoryreportapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 08 10:30:19 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RmdaParamVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CldId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        RmdaFrmDate {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaFrmDate();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaFrmDate((Date)value);
            }
        }
        ,
        RmdaToDate {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaToDate();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaToDate((Date)value);
            }
        }
        ,
        RmdaNo {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaNo();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaNo((String)value);
            }
        }
        ,
        RmdaDocId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaDocId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaDocId((String)value);
            }
        }
        ,
        WhId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        SupplierNm {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getSupplierNm();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setSupplierNm((String)value);
            }
        }
        ,
        SupplierId {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getSupplierId();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setSupplierId((Integer)value);
            }
        }
        ,
        RmdaTyp {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaTyp();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaTyp((Integer)value);
            }
        }
        ,
        RmdaStatus {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getRmdaStatus();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setRmdaStatus((String)value);
            }
        }
        ,
        LOVRmdaNoVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVRmdaNoVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVSupplierForRmdaVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVSupplierForRmdaVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVWarehouseForRmdaVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVWarehouseForRmdaVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVRmdaStatusVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVRmdaStatusVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVRmdaTypVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVRmdaTypVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(RmdaParamVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(RmdaParamVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(RmdaParamVORowImpl object);

        public abstract void put(RmdaParamVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RMDAFRMDATE = AttributesEnum.RmdaFrmDate.index();
    public static final int RMDATODATE = AttributesEnum.RmdaToDate.index();
    public static final int RMDANO = AttributesEnum.RmdaNo.index();
    public static final int RMDADOCID = AttributesEnum.RmdaDocId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int SUPPLIERNM = AttributesEnum.SupplierNm.index();
    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int RMDATYP = AttributesEnum.RmdaTyp.index();
    public static final int RMDASTATUS = AttributesEnum.RmdaStatus.index();
    public static final int LOVRMDANOVO1 = AttributesEnum.LOVRmdaNoVO1.index();
    public static final int LOVSUPPLIERFORRMDAVO1 = AttributesEnum.LOVSupplierForRmdaVO1.index();
    public static final int LOVWAREHOUSEFORRMDAVO1 = AttributesEnum.LOVWarehouseForRmdaVO1.index();
    public static final int LOVRMDASTATUSVO1 = AttributesEnum.LOVRmdaStatusVO1.index();
    public static final int LOVRMDATYPVO1 = AttributesEnum.LOVRmdaTypVO1.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public RmdaParamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!=null){
            cldid=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            return cldid;
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer sloc;
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null){
         sloc =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
            return sloc;
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }
    public Object resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    Object Message=valueExp.getValue(elContext);
    return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgid;
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null){
         orgid =resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            return orgid;
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaFrmDate.
     * @return the RmdaFrmDate
     */
    public Date getRmdaFrmDate() {
        return (Date) getAttributeInternal(RMDAFRMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaFrmDate.
     * @param value value to set the  RmdaFrmDate
     */
    public void setRmdaFrmDate(Date value) {
        setAttributeInternal(RMDAFRMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaToDate.
     * @return the RmdaToDate
     */
    public Date getRmdaToDate() {
        return (Date) getAttributeInternal(RMDATODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaToDate.
     * @param value value to set the  RmdaToDate
     */
    public void setRmdaToDate(Date value) {
        setAttributeInternal(RMDATODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaNo.
     * @return the RmdaNo
     */
    public String getRmdaNo() {
        return (String) getAttributeInternal(RMDANO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaNo.
     * @param value value to set the  RmdaNo
     */
    public void setRmdaNo(String value) {
        setAttributeInternal(RMDANO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaDocId.
     * @return the RmdaDocId
     */
    public String getRmdaDocId() {
        return (String) getAttributeInternal(RMDADOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaDocId.
     * @param value value to set the  RmdaDocId
     */
    public void setRmdaDocId(String value) {
        setAttributeInternal(RMDADOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierNm.
     * @return the SupplierNm
     */
    public String getSupplierNm() {
        return (String) getAttributeInternal(SUPPLIERNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierNm.
     * @param value value to set the  SupplierNm
     */
    public void setSupplierNm(String value) {
        setAttributeInternal(SUPPLIERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupplierId.
     * @return the SupplierId
     */
    public Integer getSupplierId() {
        return (Integer) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupplierId.
     * @param value value to set the  SupplierId
     */
    public void setSupplierId(Integer value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaTyp.
     * @return the RmdaTyp
     */
    public Integer getRmdaTyp() {
        return (Integer) getAttributeInternal(RMDATYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaTyp.
     * @param value value to set the  RmdaTyp
     */
    public void setRmdaTyp(Integer value) {
        setAttributeInternal(RMDATYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RmdaStatus.
     * @return the RmdaStatus
     */
    public String getRmdaStatus() {
        return (String) getAttributeInternal(RMDASTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RmdaStatus.
     * @param value value to set the  RmdaStatus
     */
    public void setRmdaStatus(String value) {
        setAttributeInternal(RMDASTATUS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRmdaNoVO1.
     */
    public RowSet getLOVRmdaNoVO1() {
        return (RowSet)getAttributeInternal(LOVRMDANOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSupplierForRmdaVO1.
     */
    public RowSet getLOVSupplierForRmdaVO1() {
        return (RowSet)getAttributeInternal(LOVSUPPLIERFORRMDAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWarehouseForRmdaVO1.
     */
    public RowSet getLOVWarehouseForRmdaVO1() {
        return (RowSet)getAttributeInternal(LOVWAREHOUSEFORRMDAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRmdaStatusVO1.
     */
    public RowSet getLOVRmdaStatusVO1() {
        return (RowSet)getAttributeInternal(LOVRMDASTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRmdaTypVO1.
     */
    public RowSet getLOVRmdaTypVO1() {
        return (RowSet)getAttributeInternal(LOVRMDATYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
