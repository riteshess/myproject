package mmissuematerial.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmissuematerial.model.service.MaterialIsseAMImpl;

import mmissuematerial.model.service.common.MaterialIsseAM;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 04 17:31:21 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlIssuItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_MMMTLISSUITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        IssuDocType {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getIssuDocType();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setIssuDocType((Integer)value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setDocIdSrc((String)value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        PendQty {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setPendQty((Number)value);
            }
        }
        ,
        IssuQty {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getIssuQty();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setIssuQty((Number)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        IssuQtyBs {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getIssuQtyBs();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setIssuQtyBs((Number)value);
            }
        }
        ,
        FocFlg {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getFocFlg();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setFocFlg((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        TransBalanceQty {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransBalanceQty();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransBalanceQty((Number)value);
            }
        }
        ,
        TransItmSerializedFlg {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransItmSerializedFlg();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransItmSerializedFlg((String)value);
            }
        }
        ,
        TransItmPickOrder {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransItmPickOrder();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransItmPickOrder((Integer)value);
            }
        }
        ,
        TransAvlQtyForItm {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransAvlQtyForItm();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransAvlQtyForItm((Number)value);
            }
        }
        ,
        TransUomDesc {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransUomDesc();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransUomDesc((String)value);
            }
        }
        ,
        TransUomDescBs {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransUomDescBs();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransUomDescBs((String)value);
            }
        }
        ,
        TransItmNm {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransItmNm();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransItmNm((String)value);
            }
        }
        ,
        TransHoOrgId {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getTransHoOrgId();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setTransHoOrgId((String)value);
            }
        }
        ,
        MmMtlIssuLot {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getMmMtlIssuLot();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlIssuBin {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getMmMtlIssuBin();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmMtlIssuSr {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getMmMtlIssuSr();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummSr {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getViewMmStkSummSr();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummBin {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getViewMmStkSummBin();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummLot {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getViewMmStkSummLot();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmIdVO {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getLovItmIdVO();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUomIdVO {
            public Object get(MmMtlIssuItmVORowImpl obj) {
                return obj.getLovUomIdVO();
            }

            public void put(MmMtlIssuItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlIssuItmVORowImpl object);

        public abstract void put(MmMtlIssuItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ISSUDOCTYPE = AttributesEnum.IssuDocType.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int ISSUQTY = AttributesEnum.IssuQty.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ISSUQTYBS = AttributesEnum.IssuQtyBs.index();
    public static final int FOCFLG = AttributesEnum.FocFlg.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int TRANSBALANCEQTY = AttributesEnum.TransBalanceQty.index();
    public static final int TRANSITMSERIALIZEDFLG = AttributesEnum.TransItmSerializedFlg.index();
    public static final int TRANSITMPICKORDER = AttributesEnum.TransItmPickOrder.index();
    public static final int TRANSAVLQTYFORITM = AttributesEnum.TransAvlQtyForItm.index();
    public static final int TRANSUOMDESC = AttributesEnum.TransUomDesc.index();
    public static final int TRANSUOMDESCBS = AttributesEnum.TransUomDescBs.index();
    public static final int TRANSITMNM = AttributesEnum.TransItmNm.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int MMMTLISSULOT = AttributesEnum.MmMtlIssuLot.index();
    public static final int MMMTLISSUBIN = AttributesEnum.MmMtlIssuBin.index();
    public static final int MMMTLISSUSR = AttributesEnum.MmMtlIssuSr.index();
    public static final int VIEWMMSTKSUMMSR = AttributesEnum.ViewMmStkSummSr.index();
    public static final int VIEWMMSTKSUMMBIN = AttributesEnum.ViewMmStkSummBin.index();
    public static final int VIEWMMSTKSUMMLOT = AttributesEnum.ViewMmStkSummLot.index();
    public static final int LOVITMIDVO = AttributesEnum.LovItmIdVO.index();
    public static final int LOVUOMIDVO = AttributesEnum.LovUomIdVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlIssuItmVORowImpl() {
    }

    /**
     * Gets MmMtlIssuItmEO entity object.
     * @return the MmMtlIssuItmEO
     */
    public EntityImpl getMmMtlIssuItmEO() {
        return (EntityImpl)getEntity(ENTITY_MMMTLISSUITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ISSU_DOC_TYPE using the alias name IssuDocType.
     * @return the ISSU_DOC_TYPE
     */
    public Integer getIssuDocType() {
        return (Integer) getAttributeInternal(ISSUDOCTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_DOC_TYPE using the alias name IssuDocType.
     * @param value value to set the ISSU_DOC_TYPE
     */
    public void setIssuDocType(Integer value) {
        setAttributeInternal(ISSUDOCTYPE, value);
    }

    /**
     * Gets the attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @return the DOC_ID_SRC
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID_SRC using the alias name DocIdSrc.
     * @param value value to set the DOC_ID_SRC
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @return the DOC_DT_SRC
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp) getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DT_SRC using the alias name DocDtSrc.
     * @param value value to set the DOC_DT_SRC
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PEND_QTY using the alias name PendQty.
     * @return the PEND_QTY
     */
    public Number getPendQty() {
        return (Number) getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PEND_QTY using the alias name PendQty.
     * @param value value to set the PEND_QTY
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for ISSU_QTY using the alias name IssuQty.
     * @return the ISSU_QTY
     */
    public Number getIssuQty() {
        return (Number) getAttributeInternal(ISSUQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_QTY using the alias name IssuQty.
     * @param value value to set the ISSU_QTY
     */
    public void setIssuQty(Number value) {
        if(value == null){
            value = new Number(0);
        }
        if(value != null && getPendQty()!= null && getUomConvFctr() != null){
            setTransBalanceQty((Number)(getPendQty().minus(value)));
            setIssuQtyBs(value.multiply(getUomConvFctr()));
        }
        setAttributeInternal(ISSUQTY, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ISSU_QTY_BS using the alias name IssuQtyBs.
     * @return the ISSU_QTY_BS
     */
    public Number getIssuQtyBs() {
        return (Number) getAttributeInternal(ISSUQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ISSU_QTY_BS using the alias name IssuQtyBs.
     * @param value value to set the ISSU_QTY_BS
     */
    public void setIssuQtyBs(Number value) {
        setAttributeInternal(ISSUQTYBS, value);
    }

    /**
     * Gets the attribute value for FOC_FLG using the alias name FocFlg.
     * @return the FOC_FLG
     */
    public String getFocFlg() {
        return (String) getAttributeInternal(FOCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for FOC_FLG using the alias name FocFlg.
     * @param value value to set the FOC_FLG
     */
    public void setFocFlg(String value) {
        setAttributeInternal(FOCFLG, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransBalanceQty.
     * @return the TransBalanceQty
     */
    public Number getTransBalanceQty() {
        if(getPendQty()!=null && getIssuQty()!= null){
            return (Number)getPendQty().minus(getIssuQty());
        }else{
        return (Number) getAttributeInternal(TRANSBALANCEQTY);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBalanceQty.
     * @param value value to set the  TransBalanceQty
     */
    public void setTransBalanceQty(Number value) {
        setAttributeInternal(TRANSBALANCEQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerializedFlg.
     * @return the TransItmSerializedFlg
     */
    public String getTransItmSerializedFlg() {
        String itmId = null;
        String flg = null;
        MaterialIsseAMImpl am = (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
        if(getItmId()!=null){
            try{
                itmId= getItmId();
                
            }catch(NullPointerException npe){
                }
        }
        if(itmId!=null){
            ViewObjectImpl tunevo=am.getLovItmIdTune();
            tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
            tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            tunevo.setNamedWhereClauseParam("bindItmId", itmId);
            tunevo.executeQuery();
            Row[] xx = tunevo.getFilteredRows("ItmId", itmId);
            if(xx.length>0){
            if(xx[0].getAttribute("SerializedFlg")!=null){
                flg= xx[0].getAttribute("SerializedFlg").toString();
            }else{
                flg ="N";
            }
               }
            return flg;
        }else{
        return (String) getAttributeInternal(TRANSITMSERIALIZEDFLG);
        }
    }

    public Object resolvElDC(String data) {
      FacesContext fc = FacesContext.getCurrentInstance();
      Application app = fc.getApplication();
      ExpressionFactory elFactory = app.getExpressionFactory();
      ELContext elContext = fc.getELContext();
      ValueExpression valueExp =
     elFactory.createValueExpression
    (elContext, "#{data." + data + ".dataProvider}", Object.class);
            return valueExp.getValue(elContext);
        }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerializedFlg.
     * @param value value to set the  TransItmSerializedFlg
     */
    public void setTransItmSerializedFlg(String value) {
        setAttributeInternal(TRANSITMSERIALIZEDFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmPickOrder.
     * @return the TransItmPickOrder
     */
    public Integer getTransItmPickOrder() {
        String itmId = null;
        Integer pickOrd = 0;
        MaterialIsseAMImpl am = (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
        if(getItmId()!=null){
            try{
                itmId= getItmId();
                
            }catch(NullPointerException npe){
                }
        }
        if(itmId!=null){
            ViewObjectImpl tunevo=am.getLovItmIdTune();
            tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
            tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            tunevo.setNamedWhereClauseParam("bindItmId", itmId);
            tunevo.executeQuery();
            
            Row[] xx = tunevo.getFilteredRows("ItmId", itmId);
            if(xx.length>0){
            if(xx[0].getAttribute("PickOrder")!=null){
                pickOrd= Integer.parseInt(xx[0].getAttribute("PickOrder").toString());
            }else{
                pickOrd = 307;
            }
               }
            return pickOrd;
        }else{
        return (Integer) getAttributeInternal(TRANSITMPICKORDER);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmPickOrder.
     * @param value value to set the  TransItmPickOrder
     */
    public void setTransItmPickOrder(Integer value) {
        setAttributeInternal(TRANSITMPICKORDER, value);
    }
    public MaterialIsseAMImpl getAm() {
        return (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getAm().getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    
    /**
     * Gets the attribute value for the calculated attribute TransAvlQtyForItm.
     * @return the TransAvlQtyForItm
     */
    public Number getTransAvlQtyForItm() {
        Integer P_SLOCID = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String P_ORGID = (String)resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"); 
        String CldID = (String)resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String p_Issu_item_id = null;
        String p_wh_id =null;
        String p_docsrcId = null;
        BigDecimal valideQty= null;
        if(getItmId()!=null){
            p_Issu_item_id = getItmId();
        }
        if(getWhId()!=null){
            p_wh_id = getWhId();
        }
        if(getDocIdSrc()!=null){
            p_docsrcId = getDocIdSrc();
        }
        MaterialIsseAMImpl am = (MaterialIsseAMImpl)this.getApplicationModule();
        Integer fyId = 0;
        Row issuRow = am.getMmMtlIssu().getCurrentRow();
        if(issuRow.getAttribute("FyId")!=null){
            fyId = Integer.parseInt(issuRow.getAttribute("FyId").toString());
        }
        if(p_Issu_item_id != null && getWhId()!=null && p_docsrcId !=null && fyId!=null){
            System.out.println("CldId--"+CldID+"P_SLOCID----"+P_SLOCID+"P_ORGID----"+P_ORGID+"p_Issu_item_id-----"+p_Issu_item_id+"p_wh_id------"+p_wh_id+"p_docsrcId---"+p_docsrcId+"FYid   "+fyId);
         // return available Qty in Stock in base unit.
          valideQty=(BigDecimal)callStoredFunction(Types.NUMERIC, "MM.MM_GET_AVAIL_STK(?,?,?,?,?,?,?)", new Object[]{CldID ,P_SLOCID, P_ORGID,p_Issu_item_id,p_wh_id,fyId,p_docsrcId});
        }
        Number retval=null;
        Number transAvl = null;
        //return (Number) getAttributeInternal(VALIDQUOTQTY_TRANS);
        
        try {
            if(valideQty != null)
            retval= new Number(valideQty);
            if(getUomConvFctr()!=null){
            // convert base UOM Qty to transaction Uom Qty  
            System.out.println("vvvvvvvv-----"+getUomConvFctr());
                transAvl = retval.divide(getUomConvFctr());
            }else{
                transAvl = retval;
            }
            
        } catch (SQLException e) {
            
        }
        return transAvl;
        
      //  return (Number) getAttributeInternal(TRANSAVLQTYFORITM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAvlQtyForItm.
     * @param value value to set the  TransAvlQtyForItm
     */
    public void setTransAvlQtyForItm(Number value) {
        setAttributeInternal(TRANSAVLQTYFORITM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomDesc.
     * @return the TransUomDesc
     */
    public String getTransUomDesc() {
        String uomId = null;
        String flg = null;
        MaterialIsseAMImpl am = (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
        if(getItmId()!=null){
            try{
                uomId= getItmUom();
                
            }catch(NullPointerException npe){
                }
        }
        if(uomId!=null){
            Row[] xx = am.getLovUomId().getFilteredRows("UomId", uomId);
            if(xx.length>0){
                flg= xx[0].getAttribute("UomDesc").toString();
               }
            return flg;
        }else{
        return (String) getAttributeInternal(TRANSUOMDESC);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomDesc.
     * @param value value to set the  TransUomDesc
     */
    public void setTransUomDesc(String value) {
        setAttributeInternal(TRANSUOMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomDescBs.
     * @return the TransUomDescBs
     */
    public String getTransUomDescBs() {
        String uomId = null;
        String flg = null;
        MaterialIsseAMImpl am = (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
        if(getItmId()!=null){
            try{
                uomId= getItmUomBs();
                
            }catch(NullPointerException npe){
                }
        }
        if(uomId!=null){
            Row[] xx = am.getLovUomId().getFilteredRows("UomId", uomId);
            if(xx.length>0){
                flg= xx[0].getAttribute("UomDesc").toString();
               }
            return flg;
        }else{
        return (String) getAttributeInternal(TRANSUOMDESCBS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomDescBs.
     * @param value value to set the  TransUomDescBs
     */
    public void setTransUomDescBs(String value) {
        setAttributeInternal(TRANSUOMDESCBS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmNm.
     * @return the TransItmNm
     */
    public String getTransItmNm() {
        
        if(getItmId()!=null){
            String flag=null;
            
            MaterialIsseAMImpl am=(MaterialIsseAMImpl)this.getApplicationModule(); 
           // MaterialIsseAMImpl am = (MaterialIsseAMImpl)resolvElDC("MaterialIsseAMDataControl");
            ViewObjectImpl tunevo=am.getLovItmIdTune();
            tunevo.setNamedWhereClauseParam("bindCldId", getCldId());
            tunevo.setNamedWhereClauseParam("bindSlocId", getSlocId());
            tunevo.setNamedWhereClauseParam("bindHoOrgId", getTransHoOrgId());
            tunevo.setNamedWhereClauseParam("bindItmId", getItmId());
            tunevo.executeQuery();
            
            Row [] rr1=tunevo.getFilteredRows("ItmId",getItmId());
            if(rr1.length>0){
                flag=rr1[0].getAttribute("ItmDesc").toString();
                return flag;
            }
            return flag;
            
        }
        return (String) getAttributeInternal(TRANSITMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmNm.
     * @param value value to set the  TransItmNm
     */
    public void setTransItmNm(String value) {
        setAttributeInternal(TRANSITMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlIssuLot.
     */
    public RowIterator getMmMtlIssuLot() {
        return (RowIterator)getAttributeInternal(MMMTLISSULOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlIssuBin.
     */
    public RowIterator getMmMtlIssuBin() {
        return (RowIterator)getAttributeInternal(MMMTLISSUBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MmMtlIssuSr.
     */
    public RowIterator getMmMtlIssuSr() {
        return (RowIterator)getAttributeInternal(MMMTLISSUSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummSr.
     */
    public RowIterator getViewMmStkSummSr() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummBin.
     */
    public RowIterator getViewMmStkSummBin() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummLot.
     */
    public RowIterator getViewMmStkSummLot() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMLOT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdVO.
     */
    public RowSet getLovItmIdVO() {
        return (RowSet)getAttributeInternal(LOVITMIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO.
     */
    public RowSet getLovUomIdVO() {
        return (RowSet)getAttributeInternal(LOVUOMIDVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
