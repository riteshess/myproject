package mmrmda.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 28 15:21:55 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class srchTranVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(srchTranVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        RMDANo {
            public Object get(srchTranVORowImpl obj) {
                return obj.getRMDANo();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setRMDANo((String)value);
            }
        }
        ,
        fromDate {
            public Object get(srchTranVORowImpl obj) {
                return obj.getfromDate();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setfromDate((Timestamp)value);
            }
        }
        ,
        toDate {
            public Object get(srchTranVORowImpl obj) {
                return obj.gettoDate();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.settoDate((Timestamp)value);
            }
        }
        ,
        supplierNM {
            public Object get(srchTranVORowImpl obj) {
                return obj.getsupplierNM();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setsupplierNM((String)value);
            }
        }
        ,
        supplierId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getsupplierId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setsupplierId((Integer)value);
            }
        }
        ,
        ReceiptNo {
            public Object get(srchTranVORowImpl obj) {
                return obj.getReceiptNo();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setReceiptNo((String)value);
            }
        }
        ,
        ReceiptDT {
            public Object get(srchTranVORowImpl obj) {
                return obj.getReceiptDT();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setReceiptDT((Timestamp)value);
            }
        }
        ,
        cldId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getcldId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setcldId((String)value);
            }
        }
        ,
        orgId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getorgId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setorgId((String)value);
            }
        }
        ,
        slocId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getslocId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setslocId((Integer)value);
            }
        }
        ,
        DocRcptId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getDocRcptId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setDocRcptId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(srchTranVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        MmMtlRcptVO1 {
            public Object get(srchTranVORowImpl obj) {
                return obj.getMmMtlRcptVO1();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SupplierVO1 {
            public Object get(srchTranVORowImpl obj) {
                return obj.getSupplierVO1();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmRmdaVO1 {
            public Object get(srchTranVORowImpl obj) {
                return obj.getMmRmdaVO1();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SrchRcptVO1 {
            public Object get(srchTranVORowImpl obj) {
                return obj.getSrchRcptVO1();
            }

            public void put(srchTranVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(srchTranVORowImpl object);

        public abstract void put(srchTranVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int RMDANO = AttributesEnum.RMDANo.index();
    public static final int FROMDATE = AttributesEnum.fromDate.index();
    public static final int TODATE = AttributesEnum.toDate.index();
    public static final int SUPPLIERNM = AttributesEnum.supplierNM.index();
    public static final int SUPPLIERID = AttributesEnum.supplierId.index();
    public static final int RECEIPTNO = AttributesEnum.ReceiptNo.index();
    public static final int RECEIPTDT = AttributesEnum.ReceiptDT.index();
    public static final int CLDID = AttributesEnum.cldId.index();
    public static final int ORGID = AttributesEnum.orgId.index();
    public static final int SLOCID = AttributesEnum.slocId.index();
    public static final int DOCRCPTID = AttributesEnum.DocRcptId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int MMMTLRCPTVO1 = AttributesEnum.MmMtlRcptVO1.index();
    public static final int SUPPLIERVO1 = AttributesEnum.SupplierVO1.index();
    public static final int MMRMDAVO1 = AttributesEnum.MmRmdaVO1.index();
    public static final int SRCHRCPTVO1 = AttributesEnum.SrchRcptVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public srchTranVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RMDANo.
     * @return the RMDANo
     */
    public String getRMDANo() {
        return (String) getAttributeInternal(RMDANO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RMDANo.
     * @param value value to set the  RMDANo
     */
    public void setRMDANo(String value) {
        setAttributeInternal(RMDANO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute fromDate.
     * @return the fromDate
     */
    public Timestamp getfromDate() {
        return (Timestamp) getAttributeInternal(FROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fromDate.
     * @param value value to set the  fromDate
     */
    public void setfromDate(Timestamp value) {
        setAttributeInternal(FROMDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute toDate.
     * @return the toDate
     */
    public Timestamp gettoDate() {
        return (Timestamp) getAttributeInternal(TODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute toDate.
     * @param value value to set the  toDate
     */
    public void settoDate(Timestamp value) {
        setAttributeInternal(TODATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute supplierNM.
     * @return the supplierNM
     */
    public String getsupplierNM() {
        return (String) getAttributeInternal(SUPPLIERNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute supplierNM.
     * @param value value to set the  supplierNM
     */
    public void setsupplierNM(String value) {
        setAttributeInternal(SUPPLIERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute supplierId.
     * @return the supplierId
     */
    public Integer getsupplierId() {
        return (Integer) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute supplierId.
     * @param value value to set the  supplierId
     */
    public void setsupplierId(Integer value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReceiptNo.
     * @return the ReceiptNo
     */
    public String getReceiptNo() {
        return (String) getAttributeInternal(RECEIPTNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReceiptNo.
     * @param value value to set the  ReceiptNo
     */
    public void setReceiptNo(String value) {
        setAttributeInternal(RECEIPTNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReceiptDT.
     * @return the ReceiptDT
     */
    public Timestamp getReceiptDT() {
        return (Timestamp) getAttributeInternal(RECEIPTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReceiptDT.
     * @param value value to set the  ReceiptDT
     */
    public void setReceiptDT(Timestamp value) {
        setAttributeInternal(RECEIPTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cldId.
     * @return the cldId
     */
    public String getcldId() {
        String paramCldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
         return paramCldId;
      //  return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cldId.
     * @param value value to set the  cldId
     */
    public void setcldId(String value) {
        setAttributeInternal(CLDID, value);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Gets the attribute value for the calculated attribute orgId.
     * @return the orgId
     */
    public String getorgId() {
        String paramOrgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        return paramOrgId;
        
      //  return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute orgId.
     * @param value value to set the  orgId
     */
    public void setorgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute slocId.
     * @return the slocId
     */
    public Integer getslocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));

      //  return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute slocId.
     * @param value value to set the  slocId
     */
    public void setslocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocRcptId.
     * @return the DocRcptId
     */
    public String getDocRcptId() {
        return (String) getAttributeInternal(DOCRCPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocRcptId.
     * @param value value to set the  DocRcptId
     */
    public void setDocRcptId(String value) {
        setAttributeInternal(DOCRCPTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String paramOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        return paramOrgId;
      //  return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmMtlRcptVO1.
     */
    public RowSet getMmMtlRcptVO1() {
        return (RowSet)getAttributeInternal(MMMTLRCPTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SupplierVO1.
     */
    public RowSet getSupplierVO1() {
        return (RowSet)getAttributeInternal(SUPPLIERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MmRmdaVO1.
     */
    public RowSet getMmRmdaVO1() {
        return (RowSet)getAttributeInternal(MMRMDAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SrchRcptVO1.
     */
    public RowSet getSrchRcptVO1() {
        return (RowSet)getAttributeInternal(SRCHRCPTVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
