package mmgateentry.model.entities;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 28 15:03:32 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmMtlGeItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WhId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getWhId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocIdSrc {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDocIdSrc();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDocIdSrc((String)value);
            }
        }
        ,
        DlvSchdlNo {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDlvSchdlNo();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDlvSchdlNo((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getItmId();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getItmUom();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        PendQty {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getPendQty();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setPendQty((Number)value);
            }
        }
        ,
        DlvQty {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDlvQty();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDlvQty((Number)value);
            }
        }
        ,
        RcptQty {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getRcptQty();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setRcptQty((Number)value);
            }
        }
        ,
        ReturnQty {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getReturnQty();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setReturnQty((Number)value);
            }
        }
        ,
        ReturnResn {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getReturnResn();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setReturnResn((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        PendQtyBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getPendQtyBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setPendQtyBs((Number)value);
            }
        }
        ,
        DlvQtyBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDlvQtyBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDlvQtyBs((Number)value);
            }
        }
        ,
        RcptQtyBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getRcptQtyBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setRcptQtyBs((Number)value);
            }
        }
        ,
        ReturnQtyBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getReturnQtyBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setReturnQtyBs((Number)value);
            }
        }
        ,
        DocDtSrc {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getDocDtSrc();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setDocDtSrc((Timestamp)value);
            }
        }
        ,
        TotRcptQty {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getTotRcptQty();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setTotRcptQty((Number)value);
            }
        }
        ,
        TotRcptQtyBs {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getTotRcptQtyBs();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setTotRcptQtyBs((Number)value);
            }
        }
        ,
        MmMtlGeSrc {
            public Object get(MmMtlGeItmEOImpl obj) {
                return obj.getMmMtlGeSrc();
            }

            public void put(MmMtlGeItmEOImpl obj, Object value) {
                obj.setMmMtlGeSrc((MmMtlGeSrcEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmMtlGeItmEOImpl object);

        public abstract void put(MmMtlGeItmEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int DLVSCHDLNO = AttributesEnum.DlvSchdlNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PENDQTY = AttributesEnum.PendQty.index();
    public static final int DLVQTY = AttributesEnum.DlvQty.index();
    public static final int RCPTQTY = AttributesEnum.RcptQty.index();
    public static final int RETURNQTY = AttributesEnum.ReturnQty.index();
    public static final int RETURNRESN = AttributesEnum.ReturnResn.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int PENDQTYBS = AttributesEnum.PendQtyBs.index();
    public static final int DLVQTYBS = AttributesEnum.DlvQtyBs.index();
    public static final int RCPTQTYBS = AttributesEnum.RcptQtyBs.index();
    public static final int RETURNQTYBS = AttributesEnum.ReturnQtyBs.index();
    public static final int DOCDTSRC = AttributesEnum.DocDtSrc.index();
    public static final int TOTRCPTQTY = AttributesEnum.TotRcptQty.index();
    public static final int TOTRCPTQTYBS = AttributesEnum.TotRcptQtyBs.index();
    public static final int MMMTLGESRC = AttributesEnum.MmMtlGeSrc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmMtlGeItmEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmgateentry.model.entities.MmMtlGeItmEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WhId, using the alias name WhId.
     * @return the value of WhId
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WhId.
     * @param value value to set the WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdSrc, using the alias name DocIdSrc.
     * @return the value of DocIdSrc
     */
    public String getDocIdSrc() {
        return (String)getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdSrc.
     * @param value value to set the DocIdSrc
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for DlvSchdlNo, using the alias name DlvSchdlNo.
     * @return the value of DlvSchdlNo
     */
    public Integer getDlvSchdlNo() {
        return (Integer)getAttributeInternal(DLVSCHDLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvSchdlNo.
     * @param value value to set the DlvSchdlNo
     */
    public void setDlvSchdlNo(Integer value) {
        setAttributeInternal(DLVSCHDLNO, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ItmUom, using the alias name ItmUom.
     * @return the value of ItmUom
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUom.
     * @param value value to set the ItmUom
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PendQty, using the alias name PendQty.
     * @return the value of PendQty
     */
    public Number getPendQty() {
        return (Number)getAttributeInternal(PENDQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQty.
     * @param value value to set the PendQty
     */
    public void setPendQty(Number value) {
        setAttributeInternal(PENDQTY, value);
    }

    /**
     * Gets the attribute value for DlvQty, using the alias name DlvQty.
     * @return the value of DlvQty
     */
    public Number getDlvQty() {
        return (Number)getAttributeInternal(DLVQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvQty.
     * @param value value to set the DlvQty
     */
    public void setDlvQty(Number value) {
        setAttributeInternal(DLVQTY, value);
    }

    /**
     * Gets the attribute value for RcptQty, using the alias name RcptQty.
     * @return the value of RcptQty
     */
    public Number getRcptQty() {
        return (Number)getAttributeInternal(RCPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcptQty.
     * @param value value to set the RcptQty
     */
    public void setRcptQty(Number value) {
        setAttributeInternal(RCPTQTY, value);
    }

    /**
     * Gets the attribute value for ReturnQty, using the alias name ReturnQty.
     * @return the value of ReturnQty
     */
    public Number getReturnQty() {
        return (Number)getAttributeInternal(RETURNQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnQty.
     * @param value value to set the ReturnQty
     */
    public void setReturnQty(Number value) {
        setAttributeInternal(RETURNQTY, value);
    }

    /**
     * Gets the attribute value for ReturnResn, using the alias name ReturnResn.
     * @return the value of ReturnResn
     */
    public String getReturnResn() {
        return (String)getAttributeInternal(RETURNRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnResn.
     * @param value value to set the ReturnResn
     */
    public void setReturnResn(String value) {
        setAttributeInternal(RETURNRESN, value);
    }

    /**
     * Gets the attribute value for ItmUomBs, using the alias name ItmUomBs.
     * @return the value of ItmUomBs
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmUomBs.
     * @param value value to set the ItmUomBs
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UomConvFctr, using the alias name UomConvFctr.
     * @return the value of UomConvFctr
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for UomConvFctr.
     * @param value value to set the UomConvFctr
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for PendQtyBs, using the alias name PendQtyBs.
     * @return the value of PendQtyBs
     */
    public Number getPendQtyBs() {
        return (Number)getAttributeInternal(PENDQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PendQtyBs.
     * @param value value to set the PendQtyBs
     */
    public void setPendQtyBs(Number value) {
        setAttributeInternal(PENDQTYBS, value);
    }

    /**
     * Gets the attribute value for DlvQtyBs, using the alias name DlvQtyBs.
     * @return the value of DlvQtyBs
     */
    public Number getDlvQtyBs() {
        return (Number)getAttributeInternal(DLVQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for DlvQtyBs.
     * @param value value to set the DlvQtyBs
     */
    public void setDlvQtyBs(Number value) {
        setAttributeInternal(DLVQTYBS, value);
    }

    /**
     * Gets the attribute value for RcptQtyBs, using the alias name RcptQtyBs.
     * @return the value of RcptQtyBs
     */
    public Number getRcptQtyBs() {
        return (Number)getAttributeInternal(RCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for RcptQtyBs.
     * @param value value to set the RcptQtyBs
     */
    public void setRcptQtyBs(Number value) {
        setAttributeInternal(RCPTQTYBS, value);
    }

    /**
     * Gets the attribute value for ReturnQtyBs, using the alias name ReturnQtyBs.
     * @return the value of ReturnQtyBs
     */
    public Number getReturnQtyBs() {
        return (Number)getAttributeInternal(RETURNQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnQtyBs.
     * @param value value to set the ReturnQtyBs
     */
    public void setReturnQtyBs(Number value) {
        setAttributeInternal(RETURNQTYBS, value);
    }

    /**
     * Gets the attribute value for DocDtSrc, using the alias name DocDtSrc.
     * @return the value of DocDtSrc
     */
    public Timestamp getDocDtSrc() {
        return (Timestamp)getAttributeInternal(DOCDTSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDtSrc.
     * @param value value to set the DocDtSrc
     */
    public void setDocDtSrc(Timestamp value) {
        setAttributeInternal(DOCDTSRC, value);
    }

    /**
     * Gets the attribute value for TotRcptQty, using the alias name TotRcptQty.
     * @return the value of TotRcptQty
     */
    public Number getTotRcptQty() {
        return (Number)getAttributeInternal(TOTRCPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotRcptQty.
     * @param value value to set the TotRcptQty
     */
    public void setTotRcptQty(Number value) {
        setAttributeInternal(TOTRCPTQTY, value);
    }

    /**
     * Gets the attribute value for TotRcptQtyBs, using the alias name TotRcptQtyBs.
     * @return the value of TotRcptQtyBs
     */
    public Number getTotRcptQtyBs() {
        return (Number)getAttributeInternal(TOTRCPTQTYBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotRcptQtyBs.
     * @param value value to set the TotRcptQtyBs
     */
    public void setTotRcptQtyBs(Number value) {
        setAttributeInternal(TOTRCPTQTYBS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public MmMtlGeSrcEOImpl getMmMtlGeSrc() {
        return (MmMtlGeSrcEOImpl)getAttributeInternal(MMMTLGESRC);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setMmMtlGeSrc(MmMtlGeSrcEOImpl value) {
        setAttributeInternal(MMMTLGESRC, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param whId key constituent
     * @param docId key constituent
     * @param docIdSrc key constituent
     * @param dlvSchdlNo key constituent
     * @param itmId key constituent
     * @param itmUom key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String whId, String docId,
                                       String docIdSrc, Integer dlvSchdlNo, String itmId, String itmUom) {
        return new Key(new Object[]{cldId, slocId, orgId, whId, docId, docIdSrc, dlvSchdlNo, itmId, itmUom});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
