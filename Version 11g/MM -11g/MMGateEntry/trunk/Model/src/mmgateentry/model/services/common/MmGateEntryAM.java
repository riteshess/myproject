package mmgateentry.model.services.common;

import java.util.HashSet;

import oracle.jbo.ApplicationModule;
import oracle.jbo.domain.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 16 16:37:07 IST 2013
// ---------------------------------------------------------------------
public interface MmGateEntryAM extends ApplicationModule {

    void getItemsForPopUp(Integer docType, Integer SlocId, String CldId, String OrgId, String HoOrgId,
                          String sourceDocNo);

  

    String getGeNo(Integer SlocId, String CldId, String OrgId, String WhId, Integer fyId);


    void getGeRecordForEdit(String CldId, Integer SlocId, String OrgId, String TxnId);

    String checkForDuplicateDocNo(String CldId, Integer SlocId, String OrgId, String SrcDocNo);


    void addItemToGe(String ItmName, String ItmUom, oracle.jbo.domain.Number ItmQty);

    void generateTempDocId(Integer UsrId, String CldId, Integer SlocId, String OrgId, String WhId, Integer DocTypeSrc);

    Integer getFYid(String CldId, String OrgId, Timestamp geDate, String Mode);

    void populateGeItmfromTrfOrd();

    String checkCurrCompatibility(String OrgId, String CldId, Integer SlocId, String PoDocId);

    void deleteDocument();

    String isPoWarehouseCompatible();

    HashSet checkForRcvdQtyPresent(String CldId, Integer slocId, String OrgId, String whId);

    void deleteItemsNonRecvd(String CldId, Integer slocId, String OrgId, String whId);

    String checkItmDuplicate(String itmNm, String uomId);

    String isDocumentPresent();

    void setStatusforGe(String stat);

    void returnGe(String Flg);

    void setTxnIdForCurrentRow(Integer UsrId, String CldId, Integer SlocId, String OrgId, String whIdDef,
                               String chkWf);

    boolean isFYOpenForCurrentDate(String cldId, String orgId, Timestamp dt);

    Integer populateGeItmfromPo();

    void setNullforAll();

    String checkRetQty();

    String chkToleranceQty(String orgId, Integer SlocId, String CldId);

    String validateToleranceQty(String CldId, Integer SlocId, String OrgId, String p_itm_id,
                                oracle.jbo.domain.Number rcpt_qty);

    void DeleteGE();

    String checkNoOfDocument();

    HashSet chkdlvryQtyForItem(String CldId, Integer slocId, String OrgId, String whId);

    Integer populateGeItmfromCPo();

    void updateTxnQty(oracle.jbo.domain.Number oldRcptQty, oracle.jbo.domain.Number newRcptQty);

    String chkDaysTolerance();

    String chkToleranceDays(String orgId, Integer SlocId, String CldId);

    String validatePoRcptQty(oracle.jbo.domain.Number rcptQty);

    String validateToleranceDays(String CldId, Integer SlocId, String OrgId, String p_po_no, Timestamp p_rcpt_date);

    String chkItmTrfQty();

    void LinkItemtoOrganisation(String CldId, Integer SlocId, String OrgId, String HoOrgId, Integer UsrId);

    void setCurrIdSpInMtlGe();

    String callForValidateToleranceQty(String CldId, Integer SlocId, String OrgId, String p_itm_id,
                                       oracle.jbo.domain.Number retn_qty);

    String compTotRcptQty(oracle.jbo.domain.Number RetQty);

    void updtRcptQty(oracle.jbo.domain.Number TotRcpt);

    void updtRcptRetnTmpRcptQty(oracle.jbo.domain.Number TotRcpt);

    void updtRcptTmpRcptQty(oracle.jbo.domain.Number RetnQty);

    void setCurrIdSpPoToMtlGe(Integer value);

    Integer getGESrcCount();
}
