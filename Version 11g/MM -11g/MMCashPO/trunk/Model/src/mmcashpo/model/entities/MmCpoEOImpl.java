package mmcashpo.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmcashpo.model.module.MmCashPOAMImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import oracle.sql.DATE;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Dec 12 16:46:37 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmCpoEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getDocId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(MmCpoEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        CpoId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCpoId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCpoId((String)value);
            }
        }
        ,
        CpoDt {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCpoDt();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCpoDt((Date)value);
            }
        }
        ,
        AttId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getAttId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setAttId((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCoaId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(MmCpoEOImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setTaxRuleFlg((String)value);
            }
        }
        ,
        DiscType {
            public Object get(MmCpoEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(MmCpoEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setDiscVal((Number)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCurrIdSp((Integer)value);
            }
        }
        ,
        CurrConvFctr {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCurrConvFctr();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCurrConvFctr((Number)value);
            }
        }
        ,
        CpoAmountBs {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCpoAmountBs();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCpoAmountBs((Number)value);
            }
        }
        ,
        CpoAmountSp {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCpoAmountSp();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCpoAmountSp((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(MmCpoEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(MmCpoEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(MmCpoEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(MmCpoEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EntityId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getEntityId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setEntityId((Integer)value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(MmCpoEOImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String)value);
            }
        }
        ,
        CldId {
            public Object get(MmCpoEOImpl obj) {
                return obj.getCldId();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        AuthStat {
            public Object get(MmCpoEOImpl obj) {
                return obj.getAuthStat();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setAuthStat((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MmCpoEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        MmCpoItm {
            public Object get(MmCpoEOImpl obj) {
                return obj.getMmCpoItm();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MmCpoOc {
            public Object get(MmCpoEOImpl obj) {
                return obj.getMmCpoOc();
            }

            public void put(MmCpoEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MmCpoEOImpl object);

        public abstract void put(MmCpoEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int CPOID = AttributesEnum.CpoId.index();
    public static final int CPODT = AttributesEnum.CpoDt.index();
    public static final int ATTID = AttributesEnum.AttId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CPOAMOUNTBS = AttributesEnum.CpoAmountBs.index();
    public static final int CPOAMOUNTSP = AttributesEnum.CpoAmountSp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ENTITYID = AttributesEnum.EntityId.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int AUTHSTAT = AttributesEnum.AuthStat.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MMCPOITM = AttributesEnum.MmCpoItm.index();
    public static final int MMCPOOC = AttributesEnum.MmCpoOc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmCpoEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmcashpo.model.entities.MmCpoEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for CpoId, using the alias name CpoId.
     * @return the value of CpoId
     */
    public String getCpoId() {
        return (String)getAttributeInternal(CPOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CpoId.
     * @param value value to set the CpoId
     */
    public void setCpoId(String value) {
        setAttributeInternal(CPOID, value);
    }

    /**
     * Gets the attribute value for CpoDt, using the alias name CpoDt.
     * @return the value of CpoDt
     */
    public Date getCpoDt() {
        return (Date)getAttributeInternal(CPODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CpoDt.
     * @param value value to set the CpoDt
     */
    public void setCpoDt(Date value) {
        setAttributeInternal(CPODT, value);
    }

    /**
     * Gets the attribute value for AttId, using the alias name AttId.
     * @return the value of AttId
     */
    public Integer getAttId() {
        return (Integer)getAttributeInternal(ATTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttId.
     * @param value value to set the AttId
     */
    public void setAttId(Integer value) {
        setAttributeInternal(ATTID, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for TaxRuleFlg, using the alias name TaxRuleFlg.
     * @return the value of TaxRuleFlg
     */
    public String getTaxRuleFlg() {
        return (String)getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleFlg.
     * @param value value to set the TaxRuleFlg
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public Number getDiscVal() {
        return (Number)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(Number value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer)getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConvFctr, using the alias name CurrConvFctr.
     * @return the value of CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number)getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvFctr.
     * @param value value to set the CurrConvFctr
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CpoAmountBs, using the alias name CpoAmountBs.
     * @return the value of CpoAmountBs
     */
    public Number getCpoAmountBs() {
        return (Number)getAttributeInternal(CPOAMOUNTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CpoAmountBs.
     * @param value value to set the CpoAmountBs
     */
    public void setCpoAmountBs(Number value) {
        setAttributeInternal(CPOAMOUNTBS, value);
    }

    /**
     * Gets the attribute value for CpoAmountSp, using the alias name CpoAmountSp.
     * @return the value of CpoAmountSp
     */
    public Number getCpoAmountSp() {
        return (Number)getAttributeInternal(CPOAMOUNTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CpoAmountSp.
     * @param value value to set the CpoAmountSp
     */
    public void setCpoAmountSp(Number value) {
        setAttributeInternal(CPOAMOUNTSP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EntityId, using the alias name EntityId.
     * @return the value of EntityId
     */
    public Integer getEntityId() {
        return (Integer)getAttributeInternal(ENTITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EntityId.
     * @param value value to set the EntityId
     */
    public void setEntityId(Integer value) {
        setAttributeInternal(ENTITYID, value);
    }

    /**
     * Gets the attribute value for TaxAfterDiscFlg, using the alias name TaxAfterDiscFlg.
     * @return the value of TaxAfterDiscFlg
     */
    public String getTaxAfterDiscFlg() {
        return (String)getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAfterDiscFlg.
     * @param value value to set the TaxAfterDiscFlg
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for AuthStat, using the alias name AuthStat.
     * @return the value of AuthStat
     */
    public String getAuthStat() {
        return (String)getAttributeInternal(AUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AuthStat.
     * @param value value to set the AuthStat
     */
    public void setAuthStat(String value) {
        setAttributeInternal(AUTHSTAT, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmCpoItm() {
        return (RowIterator)getAttributeInternal(MMCPOITM);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMmCpoOc() {
        return (RowIterator)getAttributeInternal(MMCPOOC);
    }


    /**
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param cldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, String orgId, String docId, String cldId) {
        return new Key(new Object[]{slocId, orgId, docId, cldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        
        Integer p_user_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String p_org_id = (String)resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cldId = (String)resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        
        
        String docId =(String)(callStoredFunction(Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] { cldId,SlocId,p_org_id,p_user_id,new Integer(18506),0}));    //   app.pkg_app.get_txn_id(p_usr_id,p_org_id,p_sloc_id,18505)
        System.out.println("--DocId new created--"+docId);
        setDocId(docId);
        setCldId(cldId);
        setAuthStat("N");
     //   String bsCurrId 
        super.create(attributeList);
        
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
               Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
               
               setUsrIdMod(UserId);
            Date dt= (Date)Date.getCurrentDate();
            setUsrIdModDt(dt);
        }
        super.doDML(operation, e);
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
          CallableStatement st = null;
          try {
              MmCashPOAMImpl am = (MmCashPOAMImpl)resolvElDC("MmCashPOAMDataControl");
               st = am.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
              st.registerOutParameter(1, sqlReturnType);
              if (bindVars != null) {
                  for (int z = 0; z < bindVars.length; z++) {
                      st.setObject(z + 2, bindVars[z]);
                      System.out.println(bindVars[z] + "z");
                  }
              }
              st.executeUpdate();

              return st.getObject(1);
          } catch (SQLException e) {
              throw new JboException(e);
          } finally {
              if (st != null) {
                  try {
                      st.close();
                  } catch (SQLException e) {
                  }
              }
          }
      }
    
    public Object resolvElDC(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp =
               elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
           return valueExp.getValue(elContext);
       }
    
    public String resolvEl(String data){
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           String Message=valueExp.getValue(elContext).toString();
           return Message;
         }
}
