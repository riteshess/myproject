package defineworkflowapp.model.views;

import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 29 16:16:42 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWfLvlVORowImpl extends ViewRowImpl {
    public static final int ENTITY_APPWFLVLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AuthDys {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getAuthDys();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setAuthDys((Integer)value);
            }
        }
        ,
        AutoSkipFlg {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getAutoSkipFlg();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setAutoSkipFlg((String)value);
            }
        }
        ,
        Check1 {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getCheck1();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setCheck1((String)value);
            }
        }
        ,
        Check2 {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getCheck2();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setCheck2((String)value);
            }
        }
        ,
        CldId {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SkipableFlg {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getSkipableFlg();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setSkipableFlg((String)value);
            }
        }
        ,
        SlocId {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        WarnDys {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getWarnDys();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setWarnDys((Integer)value);
            }
        }
        ,
        WfId {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getWfId();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setWfId((String)value);
            }
        }
        ,
        WfLvl {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getWfLvl();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setWfLvl((Integer)value);
            }
        }
        ,
        TransWfLvlDisp {
            public Object get(AppWfLvlVORowImpl obj) {
                return obj.getTransWfLvlDisp();
            }

            public void put(AppWfLvlVORowImpl obj, Object value) {
                obj.setTransWfLvlDisp((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppWfLvlVORowImpl object);

        public abstract void put(AppWfLvlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int AUTHDYS = AttributesEnum.AuthDys.index();
    public static final int AUTOSKIPFLG = AttributesEnum.AutoSkipFlg.index();
    public static final int CHECK1 = AttributesEnum.Check1.index();
    public static final int CHECK2 = AttributesEnum.Check2.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SKIPABLEFLG = AttributesEnum.SkipableFlg.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WARNDYS = AttributesEnum.WarnDys.index();
    public static final int WFID = AttributesEnum.WfId.index();
    public static final int WFLVL = AttributesEnum.WfLvl.index();
    public static final int TRANSWFLVLDISP = AttributesEnum.TransWfLvlDisp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppWfLvlVORowImpl() {
    }

    /**
     * Gets AppWfLvlEO entity object.
     * @return the AppWfLvlEO
     */
    public EntityImpl getAppWfLvlEO() {
        return (EntityImpl)getEntity(ENTITY_APPWFLVLEO);
    }

    /**
     * Gets the attribute value for AUTH_DYS using the alias name AuthDys.
     * @return the AUTH_DYS
     */
    public Integer getAuthDys() {
        return (Integer) getAttributeInternal(AUTHDYS);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTH_DYS using the alias name AuthDys.
     * @param value value to set the AUTH_DYS
     */
    public void setAuthDys(Integer value) {
        setAttributeInternal(AUTHDYS, value);
    }

    /**
     * Gets the attribute value for AUTO_SKIP_FLG using the alias name AutoSkipFlg.
     * @return the AUTO_SKIP_FLG
     */
    public String getAutoSkipFlg() {
        if(getAttributeInternal(AUTOSKIPFLG)!=null)
            if(getAttributeInternal(AUTOSKIPFLG).toString().equals("Y"))
                return "true";
        else
                return "false";
        return (String) getAttributeInternal(AUTOSKIPFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for AUTO_SKIP_FLG using the alias name AutoSkipFlg.
     * @param value value to set the AUTO_SKIP_FLG
     */
    public void setAutoSkipFlg(String value) {
        if(value!=null){
        if(value.equals("true"))
            value="Y";
        else
            value="N";
        }
        else
            value="N";
        setAttributeInternal(AUTOSKIPFLG, value);
    }

    /**
     * Gets the attribute value for CHECK1 using the alias name Check1.
     * @return the CHECK1
     */
    public String getCheck1() {
        if(getAttributeInternal(CHECK1)!=null)
            if(getAttributeInternal(CHECK1).toString().equals("Y"))
                return "true";
        else
                return "false";
        return (String) getAttributeInternal(CHECK1);
    }

    /**
     * Sets <code>value</code> as attribute value for CHECK1 using the alias name Check1.
     * @param value value to set the CHECK1
     */
    public void setCheck1(String value) {
        if(value!=null){
        if(value.equals("true"))
            value="Y";
        else
            value="N";
        }
        else
            value="N";
        setAttributeInternal(CHECK1, value);
    }

    /**
     * Gets the attribute value for CHECK2 using the alias name Check2.
     * @return the CHECK2
     */
    public String getCheck2() {
        if(getAttributeInternal(CHECK2)!=null)
            if(getAttributeInternal(CHECK2).toString().equals("Y"))
                return "true";
        else
                return "false";
        return (String) getAttributeInternal(CHECK2);
    }

    /**
     * Sets <code>value</code> as attribute value for CHECK2 using the alias name Check2.
     * @param value value to set the CHECK2
     */
    public void setCheck2(String value) {
        if(value!=null){
        if(value.equals("true"))
            value="Y";
        else
            value="N";
        }
        else
            value="N";
        setAttributeInternal(CHECK2, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SKIPABLE_FLG using the alias name SkipableFlg.
     * @return the SKIPABLE_FLG
     */
    public String getSkipableFlg() {
        if(getAttributeInternal(SKIPABLEFLG)!=null)
            if(getAttributeInternal(SKIPABLEFLG).toString().equals("Y"))
                return "true";
        else
                return "false";
        return (String) getAttributeInternal(SKIPABLEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for SKIPABLE_FLG using the alias name SkipableFlg.
     * @param value value to set the SKIPABLE_FLG
     */
    public void setSkipableFlg(String value) {
        if(value!=null){
        if(value.equals("true"))
            value="Y";
        else
            value="N";
        }
        else
            value="N";
        setAttributeInternal(SKIPABLEFLG, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for WARN_DYS using the alias name WarnDys.
     * @return the WARN_DYS
     */
    public Integer getWarnDys() {
        return (Integer) getAttributeInternal(WARNDYS);
    }

    /**
     * Sets <code>value</code> as attribute value for WARN_DYS using the alias name WarnDys.
     * @param value value to set the WARN_DYS
     */
    public void setWarnDys(Integer value) {
        setAttributeInternal(WARNDYS, value);
    }

    /**
     * Gets the attribute value for WF_ID using the alias name WfId.
     * @return the WF_ID
     */
    public String getWfId() {
        return (String) getAttributeInternal(WFID);
    }

    /**
     * Sets <code>value</code> as attribute value for WF_ID using the alias name WfId.
     * @param value value to set the WF_ID
     */
    public void setWfId(String value) {
        setAttributeInternal(WFID, value);
    }

    /**
     * Gets the attribute value for WF_LVL using the alias name WfLvl.
     * @return the WF_LVL
     */
    public Integer getWfLvl() {
        return (Integer) getAttributeInternal(WFLVL);
    }

    /**
     * Sets <code>value</code> as attribute value for WF_LVL using the alias name WfLvl.
     * @param value value to set the WF_LVL
     */
    public void setWfLvl(Integer value) {
        setAttributeInternal(WFLVL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransWfLvlDisp.
     * @return the TransWfLvlDisp
     */
    public String getTransWfLvlDisp() {
        String lvl="";
        if(getWfLvl()!=null)
            lvl="Level "+getWfLvl().toString();
        return lvl;
        //return (String) getAttributeInternal(TRANSWFLVLDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransWfLvlDisp.
     * @param value value to set the  TransWfLvlDisp
     */
    public void setTransWfLvlDisp(String value) {
        setAttributeInternal(TRANSWFLVLDISP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
