package mmstockadjustment.model.view;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmstockadjustment.model.service.MMStockAdjustmentAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 13 11:59:25 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrchSrVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BinId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getBinId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setBinId((String)value);
            }
        }
        ,
        CldId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        LotId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        SrNo {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setSrNo((String)value);
            }
        }
        ,
        TotStk {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setTotStk((Integer)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setUsrIdMod((Long)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        WhId {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        quantityUpDown {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getquantityUpDown();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setquantityUpDown((String)value);
            }
        }
        ,
        ItmDesc {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setItmDesc((String)value);
            }
        }
        ,
        ITMVO1 {
            public Object get(SrchSrVORowImpl obj) {
                return obj.getITMVO1();
            }

            public void put(SrchSrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SrchSrVORowImpl object);

        public abstract void put(SrchSrVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BINID = AttributesEnum.BinId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int QUANTITYUPDOWN = AttributesEnum.quantityUpDown.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int ITMVO1 = AttributesEnum.ITMVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrchSrVORowImpl() {
    }


    /**
     * Gets the attribute value for the calculated attribute BinId.
     * @return the BinId
     */
    public String getBinId() {
        return (String) getAttributeInternal(BINID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BinId.
     * @param value value to set the  BinId
     */
    public void setBinId(String value) {
        setAttributeInternal(BINID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotId.
     * @return the LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotId.
     * @param value value to set the  LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SrNo.
     * @return the SrNo
     */
    public String getSrNo() {
        return (String) getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SrNo.
     * @param value value to set the  SrNo
     */
    public void setSrNo(String value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public Integer getTotStk() {
        return (Integer) getAttributeInternal(TOTSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotStk.
     * @param value value to set the  TotStk
     */
    public void setTotStk(Integer value) {
        setAttributeInternal(TOTSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Long getUsrIdMod() {
        return (Long) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdMod.
     * @param value value to set the  UsrIdMod
     */
    public void setUsrIdMod(Long value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdModDt.
     * @param value value to set the  UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute quantityUpDown.
     * @return the quantityUpDown
     */
    public String getquantityUpDown() {
        
        MMStockAdjustmentAMImpl am =  (MMStockAdjustmentAMImpl)resolvElDC("MMStockAdjustmentAMDataControl");
        ViewObject voStk = am.getSTKADJT1();
        ViewObjectImpl voStkAdjtSr = am.getSTKADJTSR1();
        Row currRow = voStk.getCurrentRow();
        String whId = (String)currRow.getAttribute("WhId");
        String docId = (String)currRow.getAttribute("DocId");
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer slocId =Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String itemId= getItmId();
        String lotId= getLotId();
        String binId= getBinId();
        String srId= getSrNo();
        
        RowQualifier rq = new RowQualifier(voStkAdjtSr);
        rq.setWhereClause("ItmId = '"+itemId+"' AND CldId = '"+cldId+"' AND DocId = '"+docId+"' AND OrgId = '"+orgId+"' AND SlocId = "+slocId+" AND WhId = '"+whId+"' AND LotId = '"+lotId+"' AND BinId = '"+binId+"' AND SrNo = '"+srId+"'");
        Row rows[]=voStkAdjtSr.getFilteredRows(rq);
        if(rows != null && rows.length == 1)             //Remove Current Row from StkAjstSrVo
        {return "Y";}
        else
        {return (String) getAttributeInternal(QUANTITYUPDOWN);}
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute quantityUpDown.
     * @param value value to set the  quantityUpDown
     */
    public void setquantityUpDown(String value) {
        setAttributeInternal(QUANTITYUPDOWN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
     
        MMStockAdjustmentAMImpl am =  (MMStockAdjustmentAMImpl)resolvElDC("MMStockAdjustmentAMDataControl");
        ViewObjectImpl voItm = am.getITM1();
        Integer fyId = (Integer)am.getSTKADJT1().getCurrentRow().getAttribute("FyId");
        
        RowQualifier rw = new RowQualifier(voItm);
        rw.setWhereClause("OrgId = '"+getOrgId()+"' AND ItmId = '"+getItmId()+"' AND CldId = '"+getCldId()+"' AND SlocId = "+getSlocId()+" AND WhId = '"+getWhId()+"' AND FyId="+fyId+"");
        Row norows[] =voItm.getFilteredRows(rw);
        
        if(norows!=null && norows.length >= 1)
        { return (String)norows[0].getAttribute("ItmDesc"); }
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ITMVO1.
     */
    public RowSet getITMVO1() {
        return (RowSet)getAttributeInternal(ITMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public static Object evaluateEL(String el) {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =
    facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el, Object.class);
    return exp.getValue(elContext);
    }
    
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =
    elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }
}
