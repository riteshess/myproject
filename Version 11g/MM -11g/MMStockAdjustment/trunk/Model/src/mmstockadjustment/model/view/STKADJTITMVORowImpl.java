package mmstockadjustment.model.view;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import mmstockadjustment.model.entity.STCKADJTITMEOImpl;

import mmstockadjustment.model.service.MMStockAdjustmentAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 06 11:53:23 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class STKADJTITMVORowImpl extends ViewRowImpl {


    public static final int ENTITY_STCKADJTITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AdjtQty {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getAdjtQty();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAdjtQty((BigDecimal)value);
            }
        }
        ,
        AdjtRem {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getAdjtRem();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAdjtRem((String)value);
            }
        }
        ,
        AdjtType {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getAdjtType();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAdjtType((String)value);
            }
        }
        ,
        CldId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmUom {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        OrgId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        WhId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        ItemDesc {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItemDesc();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setItemDesc((String)value);
            }
        }
        ,
        ItemGrp {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItemGrp();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setItemGrp((String)value);
            }
        }
        ,
        ItemGrpId {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItemGrpId();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setItemGrpId((String)value);
            }
        }
        ,
        isNewRow {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getisNewRow();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setisNewRow((String)value);
            }
        }
        ,
        fyIdTrans {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getfyIdTrans();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setfyIdTrans((Integer)value);
            }
        }
        ,
        STKADJTLOT {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getSTKADJTLOT();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ITMVO1 {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getITMVO1();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UOMVO1 {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getUOMVO1();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ItmGrpVO1 {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getItmGrpVO1();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AdjtTypeVO1 {
            public Object get(STKADJTITMVORowImpl obj) {
                return obj.getAdjtTypeVO1();
            }

            public void put(STKADJTITMVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(STKADJTITMVORowImpl object);

        public abstract void put(STKADJTITMVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ADJTQTY = AttributesEnum.AdjtQty.index();
    public static final int ADJTREM = AttributesEnum.AdjtRem.index();
    public static final int ADJTTYPE = AttributesEnum.AdjtType.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ITEMDESC = AttributesEnum.ItemDesc.index();
    public static final int ITEMGRP = AttributesEnum.ItemGrp.index();
    public static final int ITEMGRPID = AttributesEnum.ItemGrpId.index();
    public static final int ISNEWROW = AttributesEnum.isNewRow.index();
    public static final int FYIDTRANS = AttributesEnum.fyIdTrans.index();
    public static final int STKADJTLOT = AttributesEnum.STKADJTLOT.index();
    public static final int ITMVO1 = AttributesEnum.ITMVO1.index();
    public static final int UOMVO1 = AttributesEnum.UOMVO1.index();
    public static final int ITMGRPVO1 = AttributesEnum.ItmGrpVO1.index();
    public static final int ADJTTYPEVO1 = AttributesEnum.AdjtTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public STKADJTITMVORowImpl() {
    }

    /**
     * Gets STCKADJTITMEO entity object.
     * @return the STCKADJTITMEO
     */
    public STCKADJTITMEOImpl getSTCKADJTITMEO() {
        return (STCKADJTITMEOImpl)getEntity(ENTITY_STCKADJTITMEO);
    }

    /**
     * Gets the attribute value for ADJT_QTY using the alias name AdjtQty.
     * @return the ADJT_QTY
     */
    public BigDecimal getAdjtQty() {
        return (BigDecimal) getAttributeInternal(ADJTQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJT_QTY using the alias name AdjtQty.
     * @param value value to set the ADJT_QTY
     */
    public void setAdjtQty(BigDecimal value) {
        if(value == null)
        {value = new BigDecimal(1);}
        setAttributeInternal(ADJTQTY, value);
    }

    /**
     * Gets the attribute value for ADJT_REM using the alias name AdjtRem.
     * @return the ADJT_REM
     */
    public String getAdjtRem() {
        return (String) getAttributeInternal(ADJTREM);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJT_REM using the alias name AdjtRem.
     * @param value value to set the ADJT_REM
     */
    public void setAdjtRem(String value) {
        setAttributeInternal(ADJTREM, value);
    }

    /**
     * Gets the attribute value for ADJT_TYPE using the alias name AdjtType.
     * @return the ADJT_TYPE
     */
    public String getAdjtType() {
        return (String) getAttributeInternal(ADJTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ADJT_TYPE using the alias name AdjtType.
     * @param value value to set the ADJT_TYPE
     */
    public void setAdjtType(String value) {
        setAttributeInternal(ADJTTYPE, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemDesc.
     * @return the ItemDesc
     */
    public String getItemDesc() {
        
        if(getItmId()!=null)
        {
           Row rows[] = getITMVO1().getFilteredRows("ItmId",getItmId());
           if(rows != null && rows.length==1)
           {
            return rows[0].getAttribute("ItmDesc").toString();
           }
        }
        
        return (String) getAttributeInternal(ITEMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemDesc.
     * @param value value to set the  ItemDesc
     */
    public void setItemDesc(String value) {
        setAttributeInternal(ITEMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGrp.
     * @return the ItemGrp
     */
    public String getItemGrp() {
        return (String) getAttributeInternal(ITEMGRP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGrp.
     * @param value value to set the  ItemGrp
     */
    public void setItemGrp(String value) {
        setAttributeInternal(ITEMGRP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemGrpId.
     * @return the ItemGrpId
     */
    public String getItemGrpId() {
        return (String) getAttributeInternal(ITEMGRPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemGrpId.
     * @param value value to set the  ItemGrpId
     */
    public void setItemGrpId(String value) {
        setAttributeInternal(ITEMGRPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute isNewRow.
     * @return the isNewRow
     */
    public String getisNewRow() {
        return (String) getAttributeInternal(ISNEWROW);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isNewRow.
     * @param value value to set the  isNewRow
     */
    public void setisNewRow(String value) {
        setAttributeInternal(ISNEWROW, value);
    }


    /**
     * Gets the attribute value for the calculated attribute fyIdTrans.
     * @return the fyIdTrans
     */
    public Integer getfyIdTrans() {
        MMStockAdjustmentAMImpl am =  (MMStockAdjustmentAMImpl)resolvElDC("MMStockAdjustmentAMDataControl");
        ViewObject voStk = am.getSTKADJT1();
        
        Integer fyId= (Integer)voStk.getCurrentRow().getAttribute("FyId");
        if(fyId!=null)
        {return fyId;}
        return (Integer) getAttributeInternal(FYIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fyIdTrans.
     * @param value value to set the  fyIdTrans
     */
    public void setfyIdTrans(Integer value) {
        setAttributeInternal(FYIDTRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link STKADJTLOT.
     */
    public RowIterator getSTKADJTLOT() {
        return (RowIterator)getAttributeInternal(STKADJTLOT);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ITMVO1.
     */
    public RowSet getITMVO1() {
        return (RowSet)getAttributeInternal(ITMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UOMVO1.
     */
    public RowSet getUOMVO1() {
        return (RowSet)getAttributeInternal(UOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItmGrpVO1.
     */
    public RowSet getItmGrpVO1() {
        return (RowSet)getAttributeInternal(ITMGRPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AdjtTypeVO1.
     */
    public RowSet getAdjtTypeVO1() {
        return (RowSet)getAttributeInternal(ADJTTYPEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public Object resolvElDC(String data) {
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp =
    elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
    return valueExp.getValue(elContext);
    }
}
