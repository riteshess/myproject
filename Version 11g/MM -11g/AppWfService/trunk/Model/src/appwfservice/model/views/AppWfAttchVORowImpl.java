package appwfservice.model.views;

import appwfservice.model.module.WfServAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 08 18:32:11 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWfAttchVORowImpl extends ViewRowImpl {
    public static final int ENTITY_APPWFATTCHEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AttachFl {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getAttachFl();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setAttachFl((BFileDomain)value);
            }
        }
        ,
        AttchFlExtn {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getAttchFlExtn();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setAttchFlExtn((String)value);
            }
        }
        ,
        AttchFlNm {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getAttchFlNm();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setAttchFlNm((String)value);
            }
        }
        ,
        AttchFlPath {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getAttchFlPath();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setAttchFlPath((String)value);
            }
        }
        ,
        CldId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DispFlNm {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getDispFlNm();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setDispFlNm((String)value);
            }
        }
        ,
        DocId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setDocId((Long)value);
            }
        }
        ,
        OrgId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        TxnDocId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getTxnDocId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setTxnDocId((String)value);
            }
        }
        ,
        TxnDt {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getTxnDt();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setTxnDt((Timestamp)value);
            }
        }
        ,
        TxnId {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getTxnId();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setTxnId((String)value);
            }
        }
        ,
        TxnTabNm {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getTxnTabNm();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setTxnTabNm((String)value);
            }
        }
        ,
        UsrIdBy {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getUsrIdBy();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setUsrIdBy((Integer)value);
            }
        }
        ,
        UsrNm {
            public Object get(AppWfAttchVORowImpl obj) {
                return obj.getUsrNm();
            }

            public void put(AppWfAttchVORowImpl obj, Object value) {
                obj.setUsrNm((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppWfAttchVORowImpl object);

        public abstract void put(AppWfAttchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ATTACHFL = AttributesEnum.AttachFl.index();
    public static final int ATTCHFLEXTN = AttributesEnum.AttchFlExtn.index();
    public static final int ATTCHFLNM = AttributesEnum.AttchFlNm.index();
    public static final int ATTCHFLPATH = AttributesEnum.AttchFlPath.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DISPFLNM = AttributesEnum.DispFlNm.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TXNDOCID = AttributesEnum.TxnDocId.index();
    public static final int TXNDT = AttributesEnum.TxnDt.index();
    public static final int TXNID = AttributesEnum.TxnId.index();
    public static final int TXNTABNM = AttributesEnum.TxnTabNm.index();
    public static final int USRIDBY = AttributesEnum.UsrIdBy.index();
    public static final int USRNM = AttributesEnum.UsrNm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppWfAttchVORowImpl() {
    }

    /**
     * Gets AppWfAttchEO entity object.
     * @return the AppWfAttchEO
     */
    public EntityImpl getAppWfAttchEO() {
        return (EntityImpl)getEntity(ENTITY_APPWFATTCHEO);
    }

    /**
     * Gets the attribute value for ATTACH_FL using the alias name AttachFl.
     * @return the ATTACH_FL
     */
    public BFileDomain getAttachFl() {
        return (BFileDomain) getAttributeInternal(ATTACHFL);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACH_FL using the alias name AttachFl.
     * @param value value to set the ATTACH_FL
     */
    public void setAttachFl(BFileDomain value) {
        setAttributeInternal(ATTACHFL, value);
    }

    /**
     * Gets the attribute value for ATTCH_FL_EXTN using the alias name AttchFlExtn.
     * @return the ATTCH_FL_EXTN
     */
    public String getAttchFlExtn() {
        return (String) getAttributeInternal(ATTCHFLEXTN);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTCH_FL_EXTN using the alias name AttchFlExtn.
     * @param value value to set the ATTCH_FL_EXTN
     */
    public void setAttchFlExtn(String value) {
        setAttributeInternal(ATTCHFLEXTN, value);
    }

    /**
     * Gets the attribute value for ATTCH_FL_NM using the alias name AttchFlNm.
     * @return the ATTCH_FL_NM
     */
    public String getAttchFlNm() {
        return (String) getAttributeInternal(ATTCHFLNM);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTCH_FL_NM using the alias name AttchFlNm.
     * @param value value to set the ATTCH_FL_NM
     */
    public void setAttchFlNm(String value) {
        setAttributeInternal(ATTCHFLNM, value);
    }

    /**
     * Gets the attribute value for ATTCH_FL_PATH using the alias name AttchFlPath.
     * @return the ATTCH_FL_PATH
     */
    public String getAttchFlPath() {
        return (String) getAttributeInternal(ATTCHFLPATH);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTCH_FL_PATH using the alias name AttchFlPath.
     * @param value value to set the ATTCH_FL_PATH
     */
    public void setAttchFlPath(String value) {
        setAttributeInternal(ATTCHFLPATH, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DISP_FL_NM using the alias name DispFlNm.
     * @return the DISP_FL_NM
     */
    public String getDispFlNm() {
        return (String) getAttributeInternal(DISPFLNM);
    }

    /**
     * Sets <code>value</code> as attribute value for DISP_FL_NM using the alias name DispFlNm.
     * @param value value to set the DISP_FL_NM
     */
    public void setDispFlNm(String value) {
        setAttributeInternal(DISPFLNM, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public Long getDocId() {
        return (Long) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(Long value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TXN_DOC_ID using the alias name TxnDocId.
     * @return the TXN_DOC_ID
     */
    public String getTxnDocId() {
        return (String) getAttributeInternal(TXNDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TXN_DOC_ID using the alias name TxnDocId.
     * @param value value to set the TXN_DOC_ID
     */
    public void setTxnDocId(String value) {
        setAttributeInternal(TXNDOCID, value);
    }

    /**
     * Gets the attribute value for TXN_DT using the alias name TxnDt.
     * @return the TXN_DT
     */
    public Timestamp getTxnDt() {
        return (Timestamp) getAttributeInternal(TXNDT);
    }

    /**
     * Sets <code>value</code> as attribute value for TXN_DT using the alias name TxnDt.
     * @param value value to set the TXN_DT
     */
    public void setTxnDt(Timestamp value) {
        setAttributeInternal(TXNDT, value);
    }

    /**
     * Gets the attribute value for TXN_ID using the alias name TxnId.
     * @return the TXN_ID
     */
    public String getTxnId() {
        return (String) getAttributeInternal(TXNID);
    }

    /**
     * Sets <code>value</code> as attribute value for TXN_ID using the alias name TxnId.
     * @param value value to set the TXN_ID
     */
    public void setTxnId(String value) {
        setAttributeInternal(TXNID, value);
    }

    /**
     * Gets the attribute value for TXN_TAB_NM using the alias name TxnTabNm.
     * @return the TXN_TAB_NM
     */
    public String getTxnTabNm() {
        return (String) getAttributeInternal(TXNTABNM);
    }

    /**
     * Sets <code>value</code> as attribute value for TXN_TAB_NM using the alias name TxnTabNm.
     * @param value value to set the TXN_TAB_NM
     */
    public void setTxnTabNm(String value) {
        setAttributeInternal(TXNTABNM, value);
    }

    /**
     * Gets the attribute value for USR_ID_BY using the alias name UsrIdBy.
     * @return the USR_ID_BY
     */
    public Integer getUsrIdBy() {
        return (Integer) getAttributeInternal(USRIDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_BY using the alias name UsrIdBy.
     * @param value value to set the USR_ID_BY
     */
    public void setUsrIdBy(Integer value) {
        setAttributeInternal(USRIDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrNm.
     * @return the UsrNm
     */
    public String getUsrNm() {
        WfServAMImpl am = (WfServAMImpl)resolvElDC("WfServAMDataControl");
               Integer inputitm = null;
               String itmDesc = null;
               try{
               inputitm = getUsrIdBy();
               //x.getAttribute("TvouCoaId");
               }catch(NullPointerException npe){

               }
               if(inputitm!=null){
                   am.getAppSeczUrsVO2().setWhereClause(null);
                   am.getAppSeczUrsVO2().executeQuery();
                System.out.println("ITEM : "+inputitm);
               Row[] xx = am.getAppSeczUrsVO2().getFilteredRows("UsrId", inputitm);
               // Row [] xx=am.getLovInputItmId1().getFilteredRowsInRange("ItmId", inputitm);
               System.out.println("LENGHT :"+xx.length);
               if(xx.length>0){
               itmDesc= xx[0].getAttribute("UsrName").toString();
               }
               return itmDesc;
               }else{
                   return (String) getAttributeInternal(USRNM);
               }
        
    }
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrNm.
     * @param value value to set the  UsrNm
     */
    public void setUsrNm(String value) {
        setAttributeInternal(USRNM, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
