package tempvoulineinfoapp.model.views;

import java.sql.SQLException;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 31 12:20:48 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HeaderVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Coaid {
            public Object get(HeaderVORowImpl obj) {
                return obj.getCoaid();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setCoaid((Integer)value);
            }
        }
        ,
        Currsp {
            public Object get(HeaderVORowImpl obj) {
                return obj.getCurrsp();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setCurrsp((Integer)value);
            }
        }
        ,
        Currrate {
            public Object get(HeaderVORowImpl obj) {
                return obj.getCurrrate();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setCurrrate((Number)value);
            }
        }
        ,
        Cldid {
            public Object get(HeaderVORowImpl obj) {
                return obj.getCldid();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setCldid((String)value);
            }
        }
        ,
        Hoorgid {
            public Object get(HeaderVORowImpl obj) {
                return obj.getHoorgid();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setHoorgid((String)value);
            }
        }
        ,
        Orgid {
            public Object get(HeaderVORowImpl obj) {
                return obj.getOrgid();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setOrgid((String)value);
            }
        }
        ,
        LovLatestCurr1 {
            public Object get(HeaderVORowImpl obj) {
                return obj.getLovLatestCurr1();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CoaLovVO1 {
            public Object get(HeaderVORowImpl obj) {
                return obj.getCoaLovVO1();
            }

            public void put(HeaderVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(HeaderVORowImpl object);

        public abstract void put(HeaderVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int COAID = AttributesEnum.Coaid.index();
    public static final int CURRSP = AttributesEnum.Currsp.index();
    public static final int CURRRATE = AttributesEnum.Currrate.index();
    public static final int CLDID = AttributesEnum.Cldid.index();
    public static final int HOORGID = AttributesEnum.Hoorgid.index();
    public static final int ORGID = AttributesEnum.Orgid.index();
    public static final int LOVLATESTCURR1 = AttributesEnum.LovLatestCurr1.index();
    public static final int COALOVVO1 = AttributesEnum.CoaLovVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public HeaderVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Coaid.
     * @return the Coaid
     */
    public Integer getCoaid() {
        if(resolvEl("#{pageFlowScope.PARAM_COA_ID}")!= null)
            return Integer.parseInt(resolvEl("#{pageFlowScope.PARAM_COA_ID}").toString());
        return (Integer) getAttributeInternal(COAID);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Coaid.
     * @param value value to set the  Coaid
     */
    public void setCoaid(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Currsp.
     * @return the Currsp
     */
    public Integer getCurrsp() {
        System.out.println("curr_id_sp="+resolvEl("#{pageFlowScope.PARAM_CURR_ID_SP}"));
        if(resolvEl("#{pageFlowScope.PARAM_CURR_ID_SP}")!= null)
            return Integer.parseInt(resolvEl("#{pageFlowScope.PARAM_CURR_ID_SP}").toString());
        return (Integer) getAttributeInternal(CURRSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Currsp.
     * @param value value to set the  Currsp
     */
    public void setCurrsp(Integer value) {
        setAttributeInternal(CURRSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Currrate.
     * @return the Currrate
     */
    public Number getCurrrate() {
        if(resolvEl("#{pageFlowScope.PARAM_CURR_RATE}")!= null) {
            try {
                return new Number(resolvEl("#{pageFlowScope.PARAM_CURR_RATE}").toString());
            } catch (SQLException e) {System.out.println("error in row impl="+e);
            }
        }
        return (Number) getAttributeInternal(1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Currrate.
     * @param value value to set the  Currrate
     */
    public void setCurrrate(Number value) {
        setAttributeInternal(CURRRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Cldid.
     * @return the Cldid
     */
    public String getCldid() {
        if(resolvEl("#{pageFlowScope. GLBL_APP_CLD_ID}")!=null){System.out.println(resolvEl("#{pageFlowScope. GLBL_APP_CLD_ID}".toString()));
            return resolvEl("#{pageFlowScope. GLBL_APP_CLD_ID}".toString());}
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cldid.
     * @param value value to set the  Cldid
     */
    public void setCldid(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Hoorgid.
     * @return the Hoorgid
     */
    public String getHoorgid() {
        if(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}")!=null){System.out.println("ho="+resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}".toString()));
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}".toString());}
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Hoorgid.
     * @param value value to set the  Hoorgid
     */
    public void setHoorgid(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Orgid.
     * @return the Orgid
     */
    public String getOrgid() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!=null)
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}".toString());
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Orgid.
     * @param value value to set the  Orgid
     */
    public void setOrgid(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLatestCurr1.
     */
    public RowSet getLovLatestCurr1() {
        return (RowSet)getAttributeInternal(LOVLATESTCURR1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CoaLovVO1.
     */
    public RowSet getCoaLovVO1() {
        return (RowSet)getAttributeInternal(COALOVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
