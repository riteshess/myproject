package glbltickerapp.model.entities;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 06 15:18:52 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinGlblTkrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblFinTkrId {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrId();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrId((Integer)value);
            }
        }
        ,
        GlblFinTkrNm {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrNm();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrNm((String)value);
            }
        }
        ,
        GlblFinTkrShrtNm {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrShrtNm();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrShrtNm((String)value);
            }
        }
        ,
        GlblFinTkrNaTyp {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrNaTyp();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrNaTyp((String)value);
            }
        }
        ,
        GlblFinTkrDateTyp {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrDateTyp();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrDateTyp((String)value);
            }
        }
        ,
        GlblFinTkrTrend {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrTrend();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrTrend((String)value);
            }
        }
        ,
        GlblFinTkrIncOpBal {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrIncOpBal();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrIncOpBal((String)value);
            }
        }
        ,
        GlblFinTkrCntnsNaType {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrCntnsNaType();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrCntnsNaType((String)value);
            }
        }
        ,
        GlblFinTkrCntnsNaTypeFlg {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrCntnsNaTypeFlg();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrCntnsNaTypeFlg((String)value);
            }
        }
        ,
        GlblFinTkrActv {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrActv();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrActv((String)value);
            }
        }
        ,
        GlblFinTkrNwInst {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrNwInst();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrNwInst((String)value);
            }
        }
        ,
        GlblFinTkrUsedInApp {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getGlblFinTkrUsedInApp();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setGlblFinTkrUsedInApp((String)value);
            }
        }
        ,
        FinGlblTkrNaTyp {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getFinGlblTkrNaTyp();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FinGlblTkrTrend {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getFinGlblTkrTrend();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        FinGlblTkrVouTyp {
            public Object get(FinGlblTkrEOImpl obj) {
                return obj.getFinGlblTkrVouTyp();
            }

            public void put(FinGlblTkrEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FinGlblTkrEOImpl object);

        public abstract void put(FinGlblTkrEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GLBLFINTKRID = AttributesEnum.GlblFinTkrId.index();
    public static final int GLBLFINTKRNM = AttributesEnum.GlblFinTkrNm.index();
    public static final int GLBLFINTKRSHRTNM = AttributesEnum.GlblFinTkrShrtNm.index();
    public static final int GLBLFINTKRNATYP = AttributesEnum.GlblFinTkrNaTyp.index();
    public static final int GLBLFINTKRDATETYP = AttributesEnum.GlblFinTkrDateTyp.index();
    public static final int GLBLFINTKRTREND = AttributesEnum.GlblFinTkrTrend.index();
    public static final int GLBLFINTKRINCOPBAL = AttributesEnum.GlblFinTkrIncOpBal.index();
    public static final int GLBLFINTKRCNTNSNATYPE = AttributesEnum.GlblFinTkrCntnsNaType.index();
    public static final int GLBLFINTKRCNTNSNATYPEFLG = AttributesEnum.GlblFinTkrCntnsNaTypeFlg.index();
    public static final int GLBLFINTKRACTV = AttributesEnum.GlblFinTkrActv.index();
    public static final int GLBLFINTKRNWINST = AttributesEnum.GlblFinTkrNwInst.index();
    public static final int GLBLFINTKRUSEDINAPP = AttributesEnum.GlblFinTkrUsedInApp.index();
    public static final int FINGLBLTKRNATYP = AttributesEnum.FinGlblTkrNaTyp.index();
    public static final int FINGLBLTKRTREND = AttributesEnum.FinGlblTkrTrend.index();
    public static final int FINGLBLTKRVOUTYP = AttributesEnum.FinGlblTkrVouTyp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinGlblTkrEOImpl() {
    }

    /**
     * Gets the attribute value for GlblFinTkrId, using the alias name GlblFinTkrId.
     * @return the value of GlblFinTkrId
     */
    public Integer getGlblFinTkrId() {
        return (Integer)getAttributeInternal(GLBLFINTKRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrId.
     * @param value value to set the GlblFinTkrId
     */
    public void setGlblFinTkrId(Integer value) {
        setAttributeInternal(GLBLFINTKRID, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrNm, using the alias name GlblFinTkrNm.
     * @return the value of GlblFinTkrNm
     */
    public String getGlblFinTkrNm() {
        return (String)getAttributeInternal(GLBLFINTKRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrNm.
     * @param value value to set the GlblFinTkrNm
     */
    public void setGlblFinTkrNm(String value) {
        setAttributeInternal(GLBLFINTKRNM, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrShrtNm, using the alias name GlblFinTkrShrtNm.
     * @return the value of GlblFinTkrShrtNm
     */
    public String getGlblFinTkrShrtNm() {
        return (String)getAttributeInternal(GLBLFINTKRSHRTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrShrtNm.
     * @param value value to set the GlblFinTkrShrtNm
     */
    public void setGlblFinTkrShrtNm(String value) {
        setAttributeInternal(GLBLFINTKRSHRTNM, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrNaTyp, using the alias name GlblFinTkrNaTyp.
     * @return the value of GlblFinTkrNaTyp
     */
    public String getGlblFinTkrNaTyp() {
        return (String)getAttributeInternal(GLBLFINTKRNATYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrNaTyp.
     * @param value value to set the GlblFinTkrNaTyp
     */
    public void setGlblFinTkrNaTyp(String value) {
        setAttributeInternal(GLBLFINTKRNATYP, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrDateTyp, using the alias name GlblFinTkrDateTyp.
     * @return the value of GlblFinTkrDateTyp
     */
    public String getGlblFinTkrDateTyp() {
        return (String)getAttributeInternal(GLBLFINTKRDATETYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrDateTyp.
     * @param value value to set the GlblFinTkrDateTyp
     */
    public void setGlblFinTkrDateTyp(String value) {
        setAttributeInternal(GLBLFINTKRDATETYP, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrTrend, using the alias name GlblFinTkrTrend.
     * @return the value of GlblFinTkrTrend
     */
    public String getGlblFinTkrTrend() {
        return (String)getAttributeInternal(GLBLFINTKRTREND);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrTrend.
     * @param value value to set the GlblFinTkrTrend
     */
    public void setGlblFinTkrTrend(String value) {
        setAttributeInternal(GLBLFINTKRTREND, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrIncOpBal, using the alias name GlblFinTkrIncOpBal.
     * @return the value of GlblFinTkrIncOpBal
     */
    public String getGlblFinTkrIncOpBal() {
        return (String)getAttributeInternal(GLBLFINTKRINCOPBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrIncOpBal.
     * @param value value to set the GlblFinTkrIncOpBal
     */
    public void setGlblFinTkrIncOpBal(String value) {
        setAttributeInternal(GLBLFINTKRINCOPBAL, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrCntnsNaType, using the alias name GlblFinTkrCntnsNaType.
     * @return the value of GlblFinTkrCntnsNaType
     */
    public String getGlblFinTkrCntnsNaType() {
        return (String)getAttributeInternal(GLBLFINTKRCNTNSNATYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrCntnsNaType.
     * @param value value to set the GlblFinTkrCntnsNaType
     */
    public void setGlblFinTkrCntnsNaType(String value) {
        setAttributeInternal(GLBLFINTKRCNTNSNATYPE, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrCntnsNaTypeFlg, using the alias name GlblFinTkrCntnsNaTypeFlg.
     * @return the value of GlblFinTkrCntnsNaTypeFlg
     */
    public String getGlblFinTkrCntnsNaTypeFlg() {
        return (String)getAttributeInternal(GLBLFINTKRCNTNSNATYPEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrCntnsNaTypeFlg.
     * @param value value to set the GlblFinTkrCntnsNaTypeFlg
     */
    public void setGlblFinTkrCntnsNaTypeFlg(String value) {
        setAttributeInternal(GLBLFINTKRCNTNSNATYPEFLG, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrActv, using the alias name GlblFinTkrActv.
     * @return the value of GlblFinTkrActv
     */
    public String getGlblFinTkrActv() {
        return (String)getAttributeInternal(GLBLFINTKRACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrActv.
     * @param value value to set the GlblFinTkrActv
     */
    public void setGlblFinTkrActv(String value) {
        setAttributeInternal(GLBLFINTKRACTV, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrNwInst, using the alias name GlblFinTkrNwInst.
     * @return the value of GlblFinTkrNwInst
     */
    public String getGlblFinTkrNwInst() {
        return (String)getAttributeInternal(GLBLFINTKRNWINST);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrNwInst.
     * @param value value to set the GlblFinTkrNwInst
     */
    public void setGlblFinTkrNwInst(String value) {
        setAttributeInternal(GLBLFINTKRNWINST, value);
    }

    /**
     * Gets the attribute value for GlblFinTkrUsedInApp, using the alias name GlblFinTkrUsedInApp.
     * @return the value of GlblFinTkrUsedInApp
     */
    public String getGlblFinTkrUsedInApp() {
        return (String)getAttributeInternal(GLBLFINTKRUSEDINAPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblFinTkrUsedInApp.
     * @param value value to set the GlblFinTkrUsedInApp
     */
    public void setGlblFinTkrUsedInApp(String value) {
        setAttributeInternal(GLBLFINTKRUSEDINAPP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinGlblTkrNaTyp() {
        return (RowIterator)getAttributeInternal(FINGLBLTKRNATYP);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinGlblTkrTrend() {
        return (RowIterator)getAttributeInternal(FINGLBLTKRTREND);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinGlblTkrVouTyp() {
        return (RowIterator)getAttributeInternal(FINGLBLTKRVOUTYP);
    }

    /**
     * @param glblFinTkrId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer glblFinTkrId) {
        return new Key(new Object[]{glblFinTkrId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("glbltickerapp.model.entities.FinGlblTkrEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
           CallableStatement st = null;
           try {
               // 1. Create a JDBC CallabledStatement
               st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               // 2. Register the first bind variable for the return value
               st.registerOutParameter(1, sqlReturnType);
               if (bindVars != null) {
                   // 3. Loop over values for the bind variables passed in, if any
                   for (int z = 0; z < bindVars.length; z++) {
                       // 4. Set the value of user-supplied bind vars in the stmt
                       st.setObject(z + 2, bindVars[z]);
                   }
               }
               // 5. Set the value of user-supplied bind vars in the stmt
               st.executeUpdate();
               // 6. Return the value of the first bind variable
               return st.getObject(1);
           } catch (SQLException e) {
               //    int end = e.getMessage().indexOf("\n");
               throw new JboException(e);
           } finally {
               if (st != null) {
                   try {
                       // 7. Close the statement
                       st.close();
                   } catch (SQLException e) {
                       e.printStackTrace();


                   }
               }
           }
       }
    protected void create(AttributeList attributeList) {
        BigDecimal tkrid = (BigDecimal)callStoredFunction(Types.NUMERIC, "FIN.FN_GEN_FIN_GLBL_TKR_ID", null);
        if (tkrid != null) {
            Integer tkr = Integer.valueOf(tkrid.intValue());
            setGlblFinTkrId(tkr);
        }
         
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE) {
                   Number finTkrId = getGlblFinTkrId();
                   String usedIn = (String)callStoredFunction(Types.VARCHAR, "FIN.fn_is_tkr_used_in_app(?)", new Object[] {finTkrId});
                   if (usedIn != null) {
                       setGlblFinTkrUsedInApp(usedIn);
                   }
               }
        super.doDML(operation, e);
    }
}
