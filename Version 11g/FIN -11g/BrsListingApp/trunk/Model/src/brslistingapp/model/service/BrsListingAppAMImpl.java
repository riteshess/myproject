package brslistingapp.model.service;


import brslistingapp.model.service.common.BrsListingAppAM;
import brslistingapp.model.view.CoaIdLOVImpl;

import brslistingapp.model.view.GlLineInstrumntVOImpl;

import java.math.BigDecimal;

import java.sql.CallableStatement;


import java.sql.SQLException;


import java.sql.Types;

import java.text.DateFormat;

import java.text.SimpleDateFormat;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;

import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectCategoryManagerImpl;
import oracle.jbo.server.ViewObjectImpl;

import oracle.sql.DATE;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 09 11:57:08 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BrsListingAppAMImpl extends ApplicationModuleImpl implements BrsListingAppAM {
    /**
     * This is the default constructor (do not remove).
     */

    String outParam = null;

    public BrsListingAppAMImpl() {
    }

    /**
     * Container's getter for GlLineInstrumnt1.
     * @return GlLineInstrumnt1
     */
    public GlLineInstrumntVOImpl getGlLineInstrumnt1() {
        return (GlLineInstrumntVOImpl)findViewObject("GlLineInstrumnt1");
    }

    /**
     * Container's getter for BrsListingSearch1.
     * @return BrsListingSearch1
     */
    public ViewObjectImpl getBrsListingSearch1() {
        return (ViewObjectImpl)findViewObject("BrsListingSearch1");
    }


    /**
     * Container's getter for BankIdLOV.
     * @return BankIdLOV
     */
    public ViewObjectImpl getBankIdLOV() {
        return (ViewObjectImpl)findViewObject("BankIdLOV");
    }

    /**
     * Container's getter for CoaIdLOV.
     * @return CoaIdLOV
     */
    public ViewObjectImpl getCoaIdLOV() {
        return (ViewObjectImpl)findViewObject("CoaIdLOV");
    }

    /**
     * Container's getter for CurrLOV.
     * @return CurrLOV
     */
    public ViewObjectImpl getCurrLOV() {
        return (ViewObjectImpl)findViewObject("CurrLOV");
    }

    /**
     * Container's getter for GlSubTypeLOV.
     * @return GlSubTypeLOV
     */
    public ViewObjectImpl getGlSubTypeLOV() {
        return (ViewObjectImpl)findViewObject("GlSubTypeLOV");
    }

    /**
     * Container's getter for GlTypeLOV.
     * @return GlTypeLOV
     */
    public ViewObjectImpl getGlTypeLOV() {
        return (ViewObjectImpl)findViewObject("GlTypeLOV");
    }

    /**
     * Container's getter for InstrTypeLOV.
     * @return InstrTypeLOV
     */
    public ViewObjectImpl getInstrTypeLOV() {
        return (ViewObjectImpl)findViewObject("InstrTypeLOV");
    }

    /**
     * Container's getter for OrgLOV.
     * @return OrgLOV
     */
    public ViewObjectImpl getOrgLOV() {
        return (ViewObjectImpl)findViewObject("OrgLOV");
    }

    /**
     * Container's getter for StatusLOV.
     * @return StatusLOV
     */
    public ViewObjectImpl getStatusLOV() {
        return (ViewObjectImpl)findViewObject("StatusLOV");
    }

    public void search() {
        ViewObjectImpl brsListingSearch1 = this.getBrsListingSearch1();
        Row currentRow = brsListingSearch1.getCurrentRow();
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindCoaName", null);

        if (currentRow != null) {

            String doctxnid = null;
            if (currentRow.getAttribute("DocTxnIdDisp") != null) {
                doctxnid = currentRow.getAttribute("DocTxnIdDisp").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVouhcerId", doctxnid);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVouhcerId", null);

            // Timestamp glvoudtfrm=null;
            Date glvoudtfrm = null;
            if (currentRow.getAttribute("GlVouDtFrm") != null) {
                glvoudtfrm = (Date)currentRow.getAttribute("GlVouDtFrm");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateFrm", glvoudtfrm);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateFrm", null);

            // Timestamp glvoudtto=null;
            Date glvoudtto = null;
            if (currentRow.getAttribute("GlVouDtTo") != null) {
                glvoudtto = (Date)currentRow.getAttribute("GlVouDtTo");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateTo", glvoudtto);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateTo", null);

            Integer gltype = null;
            if (currentRow.getAttribute("GlTypeId") != null) {
                gltype = (Integer)currentRow.getAttribute("GlTypeId");
                System.out.println("GlTypeId=" + gltype);
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindTypeId", gltype);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindTypeId", null);

            Integer glsubtype = null;
            if (currentRow.getAttribute("GlSubTypeId") != null) {
                glsubtype = (Integer)currentRow.getAttribute("GlSubTypeId");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindSubTypeId", glsubtype);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindSubTypeId", null);

            String coaname = null;
            if (currentRow.getAttribute("CoaNm") != null) {
                coaname = currentRow.getAttribute("CoaNm").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindCoaName", coaname);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindCoaName", null);

            String bnkcoanm = null;
            if (currentRow.getAttribute("BankCoaNm") != null) {
                bnkcoanm = currentRow.getAttribute("BankCoaNm").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindBankCoaName", bnkcoanm);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindBankCoaName", null);

            String curr = null;
            if (currentRow.getAttribute("Curreny") != null) {
                curr = currentRow.getAttribute("Curreny").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindCurrency", curr);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindCurrency", null);

            String glinestrnm = null;
            if (currentRow.getAttribute("GlInstrmntNm") != null) {
                glinestrnm = currentRow.getAttribute("GlInstrmntNm").toString().trim();
                System.out.println("GLInstrmntNm=" + glinestrnm);
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrmntNm", glinestrnm);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrmntNm", null);

            Integer glinsttyp = null;
            if (currentRow.getAttribute("GlInstrmntTyp") != null) {
                glinsttyp = (Integer)currentRow.getAttribute("GlInstrmntTyp");
                System.out.println("GlInstrmntTyp=" + glinsttyp);
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrType", glinsttyp);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrType", null);

            Number amtfrm = null;
            if (currentRow.getAttribute("GlAmtSpFrom") != null) {
                amtfrm = (Number)currentRow.getAttribute("GlAmtSpFrom");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtFrom", amtfrm);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtFrom", null);

            Number amtto = null;
            if (currentRow.getAttribute("GlAmtSpTo") != null) {
                amtto = (Number)currentRow.getAttribute("GlAmtSpTo");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtTo", amtto);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtTo", null);

            //  Timestamp instdtfrm=null;
            Date instdtfrm = null;
            if (currentRow.getAttribute("GlInstrmntDtFrm") != null) {
                instdtfrm = (Date)currentRow.getAttribute("GlInstrmntDtFrm");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateFrom", instdtfrm);
                // System.out.println("inst frm date---"+instdtfrm);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateFrom", null);

            Date instdtto = null;
            if (currentRow.getAttribute("GlInstrmntDtTo") != null) {
                instdtto = (Date)currentRow.getAttribute("GlInstrmntDtTo");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateTo", instdtto);
                //System.out.println("inst to date---"+instdtto);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateTo", null);

            Integer status = null;
            if (currentRow.getAttribute("Status") != null) {
                status = (Integer)currentRow.getAttribute("Status");
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindStatus", status);
            } else
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindStatus", null);

            /* if(currentRow.getAttribute("InstrumentNoFrm")!=null){
                String Nofrm = currentRow.getAttribute("InstrumentNoFrm").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoFrom", Nofrm);
                System.out.println("Frm No.---"+Nofrm);
            }else
            getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoFrom", null);

            if(currentRow.getAttribute("InstrumentNoTo")!=null){
                String NoTo = currentRow.getAttribute("InstrumentNoTo").toString();
                getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoTo", NoTo);
                System.out.println("No To---"+NoTo);
            }else
            getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoTo", null);*/

            getGlLineInstrumnt1().executeQuery();

        }

    }


    public void resetbutton() {
        ViewObjectImpl brsListingSearch1 = this.getBrsListingSearch1();
        Row currentRow = brsListingSearch1.getCurrentRow();
        currentRow.setAttribute("DocTxnIdDisp", null);
        currentRow.setAttribute("GlVouDtFrm", null);
        currentRow.setAttribute("GlVouDtTo", null);
        currentRow.setAttribute("GlTypeId", null);
        currentRow.setAttribute("GlSubTypeId", null);
        currentRow.setAttribute("CoaNm", null);
        currentRow.setAttribute("BankCoaNm", null);
        currentRow.setAttribute("Curreny", null);
        currentRow.setAttribute("GlInstrmntNm", null);
        currentRow.setAttribute("GlInstrmntTyp", null);
        currentRow.setAttribute("GlInstrmntDtFrm", null);
        currentRow.setAttribute("GlInstrmntDtTo", null);
        currentRow.setAttribute("GlAmtSpFrom", null);
        currentRow.setAttribute("GlAmtSpTo", null);
        currentRow.setAttribute("Status", null);
        currentRow.setAttribute("InstrumentNoFrm", null);
        currentRow.setAttribute("InstrumentNoTo", null);
        brsListingSearch1.executeQuery();

        getGlLineInstrumnt1().setNamedWhereClauseParam("BindVouhcerId", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateFrm", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindVoucherDateTo", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindTypeId", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindSubTypeId", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindCoaName", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindBankCoaName", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindCurrency", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrmntNm", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrType", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtFrom", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindAmtTo", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateFrom", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrDateTo", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindStatus", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoFrom", null);
        getGlLineInstrumnt1().setNamedWhereClauseParam("BindInstrumentNoTo", null);
        getGlLineInstrumnt1().executeQuery();


    }


    public Key getCurrentRowKey() {
        return this.getGlLineInstrumnt1().getCurrentRow().getKey();
    }

    public void setCurrentRow(Key key) {
        this.getGlLineInstrumnt1().executeQuery();
        Row r = this.getGlLineInstrumnt1().getRow(key);
        System.out.println("row get=" + r);
        if (r != null)
            System.out.println("Key of this row=" + r.getKey());
        this.getGlLineInstrumnt1().setCurrentRow(r);
    }

    private String tmpinstrntNo;
    private Date tmpinstrDt;
    private Date tmpstatusDate;

    public void getValue() {
        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        Row curRow = glInstrmnt.getCurrentRow();

        tmpinstrntNo = (curRow.getAttribute("GlInstrmntNo").toString());

        tmpinstrDt = (Date)curRow.getAttribute("GlInstrmntDt");
        tmpstatusDate = (Date)curRow.getAttribute("GlInstrmntStatDt");
    }

    public void resetvalue() {
        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        Row curRow = glInstrmnt.getCurrentRow();
        System.out.println("instr no--" + tmpinstrntNo);
        curRow.setAttribute("GlInstrmntNo", tmpinstrntNo);
        System.out.println("instr no--" + tmpinstrDt);
        curRow.setAttribute("GlInstrmntDt", tmpinstrDt);
        curRow.setAttribute("GlInstrmntStatDt", tmpstatusDate);

    }


    public String callmethod(Integer status) {
        String rsFlag = null;
        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        Row curRow = glInstrmnt.getCurrentRow();

        Integer glChqSlNo = Integer.parseInt(curRow.getAttribute("GlChqSlNo").toString());
        String vouId = curRow.getAttribute("GlVouId").toString();
        // Integer uid = Integer.parseInt(curRow.getAttribute("UsrIdCreate").toString());
        Integer uid = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        Integer clrncTyp = Integer.parseInt(curRow.getAttribute("GlInstrmntStat").toString());
        String instrntNo = (curRow.getAttribute("GlInstrmntNo").toString());
        Integer instId = Integer.parseInt(curRow.getAttribute("GlApplInstId").toString());
        Date instrDt = (Date)curRow.getAttribute("GlInstrmntDt");
        Date statusDate = (Date)curRow.getAttribute("GlInstrmntStatDt");
        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String hoorg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");


        /**Function is called in case of Status is changed - 8-03-2013"*/
        if (clrncTyp == 110 || clrncTyp == 186) { //for reissue/revalidate
            instrDt = (Date)curRow.getAttribute("GlInstrmntDt");
        } else if (clrncTyp == 108) { // for bounced
            System.out.println("in bounce status date--" + statusDate);
            instrDt = statusDate;
        } else if (clrncTyp == 184) { // for cancel
            // DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
            //    Date dt=new Date();
            //System.out.println("in cancel status date--"+dt);
            //instrDt = (Date)dt.getCurrentDate();
            System.out.println("in cancel status date--" + statusDate);
            instrDt = statusDate;
        } else if (clrncTyp == 109) { // for cleared
            //DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
            //Date dt=new Date();
            System.out.println("in clear status date--" + statusDate);
            instrDt = statusDate;
        }
        System.out.println("Parameters---> vouId--" + vouId + "uid--" + uid + "cltyp-->" + clrncTyp + "InsNo--" +
                           instrntNo + "InsDt---" + instrDt + "sloc--" + SlocId + "org--" + org_id + "cld--" + cld_id +
                           " instId---" + instId + "glchkSlno---" + glChqSlNo);
        System.out.println("Here");

        rsFlag =
                (String)callStoredFunction(Types.VARCHAR, "FIN.FN_REVERSE_VOU(?,?,?,?,?,?,?,?,?,?,?)", new Object[] { cld_id,
                                                                                                                      SlocId,
                                                                                                                      hoorg_id,
                                                                                                                      org_id,
                                                                                                                      instId,
                                                                                                                      vouId,
                                                                                                                      uid,
                                                                                                                      clrncTyp,
                                                                                                                      instrntNo,
                                                                                                                      instrDt,
                                                                                                                      glChqSlNo });
        System.out.println("Output result flag is-->" + rsFlag);

        return rsFlag;

    }

    /**Function Call to check that voucher exist in adjustment or not 23-APR-14  */

    public String chekVoucher() {
        String Flag = null;
        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        Row curRow = glInstrmnt.getCurrentRow();
        String vouId = curRow.getAttribute("GlVouId").toString();
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String hoorg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        Integer InstId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_INST_ID}").toString());

        System.out.println("Parameters---> vouId--" + vouId + "  sloc--" + SlocId + " hoorg--" + hoorg_id + " cld--" +
                           cld_id + " instId---" + InstId);

        Flag =
(String)callStoredFunction(Types.VARCHAR, "FIN.fn_ins_in_tvouadj_chk(?,?,?,?,?)", new Object[] { cld_id, SlocId,
                                                                                                 hoorg_id, vouId,
                                                                                                 InstId });


        System.out.println("Output result flag is-->" + Flag);

        return Flag;

    }


    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }


    }

    /** Function for checking , reversal of a voucher. **/
    public String chkRevVouStatus() {
        String rtnChkRevStatus = null;

        // Getting page flow value for functions params.

        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        String vouId = glInstrmnt.getCurrentRow().getAttribute("GlVouId").toString();
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String cldIid = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String hoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");


        System.out.println("cld id : " + cldIid + "sloc Id : " + slocId + " hoOrgId :-" + hoOrgId + " vou id " + vouId);

        //calling function FN_REVERSE_VOCUHER_ALLOWED.

        rtnChkRevStatus =
                (String)callStoredFunction(Types.VARCHAR, "FIN.FN_VOU_REVERSAL_ALLOWED(?,?,?,?)", new Object[] { cldIid,
                                                                                                                 slocId,
                                                                                                                 hoOrgId,
                                                                                                                 vouId });
        System.out.println("Returned Function param.............."+rtnChkRevStatus);
        return rtnChkRevStatus;
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    public String getVouId() {
        String vou = null;
        if (this.getGlLineInstrumnt1().getCurrentRow().getAttribute("GlVouId") != null)
            vou = (String)this.getGlLineInstrumnt1().getCurrentRow().getAttribute("GlVouId");
        return vou;
    }

    public String getRevVouId() {
        String rVou = null;
        if (this.getGlLineInstrumnt1().getCurrentRow().getAttribute("GlRevVouId") != null)
            rVou = this.getGlLineInstrumnt1().getCurrentRow().getAttribute("GlRevVouId").toString();
        System.out.println("reverse vouvher-++++>>>>" + rVou);
        return rVou;
    }
    /*Method To  Get value from Global Parameter for Task Flow*/

    public void setinitialvariables() {
        GlLineInstrumntVOImpl gllineinst = this.getGlLineInstrumnt1();
        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        String hoorg_id = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");

        gllineinst.setNamedWhereClauseParam("BindCldId", cld_id);
        gllineinst.setNamedWhereClauseParam("BindSlocId", SlocId);
        gllineinst.setNamedWhereClauseParam("BindOrgId", org_id);
        gllineinst.setNamedWhereClauseParam("BindHoOrgId", hoorg_id);
        gllineinst.setNamedWhereClauseParam("BindCoaName", "^");
        gllineinst.executeQuery();
    }

    public Integer setSysDate() {
        ViewObjectImpl brssrch = this.getBrsListingSearch1();
        Object glfrmdt = brssrch.getCurrentRow().getAttribute("GlInstrmntDtFrm");
        Object gltodt = brssrch.getCurrentRow().getAttribute("GlInstrmntDtTo");
        if (glfrmdt != null && gltodt != null) {
            brssrch.getCurrentRow().setAttribute("ChqDateFrmTrans", glfrmdt);
            brssrch.getCurrentRow().setAttribute("ChqDateToTrans", gltodt);
            return 1;
        } else if (glfrmdt == null && gltodt != null) {

            brssrch.getCurrentRow().setAttribute("ChqDateFrmTrans", gltodt);
            brssrch.getCurrentRow().setAttribute("ChqDateToTrans", gltodt);
            return 1;

        } else if (glfrmdt != null && gltodt == null) {
            brssrch.getCurrentRow().setAttribute("ChqDateFrmTrans", glfrmdt);
            brssrch.getCurrentRow().setAttribute("ChqDateToTrans", glfrmdt);
            return 1;
        } else {
            brssrch.getCurrentRow().setAttribute("ChqDateFrmTrans", new Timestamp(System.currentTimeMillis()));
            brssrch.getCurrentRow().setAttribute("ChqDateToTrans", new Timestamp(System.currentTimeMillis()));
            return 1;
        }
    }

    public void chequePrintCancelpop() {
        ViewObjectImpl brssrch = this.getBrsListingSearch1();
        Row currentRow = brssrch.getCurrentRow();
        currentRow.setAttribute("GlInstrmntDtFrm", null);
        currentRow.setAttribute("GlInstrmntDtTo", null);
        currentRow.setAttribute("CoaNm", null);
        currentRow.setAttribute("Curreny", null);
        currentRow.setAttribute("GlInstrmntTyp", null);
        currentRow.setAttribute("GlAmtSpFrom", null);
        currentRow.setAttribute("GlAmtSpTo", null);
        currentRow.setAttribute("Status", null);
        currentRow.setAttribute("GlVouDtFrm", null);
        currentRow.setAttribute("GlVouDtTo", null);
        currentRow.setAttribute("BankCoaNm", null);
        currentRow.setAttribute("DocTxnIdDisp", null);
        brssrch.executeQuery();
    }

    public String checkStatusDate(Date newdt) {
        ViewObject glInstrmnt = this.getGlLineInstrumnt1();
        Row curRow = glInstrmnt.getCurrentRow();
        // Date statusDate = (Date)curRow.getAttribute("GlInstrmntStatDt");
        Date indt = (Date)curRow.getAttribute("GlInstrmntDt");
        Date instrDt = new Date(indt.dateValue());
        //DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date dt = new Date();
        Date statusdt = new Date(newdt.dateValue());
        Integer clrncTyp = Integer.parseInt(curRow.getAttribute("GlInstrmntStat").toString());
        if (clrncTyp == 109 || clrncTyp == 108 || clrncTyp == 184) {
            if (statusdt.compareTo(dt.getCurrentDate()) > 0) {
                System.out.println("in ycheck SYS date---" + dt.getCurrentDate());
                System.out.println("in ycheck instrumnt date--" + instrDt);
                System.out.println("in ycheck status date---" + statusdt);
                return "y";
            } else if (statusdt.compareTo(instrDt) < 0) {
                System.out.println("in ycheck instrumnt date--" + instrDt);
                System.out.println("in ycheck status date---" + statusdt);
                return "y";
            } else {
                System.out.println("in check status date---" + statusdt);
                return "n";
            }
        }
        System.out.println("out of check status date---" + statusdt);
        return "n";
    }

    public void setOutParam(String outParam) {
        this.outParam = outParam;
    }

    public String getOutParam() {
        return outParam;
    }

    public void setTmpinstrntNo(String tmpinstrntNo) {
        this.tmpinstrntNo = tmpinstrntNo;
    }

    public String getTmpinstrntNo() {
        return tmpinstrntNo;
    }

    public void setTmpinstrDt(Date tmpinstrDt) {
        this.tmpinstrDt = tmpinstrDt;
    }

    public Date getTmpinstrDt() {
        return tmpinstrDt;
    }

    public void setTmpstatusDate(Date tmpstatusDate) {
        this.tmpstatusDate = tmpstatusDate;
    }

    public Date getTmpstatusDate() {
        return tmpstatusDate;
    }
}

