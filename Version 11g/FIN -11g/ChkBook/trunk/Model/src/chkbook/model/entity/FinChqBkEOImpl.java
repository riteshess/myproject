package chkbook.model.entity;

import chkbook.model.module.ChkBookAMImpl;

import java.math.BigDecimal;

import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import java.sql.CallableStatement;
import java.sql.SQLException;


import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jun 30 16:34:33 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinChqBkEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ChqBkSlocId {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlocId();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlocId((Integer)value);
            }
        }
        ,
        ChqBkBnkId {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkBnkId();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkBnkId((Integer)value);
            }
        }
        ,
        ChqBkSlId {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlId();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlId((BigDecimal)value);
            }
        }
        ,
        ChqBkStrtSl {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkStrtSl();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkStrtSl((Integer)value);
            }
        }
        ,
        ChqBkStrtSlLpad {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkStrtSlLpad();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkStrtSlLpad((String)value);
            }
        }
        ,
        ChqBkStrtSlRpad {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkStrtSlRpad();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkStrtSlRpad((String)value);
            }
        }
        ,
        ChqBkEndSl {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkEndSl();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkEndSl((Integer)value);
            }
        }
        ,
        ChqBkTyp {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkTyp();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkTyp((String)value);
            }
        }
        ,
        ChqBkEntId {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkEntId();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkEntId((Long)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ChqBkSlExt {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlExt();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlExt((String)value);
            }
        }
        ,
        ChqBkSlExtChar {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlExtChar();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlExtChar((String)value);
            }
        }
        ,
        ChqBkSlPad {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlPad();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlPad((String)value);
            }
        }
        ,
        ChqBkSlLpadLen {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlLpadLen();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlLpadLen((Integer)value);
            }
        }
        ,
        ChqBkSlLpadChar {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlLpadChar();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlLpadChar((String)value);
            }
        }
        ,
        ChqBkSlRpadLen {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlRpadLen();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlRpadLen((Integer)value);
            }
        }
        ,
        ChqBkSlRpadChar {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkSlRpadChar();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkSlRpadChar((String)value);
            }
        }
        ,
        ChqBkNoOfChq {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getChqBkNoOfChq();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setChqBkNoOfChq((Integer)value);
            }
        }
        ,
        FinChqBkSlno {
            public Object get(FinChqBkEOImpl obj) {
                return obj.getFinChqBkSlno();
            }

            public void put(FinChqBkEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FinChqBkEOImpl object);

        public abstract void put(FinChqBkEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CHQBKSLOCID = AttributesEnum.ChqBkSlocId.index();
    public static final int CHQBKBNKID = AttributesEnum.ChqBkBnkId.index();
    public static final int CHQBKSLID = AttributesEnum.ChqBkSlId.index();
    public static final int CHQBKSTRTSL = AttributesEnum.ChqBkStrtSl.index();
    public static final int CHQBKSTRTSLLPAD = AttributesEnum.ChqBkStrtSlLpad.index();
    public static final int CHQBKSTRTSLRPAD = AttributesEnum.ChqBkStrtSlRpad.index();
    public static final int CHQBKENDSL = AttributesEnum.ChqBkEndSl.index();
    public static final int CHQBKTYP = AttributesEnum.ChqBkTyp.index();
    public static final int CHQBKENTID = AttributesEnum.ChqBkEntId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CHQBKSLEXT = AttributesEnum.ChqBkSlExt.index();
    public static final int CHQBKSLEXTCHAR = AttributesEnum.ChqBkSlExtChar.index();
    public static final int CHQBKSLPAD = AttributesEnum.ChqBkSlPad.index();
    public static final int CHQBKSLLPADLEN = AttributesEnum.ChqBkSlLpadLen.index();
    public static final int CHQBKSLLPADCHAR = AttributesEnum.ChqBkSlLpadChar.index();
    public static final int CHQBKSLRPADLEN = AttributesEnum.ChqBkSlRpadLen.index();
    public static final int CHQBKSLRPADCHAR = AttributesEnum.ChqBkSlRpadChar.index();
    public static final int CHQBKNOOFCHQ = AttributesEnum.ChqBkNoOfChq.index();
    public static final int FINCHQBKSLNO = AttributesEnum.FinChqBkSlno.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinChqBkEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("chkbook.model.entity.FinChqBkEO");
    }

    /**
     * Gets the attribute value for ChqBkSlocId, using the alias name ChqBkSlocId.
     * @return the value of ChqBkSlocId
     */
    public Integer getChqBkSlocId() {
        return (Integer)getAttributeInternal(CHQBKSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlocId.
     * @param value value to set the ChqBkSlocId
     */
    public void setChqBkSlocId(Integer value) {
        setAttributeInternal(CHQBKSLOCID, value);
    }

    /**
     * Gets the attribute value for ChqBkBnkId, using the alias name ChqBkBnkId.
     * @return the value of ChqBkBnkId
     */
    public Integer getChqBkBnkId() {
        return (Integer)getAttributeInternal(CHQBKBNKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkBnkId.
     * @param value value to set the ChqBkBnkId
     */
    public void setChqBkBnkId(Integer value) {
        setAttributeInternal(CHQBKBNKID, value);
    }

    /**
     * Gets the attribute value for ChqBkSlId, using the alias name ChqBkSlId.
     * @return the value of ChqBkSlId
     */
    public BigDecimal getChqBkSlId() {
        return (BigDecimal)getAttributeInternal(CHQBKSLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlId.
     * @param value value to set the ChqBkSlId
     */
    public void setChqBkSlId(BigDecimal value) {
        setAttributeInternal(CHQBKSLID, value);
    }

    /**
     * Gets the attribute value for ChqBkStrtSl, using the alias name ChqBkStrtSl.
     * @return the value of ChqBkStrtSl
     */
    public Integer getChqBkStrtSl() {
        return (Integer)getAttributeInternal(CHQBKSTRTSL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkStrtSl.
     * @param value value to set the ChqBkStrtSl
     */
    public void setChqBkStrtSl(Integer value) {
        setAttributeInternal(CHQBKSTRTSL, value);
    }

    /**
     * Gets the attribute value for ChqBkStrtSlLpad, using the alias name ChqBkStrtSlLpad.
     * @return the value of ChqBkStrtSlLpad
     */
    public String getChqBkStrtSlLpad() {
        return (String)getAttributeInternal(CHQBKSTRTSLLPAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkStrtSlLpad.
     * @param value value to set the ChqBkStrtSlLpad
     */
    public void setChqBkStrtSlLpad(String value) {
        setAttributeInternal(CHQBKSTRTSLLPAD, value);
    }

    /**
     * Gets the attribute value for ChqBkStrtSlRpad, using the alias name ChqBkStrtSlRpad.
     * @return the value of ChqBkStrtSlRpad
     */
    public String getChqBkStrtSlRpad() {
        return (String)getAttributeInternal(CHQBKSTRTSLRPAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkStrtSlRpad.
     * @param value value to set the ChqBkStrtSlRpad
     */
    public void setChqBkStrtSlRpad(String value) {
        setAttributeInternal(CHQBKSTRTSLRPAD, value);
    }

    /**
     * Gets the attribute value for ChqBkEndSl, using the alias name ChqBkEndSl.
     * @return the value of ChqBkEndSl
     */
    public Integer getChqBkEndSl() {
        return (Integer)getAttributeInternal(CHQBKENDSL);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkEndSl.
     * @param value value to set the ChqBkEndSl
     */
    public void setChqBkEndSl(Integer value) {
        setAttributeInternal(CHQBKENDSL, value);
    }

    /**
     * Gets the attribute value for ChqBkTyp, using the alias name ChqBkTyp.
     * @return the value of ChqBkTyp
     */
    public String getChqBkTyp() {
        return (String)getAttributeInternal(CHQBKTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkTyp.
     * @param value value to set the ChqBkTyp
     */
    public void setChqBkTyp(String value) {
        setAttributeInternal(CHQBKTYP, value);
    }

    /**
     * Gets the attribute value for ChqBkEntId, using the alias name ChqBkEntId.
     * @return the value of ChqBkEntId
     */
    public Long getChqBkEntId() {
        return (Long)getAttributeInternal(CHQBKENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkEntId.
     * @param value value to set the ChqBkEntId
     */
    public void setChqBkEntId(Long value) {
        setAttributeInternal(CHQBKENTID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for ChqBkSlExt, using the alias name ChqBkSlExt.
     * @return the value of ChqBkSlExt
     */
    public String getChqBkSlExt() {
        return (String)getAttributeInternal(CHQBKSLEXT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlExt.
     * @param value value to set the ChqBkSlExt
     */
    public void setChqBkSlExt(String value) {
        setAttributeInternal(CHQBKSLEXT, value);
    }

    /**
     * Gets the attribute value for ChqBkSlExtChar, using the alias name ChqBkSlExtChar.
     * @return the value of ChqBkSlExtChar
     */
    public String getChqBkSlExtChar() {
        return (String)getAttributeInternal(CHQBKSLEXTCHAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlExtChar.
     * @param value value to set the ChqBkSlExtChar
     */
    public void setChqBkSlExtChar(String value) {
        setAttributeInternal(CHQBKSLEXTCHAR, value);
    }

    /**
     * Gets the attribute value for ChqBkSlPad, using the alias name ChqBkSlPad.
     * @return the value of ChqBkSlPad
     */
    public String getChqBkSlPad() {
        return (String)getAttributeInternal(CHQBKSLPAD);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlPad.
     * @param value value to set the ChqBkSlPad
     */
    public void setChqBkSlPad(String value) {
        setAttributeInternal(CHQBKSLPAD, value);
    }

    /**
     * Gets the attribute value for ChqBkSlLpadLen, using the alias name ChqBkSlLpadLen.
     * @return the value of ChqBkSlLpadLen
     */
    public Integer getChqBkSlLpadLen() {
        return (Integer)getAttributeInternal(CHQBKSLLPADLEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlLpadLen.
     * @param value value to set the ChqBkSlLpadLen
     */
    public void setChqBkSlLpadLen(Integer value) {
        setAttributeInternal(CHQBKSLLPADLEN, value);
    }

    /**
     * Gets the attribute value for ChqBkSlLpadChar, using the alias name ChqBkSlLpadChar.
     * @return the value of ChqBkSlLpadChar
     */
    public String getChqBkSlLpadChar() {
        return (String)getAttributeInternal(CHQBKSLLPADCHAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlLpadChar.
     * @param value value to set the ChqBkSlLpadChar
     */
    public void setChqBkSlLpadChar(String value) {
        setAttributeInternal(CHQBKSLLPADCHAR, value);
    }

    /**
     * Gets the attribute value for ChqBkSlRpadLen, using the alias name ChqBkSlRpadLen.
     * @return the value of ChqBkSlRpadLen
     */
    public Integer getChqBkSlRpadLen() {
        return (Integer)getAttributeInternal(CHQBKSLRPADLEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlRpadLen.
     * @param value value to set the ChqBkSlRpadLen
     */
    public void setChqBkSlRpadLen(Integer value) {
        setAttributeInternal(CHQBKSLRPADLEN, value);
    }

    /**
     * Gets the attribute value for ChqBkSlRpadChar, using the alias name ChqBkSlRpadChar.
     * @return the value of ChqBkSlRpadChar
     */
    public String getChqBkSlRpadChar() {
        return (String)getAttributeInternal(CHQBKSLRPADCHAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkSlRpadChar.
     * @param value value to set the ChqBkSlRpadChar
     */
    public void setChqBkSlRpadChar(String value) {
        setAttributeInternal(CHQBKSLRPADCHAR, value);
    }

    /**
     * Gets the attribute value for ChqBkNoOfChq, using the alias name ChqBkNoOfChq.
     * @return the value of ChqBkNoOfChq
     */
    public Integer getChqBkNoOfChq() {
        return (Integer)getAttributeInternal(CHQBKNOOFCHQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for ChqBkNoOfChq.
     * @param value value to set the ChqBkNoOfChq
     */
    public void setChqBkNoOfChq(Integer value) {
        setAttributeInternal(CHQBKNOOFCHQ, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinChqBkSlno() {
        return (RowIterator)getAttributeInternal(FINCHQBKSLNO);
    }


    /**
     * @param chqBkSlocId key constituent
     * @param chqBkBnkId key constituent
     * @param chqBkSlId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer chqBkSlocId, Integer chqBkBnkId, BigDecimal chqBkSlId) {
        return new Key(new Object[]{chqBkSlocId, chqBkBnkId, chqBkSlId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        Integer  SlocId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
                        setUsrIdCreate(UserId);
                        setChqBkSlocId(SlocId);
        super.create(attributeList);
    }
    public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }
    private static int NUMBER = Types.NUMERIC;
        private static int DATE = Types.DATE;
        private static int STRING = Types.VARCHAR;
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt,
                                        Object[] bindVars) {
      CallableStatement st = null;
      try {
        // 1. Create a JDBC CallabledStatement  
          
        ChkBookAMImpl am = (ChkBookAMImpl)resolvElDC("ChkBookAMDataControl");
        st = am.getDBTransaction().createCallableStatement(
               "begin ? := "+stmt+";end;",0);
        // 2. Register the first bind variable for the return value
        st.registerOutParameter(1, sqlReturnType);
        if (bindVars != null) {
          // 3. Loop over values for the bind variables passed in, if any
          for (int z = 0; z < bindVars.length; z++) {
            // 4. Set the value of user-supplied bind vars in the stmt
            st.setObject(z + 2, bindVars[z]);
          }
        }
        // 5. Set the value of user-supplied bind vars in the stmt
        st.executeUpdate();
        // 6. Return the value of the first bind variable
        return st.getObject(1);
      }
      catch (SQLException e) {
        throw new JboException(e);
      }
      finally {
        if (st != null) {
          try {
            // 7. Close the statement
            st.close();
          }
          catch (SQLException e){}
        }
      }
    }
    public BigDecimal getMaxCheckBookID(Integer slocId,Integer P_BNK_ID) {
             return (BigDecimal)callStoredFunction(NUMBER, "FIN.PKG_FIN.FN_GET_MAX_CHQ_BUK_ID(?,?)",
                                                      new Object[]{slocId,P_BNK_ID});
       }
    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_INSERT){
           setChqBkSlId(getMaxCheckBookID(getChqBkSlocId(),getChqBkBnkId()));
        }
        if(operation==DML_UPDATE){
                Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
                setUsrIdMod(UserId);
                       }  
        super.doDML(operation, e);
    }
}
