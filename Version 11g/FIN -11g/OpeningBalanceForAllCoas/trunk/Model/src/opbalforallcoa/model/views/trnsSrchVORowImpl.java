package opbalforallcoa.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import opbalforallcoa.model.module.OpBalCoasAMImpl;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 09 18:01:30 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class trnsSrchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        cldId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getcldId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setcldId((String)value);
            }
        }
        ,
        slocId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getslocId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setslocId((Integer)value);
            }
        }
        ,
        orgId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getorgId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setorgId((String)value);
            }
        }
        ,
        fyId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getfyId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setfyId((Integer)value);
            }
        }
        ,
        coaId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getcoaId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setcoaId((Integer)value);
            }
        }
        ,
        orgtemp {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getorgtemp();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setorgtemp((String)value);
            }
        }
        ,
        fytemp {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getfytemp();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setfytemp((Integer)value);
            }
        }
        ,
        CoaNmTrans {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getCoaNmTrans();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setCoaNmTrans((String)value);
            }
        }
        ,
        AllowEdit {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getAllowEdit();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setAllowEdit((String)value);
            }
        }
        ,
        currTrans {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getcurrTrans();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setcurrTrans((String)value);
            }
        }
        ,
        xurrtranstemp {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getxurrtranstemp();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setxurrtranstemp((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        LovOrgIdVO1 {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getLovOrgIdVO1();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgFyIdVO1 {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getLovOrgFyIdVO1();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCoaIdVO1 {
            public Object get(trnsSrchVORowImpl obj) {
                return obj.getLovCoaIdVO1();
            }

            public void put(trnsSrchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;

        private static int firstIndex = 0;

        public abstract Object get(trnsSrchVORowImpl object);

        public abstract void put(trnsSrchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDID = AttributesEnum.cldId.index();
    public static final int SLOCID = AttributesEnum.slocId.index();
    public static final int ORGID = AttributesEnum.orgId.index();
    public static final int FYID = AttributesEnum.fyId.index();
    public static final int COAID = AttributesEnum.coaId.index();
    public static final int ORGTEMP = AttributesEnum.orgtemp.index();
    public static final int FYTEMP = AttributesEnum.fytemp.index();
    public static final int COANMTRANS = AttributesEnum.CoaNmTrans.index();
    public static final int ALLOWEDIT = AttributesEnum.AllowEdit.index();
    public static final int CURRTRANS = AttributesEnum.currTrans.index();
    public static final int XURRTRANSTEMP = AttributesEnum.xurrtranstemp.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LOVORGIDVO1 = AttributesEnum.LovOrgIdVO1.index();
    public static final int LOVORGFYIDVO1 = AttributesEnum.LovOrgFyIdVO1.index();
    public static final int LOVCOAIDVO1 = AttributesEnum.LovCoaIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public trnsSrchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute cldId.
     * @return the cldId
     */
    public String getcldId() {
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
       /*  if(cldId != null)
        {
            return cldId;
        } */
        return cldId;
       // return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute cldId.
     * @param value value to set the  cldId
     */
    public void setcldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute slocId.
     * @return the slocId
     */
    public Integer getslocId() {
        Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        if(slocId != null)
        {return slocId;}
        
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute slocId.
     * @param value value to set the  slocId
     */
    public void setslocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute orgId.
     * @return the orgId
     */
    public String getorgId() {
        String orgId=(String)resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if(orgId != null)
        {return orgId;}
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute orgId.
     * @param value value to set the  orgId
     */
    public void setorgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute fyId.
     * @return the fyId
     */
    public Integer getfyId() {
        if (resolvEl("#{pageFlowScope.PARAM_FY_ID}")!=null) {
           return Integer.parseInt(resolvEl("#{pageFlowScope.PARAM_FY_ID}").toString());
        }
       /*  else {
            Integer fyid = 1;
            fyid =
                  (Integer)(callStoredFunction1(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] { getcldId(), getorgId(),
                                                                                         new Timestamp(System.currentTimeMillis()) }));
            if (fyid != null) {
                return fyid;
            }
        } */
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fyId.
     * @param value value to set the  fyId
     */
    public void setfyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute coaId.
     * @return the coaId
     */
    public Integer getcoaId() {
        if(resolvEl("#{pageFlowScope.PARAM_COA_ID}")!= null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.PARAM_COA_ID}").toString());
        }
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute coaId.
     * @param value value to set the  coaId
     */
    public void setcoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute orgtemp.
     * @return the orgtemp
     */
    public String getorgtemp() {
        
        if((String) getAttributeInternal(ORGTEMP) == null)
        {return getorgId();}
        return (String) getAttributeInternal(ORGTEMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute orgtemp.
     * @param value value to set the  orgtemp
     */
    public void setorgtemp(String value) {
        setAttributeInternal(ORGTEMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute fytemp.
     * @return the fytemp
     */
    public Integer getfytemp() {
        if((Integer) getAttributeInternal(FYTEMP) == null)
        { return getfyId();}
        return (Integer) getAttributeInternal(FYTEMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute fytemp.
     * @param value value to set the  fytemp
     */
    public void setfytemp(Integer value) {
        setAttributeInternal(FYTEMP, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CoaNmTrans.
     * @return the CoaNmTrans
     */
    public String getCoaNmTrans() {
        if(resolvEl("#{pageFlowScope.PARAM_COA_ID}")!= null){
            Integer coaId= Integer.parseInt(resolvEl("#{pageFlowScope.PARAM_COA_ID}").toString());
System.out.println("coaId = "+coaId);
            if (coaId!= null) {
                OpBalCoasAMImpl am = (OpBalCoasAMImpl)resolvElDC("OpBalCoasAMDataControl");
                if(am!= null){
                    ViewObjectImpl coaVO = am.getLovCoaId1();
                    if(coaVO!= null){
                        coaVO.setNamedWhereClauseParam("BindCldId", getcldId());
                        coaVO.setNamedWhereClauseParam("BindSlocId", getslocId());
                        coaVO.setNamedWhereClauseParam("BindHoOrgId",getHoOrgId() );
                        coaVO.setNamedWhereClauseParam("BindCoaId",coaId );
                        coaVO.executeQuery();
                        System.out.println("getcldId = "+getcldId()+" getslocId = "+getslocId()+" getHoOrgId = "+getHoOrgId()+" coaId = "+coaId);
                       // coaVO.setNamedWhereClauseParam("BindCoaId", getcoaId());
                        Row[] allRowsInRange = coaVO.getAllRowsInRange();
                        System.out.println("allRowsInRange = "+allRowsInRange.length);
                        if(allRowsInRange.length>0){
                            Object attribute = allRowsInRange[0].getAttribute("CoaNm");
                            System.out.println("coanm = "+attribute);
                            if(attribute!= null){
                                return attribute.toString();
                            }
                        }
                    }
                }
            }

        }
        return (String) getAttributeInternal(COANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNmTrans.
     * @param value value to set the  CoaNmTrans
     */
    public void setCoaNmTrans(String value) {
        setAttributeInternal(COANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AllowEdit.
     * @return the AllowEdit
     */
    public String getAllowEdit() {
        return (String) getAttributeInternal(ALLOWEDIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AllowEdit.
     * @param value value to set the  AllowEdit
     */
    public void setAllowEdit(String value) {
        setAttributeInternal(ALLOWEDIT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute currTrans.
     * @return the currTrans
     */
    public String getcurrTrans() {
        if(getAttributeInternal(CURRTRANS)==null){
            
        }
     
        return (String) getAttributeInternal(CURRTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute currTrans.
     * @param value value to set the  currTrans
     */
    public void setcurrTrans(String value) {
        setAttributeInternal(CURRTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute xurrtranstemp.
     * @return the xurrtranstemp
     */
    public String getxurrtranstemp() {
        String currname="";
        System.out.println("getorgtemp " +getorgtemp());
        if(getorgtemp()!=null){
            String orgId=getorgtemp();
            String cldId=getcldId();
            Integer SlocId=getslocId();
            OpBalCoasAMImpl am =(OpBalCoasAMImpl)resolvElDC("OpBalCoasAMDataControl");
            ViewObjectImpl currvo=am.getLovCurrId();
            currvo.setNamedWhereClauseParam("BindCldId", cldId);
            currvo.setNamedWhereClauseParam("BindSlocId", SlocId);
            currvo.setNamedWhereClauseParam("BindOrgId", orgId);
            currvo.executeQuery();
            Row []  filterd=currvo.getAllRowsInRange();
            if(filterd.length>0){
                currname =filterd[0].getAttribute("CurrDesc").toString();
                     
            }
            //return currname;
        }
        return currname;
      //  return (String) getAttributeInternal(XURRTRANSTEMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute xurrtranstemp.
     * @param value value to set the  xurrtranstemp
     */
    public void setxurrtranstemp(String value) {
        setAttributeInternal(XURRTRANSTEMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        if(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}")!=null){
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        }
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute curridtrans.
     * @return the curridtrans
     */
     public Object resolvElDC(String data) {
     FacesContext fc = FacesContext.getCurrentInstance();
     Application app = fc.getApplication();
     ExpressionFactory elFactory = app.getExpressionFactory();
     ELContext elContext = fc.getELContext();
     ValueExpression valueExp =
     elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
     return valueExp.getValue(elContext);
     }
  

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute curridtrans.
     * @param value value to set the  curridtrans
     */
  
    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO1.
     */
    public RowSet getLovOrgIdVO1() {
        return (RowSet)getAttributeInternal(LOVORGIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgFyIdVO1.
     */
    public RowSet getLovOrgFyIdVO1() {
        return (RowSet)getAttributeInternal(LOVORGFYIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaIdVO1.
     */
    public RowSet getLovCoaIdVO1() {
        return (RowSet)getAttributeInternal(LOVCOAIDVO1);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public Object resolvEl(String data) {
           FacesContext fc = FacesContext.getCurrentInstance();
           Application app = fc.getApplication();
           ExpressionFactory elFactory = app.getExpressionFactory();
           ELContext elContext = fc.getELContext();
           ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
           Object msg = valueExp.getValue(elContext);
           return msg;
       }
    
    

    
    
    protected Object callStoredFunction1(int sqlReturnType, String stmt, Object[] bindVars) {
           CallableStatement st = null;
           try {
               st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
               st.registerOutParameter(1, sqlReturnType);
               if (bindVars != null) {
                   for (int z = 0; z < bindVars.length; z++) {
                       st.setObject(z + 2, bindVars[z]);
                   }
               }
               st.executeUpdate();
               return st.getObject(1);

           } catch (SQLException e) {
               throw new JboException(e);
           } finally {
               if (st != null) {
                   try {
                       st.close();
                   } catch (SQLException e) {e.printStackTrace();}
               }
           }
       }
}
