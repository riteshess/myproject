package voucherswappingapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 12 17:40:45 PDT 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer)value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCldIdTrans((String)value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setHoOrgIdTrans((String)value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String)value);
            }
        }
        ,
        VouIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getVouIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setVouIdTrans((Integer)value);
            }
        }
        ,
        VoucherNoTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getVoucherNoTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setVoucherNoTrans((String)value);
            }
        }
        ,
        FrmDtTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getFrmDtTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setFrmDtTrans((Date)value);
            }
        }
        ,
        ToDtTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getToDtTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setToDtTrans((Date)value);
            }
        }
        ,
        CoaIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCoaIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCoaIdTrans((Integer)value);
            }
        }
        ,
        CoaNmTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCoaNmTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCoaNmTrans((String)value);
            }
        }
        ,
        ToCoaNmTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getToCoaNmTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setToCoaNmTrans((String)value);
            }
        }
        ,
        ToCoaIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getToCoaIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setToCoaIdTrans((Integer)value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVVouType1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVVouType1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCoaName1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVCoaName1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCoaName2 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVCoaName2();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchDualVORowImpl object);

        public abstract void put(SearchDualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int VOUIDTRANS = AttributesEnum.VouIdTrans.index();
    public static final int VOUCHERNOTRANS = AttributesEnum.VoucherNoTrans.index();
    public static final int FRMDTTRANS = AttributesEnum.FrmDtTrans.index();
    public static final int TODTTRANS = AttributesEnum.ToDtTrans.index();
    public static final int COAIDTRANS = AttributesEnum.CoaIdTrans.index();
    public static final int COANMTRANS = AttributesEnum.CoaNmTrans.index();
    public static final int TOCOANMTRANS = AttributesEnum.ToCoaNmTrans.index();
    public static final int TOCOAIDTRANS = AttributesEnum.ToCoaIdTrans.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();
    public static final int LOVVOUTYPE1 = AttributesEnum.LOVVouType1.index();
    public static final int LOVCOANAME1 = AttributesEnum.LOVCoaName1.index();
    public static final int LOVCOANAME2 = AttributesEnum.LOVCoaName2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if(getAttributeInternal(SLOCIDTRANS)==null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        }else{
        return (Integer) getAttributeInternal(SLOCIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if(getAttributeInternal(CLDIDTRANS)==null){
            return  resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        }else{
        return (String) getAttributeInternal(CLDIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        if(getAttributeInternal(HOORGIDTRANS)==null){
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
                }else{
       
                 return (String) getAttributeInternal(HOORGIDTRANS);
                }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        if(getAttributeInternal(ORGIDTRANS)==null){
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        }else{
        
        return (String) getAttributeInternal(ORGIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VouIdTrans.
     * @return the VouIdTrans
     */
    public Integer getVouIdTrans() {
        return (Integer) getAttributeInternal(VOUIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VouIdTrans.
     * @param value value to set the  VouIdTrans
     */
    public void setVouIdTrans(Integer value) {
        setAttributeInternal(VOUIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VoucherNoTrans.
     * @return the VoucherNoTrans
     */
    public String getVoucherNoTrans() {
        return (String) getAttributeInternal(VOUCHERNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VoucherNoTrans.
     * @param value value to set the  VoucherNoTrans
     */
    public void setVoucherNoTrans(String value) {
        setAttributeInternal(VOUCHERNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FrmDtTrans.
     * @return the FrmDtTrans
     */
    public Date getFrmDtTrans() {
        return (Date) getAttributeInternal(FRMDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FrmDtTrans.
     * @param value value to set the  FrmDtTrans
     */
    public void setFrmDtTrans(Date value) {
        setAttributeInternal(FRMDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDtTrans.
     * @return the ToDtTrans
     */
    public Date getToDtTrans() {
        return (Date) getAttributeInternal(TODTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDtTrans.
     * @param value value to set the  ToDtTrans
     */
    public void setToDtTrans(Date value) {
        setAttributeInternal(TODTTRANS, value);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute CoaIdTrans.
     * @return the CoaIdTrans
     */
    public Integer getCoaIdTrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaIdTrans.
     * @param value value to set the  CoaIdTrans
     */
    public void setCoaIdTrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNmTrans.
     * @return the CoaNmTrans
     */
    public String getCoaNmTrans() {
        return (String) getAttributeInternal(COANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNmTrans.
     * @param value value to set the  CoaNmTrans
     */
    public void setCoaNmTrans(String value) {
        setAttributeInternal(COANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToCoaNmTrans.
     * @return the ToCoaNmTrans
     */
    public String getToCoaNmTrans() {
        return (String) getAttributeInternal(TOCOANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToCoaNmTrans.
     * @param value value to set the  ToCoaNmTrans
     */
    public void setToCoaNmTrans(String value) {
        setAttributeInternal(TOCOANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToCoaIdTrans.
     * @return the ToCoaIdTrans
     */
    public Integer getToCoaIdTrans() {
        return (Integer) getAttributeInternal(TOCOAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToCoaIdTrans.
     * @param value value to set the  ToCoaIdTrans
     */
    public void setToCoaIdTrans(Integer value) {
        setAttributeInternal(TOCOAIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVVouType1.
     */
    public RowSet getLOVVouType1() {
        return (RowSet)getAttributeInternal(LOVVOUTYPE1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCoaName1.
     */
    public RowSet getLOVCoaName1() {
        return (RowSet)getAttributeInternal(LOVCOANAME1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCoaName2.
     */
    public RowSet getLOVCoaName2() {
        return (RowSet)getAttributeInternal(LOVCOANAME2);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
