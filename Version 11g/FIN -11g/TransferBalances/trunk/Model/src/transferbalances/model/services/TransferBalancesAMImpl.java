package transferbalances.model.services;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import transferbalances.model.services.common.TransferBalancesAM;
import transferbalances.model.views.LovOrgFyVOImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 11 12:41:04 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransferBalancesAMImpl extends ApplicationModuleImpl implements TransferBalancesAM {
    /**
     * This is the default constructor (do not remove).
     */
    public TransferBalancesAMImpl() {
    }

    /**
     * Container's getter for IncomeExpence.
     * @return IncomeExpence
     */
    public ViewObjectImpl getIncomeExpence() {
        return (ViewObjectImpl)findViewObject("IncomeExpence");
    }

    /**
     * Container's getter for AssetsLiability.
     * @return AssetsLiability
     */
    public ViewObjectImpl getAssetsLiability() {
        return (ViewObjectImpl)findViewObject("AssetsLiability");
    }
    private int STRING = Types.VARCHAR;
    private int NUMBER = Types.NUMERIC;

    /**
     * @param userid user id
     * @param OrgId organisation id
     * @param slocid server location id
     * @param docId document id (in case of temporary voucher it is 55 )
     * @return next voucher id
     */
    public String callmaxno(Integer userid, String OrgId, Integer slocid, Integer docId) {
        /** call db function "pkg_app.get_txn_id" */
        return (String)callStoredFunction(STRING, "app.pkg_app.get_txn_id(?,?,?,?)",
                                          new Object[] { userid, OrgId, slocid, docId });
    }

    public void generateDocNo(String vouId, Integer usrId, Date vouDt) {

        callStoredFunction(STRING, "app.pkg_app.ins_disp_doc_tab (?,?,?)", new Object[] { vouId, usrId, vouDt });

    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage().substring(11, end));
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {

                }
            }
        }
    }


    /**
     * Container's getter for GlLines.
     * @return GlLines
     */
    public ViewObjectImpl getGlLines() {
        return (ViewObjectImpl)findViewObject("GlLines");
    }

    /**
     * Container's getter for Gl.
     * @return Gl
     */
    public ViewObjectImpl getGl() {
        return (ViewObjectImpl)findViewObject("Gl");
    }

    /**
     * Container's getter for LovOrgFy.
     * @return LovOrgFy
     */
    public LovOrgFyVOImpl getLovOrgFy() {
        return (LovOrgFyVOImpl)findViewObject("LovOrgFy");
    }

    public Number getClosingBalances(Integer P_SLOC_ID, String P_ORG_ID, Date P_ASON_DT, Integer P_COA_ID,
                                     String P_INC_TEMP, String P_INC_POST, String P_INC_OP_BAL) {
        System.out.println(P_SLOC_ID + " " + P_ORG_ID + " " + P_ASON_DT + " " + P_COA_ID + " " + P_INC_TEMP + " " +
                           P_INC_POST + " " + P_INC_OP_BAL);
        /*  System.out.println(callStoredFunction(NUMBER, "PKG_FIN.GET_COA_CL_BAL_ASONDT(?,?,?,?,?,?,?)",
                                          new Object[] { P_SLOC_ID, P_ORG_ID, P_ASON_DT, P_COA_ID, P_INC_TEMP,
                                                         P_INC_POST, P_INC_OP_BAL })); */
        return (Number)callStoredFunction(NUMBER, "PKG_FIN.GET_COA_CL_BAL_ASONDT(?,?,?,?,?,?,?)",
                                          new Object[] { P_SLOC_ID, P_ORG_ID, P_ASON_DT, P_COA_ID, P_INC_TEMP,
                                                         P_INC_POST, P_INC_OP_BAL });
    }


    /**
     * Container's getter for FinPrdClose1.
     * @return FinPrdClose1
     */
    public ViewObjectImpl getFinPrdClose1() {
        return (ViewObjectImpl)findViewObject("FinPrdClose1");
    }
}
