package accountsrecievable.model.services;


import accountsrecievable.model.services.common.AccountsRecievableAM;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewObject;
//import oracle.jbo.common.types.ViewCriteria;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import org.apache.myfaces.trinidad.context.RequestContext;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 28 16:15:16 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AccountsRecievableAMImpl extends ApplicationModuleImpl implements AccountsRecievableAM {
    /**
     * This is the default constructor (do not remove).
     */
    public AccountsRecievableAMImpl() {
    }

    private String filterType = "I";
    private Integer coaId = null;
    private Row currentRow = null;

    /**
     * Container's getter for ARAgeingSummary1.
     * @return ARAgeingSummary1
     */
    public ViewObjectImpl getARAgeingSummary1() {
        return (ViewObjectImpl)findViewObject("ARAgeingSummary1");
    }


    public void getItemForARAgeingSummary1(String cldId, String orgId) {
        //System.out.println("in set whereh clause to null "+this.getARAgeingSummary1().getQuery());
        
        RequestContext.getCurrentInstance().getPageFlowScope().put("Voucher_Type", filterType);
        
        this.setArGraphParameters(cldId, orgId);
        this.setARAgeingSummaryParameters(cldId, orgId);
        this.setARCoWiseAllVouchersParameters(cldId, orgId);
        this.setBaseCurrencyParameters(cldId, orgId);
        
        
        if(currentRow != null){
            
            this.getARAgeingSummary1().setWhereClause(null);
            this.getARAgeingSummary1().executeQuery();
            //System.out.println("in set where clause to null "+this.getARAgeingSummary1().getQuery());
            
        }

    }
    
    /**
     * Set Base Currency Variables for getting Base Currency
     */
    
    public void setBaseCurrencyParameters(String cldId, String orgId){
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        
        ViewObjectImpl baseCurrency1 = this.getBaseCurrency1();
        baseCurrency1.setNamedWhereClauseParam("BindCldId", cldId);
        baseCurrency1.setNamedWhereClauseParam("BindOrgId", orgId);
        baseCurrency1.setNamedWhereClauseParam("BindSlocId", slocId);
        baseCurrency1.executeQuery();
    }


    /**
     *
     * **/

    public void setArGraphParameters(String cldId, String orgId) {

        ViewObjectImpl vo1 = this.getArGraphVO();
        vo1.setNamedWhereClauseParam("BindDtType", filterType);
        vo1.setNamedWhereClauseParam("BindCldId", cldId);
        vo1.setNamedWhereClauseParam("BindOrgId", orgId);
        vo1.executeQuery();
    }

    /**
     *
     * **/
    public void setARAgeingSummaryParameters(String cldId, String orgId) {
        
        ViewObjectImpl vo = this.getARAgeingSummary1();
        vo.setNamedWhereClauseParam("BindDtType", filterType);
        vo.setNamedWhereClauseParam("BindCldId", cldId);
        vo.setNamedWhereClauseParam("BindOrgId", orgId);
        vo.executeQuery();
    }

    /**
     *
     * **/
    public void setARCoWiseAllVouchersParameters(String cldId, String orgId) {
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String dtType = resolvEl("#{pageFlowScope.Voucher_Type}").toString();
        ViewObjectImpl vo = this.getARCoaWiseAllVouchers1();
        vo.setNamedWhereClauseParam("BindCldId", cldId);
        vo.setNamedWhereClauseParam("BindOrgId", orgId);
        vo.setNamedWhereClauseParam("BindSlocId", slocId);
        vo.setNamedWhereClauseParam("BindDtType", dtType);
        
        vo.executeQuery();
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = "0";
        if (valueExp.getValue(elContext) != null) {
            msg = valueExp.getValue(elContext).toString();
        }

        return msg;
    }

    /**
     *Get Filtered Rows accordingly
     *
     */

    public void getFilteredRowsOnVCL(String type) {

        this.filterType = type;

        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();

        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();

        RequestContext.getCurrentInstance().getPageFlowScope().put("Voucher_Type", type);

        this.setArGraphParameters(cld_id, org_id);
        this.setARAgeingSummaryParameters(cld_id, org_id);

    }
    
    /**
     *For Supplier Query
     *
     */

    public void CustomerFilter() {
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();

        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();

        ViewObjectImpl detail1 = this.getARAgeingSummary1();
        //System.out.println("Filter Type is "+filterType);
        if (this.getARAgeingSummary1().getCurrentRow() != null) {
            coaId = (Integer)this.getARAgeingSummary1().getCurrentRow().getAttribute("ArCoaId");
            currentRow = this.getARAgeingSummary1().getCurrentRow();
            System.out.println("Current row "+currentRow+" coa id "+coaId);
           
        }   else {
            
            this.getARAgeingSummary1().executeQuery();
            this.getARCoaWiseAllVouchers1().executeQuery();
            setARAgeingSummaryParameters(cld_id, org_id);
            
            detail1.setWhereClause("AR_COA_ID = "+coaId);
            detail1.executeQuery();
            detail1.setCurrentRow(currentRow);

            setARCoWiseAllVouchersParameters(cld_id,org_id);
            System.out.println("Current row is: "+currentRow+" coa id :"+coaId );
            
            System.out.println("Coa Id " + coaId);
            System.out.println("Filter type=" + filterType);
           
            System.out.println("End of query");
        }  
    }

    /**
     * Container's getter for ARCoaWiseAllVouchers1.
     * @return ARCoaWiseAllVouchers1
     */
    public ViewObjectImpl getARCoaWiseAllVouchers1() {
        return (ViewObjectImpl)findViewObject("ARCoaWiseAllVouchers1");
    }

    /**
     * Container's getter for ArAgingSummary2ArCoawiseAllVouchersVL1.
     * @return ArAgingSummary2ArCoawiseAllVouchersVL1
     */
    public ViewLinkImpl getArAgingSummary2ArCoawiseAllVouchersVL1() {
        return (ViewLinkImpl)findViewLink("ArAgingSummary2ArCoawiseAllVouchersVL1");
    }

    /**
     * Container's getter for ArGraphVO.
     * @return ArGraphVO
     */
    public ViewObjectImpl getArGraphVO() {
        return (ViewObjectImpl)findViewObject("ArGraphVO");
    }

    public void setFilterType(String filterType) {
        this.filterType = filterType;
    }

    public String getFilterType() {
        return filterType;
    }

    public void setCoaId(Integer coaId) {
        this.coaId = coaId;
    }

    public Integer getCoaId() {
        return coaId;
    }

    public void setCurrentRow(Row currentRow) {
        this.currentRow = currentRow;
    }

    public Row getCurrentRow() {
        return currentRow;
    }

    /**
     * Container's getter for BaseCurrency1.
     * @return BaseCurrency1
     */
    public ViewObjectImpl getBaseCurrency1() {
        return (ViewObjectImpl)findViewObject("BaseCurrency1");
    }
}
