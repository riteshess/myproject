package misReportConfig.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 27 11:36:52 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinRptConfigEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RptCldId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getRptCldId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setRptCldId((String)value);
            }
        }
        ,
        RptHoOrgId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getRptHoOrgId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setRptHoOrgId((String)value);
            }
        }
        ,
        RptOrgId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getRptOrgId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setRptOrgId((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CogRptCatId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptCatId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptCatId((String)value);
            }
        }
        ,
        CogRptCogId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptCogId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptCogId((String)value);
            }
        }
        ,
        CogRptCoaId {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptCoaId();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptCoaId((Integer)value);
            }
        }
        ,
        CogRptAmtTyp {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptAmtTyp();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptAmtTyp((String)value);
            }
        }
        ,
        CogRptBehTyp {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptBehTyp();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptBehTyp((String)value);
            }
        }
        ,
        CogRptGrpFlg {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getCogRptGrpFlg();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setCogRptGrpFlg((String)value);
            }
        }
        ,
        FinRptConfigCoaEO {
            public Object get(FinRptConfigEOImpl obj) {
                return obj.getFinRptConfigCoaEO();
            }

            public void put(FinRptConfigEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FinRptConfigEOImpl object);

        public abstract void put(FinRptConfigEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int RPTCLDID = AttributesEnum.RptCldId.index();
    public static final int RPTHOORGID = AttributesEnum.RptHoOrgId.index();
    public static final int RPTORGID = AttributesEnum.RptOrgId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int COGRPTCATID = AttributesEnum.CogRptCatId.index();
    public static final int COGRPTCOGID = AttributesEnum.CogRptCogId.index();
    public static final int COGRPTCOAID = AttributesEnum.CogRptCoaId.index();
    public static final int COGRPTAMTTYP = AttributesEnum.CogRptAmtTyp.index();
    public static final int COGRPTBEHTYP = AttributesEnum.CogRptBehTyp.index();
    public static final int COGRPTGRPFLG = AttributesEnum.CogRptGrpFlg.index();
    public static final int FINRPTCONFIGCOAEO = AttributesEnum.FinRptConfigCoaEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinRptConfigEOImpl() {
    }

    /**
     * Gets the attribute value for RptCldId, using the alias name RptCldId.
     * @return the value of RptCldId
     */
    public String getRptCldId() {
        return (String)getAttributeInternal(RPTCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptCldId.
     * @param value value to set the RptCldId
     */
    public void setRptCldId(String value) {
        setAttributeInternal(RPTCLDID, value);
    }

    /**
     * Gets the attribute value for RptHoOrgId, using the alias name RptHoOrgId.
     * @return the value of RptHoOrgId
     */
    public String getRptHoOrgId() {
        return (String)getAttributeInternal(RPTHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptHoOrgId.
     * @param value value to set the RptHoOrgId
     */
    public void setRptHoOrgId(String value) {
        setAttributeInternal(RPTHOORGID, value);
    }

    /**
     * Gets the attribute value for RptOrgId, using the alias name RptOrgId.
     * @return the value of RptOrgId
     */
    public String getRptOrgId() {
        return (String)getAttributeInternal(RPTORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptOrgId.
     * @param value value to set the RptOrgId
     */
    public void setRptOrgId(String value) {
        setAttributeInternal(RPTORGID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for CogRptCatId, using the alias name CogRptCatId.
     * @return the value of CogRptCatId
     */
    public String getCogRptCatId() {
        return (String)getAttributeInternal(COGRPTCATID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptCatId.
     * @param value value to set the CogRptCatId
     */
    public void setCogRptCatId(String value) {
        setAttributeInternal(COGRPTCATID, value);
    }

    /**
     * Gets the attribute value for CogRptCogId, using the alias name CogRptCogId.
     * @return the value of CogRptCogId
     */
    public String getCogRptCogId() {
        return (String)getAttributeInternal(COGRPTCOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptCogId.
     * @param value value to set the CogRptCogId
     */
    public void setCogRptCogId(String value) {
        setAttributeInternal(COGRPTCOGID, value);
    }

    /**
     * Gets the attribute value for CogRptCoaId, using the alias name CogRptCoaId.
     * @return the value of CogRptCoaId
     */
    public Integer getCogRptCoaId() {
        return (Integer)getAttributeInternal(COGRPTCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptCoaId.
     * @param value value to set the CogRptCoaId
     */
    public void setCogRptCoaId(Integer value) {
        setAttributeInternal(COGRPTCOAID, value);
    }

    /**
     * Gets the attribute value for CogRptAmtTyp, using the alias name CogRptAmtTyp.
     * @return the value of CogRptAmtTyp
     */
    public String getCogRptAmtTyp() {
        return (String)getAttributeInternal(COGRPTAMTTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptAmtTyp.
     * @param value value to set the CogRptAmtTyp
     */
    public void setCogRptAmtTyp(String value) {
        setAttributeInternal(COGRPTAMTTYP, value);
    }

    /**
     * Gets the attribute value for CogRptBehTyp, using the alias name CogRptBehTyp.
     * @return the value of CogRptBehTyp
     */
    public String getCogRptBehTyp() {
        return (String)getAttributeInternal(COGRPTBEHTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptBehTyp.
     * @param value value to set the CogRptBehTyp
     */
    public void setCogRptBehTyp(String value) {
        setAttributeInternal(COGRPTBEHTYP, value);
    }

    /**
     * Gets the attribute value for CogRptGrpFlg, using the alias name CogRptGrpFlg.
     * @return the value of CogRptGrpFlg
     */
    public String getCogRptGrpFlg() {
        return (String)getAttributeInternal(COGRPTGRPFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogRptGrpFlg.
     * @param value value to set the CogRptGrpFlg
     */
    public void setCogRptGrpFlg(String value) {
        setAttributeInternal(COGRPTGRPFLG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinRptConfigCoaEO() {
        return (RowIterator)getAttributeInternal(FINRPTCONFIGCOAEO);
    }

    /**
     * @param rptCldId key constituent
     * @param rptHoOrgId key constituent
     * @param rptOrgId key constituent
     * @param cogRptCatId key constituent
     * @param cogRptCogId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String rptCldId, String rptHoOrgId, String rptOrgId, String cogRptCatId,
                                       String cogRptCogId) {
        return new Key(new Object[]{rptCldId, rptHoOrgId, rptOrgId, cogRptCatId, cogRptCogId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("misReportConfig.model.entities.FinRptConfigEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
