package budgetflow.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 26 17:38:42 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        MonId {
            public Object get(SearchVORowImpl obj) {
                return obj.getMonId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setMonId((Integer)value);
            }
        }
        ,
        FyId {
            public Object get(SearchVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SearchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(SearchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        LovFyIdVO {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovFyIdVO();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovMonthVO {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovMonthVO();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchVORowImpl object);

        public abstract void put(SearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MONID = AttributesEnum.MonId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int LOVFYIDVO = AttributesEnum.LovFyIdVO.index();
    public static final int LOVMONTHVO = AttributesEnum.LovMonthVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute MonId.
     * @return the MonId
     */
    public Integer getMonId() {
        return (Integer) getAttributeInternal(MONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MonId.
     * @param value value to set the  MonId
     */
    public void setMonId(Integer value) {
        setAttributeInternal(MONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyId.
     * @param value value to set the  FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!= null){
              return  resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
            }
        else{
            return (String) getAttributeInternal(ORGID);
        }
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
      
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
            if (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}") != null) {
                return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
            } else {
        return (String) getAttributeInternal(CLDID);
            
            }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovFyIdVO.
     */
    public RowSet getLovFyIdVO() {
        return (RowSet)getAttributeInternal(LOVFYIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovMonthVO.
     */
    public RowSet getLovMonthVO() {
        return (RowSet)getAttributeInternal(LOVMONTHVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
}
