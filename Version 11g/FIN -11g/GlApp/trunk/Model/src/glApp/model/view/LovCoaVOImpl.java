package glApp.model.view;

import java.sql.ResultSet;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 04 15:22:22 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovCoaVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public LovCoaVOImpl() {
    }


    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
   /*  protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        System.out.println("--------------------------------1");
        System.out.println("Hit count : "+super.getEstimatedRowCount());
            short fetchSize = 10;
                if (this.getRangeSize() > 0) {
                   fetchSize = ((short)(this.getRangeSize() + 3));
               }
               System.out.println("Range size is :"+this.getRangeSize());
               if (this.getRangeSize() < 10) {
                   System.out.println("Potentially small range size : " + this.getRangeSize() + " for table VO : " +
                               this.getViewObject().getDefFullName());
                   fetchSize = 10;
               }
         
               System.out.println("Original fetch size : " + this.getFetchSize() + ", Updated fetch size : " + fetchSize +
                           " for : " + this.getViewObject().getDefFullName()+" : "+getName());
               if (fetchSize > this.getFetchSize()) {
                   System.out.println("Updating fetch size : " + fetchSize);
                   this.setFetchSize(fetchSize);
               } else {
                   System.out.println("Current fetch size : " + this.getFetchSize() + " for : " +
                               this.getName());
               } 
         
               long init = System.currentTimeMillis();
               super.executeQueryForCollection(qc, params, noUserParams);
               long end = System.currentTimeMillis() - init;
        
    } */

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
  /*   protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        long init = System.currentTimeMillis();
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        //System.out.println("Time taken is  :"+(System.currentTimeMillis()- init));
        return value;
    } */

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        System.out.println("Hit count in coa lov is : "+value);
        return value;
    }
    
   

    /**
     * Returns the variable value for BindCogNm.
     * @return variable value for BindCogNm
     */
    public String getBindCogNm() {
        return (String)ensureVariableManager().getVariableValue("BindCogNm");
    }

    /**
     * Sets <code>value</code> for variable BindCogNm.
     * @param value value to bind as BindCogNm
     */
    public void setBindCogNm(String value) {
        ensureVariableManager().setVariableValue("BindCogNm", value);
    }

    /**
     * Returns the variable value for BindAccTyp.
     * @return variable value for BindAccTyp
     */
    public String getBindAccTyp() {
        return (String)ensureVariableManager().getVariableValue("BindAccTyp");
    }

    /**
     * Sets <code>value</code> for variable BindAccTyp.
     * @param value value to bind as BindAccTyp
     */
    public void setBindAccTyp(String value) {
        ensureVariableManager().setVariableValue("BindAccTyp", value);
    }

    /**
     * Returns the variable value for BindCoaNm.
     * @return variable value for BindCoaNm
     */
    public String getBindCoaNm() {
        return (String)ensureVariableManager().getVariableValue("BindCoaNm");
    }

    /**
     * Sets <code>value</code> for variable BindCoaNm.
     * @param value value to bind as BindCoaNm
     */
    public void setBindCoaNm(String value) {
        ensureVariableManager().setVariableValue("BindCoaNm", value);
    }

    /**
     * Returns the variable value for BindOrgId.
     * @return variable value for BindOrgId
     */
    public String getBindOrgId() {
        return (String)ensureVariableManager().getVariableValue("BindOrgId");
    }

    /**
     * Sets <code>value</code> for variable BindOrgId.
     * @param value value to bind as BindOrgId
     */
    public void setBindOrgId(String value) {
        ensureVariableManager().setVariableValue("BindOrgId", value);
    }

    /**
     * Returns the variable value for AccTypBind.
     * @return variable value for AccTypBind
     */
    public Integer getAccTypBind() {
        return (Integer)ensureVariableManager().getVariableValue("AccTypBind");
    }

    /**
     * Sets <code>value</code> for variable AccTypBind.
     * @param value value to bind as AccTypBind
     */
    public void setAccTypBind(Integer value) {
        ensureVariableManager().setVariableValue("AccTypBind", value);
    }

    /**
     * Returns the variable value for BindSlocId.
     * @return variable value for BindSlocId
     */
    public Integer getBindSlocId() {
        return (Integer)ensureVariableManager().getVariableValue("BindSlocId");
    }

    /**
     * Sets <code>value</code> for variable BindSlocId.
     * @param value value to bind as BindSlocId
     */
    public void setBindSlocId(Integer value) {
        ensureVariableManager().setVariableValue("BindSlocId", value);
    }

    /**
     * Returns the variable value for BindCldId.
     * @return variable value for BindCldId
     */
    public String getBindCldId() {
        return (String)ensureVariableManager().getVariableValue("BindCldId");
    }

    /**
     * Sets <code>value</code> for variable BindCldId.
     * @param value value to bind as BindCldId
     */
    public void setBindCldId(String value) {
        ensureVariableManager().setVariableValue("BindCldId", value);
    }

    /**
     * Returns the variable value for BindHoOrgId.
     * @return variable value for BindHoOrgId
     */
    public String getBindHoOrgId() {
        return (String)ensureVariableManager().getVariableValue("BindHoOrgId");
    }

    /**
     * Sets <code>value</code> for variable BindHoOrgId.
     * @param value value to bind as BindHoOrgId
     */
    public void setBindHoOrgId(String value) {
        ensureVariableManager().setVariableValue("BindHoOrgId", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * Returns the bind variable value for orgidbind.
     * @return bind variable value for orgidbind
     */
    public String getorgidbind() {
        return (String)getNamedWhereClauseParam("orgidbind");
    }

    /**
     * Sets <code>value</code> for bind variable orgidbind.
     * @param value value to bind as orgidbind
     */
    public void setorgidbind(String value) {
        setNamedWhereClauseParam("orgidbind", value);
    }

    /**
     * Returns the bind variable value for slocidbind.
     * @return bind variable value for slocidbind
     */
    public Integer getslocidbind() {
        return (Integer)getNamedWhereClauseParam("slocidbind");
    }

    /**
     * Sets <code>value</code> for bind variable slocidbind.
     * @param value value to bind as slocidbind
     */
    public void setslocidbind(Integer value) {
        setNamedWhereClauseParam("slocidbind", value);
    }

    /**
     * Returns the bind variable value for coaidbind.
     * @return bind variable value for coaidbind
     */
    public Integer getcoaidbind() {
        return (Integer)getNamedWhereClauseParam("coaidbind");
    }

    /**
     * Sets <code>value</code> for bind variable coaidbind.
     * @param value value to bind as coaidbind
     */
    public void setcoaidbind(Integer value) {
        setNamedWhereClauseParam("coaidbind", value);
    }

    /**
     * Returns the bind variable value for hoorgbind.
     * @return bind variable value for hoorgbind
     */
    public String gethoorgbind() {
        return (String)getNamedWhereClauseParam("hoorgbind");
    }

    /**
     * Sets <code>value</code> for bind variable hoorgbind.
     * @param value value to bind as hoorgbind
     */
    public void sethoorgbind(String value) {
        setNamedWhereClauseParam("hoorgbind", value);
    }

    /**
     * Returns the bind variable value for cldidbind.
     * @return bind variable value for cldidbind
     */
    public String getcldidbind() {
        return (String)getNamedWhereClauseParam("cldidbind");
    }

    /**
     * Sets <code>value</code> for bind variable cldidbind.
     * @param value value to bind as cldidbind
     */
    public void setcldidbind(String value) {
        setNamedWhereClauseParam("cldidbind", value);
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    /* protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    } */
    /* int counter=0;
     protected ViewRowImpl createRowFromResultSet(Object object, ResultSet resultSet) {
         counter++;
     ViewRowImpl row = super.createRowFromResultSet(object, resultSet);
    System.out.println("Row fetched with key: " + row.getKey() + ", for VO: " + this.getName() + " row count: " + counter);

     return row;
     } */


    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }
}
