package glApp.model.entity;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 02 12:21:38 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GlOcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlSlocId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlSlocId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlSlocId((Integer)value);
            }
        }
        ,
        GlApplInstId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlApplInstId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlApplInstId((Integer)value);
            }
        }
        ,
        GlOrgId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlOrgId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlOrgId((String)value);
            }
        }
        ,
        GlVouId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlVouId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlVouId((String)value);
            }
        }
        ,
        GlVouDt {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlVouDt();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlVouDt((Date)value);
            }
        }
        ,
        GlOcLnTyp {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlOcLnTyp();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlOcLnTyp((String)value);
            }
        }
        ,
        GlSlNo {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlSlNo();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlSlNo((Integer)value);
            }
        }
        ,
        GlCoaId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlCoaId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlCoaId((Integer)value);
            }
        }
        ,
        GlCurrIdSp {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlCurrIdSp();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlCurrIdSp((Integer)value);
            }
        }
        ,
        GlOcSlNo {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlOcSlNo();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlOcSlNo((Integer)value);
            }
        }
        ,
        GlOcAmtSp {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlOcAmtSp();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlOcAmtSp((Number)value);
            }
        }
        ,
        GlOcAmtTyp {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlOcAmtTyp();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlOcAmtTyp((String)value);
            }
        }
        ,
        GlSlNoDest {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlSlNoDest();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlSlNoDest((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(GlOcEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(GlOcEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(GlOcEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(GlOcEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Rowid {
            public Object get(GlOcEOImpl obj) {
                return obj.getRowid();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GlHoOrgId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlHoOrgId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlHoOrgId((String)value);
            }
        }
        ,
        GlCldId {
            public Object get(GlOcEOImpl obj) {
                return obj.getGlCldId();
            }

            public void put(GlOcEOImpl obj, Object value) {
                obj.setGlCldId((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(GlOcEOImpl object);

        public abstract void put(GlOcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    private static int NUMBER = Types.INTEGER;
    public static final int GLSLOCID = AttributesEnum.GlSlocId.index();
    public static final int GLAPPLINSTID = AttributesEnum.GlApplInstId.index();
    public static final int GLORGID = AttributesEnum.GlOrgId.index();
    public static final int GLVOUID = AttributesEnum.GlVouId.index();
    public static final int GLVOUDT = AttributesEnum.GlVouDt.index();
    public static final int GLOCLNTYP = AttributesEnum.GlOcLnTyp.index();
    public static final int GLSLNO = AttributesEnum.GlSlNo.index();
    public static final int GLCOAID = AttributesEnum.GlCoaId.index();
    public static final int GLCURRIDSP = AttributesEnum.GlCurrIdSp.index();
    public static final int GLOCSLNO = AttributesEnum.GlOcSlNo.index();
    public static final int GLOCAMTSP = AttributesEnum.GlOcAmtSp.index();
    public static final int GLOCAMTTYP = AttributesEnum.GlOcAmtTyp.index();
    public static final int GLSLNODEST = AttributesEnum.GlSlNoDest.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ROWID = AttributesEnum.Rowid.index();
    public static final int GLHOORGID = AttributesEnum.GlHoOrgId.index();
    public static final int GLCLDID = AttributesEnum.GlCldId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GlOcEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("glApp.model.entity.GlOcEO");
    }

    /**
     * Gets the attribute value for GlSlocId, using the alias name GlSlocId.
     * @return the value of GlSlocId
     */
    public Integer getGlSlocId() {
        return (Integer)getAttributeInternal(GLSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlSlocId.
     * @param value value to set the GlSlocId
     */
    public void setGlSlocId(Integer value) {
        setAttributeInternal(GLSLOCID, value);
    }

    /**
     * Gets the attribute value for GlApplInstId, using the alias name GlApplInstId.
     * @return the value of GlApplInstId
     */
    public Integer getGlApplInstId() {
        return (Integer)getAttributeInternal(GLAPPLINSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlApplInstId.
     * @param value value to set the GlApplInstId
     */
    public void setGlApplInstId(Integer value) {
        setAttributeInternal(GLAPPLINSTID, value);
    }

    /**
     * Gets the attribute value for GlOrgId, using the alias name GlOrgId.
     * @return the value of GlOrgId
     */
    public String getGlOrgId() {
        return (String)getAttributeInternal(GLORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlOrgId.
     * @param value value to set the GlOrgId
     */
    public void setGlOrgId(String value) {
        setAttributeInternal(GLORGID, value);
    }

    /**
     * Gets the attribute value for GlVouIdDisp, using the alias name GlVouIdDisp.
     * @return the value of GlVouIdDisp
     */
    public String getGlVouId() {
        return (String)getAttributeInternal(GLVOUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlVouIdDisp.
     * @param value value to set the GlVouIdDisp
     */
    public void setGlVouId(String value) {
        setAttributeInternal(GLVOUID, value);
    }

    /**
     * Gets the attribute value for GlVouDt, using the alias name GlVouDt.
     * @return the value of GlVouDt
     */
    public Date getGlVouDt() {
        return (Date)getAttributeInternal(GLVOUDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlVouDt.
     * @param value value to set the GlVouDt
     */
    public void setGlVouDt(Date value) {
        setAttributeInternal(GLVOUDT, value);
    }

    /**
     * Gets the attribute value for GlOcLnTyp, using the alias name GlOcLnTyp.
     * @return the value of GlOcLnTyp
     */
    public String getGlOcLnTyp() {
        return (String)getAttributeInternal(GLOCLNTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlOcLnTyp.
     * @param value value to set the GlOcLnTyp
     */
    public void setGlOcLnTyp(String value) {
        setAttributeInternal(GLOCLNTYP, value);
    }

    /**
     * Gets the attribute value for GlSlNo, using the alias name GlSlNo.
     * @return the value of GlSlNo
     */
    public Integer getGlSlNo() {
        return (Integer)getAttributeInternal(GLSLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlSlNo.
     * @param value value to set the GlSlNo
     */
    public void setGlSlNo(Integer value) {
        setAttributeInternal(GLSLNO, value);
    }

    /**
     * Gets the attribute value for GlCoaId, using the alias name GlCoaId.
     * @return the value of GlCoaId
     */
    public Integer getGlCoaId() {
        return (Integer)getAttributeInternal(GLCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlCoaId.
     * @param value value to set the GlCoaId
     */
    public void setGlCoaId(Integer value) {
        setAttributeInternal(GLCOAID, value);
    }

    /**
     * Gets the attribute value for GlCurrIdSp, using the alias name GlCurrIdSp.
     * @return the value of GlCurrIdSp
     */
    public Integer getGlCurrIdSp() {
        return (Integer)getAttributeInternal(GLCURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlCurrIdSp.
     * @param value value to set the GlCurrIdSp
     */
    public void setGlCurrIdSp(Integer value) {
        setAttributeInternal(GLCURRIDSP, value);
    }

    /**
     * Gets the attribute value for GlOcSlNo, using the alias name GlOcSlNo.
     * @return the value of GlOcSlNo
     */
    public Integer getGlOcSlNo() {
        return (Integer)getAttributeInternal(GLOCSLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlOcSlNo.
     * @param value value to set the GlOcSlNo
     */
    public void setGlOcSlNo(Integer value) {
        setAttributeInternal(GLOCSLNO, value);
    }

    /**
     * Gets the attribute value for GlOcAmtSp, using the alias name GlOcAmtSp.
     * @return the value of GlOcAmtSp
     */
    public Number getGlOcAmtSp() {
        return (Number)getAttributeInternal(GLOCAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlOcAmtSp.
     * @param value value to set the GlOcAmtSp
     */
    public void setGlOcAmtSp(Number value) {
        setAttributeInternal(GLOCAMTSP, value);
    }

    /**
     * Gets the attribute value for GlOcAmtTyp, using the alias name GlOcAmtTyp.
     * @return the value of GlOcAmtTyp
     */
    public String getGlOcAmtTyp() {
        return (String)getAttributeInternal(GLOCAMTTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlOcAmtTyp.
     * @param value value to set the GlOcAmtTyp
     */
    public void setGlOcAmtTyp(String value) {
        setAttributeInternal(GLOCAMTTYP, value);
    }

    /**
     * Gets the attribute value for GlSlNoDest, using the alias name GlSlNoDest.
     * @return the value of GlSlNoDest
     */
    public Integer getGlSlNoDest() {
        return (Integer)getAttributeInternal(GLSLNODEST);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlSlNoDest.
     * @param value value to set the GlSlNoDest
     */
    public void setGlSlNoDest(Integer value) {
        setAttributeInternal(GLSLNODEST, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for Rowid, using the alias name Rowid.
     * @return the value of Rowid
     */
    public RowID getRowid() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * Gets the attribute value for GlHoOrgId, using the alias name GlHoOrgId.
     * @return the value of GlHoOrgId
     */
    public String getGlHoOrgId() {
        return (String)getAttributeInternal(GLHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlHoOrgId.
     * @param value value to set the GlHoOrgId
     */
    public void setGlHoOrgId(String value) {
        setAttributeInternal(GLHOORGID, value);
    }

    /**
     * Gets the attribute value for GlCldId, using the alias name GlCldId.
     * @return the value of GlCldId
     */
    public String getGlCldId() {
        return (String)getAttributeInternal(GLCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlCldId.
     * @param value value to set the GlCldId
     */
    public void setGlCldId(String value) {
        setAttributeInternal(GLCLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
         CallableStatement st = null;
         try {
             // 1. Create a JDBC CallabledStatement
             st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
             // 2. Register the first bind variable for the return value
             st.registerOutParameter(1, sqlReturnType);
             if (bindVars != null) {
                 // 3. Loop over values for the bind variables passed in, if any
                 for (int z = 0; z < bindVars.length; z++) {
                     // 4. Set the value of user-supplied bind vars in the stmt
                     st.setObject(z + 2, bindVars[z]);
                 }
             }
             // 5. Set the value of user-supplied bind vars in the stmt
             st.executeUpdate();
             // 6. Return the value of the first bind variable
             return st.getObject(1);
         } catch (SQLException e) {
             //    int end = e.getMessage().indexOf("\n");
             throw new JboException(e);
         } finally {
             if (st != null) {
                 try {
                     // 7. Close the statement
                     st.close();
                 } catch (SQLException e) {

                 }
             }
         }
     }

    protected void create(AttributeList attributeList) {
        System.out.println("Vouid-->"+getGlVouId()+"CldId-->"+getGlCldId()+"Ho Orgid-->"+getGlHoOrgId());
        Integer slno =
            (Integer)callStoredFunction(NUMBER, "PKG_FIN_GL.FN_GET_MAX_SLNO_GL_OC(?,?,?,?,?)",
                           new Object[] { getGlVouId(), getGlOrgId(), getGlSlocId(), getGlCldId(), getGlHoOrgId()});
        System.out.println("Number is--->"+slno);
        setGlOcSlNo(slno);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
