package miscategory.model.services;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import miscategory.model.services.common.MisCategoryAM;

import miscategory.model.views.CoaCogVOImpl;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 25 11:00:12 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MisCategoryAMImpl extends ApplicationModuleImpl implements MisCategoryAM {
    private String coa_cog_id;
    private String cld_id;
    private String org_id;
    private int coa_id;

    /**
     * This is the default constructor (do not remove).
     */
    public MisCategoryAMImpl() {
    }

    /**
     * Container's getter for CategoryDetail1.
     * @return CategoryDetail1
     */
     private Integer maxFyId;
     private static int NUMERIC = Types.NUMERIC;
     private static int VARCHAR = Types.VARCHAR; 
    public ViewObjectImpl getCategoryDetail1() {
        return (ViewObjectImpl)findViewObject("CategoryDetail1");
    }

    /**
     * Container's getter for CategoryGraph1.
     * @return CategoryGraph1
     */
    public ViewObjectImpl getCategoryGraph1() {
        return (ViewObjectImpl)findViewObject("CategoryGraph1");
    }
    public String resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,Object.class);
    String Message=valueExp.getValue(elContext).toString();
    return Message;
    }
    public void setParameters(String p_org_id, String p_cld_id, String p_ho_org_id) {
        ViewObjectImpl categoryDetail = this.getCategoryDetail1();
        ViewObjectImpl categoryGraph = this.getCategoryGraph1();
        String categoryId=resolvEl("#{pageFlowScope.categoryId}");
        int fyid=Integer.parseInt(resolvEl("#{pageFlowScope.financialYearId}"));
        categoryDetail.executeQuery();
        categoryDetail.setNamedWhereClauseParam("BindOrgId",p_org_id);
        categoryDetail.setNamedWhereClauseParam("BindCldId", p_cld_id);
        categoryDetail.setNamedWhereClauseParam("BindCatId", categoryId);
        categoryDetail.setNamedWhereClauseParam("BindHoOrgId",p_ho_org_id);
        categoryDetail.setNamedWhereClauseParam("BindFyId", fyid);                                                                        
        categoryDetail.executeQuery();
        categoryGraph.reset();
        categoryGraph.executeQuery();
        categoryGraph.setNamedWhereClauseParam("BindOrgId", p_org_id);
        categoryGraph.setNamedWhereClauseParam("BindCldId", p_cld_id);
        categoryGraph.setNamedWhereClauseParam("BindCatId", categoryId);
        categoryGraph.setNamedWhereClauseParam("BindHoOrgId", p_ho_org_id);
        categoryGraph.setNamedWhereClauseParam("BindFyId", fyid);
        //categoryDetail.executeQuery();
        categoryGraph.executeQuery();
    }
   

    /**
     * Container's getter for CoaCog1.
     * @return CoaCog1
     */
    public ViewObjectImpl getCoaCog1() {
        return (ViewObjectImpl)findViewObject("CoaCog1");
    }
    public void setParametersOfCoaCog(String p_cld_id,String p_org_id,String p_coa_cog_id,int p_coa_id) {
        coa_cog_id=p_coa_cog_id;
        coa_id=p_coa_id;
        org_id=p_org_id;
        cld_id=p_cld_id;
        ViewObjectImpl coaCog = this.getCoaCog1();
        coaCog.setNamedWhereClauseParam("BindCoaCogId", p_coa_cog_id);
        coaCog.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        coaCog.setNamedWhereClauseParam("BindOrgId", p_org_id);
        coaCog.setNamedWhereClauseParam("BindCldId", p_cld_id);
        coaCog.executeQuery();


    }
    public void setParametersOfCoaCog1(String p_cld_id,String p_org_id,String p_coa_cog_id,int p_coa_id, int p_fy_id) {
        coa_cog_id=p_coa_cog_id;
        coa_id=p_coa_id;
        org_id=p_org_id;
        cld_id=p_cld_id;
        ViewObjectImpl coaCog = this.getCoaCog1();
        coaCog.setNamedWhereClauseParam("BindCoaCogId", p_coa_cog_id);
        coaCog.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        coaCog.setNamedWhereClauseParam("BindOrgId", p_org_id);
        coaCog.setNamedWhereClauseParam("BindCldId", p_cld_id);
        coaCog.setNamedWhereClauseParam("BindFyId", p_fy_id);
        coaCog.executeQuery();


    }
    public void searchCriteria(String coaName) {
        CoaCogVOImpl voimpl = (CoaCogVOImpl)getCoaCog1();
        voimpl.setBindCoaNm(coaName);
        voimpl.setBindCldId(cld_id);
        voimpl.setBindCoaCogId(coa_cog_id);
        voimpl.setBindCoaId(coa_id);
        voimpl.setBindOrgId(org_id);
        voimpl.executeQuery();
    }
    public void resetCriteria() {
        CoaCogVOImpl voimpl = (CoaCogVOImpl)getCoaCog1();
        voimpl.setBindCoaNm(null);
        voimpl.setBindCldId(cld_id);
        voimpl.setBindCoaCogId(coa_cog_id);
        voimpl.setBindCoaId(coa_id);
        voimpl.setBindOrgId(org_id);
        voimpl.executeQuery();
    }
}
