package chartofaccount.model.view;

import java.sql.ResultSet;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 16 12:42:07 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LovCogVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public LovCogVOImpl() {
    }

    /**
     * Returns the variable value for SlocIdBind.
     * @return variable value for SlocIdBind
     */
    public Integer getSlocIdBind() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!=null)
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}".toString()));
        else
        return (Integer)ensureVariableManager().getVariableValue("SlocIdBind");
    }
    public String resolvEl(String data) {
          FacesContext fc = FacesContext.getCurrentInstance();
          Application app = fc.getApplication();
          ExpressionFactory elFactory = app.getExpressionFactory();
          ELContext elContext = fc.getELContext();
          ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
          String msg = valueExp.getValue(elContext).toString();
          return msg;
      }

    /**
     * Sets <code>value</code> for variable SlocIdBind.
     * @param value value to bind as SlocIdBind
     */
    public void setSlocIdBind(Integer value) {
        ensureVariableManager().setVariableValue("SlocIdBind", value);
    }

    /**
     * Returns the variable value for CldIdBind.
     * @return variable value for CldIdBind
     */
    public String getCldIdBind() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}".toString())!=null)
            return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}".toString());
        else
        return (String)ensureVariableManager().getVariableValue("CldIdBind");
    }

    /**
     * Sets <code>value</code> for variable CldIdBind.
     * @param value value to bind as CldIdBind
     */
    public void setCldIdBind(String value) {
        ensureVariableManager().setVariableValue("CldIdBind", value);
    }

    /**
     * Returns the variable value for OrgIdBind.
     * @return variable value for OrgIdBind
     */
    public String getOrgIdBind() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}".toString())!=null)
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}".toString());
        else
        return (String)ensureVariableManager().getVariableValue("OrgIdBind");
    }

    /**
     * Sets <code>value</code> for variable OrgIdBind.
     * @param value value to bind as OrgIdBind
     */
    public void setOrgIdBind(String value) {
        ensureVariableManager().setVariableValue("OrgIdBind", value);
    }

    /**
     * Returns the variable value for cogNmBind.
     * @return variable value for cogNmBind
     */
    public String getcogNmBind() {
        return (String)ensureVariableManager().getVariableValue("cogNmBind");
    }

    /**
     * Sets <code>value</code> for variable cogNmBind.
     * @param value value to bind as cogNmBind
     */
    public void setcogNmBind(String value) {
        ensureVariableManager().setVariableValue("cogNmBind", value);
    }
    int counter=0;
       protected ViewRowImpl createRowFromResultSet(Object object, ResultSet resultSet) {
           counter++;
       ViewRowImpl row = super.createRowFromResultSet(object, resultSet);
      System.out.println("Row fetched with key: " + row.getKey() + ", for VO: " + this.getName() + " row count: " + counter);

       return row;
       }
}
