package GlReportApplication.model.module.view;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 17 12:16:55 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppDocTxnVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocSlocId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocSlocId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocSlocId((Integer)value);
            }
        }
        ,
        DocOrgId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocOrgId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        VocherId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getVocherId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setVocherId((String)value);
            }
        }
        ,
        DocTxnDateDisp {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocTxnDateDisp();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocTxnDateDisp((Date)value);
            }
        }
        ,
        DocTypId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocTypId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocTypId((Integer)value);
            }
        }
        ,
        DocCldId {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getDocCldId();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setDocCldId((String)value);
            }
        }
        ,
        Flag {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getFlag();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setFlag((String)value);
            }
        }
        ,
        space {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getspace();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setspace((String)value);
            }
        }
        ,
        VoucherTypeLOV1 {
            public Object get(AppDocTxnVORowImpl obj) {
                return obj.getVoucherTypeLOV1();
            }

            public void put(AppDocTxnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppDocTxnVORowImpl object);

        public abstract void put(AppDocTxnVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCSLOCID = AttributesEnum.DocSlocId.index();
    public static final int DOCORGID = AttributesEnum.DocOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int VOCHERID = AttributesEnum.VocherId.index();
    public static final int DOCTXNDATEDISP = AttributesEnum.DocTxnDateDisp.index();
    public static final int DOCTYPID = AttributesEnum.DocTypId.index();
    public static final int DOCCLDID = AttributesEnum.DocCldId.index();
    public static final int FLAG = AttributesEnum.Flag.index();
    public static final int SPACE = AttributesEnum.space.index();
    public static final int VOUCHERTYPELOV1 = AttributesEnum.VoucherTypeLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppDocTxnVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute DocSlocId.
     * @return the DocSlocId
     */
    public Integer getDocSlocId() {
        return (Integer) getAttributeInternal(DOCSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocSlocId.
     * @param value value to set the  DocSlocId
     */
    public void setDocSlocId(Integer value) {
        setAttributeInternal(DOCSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocOrgId.
     * @return the DocOrgId
     */
    public String getDocOrgId() {
        return (String) getAttributeInternal(DOCORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocOrgId.
     * @param value value to set the  DocOrgId
     */
    public void setDocOrgId(String value) {
        setAttributeInternal(DOCORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Integer getDocId() {
        return (Integer) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VocherId.
     * @return the VocherId
     */
    public String getVocherId() {
        return (String) getAttributeInternal(VOCHERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VocherId.
     * @param value value to set the  VocherId
     */
    public void setVocherId(String value) {
        setAttributeInternal(VOCHERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTxnDateDisp.
     * @return the DocTxnDateDisp
     */
    public Date getDocTxnDateDisp() {
        return (Date) getAttributeInternal(DOCTXNDATEDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocTxnDateDisp.
     * @param value value to set the  DocTxnDateDisp
     */
    public void setDocTxnDateDisp(Date value) {
        setAttributeInternal(DOCTXNDATEDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypId.
     * @return the DocTypId
     */
    public Integer getDocTypId() {
        return (Integer) getAttributeInternal(DOCTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocTypId.
     * @param value value to set the  DocTypId
     */
    public void setDocTypId(Integer value) {
        setAttributeInternal(DOCTYPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocCldId.
     * @return the DocCldId
     */
    public String getDocCldId() {
        return (String) getAttributeInternal(DOCCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocCldId.
     * @param value value to set the  DocCldId
     */
    public void setDocCldId(String value) {
        setAttributeInternal(DOCCLDID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Flag.
     * @return the Flag
     */
    public String getFlag() {
        return (String) getAttributeInternal(FLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Flag.
     * @param value value to set the  Flag
     */
    public void setFlag(String value) {
        setAttributeInternal(FLAG, value);
    }


    /**
     * Gets the attribute value for the calculated attribute space.
     * @return the space
     */
    public String getspace() {
        //System.out.println("in space getter");
        return "-" + "dtd.";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute space.
     * @param value value to set the  space
     */
    public void setspace(String value) {
        setAttributeInternal(SPACE, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VoucherTypeLOV1.
     */
    public RowSet getVoucherTypeLOV1() {
        return (RowSet)getAttributeInternal(VOUCHERTYPELOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
