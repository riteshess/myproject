package GlReportApplication.model.view;

import java.math.BigInteger;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 02 10:57:33 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinCoaDtlVwVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CoaCldId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCoaCldId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCoaCldId((String)value);
            }
        }
        ,
        AccSlocId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getAccSlocId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setAccSlocId((Integer)value);
            }
        }
        ,
        CoaHoOrgId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCoaHoOrgId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCoaHoOrgId((String)value);
            }
        }
        ,
        CoaNm {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCoaNm();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCoaNm((String)value);
            }
        }
        ,
        CoaId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        NaId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getNaId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setNaId((BigInteger)value);
            }
        }
        ,
        CogId {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCogId();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCogId((String)value);
            }
        }
        ,
        ActualAccType {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getActualAccType();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setActualAccType((Long)value);
            }
        }
        ,
        AccType {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getAccType();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setAccType((Long)value);
            }
        }
        ,
        CoaGrpType {
            public Object get(FinCoaDtlVwVORowImpl obj) {
                return obj.getCoaGrpType();
            }

            public void put(FinCoaDtlVwVORowImpl obj, Object value) {
                obj.setCoaGrpType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FinCoaDtlVwVORowImpl object);

        public abstract void put(FinCoaDtlVwVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COACLDID = AttributesEnum.CoaCldId.index();
    public static final int ACCSLOCID = AttributesEnum.AccSlocId.index();
    public static final int COAHOORGID = AttributesEnum.CoaHoOrgId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int NAID = AttributesEnum.NaId.index();
    public static final int COGID = AttributesEnum.CogId.index();
    public static final int ACTUALACCTYPE = AttributesEnum.ActualAccType.index();
    public static final int ACCTYPE = AttributesEnum.AccType.index();
    public static final int COAGRPTYPE = AttributesEnum.CoaGrpType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinCoaDtlVwVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CoaCldId.
     * @return the CoaCldId
     */
    public String getCoaCldId() {
        return (String) getAttributeInternal(COACLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaCldId.
     * @param value value to set the  CoaCldId
     */
    public void setCoaCldId(String value) {
        setAttributeInternal(COACLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AccSlocId.
     * @return the AccSlocId
     */
    public Integer getAccSlocId() {
        return (Integer) getAttributeInternal(ACCSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccSlocId.
     * @param value value to set the  AccSlocId
     */
    public void setAccSlocId(Integer value) {
        setAttributeInternal(ACCSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaHoOrgId.
     * @return the CoaHoOrgId
     */
    public String getCoaHoOrgId() {
        return (String) getAttributeInternal(COAHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaHoOrgId.
     * @param value value to set the  CoaHoOrgId
     */
    public void setCoaHoOrgId(String value) {
        setAttributeInternal(COAHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNm.
     * @param value value to set the  CoaNm
     */
    public void setCoaNm(String value) {
        setAttributeInternal(COANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaId.
     * @param value value to set the  CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NaId.
     * @return the NaId
     */
    public BigInteger getNaId() {
        return (BigInteger) getAttributeInternal(NAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NaId.
     * @param value value to set the  NaId
     */
    public void setNaId(BigInteger value) {
        setAttributeInternal(NAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CogId.
     * @return the CogId
     */
    public String getCogId() {
        return (String) getAttributeInternal(COGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CogId.
     * @param value value to set the  CogId
     */
    public void setCogId(String value) {
        setAttributeInternal(COGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ActualAccType.
     * @return the ActualAccType
     */
    public Long getActualAccType() {
        return (Long) getAttributeInternal(ACTUALACCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ActualAccType.
     * @param value value to set the  ActualAccType
     */
    public void setActualAccType(Long value) {
        setAttributeInternal(ACTUALACCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AccType.
     * @return the AccType
     */
    public Long getAccType() {
        return (Long) getAttributeInternal(ACCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccType.
     * @param value value to set the  AccType
     */
    public void setAccType(Long value) {
        setAttributeInternal(ACCTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaGrpType.
     * @return the CoaGrpType
     */
    public String getCoaGrpType() {
        return (String) getAttributeInternal(COAGRPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaGrpType.
     * @param value value to set the  CoaGrpType
     */
    public void setCoaGrpType(String value) {
        setAttributeInternal(COAGRPTYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
