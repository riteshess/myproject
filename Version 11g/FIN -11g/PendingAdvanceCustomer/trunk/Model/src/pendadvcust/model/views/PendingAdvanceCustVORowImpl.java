package pendadvcust.model.views;

import javax.el.ELContext;

import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 06 11:01:08 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PendingAdvanceCustVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        ArapFlg {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getArapFlg();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setArapFlg((String)value);
            }
        }
        ,
        GlCldId {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getGlCldId();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setGlCldId((String)value);
            }
        }
        ,
        GlHoOrgId {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getGlHoOrgId();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setGlHoOrgId((String)value);
            }
        }
        ,
        ArapOrgId {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getArapOrgId();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setArapOrgId((String)value);
            }
        }
        ,
        ArapApplInstId {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getArapApplInstId();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setArapApplInstId((Integer)value);
            }
        }
        ,
        ArapCoaId {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getArapCoaId();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setArapCoaId((Integer)value);
            }
        }
        ,
        CoaNm {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getCoaNm();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setCoaNm((String)value);
            }
        }
        ,
        CurrNm {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getCurrNm();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setCurrNm((String)value);
            }
        }
        ,
        AmountSpecific {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmountSpecific();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmountSpecific((Number)value);
            }
        }
        ,
        AmountAdjusted {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmountAdjusted();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmountAdjusted((Number)value);
            }
        }
        ,
        AmountOutstanding {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmountOutstanding();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmountOutstanding((Number)value);
            }
        }
        ,
        AmtSpTrans {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmtSpTrans();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmtSpTrans((Number)value);
            }
        }
        ,
        AmtAdjTrans {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmtAdjTrans();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmtAdjTrans((Number)value);
            }
        }
        ,
        AmtOutTrans {
            public Object get(PendingAdvanceCustVORowImpl obj) {
                return obj.getAmtOutTrans();
            }

            public void put(PendingAdvanceCustVORowImpl obj, Object value) {
                obj.setAmtOutTrans((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PendingAdvanceCustVORowImpl object);

        public abstract void put(PendingAdvanceCustVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARAPFLG = AttributesEnum.ArapFlg.index();
    public static final int GLCLDID = AttributesEnum.GlCldId.index();
    public static final int GLHOORGID = AttributesEnum.GlHoOrgId.index();
    public static final int ARAPORGID = AttributesEnum.ArapOrgId.index();
    public static final int ARAPAPPLINSTID = AttributesEnum.ArapApplInstId.index();
    public static final int ARAPCOAID = AttributesEnum.ArapCoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int CURRNM = AttributesEnum.CurrNm.index();
    public static final int AMOUNTSPECIFIC = AttributesEnum.AmountSpecific.index();
    public static final int AMOUNTADJUSTED = AttributesEnum.AmountAdjusted.index();
    public static final int AMOUNTOUTSTANDING = AttributesEnum.AmountOutstanding.index();
    public static final int AMTSPTRANS = AttributesEnum.AmtSpTrans.index();
    public static final int AMTADJTRANS = AttributesEnum.AmtAdjTrans.index();
    public static final int AMTOUTTRANS = AttributesEnum.AmtOutTrans.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PendingAdvanceCustVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute ArapFlg.
     * @return the ArapFlg
     */
    public String getArapFlg() {
        return (String) getAttributeInternal(ARAPFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArapFlg.
     * @param value value to set the  ArapFlg
     */
    public void setArapFlg(String value) {
        setAttributeInternal(ARAPFLG, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ArapApplInstId.
     * @return the ArapApplInstId
     */
    public Integer getArapApplInstId() {
        return (Integer) getAttributeInternal(ARAPAPPLINSTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArapApplInstId.
     * @param value value to set the  ArapApplInstId
     */
    public void setArapApplInstId(Integer value) {
        setAttributeInternal(ARAPAPPLINSTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ArapOrgId.
     * @return the ArapOrgId
     */
    public String getArapOrgId() {
        return (String) getAttributeInternal(ARAPORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArapOrgId.
     * @param value value to set the  ArapOrgId
     */
    public void setArapOrgId(String value) {
        setAttributeInternal(ARAPORGID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute ArapCoaId.
     * @return the ArapCoaId
     */
    public Integer getArapCoaId() {
        return (Integer) getAttributeInternal(ARAPCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArapCoaId.
     * @param value value to set the  ArapCoaId
     */
    public void setArapCoaId(Integer value) {
        setAttributeInternal(ARAPCOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNm.
     * @param value value to set the  CoaNm
     */
    public void setCoaNm(String value) {
        setAttributeInternal(COANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNm.
     * @return the CurrNm
     */
    public String getCurrNm() {
        return (String) getAttributeInternal(CURRNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNm.
     * @param value value to set the  CurrNm
     */
    public void setCurrNm(String value) {
        setAttributeInternal(CURRNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmountSpecific.
     * @return the AmountSpecific
     */
    public Number getAmountSpecific() {
        return (Number) getAttributeInternal(AMOUNTSPECIFIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmountSpecific.
     * @param value value to set the  AmountSpecific
     */
    public void setAmountSpecific(Number value) {
        if(value !=null)
        {
                          Integer decimalPlaces = 2;
                       if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
                           System.out.println("Null");
                           decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());   
                       }
                       
                       value.round(decimalPlaces );

            
        }
        setAttributeInternal(AMOUNTSPECIFIC, value);
    }
    public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    /**
     * Gets the attribute value for the calculated attribute AmountAdjusted.
     * @return the AmountAdjusted
     */
    public Number getAmountAdjusted() {
        return (Number) getAttributeInternal(AMOUNTADJUSTED);
    }
    
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmountAdjusted.
     * @param value value to set the  AmountAdjusted
     */
    public void setAmountAdjusted(Number value) {
        if(value !=null)
        {
                          Integer decimalPlaces = 2;
                       if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
                           System.out.println("Null");
                           decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());   
                       }
                       
                       value.round(decimalPlaces );

            
        }
        setAttributeInternal(AMOUNTADJUSTED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmountOutstanding.
     * @return the AmountOutstanding
     */
    public Number getAmountOutstanding() {
        return (Number) getAttributeInternal(AMOUNTOUTSTANDING);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmountOutstanding.
     * @param value value to set the  AmountOutstanding
     */
    public void setAmountOutstanding(Number value) {
        if(value !=null)
        {
                          Integer decimalPlaces = 2;
                       if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
                           System.out.println("Null");
                           decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());   
                       }
                       
                       value.round(decimalPlaces );

            
        }
        setAttributeInternal(AMOUNTOUTSTANDING, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtSpTrans.
     * @return the AmtSpTrans
     */
    public Number getAmtSpTrans() {
        return (Number) getAttributeInternal(AMTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtSpTrans.
     * @param value value to set the  AmtSpTrans
     */
    public void setAmtSpTrans(Number value) {
        setAttributeInternal(AMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtAdjTrans.
     * @return the AmtAdjTrans
     */
    public Number getAmtAdjTrans() {
        return (Number) getAttributeInternal(AMTADJTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtAdjTrans.
     * @param value value to set the  AmtAdjTrans
     */
    public void setAmtAdjTrans(Number value) {
        setAttributeInternal(AMTADJTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtOutTrans.
     * @return the AmtOutTrans
     */
    public Number getAmtOutTrans() {
        return (Number) getAttributeInternal(AMTOUTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtOutTrans.
     * @param value value to set the  AmtOutTrans
     */
    public void setAmtOutTrans(Number value) {
        setAttributeInternal(AMTOUTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GlCldId.
     * @return the GlCldId
     */
    public String getGlCldId() {
        return (String) getAttributeInternal(GLCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GlCldId.
     * @param value value to set the  GlCldId
     */
    public void setGlCldId(String value) {
        setAttributeInternal(GLCLDID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute GlHoOrgId.
     * @return the GlHoOrgId
     */
    public String getGlHoOrgId() {
        return (String) getAttributeInternal(GLHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GlHoOrgId.
     * @param value value to set the  GlHoOrgId
     */
    public void setGlHoOrgId(String value) {
        setAttributeInternal(GLHOORGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
