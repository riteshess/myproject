package misreportapp.model.module;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import misreportapp.model.module.common.MISReportAM;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 05 11:31:18 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MISReportAMImpl extends ApplicationModuleImpl implements MISReportAM {
    /**
     * This is the default constructor (do not remove).
     */
    public MISReportAMImpl() {
    }

    private static int NUMERIC = Types.NUMERIC;

    /**
     * Container's getter for Category1.
     * @return Category1
     */
    public ViewObjectImpl getCategory1() {
        return (ViewObjectImpl)findViewObject("Category1");
    }

    /**
     * Container's getter for CurrRatio1.
     * @return CurrRatio1
     */
    public ViewObjectImpl getCurrRatio1() {
        return (ViewObjectImpl)findViewObject("CurrRatio1");
    }

    /**
     * Container's getter for CurrRatioAmt1.
     * @return CurrRatioAmt1
     */
    public ViewObjectImpl getCurrRatioAmt1() {
        return (ViewObjectImpl)findViewObject("CurrRatioAmt1");
    }

    /**
     * Container's getter for DebtEquity1.
     * @return DebtEquity1
     */
    public ViewObjectImpl getDebtEquity1() {
        return (ViewObjectImpl)findViewObject("DebtEquity1");
    }

    /**
     * Container's getter for DebtEquityAmt1.
     * @return DebtEquityAmt1
     */
    public ViewObjectImpl getDebtEquityAmt1() {
        return (ViewObjectImpl)findViewObject("DebtEquityAmt1");
    }

    /**
     * Container's getter for OuickRatio1.
     * @return OuickRatio1
     */
    public ViewObjectImpl getOuickRatio1() {
        return (ViewObjectImpl)findViewObject("OuickRatio1");
    }

    /**
     * Container's getter for QuickRaioAmt1.
     * @return QuickRaioAmt1
     */
    public ViewObjectImpl getQuickRaioAmt1() {
        return (ViewObjectImpl)findViewObject("QuickRaioAmt1");
    }

    /**
     * Container's getter for OperatingCost1.
     * @return OperatingCost1
     */
    public ViewObjectImpl getOperatingCost1() {
        return (ViewObjectImpl)findViewObject("OperatingCost1");
    }

    /**
     * Container's getter for GrossProfit1.
     * @return GrossProfit1
     */
    public ViewObjectImpl getGrossProfit1() {
        return (ViewObjectImpl)findViewObject("GrossProfit1");
    }

    /**
     * Container's getter for NetProfit1.
     * @return NetProfit1
     */
    public ViewObjectImpl getNetProfit1() {
        return (ViewObjectImpl)findViewObject("NetProfit1");
    }

    /**
     * Container's getter for CurrRatioMonthly1.
     * @return CurrRatioMonthly1
     */
    public ViewObjectImpl getCurrRatioMonthly1() {
        return (ViewObjectImpl)findViewObject("CurrRatioMonthly1");
    }

    /**
     * Container's getter for DebtEquityMonthly1.
     * @return DebtEquityMonthly1
     */
    public ViewObjectImpl getDebtEquityMonthly1() {
        return (ViewObjectImpl)findViewObject("DebtEquityMonthly1");
    }

    /**
     * Container's getter for QuickRatioMonthly1.
     * @return QuickRatioMonthly1
     */
    public ViewObjectImpl getQuickRatioMonthly1() {
        return (ViewObjectImpl)findViewObject("QuickRatioMonthly1");
    }

    /**
     * Container's getter for CatCoaBal1.
     * @return CatCoaBal1
     */
    public ViewObjectImpl getCatCoaBal1() {
        return (ViewObjectImpl)findViewObject("CatCoaBal1");
    }

    /**
     * Container's getter for CatCoaBalNew1.
     * @return CatCoaBalNew1
     */
    public ViewObjectImpl getCatCoaBalNew1() {
        return (ViewObjectImpl)findViewObject("CatCoaBalNew1");
    }


    /**
     * Container's getter for CoaCatWise1.
     * @return CoaCatWise1
     */
    public ViewObjectImpl getCoaCatWise1() {
        return (ViewObjectImpl)findViewObject("CoaCatWise1");
    }

    /**
     * Container's getter for CoaBalMonWise1.
     * @return CoaBalMonWise1
     */
    public ViewObjectImpl getCoaBalMonWise1() {
        return (ViewObjectImpl)findViewObject("CoaBalMonWise1");
    }

    /**
     * Container's getter for CatCoaToCoaMonVL1.
     * @return CatCoaToCoaMonVL1
     */
    public ViewLinkImpl getCatCoaToCoaMonVL1() {
        return (ViewLinkImpl)findViewLink("CatCoaToCoaMonVL1");
    }

    /**
     * Container's getter for CoaBalDateWise1.
     * @return CoaBalDateWise1
     */
    public ViewObjectImpl getCoaBalDateWise1() {
        return (ViewObjectImpl)findViewObject("CoaBalDateWise1");
    }

    /**
     * Container's getter for CoaMonToCoaDateVL1.
     * @return CoaMonToCoaDateVL1
     */
    public ViewLinkImpl getCoaMonToCoaDateVL1() {
        return (ViewLinkImpl)findViewLink("CoaMonToCoaDateVL1");
    }

    /**
     * Container's getter for CoaBalVouWise1.
     * @return CoaBalVouWise1
     */
    public ViewObjectImpl getCoaBalVouWise1() {
        return (ViewObjectImpl)findViewObject("CoaBalVouWise1");
    }

    /**
     * Container's getter for DateToVouVL1.
     * @return DateToVouVL1
     */
    public ViewLinkImpl getDateToVouVL1() {
        return (ViewLinkImpl)findViewLink("DateToVouVL1");
    }

    /**
     * Container's getter for OrgFYVO.
     * @return OrgFYVO
     */
    public ViewObjectImpl getOrgFYVO() {
        return (ViewObjectImpl)findViewObject("OrgFYVO");
    }

    /**This method is used execute page with fy_id, org_id and cld_id.
     * When page is rendered for first the value for current fy_id
     * can be get through database fucntion.**/
    public void setBindVar(String orgId, String cldId, Integer fyId) {

        if (fyId == null) {

            fyId = getFyId(cldId, orgId);
            System.out.println("fyId is null");
        }
        System.out.println("fyId----->" + fyId);

        getCategory1().setNamedWhereClauseParam("BindOrgId", orgId);
        getCategory1().setNamedWhereClauseParam("BindCldId", cldId);
        getCategory1().setNamedWhereClauseParam("BindFyId", fyId);
        getCategory1().executeQuery();

        this.getCoaCatWise1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getCoaCatWise1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getCoaCatWise1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getCoaCatWise1().executeQuery();

        this.getCurrRatio1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getCurrRatio1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getCurrRatio1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getCurrRatio1().executeQuery();

        this.getCurrRatioAmt1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getCurrRatioAmt1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getCurrRatioAmt1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getCurrRatioAmt1().executeQuery();

        this.getCurrRatioMonthly1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getCurrRatioMonthly1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getCurrRatioMonthly1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getCurrRatioMonthly1().executeQuery();

        this.getDebtEquity1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getDebtEquity1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getDebtEquity1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getDebtEquity1().executeQuery();

        this.getDebtEquityAmt1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getDebtEquityAmt1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getDebtEquityAmt1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getDebtEquityAmt1().executeQuery();

        this.getDebtEquityMonthly1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getDebtEquityMonthly1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getDebtEquityMonthly1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getDebtEquityMonthly1().executeQuery();

        this.getOuickRatio1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getOuickRatio1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getOuickRatio1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getOuickRatio1().executeQuery();

        this.getQuickRaioAmt1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getQuickRaioAmt1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getQuickRaioAmt1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getQuickRaioAmt1().executeQuery();

        this.getQuickRatioMonthly1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getQuickRatioMonthly1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getQuickRatioMonthly1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getQuickRatioMonthly1().executeQuery();

        this.getOperatingCost1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getOperatingCost1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getOperatingCost1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getOperatingCost1().executeQuery();

        this.getGrossProfit1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getGrossProfit1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getGrossProfit1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getGrossProfit1().executeQuery();

        this.getNetProfit1().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getNetProfit1().setNamedWhereClauseParam("BindCldId", cldId);
        this.getNetProfit1().setNamedWhereClauseParam("BindFyId", fyId);
        this.getNetProfit1().executeQuery();

        this.getOrgFYVO().setNamedWhereClauseParam("BindOrgId", orgId);
        this.getOrgFYVO().setNamedWhereClauseParam("BindCldId", cldId);
        this.getOrgFYVO().executeQuery();

    }

    private Integer getFyId(String cldId, String orgId) {

        Integer fyId = null;

        try {

            fyId =
Integer.parseInt(callStoredFunction(NUMERIC, "FN_GET_MAX_FY(?,?)", new Object[] { cldId, orgId }).toString());

        } catch (NumberFormatException nfe) {
            // TODO: Add catch code
            fyId = 1;
            nfe.printStackTrace();
        }
        return fyId;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
             e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

}
