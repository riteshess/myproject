package fincashflowapp.model.services;


import fincashflowapp.model.services.common.FinCashFlowAppAM;
import fincashflowapp.model.views.CashFlowDetailVOImpl;
import fincashflowapp.model.views.CashFlowGraphVOImpl;

import fincashflowapp.model.views.CashFlowHeaderVOImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 16 14:43:20 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinCashFlowAppAMImpl extends ApplicationModuleImpl implements FinCashFlowAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    private static int NUMERIC = Types.NUMERIC;
    private Integer maxFyId;

    public FinCashFlowAppAMImpl() {
    }

    public void setcashFlowHeader(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                                  Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl cashFlowHeader = this.getCashFlowHeader1();
        cashFlowHeader.setNamedWhereClauseParam("BindOrgId", p_org_id);
        cashFlowHeader.setNamedWhereClauseParam("BindCldId", p_cld_id);
        cashFlowHeader.setNamedWhereClauseParam("BindFyId", fyId);
        // cashFlowHeader.executeQuery();
    }

    public void setcashFlowDetail(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                                  Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);
        ViewObjectImpl cashFlowDetail = this.getCashFlowDetail3();
        cashFlowDetail.setNamedWhereClauseParam("BindOrgId", p_org_id);
        cashFlowDetail.setNamedWhereClauseParam("BindCldId", p_cld_id);
        cashFlowDetail.setNamedWhereClauseParam("BindFyId", fyId);
        cashFlowDetail.setNamedWhereClauseParam("BindHoOrgId", resolvEl("#{pageFlowScope.GLBL_APP_HO_ORG_ID}"));
        //cashFlowDetail.executeQuery();
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String msg = valueExp.getValue(elContext).toString();
        return msg;
    }

    public void setcashFlowGraph(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                                 Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);
        System.out.println("setcashFlowGraph");
        ViewObjectImpl cashFlowGraph = this.getCashFlowGraph1();
        cashFlowGraph.setNamedWhereClauseParam("BindOrgId", p_org_id);
        cashFlowGraph.setNamedWhereClauseParam("BindCldId", p_cld_id);
        cashFlowGraph.setNamedWhereClauseParam("BindFyId", fyId);
        // cashFlowGraph.executeQuery();

    }

    public void setLovOrgFy(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                            Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl LovOrgFy = this.getLovOrgFyVO();
        LovOrgFy.setNamedWhereClauseParam("BindOrgId", p_org_id);
        LovOrgFy.setNamedWhereClauseParam("BindCldId", p_cld_id);
        //LovOrgFy.executeQuery();

    }

    public void setFyCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                              Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl FyCashFlow = this.getFyCashFlowVO();
        FyCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        FyCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        //FyCashFlow.executeQuery();
    }

    public void setCoaCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                               Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);
        System.out.println("setCoaCashFlow");
        ViewObjectImpl CoaCashFlow = this.getCOACashFlowVO();
        CoaCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        CoaCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        CoaCashFlow.setNamedWhereClauseParam("BindFyId", fyId);
        //CoaCashFlow.executeQuery();
    }

    public void setQtrCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                               Integer p_mon_id) {
        System.out.println("setQtrCashFlow");
        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl QtrCashFlow = this.getQuarterCashFlowVO();
        QtrCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        QtrCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        QtrCashFlow.setNamedWhereClauseParam("BindFyId", fyId);
        QtrCashFlow.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        //QtrCashFlow.executeQuery();
    }

    public void setMonCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                               Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);
        System.out.println("setMonCashFlow");
        ViewObjectImpl MonCashFlow = this.getMonthCashFlowVO();
        MonCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        MonCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        MonCashFlow.setNamedWhereClauseParam("BindFyId", fyId);
        MonCashFlow.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        MonCashFlow.setNamedWhereClauseParam("BindQtrId", p_qtr_id);
        //MonCashFlow.executeQuery();
    }

    public void setIncCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                               Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl IncCashFlow = this.getIncomeCashFlowVO();
        IncCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        IncCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        IncCashFlow.setNamedWhereClauseParam("BindFyId", fyId);
        IncCashFlow.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        IncCashFlow.setNamedWhereClauseParam("BindQtrId", p_qtr_id);
        IncCashFlow.setNamedWhereClauseParam("BindMonId", p_mon_id);
        //IncCashFlow.executeQuery();
    }

    public void setExpCashFlow(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                               Integer p_mon_id) {

        Integer fyId = getMaxFyId(p_cld_id, p_org_id, p_fy_id);

        ViewObjectImpl ExpCashFlow = this.getExpenseCashFlowVO();
        ExpCashFlow.setNamedWhereClauseParam("BindCldId", p_cld_id);
        ExpCashFlow.setNamedWhereClauseParam("BindOrgId", p_org_id);
        ExpCashFlow.setNamedWhereClauseParam("BindFyId", fyId);
        ExpCashFlow.setNamedWhereClauseParam("BindCoaId", p_coa_id);
        ExpCashFlow.setNamedWhereClauseParam("BindQtrId", p_qtr_id);
        ExpCashFlow.setNamedWhereClauseParam("BindMonId", p_mon_id);
        //ExpCashFlow.executeQuery();
    }


    public void setParameters(String p_org_id, String p_cld_id, Integer p_fy_id, Integer p_coa_id, String p_qtr_id,
                              Integer p_mon_id) {


        this.setcashFlowHeader(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setcashFlowDetail(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setcashFlowGraph(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setLovOrgFy(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setCoaCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setQtrCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setMonCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setIncCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setExpCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);
        this.setExpCashFlow(p_org_id, p_cld_id, p_fy_id, p_coa_id, p_qtr_id, p_mon_id);

        System.out.println("p_cld_id-->" + p_cld_id + "p_org_id-->" + p_org_id + " p_fy_id-->" + p_fy_id +
                           " p_coa_id " + p_coa_id + " p_qtr_id " + p_qtr_id + "p_mon_id" + p_mon_id);
    }

    /**
     * @param voNm as viewobject name
     * @param attrNm as attribute name
     * Method to return the value of the named attribute of the current row.
     * **/
    public String getCurrRowAttribute(String voNm, String attrNm) {
        System.out.println("voNm " + voNm + " attrNm " + attrNm);
        String retVal;

        retVal = ((ViewObjectImpl)findObject(voNm)).getCurrentRow().getAttribute(attrNm).toString();


        return retVal;
    }

    /**
     * Container's getter for CashFlowGraph1.
     * @return CashFlowGraph1
     */
    public CashFlowGraphVOImpl getCashFlowGraph1() {
        return (CashFlowGraphVOImpl)findViewObject("CashFlowGraph1");
    }

    /**
     * Container's getter for CashFlowHeader1.
     * @return CashFlowHeader1
     */
    public CashFlowHeaderVOImpl getCashFlowHeader1() {
        return (CashFlowHeaderVOImpl)findViewObject("CashFlowHeader1");
    }


    /**
     * Container's getter for CashFlowDetail3.
     * @return CashFlowDetail3
     */
    public CashFlowDetailVOImpl getCashFlowDetail3() {
        return (CashFlowDetailVOImpl)findViewObject("CashFlowDetail3");
    }

    /**
     * Container's getter for LovOrgFyVO.
     * @return LovOrgFyVO
     */
    public ViewObjectImpl getLovOrgFyVO() {
        return (ViewObjectImpl)findViewObject("LovOrgFyVO");
    }

    private Integer getMaxFyId(String p_cld_id, String p_org_id, Integer p_fy_id) {


        System.out.println("p_fy_id-->" + p_fy_id);
        if (p_fy_id == null) {

            maxFyId = getFyId(p_cld_id, p_org_id);
            System.out.println("maxFyId " + maxFyId);
        } else {
            maxFyId = p_fy_id;
        }


        return maxFyId;

    }

    private Integer getFyId(String cldId, String orgId) {

        Integer fyId = null;

        try {
            fyId =
Integer.parseInt(callStoredFunction(NUMERIC, "APP.FN_GET_MAX_FY(?,?)", new Object[] { cldId, orgId }).toString());

        } catch (NumberFormatException nfe) {
            // TODO: Add catch code
            fyId = Integer.parseInt(getLovOrgFyVO().first().getAttribute("OrgFyId").toString());
            nfe.printStackTrace();
        }
        return fyId;
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            e.getMessage().indexOf("\n");

            throw new JboException(e.getMessage());
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

    /**
     * Container's getter for COACashFlowVO.
     * @return COACashFlowVO
     */
    public ViewObjectImpl getCOACashFlowVO() {
        return (ViewObjectImpl)findViewObject("COACashFlowVO");
    }

    /**
     * Container's getter for ExpenseCashFlowVO.
     * @return ExpenseCashFlowVO
     */
    public ViewObjectImpl getExpenseCashFlowVO() {
        return (ViewObjectImpl)findViewObject("ExpenseCashFlowVO");
    }

    /**
     * Container's getter for FyCashFlowVO.
     * @return FyCashFlowVO
     */
    public ViewObjectImpl getFyCashFlowVO() {
        return (ViewObjectImpl)findViewObject("FyCashFlowVO");
    }


    /**
     * Container's getter for IncomeCashFlowVO.
     * @return IncomeCashFlowVO
     */
    public ViewObjectImpl getIncomeCashFlowVO() {
        return (ViewObjectImpl)findViewObject("IncomeCashFlowVO");
    }

    /**
     * Container's getter for MonthCashFlowVO.
     * @return MonthCashFlowVO
     */
    public ViewObjectImpl getMonthCashFlowVO() {
        return (ViewObjectImpl)findViewObject("MonthCashFlowVO");
    }

    /**
     * Container's getter for QuarterCashFlowVO.
     * @return QuarterCashFlowVO
     */
    public ViewObjectImpl getQuarterCashFlowVO() {
        return (ViewObjectImpl)findViewObject("QuarterCashFlowVO");
    }
}
