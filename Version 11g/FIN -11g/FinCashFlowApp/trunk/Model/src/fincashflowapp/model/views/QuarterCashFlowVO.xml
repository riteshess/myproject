<?xml version="1.0" encoding="windows-1252" ?>
<!DOCTYPE ViewObject SYSTEM "jbo_03_01.dtd">
<!---->
<ViewObject
  xmlns="http://xmlns.oracle.com/bc4j"
  Name="QuarterCashFlowVO"
  Version="11.1.2.64.36"
  BindingStyle="OracleName"
  CustomQuery="true"
  PageIterMode="Full"
  UseGlueCode="false">
  <DesignTime>
    <Attr Name="_isExpertMode" Value="true"/>
  </DesignTime>
  <Properties>
    <SchemaBasedProperties>
      <LABEL
        ResId="fincashflowapp.model.views.QuarterCashFlowVO_LABEL"/>
    </SchemaBasedProperties>
  </Properties>
  <Variable
    Name="BindCldId"
    Kind="where"
    Type="java.lang.String"/>
  <Variable
    Name="BindOrgId"
    Kind="where"
    Type="java.lang.String"/>
  <Variable
    Name="BindFyId"
    Kind="where"
    Type="java.lang.Integer"/>
  <Variable
    Name="BindCoaId"
    Kind="where"
    Type="oracle.jbo.domain.Number"/>
  <Variable
    Name="BindQtrId"
    Kind="where"
    Type="java.lang.String"/>
  <SQLQuery><![CDATA[select  gl_cld_id CLD_ID,
        gl_org_id ORG_ID,
        gl_fy_id ORG_FY_ID,
        gl_qtr   QUARTER,
       sum(cum_op_bal_signed) OP_BAL_AMT_signed,
        abs(sum(cum_op_bal_signed)) OP_BAL_AMT,
        case
            when sign(sum(cum_op_bal_signed)) in (1,0) then 'Dr' else 'Cr'
        end OP_BAL_TYP,
        sum(inflow)  INFLOW_AMT,
        sum(outflow) OUTFLOW_AMT,
        abs(sum(cum_op_bal_signed) + sum(inflow) - sum(outflow)) CASH_POSITION_AMT,
        case
            when sign(sum(cum_op_bal_signed) + sum(inflow) - sum(outflow)) in (1,0)then 'Dr' else 'Cr'
        end CASH_POSITION_AMT_TYP
from    (
        select    a.gl_cld_id,
                a.gl_org_id,
                a.gl_fy_id,
                a.gl_qtr,
                a.qtr_start_date,
                a.qtr_end_date,
                a.gl_coa_id,
                nvl(a.gl_op_amt_temp_signed,0) gl_op_amt_temp_signed,
                nvl(c.cum_inflow,0) cum_inflow,
                nvl(b.inflow,0) inflow,
                nvl(c.cum_outflow,0) cum_outflow,
                nvl(b.outflow,0) outflow,
                case
                    when a.gl_qtr = 'QTR 1' then
                        nvl(a.gl_op_amt_temp_signed,0)
                    else
                        nvl(a.gl_op_amt_temp_signed,0) + (nvl(c.cum_inflow,0) - nvl(b.inflow,0)) - (nvl(c.cum_outflow,0) - nvl(b.outflow,0))
                end cum_op_bal_signed
        from    (
                select    a.org_coa_cld_id gl_cld_id,
                        a.org_id gl_org_id,
                        a.org_fy_id gl_fy_id,
                        b.gl_qtr,
                        b.qtr_start_date,
                        b.qtr_end_date,
                        a.org_coa_id gl_coa_id,
                        case
                            when a.org_coa_op_bal_typ = 'Dr' then a.org_coa_op_bal
                            when a.org_coa_op_bal_typ = 'Cr' then -a.org_coa_op_bal
                        end gl_op_amt_temp_signed
                from     fin.org$coa$fy a,
                        (
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 1' gl_qtr,
                                fy_strt qtr_start_date,
                                add_months(fy_strt,3) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 2' gl_qtr,
                                add_months(fy_strt,3) qtr_start_date,
                                add_months(fy_strt,6) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 3' gl_qtr,
                                add_months(fy_strt,6) qtr_start_date,
                                add_months(fy_strt,9) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 4' gl_qtr,
                                add_months(fy_strt,9) qtr_start_date,
                                fy_end qtr_end_date
                        from     app.org$fy
                        where fy_type = 'FY'
                        --order by 1,2,3;
                        )  b,
                        fin.fin$coa c
                where    b.gl_cld_id = a.org_coa_cld_id
                and b.gl_org_id = a.org_id
                and b.gl_fy_id = a.org_fy_id
                and c.coa_cld_id = a.org_coa_cld_id
                and c.coa_ho_org_id = nvl(app.fn_get_parent_org_l0(a.org_coa_cld_id,a.org_id),a.org_id)
                and c.coa_id = a.org_coa_id
                and     exists (select 1
                        from fin$acc$na fc
                        where fc.acc_cld_id = c.coa_cld_id
                        and fc.acc_sloc_id = c.coa_sloc_id
                        and fc.ho_org_id = c.coa_ho_org_id
                        and fc.acc_id = c.coa_acc_id
                        and fc.acc_type in (78, 79))
                --order by 1,2,3,7,4
                ) a,
                (
                select    a.gl_cld_id,
                            a.gl_org_id,
                            a.gl_coa_id,
                            b.gl_fy_id,
                            b.gl_qtr,
                            b.qtr_start_date,
                            b.qtr_end_date,
                            nvl(sum(decode(a.gl_amt_typ, 'Dr', round(a.gl_amt_bs,2), 0)),0) inflow,
                            nvl(sum(decode(a.gl_amt_typ, 'Cr', round(a.gl_amt_bs,2), 0)),0) outflow
                from    fin.gl_lines a,
                        (
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 1' gl_qtr,
                                fy_strt qtr_start_date,
                                add_months(fy_strt,3) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 2' gl_qtr,
                                add_months(fy_strt,3) qtr_start_date,
                                add_months(fy_strt,6) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 3' gl_qtr,
                                add_months(fy_strt,6) qtr_start_date,
                                add_months(fy_strt,9) - 1 qtr_end_date
                        from     app.org$fy
                        where    fy_type = 'FY'
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 4' gl_qtr,
                                add_months(fy_strt,9) qtr_start_date,
                                fy_end qtr_end_date
                        from     app.org$fy
                        where fy_type = 'FY'
                        --order by 1,2,3;
                        )  b
                where     a.gl_cld_id = b.gl_cld_id
                and     a.gl_org_id = b.gl_org_id
                and     a.gl_vou_dt between trunc(b.qtr_start_date) and trunc(b.qtr_end_date)
                and     a.gl_txn_typ_mig not in ('O','MO')
                and     exists (select 1
                    from fin$acc$na fc
                    where fc.ACC_CLD_ID = a.GL_CLD_ID
                    and fc.ACC_SLOC_ID = a.GL_SLOC_ID
                    and fc.HO_ORG_ID = a.GL_HO_ORG_ID
                    and fc.acc_id = a.gl_na_id
                    and fc.acc_type in (78, 79)
                    )
                group by a.gl_cld_id,
                            a.gl_org_id,
                            b.gl_fy_id,
                            b.gl_qtr,
                            b.qtr_start_date,
                            b.qtr_end_date,
                            a.gl_coa_id
                --order by 1,2,3,4,5
                ) b,
                (
                select    a.gl_cld_id,
                            a.gl_org_id,
                            a.gl_coa_id,
                            b.gl_fy_id,
                            b.gl_qtr,
                            b.qtr_start_date,
                            b.qtr_end_date,
                            nvl(sum(decode(a.gl_amt_typ, 'Dr', round(a.gl_amt_bs,2), 0)),0) cum_inflow,
                            nvl(sum(decode(a.gl_amt_typ, 'Cr', round(a.gl_amt_bs,2), 0)),0) cum_outflow
                from    fin.gl_lines a,
                        (
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 1' gl_qtr,
                                fy_strt qtr_start_date,
                                add_months(fy_strt,3) - 1 qtr_end_date,
                                fy_strt,
                                fy_end
                        from     app.org$fy fy
                        where    fy_type = 'FY'
                        AND FY.ORG_ID=nvl(:BindOrgId, fy.org_id)
                        AND FY.ORG_FY_ID=nvl(:BindFyId, fy.org_fy_id)
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 2' gl_qtr,
                                add_months(fy_strt,3) qtr_start_date,
                                add_months(fy_strt,6) - 1 qtr_end_date,
                                fy_strt,
                                fy_end
                        from     app.org$fy fy
                        where    fy_type = 'FY'
                         AND FY.ORG_ID=nvl(:BindOrgId, fy.org_id)
                        AND FY.ORG_FY_ID=nvl(:BindFyId, fy.org_fy_id)
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 3' gl_qtr,
                                add_months(fy_strt,6) qtr_start_date,
                                add_months(fy_strt,9) - 1 qtr_end_date,
                                fy_strt,
                                fy_end
                        from     app.org$fy fy
                        where    fy_type = 'FY'
                         AND FY.ORG_ID=nvl(:BindOrgId, fy.org_id)
                        AND FY.ORG_FY_ID=nvl(:BindFyId, fy.org_fy_id)
                        union
                        select    cld_id gl_cld_id,
                                org_id gl_org_id,
                                org_fy_id gl_fy_id,
                                'QTR 4' gl_qtr,
                                add_months(fy_strt,9) qtr_start_date,
                                fy_end qtr_end_date,
                                fy_strt,
                                fy_end
                        from     app.org$fy FY
                        where fy_type = 'FY'
                         AND FY.ORG_ID=nvl(:BindOrgId, fy.org_id)
                        AND FY.ORG_FY_ID=nvl(:BindFyId, fy.org_fy_id)
                        --order by 1,2,3;
                        )  b
                where     a.gl_cld_id = b.gl_cld_id
                and     a.gl_org_id = b.gl_org_id
                and     a.gl_vou_dt between trunc(b.fy_strt) and trunc(b.qtr_end_date)
                and     a.gl_txn_typ_mig not in ('O','MO')
                AND  a.gl_cld_id = nvl(:BindCldId, a.gl_cld_id)
                and    a.gl_org_id = nvl(:BindOrgId, a.gl_org_id)
                and    a.gl_fy_id = nvl(:BindFyId, a.gl_fy_id)
                and     exists (select 1
                    from fin$acc$na fc
                    where fc.ACC_CLD_ID = a.GL_CLD_ID
                    and fc.ACC_SLOC_ID = a.GL_SLOC_ID
                    and fc.HO_ORG_ID = a.GL_HO_ORG_ID
                    and fc.acc_id = a.gl_na_id
                    and fc.acc_type in (78, 79)
                    )
                group by a.gl_cld_id,
                            a.gl_org_id,
                            b.gl_fy_id,
                            b.gl_qtr,
                            b.qtr_start_date,
                            b.qtr_end_date,
                                        a.gl_coa_id
                ) c
        where a.gl_cld_id = b.gl_cld_id(+)
        and    a.gl_org_id = b.gl_org_id(+)
        and    a.gl_fy_id = b.gl_fy_id(+)
        and    a.gl_qtr = b.gl_qtr(+)
        and    a.qtr_start_date = b.qtr_start_date(+)
        and    a.qtr_end_date = b.qtr_end_date(+)
        and    a.gl_coa_id = b.gl_coa_id(+)

 
        and     a.gl_cld_id = c.gl_cld_id(+)
        and    a.gl_org_id = c.gl_org_id(+)
        and    a.gl_fy_id = c.gl_fy_id(+)
        and    a.gl_qtr = c.gl_qtr(+)
        and    a.qtr_start_date = c.qtr_start_date(+)
        and    a.qtr_end_date = c.qtr_end_date(+)
        and    a.gl_coa_id = c.gl_coa_id(+)        
        )
where gl_cld_id = nvl(:BindCldId, gl_cld_id)
and    gl_org_id = nvl(:BindOrgId, gl_org_id)
and    gl_fy_id = nvl(:BindFyId, gl_fy_id)
and    gl_qtr = nvl(:BindQtrId, gl_qtr)
and gl_coa_id = nvl(:BindCoaId, gl_coa_id)
group by gl_cld_id,
        gl_org_id,
        gl_fy_id,
        gl_qtr
order by 1,2,3]]></SQLQuery>
  <ViewAttribute
    Name="CldId"
    IsPersistent="false"
    PrecisionRule="true"
    Precision="255"
    Type="java.lang.String"
    ColumnType="VARCHAR2"
    AliasName="CLD_ID"
    Expression="CLD_ID"
    SQLType="VARCHAR">
    <DesignTime>
      <Attr Name="_DisplaySize" Value="4"/>
    </DesignTime>
  </ViewAttribute>
  <ViewAttribute
    Name="OrgId"
    IsPersistent="false"
    PrecisionRule="true"
    Precision="2"
    Type="java.lang.String"
    ColumnType="CHAR"
    AliasName="ORG_ID"
    Expression="ORG_ID"
    SQLType="VARCHAR">
    <DesignTime>
      <Attr Name="_DisplaySize" Value="2"/>
    </DesignTime>
  </ViewAttribute>
  <ViewAttribute
    Name="OrgFyId"
    IsPersistent="false"
    PrecisionRule="true"
    Type="java.lang.Integer"
    ColumnType="INTEGER"
    AliasName="ORG_FY_ID"
    Expression="ORG_FY_ID"
    SQLType="INTEGER"/>
  <ViewAttribute
    Name="Quarter"
    IsPersistent="false"
    PrecisionRule="true"
    Type="java.lang.String"
    ColumnType="VARCHAR2"
    AliasName="QUARTER"
    Expression="QUARTER"
    SQLType="VARCHAR"
    Precision="255"/>
  <ViewAttribute
    Name="OpBalAmtSigned"
    IsUpdateable="false"
    IsPersistent="false"
    PrecisionRule="true"
    Type="java.math.BigDecimal"
    ColumnType="NUMBER"
    AliasName="OP_BAL_AMT_SIGNED"
    Expression="OP_BAL_AMT_SIGNED"
    SQLType="NUMERIC"/>
  <ViewAttribute
    Name="OpBalAmt"
    IsUpdateable="false"
    IsPersistent="false"
    PrecisionRule="true"
    Type="java.math.BigDecimal"
    ColumnType="NUMBER"
    AliasName="OP_BAL_AMT"
    Expression="OP_BAL_AMT"
    SQLType="NUMERIC"/>
  <ViewAttribute
    Name="OpBalTyp"
    IsUpdateable="false"
    IsPersistent="false"
    PrecisionRule="true"
    Precision="2"
    Type="java.lang.String"
    ColumnType="CHAR"
    AliasName="OP_BAL_TYP"
    Expression="OP_BAL_TYP"
    SQLType="VARCHAR">
    <DesignTime>
      <Attr Name="_DisplaySize" Value="2"/>
    </DesignTime>
  </ViewAttribute>
  <ViewAttribute
    Name="InflowAmt"
    IsPersistent="false"
    PrecisionRule="true"
    Type="oracle.jbo.domain.Number"
    ColumnType="NUMBER"
    AliasName="INFLOW_AMT"
    Expression="INFLOW_AMT"
    SQLType="NUMERIC"/>
  <ViewAttribute
    Name="OutflowAmt"
    IsPersistent="false"
    PrecisionRule="true"
    Type="oracle.jbo.domain.Number"
    ColumnType="NUMBER"
    AliasName="OUTFLOW_AMT"
    Expression="OUTFLOW_AMT"
    SQLType="NUMERIC"/>
  <ViewAttribute
    Name="CashPositionAmt"
    IsPersistent="false"
    PrecisionRule="true"
    Type="oracle.jbo.domain.Number"
    ColumnType="NUMBER"
    AliasName="CASH_POSITION_AMT"
    Expression="CASH_POSITION_AMT"
    SQLType="NUMERIC"/>
  <ViewAttribute
    Name="CashPositionAmtTyp"
    IsUpdateable="false"
    IsPersistent="false"
    PrecisionRule="true"
    Precision="2"
    Type="java.lang.String"
    ColumnType="CHAR"
    AliasName="CASH_POSITION_AMT_TYP"
    Expression="CASH_POSITION_AMT_TYP"
    SQLType="VARCHAR">
    <DesignTime>
      <Attr Name="_DisplaySize" Value="2"/>
    </DesignTime>
  </ViewAttribute>
  <ViewCriteria
    Name="QuarterCashFlowVOCriteria"
    ViewObjectName="fincashflowapp.model.views.QuarterCashFlowVO"
    Conjunction="AND">
    <Properties>
      <CustomProperties>
        <Property
          Name="displayOperators"
          Value="InAdvancedMode"/>
        <Property
          Name="autoExecute"
          Value="false"/>
        <Property
          Name="allowConjunctionOverride"
          Value="true"/>
        <Property
          Name="showInList"
          Value="true"/>
        <Property
          Name="mode"
          Value="Basic"/>
      </CustomProperties>
    </Properties>
    <ViewCriteriaRow
      Name="QuarterCashFlowVOCriteria_row_0"
      UpperColumns="1">
      <ViewCriteriaItem
        Name="CldId"
        ViewAttribute="CldId"
        Operator="="
        Conjunction="AND"
        Value=":BindCldId"
        IsBindVarValue="true"
        Required="Optional">
        <Properties>
          <CustomProperties>
            <Property
              Name="renderedMode"
              Value="Never"/>
          </CustomProperties>
        </Properties>
      </ViewCriteriaItem>
      <ViewCriteriaItem
        Name="OrgId"
        ViewAttribute="OrgId"
        Operator="="
        Conjunction="AND"
        Value=":BindOrgId"
        IsBindVarValue="true"
        Required="Optional">
        <Properties>
          <CustomProperties>
            <Property
              Name="renderedMode"
              Value="Never"/>
          </CustomProperties>
        </Properties>
      </ViewCriteriaItem>
    </ViewCriteriaRow>
  </ViewCriteria>
  <ResourceBundle>
    <PropertiesBundle
      PropertiesFile="fincashflowapp.model.ModelBundle"/>
  </ResourceBundle>
</ViewObject>
