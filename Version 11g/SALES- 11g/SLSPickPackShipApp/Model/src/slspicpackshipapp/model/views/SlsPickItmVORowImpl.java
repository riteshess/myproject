package slspicpackshipapp.model.views;

import java.math.BigDecimal;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slspicpackshipapp.model.entities.SlsPickItmEOImpl;
import slspicpackshipapp.model.service.pickPackShipAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 03 11:07:56 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsPickItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSPICKITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        },
        SlocId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        },
        OrgId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        },
        HoOrgId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        },
        DocId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        },
        SoId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSoId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSoId((String)value);
            }
        },
        ItmId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        },
        SrNo {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSrNo((Integer)value);
            }
        },
        WhId {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        },
        SoItmQty {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSoItmQty();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSoItmQty((Number)value);
            }
        },
        ItmUom {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        },
        PickQty {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getPickQty();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setPickQty((Number)value);
            }
        },
        BalQty {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getBalQty();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setBalQty((Number)value);
            }
        },
        ItmPrice {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmPrice();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmPrice((Number)value);
            }
        },
        UsrIdCreate {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        },
        UsrIdCreateDt {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        },
        UsrIdMod {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        },
        UsrIdModDt {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        },
        TransItmSerializedFlg {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getTransItmSerializedFlg();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setTransItmSerializedFlg((String)value);
            }
        },
        TransItmPickOrder {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getTransItmPickOrder();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setTransItmPickOrder((Integer)value);
            }
        },
        SoDt {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSoDt();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSoDt((Timestamp)value);
            }
        },
        DlvDt {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getDlvDt();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setDlvDt((Timestamp)value);
            }
        },
        itemIssueCheckTrans {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getitemIssueCheckTrans();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setitemIssueCheckTrans((String)value);
            }
        },
        ItmUomBs {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        },
        ItmQtyBs {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmQtyBs();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmQtyBs((Number)value);
            }
        },
        UomConvFctr {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        },
        BcNo {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getBcNo();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setBcNo((String)value);
            }
        },
        ItmNmTrans {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getItmNmTrans();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setItmNmTrans((String)value);
            }
        },
        SoIdTrans {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSoIdTrans();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setSoIdTrans((String)value);
            }
        },
        isItmSerializedTrans {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getisItmSerializedTrans();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setisItmSerializedTrans((String)value);
            }
        },
        DisableLinkTrans {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getDisableLinkTrans();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setDisableLinkTrans((Boolean)value);
            }
        },
        ViewMmStkSummLot {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getViewMmStkSummLot();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ViewMmStkSummBin {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getViewMmStkSummBin();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ViewMmStkSummSr {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getViewMmStkSummSr();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsPickIssuBin {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSlsPickIssuBin();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsPickIssuSr {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSlsPickIssuSr();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        SlsPickIssuLot {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getSlsPickIssuLot();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmUomVO1 {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getLovItmUomVO1();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovOrderIdVO1 {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getLovOrderIdVO1();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovItmNmFrmIdVO1 {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getLovItmNmFrmIdVO1();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LovSoIdFromDocIdVO1 {
            public Object get(SlsPickItmVORowImpl obj) {
                return obj.getLovSoIdFromDocIdVO1();
            }

            public void put(SlsPickItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsPickItmVORowImpl object);

        public abstract void put(SlsPickItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int SOITMQTY = AttributesEnum.SoItmQty.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PICKQTY = AttributesEnum.PickQty.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSITMSERIALIZEDFLG = AttributesEnum.TransItmSerializedFlg.index();
    public static final int TRANSITMPICKORDER = AttributesEnum.TransItmPickOrder.index();
    public static final int SODT = AttributesEnum.SoDt.index();
    public static final int DLVDT = AttributesEnum.DlvDt.index();
    public static final int ITEMISSUECHECKTRANS = AttributesEnum.itemIssueCheckTrans.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int ITMQTYBS = AttributesEnum.ItmQtyBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int BCNO = AttributesEnum.BcNo.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int SOIDTRANS = AttributesEnum.SoIdTrans.index();
    public static final int ISITMSERIALIZEDTRANS = AttributesEnum.isItmSerializedTrans.index();
    public static final int DISABLELINKTRANS = AttributesEnum.DisableLinkTrans.index();
    public static final int VIEWMMSTKSUMMLOT = AttributesEnum.ViewMmStkSummLot.index();
    public static final int VIEWMMSTKSUMMBIN = AttributesEnum.ViewMmStkSummBin.index();
    public static final int VIEWMMSTKSUMMSR = AttributesEnum.ViewMmStkSummSr.index();
    public static final int SLSPICKISSUBIN = AttributesEnum.SlsPickIssuBin.index();
    public static final int SLSPICKISSUSR = AttributesEnum.SlsPickIssuSr.index();
    public static final int SLSPICKISSULOT = AttributesEnum.SlsPickIssuLot.index();
    public static final int LOVITMUOMVO1 = AttributesEnum.LovItmUomVO1.index();
    public static final int LOVORDERIDVO1 = AttributesEnum.LovOrderIdVO1.index();
    public static final int LOVITMNMFRMIDVO1 = AttributesEnum.LovItmNmFrmIdVO1.index();
    public static final int LOVSOIDFROMDOCIDVO1 = AttributesEnum.LovSoIdFromDocIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsPickItmVORowImpl() {
    }

    /**
     * Gets SlsPickItmEO entity object.
     * @return the SlsPickItmEO
     */
    public SlsPickItmEOImpl getSlsPickItmEO() {
        return (SlsPickItmEOImpl)getEntity(ENTITY_SLSPICKITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for SO_ID using the alias name SoId.
     * @return the SO_ID
     */
    public String getSoId() {
        return (String)getAttributeInternal(SOID);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_ID using the alias name SoId.
     * @param value value to set the SO_ID
     */
    public void setSoId(String value) {
        setAttributeInternal(SOID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);

    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer)getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for WH_ID using the alias name WhId.
     * @return the WH_ID
     */
    public String getWhId() {
        return (String)getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as attribute value for WH_ID using the alias name WhId.
     * @param value value to set the WH_ID
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for SO_ITM_QTY using the alias name SoItmQty.
     * @return the SO_ITM_QTY
     */
    public Number getSoItmQty() {
        return (Number)getAttributeInternal(SOITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_ITM_QTY using the alias name SoItmQty.
     * @param value value to set the SO_ITM_QTY
     */
    public void setSoItmQty(Number value) {
        setAttributeInternal(SOITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PICK_QTY using the alias name PickQty.
     * @return the PICK_QTY
     */
    public Number getPickQty() {

        return (Number)getAttributeInternal(PICKQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for PICK_QTY using the alias name PickQty.
     * @param value value to set the PICK_QTY
     */
    public void setPickQty(Number value) {
        // System.out.println("in SLSPick Irm Vo Row IMPL");
        pickPackShipAMImpl pickAm = (pickPackShipAMImpl)this.getApplicationModule();
        Integer chkFlg1 = pickAm.getItmAddFlg();
        //  System.out.println("ckeck flag " + chkFlg1);
        //  System.out.println("in row impl setPickQty in pick row imple = " + value + "getitm id" + getItmId());

        Integer chkFlg = pickAm.getItmAddFlg();
        //   System.out.println("ckeck flag " + chkFlg);
        if (chkFlg.equals(1)) {
            //  System.out.println("inside flag=" + chkFlg);
            setAttributeInternal(PICKQTY, value);
        }

    }

    /**
     * Gets the attribute value for BAL_QTY using the alias name BalQty.
     * @return the BAL_QTY
     */
    public Number getBalQty() {
        return (Number)getAttributeInternal(BALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_QTY using the alias name BalQty.
     * @param value value to set the BAL_QTY
     */
    public void setBalQty(Number value) {
        setAttributeInternal(BALQTY, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number)getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerializedFlg.
     * @return the TransItmSerializedFlg
     */
    public String getTransItmSerializedFlg() {
        if (getAttributeInternal(TRANSITMSERIALIZEDFLG) == null) {
            RowSet frmIdVO1 = this.getLovItmNmFrmIdVO1();
            frmIdVO1.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            frmIdVO1.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            frmIdVO1.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            frmIdVO1.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            frmIdVO1.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            frmIdVO1.executeQuery();
            String a = "";
            Row[] allRowsInRange = frmIdVO1.getAllRowsInRange();
            for (Row r : allRowsInRange) {
                a = (String)r.getAttribute("SerializedFlg");
            }
            //  System.out.println("trans seerial glag in getItmNmTrans methosd " + a.toString());
            return a;
        }
        System.out.println("outside " + getAttributeInternal(TRANSITMSERIALIZEDFLG));
        return (String)getAttributeInternal(TRANSITMSERIALIZEDFLG);


    }

    /**Method to call database function*/
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            System.out.println("____________________________________________________________________ 1");
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    System.out.println("" + bindVars[z]);
                }
            }
            st.executeUpdate();
            System.out.println("____________________________________________________________________ 2");
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            throw new JboException(e.getMessage().substring(end));
            // throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerializedFlg.
     * @param value value to set the  TransItmSerializedFlg
     */
    public void setTransItmSerializedFlg(String value) {
        //System.out.println("serialized flag value in row amimpl method " + value);
        if (value != null) {
            System.out.println("set 11 " + value);
            setAttributeInternal(TRANSITMSERIALIZEDFLG, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmPickOrder.
     * @return the TransItmPickOrder
     */
    public Integer getTransItmPickOrder() {
        /*   String itmId = null;
        Integer pickOrd = 0;
        if (getItmId() != null) {
            try {
                itmId = getItmId();

            } catch (NullPointerException npe) {
                System.out.println(npe);
            }
        }
        if (itmId != null) {
            Row[] xx = getLovItmNmFrmIdVO1().getFilteredRows("ItmId", itmId);
            if (xx.length > 0) {
                if (xx[0].getAttribute("PickOrder") != null) {
                    pickOrd = Integer.parseInt(xx[0].getAttribute("PickOrder").toString());
                } else {
                    pickOrd = 307;
                }
            }
            return pickOrd;
        } else { */
        return (Integer)getAttributeInternal(TRANSITMPICKORDER);


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmPickOrder.
     * @param value value to set the  TransItmPickOrder
     */
    public void setTransItmPickOrder(Integer value) {
        //  System.out.println("value :" + value);
        if (value == null) {
        } else {
            // System.out.println("setTransItmPickOrder in slspickitmvorowimpl when not null");
            setAttributeInternal(TRANSITMPICKORDER, value);
        }
    }

    /**
     * Gets the attribute value for SO_DT using the alias name SoDt.
     * @return the SO_DT
     */
    public Timestamp getSoDt() {
        return (Timestamp)getAttributeInternal(SODT);
    }

    /**
     * Sets <code>value</code> as attribute value for SO_DT using the alias name SoDt.
     * @param value value to set the SO_DT
     */
    public void setSoDt(Timestamp value) {
        setAttributeInternal(SODT, value);
    }

    /**
     * Gets the attribute value for DLV_DT using the alias name DlvDt.
     * @return the DLV_DT
     */
    public Timestamp getDlvDt() {
        return (Timestamp)getAttributeInternal(DLVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for DLV_DT using the alias name DlvDt.
     * @param value value to set the DLV_DT
     */
    public void setDlvDt(Timestamp value) {
        setAttributeInternal(DLVDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute itemIssueCheckTrans.
     * @return the itemIssueCheckTrans
     */
    public String getitemIssueCheckTrans() {
        pickPackShipAMImpl am = (pickPackShipAMImpl)this.getApplicationModule();
        if (getItmId() != null) {

            ViewObjectImpl lotVO = am.getSlsPickIssuLot2();
            lotVO.executeQuery();
            RowQualifier rq = new RowQualifier(lotVO);
            rq.setWhereClause("SlocId=" + getSlocId() + " and CldId='" + getCldId() + "' and OrgId='" + getOrgId() +
                              "' and HoOrgId='" + getHoOrgId() + "' and ItmId='" + getItmId() + "' and DocId='" +
                              getDocId() + "' and SoId='" + getSoId() + "'");
            Row fltrdrow[] = lotVO.getFilteredRows(rq);
            //  System.out.println("Rq-"+rq.getExprStr()+"and tot row si-"+fltrdrow.length);
            if (fltrdrow.length > 0) {

                //if(getPickQty())
                return "Y";

            } else {
                return "N";
            }
        } else {
            return "N";
        }
        // return (String) getAttributeInternal(ITEMISSUECHECKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute itemIssueCheckTrans.
     * @param value value to set the  itemIssueCheckTrans
     */
    public void setitemIssueCheckTrans(String value) {
        setAttributeInternal(ITEMISSUECHECKTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String)getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @return the ITM_QTY_BS
     */
    public Number getItmQtyBs() {
        return (Number)getAttributeInternal(ITMQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @param value value to set the ITM_QTY_BS
     */
    public void setItmQtyBs(Number value) {
        setAttributeInternal(ITMQTYBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number)getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for BC_NO using the alias name BcNo.
     * @return the BC_NO
     */
    public String getBcNo() {
        return (String)getAttributeInternal(BCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for BC_NO using the alias name BcNo.
     * @param value value to set the BC_NO
     */
    public void setBcNo(String value) {
        setAttributeInternal(BCNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    public String getItmNmTrans() {
        if (getAttributeInternal(ITMNMTRANS) == null && this.getItmId() != null) {
            RowSet frmIdVO1 = this.getLovItmNmFrmIdVO1();
            frmIdVO1.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            frmIdVO1.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            frmIdVO1.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            frmIdVO1.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            frmIdVO1.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            frmIdVO1.executeQuery();
            StringBuffer s = new StringBuffer("");
            // StringBuffer a = new StringBuffer("");
            Integer b = 307;

            Row[] allRowsInRange = frmIdVO1.getAllRowsInRange();
            for (Row r : allRowsInRange) {
                s = new StringBuffer(r.getAttribute("ItmDesc").toString());
                //  a = new StringBuffer(r.getAttribute("SerializedFlg").toString());
                if (r.getAttribute("PickOrder") != null) {
                    b = (Integer)r.getAttribute("PickOrder");
                }
            }
            //  System.out.println("Setting pickOrder :" + b +  " On Item  :" + s);
            setTransItmPickOrder(b);
            // System.out.println("trans seerial glag in getItmNmTrans methosd " + a.toString());
            // setTransItmSerializedFlg(a.toString());
            setItmNmTrans(s.toString());
        }
        return (String)getAttributeInternal(ITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoIdTrans.
     * @return the SoIdTrans
     */
    public String getSoIdTrans() {
        if (getAttributeInternal(SOIDTRANS) == null) {
            if (this.getSoId() != null) {
                RowSet docIdVO1 = this.getLovSoIdFromDocIdVO1();
                docIdVO1.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
                docIdVO1.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
                docIdVO1.setNamedWhereClauseParam("CldIdBind", this.getCldId());
                docIdVO1.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
                docIdVO1.setNamedWhereClauseParam("DocIdBind", this.getSoId());
                docIdVO1.executeQuery();
                StringBuffer s = new StringBuffer("");
                Row[] allRowsInRange = docIdVO1.getAllRowsInRange();
                for (Row r : allRowsInRange) {
                    s = new StringBuffer(r.getAttribute("SoId").toString());
                }
                setSoIdTrans(s.toString());
            }
        }
        return (String)getAttributeInternal(SOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoIdTrans.
     * @param value value to set the  SoIdTrans
     */
    public void setSoIdTrans(String value) {
        setAttributeInternal(SOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute isItmSerializedTrans.
     * @return the isItmSerializedTrans
     */
    public String getisItmSerializedTrans() {
        if (getAttributeInternal(ISITMSERIALIZEDTRANS) == null) {
            RowSet frmIdVO1 = this.getLovItmNmFrmIdVO1();
            frmIdVO1.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            frmIdVO1.setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            frmIdVO1.setNamedWhereClauseParam("CldIdBind", this.getCldId());
            frmIdVO1.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            frmIdVO1.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            frmIdVO1.executeQuery();
            String a = "";
            Row[] allRowsInRange = frmIdVO1.getAllRowsInRange();
            for (Row r : allRowsInRange) {
                a = (String)r.getAttribute("SerializedFlg");
            }
            //System.out.println("trans seerial glag in getItmNmTrans methosd " + a.toString());
            return a;
        }
        // System.out.println("outside " + getAttributeInternal(ISITMSERIALIZEDTRANS));
        return (String)getAttributeInternal(ISITMSERIALIZEDTRANS);

        //return (String) getAttributeInternal(ISITMSERIALIZEDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute isItmSerializedTrans.
     * @param value value to set the  isItmSerializedTrans
     */
    public void setisItmSerializedTrans(String value) {
        setAttributeInternal(ISITMSERIALIZEDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DisableLinkTrans.
     * @return the DisableLinkTrans
     */
    public Boolean getDisableLinkTrans() {

        RowIterator itr = getSlsPickIssuLot();
        System.out.println("row count: --"+itr.getRowCount());
        if (itr.getRowCount() > 0)
            return true;
        else
            return false;

        //return (Boolean) getAttributeInternal(DISABLELINKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DisableLinkTrans.
     * @param value value to set the  DisableLinkTrans
     */
    public void setDisableLinkTrans(Boolean value) {
        setAttributeInternal(DISABLELINKTRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummLot.
     */
    public RowIterator getViewMmStkSummLot() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummBin.
     */
    public RowIterator getViewMmStkSummBin() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummSr.
     */
    public RowIterator getViewMmStkSummSr() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsPickIssuBin.
     */
    public RowIterator getSlsPickIssuBin() {
        return (RowIterator)getAttributeInternal(SLSPICKISSUBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsPickIssuSr.
     */
    public RowIterator getSlsPickIssuSr() {
        return (RowIterator)getAttributeInternal(SLSPICKISSUSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsPickIssuLot.
     */
    public RowIterator getSlsPickIssuLot() {
        return (RowIterator)getAttributeInternal(SLSPICKISSULOT);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovItmUomVO1.
     */
    public RowSet getLovItmUomVO1() {
        return (RowSet)getAttributeInternal(LOVITMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrderIdVO1.
     */
    public RowSet getLovOrderIdVO1() {
        return (RowSet)getAttributeInternal(LOVORDERIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmNmFrmIdVO1.
     */
    public RowSet getLovItmNmFrmIdVO1() {
        return (RowSet)getAttributeInternal(LOVITMNMFRMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSoIdFromDocIdVO1.
     */
    public RowSet getLovSoIdFromDocIdVO1() {
        return (RowSet)getAttributeInternal(LOVSOIDFROMDOCIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
