package slsviewdetailsapp.model.view;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 09 12:08:53 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TempVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(TempVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        WareHouse {
            public Object get(TempVORowImpl obj) {
                return obj.getWareHouse();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setWareHouse((String)value);
            }
        }
        ,
        SlocId {
            public Object get(TempVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(TempVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(TempVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(TempVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        WhNm {
            public Object get(TempVORowImpl obj) {
                return obj.getWhNm();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setWhNm((String)value);
            }
        }
        ,
        whId {
            public Object get(TempVORowImpl obj) {
                return obj.getwhId();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setwhId((String)value);
            }
        }
        ,
        LOVWareHouseVO1 {
            public Object get(TempVORowImpl obj) {
                return obj.getLOVWareHouseVO1();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVWareHouseNMVO1 {
            public Object get(TempVORowImpl obj) {
                return obj.getLOVWareHouseNMVO1();
            }

            public void put(TempVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(TempVORowImpl object);

        public abstract void put(TempVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int WAREHOUSE = AttributesEnum.WareHouse.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int WHID = AttributesEnum.whId.index();
    public static final int LOVWAREHOUSEVO1 = AttributesEnum.LOVWareHouseVO1.index();
    public static final int LOVWAREHOUSENMVO1 = AttributesEnum.LOVWareHouseNMVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TempVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WareHouse.
     * @return the WareHouse
     */
    public String getWareHouse() {
        return (String) getAttributeInternal(WAREHOUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WareHouse.
     * @param value value to set the  WareHouse
     */
    public void setWareHouse(String value) {
        setAttributeInternal(WAREHOUSE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        //return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        //return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        //return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return resolvEl("#{pageFlowScope.ITM_ID}");
        //return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        StringBuilder i=new StringBuilder("");
        if(getwhId()!=null) {
            RowSet wh = getLOVWareHouseNMVO1();
            int range=wh.getRangeSize();
            wh.setRangeSize(-1);
            Row[] filteredRows = wh.getFilteredRows("WhId", getwhId());
            if(filteredRows.length>0) {
               Object  WhNm= filteredRows[0].getAttribute("WhNm"); 
               i=(WhNm==null?new StringBuilder(""):new StringBuilder(WhNm.toString()));
            }
        }
        return i.toString();
       // return (String) getAttributeInternal(WHNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhNm.
     * @param value value to set the  WhNm
     */
    public void setWhNm(String value) {
        setAttributeInternal(WHNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute whId.
     * @return the whId
     */
    public String getwhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute whId.
     * @param value value to set the  whId
     */
    public void setwhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWareHouseVO1.
     */
    public RowSet getLOVWareHouseVO1() {
        return (RowSet)getAttributeInternal(LOVWAREHOUSEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVWareHouseNMVO1.
     */
    public RowSet getLOVWareHouseNMVO1() {
        return (RowSet)getAttributeInternal(LOVWAREHOUSENMVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    /**
     * Method for resolving the El
     */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
}
