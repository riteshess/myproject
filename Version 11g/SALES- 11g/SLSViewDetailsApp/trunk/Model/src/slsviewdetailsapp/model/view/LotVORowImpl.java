package slsviewdetailsapp.model.view;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 08 17:11:22 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LotVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(LotVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(LotVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(LotVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(LotVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmDesc {
            public Object get(LotVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setItmDesc((String)value);
            }
        }
        ,
        WhId {
            public Object get(LotVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        LotId {
            public Object get(LotVORowImpl obj) {
                return obj.getLotId();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setLotId((String)value);
            }
        }
        ,
        TotStk {
            public Object get(LotVORowImpl obj) {
                return obj.getTotStk();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setTotStk((Number)value);
            }
        }
        ,
        AvlStk {
            public Object get(LotVORowImpl obj) {
                return obj.getAvlStk();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setAvlStk((Number)value);
            }
        }
        ,
        ResvStk {
            public Object get(LotVORowImpl obj) {
                return obj.getResvStk();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setResvStk((Number)value);
            }
        }
        ,
        RqmtAreaIdSrc {
            public Object get(LotVORowImpl obj) {
                return obj.getRqmtAreaIdSrc();
            }

            public void put(LotVORowImpl obj, Object value) {
                obj.setRqmtAreaIdSrc((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LotVORowImpl object);

        public abstract void put(LotVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int LOTID = AttributesEnum.LotId.index();
    public static final int TOTSTK = AttributesEnum.TotStk.index();
    public static final int AVLSTK = AttributesEnum.AvlStk.index();
    public static final int RESVSTK = AttributesEnum.ResvStk.index();
    public static final int RQMTAREAIDSRC = AttributesEnum.RqmtAreaIdSrc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LotVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LotId.
     * @return the LotId
     */
    public String getLotId() {
        return (String) getAttributeInternal(LOTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LotId.
     * @param value value to set the  LotId
     */
    public void setLotId(String value) {
        setAttributeInternal(LOTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotStk.
     * @return the TotStk
     */
    public Number getTotStk() {
        return (Number) getAttributeInternal(TOTSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotStk.
     * @param value value to set the  TotStk
     */
    public void setTotStk(Number value) {
        setAttributeInternal(TOTSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AvlStk.
     * @return the AvlStk
     */
    public Number getAvlStk() {
        return (Number) getAttributeInternal(AVLSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AvlStk.
     * @param value value to set the  AvlStk
     */
    public void setAvlStk(Number value) {
        setAttributeInternal(AVLSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ResvStk.
     * @return the ResvStk
     */
    public Number getResvStk() {
        return (Number) getAttributeInternal(RESVSTK);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ResvStk.
     * @param value value to set the  ResvStk
     */
    public void setResvStk(Number value) {
        setAttributeInternal(RESVSTK, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RqmtAreaIdSrc.
     * @return the RqmtAreaIdSrc
     */
    public Number getRqmtAreaIdSrc() {
        return (Number) getAttributeInternal(RQMTAREAIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RqmtAreaIdSrc.
     * @param value value to set the  RqmtAreaIdSrc
     */
    public void setRqmtAreaIdSrc(Number value) {
        setAttributeInternal(RQMTAREAIDSRC, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
