package slssecondarysaleapp.model.view;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 08 15:00:38 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CustIdTrans {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getCustIdTrans();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setCustIdTrans((String)value);
            }
        }
        ,
        CustNmTrans {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getCustNmTrans();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setCustNmTrans((String)value);
            }
        }
        ,
        ShipmentNmTrans {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getShipmentNmTrans();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setShipmentNmTrans((String)value);
            }
        }
        ,
        ShipmentIdTrans {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getShipmentIdTrans();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setShipmentIdTrans((String)value);
            }
        }
        ,
        CldId {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        FyId {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        LovCutomerVO2 {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getLovCutomerVO2();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovShipmentVO1 {
            public Object get(SearchTransVORowImpl obj) {
                return obj.getLovShipmentVO1();
            }

            public void put(SearchTransVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchTransVORowImpl object);

        public abstract void put(SearchTransVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CUSTIDTRANS = AttributesEnum.CustIdTrans.index();
    public static final int CUSTNMTRANS = AttributesEnum.CustNmTrans.index();
    public static final int SHIPMENTNMTRANS = AttributesEnum.ShipmentNmTrans.index();
    public static final int SHIPMENTIDTRANS = AttributesEnum.ShipmentIdTrans.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int LOVCUTOMERVO2 = AttributesEnum.LovCutomerVO2.index();
    public static final int LOVSHIPMENTVO1 = AttributesEnum.LovShipmentVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustIdTrans.
     * @return the CustIdTrans
     */
    public String getCustIdTrans() {
        return (String) getAttributeInternal(CUSTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustIdTrans.
     * @param value value to set the  CustIdTrans
     */
    public void setCustIdTrans(String value) {
        setAttributeInternal(CUSTIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNmTrans.
     * @return the CustNmTrans
     */
    public String getCustNmTrans() {
        return (String) getAttributeInternal(CUSTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNmTrans.
     * @param value value to set the  CustNmTrans
     */
    public void setCustNmTrans(String value) {
        setAttributeInternal(CUSTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmentNmTrans.
     * @return the ShipmentNmTrans
     */
    public String getShipmentNmTrans() {
        return (String) getAttributeInternal(SHIPMENTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmentNmTrans.
     * @param value value to set the  ShipmentNmTrans
     */
    public void setShipmentNmTrans(String value) {
        setAttributeInternal(SHIPMENTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmentIdTrans.
     * @return the ShipmentIdTrans
     */
    public String getShipmentIdTrans() {
        return (String) getAttributeInternal(SHIPMENTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmentIdTrans.
     * @param value value to set the  ShipmentIdTrans
     */
    public void setShipmentIdTrans(String value) {
        setAttributeInternal(SHIPMENTIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        //return (String) getAttributeInternal(CLDID);
        return cldId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
       // return (Integer) getAttributeInternal(SLOCID);
        return slocId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgId =resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        //return (String) getAttributeInternal(ORGID);
        return orgId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String hoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
       // return (String) getAttributeInternal(HOORGID);
        return hoOrgId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        Integer fyId = 0;
        try {
            //FUNCTION GET_ORG_FY_ID(P_CLDID VARCHAR2, P_ORG_ID VARCHAR2, P_TXN_DT DATE)
            fyId =
        (Integer)callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID(?,?,?)", new Object[] { getCldId(),
                                                                                      getOrgId(),
                                                                                      new Timestamp(System.currentTimeMillis()) });
            //  System.out.println("FY :"+fyId);
            //setFyId(fyId);
        } catch (Exception e) {
            FacesMessage message =
                new FacesMessage("There have been an error in calling function 'APP.GET_ORG_FY_ID' in EoImpl !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
            e.printStackTrace();
        }

        
        //return (String) getAttributeInternal(FYID);
        System.out.println("Financial id: "+fyId);
        return fyId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyId.
     * @param value value to set the  FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCutomerVO2.
     */
    public RowSet getLovCutomerVO2() {
        return (RowSet)getAttributeInternal(LOVCUTOMERVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShipmentVO1.
     */
    public RowSet getLovShipmentVO1() {
        return (RowSet)getAttributeInternal(LOVSHIPMENTVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    //System.out.println("___________:"+bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
}
