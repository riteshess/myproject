package slssalesinvoiceapp.model.module.view;

import java.math.BigDecimal;

import java.math.RoundingMode;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.BFileDomain;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesinvoiceapp.model.module.entity.SlsInvOcEOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 13 16:20:37 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvOcVORowImpl extends ViewRowImpl {
    public static final int ENTITY_SLSINVOCEO = 0;
    private Integer amt_digit = Integer.parseInt(resolvElAmt("#{pageFlowScope.GLBL_AMT_DIGIT}").toString());
    private Integer cur_digit = Integer.parseInt(resolvElAmt("#{pageFlowScope.GLBL_CURR_DIGIT}").toString());

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AmtBs {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getAmtBs();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setAmtBs((BigDecimal)value);
            }
        }
        ,
        AmtSp {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getAmtSp();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setAmtSp((BigDecimal)value);
            }
        }
        ,
        CldId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        CoaId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        CurrId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getCurrId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setCurrId((Integer)value);
            }
        }
        ,
        CurrRate {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getCurrRate();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setCurrRate((BigDecimal)value);
            }
        }
        ,
        DocId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        OcDesc {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getOcDesc();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setOcDesc((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        TranType {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getTranType();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setTranType((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        TransAmtSp {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getTransAmtSp();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setTransAmtSp((BigDecimal)value);
            }
        }
        ,
        TransAmtBs {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getTransAmtBs();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setTransAmtBs((BigDecimal)value);
            }
        }
        ,
        LOVOtherChargesVO1 {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getLOVOtherChargesVO1();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCoaForOCVO1 {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getLOVCoaForOCVO1();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVAmountTypeVO1 {
            public Object get(SlsInvOcVORowImpl obj) {
                return obj.getLOVAmountTypeVO1();
            }

            public void put(SlsInvOcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvOcVORowImpl object);

        public abstract void put(SlsInvOcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int CURRRATE = AttributesEnum.CurrRate.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OCDESC = AttributesEnum.OcDesc.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSAMTSP = AttributesEnum.TransAmtSp.index();
    public static final int TRANSAMTBS = AttributesEnum.TransAmtBs.index();
    public static final int LOVOTHERCHARGESVO1 = AttributesEnum.LOVOtherChargesVO1.index();
    public static final int LOVCOAFOROCVO1 = AttributesEnum.LOVCoaForOCVO1.index();
    public static final int LOVAMOUNTTYPEVO1 = AttributesEnum.LOVAmountTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvOcVORowImpl() {
    }

    /**
     * Gets SlsInvOcEO entity object.
     * @return the SlsInvOcEO
     */
    public SlsInvOcEOImpl getSlsInvOcEO() {
        return (SlsInvOcEOImpl)getEntity(ENTITY_SLSINVOCEO);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public BigDecimal getAmtBs() {

        /* BigDecimal value = (BigDecimal)getAttributeInternal(AMTBS);
        if (value != null) {
            value = value.setScale(amt_digit, RoundingMode.HALF_UP);
        }
        return value; */

         return (BigDecimal) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(BigDecimal value) {
        if (value != null) {

            value = value.setScale(amt_digit, RoundingMode.HALF_UP);
            
        }
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public BigDecimal getAmtSp() {

        return (BigDecimal) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(BigDecimal value) {
        
        if (value != null) {
            value = value.setScale(amt_digit, RoundingMode.HALF_UP);
            if(getCurrRate()!=null){
                setAmtBs(value.multiply(getCurrRate()).setScale(amt_digit, RoundingMode.HALF_UP));
            }
        }
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for CURR_ID using the alias name CurrId.
     * @return the CURR_ID
     */
    public Integer getCurrId() {
        return (Integer)getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID using the alias name CurrId.
     * @param value value to set the CURR_ID
     */
    public void setCurrId(Integer value) {
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for CURR_RATE using the alias name CurrRate.
     * @return the CURR_RATE
     */
    public BigDecimal getCurrRate() {

       /*  BigDecimal value = (BigDecimal)getAttributeInternal(CURRRATE);
        if (value != null) {
            value = value.setScale(cur_digit, RoundingMode.HALF_UP);
        }
        return value; */

         return (BigDecimal) getAttributeInternal(CURRRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_RATE using the alias name CurrRate.
     * @param value value to set the CURR_RATE
     */
    public void setCurrRate(BigDecimal value) {

        if (value != null) {
            value = value.setScale(cur_digit, RoundingMode.HALF_UP);
        }
        setAttributeInternal(CURRRATE, value);

    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for OC_DESC using the alias name OcDesc.
     * @return the OC_DESC
     */
    public Integer getOcDesc() {
        return (Integer)getAttributeInternal(OCDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for OC_DESC using the alias name OcDesc.
     * @param value value to set the OC_DESC
     */
    public void setOcDesc(Integer value) {
        setAttributeInternal(OCDESC, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TRAN_TYPE using the alias name TranType.
     * @return the TRAN_TYPE
     */
    public String getTranType() {
        return (String)getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAN_TYPE using the alias name TranType.
     * @param value value to set the TRAN_TYPE
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmtSp.
     * @return the TransAmtSp
     */
    public BigDecimal getTransAmtSp() {
        return (BigDecimal) getAttributeInternal(TRANSAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtSp.
     * @param value value to set the  TransAmtSp
     */
    public void setTransAmtSp(BigDecimal value) {
        setAttributeInternal(TRANSAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmtBs.
     * @return the TransAmtBs
     */
    public BigDecimal getTransAmtBs() {
        return (BigDecimal) getAttributeInternal(TRANSAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtBs.
     * @param value value to set the  TransAmtBs
     */
    public void setTransAmtBs(BigDecimal value) {
        setAttributeInternal(TRANSAMTBS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOtherChargesVO1.
     */
    public RowSet getLOVOtherChargesVO1() {
        return (RowSet)getAttributeInternal(LOVOTHERCHARGESVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCoaForOCVO1.
     */
    public RowSet getLOVCoaForOCVO1() {
        return (RowSet)getAttributeInternal(LOVCOAFOROCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAmountTypeVO1.
     */
    public RowSet getLOVAmountTypeVO1() {
        return (RowSet)getAttributeInternal(LOVAMOUNTTYPEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    public Object resolvElAmt(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object digit = 2;
        if (valueExp != null) {
            digit = valueExp.getValue(elContext);
        }
        if (digit == null) {
            digit = 2;
        }

        return digit;
    }
}
