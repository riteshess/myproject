package slssalesinvoiceapp.model.module.entity;

import java.math.BigDecimal;

import java.math.BigInteger;

import java.sql.CallableStatement;
import java.sql.SQLException;


import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 29 15:12:18 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(SlsInvEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        CurrRate {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCurrRate();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCurrRate((BigDecimal)value);
            }
        }
        ,
        InvType {
            public Object get(SlsInvEOImpl obj) {
                return obj.getInvType();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setInvType((Integer)value);
            }
        }
        ,
        EoId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getEoId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        IntimSlipId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getIntimSlipId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setIntimSlipId((String)value);
            }
        }
        ,
        BillAdd {
            public Object get(SlsInvEOImpl obj) {
                return obj.getBillAdd();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setBillAdd((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsInvEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsInvEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsInvEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsInvEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        TotAmtSp {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTotAmtSp();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTotAmtSp((BigDecimal)value);
            }
        }
        ,
        TotAmtBs {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTotAmtBs();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTotAmtBs((BigDecimal)value);
            }
        }
        ,
        DiscType {
            public Object get(SlsInvEOImpl obj) {
                return obj.getDiscType();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setDiscType((String)value);
            }
        }
        ,
        DiscVal {
            public Object get(SlsInvEOImpl obj) {
                return obj.getDiscVal();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setDiscVal((BigDecimal)value);
            }
        }
        ,
        TaxAfterDiscFlg {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTaxAfterDiscFlg();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTaxAfterDiscFlg((String)value);
            }
        }
        ,
        DispDocId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getDispDocId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setDispDocId((String)value);
            }
        }
        ,
        CurrIdSp {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCurrIdSp();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCurrIdSp((Integer)value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTaxRuleFlg((String)value);
            }
        }
        ,
        CurrIdBs {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCurrIdBs();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCurrIdBs((Integer)value);
            }
        }
        ,
        TransTotPaymentAmt {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTransTotPaymentAmt();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTransTotPaymentAmt((BigDecimal)value);
            }
        }
        ,
        InvStat {
            public Object get(SlsInvEOImpl obj) {
                return obj.getInvStat();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setInvStat((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCoaId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        Remarks {
            public Object get(SlsInvEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        FyId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getFyId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        InvMode {
            public Object get(SlsInvEOImpl obj) {
                return obj.getInvMode();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setInvMode((Integer)value);
            }
        }
        ,
        ExtDocNo {
            public Object get(SlsInvEOImpl obj) {
                return obj.getExtDocNo();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setExtDocNo((String)value);
            }
        }
        ,
        ExtDocDt {
            public Object get(SlsInvEOImpl obj) {
                return obj.getExtDocDt();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setExtDocDt((Timestamp)value);
            }
        }
        ,
        CashCustNm {
            public Object get(SlsInvEOImpl obj) {
                return obj.getCashCustNm();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setCashCustNm((String)value);
            }
        }
        ,
        SalesVouId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSalesVouId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setSalesVouId((String)value);
            }
        }
        ,
        RefDocId {
            public Object get(SlsInvEOImpl obj) {
                return obj.getRefDocId();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setRefDocId((String)value);
            }
        }
        ,
        TotItmAmtGsSp {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTotItmAmtGsSp();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTotItmAmtGsSp((BigDecimal)value);
            }
        }
        ,
        TotItmAmtGsBs {
            public Object get(SlsInvEOImpl obj) {
                return obj.getTotItmAmtGsBs();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setTotItmAmtGsBs((BigDecimal)value);
            }
        }
        ,
        InvSubType {
            public Object get(SlsInvEOImpl obj) {
                return obj.getInvSubType();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setInvSubType((Integer)value);
            }
        }
        ,
        SlsInvDtl {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSlsInvDtl();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsInvTnc {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSlsInvTnc();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsInvPmntSchdl {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSlsInvPmntSchdl();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsInvCalc {
            public Object get(SlsInvEOImpl obj) {
                return obj.getSlsInvCalc();
            }

            public void put(SlsInvEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvEOImpl object);

        public abstract void put(SlsInvEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int CURRRATE = AttributesEnum.CurrRate.index();
    public static final int INVTYPE = AttributesEnum.InvType.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int INTIMSLIPID = AttributesEnum.IntimSlipId.index();
    public static final int BILLADD = AttributesEnum.BillAdd.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int DISCTYPE = AttributesEnum.DiscType.index();
    public static final int DISCVAL = AttributesEnum.DiscVal.index();
    public static final int TAXAFTERDISCFLG = AttributesEnum.TaxAfterDiscFlg.index();
    public static final int DISPDOCID = AttributesEnum.DispDocId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int CURRIDBS = AttributesEnum.CurrIdBs.index();
    public static final int TRANSTOTPAYMENTAMT = AttributesEnum.TransTotPaymentAmt.index();
    public static final int INVSTAT = AttributesEnum.InvStat.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int INVMODE = AttributesEnum.InvMode.index();
    public static final int EXTDOCNO = AttributesEnum.ExtDocNo.index();
    public static final int EXTDOCDT = AttributesEnum.ExtDocDt.index();
    public static final int CASHCUSTNM = AttributesEnum.CashCustNm.index();
    public static final int SALESVOUID = AttributesEnum.SalesVouId.index();
    public static final int REFDOCID = AttributesEnum.RefDocId.index();
    public static final int TOTITMAMTGSSP = AttributesEnum.TotItmAmtGsSp.index();
    public static final int TOTITMAMTGSBS = AttributesEnum.TotItmAmtGsBs.index();
    public static final int INVSUBTYPE = AttributesEnum.InvSubType.index();
    public static final int SLSINVDTL = AttributesEnum.SlsInvDtl.index();
    public static final int SLSINVTNC = AttributesEnum.SlsInvTnc.index();
    public static final int SLSINVPMNTSCHDL = AttributesEnum.SlsInvPmntSchdl.index();
    public static final int SLSINVCALC = AttributesEnum.SlsInvCalc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slssalesinvoiceapp.model.module.entity.SlsInvEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }


    /**
     * Gets the attribute value for CurrRate, using the alias name CurrRate.
     * @return the value of CurrRate
     */
    public BigDecimal getCurrRate() {
        return (BigDecimal)getAttributeInternal(CURRRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrRate.
     * @param value value to set the CurrRate
     */
    public void setCurrRate(BigDecimal value) {
        setAttributeInternal(CURRRATE, value);
    }

    /**
     * Gets the attribute value for InvType, using the alias name InvType.
     * @return the value of InvType
     */
    public Integer getInvType() {
        return (Integer)getAttributeInternal(INVTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvType.
     * @param value value to set the InvType
     */
    public void setInvType(Integer value) {
        setAttributeInternal(INVTYPE, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for IntimSlipId, using the alias name IntimSlipId.
     * @return the value of IntimSlipId
     */
    public String getIntimSlipId() {
        return (String)getAttributeInternal(INTIMSLIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IntimSlipId.
     * @param value value to set the IntimSlipId
     */
    public void setIntimSlipId(String value) {
        setAttributeInternal(INTIMSLIPID, value);
    }

    /**
     * Gets the attribute value for BillAdd, using the alias name BillAdd.
     * @return the value of BillAdd
     */
    public String getBillAdd() {
        return (String)getAttributeInternal(BILLADD);
    }

    /**
     * Sets <code>value</code> as the attribute value for BillAdd.
     * @param value value to set the BillAdd
     */
    public void setBillAdd(String value) {
        setAttributeInternal(BILLADD, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for TotAmtSp, using the alias name TotAmtSp.
     * @return the value of TotAmtSp
     */
    public BigDecimal getTotAmtSp() {
        return (BigDecimal)getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtSp.
     * @param value value to set the TotAmtSp
     */
    public void setTotAmtSp(BigDecimal value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for TotAmtBs, using the alias name TotAmtBs.
     * @return the value of TotAmtBs
     */
    public BigDecimal getTotAmtBs() {
        return (BigDecimal)getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtBs.
     * @param value value to set the TotAmtBs
     */
    public void setTotAmtBs(BigDecimal value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for DiscType, using the alias name DiscType.
     * @return the value of DiscType
     */
    public String getDiscType() {
        return (String)getAttributeInternal(DISCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscType.
     * @param value value to set the DiscType
     */
    public void setDiscType(String value) {
        setAttributeInternal(DISCTYPE, value);
    }

    /**
     * Gets the attribute value for DiscVal, using the alias name DiscVal.
     * @return the value of DiscVal
     */
    public BigDecimal getDiscVal() {
        return (BigDecimal)getAttributeInternal(DISCVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DiscVal.
     * @param value value to set the DiscVal
     */
    public void setDiscVal(BigDecimal value) {
        setAttributeInternal(DISCVAL, value);
    }

    /**
     * Gets the attribute value for TaxAfterDiscFlg, using the alias name TaxAfterDiscFlg.
     * @return the value of TaxAfterDiscFlg
     */
    public String getTaxAfterDiscFlg() {
        return (String)getAttributeInternal(TAXAFTERDISCFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxAfterDiscFlg.
     * @param value value to set the TaxAfterDiscFlg
     */
    public void setTaxAfterDiscFlg(String value) {
        setAttributeInternal(TAXAFTERDISCFLG, value);
    }

    /**
     * Gets the attribute value for DispDocId, using the alias name DispDocId.
     * @return the value of DispDocId
     */
    public String getDispDocId() {
        return (String)getAttributeInternal(DISPDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DispDocId.
     * @param value value to set the DispDocId
     */
    public void setDispDocId(String value) {
        setAttributeInternal(DISPDOCID, value);
    }


    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer)getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for TaxRuleFlg, using the alias name TaxRuleFlg.
     * @return the value of TaxRuleFlg
     */
    public String getTaxRuleFlg() {
        return (String)getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleFlg.
     * @param value value to set the TaxRuleFlg
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for CurrIdBs, using the alias name CurrIdBs.
     * @return the value of CurrIdBs
     */
    public Integer getCurrIdBs() {
        return (Integer)getAttributeInternal(CURRIDBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdBs.
     * @param value value to set the CurrIdBs
     */
    public void setCurrIdBs(Integer value) {
        setAttributeInternal(CURRIDBS, value);
    }

    /**
     * Gets the attribute value for TransTotPaymentAmt, using the alias name TransTotPaymentAmt.
     * @return the value of TransTotPaymentAmt
     */
    public BigDecimal getTransTotPaymentAmt() {
        return (BigDecimal)getAttributeInternal(TRANSTOTPAYMENTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransTotPaymentAmt.
     * @param value value to set the TransTotPaymentAmt
     */
    public void setTransTotPaymentAmt(BigDecimal value) {
        setAttributeInternal(TRANSTOTPAYMENTAMT, value);
    }

    /**
     * Gets the attribute value for InvStat, using the alias name InvStat.
     * @return the value of InvStat
     */
    public Integer getInvStat() {
        return (Integer)getAttributeInternal(INVSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvStat.
     * @param value value to set the InvStat
     */
    public void setInvStat(Integer value) {
        setAttributeInternal(INVSTAT, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for InvMode, using the alias name InvMode.
     * @return the value of InvMode
     */
    public Integer getInvMode() {
        return (Integer)getAttributeInternal(INVMODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvMode.
     * @param value value to set the InvMode
     */
    public void setInvMode(Integer value) {
        setAttributeInternal(INVMODE, value);
    }

    /**
     * Gets the attribute value for ExtDocNo, using the alias name ExtDocNo.
     * @return the value of ExtDocNo
     */
    public String getExtDocNo() {
        return (String)getAttributeInternal(EXTDOCNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtDocNo.
     * @param value value to set the ExtDocNo
     */
    public void setExtDocNo(String value) {
        setAttributeInternal(EXTDOCNO, value);
    }

    /**
     * Gets the attribute value for ExtDocDt, using the alias name ExtDocDt.
     * @return the value of ExtDocDt
     */
    public Timestamp getExtDocDt() {
        return (Timestamp)getAttributeInternal(EXTDOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtDocDt.
     * @param value value to set the ExtDocDt
     */
    public void setExtDocDt(Timestamp value) {
        setAttributeInternal(EXTDOCDT, value);
    }

    /**
     * Gets the attribute value for CashCustNm, using the alias name CashCustNm.
     * @return the value of CashCustNm
     */
    public String getCashCustNm() {
        return (String)getAttributeInternal(CASHCUSTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for CashCustNm.
     * @param value value to set the CashCustNm
     */
    public void setCashCustNm(String value) {
        setAttributeInternal(CASHCUSTNM, value);
    }

    /**
     * Gets the attribute value for SalesVouId, using the alias name SalesVouId.
     * @return the value of SalesVouId
     */
    public String getSalesVouId() {
        return (String)getAttributeInternal(SALESVOUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SalesVouId.
     * @param value value to set the SalesVouId
     */
    public void setSalesVouId(String value) {
        setAttributeInternal(SALESVOUID, value);
    }

    /**
     * Gets the attribute value for RefDocId, using the alias name RefDocId.
     * @return the value of RefDocId
     */
    public String getRefDocId() {
        return (String)getAttributeInternal(REFDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefDocId.
     * @param value value to set the RefDocId
     */
    public void setRefDocId(String value) {
        setAttributeInternal(REFDOCID, value);
    }

    /**
     * Gets the attribute value for TotItmAmtGsSp, using the alias name TotItmAmtGsSp.
     * @return the value of TotItmAmtGsSp
     */
    public BigDecimal getTotItmAmtGsSp() {
        return (BigDecimal)getAttributeInternal(TOTITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotItmAmtGsSp.
     * @param value value to set the TotItmAmtGsSp
     */
    public void setTotItmAmtGsSp(BigDecimal value) {
        setAttributeInternal(TOTITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for TotItmAmtGsBs, using the alias name TotItmAmtGsBs.
     * @return the value of TotItmAmtGsBs
     */
    public BigDecimal getTotItmAmtGsBs() {
        return (BigDecimal)getAttributeInternal(TOTITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotItmAmtGsBs.
     * @param value value to set the TotItmAmtGsBs
     */
    public void setTotItmAmtGsBs(BigDecimal value) {
        setAttributeInternal(TOTITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for InvSubType, using the alias name InvSubType.
     * @return the value of InvSubType
     */
    public Integer getInvSubType() {
        return (Integer)getAttributeInternal(INVSUBTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InvSubType.
     * @param value value to set the InvSubType
     */
    public void setInvSubType(Integer value) {
        setAttributeInternal(INVSUBTYPE, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsInvDtl() {
        return (RowIterator)getAttributeInternal(SLSINVDTL);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsInvTnc() {
        return (RowIterator)getAttributeInternal(SLSINVTNC);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsInvPmntSchdl() {
        return (RowIterator)getAttributeInternal(SLSINVPMNTSCHDL);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsInvCalc() {
        return (RowIterator)getAttributeInternal(SLSINVCALC);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param eoId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       Integer eoId) {
        return new Key(new Object[]{cldId, slocId, orgId, hoOrgId, docId, eoId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setDocDt(new Timestamp(System.currentTimeMillis()));
        
        String val =
            (String)callStoredFunction(Types.VARCHAR, "APP.PKG_APP.get_txn_id(?,?,?,?,?)", new Object[] { getUsrIdCreate(),
                                                                                                          getOrgId(),
                                                                                                          getSlocId(),
                                                                                                          21504,
                                                                                                          getCldId() });
        Integer fyId = 0;
        try {
            StringBuffer cldId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
            StringBuffer orgId = new StringBuffer(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
            //FUNCTION GET_ORG_FY_ID(P_CLDID VARCHAR2, P_ORG_ID VARCHAR2, P_TXN_DT DATE)
            fyId =(Integer)callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID(?,?,?)", new Object[] {cldId.toString(),orgId.toString(), getDocDt() });
            System.out.println("FY :"+fyId);
        } catch (Exception e) {
            FacesMessage message =
                new FacesMessage("There have been an error in calling function 'APP.GET_ORG_FY_ID' in EoImpl !");
            message.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, message);
            e.printStackTrace();
        }
        

        Integer currId = getCurrIdBs(getOrgId());
        System.out.println("val----" + val);
        setDocId(val);
        setCurrIdBs(currId);
        setCurrIdSp(currId);
        setFyId(fyId);
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        setDocDt(new Timestamp(System.currentTimeMillis()));
        setInvSubType(0);

    }

    public Integer getCurrIdBs(String OrgId) {
        return (Integer)callStoredFunction(Types.INTEGER, "app.pkg_app.get_org_def_curr_bs1(?)",
                                           new Object[] { OrgId });
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        }
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    private String getDispDocIdvalue(Integer P_SLOC_ID, String P_CLD_ID, String P_ORG_ID, Integer p_doc_id,
                                     String P_DOC_hex_ID, Integer P_DOC_TYPE_ID, String P_TableName,Integer fyId) {
        System.out.println("P_SLOC_ID  " + P_SLOC_ID + "  P_CLD_ID  " + P_CLD_ID + "  P_ORG_ID  " + P_ORG_ID +
                           "  p_doc_id  " + p_doc_id + "  P_DOC_hex_ID  " + P_DOC_hex_ID + "  P_TableName  " +
                           P_TableName);

//GEN_DISP_DOC_ID(P_SLOC_ID NUMBER,P_CLD_ID VARCHAR2,P_ORG_ID VARCHAR2,p_doc_id number, P_DOC_hex_ID varchar2, P_DOC_TYPE_ID NUMBER default null,p_TableName VARCHAR2,P_FYID number)
        String val =
            (String)callStoredFunction(Types.VARCHAR, "GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?,?)", new Object[] { P_SLOC_ID,
                                                                                                       P_CLD_ID,
                                                                                                       P_ORG_ID,
                                                                                                       p_doc_id,
                                                                                                       P_DOC_hex_ID,
                                                                                                       P_DOC_TYPE_ID,
                                                                                                       P_TableName,fyId,getInvSubType() });


        System.out.println(val + "  val  "+fyId);
        return val;
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            setInvStat(217);
            setInvMode(313);
            setDispDocId(getDispDocIdvalue(getSlocId(), getCldId(), getOrgId(), 21504, getDocId(), getInvType(), "SLS$INV",getFyId()));
        }
        if (operation == DML_UPDATE) {
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
            Integer UsrId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
            setUsrIdMod(UsrId);
        }
        super.doDML(operation, e);
    }

    public Object resolvEl(Object data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, (String)data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }
}
