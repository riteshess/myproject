package slssalesinvoiceapp.model.module.view;

import java.math.BigDecimal;

import oracle.jbo.domain.Timestamp;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 11 14:02:05 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DistinctItmVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        InvoiceDocId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getInvoiceDocId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setInvoiceDocId((String)value);
            }
        }
        ,
        ShipmntDocId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getShipmntDocId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setShipmntDocId((String)value);
            }
        }
        ,
        ShipmntId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getShipmntId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setShipmntId((String)value);
            }
        }
        ,
        ItmId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmDesc {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getItmDesc();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setItmDesc((String)value);
            }
        }
        ,
        ItmRate {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getItmRate();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setItmRate((BigDecimal)value);
            }
        }
        ,
        ShipDt {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getShipDt();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setShipDt((Timestamp)value);
            }
        }
        ,
        SoId {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getSoId();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setSoId((String)value);
            }
        }
        ,
        NewPriceTrans {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getNewPriceTrans();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setNewPriceTrans((BigDecimal)value);
            }
        }
        ,
        PriceDifferenceTrans {
            public Object get(DistinctItmVORowImpl obj) {
                return obj.getPriceDifferenceTrans();
            }

            public void put(DistinctItmVORowImpl obj, Object value) {
                obj.setPriceDifferenceTrans((BigDecimal)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DistinctItmVORowImpl object);

        public abstract void put(DistinctItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int INVOICEDOCID = AttributesEnum.InvoiceDocId.index();
    public static final int SHIPMNTDOCID = AttributesEnum.ShipmntDocId.index();
    public static final int SHIPMNTID = AttributesEnum.ShipmntId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMDESC = AttributesEnum.ItmDesc.index();
    public static final int ITMRATE = AttributesEnum.ItmRate.index();
    public static final int SHIPDT = AttributesEnum.ShipDt.index();
    public static final int SOID = AttributesEnum.SoId.index();
    public static final int NEWPRICETRANS = AttributesEnum.NewPriceTrans.index();
    public static final int PRICEDIFFERENCETRANS = AttributesEnum.PriceDifferenceTrans.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DistinctItmVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceDocId.
     * @return the InvoiceDocId
     */
    public String getInvoiceDocId() {
        return (String) getAttributeInternal(INVOICEDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceDocId.
     * @param value value to set the  InvoiceDocId
     */
    public void setInvoiceDocId(String value) {
        setAttributeInternal(INVOICEDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmntDocId.
     * @return the ShipmntDocId
     */
    public String getShipmntDocId() {
        return (String) getAttributeInternal(SHIPMNTDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmntDocId.
     * @param value value to set the  ShipmntDocId
     */
    public void setShipmntDocId(String value) {
        setAttributeInternal(SHIPMNTDOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipmntId.
     * @return the ShipmntId
     */
    public String getShipmntId() {
        return (String) getAttributeInternal(SHIPMNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipmntId.
     * @param value value to set the  ShipmntId
     */
    public void setShipmntId(String value) {
        setAttributeInternal(SHIPMNTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmId.
     * @param value value to set the  ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDesc.
     * @return the ItmDesc
     */
    public String getItmDesc() {
        return (String) getAttributeInternal(ITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDesc.
     * @param value value to set the  ItmDesc
     */
    public void setItmDesc(String value) {
        setAttributeInternal(ITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmRate.
     * @return the ItmRate
     */
    public BigDecimal getItmRate() {
        return (BigDecimal) getAttributeInternal(ITMRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmRate.
     * @param value value to set the  ItmRate
     */
    public void setItmRate(BigDecimal value) {
        setAttributeInternal(ITMRATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ShipDt.
     * @return the ShipDt
     */
    public Timestamp getShipDt() {
        return (Timestamp) getAttributeInternal(SHIPDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ShipDt.
     * @param value value to set the  ShipDt
     */
    public void setShipDt(oracle.jbo.domain.Timestamp value) {
        setAttributeInternal(SHIPDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SoId.
     * @return the SoId
     */
    public String getSoId() {
        return (String) getAttributeInternal(SOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SoId.
     * @param value value to set the  SoId
     */
    public void setSoId(String value) {
        setAttributeInternal(SOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NewPriceTrans.
     * @return the NewPriceTrans
     */
    public BigDecimal getNewPriceTrans() {
        return (BigDecimal) getAttributeInternal(NEWPRICETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NewPriceTrans.
     * @param value value to set the  NewPriceTrans
     */
    public void setNewPriceTrans(BigDecimal value) {
        if(value != null){
            BigDecimal oldP = (this.getItmRate() == null ? new BigDecimal(0) : this.getItmRate());
            if(oldP.compareTo(value) < 0){
                setPriceDifferenceTrans(value.subtract(oldP));
            }else{
                setPriceDifferenceTrans(new BigDecimal(0));
            }
        }
        setAttributeInternal(NEWPRICETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PriceDifferenceTrans.
     * @return the PriceDifferenceTrans
     */
    public BigDecimal getPriceDifferenceTrans() {
        return (BigDecimal) getAttributeInternal(PRICEDIFFERENCETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PriceDifferenceTrans.
     * @param value value to set the  PriceDifferenceTrans
     */
    public void setPriceDifferenceTrans(BigDecimal value) {
        setAttributeInternal(PRICEDIFFERENCETRANS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
