package slssalesinvoiceapp.model.module.entity;

import java.math.BigDecimal;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 03 17:32:25 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvDtlEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        DocDt {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getDocDt();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setDocDt((Timestamp)value);
            }
        }
        ,
        ShipId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getShipId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setShipId((String)value);
            }
        }
        ,
        ShipDt {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getShipDt();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setShipDt((Timestamp)value);
            }
        }
        ,
        SrNo {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setSrNo((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        ShipAmtSp {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getShipAmtSp();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setShipAmtSp((BigDecimal)value);
            }
        }
        ,
        ShipAmtBs {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getShipAmtBs();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setShipAmtBs((BigDecimal)value);
            }
        }
        ,
        TransCurrId {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getTransCurrId();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setTransCurrId((Integer)value);
            }
        }
        ,
        TransCurrRate {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getTransCurrRate();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setTransCurrRate((BigDecimal)value);
            }
        }
        ,
        TransTotalBs {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getTransTotalBs();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setTransTotalBs((BigDecimal)value);
            }
        }
        ,
        TransTotalSp {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getTransTotalSp();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setTransTotalSp((BigDecimal)value);
            }
        }
        ,
        SlsInv {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getSlsInv();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setSlsInv((SlsInvEOImpl)value);
            }
        }
        ,
        SlsInvShipItm {
            public Object get(SlsInvDtlEOImpl obj) {
                return obj.getSlsInvShipItm();
            }

            public void put(SlsInvDtlEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvDtlEOImpl object);

        public abstract void put(SlsInvDtlEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCDT = AttributesEnum.DocDt.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int SHIPDT = AttributesEnum.ShipDt.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SHIPAMTSP = AttributesEnum.ShipAmtSp.index();
    public static final int SHIPAMTBS = AttributesEnum.ShipAmtBs.index();
    public static final int TRANSCURRID = AttributesEnum.TransCurrId.index();
    public static final int TRANSCURRRATE = AttributesEnum.TransCurrRate.index();
    public static final int TRANSTOTALBS = AttributesEnum.TransTotalBs.index();
    public static final int TRANSTOTALSP = AttributesEnum.TransTotalSp.index();
    public static final int SLSINV = AttributesEnum.SlsInv.index();
    public static final int SLSINVSHIPITM = AttributesEnum.SlsInvShipItm.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvDtlEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slssalesinvoiceapp.model.module.entity.SlsInvDtlEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocDt, using the alias name DocDt.
     * @return the value of DocDt
     */
    public Timestamp getDocDt() {
        return (Timestamp)getAttributeInternal(DOCDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDt.
     * @param value value to set the DocDt
     */
    public void setDocDt(Timestamp value) {
        setAttributeInternal(DOCDT, value);
    }

    /**
     * Gets the attribute value for ShipId, using the alias name ShipId.
     * @return the value of ShipId
     */
    public String getShipId() {
        return (String)getAttributeInternal(SHIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipId.
     * @param value value to set the ShipId
     */
    public void setShipId(String value) {
        setAttributeInternal(SHIPID, value);
    }

    /**
     * Gets the attribute value for ShipDt, using the alias name ShipDt.
     * @return the value of ShipDt
     */
    public Timestamp getShipDt() {
        return (Timestamp)getAttributeInternal(SHIPDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipDt.
     * @param value value to set the ShipDt
     */
    public void setShipDt(Timestamp value) {
        setAttributeInternal(SHIPDT, value);
    }

    /**
     * Gets the attribute value for SrNo, using the alias name SrNo.
     * @return the value of SrNo
     */
    public Integer getSrNo() {
        return (Integer)getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrNo.
     * @param value value to set the SrNo
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value  for ShipAmtSp, using the alias name ShipAmtSp.
     * @return the value of ShipAmtSp
     */
    public BigDecimal getShipAmtSp() {

        return (BigDecimal)getAttributeInternal(SHIPAMTSP);

    }

    /**
     * Sets <code>value</code> as the attribute value for ShipAmtSp.
     * @param value value to set the ShipAmtSp
     */
    public void setShipAmtSp(BigDecimal value) {
       
        setAttributeInternal(SHIPAMTSP, value);
    }

    /**
     * Gets the attribute value for ShipAmtBs, using the alias name ShipAmtBs.
     * @return the value of ShipAmtBs
     */
    public BigDecimal getShipAmtBs() {
        return (BigDecimal)getAttributeInternal(SHIPAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipAmtBs.
     * @param value value to set the ShipAmtBs
     */
    public void setShipAmtBs(BigDecimal value) {


        setAttributeInternal(SHIPAMTBS, value);
    }

    /**
     * Gets the attribute value for TransCurrId, using the alias name TransCurrId.
     * @return the value of TransCurrId
     */
    public Integer getTransCurrId() {
        return (Integer)getAttributeInternal(TRANSCURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransCurrId.
     * @param value value to set the TransCurrId
     */
    public void setTransCurrId(Integer value) {
        setAttributeInternal(TRANSCURRID, value);
    }

    /**
     * Gets the attribute value for TransCurrRate, using the alias name TransCurrRate.
     * @return the value of TransCurrRate
     */
    public BigDecimal getTransCurrRate() {


        return (BigDecimal)getAttributeInternal(TRANSCURRRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransCurrRate.
     * @param value value to set the TransCurrRate
     */
    public void setTransCurrRate(BigDecimal value) {

      
        setAttributeInternal(TRANSCURRRATE, value);
    }

    /**
     * Gets the attribute value for TransTotalBs, using the alias name TransTotalBs.
     * @return the value of TransTotalBs
     */
    public BigDecimal getTransTotalBs() {
        return (BigDecimal)getAttributeInternal(TRANSTOTALBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransTotalBs.
     * @param value value to set the TransTotalBs
     */
    public void setTransTotalBs(BigDecimal value) {
        setAttributeInternal(TRANSTOTALBS, value);
    }

    /**
     * Gets the attribute value for TransTotalSp, using the alias name TransTotalSp.
     * @return the value of TransTotalSp
     */
    public BigDecimal getTransTotalSp() {
        return (BigDecimal)getAttributeInternal(TRANSTOTALSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TransTotalSp.
     * @param value value to set the TransTotalSp
     */
    public void setTransTotalSp(BigDecimal value) {
        setAttributeInternal(TRANSTOTALSP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity SlsInvEOImpl.
     */
    public SlsInvEOImpl getSlsInv() {
        return (SlsInvEOImpl)getAttributeInternal(SLSINV);
    }

    /**
     * Sets <code>value</code> as the associated entity SlsInvEOImpl.
     */
    public void setSlsInv(SlsInvEOImpl value) {
        setAttributeInternal(SLSINV, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSlsInvShipItm() {
        return (RowIterator)getAttributeInternal(SLSINVSHIPITM);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param shipId key constituent
     * @param srNo key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       String shipId, Integer srNo) {
        return new Key(new Object[]{cldId, slocId, orgId, hoOrgId, docId, shipId, srNo});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setDocDt(getSlsInv().getDocDt());
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        Integer UsrId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        setUsrIdCreate(UsrId);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {


        if (operation == DML_UPDATE) {
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
            Integer UsrId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
            setUsrIdMod(UsrId);
        }
        super.doDML(operation, e);
    }


    public Object resolvEl(Object data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, (String)data, Object.class);
        Object Message = valueExp.getValue(elContext);
        return Message;
    }
}
