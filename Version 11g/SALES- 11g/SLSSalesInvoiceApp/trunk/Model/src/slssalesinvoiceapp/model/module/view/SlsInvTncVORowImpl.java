package slssalesinvoiceapp.model.module.view;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 16 10:10:46 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsInvTncVORowImpl extends ViewRowImpl {
    public static final int ENTITY_SLSINVTNCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        },
        DocId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        },
        HoOrgId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        },
        OrgId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        },
        Priority {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getPriority();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setPriority((Integer)value);
            }
        },
        SlocId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        },
        TncId {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getTncId();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setTncId((Integer)value);
            }
        },
        UsrIdCreate {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        },
        UsrIdCreateDt {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        },
        UsrIdMod {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        },
        UsrIdModDt {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        },
        TransTncDesc {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getTransTncDesc();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setTransTncDesc((String)value);
            }
        },
        TnCViewVO1 {
            public Object get(SlsInvTncVORowImpl obj) {
                return obj.getTnCViewVO1();
            }

            public void put(SlsInvTncVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsInvTncVORowImpl object);

        public abstract void put(SlsInvTncVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRIORITY = AttributesEnum.Priority.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TNCID = AttributesEnum.TncId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSTNCDESC = AttributesEnum.TransTncDesc.index();
    public static final int TNCVIEWVO1 = AttributesEnum.TnCViewVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsInvTncVORowImpl() {
    }

    /**
     * Gets SlsInvTncEO entity object.
     * @return the SlsInvTncEO
     */
    public EntityImpl getSlsInvTncEO() {
        return (EntityImpl)getEntity(ENTITY_SLSINVTNCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRIORITY using the alias name Priority.
     * @return the PRIORITY
     */
    public Integer getPriority() {
        return (Integer)getAttributeInternal(PRIORITY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRIORITY using the alias name Priority.
     * @param value value to set the PRIORITY
     */
    public void setPriority(Integer value) {
        setAttributeInternal(PRIORITY, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TNC_ID using the alias name TncId.
     * @return the TNC_ID
     */
    public Integer getTncId() {
        return (Integer)getAttributeInternal(TNCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TNC_ID using the alias name TncId.
     * @param value value to set the TNC_ID
     */
    public void setTncId(Integer value) {
        setAttributeInternal(TNCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTncDesc.
     * @return the TransTncDesc
     */
    public String getTransTncDesc() {


        Integer tncId = null;
        String tncNm = null;
        try {
            tncId = getTncId();
        } catch (NullPointerException npe) {
            System.out.println(npe);
        }
        if (tncId != null) {
            Row[] xx = getTnCViewVO1().getFilteredRows("TncId", tncId);

            if (xx.length > 0) {
                tncNm = xx[0].getAttribute("TncDesc").toString();
            }
            return tncNm;

        } else {
            return (String)getAttributeInternal(TRANSTNCDESC);
        }


    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTncDesc.
     * @param value value to set the  TransTncDesc
     */
    public void setTransTncDesc(String value) {
        setAttributeInternal(TRANSTNCDESC, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> TnCViewVO1.
     */
    public RowSet getTnCViewVO1() {
        return (RowSet)getAttributeInternal(TNCVIEWVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
