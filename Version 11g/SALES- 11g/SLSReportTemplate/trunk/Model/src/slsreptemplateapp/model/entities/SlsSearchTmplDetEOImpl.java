package slsreptemplateapp.model.entities;

import java.math.BigInteger;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 05 11:17:29 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSearchTmplDetEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        TemplateId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getTemplateId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setTemplateId((Integer)value);
            }
        }
        ,
        TemplateParaId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getTemplateParaId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setTemplateParaId((Integer)value);
            }
        }
        ,
        ParaId {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getParaId();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setParaId((String)value);
            }
        }
        ,
        UsrCreatedBy {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getUsrCreatedBy();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setUsrCreatedBy((Integer)value);
            }
        }
        ,
        UsrCreatedOn {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getUsrCreatedOn();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrModBy {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getUsrModBy();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setUsrModBy((Integer)value);
            }
        }
        ,
        UsrModOn {
            public Object get(SlsSearchTmplDetEOImpl obj) {
                return obj.getUsrModOn();
            }

            public void put(SlsSearchTmplDetEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsSearchTmplDetEOImpl object);

        public abstract void put(SlsSearchTmplDetEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int TEMPLATEID = AttributesEnum.TemplateId.index();
    public static final int TEMPLATEPARAID = AttributesEnum.TemplateParaId.index();
    public static final int PARAID = AttributesEnum.ParaId.index();
    public static final int USRCREATEDBY = AttributesEnum.UsrCreatedBy.index();
    public static final int USRCREATEDON = AttributesEnum.UsrCreatedOn.index();
    public static final int USRMODBY = AttributesEnum.UsrModBy.index();
    public static final int USRMODON = AttributesEnum.UsrModOn.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSearchTmplDetEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("slsreptemplateapp.model.entities.SlsSearchTmplDetEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for TemplateId, using the alias name TemplateId.
     * @return the value of TemplateId
     */
    public Integer getTemplateId() {
        return (Integer)getAttributeInternal(TEMPLATEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TemplateId.
     * @param value value to set the TemplateId
     */
    public void setTemplateId(Integer value) {
        setAttributeInternal(TEMPLATEID, value);
    }

    /**
     * Gets the attribute value for TemplateParaId, using the alias name TemplateParaId.
     * @return the value of TemplateParaId
     */
    public Integer getTemplateParaId() {
        return (Integer)getAttributeInternal(TEMPLATEPARAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TemplateParaId.
     * @param value value to set the TemplateParaId
     */
    public void setTemplateParaId(Integer value) {
        setAttributeInternal(TEMPLATEPARAID, value);
    }

    /**
     * Gets the attribute value for ParaId, using the alias name ParaId.
     * @return the value of ParaId
     */
    public String getParaId() {
        return (String)getAttributeInternal(PARAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParaId.
     * @param value value to set the ParaId
     */
    public void setParaId(String value) {
        setAttributeInternal(PARAID, value);
    }

    /**
     * Gets the attribute value for UsrCreatedBy, using the alias name UsrCreatedBy.
     * @return the value of UsrCreatedBy
     */
    public Integer getUsrCreatedBy() {
        return (Integer)getAttributeInternal(USRCREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrCreatedBy.
     * @param value value to set the UsrCreatedBy
     */
    public void setUsrCreatedBy(Integer value) {
        setAttributeInternal(USRCREATEDBY, value);
    }

    /**
     * Gets the attribute value for UsrCreatedOn, using the alias name UsrCreatedOn.
     * @return the value of UsrCreatedOn
     */
    public Timestamp getUsrCreatedOn() {
        return (Timestamp)getAttributeInternal(USRCREATEDON);
    }

    /**
     * Gets the attribute value for UsrModBy, using the alias name UsrModBy.
     * @return the value of UsrModBy
     */
    public Integer getUsrModBy() {
        return (Integer)getAttributeInternal(USRMODBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrModBy.
     * @param value value to set the UsrModBy
     */
    public void setUsrModBy(Integer value) {
        setAttributeInternal(USRMODBY, value);
    }

    /**
     * Gets the attribute value for UsrModOn, using the alias name UsrModOn.
     * @return the value of UsrModOn
     */
    public Timestamp getUsrModOn() {
        return (Timestamp)getAttributeInternal(USRMODON);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param templateId key constituent
     * @param templateParaId key constituent
     * @param paraId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, Integer templateId,
                                       Integer templateParaId, String paraId) {
        return new Key(new Object[]{cldId, slocId, orgId, hoOrgId, templateId, templateParaId, paraId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR}") != null)
        {
            Integer usr_id = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            if(operation == DML_UPDATE){
                setUsrModBy(usr_id);
                //setUsrModOn(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
            }else if(operation == DML_INSERT){
                setUsrCreatedBy(usr_id);
                //setUsrCreatedOn(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
                setUsrModBy(usr_id);
                //setUsrModOn(new oracle.jbo.domain.Timestamp(System.currentTimeMillis()));
            }
        }
        super.doDML(operation, e);
    }
    public String resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    String Message=valueExp.getValue(elContext).toString();
    return Message;
    }
}
