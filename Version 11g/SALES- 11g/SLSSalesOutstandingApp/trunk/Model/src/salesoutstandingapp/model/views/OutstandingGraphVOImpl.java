package salesoutstandingapp.model.views;

import java.sql.ResultSet;

import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 19 14:09:35 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OutstandingGraphVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public OutstandingGraphVOImpl() {
    }

    /**
     * Returns the variable value for SlocIdBind.
     * @return variable value for SlocIdBind
     */
    public Integer getSlocIdBind() {
        return (Integer)ensureVariableManager().getVariableValue("SlocIdBind");
    }

    /**
     * Sets <code>value</code> for variable SlocIdBind.
     * @param value value to bind as SlocIdBind
     */
    public void setSlocIdBind(Integer value) {
        ensureVariableManager().setVariableValue("SlocIdBind", value);
    }

    /**
     * Returns the variable value for OrgIdBind.
     * @return variable value for OrgIdBind
     */
    public String getOrgIdBind() {
        return (String)ensureVariableManager().getVariableValue("OrgIdBind");
    }

    /**
     * Sets <code>value</code> for variable OrgIdBind.
     * @param value value to bind as OrgIdBind
     */
    public void setOrgIdBind(String value) {
        ensureVariableManager().setVariableValue("OrgIdBind", value);
    }

    /**
     * Returns the variable value for CldIdBind.
     * @return variable value for CldIdBind
     */
    public String getCldIdBind() {
        return (String)ensureVariableManager().getVariableValue("CldIdBind");
    }

    /**
     * Sets <code>value</code> for variable CldIdBind.
     * @param value value to bind as CldIdBind
     */
    public void setCldIdBind(String value) {
        ensureVariableManager().setVariableValue("CldIdBind", value);
    }

    /**
     * Returns the variable value for CoaIdBind.
     * @return variable value for CoaIdBind
     */
    public Integer getCoaIdBind() {
        return (Integer)ensureVariableManager().getVariableValue("CoaIdBind");
    }

    /**
     * Sets <code>value</code> for variable CoaIdBind.
     * @param value value to bind as CoaIdBind
     */
    public void setCoaIdBind(Integer value) {
        ensureVariableManager().setVariableValue("CoaIdBind", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        long before = System.currentTimeMillis();
        super.executeQueryForCollection(qc, params, noUserParams);
        getQueryHitCount(this.getRowSetForSqlGen());
        long after = System.currentTimeMillis();
        System.out.println("Time taken to execute Graph Query :"+ (after - before));
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        System.out.println("Hit count :"+value);
        if(value > 500){
            System.out.println("fetch size:"+this.getFetchSize());
            this.setFetchSize(new Short("50"));
            System.out.println("fetch size:"+this.getFetchSize());
            System.out.println("Fetch mode:"+this.getFetchMode());
        }else if(value > 10000){
            this.setFetchSize(new Short("100"));
            System.out.println("fetch size:"+this.getFetchSize());
            System.out.println("Fetch mode:"+this.getFetchMode());
        }else {
            this.setFetchSize(new Short("1"));
        }
        return value;
    }
}
