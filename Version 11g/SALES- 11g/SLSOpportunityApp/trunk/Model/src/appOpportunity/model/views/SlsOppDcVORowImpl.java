package appOpportunity.model.views;

import appOpportunity.model.entities.SlsOppDcEOImpl;

//import java.sql.Timestamp;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 20 11:06:51 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsOppDcVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSOPPDCEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DcId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getDcId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setDcId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        Remarks {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        DcDispIdTrans {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getDcDispIdTrans();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setDcDispIdTrans((String)value);
            }
        }
        ,
        LovDcDispIdVO1 {
            public Object get(SlsOppDcVORowImpl obj) {
                return obj.getLovDcDispIdVO1();
            }

            public void put(SlsOppDcVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsOppDcVORowImpl object);

        public abstract void put(SlsOppDcVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DCID = AttributesEnum.DcId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DCDISPIDTRANS = AttributesEnum.DcDispIdTrans.index();
    public static final int LOVDCDISPIDVO1 = AttributesEnum.LovDcDispIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsOppDcVORowImpl() {
    }

    /**
     * Gets SlsOppDcEO entity object.
     * @return the SlsOppDcEO
     */
    public SlsOppDcEOImpl getSlsOppDcEO() {
        return (SlsOppDcEOImpl)getEntity(ENTITY_SLSOPPDCEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DC_ID using the alias name DcId.
     * @return the DC_ID
     */
    public String getDcId() {
        return (String) getAttributeInternal(DCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DC_ID using the alias name DcId.
     * @param value value to set the DC_ID
     */
    public void setDcId(String value) {
        setAttributeInternal(DCID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DcDispIdTrans.
     * @return the DcDispIdTrans
     */
    public String getDcDispIdTrans() {
        if(getAttributeInternal(DCDISPIDTRANS) == null && getDcId() != null){
            RowSet lovSearchVw = this.getLovDcDispIdVO1();
            lovSearchVw.setNamedWhereClauseParam("SlocIdBind", getSlocId());
            lovSearchVw.setNamedWhereClauseParam("CldIdBind", getCldId());
            lovSearchVw.setNamedWhereClauseParam("OrgIdBind", getOrgId());
            lovSearchVw.setNamedWhereClauseParam("HoOrgIdBind", getHoOrgId());
            lovSearchVw.setNamedWhereClauseParam("DcIdBind", getDcId());
            lovSearchVw.executeQuery();
            Row[] allRowsInRange = lovSearchVw.getAllRowsInRange();
            if(allRowsInRange.length > 0){
                Object dcIdO = allRowsInRange[0].getAttribute("DcId");
                setDcDispIdTrans(dcIdO == null ? null : dcIdO.toString());
            }
        }
        return (String) getAttributeInternal(DCDISPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DcDispIdTrans.
     * @param value value to set the  DcDispIdTrans
     */
    public void setDcDispIdTrans(String value) {
        setAttributeInternal(DCDISPIDTRANS, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovDcDispIdVO1.
     */
    public RowSet getLovDcDispIdVO1() {
        return (RowSet)getAttributeInternal(LOVDCDISPIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
