package appOpportunity.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 19 19:17:50 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchColumnVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        FromDateTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getFromDateTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setFromDateTrans((Timestamp)value);
            }
        }
        ,
        CurrIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getCurrIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setCurrIdTrans((Integer)value);
            }
        }
        ,
        EoNmTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getEoNmTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setEoNmTrans((String)value);
            }
        }
        ,
        DispDocIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getDispDocIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setDispDocIdTrans((String)value);
            }
        }
        ,
        NoOfItemsTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getNoOfItemsTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setNoOfItemsTrans((Number)value);
            }
        }
        ,
        TotOppAmtTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getTotOppAmtTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setTotOppAmtTrans((Number)value);
            }
        }
        ,
        EoCatTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getEoCatTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setEoCatTrans((Integer)value);
            }
        }
        ,
        DocIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getDocIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setDocIdTrans((String)value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setCldIdTrans((String)value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer)value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String)value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setHoOrgIdTrans((String)value);
            }
        }
        ,
        UsrIdCreateTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getUsrIdCreateTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setUsrIdCreateTrans((Integer)value);
            }
        }
        ,
        ToDateTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getToDateTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setToDateTrans((Timestamp)value);
            }
        }
        ,
        DocIdTranxTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getDocIdTranxTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setDocIdTranxTrans((String)value);
            }
        }
        ,
        StatusTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getStatusTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setStatusTrans((String)value);
            }
        }
        ,
        CurrDescTrans {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getCurrDescTrans();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setCurrDescTrans((String)value);
            }
        }
        ,
        SearchColumnVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getSearchColumnVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCurrVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getLOVCurrVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVEoCatVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getLOVEoCatVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCustVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getLOVCustVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsOppVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getSlsOppVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SearchOppVO {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getSearchOppVO();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDistinctCurrVO1 {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getLovDistinctCurrVO1();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocIdVO1 {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getDocIdVO1();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVStatusVO1 {
            public Object get(SearchColumnVORowImpl obj) {
                return obj.getLOVStatusVO1();
            }

            public void put(SearchColumnVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchColumnVORowImpl object);

        public abstract void put(SearchColumnVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int FROMDATETRANS = AttributesEnum.FromDateTrans.index();
    public static final int CURRIDTRANS = AttributesEnum.CurrIdTrans.index();
    public static final int EONMTRANS = AttributesEnum.EoNmTrans.index();
    public static final int DISPDOCIDTRANS = AttributesEnum.DispDocIdTrans.index();
    public static final int NOOFITEMSTRANS = AttributesEnum.NoOfItemsTrans.index();
    public static final int TOTOPPAMTTRANS = AttributesEnum.TotOppAmtTrans.index();
    public static final int EOCATTRANS = AttributesEnum.EoCatTrans.index();
    public static final int DOCIDTRANS = AttributesEnum.DocIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int USRIDCREATETRANS = AttributesEnum.UsrIdCreateTrans.index();
    public static final int TODATETRANS = AttributesEnum.ToDateTrans.index();
    public static final int DOCIDTRANXTRANS = AttributesEnum.DocIdTranxTrans.index();
    public static final int STATUSTRANS = AttributesEnum.StatusTrans.index();
    public static final int CURRDESCTRANS = AttributesEnum.CurrDescTrans.index();
    public static final int SEARCHCOLUMNVO = AttributesEnum.SearchColumnVO.index();
    public static final int LOVCURRVO = AttributesEnum.LOVCurrVO.index();
    public static final int LOVEOCATVO = AttributesEnum.LOVEoCatVO.index();
    public static final int LOVCUSTVO = AttributesEnum.LOVCustVO.index();
    public static final int SLSOPPVO = AttributesEnum.SlsOppVO.index();
    public static final int SEARCHOPPVO = AttributesEnum.SearchOppVO.index();
    public static final int LOVDISTINCTCURRVO1 = AttributesEnum.LovDistinctCurrVO1.index();
    public static final int DOCIDVO1 = AttributesEnum.DocIdVO1.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LOVStatusVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchColumnVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDateTrans.
     * @return the FromDateTrans
     */
    public Timestamp getFromDateTrans() {
        return (Timestamp) getAttributeInternal(FROMDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDateTrans.
     * @param value value to set the  FromDateTrans
     */
    public void setFromDateTrans(Timestamp value) {
        setAttributeInternal(FROMDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrIdTrans.
     * @return the CurrIdTrans
     */
    public Integer getCurrIdTrans() {
        return (Integer) getAttributeInternal(CURRIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrIdTrans.
     * @param value value to set the  CurrIdTrans
     */
    public void setCurrIdTrans(Integer value) {
        setAttributeInternal(CURRIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNmTrans.
     * @return the EoNmTrans
     */
    public String getEoNmTrans() {
        return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNmTrans.
     * @param value value to set the  EoNmTrans
     */
    public void setEoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DispDocIdTrans.
     * @return the DispDocIdTrans
     */
    public String getDispDocIdTrans() {
        return (String) getAttributeInternal(DISPDOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DispDocIdTrans.
     * @param value value to set the  DispDocIdTrans
     */
    public void setDispDocIdTrans(String value) {
        setAttributeInternal(DISPDOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NoOfItemsTrans.
     * @return the NoOfItemsTrans
     */
    public Number getNoOfItemsTrans() {
        return (Number) getAttributeInternal(NOOFITEMSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NoOfItemsTrans.
     * @param value value to set the  NoOfItemsTrans
     */
    public void setNoOfItemsTrans(Number value) {
        setAttributeInternal(NOOFITEMSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotOppAmtTrans.
     * @return the TotOppAmtTrans
     */
    public Number getTotOppAmtTrans() {
        return (Number) getAttributeInternal(TOTOPPAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotOppAmtTrans.
     * @param value value to set the  TotOppAmtTrans
     */
    public void setTotOppAmtTrans(Number value) {
        setAttributeInternal(TOTOPPAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoCatTrans.
     * @return the EoCatTrans
     */
    public Integer getEoCatTrans() {
        return (Integer) getAttributeInternal(EOCATTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoCatTrans.
     * @param value value to set the  EoCatTrans
     */
    public void setEoCatTrans(Integer value) {
        setAttributeInternal(EOCATTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdTrans.
     * @return the DocIdTrans
     */
    public String getDocIdTrans() {
        return (String) getAttributeInternal(DOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdTrans.
     * @param value value to set the  DocIdTrans
     */
    public void setDocIdTrans(String value) {
        setAttributeInternal(DOCIDTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        
        String cldId=(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
        if(cldId!=null){
            return cldId;
        }else{        
        return (String) getAttributeInternal(CLDIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        if(slocId!=null){
            return slocId;
        }else{
            return (Integer) getAttributeInternal(SLOCIDTRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        String orgId=(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
        if(orgId!=null){
            return orgId;
        }else{
            return (String) getAttributeInternal(ORGIDTRANS);
        }
        /*
         *             
            String cldId = (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString());
            String orgId = (resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString());
         */
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateTrans.
     * @return the UsrIdCreateTrans
     */
    public Integer getUsrIdCreateTrans() {
        Integer usrId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR }").toString());
        if(usrId!=null){
            return usrId;
        }else{
            return (Integer) getAttributeInternal(USRIDCREATETRANS);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreateTrans.
     * @param value value to set the  UsrIdCreateTrans
     */
    public void setUsrIdCreateTrans(Integer value) {
        setAttributeInternal(USRIDCREATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDateTrans.
     * @return the ToDateTrans
     */
    public Timestamp getToDateTrans() {
        return (Timestamp)getAttributeInternal(TODATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDateTrans.
     * @param value value to set the  ToDateTrans
     */
    public void setToDateTrans(Timestamp value) {
        setAttributeInternal(TODATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocIdTranxTrans.
     * @return the DocIdTranxTrans
     */
    public String getDocIdTranxTrans() {
        return (String) getAttributeInternal(DOCIDTRANXTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocIdTranxTrans.
     * @param value value to set the  DocIdTranxTrans
     */
    public void setDocIdTranxTrans(String value) {
        setAttributeInternal(DOCIDTRANXTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatusTrans.
     * @return the StatusTrans
     */
    public String getStatusTrans() {
        return (String) getAttributeInternal(STATUSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatusTrans.
     * @param value value to set the  StatusTrans
     */
    public void setStatusTrans(String value) {
        setAttributeInternal(STATUSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrDescTrans.
     * @return the CurrDescTrans
     */
    public String getCurrDescTrans() {
        return (String) getAttributeInternal(CURRDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrDescTrans.
     * @param value value to set the  CurrDescTrans
     */
    public void setCurrDescTrans(String value) {
        setAttributeInternal(CURRDESCTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SearchColumnVO.
     */
    public RowSet getSearchColumnVO() {
        return (RowSet)getAttributeInternal(SEARCHCOLUMNVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrVO.
     */
    public RowSet getLOVCurrVO() {
        return (RowSet)getAttributeInternal(LOVCURRVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoCatVO.
     */
    public RowSet getLOVEoCatVO() {
        return (RowSet)getAttributeInternal(LOVEOCATVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustVO.
     */
    public RowSet getLOVCustVO() {
        return (RowSet)getAttributeInternal(LOVCUSTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsOppVO.
     */
    public RowSet getSlsOppVO() {
        return (RowSet)getAttributeInternal(SLSOPPVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SearchOppVO.
     */
    public RowSet getSearchOppVO() {
        return (RowSet)getAttributeInternal(SEARCHOPPVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDistinctCurrVO1.
     */
    public RowSet getLovDistinctCurrVO1() {
        return (RowSet)getAttributeInternal(LOVDISTINCTCURRVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocIdVO1.
     */
    public RowSet getDocIdVO1() {
        return (RowSet)getAttributeInternal(DOCIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStatusVO1.
     */
    public RowSet getLOVStatusVO1() {
        return (RowSet)getAttributeInternal(LOVSTATUSVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
     /**
      *
      * @param data
      * @return
      */
     public String resolvEl(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String msg = valueExp.getValue(elContext).toString();
         return msg;
     }
     
     /**
      *
      * @param data
      * @return
      */
     public Object resolvElDCMsg(String data) {
                 FacesContext fc = FacesContext.getCurrentInstance();
                 Application app = fc.getApplication();
                 ExpressionFactory elFactory = app.getExpressionFactory();
                 ELContext elContext = fc.getELContext();
                 ValueExpression valueExp =  elFactory.createValueExpression(elContext, data, Object.class);
                 return valueExp.getValue(elContext);
     }
     
     /**
      *
      * @param data
      * @return
      */
     public Object resolvElDC(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp =
             elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
         return valueExp.getValue(elContext);
     } 
     
}
