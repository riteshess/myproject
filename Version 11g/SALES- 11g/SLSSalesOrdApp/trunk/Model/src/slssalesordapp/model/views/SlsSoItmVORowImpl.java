package slssalesordapp.model.views;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.ApplicationModule;
import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import slssalesordapp.model.entities.SlsSoItmEOImpl;
import slssalesordapp.model.service.salesOrderAMImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 28 12:17:07 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsSoItmVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSSOITMEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        SrNo {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSrNo();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSrNo((Integer)value);
            }
        }
        ,
        ItmId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmId((String)value);
            }
        }
        ,
        ItmRate {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmRate();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmRate((Number)value);
            }
        }
        ,
        ItmUom {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmUom();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmUom((String)value);
            }
        }
        ,
        ItmQty {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmQty();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmQty((Number)value);
            }
        }
        ,
        ItmDiscTyp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscTyp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscTyp((String)value);
            }
        }
        ,
        ItmDiscVal {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscVal();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscVal((Number)value);
            }
        }
        ,
        ItmAmtBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtBs((Number)value);
            }
        }
        ,
        ItmAmtSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtSp((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getRemarks();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        TlrncQtyType {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTlrncQtyType();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTlrncQtyType((String)value);
            }
        }
        ,
        TlrncQtyVal {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTlrncQtyVal();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTlrncQtyVal((Number)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        ItmNmTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmNmTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmNmTrans((String)value);
            }
        }
        ,
        ItmAmtSpTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtSpTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtSpTrans((Number)value);
            }
        }
        ,
        ItmAmtBsTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtBsTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtBsTrans((Number)value);
            }
        }
        ,
        TaxRuleFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTaxRuleFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTaxRuleFlg((String)value);
            }
        }
        ,
        ItmDiscValTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmDiscValTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmDiscValTrans((Number)value);
            }
        }
        ,
        SchId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSchId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setSchId((String)value);
            }
        }
        ,
        TransItmSerializedFlg {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransItmSerializedFlg();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransItmSerializedFlg((String)value);
            }
        }
        ,
        TransItmPickOrder {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransItmPickOrder();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransItmPickOrder((Integer)value);
            }
        }
        ,
        itemIssueCheckTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getitemIssueCheckTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setitemIssueCheckTrans((String)value);
            }
        }
        ,
        ItmUomBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmUomBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmUomBs((String)value);
            }
        }
        ,
        UomConvFctr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getUomConvFctr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setUomConvFctr((Number)value);
            }
        }
        ,
        ItmQtyBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmQtyBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmQtyBs((Number)value);
            }
        }
        ,
        BalQty {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getBalQty();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setBalQty((Number)value);
            }
        }
        ,
        ItmNmForTableTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmNmForTableTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmNmForTableTrans((String)value);
            }
        }
        ,
        taxAmountTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.gettaxAmountTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.settaxAmountTrans((Number)value);
            }
        }
        ,
        taxableAmountTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.gettaxableAmountTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.settaxableAmountTrans((Number)value);
            }
        }
        ,
        ItemAttrTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItemAttrTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItemAttrTrans((String)value);
            }
        }
        ,
        ItmAmtGsBs {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtGsBs();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtGsBs((Number)value);
            }
        }
        ,
        ItmAmtGsSp {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getItmAmtGsSp();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setItmAmtGsSp((Number)value);
            }
        }
        ,
        TransTaxRuleId {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getTransTaxRuleId();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setTransTaxRuleId((Integer)value);
            }
        }
        ,
        enablePriceFieldTrans {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getenablePriceFieldTrans();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setenablePriceFieldTrans((String)value);
            }
        }
        ,
        SlsSo {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSo();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoTr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoTr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmSch {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmSch();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummLot {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummLot();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummBin {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummBin();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ViewMmStkSummSr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getViewMmStkSummSr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmBin {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmBin();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmLot {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmLot();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlsSoItmSr {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getSlsSoItmSr();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmId1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovItmId1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDiscTyp1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovDiscTyp1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovItmUom1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovItmUom1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSchmIdVO1 {
            public Object get(SlsSoItmVORowImpl obj) {
                return obj.getLovSchmIdVO1();
            }

            public void put(SlsSoItmVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SlsSoItmVORowImpl object);

        public abstract void put(SlsSoItmVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int SRNO = AttributesEnum.SrNo.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMRATE = AttributesEnum.ItmRate.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMDISCTYP = AttributesEnum.ItmDiscTyp.index();
    public static final int ITMDISCVAL = AttributesEnum.ItmDiscVal.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TLRNCQTYTYPE = AttributesEnum.TlrncQtyType.index();
    public static final int TLRNCQTYVAL = AttributesEnum.TlrncQtyVal.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMNMTRANS = AttributesEnum.ItmNmTrans.index();
    public static final int ITMAMTSPTRANS = AttributesEnum.ItmAmtSpTrans.index();
    public static final int ITMAMTBSTRANS = AttributesEnum.ItmAmtBsTrans.index();
    public static final int TAXRULEFLG = AttributesEnum.TaxRuleFlg.index();
    public static final int ITMDISCVALTRANS = AttributesEnum.ItmDiscValTrans.index();
    public static final int SCHID = AttributesEnum.SchId.index();
    public static final int TRANSITMSERIALIZEDFLG = AttributesEnum.TransItmSerializedFlg.index();
    public static final int TRANSITMPICKORDER = AttributesEnum.TransItmPickOrder.index();
    public static final int ITEMISSUECHECKTRANS = AttributesEnum.itemIssueCheckTrans.index();
    public static final int ITMUOMBS = AttributesEnum.ItmUomBs.index();
    public static final int UOMCONVFCTR = AttributesEnum.UomConvFctr.index();
    public static final int ITMQTYBS = AttributesEnum.ItmQtyBs.index();
    public static final int BALQTY = AttributesEnum.BalQty.index();
    public static final int ITMNMFORTABLETRANS = AttributesEnum.ItmNmForTableTrans.index();
    public static final int TAXAMOUNTTRANS = AttributesEnum.taxAmountTrans.index();
    public static final int TAXABLEAMOUNTTRANS = AttributesEnum.taxableAmountTrans.index();
    public static final int ITEMATTRTRANS = AttributesEnum.ItemAttrTrans.index();
    public static final int ITMAMTGSBS = AttributesEnum.ItmAmtGsBs.index();
    public static final int ITMAMTGSSP = AttributesEnum.ItmAmtGsSp.index();
    public static final int TRANSTAXRULEID = AttributesEnum.TransTaxRuleId.index();
    public static final int ENABLEPRICEFIELDTRANS = AttributesEnum.enablePriceFieldTrans.index();
    public static final int SLSSO = AttributesEnum.SlsSo.index();
    public static final int SLSSOTR = AttributesEnum.SlsSoTr.index();
    public static final int SLSSOITMSCH = AttributesEnum.SlsSoItmSch.index();
    public static final int VIEWMMSTKSUMMLOT = AttributesEnum.ViewMmStkSummLot.index();
    public static final int VIEWMMSTKSUMMBIN = AttributesEnum.ViewMmStkSummBin.index();
    public static final int VIEWMMSTKSUMMSR = AttributesEnum.ViewMmStkSummSr.index();
    public static final int SLSSOITMBIN = AttributesEnum.SlsSoItmBin.index();
    public static final int SLSSOITMLOT = AttributesEnum.SlsSoItmLot.index();
    public static final int SLSSOITMSR = AttributesEnum.SlsSoItmSr.index();
    public static final int LOVITMID1 = AttributesEnum.LovItmId1.index();
    public static final int LOVDISCTYP1 = AttributesEnum.LovDiscTyp1.index();
    public static final int LOVITMUOM1 = AttributesEnum.LovItmUom1.index();
    public static final int LOVSCHMIDVO1 = AttributesEnum.LovSchmIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsSoItmVORowImpl() {
    }

    /**
     * Gets SlsSoItmEO entity object.
     * @return the SlsSoItmEO
     */
    public SlsSoItmEOImpl getSlsSoItmEO() {
        return (SlsSoItmEOImpl)getEntity(ENTITY_SLSSOITMEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for SR_NO using the alias name SrNo.
     * @return the SR_NO
     */
    public Integer getSrNo() {
        return (Integer)getAttributeInternal(SRNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SR_NO using the alias name SrNo.
     * @param value value to set the SR_NO
     */
    public void setSrNo(Integer value) {
        setAttributeInternal(SRNO, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String)getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setItmNmForTableTrans(null);
        setItmNmTrans(null);
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_RATE using the alias name ItmRate.
     * @return the ITM_RATE
     */
    public Number getItmRate() {
        return (Number)getAttributeInternal(ITMRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_RATE using the alias name ItmRate.
     * @param value value to set the ITM_RATE
     */
    public void setItmRate(Number value) {
        setAttributeInternal(ITMRATE, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String)getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number)getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @return the ITM_DISC_TYP
     */
    public String getItmDiscTyp() {
        return (String)getAttributeInternal(ITMDISCTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_TYP using the alias name ItmDiscTyp.
     * @param value value to set the ITM_DISC_TYP
     */
    public void setItmDiscTyp(String value) {
        setAttributeInternal(ITMDISCTYP, value);
    }

    /**
     * Gets the attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @return the ITM_DISC_VAL
     */
    public Number getItmDiscVal() {
        return (Number)getAttributeInternal(ITMDISCVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_DISC_VAL using the alias name ItmDiscVal.
     * @param value value to set the ITM_DISC_VAL
     */
    public void setItmDiscVal(Number value) {
        setAttributeInternal(ITMDISCVAL, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public oracle.jbo.domain.Number getItmAmtBs() {
        return (oracle.jbo.domain.Number)getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(oracle.jbo.domain.Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public oracle.jbo.domain.Number getItmAmtSp() {
        return (oracle.jbo.domain.Number)getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(oracle.jbo.domain.Number value) {
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }


    /**
     * Gets the attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @return the TLRNC_QTY_TYPE
     */
    public String getTlrncQtyType() {
        return (String)getAttributeInternal(TLRNCQTYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_TYPE using the alias name TlrncQtyType.
     * @param value value to set the TLRNC_QTY_TYPE
     */
    public void setTlrncQtyType(String value) {
        setAttributeInternal(TLRNCQTYTYPE, value);
    }

    /**
     * Gets the attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @return the TLRNC_QTY_VAL
     */
    public oracle.jbo.domain.Number getTlrncQtyVal() {
        return (oracle.jbo.domain.Number)getAttributeInternal(TLRNCQTYVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TLRNC_QTY_VAL using the alias name TlrncQtyVal.
     * @param value value to set the TLRNC_QTY_VAL
     */
    public void setTlrncQtyVal(oracle.jbo.domain.Number value) {
        setAttributeInternal(TLRNCQTYVAL, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmTrans.
     * @return the ItmNmTrans
     */
    public String getItmNmTrans() {
        /* String itmId = null;
        String itmNm = null;
        try {
            itmId = getItmId();
        } catch (NullPointerException npe) {
            System.out.println(npe);
        }
        if (itmId != null) {
            Row[] xx = getLovItmId1().getFilteredRows("ItmId", itmId);
            if (xx.length > 0) {
                itmNm = xx[0].getAttribute("ItmDesc").toString();
            }
            return itmNm;

        } else {
            return (String)getAttributeInternal(ITMNMTRANS);
        } */
        
        if(this.getItmId() != null && getAttributeInternal(ITMNMTRANS) == null){
            if(!this.getItmId().toString().equals("")){
                ViewObjectImpl impl = getAm().getLovItmNmVo1();
                impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
                impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
                impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
                impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
                impl.executeQuery();
                Row[] allRowsInRange = impl.getAllRowsInRange();
                //System.out.println("Count is : "+allRowsInRange.length);
                if(allRowsInRange.length > 0){
                    Object a = allRowsInRange[0].getAttribute("ItmDesc");
                    String s = (a == null ? null : a.toString());
                    setItmNmTrans(s);
        }
    }
        }
        return (String)getAttributeInternal(ITMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmTrans.
     * @param value value to set the  ItmNmTrans
     */
    public void setItmNmTrans(String value) {
        setAttributeInternal(ITMNMTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP_TRANS using the alias name ItmAmtSpTrans.
     * @return the ITM_AMT_SP_TRANS
     */
    public Number getItmAmtSpTrans() {
        Number pric = new Number(0);
        Number qty = new Number(0);
        Number disval = new Number(0);
        String disTyp = "A";
        Number amt = new Number(0);
        Number hund = new Number(100);
        if (getItmRate() != null) {
            pric = getItmRate();
        }
        if (getItmQty() != null) {
            qty = getItmQty();
        }
        if (getItmDiscVal() != null) {
            if((Integer)this.getSlsSo().getAttribute("OrderType")!= 311){
                disval = getItmDiscVal();    
            }
            
        }
        if (getItmDiscTyp() != null) {
            disTyp = getItmDiscTyp();
        }
        if (disTyp.equalsIgnoreCase("A")) {
            amt = (pric.multiply(qty)).subtract(disval);
        } else {
            amt = (pric.multiply(qty)).subtract((pric.multiply(qty.multiply(disval)).divide(hund)));
        }
        Object stt = this.getSlsSo().getAttribute("CurrConvFctr");
        Number cc = new Number(1);
        if(stt != null){
            cc = (Number)stt;
        }
        
        Number existingAmt = (getAttributeInternal(ITMAMTGSSP) == null ? new Number(0) : (Number)getAttributeInternal(ITMAMTGSSP));
        if(amt.compareTo(existingAmt) != 0){
            this.setItmAmtGsSp(amt);
            this.setItmAmtGsBs(amt.multiply(cc));
        }
        //System.out.println("Gross Sp : "+amt);
        //System.out.println("Gross Bs : "+amt.multiply(cc));
        
        StringBuffer typ = new StringBuffer("N");
        try {
            if(getTaxRuleFlg().equals("Y")){
                Object taxType =
                callStoredFunction(Types.VARCHAR, "SLS.FN_SLS_CHK_TR_TYPE(?,?,?,?)", new Object[] { getCldId(),getSlocId(), getHoOrgId(),this.getTransTaxRuleId()});
                typ = (taxType != null ? new StringBuffer(taxType.toString()) : new StringBuffer("N"));    
                //System.out.println("Tax Inculsive : "+typ);
            }
            
        } catch (Exception e) {
            // TODO: Add catch code
            e.printStackTrace();
        }
        
        if("Y".equals(typ.toString())){
            amt = amt.subtract(gettaxAmountTrans());
            Number itmAmt = (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number)getAttributeInternal(ITMAMTSP));
            if(amt.compareTo(itmAmt) != 0){
        setItmAmtSp(amt);
            setItmAmtBs(amt.multiply(cc));
        }else{
            setItmAmtSp(amt);
            setItmAmtBs(amt.multiply(cc));
                setItmAmtBs(amt.multiply(cc));
            }
        }else{
            Number itmAmt = (getAttributeInternal(ITMAMTSP) == null ? new Number(0) : (Number)getAttributeInternal(ITMAMTSP));
            if(amt.compareTo(itmAmt) != 0){
                setItmAmtSp(amt);
                setItmAmtBs(amt.multiply(cc));
            }
        }
       // System.out.println("Amt  : "+amt);
    }
       // System.out.println("Amt  : "+amt);
        return amt;
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP_TRANS using the alias name ItmAmtSpTrans.
     * @param value value to set the ITM_AMT_SP_TRANS
     */
    public void setItmAmtSpTrans(Number value) {
        setAttributeInternal(ITMAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS_TRANS using the alias name ItmAmtBsTrans.
     * @return the ITM_AMT_BS_TRANS
     */
    public Number getItmAmtBsTrans() {
        setItmAmtBs((Number)getAttributeInternal(ITMAMTBSTRANS));
        return (Number)getAttributeInternal(ITMAMTBSTRANS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS_TRANS using the alias name ItmAmtBsTrans.
     * @param value value to set the ITM_AMT_BS_TRANS
     */
    public void setItmAmtBsTrans(Number value) {

        setAttributeInternal(ITMAMTBSTRANS, value);
    }

    /**
     * Gets the attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @return the TAX_RULE_FLG
     */
    public String getTaxRuleFlg() {
        return (String)getAttributeInternal(TAXRULEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_RULE_FLG using the alias name TaxRuleFlg.
     * @param value value to set the TAX_RULE_FLG
     */
    public void setTaxRuleFlg(String value) {
        setAttributeInternal(TAXRULEFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmDiscValTrans.
     * @return the ItmDiscValTrans
     */
    public Number getItmDiscValTrans() {
        Number pric = new Number(0);
        Number qty = new Number(0);
        Number disval = new Number(0);
        String disTyp = "A";
        Number amt = new Number(0);
        Number hund = new Number(100);
        if (getItmRate() != null) {
            pric = getItmRate();
        }
        if (getItmQty() != null) {
            qty = getItmQty();
        }
        if (getItmDiscVal() != null) {
            disval = getItmDiscVal();
        }
        if (getItmDiscTyp() != null) {
            disTyp = getItmDiscTyp();
        }
        if (disTyp.equalsIgnoreCase("A")) {
            amt = disval;
        } else {
            amt = ((pric.multiply(qty.multiply(disval)).divide(hund)));
        }
        return amt;

        // return (Number) getAttributeInternal(ITMDISCVALTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmDiscValTrans.
     * @param value value to set the  ItmDiscValTrans
     */
    public void setItmDiscValTrans(Number value) {
        setAttributeInternal(ITMDISCVALTRANS, value);
    }

    /**
     * Gets the attribute value for SCH_ID using the alias name SchId.
     * @return the SCH_ID
     */
    public String getSchId() {
        return (String)getAttributeInternal(SCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for SCH_ID using the alias name SchId.
     * @param value value to set the SCH_ID
     */
    public void setSchId(String value) {
        setAttributeInternal(SCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmSerializedFlg.
     * @return the TransItmSerializedFlg
     */
    public String getTransItmSerializedFlg() {

        String itmId = null;
        String flg = null;

        if (getItmId() != null) {
            try {
                itmId = getItmId();

            } catch (NullPointerException npe) {
                System.out.println(npe);
            }
        }
        if (itmId != null) {

            Row[] xx = getLovItmId1().getFilteredRows("ItmId", itmId);
            if (xx.length > 0) {
                flg = xx[0].getAttribute("SerializedFlg").toString();
            }
            return flg;
        } else {
            return (String)getAttributeInternal(TRANSITMSERIALIZEDFLG);
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmSerializedFlg.
     * @param value value to set the  TransItmSerializedFlg
     */
    public void setTransItmSerializedFlg(String value) {
        setAttributeInternal(TRANSITMSERIALIZEDFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmPickOrder.
     * @return the TransItmPickOrder
     */
    public Integer getTransItmPickOrder() {

        String itmId = null;
        Integer pickOrd = 0;
        if (getItmId() != null) {
            try {
                itmId = getItmId();

            } catch (NullPointerException npe) {
                System.out.println(npe);
            }
        }
        if (itmId != null) {
            Row[] xx = getLovItmId1().getFilteredRows("ItmId", itmId);
            if (xx.length > 0) {
                if (xx[0].getAttribute("PickOrder") != null) {
                    pickOrd = Integer.parseInt(xx[0].getAttribute("PickOrder").toString());
                } else {
                    pickOrd = 307;
                }
            }
            return pickOrd;
        } else {
            return (Integer)getAttributeInternal(TRANSITMPICKORDER);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmPickOrder.
     * @param value value to set the  TransItmPickOrder
     */
    public void setTransItmPickOrder(Integer value) {
        setAttributeInternal(TRANSITMPICKORDER, value);
    }

    /**
     * @return
     * Generalized function to call object of application module.
     */
    public salesOrderAMImpl getAm() {
        salesOrderAMImpl am = (salesOrderAMImpl)resolvElDC("salesOrderAMDataControl");
        return am;
    }

    /**
     * @param data
     * @return
     * function to get Application module value from a EL expression. Input will be a string value containing name of application module.
     */
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    /**
     * Gets the attribute value for the calculated attribute itemIssueCheckTrans.
     * @return the itemIssueCheckTranset
     */
    public String getitemIssueCheckTrans() {
        if (getItmId() != null) {
            String itmId = getItmId();
            ViewObjectImpl lotVO = getAm().getSlsSoItmLotVO1();
            lotVO.executeQuery();
            RowQualifier rq = new RowQualifier(lotVO);
            rq.setWhereClause("SlocId=" + getSlocId() + " and CldId='" + getCldId() + "' and OrgId='" + getOrgId() +
                              "' and HoOrgId='" + getHoOrgId() + "' and ItmId='" + getItmId() + "' and DocId='" +
                              getDocId() + "'");
            Row fltrdrow[] = lotVO.getFilteredRows(rq);
            //  System.out.println("Rq-"+rq.getExprStr()+"and tot row si-"+fltrdrow.length);
            if (fltrdrow.length > 0) {
                return "Y";
            } else {
                return "N";
            }
        } else {
            return "N";
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute itemIssueCheckTrans.
     * @param value value to set the  itemIssueCheckTrans
     */
    public void setitemIssueCheckTrans(String value) {
        setAttributeInternal(ITEMISSUECHECKTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @return the ITM_UOM_BS
     */
    public String getItmUomBs() {
        return (String) getAttributeInternal(ITMUOMBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM_BS using the alias name ItmUomBs.
     * @param value value to set the ITM_UOM_BS
     */
    public void setItmUomBs(String value) {
        setAttributeInternal(ITMUOMBS, value);
    }

    /**
     * Gets the attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @return the UOM_CONV_FCTR
     */
    public Number getUomConvFctr() {
        return (Number) getAttributeInternal(UOMCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_CONV_FCTR using the alias name UomConvFctr.
     * @param value value to set the UOM_CONV_FCTR
     */
    public void setUomConvFctr(Number value) {
        setAttributeInternal(UOMCONVFCTR, value);
    }

    /**
     * Gets the attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @return the ITM_QTY_BS
     */
    public Number getItmQtyBs() {
        return (Number) getAttributeInternal(ITMQTYBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY_BS using the alias name ItmQtyBs.
     * @param value value to set the ITM_QTY_BS
     */
    public void setItmQtyBs(Number value) {
        setAttributeInternal(ITMQTYBS, value);
    }

    /**
     * Gets the attribute value for BAL_QTY using the alias name BalQty.
     * @return the BAL_QTY
     */
    public Number getBalQty() {
        return (Number) getAttributeInternal(BALQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for BAL_QTY using the alias name BalQty.
     * @param value value to set the BAL_QTY
     */
    public void setBalQty(Number value) {
        setAttributeInternal(BALQTY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmNmForTableTrans.
     * @return the ItmNmForTableTrans
     */
    public String getItmNmForTableTrans() {
        if(this.getItmId() != null && getAttributeInternal(ITMNMFORTABLETRANS) == null){
            if(!this.getItmId().toString().equals("")){
                ViewObjectImpl impl = getAm().getLovItmNmVo1();
                impl.setNamedWhereClauseParam("ItmIdBind", this.getItmId());
                impl.setNamedWhereClauseParam("CldIdBind", this.getCldId());
                impl.setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
                impl.setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
                impl.executeQuery();
                Row[] allRowsInRange = impl.getAllRowsInRange();
                //System.out.println("Count is : "+allRowsInRange.length);
                if(allRowsInRange.length > 0){
                    Object a = allRowsInRange[0].getAttribute("ItmDesc");
                    String s = (a == null ? null : a.toString());
                    setItmNmForTableTrans(s); 
                   
                }
            }
        }
        return (String) getAttributeInternal(ITMNMFORTABLETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmNmForTableTrans.
     * @param value value to set the  ItmNmForTableTrans
     */
    public void setItmNmForTableTrans(String value) {
        setAttributeInternal(ITMNMFORTABLETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxAmountTrans.
     * @return the taxAmountTrans
     */
    public Number gettaxAmountTrans() {
        
        //System.out.println("Tax amount is : "+getAttributeInternal(TAXAMOUNTTRANS));
        return (Number)getAttributeInternal(TAXAMOUNTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxAmountTrans.
     * @param value value to set the  taxAmountTrans
     */
    public void settaxAmountTrans(Number value) {
        setAttributeInternal(TAXAMOUNTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute taxableAmountTrans.
     * @return the taxableAmountTrans
     */
    public Number gettaxableAmountTrans() {
        return (Number)getAttributeInternal(TAXABLEAMOUNTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute taxableAmountTrans.
     * @param value value to set the  taxableAmountTrans
     */
    public void settaxableAmountTrans(Number value) {
        setAttributeInternal(TAXABLEAMOUNTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemAttrTrans.
     * @return the ItemAttrTrans
     */
    public String getItemAttrTrans() {
        StringBuffer attr = new StringBuffer("");
        if(this.getItmId() != null){
            try {
                Object o =
                    callStoredFunction(Types.VARCHAR, "APP.FN_GET_ITM_ATT(?,?,?,?,?,?)", new Object[] { this.getCldId(),
                                                                                                                this.getSlocId(),
                                                                                                                this.getHoOrgId(),
                                                                                                                this.getItmId(),
                                                                                                                "R","," });
                //System.out.println("Function Returned   : "+o);
                if(o != null){
                    attr = new StringBuffer(o.toString());
                }

            } catch (Exception e) {
                // TODO: Add catch code
                e.printStackTrace();
            }
        }
        //System.out.println("Item Attributes are  : "+attr);
        return attr.toString();
        //return (String) getAttributeInternal(ITEMATTRTRANS);
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            st.executeUpdate();
            return st.getObject(1);
        } catch (SQLException e) {
            int end = e.getMessage().indexOf("\n");
            /* FacesMessage msg=new FacesMessage(e.getMessage());
            msg.setSeverity(FacesMessage.SEVERITY_ERROR);
            FacesContext.getCurrentInstance().addMessage(null, msg); */

            throw new JboException(e.getMessage());
            // throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                    System.out.println(e);
                }
            }
        }
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemAttrTrans.
     * @param value value to set the  ItemAttrTrans
     */
    public void setItemAttrTrans(String value) {
        setAttributeInternal(ITEMATTRTRANS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @return the ITM_AMT_GS_BS
     */
    public Number getItmAmtGsBs() {
        return (Number)getAttributeInternal(ITMAMTGSBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_BS using the alias name ItmAmtGsBs.
     * @param value value to set the ITM_AMT_GS_BS
     */
    public void setItmAmtGsBs(Number value) {
        setAttributeInternal(ITMAMTGSBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @return the ITM_AMT_GS_SP
     */
    public Number getItmAmtGsSp() {
        return (Number) getAttributeInternal(ITMAMTGSSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_GS_SP using the alias name ItmAmtGsSp.
     * @param value value to set the ITM_AMT_GS_SP
     */
    public void setItmAmtGsSp(Number value) {
        setAttributeInternal(ITMAMTGSSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRuleId.
     * @return the TransTaxRuleId
     */
    public Integer getTransTaxRuleId() {
        Integer i = -1;
        RowIterator iterator = this.getSlsSoTr();
        if(iterator.hasNext()){
            Object id = iterator.next().getAttribute("TaxRuleId");
            if(id != null){
               i = (Integer)id;
            }
        }
        return i;
        //return (Integer) getAttributeInternal(TRANSTAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuleId.
     * @param value value to set the  TransTaxRuleId
     */
    public void setTransTaxRuleId(Integer value) {
        setAttributeInternal(TRANSTAXRULEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute enablePriceFieldTrans.
     * @return the enablePriceFieldTrans
     */
    public String getenablePriceFieldTrans() {
        salesOrderAMImpl am = (salesOrderAMImpl)this.getApplicationModule();
        StringBuffer b = new StringBuffer("");
        if ("Y".equals(am.checkPolicyApplied().toString())) {
            Row row = this.getSlsSo();
            Integer eoId = (row.getAttribute("EoId") == null ? 0 : (Integer)row.getAttribute("EoId"));
            BigDecimal policyPrice = new BigDecimal(-4);
            if (eoId != 0 && getItmId() != null) {
                policyPrice =
                        (BigDecimal)callStoredFunction(Types.NUMERIC, "APP.APP_GET_POLICY_PRICE(?,?,?,?,?,?,?)", new Object[] { getCldId(),
                                                                                                                                getSlocId(),
                                                                                                                                getHoOrgId(),
                                                                                                                                getOrgId(),
                                                                                                                                eoId,
                                                                                                                                getItmId(),
                                                                                                                                "SO" });

            }
            policyPrice = (policyPrice == null ? new BigDecimal(-6) : policyPrice );
            System.out.println("_____________________ !"+policyPrice);
            if (policyPrice.compareTo(new BigDecimal(0)) == 0) {
                b = new StringBuffer("Y");
            } else {
                b = new StringBuffer("N");
            }
        } else {
            b = new StringBuffer("Y");
            StringBuffer priceEditableInProfile = am.checkforProfileValues(new StringBuffer("EDIT_EO_PRICE"));
            //System.out.println("Editable price : "+priceEditableInProfile);

            if ("Y".equals(priceEditableInProfile.toString())) {
                b = new StringBuffer("Y");
            } else {
                b = new StringBuffer("N");
            }
        }
        //System.out.println("Enable field value : "+b);
        setenablePriceFieldTrans(b.toString());


        return (String)getAttributeInternal(ENABLEPRICEFIELDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute enablePriceFieldTrans.
     * @param value value to set the  enablePriceFieldTrans
     */
    public void setenablePriceFieldTrans(String value) {
        setAttributeInternal(ENABLEPRICEFIELDTRANS, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsSo.
     */
    public Row getSlsSo() {
        return (Row)getAttributeInternal(SLSSO);
    }

    /**
     * Sets the master-detail link SlsSo between this object and <code>value</code>.
     */
    public void setSlsSo(Row value) {
        setAttributeInternal(SLSSO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoTr.
     */
    public RowIterator getSlsSoTr() {
        return (RowIterator)getAttributeInternal(SLSSOTR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmSch.
     */
    public RowIterator getSlsSoItmSch() {
        return (RowIterator)getAttributeInternal(SLSSOITMSCH);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummLot.
     */
    public RowIterator getViewMmStkSummLot() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummBin.
     */
    public RowIterator getViewMmStkSummBin() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewMmStkSummSr.
     */
    public RowIterator getViewMmStkSummSr() {
        return (RowIterator)getAttributeInternal(VIEWMMSTKSUMMSR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmBin.
     */
    public RowIterator getSlsSoItmBin() {
        return (RowIterator)getAttributeInternal(SLSSOITMBIN);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmLot.
     */
    public RowIterator getSlsSoItmLot() {
        return (RowIterator)getAttributeInternal(SLSSOITMLOT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsSoItmSr.
     */
    public RowIterator getSlsSoItmSr() {
        return (RowIterator)getAttributeInternal(SLSSOITMSR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmId1.
     */
    public RowSet getLovItmId1() {
        return (RowSet)getAttributeInternal(LOVITMID1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDiscTyp1.
     */
    public RowSet getLovDiscTyp1() {
        return (RowSet)getAttributeInternal(LOVDISCTYP1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUom1.
     */
    public RowSet getLovItmUom1() {
        return (RowSet)getAttributeInternal(LOVITMUOM1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSchmIdVO1.
     */
    public RowSet getLovSchmIdVO1() {
        return (RowSet)getAttributeInternal(LOVSCHMIDVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
