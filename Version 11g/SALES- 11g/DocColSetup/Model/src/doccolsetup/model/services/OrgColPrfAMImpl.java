package doccolsetup.model.services;

import doccolsetup.model.services.common.OrgColPrfAM;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jun 04 19:23:24 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgColPrfAMImpl extends ApplicationModuleImpl implements OrgColPrfAM {
    /**
     * This is the default constructor (do not remove).
     */
    public OrgColPrfAMImpl() {
    }


    /**
     * Method to resolv EL
     * @param data
     * @return
     */
    public Object resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            return valueExp.getValue(elContext);
        }
    
    public void initialFilter(){
        Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        String orgId = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        String hoOrgId = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();

        /* ViewObjectImpl colPar = this.getAppDocColParent1();
        colPar.setNamedWhereClauseParam("CldIdBind", cldId);
        colPar.setNamedWhereClauseParam("OrgIdBind", orgId);
        colPar.setNamedWhereClauseParam("SlocIdBind", slocId);
        colPar.executeQuery(); */
        
         ViewObjectImpl colPrfVO = this.getAppDocCol1();
        colPrfVO.setNamedWhereClauseParam("CldIdBind", cldId);
        colPrfVO.setNamedWhereClauseParam("OrgIdBind", orgId);
        colPrfVO.setNamedWhereClauseParam("SlocIdBind", slocId);
        colPrfVO.executeQuery(); 

    }
    
    public void search(){
        ViewObjectImpl searchVo = this.getSearchVO();
        Row[] allRowsInRange = searchVo.getAllRowsInRange();
        Row currRow = allRowsInRange[0];
        Object appId = currRow.getAttribute("ApplicationIdTrans");
        
        ViewObjectImpl colPrfVO = this.getAppDocCol1();
        colPrfVO.setNamedWhereClauseParam("AppDocIdBind", (Integer)appId);
        colPrfVO.executeQuery();  
    }
    public void reset(){
        ViewObjectImpl searchVo = this.getSearchVO();
        searchVo.executeQuery();
        
        ViewObjectImpl colPrfVO = this.getAppDocCol1();
        colPrfVO.setNamedWhereClauseParam("AppDocIdBind", null);
        colPrfVO.executeQuery();
        
    }

    /**
     * Container's getter for AppDocCol1.
     * @return AppDocCol1
     */
    public ViewObjectImpl getAppDocCol1() {
        return (ViewObjectImpl)findViewObject("AppDocCol1");
    }


    /**
     * Container's getter for OrgColPrf1.
     * @return OrgColPrf1
     */
    public ViewObjectImpl getOrgColPrf1() {
        return (ViewObjectImpl)findViewObject("OrgColPrf1");
    }

    /**
     * Container's getter for AppDocColToOrgCOlPrfVL1.
     * @return AppDocColToOrgCOlPrfVL1
     */
    public ViewLinkImpl getAppDocColToOrgCOlPrfVL1() {
        return (ViewLinkImpl)findViewLink("AppDocColToOrgCOlPrfVL1");
    }

    /**
     * Container's getter for SearchVO.
     * @return SearchVO
     */
    public ViewObjectImpl getSearchVO() {
        return (ViewObjectImpl)findViewObject("SearchVO");
    }
}
