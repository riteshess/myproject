package GlobalReportApp.model.entity;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 05 11:14:06 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: 
// 
// 
// not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class GLBLReportEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblRptId {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptId();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptId((Integer)value);
            }
        }
        ,
        GlblRptNm {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptNm();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptNm((String)value);
            }
        }
        ,
        GlblRptFileId {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptFileId();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptFileId((String)value);
            }
        }
        ,
        GlblRptPformDocId {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptPformDocId();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptPformDocId((Long)value);
            }
        }
        ,
        GlblRptType {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptType();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptType((String)value);
            }
        }
        ,
        GlblRptAccessType {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptAccessType();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptAccessType((String)value);
            }
        }
        ,
        GlblRptAccessPrd {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptAccessPrd();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptAccessPrd((Integer)value);
            }
        }
        ,
        GlblRptUsedInApp {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGlblRptUsedInApp();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setGlblRptUsedInApp((String)value);
            }
        }
        ,
        GLBLReportPRMEO {
            public Object get(GLBLReportEOImpl obj) {
                return obj.getGLBLReportPRMEO();
            }

            public void put(GLBLReportEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(GLBLReportEOImpl object);

        public abstract void put(GLBLReportEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GLBLRPTID = AttributesEnum.GlblRptId.index();
    public static final int GLBLRPTNM = AttributesEnum.GlblRptNm.index();
    public static final int GLBLRPTFILEID = AttributesEnum.GlblRptFileId.index();
    public static final int GLBLRPTPFORMDOCID = AttributesEnum.GlblRptPformDocId.index();
    public static final int GLBLRPTTYPE = AttributesEnum.GlblRptType.index();
    public static final int GLBLRPTACCESSTYPE = AttributesEnum.GlblRptAccessType.index();
    public static final int GLBLRPTACCESSPRD = AttributesEnum.GlblRptAccessPrd.index();
    public static final int GLBLRPTUSEDINAPP = AttributesEnum.GlblRptUsedInApp.index();
    public static final int GLBLREPORTPRMEO = AttributesEnum.GLBLReportPRMEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public GLBLReportEOImpl() {
    }

    /**
     * Gets the attribute value for GlblRptId, using the alias name GlblRptId.
     * @return the value of GlblRptId
     */
    public Integer getGlblRptId() {
        return (Integer)getAttributeInternal(GLBLRPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptId.
     * @param value value to set the GlblRptId
     */
    public void setGlblRptId(Integer value) {
        setAttributeInternal(GLBLRPTID, value);
    }

    /**
     * Gets the attribute value for GlblRptNm, using the alias name GlblRptNm.
     * @return the value of GlblRptNm
     */
    public String getGlblRptNm() {
        return (String)getAttributeInternal(GLBLRPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptNm.
     * @param value value to set the GlblRptNm
     */
    public void setGlblRptNm(String value) {
        setAttributeInternal(GLBLRPTNM, value);
    }

    /**
     * Gets the attribute value for GlblRptFileId, using the alias name GlblRptFileId.
     * @return the value of GlblRptFileId
     */
    public String getGlblRptFileId() {
        return (String)getAttributeInternal(GLBLRPTFILEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptFileId.
     * @param value value to set the GlblRptFileId
     */
    public void setGlblRptFileId(String value) {
        setAttributeInternal(GLBLRPTFILEID, value);
    }

    /**
     * Gets the attribute value for GlblRptPformDocId, using the alias name GlblRptPformDocId.
     * @return the value of GlblRptPformDocId
     */
    public Long getGlblRptPformDocId() {
        return (Long)getAttributeInternal(GLBLRPTPFORMDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptPformDocId.
     * @param value value to set the GlblRptPformDocId
     */
    public void setGlblRptPformDocId(Long value) {
        setAttributeInternal(GLBLRPTPFORMDOCID, value);
    }

    /**
     * Gets the attribute value for GlblRptType, using the alias name GlblRptType.
     * @return the value of GlblRptType
     */
    public String getGlblRptType() {
        return (String)getAttributeInternal(GLBLRPTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptType.
     * @param value value to set the GlblRptType
     */
    public void setGlblRptType(String value) {
        setAttributeInternal(GLBLRPTTYPE, value);
    }

    /**
     * Gets the attribute value for GlblRptAccessType, using the alias name GlblRptAccessType.
     * @return the value of GlblRptAccessType
     */
    public String getGlblRptAccessType() {
        return (String)getAttributeInternal(GLBLRPTACCESSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptAccessType.
     * @param value value to set the GlblRptAccessType
     */
    public void setGlblRptAccessType(String value) {
        setAttributeInternal(GLBLRPTACCESSTYPE, value);
    }

    /**
     * Gets the attribute value for GlblRptAccessPrd, using the alias name GlblRptAccessPrd.
     * @return the value of GlblRptAccessPrd
     */
    public Integer getGlblRptAccessPrd() {
        return (Integer)getAttributeInternal(GLBLRPTACCESSPRD);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptAccessPrd.
     * @param value value to set the GlblRptAccessPrd
     */
    public void setGlblRptAccessPrd(Integer value) {
        setAttributeInternal(GLBLRPTACCESSPRD, value);
    }

    /**
     * Gets the attribute value for GlblRptUsedInApp, using the alias name GlblRptUsedInApp.
     * @return the value of GlblRptUsedInApp
     */
    public String getGlblRptUsedInApp() {
        return (String)getAttributeInternal(GLBLRPTUSEDINAPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblRptUsedInApp.
     * @param value value to set the GlblRptUsedInApp
     */
    public void setGlblRptUsedInApp(String value) {
        setAttributeInternal(GLBLRPTUSEDINAPP, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getGLBLReportPRMEO() {
        return (RowIterator)getAttributeInternal(GLBLREPORTPRMEO);
    }

    /**
     * @param glblRptId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer glblRptId) {
        return new Key(new Object[]{glblRptId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("GlobalReportApp.model.entity.GLBLReportEO");
    }
}
