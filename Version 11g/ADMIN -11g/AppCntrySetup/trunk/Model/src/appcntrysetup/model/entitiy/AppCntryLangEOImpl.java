package appcntrysetup.model.entitiy;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 11 11:22:33 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppCntryLangEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CntryCldId {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getCntryCldId();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setCntryCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CntryId {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getCntryId();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setCntryId((Integer)value);
            }
        }
        ,
        LangId {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getLangId();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setLangId((Integer)value);
            }
        }
        ,
        CntryBaseLang {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getCntryBaseLang();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setCntryBaseLang((String)value);
            }
        }
        ,
        LangActvForCntry {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getLangActvForCntry();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setLangActvForCntry((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppCntryLangEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppCntryLangEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppCntryLangEOImpl object);

        public abstract void put(AppCntryLangEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CNTRYCLDID = AttributesEnum.CntryCldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CNTRYID = AttributesEnum.CntryId.index();
    public static final int LANGID = AttributesEnum.LangId.index();
    public static final int CNTRYBASELANG = AttributesEnum.CntryBaseLang.index();
    public static final int LANGACTVFORCNTRY = AttributesEnum.LangActvForCntry.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppCntryLangEOImpl() {
    }

    /**
     * Gets the attribute value for CntryCldId, using the alias name CntryCldId.
     * @return the value of CntryCldId
     */
    public String getCntryCldId() {
        return (String)getAttributeInternal(CNTRYCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CntryCldId.
     * @param value value to set the CntryCldId
     */
    public void setCntryCldId(String value) {
        setAttributeInternal(CNTRYCLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for CntryId, using the alias name CntryId.
     * @return the value of CntryId
     */
    public Integer getCntryId() {
        return (Integer)getAttributeInternal(CNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CntryId.
     * @param value value to set the CntryId
     */
    public void setCntryId(Integer value) {
        setAttributeInternal(CNTRYID, value);
    }

    /**
     * Gets the attribute value for LangId, using the alias name LangId.
     * @return the value of LangId
     */
    public Integer getLangId() {
        return (Integer)getAttributeInternal(LANGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LangId.
     * @param value value to set the LangId
     */
    public void setLangId(Integer value) {
        setAttributeInternal(LANGID, value);
    }

    /**
     * Gets the attribute value for CntryBaseLang, using the alias name CntryBaseLang.
     * @return the value of CntryBaseLang
     */
    public String getCntryBaseLang() {
        return (String)getAttributeInternal(CNTRYBASELANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for CntryBaseLang.
     * @param value value to set the CntryBaseLang
     */
    public void setCntryBaseLang(String value) {
        setAttributeInternal(CNTRYBASELANG, value);
    }

    /**
     * Gets the attribute value for LangActvForCntry, using the alias name LangActvForCntry.
     * @return the value of LangActvForCntry
     */
    public String getLangActvForCntry() {
        return (String)getAttributeInternal(LANGACTVFORCNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LangActvForCntry.
     * @param value value to set the LangActvForCntry
     */
    public void setLangActvForCntry(String value) {
        setAttributeInternal(LANGACTVFORCNTRY, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param slocId key constituent
     * @param cntryId key constituent
     * @param langId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, Integer cntryId, Integer langId) {
        return new Key(new Object[]{slocId, cntryId, langId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appcntrysetup.model.entitiy.AppCntryLangEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        int usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}".toString()));
        setUsrIdCreate(usrid);
        String cldid=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}".toString());
        setCntryCldId(cldid);
        int slocid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}".toString()));
        setSlocId(slocid);
        super.create(attributeList);
    }
    public String resolvEl(String data){
       FacesContext fc = FacesContext.getCurrentInstance();
       Application app = fc.getApplication();
       ExpressionFactory elFactory = app.getExpressionFactory();
       ELContext elContext = fc.getELContext();
       ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
       String Message=valueExp.getValue(elContext).toString();
       return Message;
     }  


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE)
        {
         setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
         int usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}".toString()));
         setUsrIdMod(usrid);
        }
        super.doDML(operation, e);
    }
}
