package appGlblCurr.model.views;

import appGlblCurr.model.entities.AppGlblCurrEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Sep 29 12:20:12 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblCurrVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPGLBLCURREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblCurrActv {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrActv();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrActv((String)value);
            }
        }
        ,
        GlblCurrComments {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrComments();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrComments((String)value);
            }
        }
        ,
        GlblCurrDecNotation {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrDecNotation();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrDecNotation((String)value);
            }
        }
        ,
        GlblCurrDecPlaces {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrDecPlaces();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrDecPlaces((Integer)value);
            }
        }
        ,
        GlblCurrDesc {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrDesc();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrDesc((String)value);
            }
        }
        ,
        GlblCurrDescOld {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrDescOld();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrDescOld((String)value);
            }
        }
        ,
        GlblCurrId {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrId();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrId((DBSequence)value);
            }
        }
        ,
        GlblCurrNotation {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrNotation();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrNotation((String)value);
            }
        }
        ,
        GlblCurrNotationAlias {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrNotationAlias();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrNotationAlias((String)value);
            }
        }
        ,
        GlblCurrRepresentation {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrRepresentation();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrRepresentation((String)value);
            }
        }
        ,
        GlblCurrUsedInApp {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getGlblCurrUsedInApp();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setGlblCurrUsedInApp((String)value);
            }
        }
        ,
        CurrReprLOV {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getCurrReprLOV();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UseIdLOV {
            public Object get(AppGlblCurrVORowImpl obj) {
                return obj.getUseIdLOV();
            }

            public void put(AppGlblCurrVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblCurrVORowImpl object);

        public abstract void put(AppGlblCurrVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int GLBLCURRACTV = AttributesEnum.GlblCurrActv.index();
    public static final int GLBLCURRCOMMENTS = AttributesEnum.GlblCurrComments.index();
    public static final int GLBLCURRDECNOTATION = AttributesEnum.GlblCurrDecNotation.index();
    public static final int GLBLCURRDECPLACES = AttributesEnum.GlblCurrDecPlaces.index();
    public static final int GLBLCURRDESC = AttributesEnum.GlblCurrDesc.index();
    public static final int GLBLCURRDESCOLD = AttributesEnum.GlblCurrDescOld.index();
    public static final int GLBLCURRID = AttributesEnum.GlblCurrId.index();
    public static final int GLBLCURRNOTATION = AttributesEnum.GlblCurrNotation.index();
    public static final int GLBLCURRNOTATIONALIAS = AttributesEnum.GlblCurrNotationAlias.index();
    public static final int GLBLCURRREPRESENTATION = AttributesEnum.GlblCurrRepresentation.index();
    public static final int GLBLCURRUSEDINAPP = AttributesEnum.GlblCurrUsedInApp.index();
    public static final int CURRREPRLOV = AttributesEnum.CurrReprLOV.index();
    public static final int USEIDLOV = AttributesEnum.UseIdLOV.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblCurrVORowImpl() {
    }

    /**
     * Gets AppGlblCurrEO entity object.
     * @return the AppGlblCurrEO
     */
    public AppGlblCurrEOImpl getAppGlblCurrEO() {
        return (AppGlblCurrEOImpl)getEntity(ENTITY_APPGLBLCURREO);
    }

    /**
     * Gets the attribute value for GLBL_CURR_ACTV using the alias name GlblCurrActv.
     * @return the GLBL_CURR_ACTV
     */
    public String getGlblCurrActv() {
        return (String) getAttributeInternal(GLBLCURRACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_ACTV using the alias name GlblCurrActv.
     * @param value value to set the GLBL_CURR_ACTV
     */
    public void setGlblCurrActv(String value) {
        setAttributeInternal(GLBLCURRACTV, value);
    }

    /**
     * Gets the attribute value for GLBL_CURR_COMMENTS using the alias name GlblCurrComments.
     * @return the GLBL_CURR_COMMENTS
     */
    public String getGlblCurrComments() {
        return (String) getAttributeInternal(GLBLCURRCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_COMMENTS using the alias name GlblCurrComments.
     * @param value value to set the GLBL_CURR_COMMENTS
     */
    public void setGlblCurrComments(String value) {
        setAttributeInternal(GLBLCURRCOMMENTS, value);
    }

    /**
     * Gets the attribute value for GLBL_CURR_DEC_NOTATION using the alias name GlblCurrDecNotation.
     * @return the GLBL_CURR_DEC_NOTATION
     */
    public String getGlblCurrDecNotation() {
        return (String) getAttributeInternal(GLBLCURRDECNOTATION);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_DEC_NOTATION using the alias name GlblCurrDecNotation.
     * @param value value to set the GLBL_CURR_DEC_NOTATION
     */
    public void setGlblCurrDecNotation(String value) {
        setAttributeInternal(GLBLCURRDECNOTATION, value.toUpperCase());
    }

    /**
     * Gets the attribute value for GLBL_CURR_DEC_PLACES using the alias name GlblCurrDecPlaces.
     * @return the GLBL_CURR_DEC_PLACES
     */
    public Integer getGlblCurrDecPlaces() {
        return (Integer) getAttributeInternal(GLBLCURRDECPLACES);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_DEC_PLACES using the alias name GlblCurrDecPlaces.
     * @param value value to set the GLBL_CURR_DEC_PLACES
     */
    public void setGlblCurrDecPlaces(Integer value) {
        setAttributeInternal(GLBLCURRDECPLACES, value);
    }

    /**
     * Gets the attribute value for GLBL_CURR_DESC using the alias name GlblCurrDesc.
     * @return the GLBL_CURR_DESC
     */
    public String getGlblCurrDesc() {
        return (String) getAttributeInternal(GLBLCURRDESC);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_DESC using the alias name GlblCurrDesc.
     * @param value value to set the GLBL_CURR_DESC
     */
    public void setGlblCurrDesc(String value) {
        setAttributeInternal(GLBLCURRDESC, value.toUpperCase());
    }

    /**
     * Gets the attribute value for GLBL_CURR_DESC_OLD using the alias name GlblCurrDescOld.
     * @return the GLBL_CURR_DESC_OLD
     */
    public String getGlblCurrDescOld() {
        return (String) getAttributeInternal(GLBLCURRDESCOLD);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_DESC_OLD using the alias name GlblCurrDescOld.
     * @param value value to set the GLBL_CURR_DESC_OLD
     */
    public void setGlblCurrDescOld(String value) {
        setAttributeInternal(GLBLCURRDESCOLD, value);
    }


    /**
     * Gets the attribute value for GLBL_CURR_ID using the alias name GlblCurrId.
     * @return the GLBL_CURR_ID
     */
    public DBSequence getGlblCurrId() {
        return (DBSequence)getAttributeInternal(GLBLCURRID);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_ID using the alias name GlblCurrId.
     * @param value value to set the GLBL_CURR_ID
     */
    public void setGlblCurrId(DBSequence value) {
        setAttributeInternal(GLBLCURRID, value);
    }

    /**
     * Gets the attribute value for GLBL_CURR_NOTATION using the alias name GlblCurrNotation.
     * @return the GLBL_CURR_NOTATION
     */
    public String getGlblCurrNotation() {
        return (String) getAttributeInternal(GLBLCURRNOTATION);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_NOTATION using the alias name GlblCurrNotation.
     * @param value value to set the GLBL_CURR_NOTATION
     */
    public void setGlblCurrNotation(String value) {
        setAttributeInternal(GLBLCURRNOTATION, value.toUpperCase());
    }

    /**
     * Gets the attribute value for GLBL_CURR_NOTATION_ALIAS using the alias name GlblCurrNotationAlias.
     * @return the GLBL_CURR_NOTATION_ALIAS
     */
    public String getGlblCurrNotationAlias() {
        return (String) getAttributeInternal(GLBLCURRNOTATIONALIAS);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_NOTATION_ALIAS using the alias name GlblCurrNotationAlias.
     * @param value value to set the GLBL_CURR_NOTATION_ALIAS
     */
    public void setGlblCurrNotationAlias(String value) {
        setAttributeInternal(GLBLCURRNOTATIONALIAS, value.toUpperCase());
    }

    /**
     * Gets the attribute value for GLBL_CURR_REPRESENTATION using the alias name GlblCurrRepresentation.
     * @return the GLBL_CURR_REPRESENTATION
     */
    public String getGlblCurrRepresentation() {
        return (String) getAttributeInternal(GLBLCURRREPRESENTATION);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_REPRESENTATION using the alias name GlblCurrRepresentation.
     * @param value value to set the GLBL_CURR_REPRESENTATION
     */
    public void setGlblCurrRepresentation(String value) {
        setAttributeInternal(GLBLCURRREPRESENTATION, value);
    }

    /**
     * Gets the attribute value for GLBL_CURR_USED_IN_APP using the alias name GlblCurrUsedInApp.
     * @return the GLBL_CURR_USED_IN_APP
     */
    public String getGlblCurrUsedInApp() {
        return (String) getAttributeInternal(GLBLCURRUSEDINAPP);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CURR_USED_IN_APP using the alias name GlblCurrUsedInApp.
     * @param value value to set the GLBL_CURR_USED_IN_APP
     */
    public void setGlblCurrUsedInApp(String value) {
        setAttributeInternal(GLBLCURRUSEDINAPP, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CurrReprLOV.
     */
    public RowSet getCurrReprLOV() {
        return (RowSet)getAttributeInternal(CURRREPRLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UseIdLOV.
     */
    public RowSet getUseIdLOV() {
        return (RowSet)getAttributeInternal(USEIDLOV);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
