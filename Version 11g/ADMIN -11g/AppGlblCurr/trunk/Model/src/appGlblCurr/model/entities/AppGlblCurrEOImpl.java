package appGlblCurr.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 25 15:28:42 PDT 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblCurrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblCurrId {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrId();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrId((DBSequence)value);
            }
        }
        ,
        GlblCurrDesc {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrDesc();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrDesc((String)value);
            }
        }
        ,
        GlblCurrDescOld {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrDescOld();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrDescOld((String)value);
            }
        }
        ,
        GlblCurrNotationAlias {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrNotationAlias();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrNotationAlias((String)value);
            }
        }
        ,
        GlblCurrNotation {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrNotation();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrNotation((String)value);
            }
        }
        ,
        GlblCurrDecPlaces {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrDecPlaces();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrDecPlaces((Integer)value);
            }
        }
        ,
        GlblCurrDecNotation {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrDecNotation();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrDecNotation((String)value);
            }
        }
        ,
        GlblCurrRepresentation {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrRepresentation();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrRepresentation((String)value);
            }
        }
        ,
        GlblCurrComments {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrComments();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrComments((String)value);
            }
        }
        ,
        GlblCurrUsedInApp {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrUsedInApp();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrUsedInApp((String)value);
            }
        }
        ,
        GlblCurrActv {
            public Object get(AppGlblCurrEOImpl obj) {
                return obj.getGlblCurrActv();
            }

            public void put(AppGlblCurrEOImpl obj, Object value) {
                obj.setGlblCurrActv((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblCurrEOImpl object);

        public abstract void put(AppGlblCurrEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int GLBLCURRID = AttributesEnum.GlblCurrId.index();
    public static final int GLBLCURRDESC = AttributesEnum.GlblCurrDesc.index();
    public static final int GLBLCURRDESCOLD = AttributesEnum.GlblCurrDescOld.index();
    public static final int GLBLCURRNOTATIONALIAS = AttributesEnum.GlblCurrNotationAlias.index();
    public static final int GLBLCURRNOTATION = AttributesEnum.GlblCurrNotation.index();
    public static final int GLBLCURRDECPLACES = AttributesEnum.GlblCurrDecPlaces.index();
    public static final int GLBLCURRDECNOTATION = AttributesEnum.GlblCurrDecNotation.index();
    public static final int GLBLCURRREPRESENTATION = AttributesEnum.GlblCurrRepresentation.index();
    public static final int GLBLCURRCOMMENTS = AttributesEnum.GlblCurrComments.index();
    public static final int GLBLCURRUSEDINAPP = AttributesEnum.GlblCurrUsedInApp.index();
    public static final int GLBLCURRACTV = AttributesEnum.GlblCurrActv.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblCurrEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appGlblCurr.model.entities.AppGlblCurrEO");
    }

    /**
     * Gets the attribute value for GlblCurrId, using the alias name GlblCurrId.
     * @return the value of GlblCurrId
     */
    public DBSequence getGlblCurrId() {
        return (DBSequence)getAttributeInternal(GLBLCURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrId.
     * @param value value to set the GlblCurrId
     */
    public void setGlblCurrId(DBSequence value) {
        setAttributeInternal(GLBLCURRID, value);
    }

    /**
     * Gets the attribute value for GlblCurrDesc, using the alias name GlblCurrDesc.
     * @return the value of GlblCurrDesc
     */
    public String getGlblCurrDesc() {
        return (String)getAttributeInternal(GLBLCURRDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrDesc.
     * @param value value to set the GlblCurrDesc
     */
    public void setGlblCurrDesc(String value) {
        setAttributeInternal(GLBLCURRDESC, value);
    }

    /**
     * Gets the attribute value for GlblCurrDescOld, using the alias name GlblCurrDescOld.
     * @return the value of GlblCurrDescOld
     */
    public String getGlblCurrDescOld() {
        return (String)getAttributeInternal(GLBLCURRDESCOLD);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrDescOld.
     * @param value value to set the GlblCurrDescOld
     */
    public void setGlblCurrDescOld(String value) {
        setAttributeInternal(GLBLCURRDESCOLD, value);
    }

    /**
     * Gets the attribute value for GlblCurrNotationAlias, using the alias name GlblCurrNotationAlias.
     * @return the value of GlblCurrNotationAlias
     */
    public String getGlblCurrNotationAlias() {
        return (String)getAttributeInternal(GLBLCURRNOTATIONALIAS);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrNotationAlias.
     * @param value value to set the GlblCurrNotationAlias
     */
    public void setGlblCurrNotationAlias(String value) {
        setAttributeInternal(GLBLCURRNOTATIONALIAS, value);
    }

    /**
     * Gets the attribute value for GlblCurrNotation, using the alias name GlblCurrNotation.
     * @return the value of GlblCurrNotation
     */
    public String getGlblCurrNotation() {
        return (String)getAttributeInternal(GLBLCURRNOTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrNotation.
     * @param value value to set the GlblCurrNotation
     */
    public void setGlblCurrNotation(String value) {
        setAttributeInternal(GLBLCURRNOTATION, value);
    }

    /**
     * Gets the attribute value for GlblCurrDecPlaces, using the alias name GlblCurrDecPlaces.
     * @return the value of GlblCurrDecPlaces
     */
    public Integer getGlblCurrDecPlaces() {
        return (Integer)getAttributeInternal(GLBLCURRDECPLACES);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrDecPlaces.
     * @param value value to set the GlblCurrDecPlaces
     */
    public void setGlblCurrDecPlaces(Integer value) {
        setAttributeInternal(GLBLCURRDECPLACES, value);
    }

    /**
     * Gets the attribute value for GlblCurrDecNotation, using the alias name GlblCurrDecNotation.
     * @return the value of GlblCurrDecNotation
     */
    public String getGlblCurrDecNotation() {
        return (String)getAttributeInternal(GLBLCURRDECNOTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrDecNotation.
     * @param value value to set the GlblCurrDecNotation
     */
    public void setGlblCurrDecNotation(String value) {
        setAttributeInternal(GLBLCURRDECNOTATION, value);
    }

    /**
     * Gets the attribute value for GlblCurrRepresentation, using the alias name GlblCurrRepresentation.
     * @return the value of GlblCurrRepresentation
     */
    public String getGlblCurrRepresentation() {
        return (String)getAttributeInternal(GLBLCURRREPRESENTATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrRepresentation.
     * @param value value to set the GlblCurrRepresentation
     */
    public void setGlblCurrRepresentation(String value) {
        setAttributeInternal(GLBLCURRREPRESENTATION, value);
    }

    /**
     * Gets the attribute value for GlblCurrComments, using the alias name GlblCurrComments.
     * @return the value of GlblCurrComments
     */
    public String getGlblCurrComments() {
        return (String)getAttributeInternal(GLBLCURRCOMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrComments.
     * @param value value to set the GlblCurrComments
     */
    public void setGlblCurrComments(String value) {
        setAttributeInternal(GLBLCURRCOMMENTS, value);
    }


    /**
     * Gets the attribute value for GlblCurrUsedInApp, using the alias name GlblCurrUsedInApp.
     * @return the value of GlblCurrUsedInApp
     */
    public String getGlblCurrUsedInApp() {
        return (String)getAttributeInternal(GLBLCURRUSEDINAPP);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrUsedInApp.
     * @param value value to set the GlblCurrUsedInApp
     */
    public void setGlblCurrUsedInApp(String value) {
        setAttributeInternal(GLBLCURRUSEDINAPP, value);
    }

    /**
     * Gets the attribute value for GlblCurrActv, using the alias name GlblCurrActv.
     * @return the value of GlblCurrActv
     */
    public String getGlblCurrActv() {
        return (String)getAttributeInternal(GLBLCURRACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCurrActv.
     * @param value value to set the GlblCurrActv
     */
    public void setGlblCurrActv(String value) {
        setAttributeInternal(GLBLCURRACTV, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param glblCurrId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence glblCurrId) {
        return new Key(new Object[]{glblCurrId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     protected void create(AttributeList attributeList) {
       
        
         super.create(attributeList);
     }

    public String resolvEl(String data){
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message=valueExp.getValue(elContext).toString();
        return Message;
      }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
       
        super.doDML(operation, e);
    }
}
