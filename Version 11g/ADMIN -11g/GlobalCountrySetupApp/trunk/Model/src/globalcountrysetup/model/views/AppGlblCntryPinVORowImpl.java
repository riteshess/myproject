package globalcountrysetup.model.views;

import globalcountrysetup.model.entity.AppGlblCntryPinEOImpl;

import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 11 13:00:30 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblCntryPinVORowImpl extends ViewRowImpl {

    public static final int ENTITY_APPGLBLCNTRYPINEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblCntryId {
            public Object get(AppGlblCntryPinVORowImpl obj) {
                return obj.getGlblCntryId();
            }

            public void put(AppGlblCntryPinVORowImpl obj, Object value) {
                obj.setGlblCntryId((Integer)value);
            }
        }
        ,
        GlblCntryPinEffDt {
            public Object get(AppGlblCntryPinVORowImpl obj) {
                return obj.getGlblCntryPinEffDt();
            }

            public void put(AppGlblCntryPinVORowImpl obj, Object value) {
                obj.setGlblCntryPinEffDt((Timestamp)value);
            }
        }
        ,
        GlblCntryPinFormat {
            public Object get(AppGlblCntryPinVORowImpl obj) {
                return obj.getGlblCntryPinFormat();
            }

            public void put(AppGlblCntryPinVORowImpl obj, Object value) {
                obj.setGlblCntryPinFormat((String)value);
            }
        }
        ,
        GlblCntryPinLen {
            public Object get(AppGlblCntryPinVORowImpl obj) {
                return obj.getGlblCntryPinLen();
            }

            public void put(AppGlblCntryPinVORowImpl obj, Object value) {
                obj.setGlblCntryPinLen((String)value);
            }
        }
        ,
        GlblSecPrfEntId {
            public Object get(AppGlblCntryPinVORowImpl obj) {
                return obj.getGlblSecPrfEntId();
            }

            public void put(AppGlblCntryPinVORowImpl obj, Object value) {
                obj.setGlblSecPrfEntId((Integer)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblCntryPinVORowImpl object);

        public abstract void put(AppGlblCntryPinVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int GLBLCNTRYID = AttributesEnum.GlblCntryId.index();
    public static final int GLBLCNTRYPINEFFDT = AttributesEnum.GlblCntryPinEffDt.index();
    public static final int GLBLCNTRYPINFORMAT = AttributesEnum.GlblCntryPinFormat.index();
    public static final int GLBLCNTRYPINLEN = AttributesEnum.GlblCntryPinLen.index();
    public static final int GLBLSECPRFENTID = AttributesEnum.GlblSecPrfEntId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblCntryPinVORowImpl() {
    }

    /**
     * Gets AppGlblCntryPinEO entity object.
     * @return the AppGlblCntryPinEO
     */
    public AppGlblCntryPinEOImpl getAppGlblCntryPinEO() {
        return (AppGlblCntryPinEOImpl)getEntity(ENTITY_APPGLBLCNTRYPINEO);
    }

    /**
     * Gets the attribute value for GLBL_CNTRY_ID using the alias name GlblCntryId.
     * @return the GLBL_CNTRY_ID
     */
    public Integer getGlblCntryId() {
        return (Integer) getAttributeInternal(GLBLCNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CNTRY_ID using the alias name GlblCntryId.
     * @param value value to set the GLBL_CNTRY_ID
     */
    public void setGlblCntryId(Integer value) {
        setAttributeInternal(GLBLCNTRYID, value);
    }

    /**
     * Gets the attribute value for GLBL_CNTRY_PIN_EFF_DT using the alias name GlblCntryPinEffDt.
     * @return the GLBL_CNTRY_PIN_EFF_DT
     */
    public Timestamp getGlblCntryPinEffDt() {
        return (Timestamp) getAttributeInternal(GLBLCNTRYPINEFFDT);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CNTRY_PIN_EFF_DT using the alias name GlblCntryPinEffDt.
     * @param value value to set the GLBL_CNTRY_PIN_EFF_DT
     */
    public void setGlblCntryPinEffDt(Timestamp value) {
        setAttributeInternal(GLBLCNTRYPINEFFDT, value);
    }


    /**
     * Gets the attribute value for GLBL_CNTRY_PIN_FORMAT using the alias name GlblCntryPinFormat.
     * @return the GLBL_CNTRY_PIN_FORMAT
     */
    public String getGlblCntryPinFormat() {
        return (String) getAttributeInternal(GLBLCNTRYPINFORMAT);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CNTRY_PIN_FORMAT using the alias name GlblCntryPinFormat.
     * @param value value to set the GLBL_CNTRY_PIN_FORMAT
     */
    public void setGlblCntryPinFormat(String value) {
        setAttributeInternal(GLBLCNTRYPINFORMAT, value);
    }

    /**
     * Gets the attribute value for GLBL_CNTRY_PIN_LEN using the alias name GlblCntryPinLen.
     * @return the GLBL_CNTRY_PIN_LEN
     */
    public String getGlblCntryPinLen() {
        return (String) getAttributeInternal(GLBLCNTRYPINLEN);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_CNTRY_PIN_LEN using the alias name GlblCntryPinLen.
     * @param value value to set the GLBL_CNTRY_PIN_LEN
     */
    public void setGlblCntryPinLen(String value) {
        setAttributeInternal(GLBLCNTRYPINLEN, value);
    }

    /**
     * Gets the attribute value for GLBL_SEC_PRF_ENT_ID using the alias name GlblSecPrfEntId.
     * @return the GLBL_SEC_PRF_ENT_ID
     */
    public Integer getGlblSecPrfEntId() {
        return (Integer) getAttributeInternal(GLBLSECPRFENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for GLBL_SEC_PRF_ENT_ID using the alias name GlblSecPrfEntId.
     * @param value value to set the GLBL_SEC_PRF_ENT_ID
     */
    public void setGlblSecPrfEntId(Integer value) {
        setAttributeInternal(GLBLSECPRFENTID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
