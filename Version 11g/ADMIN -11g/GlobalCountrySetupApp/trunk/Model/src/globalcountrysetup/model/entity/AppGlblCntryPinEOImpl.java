package globalcountrysetup.model.entity;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Oct 11 13:06:12 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblCntryPinEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblSecPrfEntId {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getGlblSecPrfEntId();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setGlblSecPrfEntId((Integer)value);
            }
        }
        ,
        GlblCntryId {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getGlblCntryId();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setGlblCntryId((String)value);
            }
        }
        ,
        GlblCntryPinEffDt {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getGlblCntryPinEffDt();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setGlblCntryPinEffDt((Timestamp)value);
            }
        }
        ,
        GlblCntryPinLen {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getGlblCntryPinLen();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setGlblCntryPinLen((String)value);
            }
        }
        ,
        GlblCntryPinFormat {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getGlblCntryPinFormat();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setGlblCntryPinFormat((String)value);
            }
        }
        ,
        AppGlblCntry {
            public Object get(AppGlblCntryPinEOImpl obj) {
                return obj.getAppGlblCntry();
            }

            public void put(AppGlblCntryPinEOImpl obj, Object value) {
                obj.setAppGlblCntry((EntityImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblCntryPinEOImpl object);

        public abstract void put(AppGlblCntryPinEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int GLBLSECPRFENTID = AttributesEnum.GlblSecPrfEntId.index();
    public static final int GLBLCNTRYID = AttributesEnum.GlblCntryId.index();
    public static final int GLBLCNTRYPINEFFDT = AttributesEnum.GlblCntryPinEffDt.index();
    public static final int GLBLCNTRYPINLEN = AttributesEnum.GlblCntryPinLen.index();
    public static final int GLBLCNTRYPINFORMAT = AttributesEnum.GlblCntryPinFormat.index();
    public static final int APPGLBLCNTRY = AttributesEnum.AppGlblCntry.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblCntryPinEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("globalcountrysetup.model.entity.AppGlblCntryPinEO");
    }

    /**
     * Gets the attribute value for GlblSecPrfEntId, using the alias name GlblSecPrfEntId.
     * @return the value of GlblSecPrfEntId
     */
    public Integer getGlblSecPrfEntId() {
        return (Integer)getAttributeInternal(GLBLSECPRFENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblSecPrfEntId.
     * @param value value to set the GlblSecPrfEntId
     */
    public void setGlblSecPrfEntId(Integer value) {
        setAttributeInternal(GLBLSECPRFENTID, value);
    }

    /**
     * Gets the attribute value for GlblCntryId, using the alias name GlblCntryId.
     * @return the value of GlblCntryId
     */
    public String getGlblCntryId() {
        return (String)getAttributeInternal(GLBLCNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCntryId.
     * @param value value to set the GlblCntryId
     */
    public void setGlblCntryId(String value) {
        setAttributeInternal(GLBLCNTRYID, value);
    }

    /**
     * Gets the attribute value for GlblCntryPinEffDt, using the alias name GlblCntryPinEffDt.
     * @return the value of GlblCntryPinEffDt
     */
    public Timestamp getGlblCntryPinEffDt() {
        return (Timestamp)getAttributeInternal(GLBLCNTRYPINEFFDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCntryPinEffDt.
     * @param value value to set the GlblCntryPinEffDt
     */
    public void setGlblCntryPinEffDt(Timestamp value) {
        setAttributeInternal(GLBLCNTRYPINEFFDT, value);
    }

    /**
     * Gets the attribute value for GlblCntryPinLen, using the alias name GlblCntryPinLen.
     * @return the value of GlblCntryPinLen
     */
    public String getGlblCntryPinLen() {
        return (String)getAttributeInternal(GLBLCNTRYPINLEN);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCntryPinLen.
     * @param value value to set the GlblCntryPinLen
     */
    public void setGlblCntryPinLen(String value) {
        setAttributeInternal(GLBLCNTRYPINLEN, value);
    }

    /**
     * Gets the attribute value for GlblCntryPinFormat, using the alias name GlblCntryPinFormat.
     * @return the value of GlblCntryPinFormat
     */
    public String getGlblCntryPinFormat() {
        return (String)getAttributeInternal(GLBLCNTRYPINFORMAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblCntryPinFormat.
     * @param value value to set the GlblCntryPinFormat
     */
    public void setGlblCntryPinFormat(String value) {
        setAttributeInternal(GLBLCNTRYPINFORMAT, value);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getAppGlblCntry() {
        return (EntityImpl)getAttributeInternal(APPGLBLCNTRY);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAppGlblCntry(EntityImpl value) {
        setAttributeInternal(APPGLBLCNTRY, value);
    }


    /**
     * @param glblCntryId key constituent
     * @param glblCntryPinEffDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String glblCntryId, Timestamp glblCntryPinEffDt) {
        return new Key(new Object[]{glblCntryId, glblCntryPinEffDt});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
