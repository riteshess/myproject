package uploadreportfile.model.services;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;

import uploadreportfile.model.services.common.UploadReportFileAM;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 21 16:40:44 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UploadReportFileAMImpl extends ApplicationModuleImpl implements UploadReportFileAM {
    /**
     * This is the default constructor (do not remove).
     */
    public UploadReportFileAMImpl() {
    }

    /**
     * Container's getter for AppRpt.
     * @return AppRpt
     */
    public ViewObjectImpl getAppRpt() {
        return (ViewObjectImpl)findViewObject("AppRpt");
    }

    /**
     * Container's getter for Temporary.
     * @return Temporary
     */
    public ViewObjectImpl getTemporary() {
        return (ViewObjectImpl)findViewObject("Temporary");
    }

    /**
     * Container's getter for GetRptPathTemp.
     * @return GetRptPathTemp
     */
    public ViewObjectImpl getGetRptPathTemp() {
        return (ViewObjectImpl)findViewObject("GetRptPathTemp");
    }

    /**
     * Insert new report into AppRpt VO
     */
    public Boolean InsRowIntoRpt(String name, String auth, String fileName, Integer documId, String desc) {
        Boolean retVal = false;
        ViewObjectImpl appRpt = this.getAppRpt();
        Integer beforeRowCount = appRpt.getRowCount();

        Row createRow = appRpt.createRow();
        createRow.setAttribute("RptNm", name);
        createRow.setAttribute("RptAuthCode", auth);
        createRow.setAttribute("RptFileNm", fileName);
        createRow.setAttribute("RptPformDocId", documId);
        createRow.setAttribute("RptDesc", desc);
        appRpt.insertRow(createRow);

        System.out.println("AppRpt " + (appRpt.getRowCount() > beforeRowCount));
        if (appRpt.getRowCount() > beforeRowCount) {
            System.out.println("Inside Executed");
            retVal = true;
        }


        return retVal;
    }

    /**
     * Returns report path which need to store
     */
    public String getReportPathFromDB() {
        this.getGetRptPathTemp().executeQuery();

        Row[] allRowsInRange = this.getGetRptPathTemp().getAllRowsInRange();

        return (String)allRowsInRange[0].getAttribute("SrvrLocAsRptPath");
    }

    /**
     * Check Duplicate Report Name
     */
    public Boolean chkRptNameExistOrNot(String rptName) {
        Boolean retVal = false;
        //System.out.println("Report Name is "+rptName);
        if (rptName != null) {
            ViewObjectImpl appRpt = this.getAppRpt();
            RowQualifier rQ = new RowQualifier(appRpt);
            rQ.setWhereClause("upper(RptNm)='"+rptName.toUpperCase()+"'");
            Row[] allRowsInRange = appRpt.getFilteredRows(rQ);
            if (allRowsInRange.length > 0) {
                retVal = true;
            }
        }
        return retVal;
    }
}
