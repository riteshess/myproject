package uploadreportfile.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 21 16:43:19 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppRptEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        RptCldId {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptCldId();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptCldId((String)value);
            }
        }
        ,
        RptSlocId {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptSlocId();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptSlocId((Integer)value);
            }
        }
        ,
        RptId {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptId();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptId((Integer)value);
            }
        }
        ,
        RptIdActive {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptIdActive();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptIdActive((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppRptEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppRptEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppRptEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppRptEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        RptNm {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptNm();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptNm((String)value);
            }
        }
        ,
        RptAccessType {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptAccessType();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptAccessType((String)value);
            }
        }
        ,
        RptAccessFrom {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptAccessFrom();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptAccessFrom((String)value);
            }
        }
        ,
        RptAccessTo {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptAccessTo();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptAccessTo((String)value);
            }
        }
        ,
        RptAuthCode {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptAuthCode();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptAuthCode((String)value);
            }
        }
        ,
        RptAuthStat {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptAuthStat();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptAuthStat((String)value);
            }
        }
        ,
        RptFileNm {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptFileNm();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptFileNm((String)value);
            }
        }
        ,
        RptPformDocId {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptPformDocId();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptPformDocId((Integer)value);
            }
        }
        ,
        RptDesc {
            public Object get(AppRptEOImpl obj) {
                return obj.getRptDesc();
            }

            public void put(AppRptEOImpl obj, Object value) {
                obj.setRptDesc((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppRptEOImpl object);

        public abstract void put(AppRptEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int RPTCLDID = AttributesEnum.RptCldId.index();
    public static final int RPTSLOCID = AttributesEnum.RptSlocId.index();
    public static final int RPTID = AttributesEnum.RptId.index();
    public static final int RPTIDACTIVE = AttributesEnum.RptIdActive.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int RPTNM = AttributesEnum.RptNm.index();
    public static final int RPTACCESSTYPE = AttributesEnum.RptAccessType.index();
    public static final int RPTACCESSFROM = AttributesEnum.RptAccessFrom.index();
    public static final int RPTACCESSTO = AttributesEnum.RptAccessTo.index();
    public static final int RPTAUTHCODE = AttributesEnum.RptAuthCode.index();
    public static final int RPTAUTHSTAT = AttributesEnum.RptAuthStat.index();
    public static final int RPTFILENM = AttributesEnum.RptFileNm.index();
    public static final int RPTPFORMDOCID = AttributesEnum.RptPformDocId.index();
    public static final int RPTDESC = AttributesEnum.RptDesc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppRptEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("uploadreportfile.model.entities.AppRptEO");
    }

    /**
     * Gets the attribute value for RptCldId, using the alias name RptCldId.
     * @return the value of RptCldId
     */
    public String getRptCldId() {
        return (String)getAttributeInternal(RPTCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptCldId.
     * @param value value to set the RptCldId
     */
    public void setRptCldId(String value) {
        setAttributeInternal(RPTCLDID, value);
    }

    /**
     * Gets the attribute value for RptSlocId, using the alias name RptSlocId.
     * @return the value of RptSlocId
     */
    public Integer getRptSlocId() {
        return (Integer)getAttributeInternal(RPTSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptSlocId.
     * @param value value to set the RptSlocId
     */
    public void setRptSlocId(Integer value) {
        setAttributeInternal(RPTSLOCID, value);
    }

    /**
     * Gets the attribute value for RptId, using the alias name RptId.
     * @return the value of RptId
     */
    public Integer getRptId() {
        return (Integer)getAttributeInternal(RPTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptId.
     * @param value value to set the RptId
     */
    public void setRptId(Integer value) {
        setAttributeInternal(RPTID, value);
    }

    /**
     * Gets the attribute value for RptIdActive, using the alias name RptIdActive.
     * @return the value of RptIdActive
     */
    public String getRptIdActive() {
        return (String)getAttributeInternal(RPTIDACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptIdActive.
     * @param value value to set the RptIdActive
     */
    public void setRptIdActive(String value) {
        setAttributeInternal(RPTIDACTIVE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for RptNm, using the alias name RptNm.
     * @return the value of RptNm
     */
    public String getRptNm() {
        return (String)getAttributeInternal(RPTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptNm.
     * @param value value to set the RptNm
     */
    public void setRptNm(String value) {
        setAttributeInternal(RPTNM, value);
    }

    /**
     * Gets the attribute value for RptAccessType, using the alias name RptAccessType.
     * @return the value of RptAccessType
     */
    public String getRptAccessType() {
        return (String)getAttributeInternal(RPTACCESSTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptAccessType.
     * @param value value to set the RptAccessType
     */
    public void setRptAccessType(String value) {
        setAttributeInternal(RPTACCESSTYPE, value);
    }

    /**
     * Gets the attribute value for RptAccessFrom, using the alias name RptAccessFrom.
     * @return the value of RptAccessFrom
     */
    public String getRptAccessFrom() {
        return (String)getAttributeInternal(RPTACCESSFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptAccessFrom.
     * @param value value to set the RptAccessFrom
     */
    public void setRptAccessFrom(String value) {
        setAttributeInternal(RPTACCESSFROM, value);
    }

    /**
     * Gets the attribute value for RptAccessTo, using the alias name RptAccessTo.
     * @return the value of RptAccessTo
     */
    public String getRptAccessTo() {
        return (String)getAttributeInternal(RPTACCESSTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptAccessTo.
     * @param value value to set the RptAccessTo
     */
    public void setRptAccessTo(String value) {
        setAttributeInternal(RPTACCESSTO, value);
    }

    /**
     * Gets the attribute value for RptAuthCode, using the alias name RptAuthCode.
     * @return the value of RptAuthCode
     */
    public String getRptAuthCode() {
        return (String)getAttributeInternal(RPTAUTHCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptAuthCode.
     * @param value value to set the RptAuthCode
     */
    public void setRptAuthCode(String value) {
        setAttributeInternal(RPTAUTHCODE, value);
    }

    /**
     * Gets the attribute value for RptAuthStat, using the alias name RptAuthStat.
     * @return the value of RptAuthStat
     */
    public String getRptAuthStat() {
        return (String)getAttributeInternal(RPTAUTHSTAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptAuthStat.
     * @param value value to set the RptAuthStat
     */
    public void setRptAuthStat(String value) {
        setAttributeInternal(RPTAUTHSTAT, value);
    }

    /**
     * Gets the attribute value for RptFileNm, using the alias name RptFileNm.
     * @return the value of RptFileNm
     */
    public String getRptFileNm() {
        return (String)getAttributeInternal(RPTFILENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptFileNm.
     * @param value value to set the RptFileNm
     */
    public void setRptFileNm(String value) {
        setAttributeInternal(RPTFILENM, value);
    }

    /**
     * Gets the attribute value for RptPformDocId, using the alias name RptPformDocId.
     * @return the value of RptPformDocId
     */
    public Integer getRptPformDocId() {
        return (Integer)getAttributeInternal(RPTPFORMDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptPformDocId.
     * @param value value to set the RptPformDocId
     */
    public void setRptPformDocId(Integer value) {
        setAttributeInternal(RPTPFORMDOCID, value);
    }

    /**
     * Gets the attribute value for RptDesc, using the alias name RptDesc.
     * @return the value of RptDesc
     */
    public String getRptDesc() {
        return (String)getAttributeInternal(RPTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for RptDesc.
     * @param value value to set the RptDesc
     */
    public void setRptDesc(String value) {
        setAttributeInternal(RPTDESC, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param rptCldId key constituent
     * @param rptSlocId key constituent
     * @param rptId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String rptCldId, Integer rptSlocId, Integer rptId) {
        return new Key(new Object[]{rptCldId, rptSlocId, rptId});
    }

    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        this.setRptCldId(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}"));
        this.setRptSlocId(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")));
        this.setUsrIdCreate(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if(operation == DML_UPDATE){
            this.setUsrIdMod(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        
        super.doDML(operation, e);
    }
}
