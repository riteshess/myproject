package appgraphsetup.model.view;

import appgraphsetup.model.entity.AppGrphEOImpl;

import appgraphsetup.model.module.AppGraphSetupAMImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 14 11:32:54 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGrphVORowImpl extends ViewRowImpl {
    public static final int ENTITY_APPGRPHEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GrphCldId {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphCldId();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphCldId((String)value);
            }
        }
        ,
        GrphActv {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphActv();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphActv((String)value);
            }
        }
        ,
        GrphAlwMod {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphAlwMod();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphAlwMod((String)value);
            }
        }
        ,
        GrphAlwSaveAs {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphAlwSaveAs();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphAlwSaveAs((String)value);
            }
        }
        ,
        GrphId {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphId();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphId((Integer)value);
            }
        }
        ,
        GrphNwInst {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphNwInst();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphNwInst((String)value);
            }
        }
        ,
        GrphSlocId {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphSlocId();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphSlocId((Integer)value);
            }
        }
        ,
        GrphVisb {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGrphVisb();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGrphVisb((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        GlblGrphNm {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGlblGrphNm();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setGlblGrphNm((String)value);
            }
        }
        ,
        TransGraphName {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getTransGraphName();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setTransGraphName((String)value);
            }
        }
        ,
        AppGrphTrnd {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getAppGrphTrnd();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GlblGraphLOV1 {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGlblGraphLOV1();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VisibleLOV1 {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getVisibleLOV1();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        GlblGraphAddLOV1 {
            public Object get(AppGrphVORowImpl obj) {
                return obj.getGlblGraphAddLOV1();
            }

            public void put(AppGrphVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGrphVORowImpl object);

        public abstract void put(AppGrphVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GRPHCLDID = AttributesEnum.GrphCldId.index();
    public static final int GRPHACTV = AttributesEnum.GrphActv.index();
    public static final int GRPHALWMOD = AttributesEnum.GrphAlwMod.index();
    public static final int GRPHALWSAVEAS = AttributesEnum.GrphAlwSaveAs.index();
    public static final int GRPHID = AttributesEnum.GrphId.index();
    public static final int GRPHNWINST = AttributesEnum.GrphNwInst.index();
    public static final int GRPHSLOCID = AttributesEnum.GrphSlocId.index();
    public static final int GRPHVISB = AttributesEnum.GrphVisb.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int GLBLGRPHNM = AttributesEnum.GlblGrphNm.index();
    public static final int TRANSGRAPHNAME = AttributesEnum.TransGraphName.index();
    public static final int APPGRPHTRND = AttributesEnum.AppGrphTrnd.index();
    public static final int GLBLGRAPHLOV1 = AttributesEnum.GlblGraphLOV1.index();
    public static final int VISIBLELOV1 = AttributesEnum.VisibleLOV1.index();
    public static final int GLBLGRAPHADDLOV1 = AttributesEnum.GlblGraphAddLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGrphVORowImpl() {
    }

    /**
     * Gets AppGrphEO entity object.
     * @return the AppGrphEO
     */
    public AppGrphEOImpl getAppGrphEO() {
        return (AppGrphEOImpl)getEntity(ENTITY_APPGRPHEO);
    }

    /**
     * Gets the attribute value for GRPH_CLD_ID using the alias name GrphCldId.
     * @return the GRPH_CLD_ID
     */
    public String getGrphCldId() {
        return (String) getAttributeInternal(GRPHCLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_CLD_ID using the alias name GrphCldId.
     * @param value value to set the GRPH_CLD_ID
     */
    public void setGrphCldId(String value) {
        setAttributeInternal(GRPHCLDID, value);
    }

    /**
     * Gets the attribute value for GRPH_ACTV using the alias name GrphActv.
     * @return the GRPH_ACTV
     */
    public String getGrphActv() {
        return (String) getAttributeInternal(GRPHACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_ACTV using the alias name GrphActv.
     * @param value value to set the GRPH_ACTV
     */
    public void setGrphActv(String value) {
        setAttributeInternal(GRPHACTV, value);
    }

    /**
     * Gets the attribute value for GRPH_ALW_MOD using the alias name GrphAlwMod.
     * @return the GRPH_ALW_MOD
     */
    public String getGrphAlwMod() {
        return (String) getAttributeInternal(GRPHALWMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_ALW_MOD using the alias name GrphAlwMod.
     * @param value value to set the GRPH_ALW_MOD
     */
    public void setGrphAlwMod(String value) {
        setAttributeInternal(GRPHALWMOD, value);
    }

    /**
     * Gets the attribute value for GRPH_ALW_SAVE_AS using the alias name GrphAlwSaveAs.
     * @return the GRPH_ALW_SAVE_AS
     */
    public String getGrphAlwSaveAs() {
        return (String) getAttributeInternal(GRPHALWSAVEAS);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_ALW_SAVE_AS using the alias name GrphAlwSaveAs.
     * @param value value to set the GRPH_ALW_SAVE_AS
     */
    public void setGrphAlwSaveAs(String value) {
        setAttributeInternal(GRPHALWSAVEAS, value);
    }

    /**
     * Gets the attribute value for GRPH_ID using the alias name GrphId.
     * @return the GRPH_ID
     */
    public Integer getGrphId() {
        return (Integer) getAttributeInternal(GRPHID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_ID using the alias name GrphId.
     * @param value value to set the GRPH_ID
     */
    public void setGrphId(Integer value) {
        setAttributeInternal(GRPHID, value);
    }

    /**
     * Gets the attribute value for GRPH_NW_INST using the alias name GrphNwInst.
     * @return the GRPH_NW_INST
     */
    public String getGrphNwInst() {
        return (String) getAttributeInternal(GRPHNWINST);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_NW_INST using the alias name GrphNwInst.
     * @param value value to set the GRPH_NW_INST
     */
    public void setGrphNwInst(String value) {
        setAttributeInternal(GRPHNWINST, value);
    }

    /**
     * Gets the attribute value for GRPH_SLOC_ID using the alias name GrphSlocId.
     * @return the GRPH_SLOC_ID
     */
    public Integer getGrphSlocId() {
        return (Integer) getAttributeInternal(GRPHSLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_SLOC_ID using the alias name GrphSlocId.
     * @param value value to set the GRPH_SLOC_ID
     */
    public void setGrphSlocId(Integer value) {
        setAttributeInternal(GRPHSLOCID, value);
    }

    /**
     * Gets the attribute value for GRPH_VISB using the alias name GrphVisb.
     * @return the GRPH_VISB
     */
    public String getGrphVisb() {
        return (String) getAttributeInternal(GRPHVISB);
    }

    /**
     * Sets <code>value</code> as attribute value for GRPH_VISB using the alias name GrphVisb.
     * @param value value to set the GRPH_VISB
     */
    public void setGrphVisb(String value) {
        setAttributeInternal(GRPHVISB, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GlblGrphNm.
     * @return the GlblGrphNm
     */
    public String getGlblGrphNm() {
        return (String) getAttributeInternal(GLBLGRPHNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GlblGrphNm.
     * @param value value to set the  GlblGrphNm
     */
    public void setGlblGrphNm(String value) {
        setAttributeInternal(GLBLGRPHNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGraphName.
     * @return the TransGraphName
     */
    public String getTransGraphName() {
        return (String) getAttributeInternal(TRANSGRAPHNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGraphName.
     * @param value value to set the  TransGraphName
     */
    public void setTransGraphName(String value) {
        setAttributeInternal(TRANSGRAPHNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppGrphTrnd.
     */
    public RowIterator getAppGrphTrnd() {
        return (RowIterator)getAttributeInternal(APPGRPHTRND);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GlblGraphLOV1.
     */
    public RowSet getGlblGraphLOV1() {
        return (RowSet)getAttributeInternal(GLBLGRAPHLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VisibleLOV1.
     */
    public RowSet getVisibleLOV1() {
        return (RowSet)getAttributeInternal(VISIBLELOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> GlblGraphAddLOV1.
     */
    public RowSet getGlblGraphAddLOV1() {
        return (RowSet)getAttributeInternal(GLBLGRAPHADDLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt,
                                        Object[] bindVars) {
      CallableStatement st = null;
      try {
        // 1. Create a JDBC CallabledStatement  
        st = getDBTransaction().createCallableStatement(
               "begin ? := "+stmt+";end;",0);
        // 2. Register the first bind variable for the return value
        st.registerOutParameter(1, sqlReturnType);
        if (bindVars != null) {
          // 3. Loop over values for the bind variables passed in, if any
          for (int z = 0; z < bindVars.length; z++) {
            // 4. Set the value of user-supplied bind vars in the stmt
            st.setObject(z + 2, bindVars[z]);
          }
        }
        // 5. Set the value of user-supplied bind vars in the stmt
        st.executeUpdate();
        // 6. Return the value of the first bind variable
        return st.getObject(1);
      }
      catch (SQLException e) {
        throw new JboException(e);
      }
      finally {
        if (st != null) {
          try {
            // 7. Close the statement
            st.close();
          }
          catch (SQLException e){}
        }
      }
    }
    private static int STRING = Types.VARCHAR;

    public String  toTemp(String flag){
        //pkg_grph.fn_gen_grph_trend_id(p_cld_id,p_sloc_id,p_grph_id)
        String trendid="";
        if(flag.equals("C"))
            System.out.println("flag=c");
               trendid=(String)callStoredFunction(STRING, "pkg_grph.fn_gen_grph_trend_id(?,?,?)", new Object[]{getGrphCldId(),getGrphSlocId(),getGrphId()});
       if(flag.equals("E"))
       { System.out.println("flag=E");
            AppGraphSetupAMImpl am = (AppGraphSetupAMImpl)resolvElDC("AppGraphSetupAMDataControl");
            AppGrphTrndVOImpl trend = am.getAppGrphTrnd();
            System.out.println("trend= "+trend);
            Row currentRow = trend.getCurrentRow();
            System.out.println("currentRow="+currentRow);
            Object attribute = currentRow.getAttribute("GrphTrndId");
            System.out.println("attribute="+attribute);
            trendid=attribute.toString();
            System.out.println("trendid"+trendid);
           
            
        }
          System.out.println("trend id = "+ trendid);
       String  sessid = (String)callStoredFunction(STRING, "APP.FN_GEN_SESSION_ID_USER(?)", new Object[]{getUsrIdCreate()});
    
        System.out.println("session id= "+ sessid);
        
     
      //  String trendid=(String)callStoredFunction(STRING, "pkg_grph.fn_gen_grph_trend_id(?,?,?)", new Object[]{getGrphCldId(),getGrphSlocId(),getGrphId()});
      System.out.println("trendid = "+trendid+" getGrphCldId= "+getGrphCldId()+" getGrphSlocId = "+ getGrphSlocId() + " getGrphId = "+ getGrphId());
       return  (String)callStoredFunction(STRING, "APP.PKG_GRPH.FN_GRPH_POPULATE_TO_TMP(?,?,?,?,?)",
                                                             new Object[]{sessid,getGrphCldId(),getGrphSlocId(),getGrphId(),trendid});
    }
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

}
