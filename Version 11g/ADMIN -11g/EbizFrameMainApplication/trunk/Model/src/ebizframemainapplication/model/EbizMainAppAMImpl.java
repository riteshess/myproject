package ebizframemainapplication.model;


import ebizframemainapplication.model.views.AppSecUsrMnuVOImpl;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import oracle.jbo.JboException;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 02 12:05:38 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EbizMainAppAMImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public EbizMainAppAMImpl() {
        //System.out.println("inside EbizMainAppAMImpl");
    }

    /**
     * Container's getter for AppSecUsrView1.
     * @return AppSecUsrView1
     */
    public AppSecUsrViewImpl getAppSecUsrView1() {
        return (AppSecUsrViewImpl)findViewObject("AppSecUsrView1");
    }
    private static int STRING = Types.VARCHAR;

    /*  protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {

            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);

                }
            }
            st.executeUpdate();

            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    } */
    private DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy"); //formatting date
    private java.util.Date date = new java.util.Date();
    private String currentDate = dateFormat.format(date);

    /*  public oracle.jbo.domain.Date getCurrentDate(String dateVal) {
        oracle.jbo.domain.Date jboDate = null;
        try {

            java.util.Date utilDate = dateFormat.parse(dateVal);
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            jboDate = new oracle.jbo.domain.Date(sqlDate);


        } catch (ParseException a) {
            System.out.println("ParseException");

        }
        return jboDate;
    } */
    /*   public void loginActivity(Integer UserId){

        oracle.jbo.domain.Date currDate = getCurrentDate(currentDate);
        //System.out.println("UserId-----------"+UserId+"----------currDate-----------"+currDate);
        callStoredFunction(STRING, "APP.PKG_APP_ACTIVITY.FN_INS_LOGIN_ACTIVITY (?,?)",
                                                           new Object[] {UserId,currDate });
       // System.out.println("inside fun am date is------------>>"+currDate);
    } */


    /**
     * Container's getter for DualTableForLOV1.
     * @return DualTableForLOV1
     */
    public ViewObjectImpl getDualTableForLOV1() {
        return (ViewObjectImpl)findViewObject("DualTableForLOV1");
    }

    /**
     * Container's getter for DateFormatLOV.
     * @return DateFormatLOV
     */
    public ViewObjectImpl getDateFormatLOV() {
        return (ViewObjectImpl)findViewObject("DateFormatLOV");
    }

    /**
     * Container's getter for AppLangLOV.
     * @return AppLangLOV
     */
    public ViewObjectImpl getAppLangLOV() {
        return (ViewObjectImpl)findViewObject("AppLangLOV");
    }

    /**
     * Container's getter for AppSecUsrMnuVO.
     * @return AppSecUsrMnuVO
     */
    public AppSecUsrMnuVOImpl getAppSecUsrMnuVO() {
        return (AppSecUsrMnuVOImpl)findViewObject("AppSecUsrMnuVO");
    }

    /**
     * Container's getter for UsrAppliStructVO.
     * @return UsrAppliStructVO
     */
    public ViewObjectImpl getUsrAppliStructVO() {
        return (ViewObjectImpl)findViewObject("UsrAppliStructVO");
    }

    /**
     * Container's getter for OrganisationLOV.
     * @return OrganisationLOV
     */
    public ViewObjectImpl getOrganisationLOV() {
        return (ViewObjectImpl)findViewObject("OrganisationLOV");
    }

}
