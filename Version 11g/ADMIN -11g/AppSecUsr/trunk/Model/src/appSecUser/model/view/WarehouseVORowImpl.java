package appSecUser.model.view;

import oracle.jbo.domain.TimestampLTZ;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 08 10:25:42 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class WarehouseVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        WhNm {
            public Object get(WarehouseVORowImpl obj) {
                return obj.getWhNm();
            }

            public void put(WarehouseVORowImpl obj, Object value) {
                obj.setWhNm((String)value);
            }
        }
        ,
        WhId {
            public Object get(WarehouseVORowImpl obj) {
                return obj.getWhId();
            }

            public void put(WarehouseVORowImpl obj, Object value) {
                obj.setWhId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(WarehouseVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(WarehouseVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        checkBox {
            public Object get(WarehouseVORowImpl obj) {
                return obj.getcheckBox();
            }

            public void put(WarehouseVORowImpl obj, Object value) {
                obj.setcheckBox((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(WarehouseVORowImpl object);

        public abstract void put(WarehouseVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  // private String chVal="N";


    public static final int WHNM = AttributesEnum.WhNm.index();
    public static final int WHID = AttributesEnum.WhId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CHECKBOX = AttributesEnum.checkBox.index();

    /**
     * This is the default constructor (do not remove).
     */
    public WarehouseVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute WhNm.
     * @return the WhNm
     */
    public String getWhNm() {
        return (String) getAttributeInternal(WHNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhNm.
     * @param value value to set the  WhNm
     */
    public void setWhNm(String value) {
        setAttributeInternal(WHNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute WhId.
     * @return the WhId
     */
    public String getWhId() {
        return (String) getAttributeInternal(WHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute WhId.
     * @param value value to set the  WhId
     */
    public void setWhId(String value) {
        setAttributeInternal(WHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute checkBox.
     * @return the checkBox
     */
    public String getcheckBox() {
        return (String) getAttributeInternal(CHECKBOX);
       
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute checkBox.
     * @param value value to set the  checkBox
     */
    public void setcheckBox(String value) {
        setAttributeInternal(CHECKBOX, value);
        

    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
