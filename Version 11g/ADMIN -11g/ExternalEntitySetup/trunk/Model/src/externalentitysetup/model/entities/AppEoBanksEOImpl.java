package externalentitysetup.model.entities;

import externalentitysetup.model.module.ExternalEntityAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 21 16:28:55 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppEoBanksEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        EoId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getEoId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        BankAcNo {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getBankAcNo();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setBankAcNo((String)value);
            }
        }
        ,
        BankNm {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getBankNm();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setBankNm((String)value);
            }
        }
        ,
        AddsId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getAddsId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setAddsId((String)value);
            }
        }
        ,
        Actv {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getActv();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getInactvResn();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getInactvDt();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EoOrgId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getEoOrgId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setEoOrgId((String)value);
            }
        }
        ,
        EoHoOrgId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getEoHoOrgId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setEoHoOrgId((String)value);
            }
        }
        ,
        EoCldId {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getEoCldId();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setEoCldId((String)value);
            }
        }
        ,
        IfscCode {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getIfscCode();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setIfscCode((String)value);
            }
        }
        ,
        SwiftCode {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getSwiftCode();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setSwiftCode((String)value);
            }
        }
        ,
        AppEo {
            public Object get(AppEoBanksEOImpl obj) {
                return obj.getAppEo();
            }

            public void put(AppEoBanksEOImpl obj, Object value) {
                obj.setAppEo((AppEoEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppEoBanksEOImpl object);

        public abstract void put(AppEoBanksEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int BANKACNO = AttributesEnum.BankAcNo.index();
    public static final int BANKNM = AttributesEnum.BankNm.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EOORGID = AttributesEnum.EoOrgId.index();
    public static final int EOHOORGID = AttributesEnum.EoHoOrgId.index();
    public static final int EOCLDID = AttributesEnum.EoCldId.index();
    public static final int IFSCCODE = AttributesEnum.IfscCode.index();
    public static final int SWIFTCODE = AttributesEnum.SwiftCode.index();
    public static final int APPEO = AttributesEnum.AppEo.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppEoBanksEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("externalentitysetup.model.entities.AppEoBanksEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer)getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for BankAcNo, using the alias name BankAcNo.
     * @return the value of BankAcNo
     */
    public String getBankAcNo() {
        return (String)getAttributeInternal(BANKACNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankAcNo.
     * @param value value to set the BankAcNo
     */
    public void setBankAcNo(String value) {
        setAttributeInternal(BANKACNO, value);
    }

    /**
     * Gets the attribute value for BankNm, using the alias name BankNm.
     * @return the value of BankNm
     */
    public String getBankNm() {
        return (String)getAttributeInternal(BANKNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for BankNm.
     * @param value value to set the BankNm
     */
    public void setBankNm(String value) {
        setAttributeInternal(BANKNM, value);
    }

    /**
     * Gets the attribute value for AddsId, using the alias name AddsId.
     * @return the value of AddsId
     */
    public String getAddsId() {
        return (String)getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AddsId.
     * @param value value to set the AddsId
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String)getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for InactvResn, using the alias name InactvResn.
     * @return the value of InactvResn
     */
    public String getInactvResn() {
        return (String)getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvResn.
     * @param value value to set the InactvResn
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Date getInactvDt() {
        return (Date)getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EoOrgId, using the alias name EoOrgId.
     * @return the value of EoOrgId
     */
    public String getEoOrgId() {
        return (String)getAttributeInternal(EOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoOrgId.
     * @param value value to set the EoOrgId
     */
    public void setEoOrgId(String value) {
        setAttributeInternal(EOORGID, value);
    }

    /**
     * Gets the attribute value for EoHoOrgId, using the alias name EoHoOrgId.
     * @return the value of EoHoOrgId
     */
    public String getEoHoOrgId() {
        return (String)getAttributeInternal(EOHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoHoOrgId.
     * @param value value to set the EoHoOrgId
     */
    public void setEoHoOrgId(String value) {
        setAttributeInternal(EOHOORGID, value);
    }

    /**
     * Gets the attribute value for EoCldId, using the alias name EoCldId.
     * @return the value of EoCldId
     */
    public String getEoCldId() {
        return (String)getAttributeInternal(EOCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoCldId.
     * @param value value to set the EoCldId
     */
    public void setEoCldId(String value) {
        setAttributeInternal(EOCLDID, value);
    }

    /**
     * Gets the attribute value for IfscCode, using the alias name IfscCode.
     * @return the value of IfscCode
     */
    public String getIfscCode() {
        return (String)getAttributeInternal(IFSCCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for IfscCode.
     * @param value value to set the IfscCode
     */
    public void setIfscCode(String value) {
        setAttributeInternal(IFSCCODE, value);
    }

    /**
     * Gets the attribute value for SwiftCode, using the alias name SwiftCode.
     * @return the value of SwiftCode
     */
    public String getSwiftCode() {
        return (String)getAttributeInternal(SWIFTCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SwiftCode.
     * @param value value to set the SwiftCode
     */
    public void setSwiftCode(String value) {
        setAttributeInternal(SWIFTCODE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppEoEOImpl.
     */
    public AppEoEOImpl getAppEo() {
        return (AppEoEOImpl)getAttributeInternal(APPEO);
    }

    /**
     * Sets <code>value</code> as the associated entity AppEoEOImpl.
     */
    public void setAppEo(AppEoEOImpl value) {
        setAttributeInternal(APPEO, value);
    }


    /**
     * @param slocId key constituent
     * @param eoId key constituent
     * @param bankAcNo key constituent
     * @param eoHoOrgId key constituent
     * @param eoCldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer slocId, Integer eoId, String bankAcNo, String eoHoOrgId,
                                       String eoCldId) {
        return new Key(new Object[]{slocId, eoId, bankAcNo, eoHoOrgId, eoCldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        ExternalEntityAMImpl am = (ExternalEntityAMImpl)resolvElDC("ExternalEntityAMDataControl");
        Integer createId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
   
        setUsrIdCreate(createId);
        
        String org_id=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        setEoOrgId(org_id);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        /* if(operation==DML_INSERT){
            Integer createId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
            setUsrIdCreate(createId);
        } */
        if(operation == DML_UPDATE){
        Date dt = (Date)Date.getCurrentDate();
        setUsrIdModDt(dt);
        Integer usr_id =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString());
        setUsrIdMod(usr_id);
        }
        super.doDML(operation, e);
    }
    
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }


    public String resolvEl(String data){
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message=valueExp.getValue(elContext).toString();
        return Message;
      }
    
}
