package appDocSetup.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.DMLException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 10 11:20:27 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppDocTypeEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocCldId {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocCldId();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocCldId((String)value);
            }
        }
        ,
        DocSlocId {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocSlocId();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocSlocId((Integer)value);
            }
        }
        ,
        DocId {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocId();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        DocTypId {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocTypId();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocTypId((Integer)value);
            }
        }
        ,
        DocNumPrefixOrg {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocNumPrefixOrg();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocNumPrefixOrg((String)value);
            }
        }
        ,
        DocNumPrefixOth {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocNumPrefixOth();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocNumPrefixOth((String)value);
            }
        }
        ,
        DocNumLenMax {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocNumLenMax();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocNumLenMax((Integer)value);
            }
        }
        ,
        DocNumModByOrg {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocNumModByOrg();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocNumModByOrg((String)value);
            }
        }
        ,
        DocNumModByOrgFy {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocNumModByOrgFy();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocNumModByOrgFy((String)value);
            }
        }
        ,
        DocWrkflw {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocWrkflw();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocWrkflw((String)value);
            }
        }
        ,
        DocTypIdActv {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getDocTypIdActv();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setDocTypIdActv((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppDocTypeReset {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getAppDocTypeReset();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppDoc {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getAppDoc();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setAppDoc((AppDocEOImpl)value);
            }
        }
        ,
        AppDocTypeReset1 {
            public Object get(AppDocTypeEOImpl obj) {
                return obj.getAppDocTypeReset1();
            }

            public void put(AppDocTypeEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppDocTypeEOImpl object);

        public abstract void put(AppDocTypeEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCCLDID = AttributesEnum.DocCldId.index();
    public static final int DOCSLOCID = AttributesEnum.DocSlocId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCTYPID = AttributesEnum.DocTypId.index();
    public static final int DOCNUMPREFIXORG = AttributesEnum.DocNumPrefixOrg.index();
    public static final int DOCNUMPREFIXOTH = AttributesEnum.DocNumPrefixOth.index();
    public static final int DOCNUMLENMAX = AttributesEnum.DocNumLenMax.index();
    public static final int DOCNUMMODBYORG = AttributesEnum.DocNumModByOrg.index();
    public static final int DOCNUMMODBYORGFY = AttributesEnum.DocNumModByOrgFy.index();
    public static final int DOCWRKFLW = AttributesEnum.DocWrkflw.index();
    public static final int DOCTYPIDACTV = AttributesEnum.DocTypIdActv.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APPDOCTYPERESET = AttributesEnum.AppDocTypeReset.index();
    public static final int APPDOC = AttributesEnum.AppDoc.index();
    public static final int APPDOCTYPERESET1 = AttributesEnum.AppDocTypeReset1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppDocTypeEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appDocSetup.model.entity.AppDocTypeEO");
    }

    /**
     * Gets the attribute value for DocCldId, using the alias name DocCldId.
     * @return the value of DocCldId
     */
    public String getDocCldId() {
        return (String)getAttributeInternal(DOCCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocCldId.
     * @param value value to set the DocCldId
     */
    public void setDocCldId(String value) {
        setAttributeInternal(DOCCLDID, value);
    }

    /**
     * Gets the attribute value for DocSlocId, using the alias name DocSlocId.
     * @return the value of DocSlocId
     */
    public Integer getDocSlocId() {
        return (Integer)getAttributeInternal(DOCSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocSlocId.
     * @param value value to set the DocSlocId
     */
    public void setDocSlocId(Integer value) {
        setAttributeInternal(DOCSLOCID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public Integer getDocId() {
        return (Integer)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocTypId, using the alias name DocTypId.
     * @return the value of DocTypId
     */
    public Integer getDocTypId() {
        return (Integer)getAttributeInternal(DOCTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypId.
     * @param value value to set the DocTypId
     */
    public void setDocTypId(Integer value) {
        setAttributeInternal(DOCTYPID, value);
    }

    /**
     * Gets the attribute value for DocNumPrefixOrg, using the alias name DocNumPrefixOrg.
     * @return the value of DocNumPrefixOrg
     */
    public String getDocNumPrefixOrg() {
        return (String)getAttributeInternal(DOCNUMPREFIXORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumPrefixOrg.
     * @param value value to set the DocNumPrefixOrg
     */
    public void setDocNumPrefixOrg(String value) {
        setAttributeInternal(DOCNUMPREFIXORG, value);
    }

    /**
     * Gets the attribute value for DocNumPrefixOth, using the alias name DocNumPrefixOth.
     * @return the value of DocNumPrefixOth
     */
    public String getDocNumPrefixOth() {
        return (String)getAttributeInternal(DOCNUMPREFIXOTH);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumPrefixOth.
     * @param value value to set the DocNumPrefixOth
     */
    public void setDocNumPrefixOth(String value) {
        setAttributeInternal(DOCNUMPREFIXOTH, value);
    }

    /**
     * Gets the attribute value for DocNumLenMax, using the alias name DocNumLenMax.
     * @return the value of DocNumLenMax
     */
    public Integer getDocNumLenMax() {
        return (Integer)getAttributeInternal(DOCNUMLENMAX);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumLenMax.
     * @param value value to set the DocNumLenMax
     */
    public void setDocNumLenMax(Integer value) {
        setAttributeInternal(DOCNUMLENMAX, value);
    }

    /**
     * Gets the attribute value for DocNumModByOrg, using the alias name DocNumModByOrg.
     * @return the value of DocNumModByOrg
     */
    public String getDocNumModByOrg() {
        return (String)getAttributeInternal(DOCNUMMODBYORG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumModByOrg.
     * @param value value to set the DocNumModByOrg
     */
    public void setDocNumModByOrg(String value) {
        setAttributeInternal(DOCNUMMODBYORG, value);
    }

    /**
     * Gets the attribute value for DocNumModByOrgFy, using the alias name DocNumModByOrgFy.
     * @return the value of DocNumModByOrgFy
     */
    public String getDocNumModByOrgFy() {
        return (String)getAttributeInternal(DOCNUMMODBYORGFY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumModByOrgFy.
     * @param value value to set the DocNumModByOrgFy
     */
    public void setDocNumModByOrgFy(String value) {
        setAttributeInternal(DOCNUMMODBYORGFY, value);
    }

    /**
     * Gets the attribute value for DocWrkflw, using the alias name DocWrkflw.
     * @return the value of DocWrkflw
     */
    public String getDocWrkflw() {
        return (String)getAttributeInternal(DOCWRKFLW);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocWrkflw.
     * @param value value to set the DocWrkflw
     */
    public void setDocWrkflw(String value) {
        setAttributeInternal(DOCWRKFLW, value);
    }

    /**
     * Gets the attribute value for DocTypIdActv, using the alias name DocTypIdActv.
     * @return the value of DocTypIdActv
     */
    public String getDocTypIdActv() {
        return (String)getAttributeInternal(DOCTYPIDACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypIdActv.
     * @param value value to set the DocTypIdActv
     */
    public void setDocTypIdActv(String value) {
        setAttributeInternal(DOCTYPIDACTV, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        System.out.println("value "+value);
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }


    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppDocTypeReset() {
        return (RowIterator)getAttributeInternal(APPDOCTYPERESET);
    }

    /**
     * @return the associated entity AppDocEOImpl.
     */
    public AppDocEOImpl getAppDoc() {
        return (AppDocEOImpl)getAttributeInternal(APPDOC);
    }

    /**
     * Sets <code>value</code> as the associated entity AppDocEOImpl.
     */
    public void setAppDoc(AppDocEOImpl value) {
        setAttributeInternal(APPDOC, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppDocTypeReset1() {
        return (RowIterator)getAttributeInternal(APPDOCTYPERESET1);
    }


    /**
     * @param docCldId key constituent
     * @param docSlocId key constituent
     * @param docId key constituent
     * @param docTypId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String docCldId, Integer docSlocId, Integer docId, Integer docTypId) {
        return new Key(new Object[]{docCldId, docSlocId, docId, docTypId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    
     public String resolvEl(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
   
    protected void create(AttributeList attributeList) {
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));        
        Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USER}"));
        // String org_id=resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
           String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        System.out.println("SlocId = " + SlocId + "    cld_id = " + cld_id);
        setDocCldId(cld_id);
        setDocSlocId(SlocId);
        setUsrIdCreate(UserId);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        
        if(operation == DML_INSERT){
            
        }
        
        super.doDML(operation, e);
    }
}
