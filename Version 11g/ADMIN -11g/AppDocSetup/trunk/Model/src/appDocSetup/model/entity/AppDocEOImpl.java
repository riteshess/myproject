package appDocSetup.model.entity;


import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 06 17:29:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppDocEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocId {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocId();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        DocBp {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocBp();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocBp((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppDocEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppDocEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppDocEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppDocEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        DocSlocId {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocSlocId();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocSlocId((Integer)value);
            }
        }
        ,
        DocAlwActivityMsg {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocAlwActivityMsg();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocAlwActivityMsg((String)value);
            }
        }
        ,
        DocAlwActivityMsgRep {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocAlwActivityMsgRep();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocAlwActivityMsgRep((String)value);
            }
        }
        ,
        DocWf {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocWf();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocWf((String)value);
            }
        }
        ,
        DocCldId {
            public Object get(AppDocEOImpl obj) {
                return obj.getDocCldId();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setDocCldId((String)value);
            }
        }
        ,
        AppDocTyp {
            public Object get(AppDocEOImpl obj) {
                return obj.getAppDocTyp();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppDocTypReset {
            public Object get(AppDocEOImpl obj) {
                return obj.getAppDocTypReset();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppDocType {
            public Object get(AppDocEOImpl obj) {
                return obj.getAppDocType();
            }

            public void put(AppDocEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppDocEOImpl object);

        public abstract void put(AppDocEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCBP = AttributesEnum.DocBp.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int DOCSLOCID = AttributesEnum.DocSlocId.index();
    public static final int DOCALWACTIVITYMSG = AttributesEnum.DocAlwActivityMsg.index();
    public static final int DOCALWACTIVITYMSGREP = AttributesEnum.DocAlwActivityMsgRep.index();
    public static final int DOCWF = AttributesEnum.DocWf.index();
    public static final int DOCCLDID = AttributesEnum.DocCldId.index();
    public static final int APPDOCTYP = AttributesEnum.AppDocTyp.index();
    public static final int APPDOCTYPRESET = AttributesEnum.AppDocTypReset.index();
    public static final int APPDOCTYPE = AttributesEnum.AppDocType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppDocEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appDocSetup.model.entity.AppDocEO");
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public Integer getDocId() {
        return (Integer)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocBp, using the alias name DocBp.
     * @return the value of DocBp
     */
    public String getDocBp() {
        
        return (String)getAttributeInternal(DOCBP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocBp.
     * @param value value to set the DocBp
     */
    public void setDocBp(String value) {
        setAttributeInternal(DOCBP, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for DocSlocId, using the alias name DocSlocId.
     * @return the value of DocSlocId
     */
    public Integer getDocSlocId() {
        return (Integer)getAttributeInternal(DOCSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocSlocId.
     * @param value value to set the DocSlocId
     */
    public void setDocSlocId(Integer value) {
        setAttributeInternal(DOCSLOCID, value);
    }

    /**
     * Gets the attribute value for DocAlwActivityMsg, using the alias name DocAlwActivityMsg.
     * @return the value of DocAlwActivityMsg
     */
    public String getDocAlwActivityMsg() {
        return (String)getAttributeInternal(DOCALWACTIVITYMSG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocAlwActivityMsg.
     * @param value value to set the DocAlwActivityMsg
     */
    public void setDocAlwActivityMsg(String value) {
        setAttributeInternal(DOCALWACTIVITYMSG, value);
    }

    /**
     * Gets the attribute value for DocAlwActivityMsgRep, using the alias name DocAlwActivityMsgRep.
     * @return the value of DocAlwActivityMsgRep
     */
    public String getDocAlwActivityMsgRep() {
        return (String)getAttributeInternal(DOCALWACTIVITYMSGREP);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocAlwActivityMsgRep.
     * @param value value to set the DocAlwActivityMsgRep
     */
    public void setDocAlwActivityMsgRep(String value) {
        setAttributeInternal(DOCALWACTIVITYMSGREP, value);
    }

    /**
     * Gets the attribute value for DocWf, using the alias name DocWf.
     * @return the value of DocWf
     */
    public String getDocWf() {
        System.out.println("getDocWf"   +  getAttributeInternal(DOCWF));
        return (String)getAttributeInternal(DOCWF);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocWf.
     * @param value value to set the DocWf
     */
    public void setDocWf(String value) {
        setAttributeInternal(DOCWF, value);
    }

    /**
     * Gets the attribute value for DocCldId, using the alias name DocCldId.
     * @return the value of DocCldId
     */
    public String getDocCldId() {
        return (String)getAttributeInternal(DOCCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocCldId.
     * @param value value to set the DocCldId
     */
    public void setDocCldId(String value) {
        setAttributeInternal(DOCCLDID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppDocTyp() {
        return (RowIterator)getAttributeInternal(APPDOCTYP);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppDocTypReset() {
        return (RowIterator)getAttributeInternal(APPDOCTYPRESET);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppDocType() {
        return (RowIterator)getAttributeInternal(APPDOCTYPE);
    }


    /**
     * @param docId key constituent
     * @param docSlocId key constituent
     * @param docCldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer docId, Integer docSlocId, String docCldId) {
        return new Key(new Object[]{docId, docSlocId, docCldId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        Integer SlocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        
        //Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        // String org_id=resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        System.out.println("SlocId = " + SlocId + "    cld_id = " + cld_id);
        setDocCldId(cld_id);
        setDocSlocId(SlocId);
        
        super.create(attributeList);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    
    
    protected void doDML(int operation, TransactionEvent e) {
          super.doDML(operation, e); 
    }
}
