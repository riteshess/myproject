package organizationApp.model.view;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import organizationApp.model.entity.OrgDocTypeEOImpl;
import organizationApp.model.module.OrgAppAMImpl;
import organizationApp.model.view.common.OrgDocTypeVORow;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 12 12:39:24 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgDocTypeVORowImpl extends ViewRowImpl implements OrgDocTypeVORow {


    public static final int ENTITY_ORGDOCTYPEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgDocCldId {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocCldId();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocCldId((String)value);
            }
        }
        ,
        OrgDocId {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocId();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocId((Integer)value);
            }
        }
        ,
        OrgDocNumLenMax {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocNumLenMax();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocNumLenMax((Integer)value);
            }
        }
        ,
        OrgDocNumPrefixOrg {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocNumPrefixOrg();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocNumPrefixOrg((String)value);
            }
        }
        ,
        OrgDocNumPrefixOth {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocNumPrefixOth();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocNumPrefixOth((String)value);
            }
        }
        ,
        OrgDocSlocId {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocSlocId();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocSlocId((Integer)value);
            }
        }
        ,
        OrgDocTypId {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocTypId();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocTypId((Integer)value);
            }
        }
        ,
        OrgDocTypIdActv {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocTypIdActv();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocTypIdActv((String)value);
            }
        }
        ,
        OrgDocWrkflw {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocWrkflw();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgDocWrkflw((String)value);
            }
        }
        ,
        OrgId {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        TransDocTypNm {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getTransDocTypNm();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setTransDocTypNm((String)value);
            }
        }
        ,
        TransOrgPrefix {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getTransOrgPrefix();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setTransOrgPrefix((String)value);
            }
        }
        ,
        TransChkReset {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getTransChkReset();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setTransChkReset((String)value);
            }
        }
        ,
        TransDocName {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getTransDocName();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setTransDocName((String)value);
            }
        }
        ,
        OrgDocTypReset {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getOrgDocTypReset();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDocTypeIdVO1 {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getLovDocTypeIdVO1();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovDocTypNmVO1 {
            public Object get(OrgDocTypeVORowImpl obj) {
                return obj.getLovDocTypNmVO1();
            }

            public void put(OrgDocTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrgDocTypeVORowImpl object);

        public abstract void put(OrgDocTypeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGDOCCLDID = AttributesEnum.OrgDocCldId.index();
    public static final int ORGDOCID = AttributesEnum.OrgDocId.index();
    public static final int ORGDOCNUMLENMAX = AttributesEnum.OrgDocNumLenMax.index();
    public static final int ORGDOCNUMPREFIXORG = AttributesEnum.OrgDocNumPrefixOrg.index();
    public static final int ORGDOCNUMPREFIXOTH = AttributesEnum.OrgDocNumPrefixOth.index();
    public static final int ORGDOCSLOCID = AttributesEnum.OrgDocSlocId.index();
    public static final int ORGDOCTYPID = AttributesEnum.OrgDocTypId.index();
    public static final int ORGDOCTYPIDACTV = AttributesEnum.OrgDocTypIdActv.index();
    public static final int ORGDOCWRKFLW = AttributesEnum.OrgDocWrkflw.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSDOCTYPNM = AttributesEnum.TransDocTypNm.index();
    public static final int TRANSORGPREFIX = AttributesEnum.TransOrgPrefix.index();
    public static final int TRANSCHKRESET = AttributesEnum.TransChkReset.index();
    public static final int TRANSDOCNAME = AttributesEnum.TransDocName.index();
    public static final int ORGDOCTYPRESET = AttributesEnum.OrgDocTypReset.index();
    public static final int LOVDOCTYPEIDVO1 = AttributesEnum.LovDocTypeIdVO1.index();
    public static final int LOVDOCTYPNMVO1 = AttributesEnum.LovDocTypNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgDocTypeVORowImpl() {
    }

    /**
     * Gets OrgDocTypeEO entity object.
     * @return the OrgDocTypeEO
     */
    public OrgDocTypeEOImpl getOrgDocTypeEO() {
        return (OrgDocTypeEOImpl)getEntity(ENTITY_ORGDOCTYPEEO);
    }

    /**
     * Gets the attribute value for ORG_DOC_CLD_ID using the alias name OrgDocCldId.
     * @return the ORG_DOC_CLD_ID
     */
    public String getOrgDocCldId() {
        return (String) getAttributeInternal(ORGDOCCLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_CLD_ID using the alias name OrgDocCldId.
     * @param value value to set the ORG_DOC_CLD_ID
     */
    public void setOrgDocCldId(String value) {
        setAttributeInternal(ORGDOCCLDID, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_ID using the alias name OrgDocId.
     * @return the ORG_DOC_ID
     */
    public Integer getOrgDocId() {
        return (Integer) getAttributeInternal(ORGDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_ID using the alias name OrgDocId.
     * @param value value to set the ORG_DOC_ID
     */
    public void setOrgDocId(Integer value) {
        setAttributeInternal(ORGDOCID, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_NUM_LEN_MAX using the alias name OrgDocNumLenMax.
     * @return the ORG_DOC_NUM_LEN_MAX
     */
    public Integer getOrgDocNumLenMax() {
        return (Integer) getAttributeInternal(ORGDOCNUMLENMAX);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_NUM_LEN_MAX using the alias name OrgDocNumLenMax.
     * @param value value to set the ORG_DOC_NUM_LEN_MAX
     */
    public void setOrgDocNumLenMax(Integer value) {
        setAttributeInternal(ORGDOCNUMLENMAX, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_NUM_PREFIX_ORG using the alias name OrgDocNumPrefixOrg.
     * @return the ORG_DOC_NUM_PREFIX_ORG
     */
    public String getOrgDocNumPrefixOrg() {
        return (String) getAttributeInternal(ORGDOCNUMPREFIXORG);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_NUM_PREFIX_ORG using the alias name OrgDocNumPrefixOrg.
     * @param value value to set the ORG_DOC_NUM_PREFIX_ORG
     */
    public void setOrgDocNumPrefixOrg(String value) {
        setAttributeInternal(ORGDOCNUMPREFIXORG, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_NUM_PREFIX_OTH using the alias name OrgDocNumPrefixOth.
     * @return the ORG_DOC_NUM_PREFIX_OTH
     */
    public String getOrgDocNumPrefixOth() {
        return (String) getAttributeInternal(ORGDOCNUMPREFIXOTH);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_NUM_PREFIX_OTH using the alias name OrgDocNumPrefixOth.
     * @param value value to set the ORG_DOC_NUM_PREFIX_OTH
     */
    public void setOrgDocNumPrefixOth(String value) {
        setAttributeInternal(ORGDOCNUMPREFIXOTH, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_SLOC_ID using the alias name OrgDocSlocId.
     * @return the ORG_DOC_SLOC_ID
     */
    public Integer getOrgDocSlocId() {
        return (Integer) getAttributeInternal(ORGDOCSLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_SLOC_ID using the alias name OrgDocSlocId.
     * @param value value to set the ORG_DOC_SLOC_ID
     */
    public void setOrgDocSlocId(Integer value) {
        setAttributeInternal(ORGDOCSLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_TYP_ID using the alias name OrgDocTypId.
     * @return the ORG_DOC_TYP_ID
     */
    public Integer getOrgDocTypId() {
        return (Integer) getAttributeInternal(ORGDOCTYPID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_TYP_ID using the alias name OrgDocTypId.
     * @param value value to set the ORG_DOC_TYP_ID
     */
    public void setOrgDocTypId(Integer value) {
        setAttributeInternal(ORGDOCTYPID, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_TYP_ID_ACTV using the alias name OrgDocTypIdActv.
     * @return the ORG_DOC_TYP_ID_ACTV
     */
    public String getOrgDocTypIdActv() {
        return (String) getAttributeInternal(ORGDOCTYPIDACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_TYP_ID_ACTV using the alias name OrgDocTypIdActv.
     * @param value value to set the ORG_DOC_TYP_ID_ACTV
     */
    public void setOrgDocTypIdActv(String value) {
        setAttributeInternal(ORGDOCTYPIDACTV, value);
    }

    /**
     * Gets the attribute value for ORG_DOC_WRKFLW using the alias name OrgDocWrkflw.
     * @return the ORG_DOC_WRKFLW
     */
    public String getOrgDocWrkflw() {
        return (String) getAttributeInternal(ORGDOCWRKFLW);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_DOC_WRKFLW using the alias name OrgDocWrkflw.
     * @param value value to set the ORG_DOC_WRKFLW
     */
    public void setOrgDocWrkflw(String value) {
        setAttributeInternal(ORGDOCWRKFLW, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocTypNm.
     * @return the TransDocTypNm
     */
    public String getTransDocTypNm() {
        return (String) getAttributeInternal(TRANSDOCTYPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocTypNm.
     * @param value value to set the  TransDocTypNm
     */
    public void setTransDocTypNm(String value) {
        setAttributeInternal(TRANSDOCTYPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgPrefix.
     * @return the TransOrgPrefix
     */
    public String getTransOrgPrefix() {
        return getOrgDocNumPrefixOrg();
        //return (String) getAttributeInternal(TRANSORGPREFIX);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgPrefix.
     * @param value value to set the  TransOrgPrefix
     */
    public void setTransOrgPrefix(String value) {
        setAttributeInternal(TRANSORGPREFIX, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChkReset.
     * @return the TransChkReset
     */
     private static int VARCHAR = Types.VARCHAR;
    public String getTransChkReset() {
       
        String glbl_cld_id=getOrgDocCldId();
       Integer   glbl_sloc_id=getOrgDocSlocId();
       String glbl_org_id=getOrgId();
        Integer doc_id = getOrgDocId();
        Integer doc_typ_id = getOrgDocTypId();
         return (String)callStoredFunction(VARCHAR, "APP. FN_CHK_DOC_RESET_EXIST (?,?,?,?,?)",
                                          new Object[] { glbl_cld_id, glbl_sloc_id, glbl_org_id, doc_id,
                                                         doc_typ_id });
       // return (String) getAttributeInternal(TRANSCHKRESET);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChkReset.
     * @param value value to set the  TransChkReset
     */
    public void setTransChkReset(String value) {
        setAttributeInternal(TRANSCHKRESET, value);
    }
    OrgAppAMImpl am = (OrgAppAMImpl)resolvElDC("OrgAppAMDataControl");
    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
    /**
     * Gets the attribute value for the calculated attribute TransDocName.
     * @return the TransDocName
     */
    public String getTransDocName() {
        String docname="";
        ViewObjectImpl vo=am.getLovDocId1();
        vo.setNamedWhereClauseParam("docidbind", getOrgDocId());
        vo.executeQuery();
        Row rw[]=vo.getAllRowsInRange();
         if(rw.length>0) {
             docname= rw[0].getAttribute("GlblDocNm").toString();
            }
            if(docname!=null ||docname!="") {
                return docname;
            }
            else
        return (String) getAttributeInternal(TRANSDOCNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocName.
     * @param value value to set the  TransDocName
     */
    public void setTransDocName(String value) {
        setAttributeInternal(TRANSDOCNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link OrgDocTypReset.
     */
    public RowIterator getOrgDocTypReset() {
        return (RowIterator)getAttributeInternal(ORGDOCTYPRESET);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDocTypeIdVO1.
     */
    public RowSet getLovDocTypeIdVO1() {
        return (RowSet)getAttributeInternal(LOVDOCTYPEIDVO1);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            //    int end = e.getMessage().indexOf("\n");
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {

                }
            }
        }
    }
    /**
     * Gets the view accessor <code>RowSet</code> LovDocTypNmVO1.
     */
    public RowSet getLovDocTypNmVO1() {
          RowSet doctypnmvo=(RowSet)getAttributeInternal(LOVDOCTYPNMVO1);
        doctypnmvo.executeQuery();
        return doctypnmvo;
          }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
