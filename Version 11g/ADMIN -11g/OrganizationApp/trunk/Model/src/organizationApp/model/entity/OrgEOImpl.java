package organizationApp.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 08 14:46:47 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgEOImpl extends EntityImpl {
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgId {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        OrgType {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgType();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgType((Integer)value);
            }
        }
        ,
        OrgDesc {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgDesc();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgDesc((String)value);
            }
        }
        ,
        OrgAlias {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgAlias();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgAlias((String)value);
            }
        }
        ,
        OrgIdParent {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgIdParent();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgIdParent((String)value);
            }
        }
        ,
        OrgCountryId {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgCountryId();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgCountryId((Integer)value);
            }
        }
        ,
        OrgCreateRefSlocId {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgCreateRefSlocId();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgCreateRefSlocId((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(OrgEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(OrgEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(OrgEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(OrgEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        OrgCurrIdBs {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgCurrIdBs();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgCurrIdBs((Integer)value);
            }
        }
        ,
        OrgTrfAcc {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgTrfAcc();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgTrfAcc((Integer)value);
            }
        }
        ,
        OrgCldId {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgCldId();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgCldId((String)value);
            }
        }
        ,
        OrgFyStDt {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgFyStDt();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgFyStDt((Date)value);
            }
        }
        ,
        OrgDocResetFreq {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgDocResetFreq();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgDocResetFreq((Integer)value);
            }
        }
        ,
        OrgIdParentL0 {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgIdParentL0();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgIdParentL0((String)value);
            }
        }
        ,
        OrgActive {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgActive();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setOrgActive((String)value);
            }
        }
        ,
        OrgDoc {
            public Object get(OrgEOImpl obj) {
                return obj.getOrgDoc();
            }

            public void put(OrgEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrgEOImpl object);

        public abstract void put(OrgEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGTYPE = AttributesEnum.OrgType.index();
    public static final int ORGDESC = AttributesEnum.OrgDesc.index();
    public static final int ORGALIAS = AttributesEnum.OrgAlias.index();
    public static final int ORGIDPARENT = AttributesEnum.OrgIdParent.index();
    public static final int ORGCOUNTRYID = AttributesEnum.OrgCountryId.index();
    public static final int ORGCREATEREFSLOCID = AttributesEnum.OrgCreateRefSlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ORGCURRIDBS = AttributesEnum.OrgCurrIdBs.index();
    public static final int ORGTRFACC = AttributesEnum.OrgTrfAcc.index();
    public static final int ORGCLDID = AttributesEnum.OrgCldId.index();
    public static final int ORGFYSTDT = AttributesEnum.OrgFyStDt.index();
    public static final int ORGDOCRESETFREQ = AttributesEnum.OrgDocResetFreq.index();
    public static final int ORGIDPARENTL0 = AttributesEnum.OrgIdParentL0.index();
    public static final int ORGACTIVE = AttributesEnum.OrgActive.index();
    public static final int ORGDOC = AttributesEnum.OrgDoc.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("organizationApp.model.entity.OrgEO");
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for OrgType, using the alias name OrgType.
     * @return the value of OrgType
     */
    public Integer getOrgType() {
        return (Integer)getAttributeInternal(ORGTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgType.
     * @param value value to set the OrgType
     */
    public void setOrgType(Integer value) {
        setAttributeInternal(ORGTYPE, value);
    }

    /**
     * Gets the attribute value for OrgDesc, using the alias name OrgDesc.
     * @return the value of OrgDesc
     */
    public String getOrgDesc() {
        return (String)getAttributeInternal(ORGDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgDesc.
     * @param value value to set the OrgDesc
     */
    public void setOrgDesc(String value) {
        setAttributeInternal(ORGDESC, value);
    }

    /**
     * Gets the attribute value for OrgAlias, using the alias name OrgAlias.
     * @return the value of OrgAlias
     */
    public String getOrgAlias() {
        return (String)getAttributeInternal(ORGALIAS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgAlias.
     * @param value value to set the OrgAlias
     */
    public void setOrgAlias(String value) {
        setAttributeInternal(ORGALIAS, value);
    }

    /**
     * Gets the attribute value for OrgIdParent, using the alias name OrgIdParent.
     * @return the value of OrgIdParent
     */
    public String getOrgIdParent() {
        return (String)getAttributeInternal(ORGIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdParent.
     * @param value value to set the OrgIdParent
     */
    public void setOrgIdParent(String value) {
        setAttributeInternal(ORGIDPARENT, value);
    }

    /**
     * Gets the attribute value for OrgCountryId, using the alias name OrgCountryId.
     * @return the value of OrgCountryId
     */
    public Integer getOrgCountryId() {
        return (Integer)getAttributeInternal(ORGCOUNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgCountryId.
     * @param value value to set the OrgCountryId
     */
    public void setOrgCountryId(Integer value) {
        setAttributeInternal(ORGCOUNTRYID, value);
    }

    /**
     * Gets the attribute value for OrgCreateRefSlocId, using the alias name OrgCreateRefSlocId.
     * @return the value of OrgCreateRefSlocId
     */
    public Integer getOrgCreateRefSlocId() {
        return (Integer)getAttributeInternal(ORGCREATEREFSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgCreateRefSlocId.
     * @param value value to set the OrgCreateRefSlocId
     */
    public void setOrgCreateRefSlocId(Integer value) {
        setAttributeInternal(ORGCREATEREFSLOCID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for OrgCurrIdBs, using the alias name OrgCurrIdBs.
     * @return the value of OrgCurrIdBs
     */
    public Integer getOrgCurrIdBs() {
        return (Integer)getAttributeInternal(ORGCURRIDBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgCurrIdBs.
     * @param value value to set the OrgCurrIdBs
     */
    public void setOrgCurrIdBs(Integer value) {
        setAttributeInternal(ORGCURRIDBS, value);
    }


    /**
     * Gets the attribute value for OrgTrfAcc, using the alias name OrgTrfAcc.
     * @return the value of OrgTrfAcc
     */
    public Integer getOrgTrfAcc() {
        return (Integer)getAttributeInternal(ORGTRFACC);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgTrfAcc.
     * @param value value to set the OrgTrfAcc
     */
    public void setOrgTrfAcc(Integer value) {
        setAttributeInternal(ORGTRFACC, value);
    }

    /**
     * Gets the attribute value for OrgCldId, using the alias name OrgCldId.
     * @return the value of OrgCldId
     */
    public String getOrgCldId() {
        return (String)getAttributeInternal(ORGCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgCldId.
     * @param value value to set the OrgCldId
     */
    public void setOrgCldId(String value) {
        setAttributeInternal(ORGCLDID, value);
    }

    /**
     * Gets the attribute value for OrgFyStDt, using the alias name OrgFyStDt.
     * @return the value of OrgFyStDt
     */
    public Date getOrgFyStDt() {
        return (Date)getAttributeInternal(ORGFYSTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgFyStDt.
     * @param value value to set the OrgFyStDt
     */
    public void setOrgFyStDt(Date value) {
        setAttributeInternal(ORGFYSTDT, value);
    }

    /**
     * Gets the attribute value for OrgDocResetFreq, using the alias name OrgDocResetFreq.
     * @return the value of OrgDocResetFreq
     */
    public Integer getOrgDocResetFreq() {
        return (Integer)getAttributeInternal(ORGDOCRESETFREQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgDocResetFreq.
     * @param value value to set the OrgDocResetFreq
     */
    public void setOrgDocResetFreq(Integer value) {
        setAttributeInternal(ORGDOCRESETFREQ, value);
    }

    /**
     * Gets the attribute value for OrgIdParentL0, using the alias name OrgIdParentL0.
     * @return the value of OrgIdParentL0
     */
    public String getOrgIdParentL0() {
        return (String)getAttributeInternal(ORGIDPARENTL0);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgIdParentL0.
     * @param value value to set the OrgIdParentL0
     */
    public void setOrgIdParentL0(String value) {
        setAttributeInternal(ORGIDPARENTL0, value);
    }

    /**
     * Gets the attribute value for OrgActive, using the alias name OrgActive.
     * @return the value of OrgActive
     */
    public String getOrgActive() {
        return (String)getAttributeInternal(ORGACTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgActive.
     * @param value value to set the OrgActive
     */
    public void setOrgActive(String value) {
        setAttributeInternal(ORGACTIVE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getOrgDoc() {
        return (RowIterator)getAttributeInternal(ORGDOC);
    }


    /**
     * @param orgId key constituent
     * @param orgCldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String orgId, String orgCldId) {
        return new Key(new Object[]{orgId, orgCldId});
    }

    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        Integer  UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")); 
        this.setUsrIdCreate(UserId);
        System.out.println("::USER ID CREATE SET:::");
        /*Integer  SlocId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")); 
        String CldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        
        setUsrIdCreate(UserId);
        setOrgCldId(CldId);
        setOrgCreateRefSlocId(SlocId); */
        
    }
    protected void doDML(int operation, TransactionEvent e) {
       
       System.out.println("Into DO_DML");
        if(operation == DML_UPDATE)
               {       System.out.println("Into update DML");
                       Integer  UserId =Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}")); 
                       Date currDate = (Date)Date.getCurrentDate();
                       setUsrIdMod(UserId);
                       setUsrIdModDt((currDate));
                       setUsrIdMod(UserId);
                   } 
       /* if(operation == DML_INSERT)
               {                                                  
                       Integer  UserId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USER}")); 
                       Date currDate = (Date)Date.getCurrentDate();
                       //System.out.println("ORG_ID :"+org_id+"| CLD/erId);
                       //setUsrIdCreate(UserId);
                      // setUsrCreateDt((currDate));
                      // setOrgCldId(cld_id);
                       //setOrgId(org_id);
                       //setOrgRefSlocId(sloc);
                   } */
       super.doDML(operation, e);
    }

    public String resolvEl(String data){
       FacesContext fc = FacesContext.getCurrentInstance();
       Application app = fc.getApplication();
       ExpressionFactory elFactory = app.getExpressionFactory();
       ELContext elContext = fc.getELContext();
       ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
       String Message=valueExp.getValue(elContext).toString();
       return Message;
     }
}
