package organizationApp.model.view;

import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 23 12:54:19 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LOVAdressVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AddsId {
            public Object get(LOVAdressVORowImpl obj) {
                return obj.getAddsId();
            }

            public void put(LOVAdressVORowImpl obj, Object value) {
                obj.setAddsId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(LOVAdressVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(LOVAdressVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(LOVAdressVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(LOVAdressVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        Address {
            public Object get(LOVAdressVORowImpl obj) {
                return obj.getAddress();
            }

            public void put(LOVAdressVORowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(LOVAdressVORowImpl object);

        public abstract void put(LOVAdressVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ADDRESS = AttributesEnum.Address.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LOVAdressVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute AddsId.
     * @return the AddsId
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddsId.
     * @param value value to set the  AddsId
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Address.
     * @return the Address
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Address.
     * @param value value to set the  Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
