package organizationApp.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 12 11:59:42 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgDocTypeResetEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DocCldId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocCldId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocCldId((String)value);
            }
        }
        ,
        DocSlocId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocSlocId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocSlocId((Integer)value);
            }
        }
        ,
        DocOrgId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocOrgId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocOrgId((String)value);
            }
        }
        ,
        DocId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        DocTypId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocTypId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocTypId((Integer)value);
            }
        }
        ,
        DocTypResetId {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocTypResetId();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocTypResetId((Integer)value);
            }
        }
        ,
        DocTypResetDef {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocTypResetDef();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocTypResetDef((String)value);
            }
        }
        ,
        DocTypResetActv {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getDocTypResetActv();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setDocTypResetActv((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        OrgDocType {
            public Object get(OrgDocTypeResetEOImpl obj) {
                return obj.getOrgDocType();
            }

            public void put(OrgDocTypeResetEOImpl obj, Object value) {
                obj.setOrgDocType((OrgDocTypeEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrgDocTypeResetEOImpl object);

        public abstract void put(OrgDocTypeResetEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DOCCLDID = AttributesEnum.DocCldId.index();
    public static final int DOCSLOCID = AttributesEnum.DocSlocId.index();
    public static final int DOCORGID = AttributesEnum.DocOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCTYPID = AttributesEnum.DocTypId.index();
    public static final int DOCTYPRESETID = AttributesEnum.DocTypResetId.index();
    public static final int DOCTYPRESETDEF = AttributesEnum.DocTypResetDef.index();
    public static final int DOCTYPRESETACTV = AttributesEnum.DocTypResetActv.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ORGDOCTYPE = AttributesEnum.OrgDocType.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgDocTypeResetEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("organizationApp.model.entity.OrgDocTypeResetEO");
    }

    /**
     * Gets the attribute value for DocCldId, using the alias name DocCldId.
     * @return the value of DocCldId
     */
    public String getDocCldId() {
        return (String)getAttributeInternal(DOCCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocCldId.
     * @param value value to set the DocCldId
     */
    public void setDocCldId(String value) {
        setAttributeInternal(DOCCLDID, value);
    }

    /**
     * Gets the attribute value for DocSlocId, using the alias name DocSlocId.
     * @return the value of DocSlocId
     */
    public Integer getDocSlocId() {
        return (Integer)getAttributeInternal(DOCSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocSlocId.
     * @param value value to set the DocSlocId
     */
    public void setDocSlocId(Integer value) {
        setAttributeInternal(DOCSLOCID, value);
    }

    /**
     * Gets the attribute value for DocOrgId, using the alias name DocOrgId.
     * @return the value of DocOrgId
     */
    public String getDocOrgId() {
        return (String)getAttributeInternal(DOCORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocOrgId.
     * @param value value to set the DocOrgId
     */
    public void setDocOrgId(String value) {
        setAttributeInternal(DOCORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public Integer getDocId() {
        return (Integer)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocTypId, using the alias name DocTypId.
     * @return the value of DocTypId
     */
    public Integer getDocTypId() {
        return (Integer)getAttributeInternal(DOCTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypId.
     * @param value value to set the DocTypId
     */
    public void setDocTypId(Integer value) {
        setAttributeInternal(DOCTYPID, value);
    }

    /**
     * Gets the attribute value for DocTypResetId, using the alias name DocTypResetId.
     * @return the value of DocTypResetId
     */
    public Integer getDocTypResetId() {
        return (Integer)getAttributeInternal(DOCTYPRESETID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypResetId.
     * @param value value to set the DocTypResetId
     */
    public void setDocTypResetId(Integer value) {
        setAttributeInternal(DOCTYPRESETID, value);
    }

    /**
     * Gets the attribute value for DocTypResetDef, using the alias name DocTypResetDef.
     * @return the value of DocTypResetDef
     */
    public String getDocTypResetDef() {
        return (String)getAttributeInternal(DOCTYPRESETDEF);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypResetDef.
     * @param value value to set the DocTypResetDef
     */
    public void setDocTypResetDef(String value) {
        setAttributeInternal(DOCTYPRESETDEF, value);
    }

    /**
     * Gets the attribute value for DocTypResetActv, using the alias name DocTypResetActv.
     * @return the value of DocTypResetActv
     */
    public String getDocTypResetActv() {
        return (String)getAttributeInternal(DOCTYPRESETACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypResetActv.
     * @param value value to set the DocTypResetActv
     */
    public void setDocTypResetActv(String value) {
        setAttributeInternal(DOCTYPRESETACTV, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity OrgDocTypeEOImpl.
     */
    public OrgDocTypeEOImpl getOrgDocType() {
        return (OrgDocTypeEOImpl)getAttributeInternal(ORGDOCTYPE);
    }

    /**
     * Sets <code>value</code> as the associated entity OrgDocTypeEOImpl.
     */
    public void setOrgDocType(OrgDocTypeEOImpl value) {
        setAttributeInternal(ORGDOCTYPE, value);
    }


    /**
     * @param docCldId key constituent
     * @param docSlocId key constituent
     * @param docOrgId key constituent
     * @param docId key constituent
     * @param docTypId key constituent
     * @param docTypResetId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String docCldId, Integer docSlocId, String docOrgId, Integer docId,
                                       Integer docTypId, Integer docTypResetId) {
        return new Key(new Object[]{docCldId, docSlocId, docOrgId, docId, docTypId, docTypResetId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
       // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Integer userid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        if(operation==DML_INSERT) {
            setUsrIdCreate(userid);
            setUsrIdCreateDt(new Timestamp (System.currentTimeMillis()));
            setUsrIdMod(userid);
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        else if(operation==DML_UPDATE) {
            setUsrIdMod(userid);
            setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
    public String resolvEl(String data){
       FacesContext fc = FacesContext.getCurrentInstance();
       Application app = fc.getApplication();
       ExpressionFactory elFactory = app.getExpressionFactory();
       ELContext elContext = fc.getELContext();
       ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
       String Message=valueExp.getValue(elContext).toString();
       return Message;
     }
}
