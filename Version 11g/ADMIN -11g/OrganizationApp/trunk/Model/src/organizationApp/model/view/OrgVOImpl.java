package organizationApp.model.view;

import java.sql.ResultSet;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 06 13:51:52 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgVOImpl extends ViewObjectImpl {
    
    
    /**
     * This is the default constructor (do not remove).
     */
    public OrgVOImpl() {
    }

    /**
     * Returns the variable value for CldIdBindVar.
     * @return variable value for CldIdBindVar
     */
    public String getCldIdBindVar() {
        return (String)ensureVariableManager().getVariableValue("CldIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable CldIdBindVar.
     * @param value value to bind as CldIdBindVar
     */
    public void setCldIdBindVar(String value) {
        ensureVariableManager().setVariableValue("CldIdBindVar", value);
        this.executeQuery();
    }
    
    public void setBindVar(String CldId){
        this.setCldIdBindVar(CldId);
        if (resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!= null) {
            this.setSlocBindVar(Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString()));
        }
        this.executeQuery();
    }
    public Object resolvEl(String data){
       FacesContext fc = FacesContext.getCurrentInstance();
       Application app = fc.getApplication();
       ExpressionFactory elFactory = app.getExpressionFactory();
       ELContext elContext = fc.getELContext();
       ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
       Object Message=valueExp.getValue(elContext);
       return Message;
     }
    /**
     * Returns the variable value for SlocBindVar.
     * @return variable value for SlocBindVar
     */
    public Integer getSlocBindVar() {
        return (Integer)ensureVariableManager().getVariableValue("SlocBindVar");
    }

    /**
     * Sets <code>value</code> for variable SlocBindVar.
     * @param value value to bind as SlocBindVar
     */
    public void setSlocBindVar(Integer value) {
        ensureVariableManager().setVariableValue("SlocBindVar", value);
    }
    
   
      public void setcurrentrow(Row row) {
          if(row!=null)
          setcurrentrow(row);
      }
     }
