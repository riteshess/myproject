package externalentitysetup.model.views;

import externalentitysetup.model.entities.AppEoBanksEOImpl;

import externalentitysetup.model.module.ExternalEntityAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 09 20:10:30 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppEoBanksVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPEOBANKSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        EoId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getEoId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setEoId((Integer)value);
            }
        }
        ,
        BankAcNo {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getBankAcNo();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setBankAcNo((String)value);
            }
        }
        ,
        BankNm {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getBankNm();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setBankNm((String)value);
            }
        }
        ,
        AddsId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getAddsId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setAddsId((String)value);
            }
        }
        ,
        Actv {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getActv();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setActv((String)value);
            }
        }
        ,
        InactvResn {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getInactvResn();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setInactvResn((String)value);
            }
        }
        ,
        InactvDt {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getInactvDt();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setInactvDt((Date)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        EoOrgId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getEoOrgId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setEoOrgId((String)value);
            }
        }
        ,
        EoHoOrgId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getEoHoOrgId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setEoHoOrgId((String)value);
            }
        }
        ,
        EoCldId {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getEoCldId();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setEoCldId((String)value);
            }
        }
        ,
        AddIdTrans {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getAddIdTrans();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setAddIdTrans((String)value);
            }
        }
        ,
        LovAddsIdInBankVO {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getLovAddsIdInBankVO();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUserIdVO1 {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getLovUserIdVO1();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovUserIdVO2 {
            public Object get(AppEoBanksVORowImpl obj) {
                return obj.getLovUserIdVO2();
            }

            public void put(AppEoBanksVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppEoBanksVORowImpl object);

        public abstract void put(AppEoBanksVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int BANKACNO = AttributesEnum.BankAcNo.index();
    public static final int BANKNM = AttributesEnum.BankNm.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVRESN = AttributesEnum.InactvResn.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EOORGID = AttributesEnum.EoOrgId.index();
    public static final int EOHOORGID = AttributesEnum.EoHoOrgId.index();
    public static final int EOCLDID = AttributesEnum.EoCldId.index();
    public static final int ADDIDTRANS = AttributesEnum.AddIdTrans.index();
    public static final int LOVADDSIDINBANKVO = AttributesEnum.LovAddsIdInBankVO.index();
    public static final int LOVUSERIDVO1 = AttributesEnum.LovUserIdVO1.index();
    public static final int LOVUSERIDVO2 = AttributesEnum.LovUserIdVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppEoBanksVORowImpl() {
    }

    /**
     * Gets AppEoBanksEO entity object.
     * @return the AppEoBanksEO
     */
    public AppEoBanksEOImpl getAppEoBanksEO() {
        return (AppEoBanksEOImpl)getEntity(ENTITY_APPEOBANKSEO);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for BANK_AC_NO using the alias name BankAcNo.
     * @return the BANK_AC_NO
     */
    public String getBankAcNo() {
        return (String) getAttributeInternal(BANKACNO);
    }

    /**
     * Sets <code>value</code> as attribute value for BANK_AC_NO using the alias name BankAcNo.
     * @param value value to set the BANK_AC_NO
     */
    public void setBankAcNo(String value) {
        setAttributeInternal(BANKACNO, value);
    }

    /**
     * Gets the attribute value for BANK_NM using the alias name BankNm.
     * @return the BANK_NM
     */
    public String getBankNm() {
        return (String) getAttributeInternal(BANKNM);
    }

    /**
     * Sets <code>value</code> as attribute value for BANK_NM using the alias name BankNm.
     * @param value value to set the BANK_NM
     */
    public void setBankNm(String value) {
        setAttributeInternal(BANKNM, value.trim());
    }

    /**
     * Gets the attribute value for ADDS_ID using the alias name AddsId.
     * @return the ADDS_ID
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDS_ID using the alias name AddsId.
     * @param value value to set the ADDS_ID
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for ACTV using the alias name Actv.
     * @return the ACTV
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for ACTV using the alias name Actv.
     * @param value value to set the ACTV
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }

    /**
     * Gets the attribute value for INACTV_RESN using the alias name InactvResn.
     * @return the INACTV_RESN
     */
    public String getInactvResn() {
        return (String) getAttributeInternal(INACTVRESN);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_RESN using the alias name InactvResn.
     * @param value value to set the INACTV_RESN
     */
    public void setInactvResn(String value) {
        setAttributeInternal(INACTVRESN, value);
    }

    /**
     * Gets the attribute value for INACTV_DT using the alias name InactvDt.
     * @return the INACTV_DT
     */
    public Date getInactvDt() {
        return (Date) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INACTV_DT using the alias name InactvDt.
     * @param value value to set the INACTV_DT
     */
    public void setInactvDt(Date value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for EO_ORG_ID using the alias name EoOrgId.
     * @return the EO_ORG_ID
     */
    public String getEoOrgId() {
        return (String) getAttributeInternal(EOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ORG_ID using the alias name EoOrgId.
     * @param value value to set the EO_ORG_ID
     */
    public void setEoOrgId(String value) {
        setAttributeInternal(EOORGID, value);
    }

    /**
     * Gets the attribute value for EO_HO_ORG_ID using the alias name EoHoOrgId.
     * @return the EO_HO_ORG_ID
     */
    public String getEoHoOrgId() {
        return (String) getAttributeInternal(EOHOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_HO_ORG_ID using the alias name EoHoOrgId.
     * @param value value to set the EO_HO_ORG_ID
     */
    public void setEoHoOrgId(String value) {
        setAttributeInternal(EOHOORGID, value);
    }

    /**
     * Gets the attribute value for EO_CLD_ID using the alias name EoCldId.
     * @return the EO_CLD_ID
     */
    public String getEoCldId() {
        return (String) getAttributeInternal(EOCLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_CLD_ID using the alias name EoCldId.
     * @param value value to set the EO_CLD_ID
     */
    public void setEoCldId(String value) {
        setAttributeInternal(EOCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddIdTrans.
     * @return the AddIdTrans
     */
     public Object resolvElDC(String data) {
     FacesContext fc = FacesContext.getCurrentInstance();
     Application app = fc.getApplication();
     ExpressionFactory elFactory = app.getExpressionFactory();
     ELContext elContext = fc.getELContext();
     ValueExpression valueExp =
     elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
     return valueExp.getValue(elContext);
     }
    public String getAddIdTrans() {
        String addsName="";
        if(getAttributeInternal(ADDIDTRANS)!=null){
            return (String) getAttributeInternal(ADDIDTRANS);
        }else{
         ExternalEntityAMImpl  am = (ExternalEntityAMImpl)resolvElDC("ExternalEntityAMDataControl");
            ViewObjectImpl lovbank=am.getNewLovAddsBank();
            if(getAddsId()!=null){
              //  System.out.println("adds id in lov is "+getAddsId());
                lovbank.setNamedWhereClauseParam("SlocIdBind", getSlocId());
                lovbank.setNamedWhereClauseParam("CldIdBindVar", getEoCldId());
                lovbank.setNamedWhereClauseParam("addsIdBind", getAddsId());
                lovbank.executeQuery();
                Row [] filteredRow=lovbank.getAllRowsInRange();
           /*  Row [] filteredRow=lovbank.getFilteredRows("AddsId", getAddsId());
           */
           //System.out.println("get add count after filter "+filteredRow.length);
           
                if(filteredRow.length>0){
                addsName=filteredRow[0].getAttribute("Address").toString();
             //   System.out.println("address name is after filter is"+addsName);
            }
            }
            return addsName;
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddIdTrans.
     * @param value value to set the  AddIdTrans
     */
    public void setAddIdTrans(String value) {
        setAttributeInternal(ADDIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAddsIdInBankVO.
     */
    public RowSet getLovAddsIdInBankVO() {
        return (RowSet)getAttributeInternal(LOVADDSIDINBANKVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserIdVO1.
     */
    public RowSet getLovUserIdVO1() {
        return (RowSet)getAttributeInternal(LOVUSERIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserIdVO2.
     */
    public RowSet getLovUserIdVO2() {
        return (RowSet)getAttributeInternal(LOVUSERIDVO2);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
