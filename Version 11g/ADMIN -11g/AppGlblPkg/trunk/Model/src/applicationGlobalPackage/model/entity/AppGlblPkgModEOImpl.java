package applicationGlobalPackage.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 05 10:25:49 IST 2011
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblPkgModEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblPkgId {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getGlblPkgId();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setGlblPkgId((Integer)value);
            }
        }
        ,
        GlblPkgModId {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getGlblPkgModId();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setGlblPkgModId((DBSequence)value);
            }
        }
        ,
        GlblPkgModNm {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getGlblPkgModNm();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setGlblPkgModNm((String)value);
            }
        }
        ,
        GlblPkgModEffId {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getGlblPkgModEffId();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setGlblPkgModEffId((String)value);
            }
        }
        ,
        GlblPkgModEntId {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getGlblPkgModEntId();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setGlblPkgModEntId((Long)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SsId {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getSsId();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setSsId((Integer)value);
            }
        }
        ,
        AppGlblPkg {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getAppGlblPkg();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setAppGlblPkg((AppGlblPkgEOImpl)value);
            }
        }
        ,
        AppGlblPkgSmod {
            public Object get(AppGlblPkgModEOImpl obj) {
                return obj.getAppGlblPkgSmod();
            }

            public void put(AppGlblPkgModEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblPkgModEOImpl object);

        public abstract void put(AppGlblPkgModEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GLBLPKGID = AttributesEnum.GlblPkgId.index();
    public static final int GLBLPKGMODID = AttributesEnum.GlblPkgModId.index();
    public static final int GLBLPKGMODNM = AttributesEnum.GlblPkgModNm.index();
    public static final int GLBLPKGMODEFFID = AttributesEnum.GlblPkgModEffId.index();
    public static final int GLBLPKGMODENTID = AttributesEnum.GlblPkgModEntId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SSID = AttributesEnum.SsId.index();
    public static final int APPGLBLPKG = AttributesEnum.AppGlblPkg.index();
    public static final int APPGLBLPKGSMOD = AttributesEnum.AppGlblPkgSmod.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblPkgModEOImpl() {
    }

    /**
     * Gets the attribute value for GlblPkgId, using the alias name GlblPkgId.
     * @return the value of GlblPkgId
     */
    public Integer getGlblPkgId() {
        return (Integer)getAttributeInternal(GLBLPKGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgId.
     * @param value value to set the GlblPkgId
     */
    public void setGlblPkgId(Integer value) {
        setAttributeInternal(GLBLPKGID, value);
    }

    /**
     * Gets the attribute value for GlblPkgModId, using the alias name GlblPkgModId.
     * @return the value of GlblPkgModId
     */
    public DBSequence getGlblPkgModId() {
        return (DBSequence)getAttributeInternal(GLBLPKGMODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgModId.
     * @param value value to set the GlblPkgModId
     */
    public void setGlblPkgModId(DBSequence value) {
        setAttributeInternal(GLBLPKGMODID, value);
    }

    /**
     * Gets the attribute value for GlblPkgModNm, using the alias name GlblPkgModNm.
     * @return the value of GlblPkgModNm
     */
    public String getGlblPkgModNm() {
        return (String)getAttributeInternal(GLBLPKGMODNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgModNm.
     * @param value value to set the GlblPkgModNm
     */
    public void setGlblPkgModNm(String value) {
        setAttributeInternal(GLBLPKGMODNM, value);
    }

    /**
     * Gets the attribute value for GlblPkgModEffId, using the alias name GlblPkgModEffId.
     * @return the value of GlblPkgModEffId
     */
    public String getGlblPkgModEffId() {
        return (String)getAttributeInternal(GLBLPKGMODEFFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgModEffId.
     * @param value value to set the GlblPkgModEffId
     */
    public void setGlblPkgModEffId(String value) {
        setAttributeInternal(GLBLPKGMODEFFID, value);
    }

    /**
     * Gets the attribute value for GlblPkgModEntId, using the alias name GlblPkgModEntId.
     * @return the value of GlblPkgModEntId
     */
    public Long getGlblPkgModEntId() {
        return (Long)getAttributeInternal(GLBLPKGMODENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgModEntId.
     * @param value value to set the GlblPkgModEntId
     */
    public void setGlblPkgModEntId(Long value) {
        setAttributeInternal(GLBLPKGMODENTID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for SsId, using the alias name SsId.
     * @return the value of SsId
     */
    public Integer getSsId() {
        return (Integer)getAttributeInternal(SSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SsId.
     * @param value value to set the SsId
     */
    public void setSsId(Integer value) {
        setAttributeInternal(SSID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppGlblPkgEOImpl.
     */
    public AppGlblPkgEOImpl getAppGlblPkg() {
        return (AppGlblPkgEOImpl)getAttributeInternal(APPGLBLPKG);
    }

    /**
     * Sets <code>value</code> as the associated entity AppGlblPkgEOImpl.
     */
    public void setAppGlblPkg(AppGlblPkgEOImpl value) {
        setAttributeInternal(APPGLBLPKG, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppGlblPkgSmod() {
        return (RowIterator)getAttributeInternal(APPGLBLPKGSMOD);
    }

    /**
     * @param glblPkgId key constituent
     * @param glblPkgModId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer glblPkgId, DBSequence glblPkgModId) {
        return new Key(new Object[]{glblPkgId, glblPkgModId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("applicationGlobalPackage.model.entity.AppGlblPkgModEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setSsId(Integer.valueOf(this.getGlblPkgModId().toString()));
        Integer usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdCreate(usrid);
    }
    public String resolvEl(String data){
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message=valueExp.getValue(elContext).toString();
        return Message;
      }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
            Integer usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
            setUsrIdMod(usrid);
        }
        super.doDML(operation, e);
    }
}
