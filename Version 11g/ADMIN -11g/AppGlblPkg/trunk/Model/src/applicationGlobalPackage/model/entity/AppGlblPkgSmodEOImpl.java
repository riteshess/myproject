package applicationGlobalPackage.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 06 16:54:44 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppGlblPkgSmodEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        GlblPkgId {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgId();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgId((Integer)value);
            }
        }
        ,
        GlblPkgModId {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgModId();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgModId((Integer)value);
            }
        }
        ,
        GlblPkgSmodId {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgSmodId();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgSmodId((DBSequence)value);
            }
        }
        ,
        GlblPkgSmodNm {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgSmodNm();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgSmodNm((String)value);
            }
        }
        ,
        GlblPkgSmodEffId {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgSmodEffId();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgSmodEffId((String)value);
            }
        }
        ,
        GlblPkgSmodEntId {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getGlblPkgSmodEntId();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setGlblPkgSmodEntId((Long)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppGlblPkgMod {
            public Object get(AppGlblPkgSmodEOImpl obj) {
                return obj.getAppGlblPkgMod();
            }

            public void put(AppGlblPkgSmodEOImpl obj, Object value) {
                obj.setAppGlblPkgMod((AppGlblPkgModEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppGlblPkgSmodEOImpl object);

        public abstract void put(AppGlblPkgSmodEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int GLBLPKGID = AttributesEnum.GlblPkgId.index();
    public static final int GLBLPKGMODID = AttributesEnum.GlblPkgModId.index();
    public static final int GLBLPKGSMODID = AttributesEnum.GlblPkgSmodId.index();
    public static final int GLBLPKGSMODNM = AttributesEnum.GlblPkgSmodNm.index();
    public static final int GLBLPKGSMODEFFID = AttributesEnum.GlblPkgSmodEffId.index();
    public static final int GLBLPKGSMODENTID = AttributesEnum.GlblPkgSmodEntId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APPGLBLPKGMOD = AttributesEnum.AppGlblPkgMod.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppGlblPkgSmodEOImpl() {
    }

    /**
     * Gets the attribute value for GlblPkgId, using the alias name GlblPkgId.
     * @return the value of GlblPkgId
     */
    public Integer getGlblPkgId() {
        return (Integer)getAttributeInternal(GLBLPKGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgId.
     * @param value value to set the GlblPkgId
     */
    public void setGlblPkgId(Integer value) {
        setAttributeInternal(GLBLPKGID, value);
    }

    /**
     * Gets the attribute value for GlblPkgModId, using the alias name GlblPkgModId.
     * @return the value of GlblPkgModId
     */
    public Integer getGlblPkgModId() {
        return (Integer)getAttributeInternal(GLBLPKGMODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgModId.
     * @param value value to set the GlblPkgModId
     */
    public void setGlblPkgModId(Integer value) {
        setAttributeInternal(GLBLPKGMODID, value);
    }

    /**
     * Gets the attribute value for GlblPkgSmodId, using the alias name GlblPkgSmodId.
     * @return the value of GlblPkgSmodId
     */
    public DBSequence getGlblPkgSmodId() {
        return (DBSequence)getAttributeInternal(GLBLPKGSMODID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgSmodId.
     * @param value value to set the GlblPkgSmodId
     */
    public void setGlblPkgSmodId(DBSequence value) {
        setAttributeInternal(GLBLPKGSMODID, value);
    }

    /**
     * Gets the attribute value for GlblPkgSmodNm, using the alias name GlblPkgSmodNm.
     * @return the value of GlblPkgSmodNm
     */
    public String getGlblPkgSmodNm() {
        return (String)getAttributeInternal(GLBLPKGSMODNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgSmodNm.
     * @param value value to set the GlblPkgSmodNm
     */
    public void setGlblPkgSmodNm(String value) {
        setAttributeInternal(GLBLPKGSMODNM, value);
    }

    /**
     * Gets the attribute value for GlblPkgSmodEffId, using the alias name GlblPkgSmodEffId.
     * @return the value of GlblPkgSmodEffId
     */
    public String getGlblPkgSmodEffId() {
        return (String)getAttributeInternal(GLBLPKGSMODEFFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgSmodEffId.
     * @param value value to set the GlblPkgSmodEffId
     */
    public void setGlblPkgSmodEffId(String value) {
        setAttributeInternal(GLBLPKGSMODEFFID, value);
    }

    /**
     * Gets the attribute value for GlblPkgSmodEntId, using the alias name GlblPkgSmodEntId.
     * @return the value of GlblPkgSmodEntId
     */
    public Long getGlblPkgSmodEntId() {
        return (Long)getAttributeInternal(GLBLPKGSMODENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for GlblPkgSmodEntId.
     * @param value value to set the GlblPkgSmodEntId
     */
    public void setGlblPkgSmodEntId(Long value) {
        setAttributeInternal(GLBLPKGSMODENTID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppGlblPkgModEOImpl.
     */
    public AppGlblPkgModEOImpl getAppGlblPkgMod() {
        return (AppGlblPkgModEOImpl)getAttributeInternal(APPGLBLPKGMOD);
    }

    /**
     * Sets <code>value</code> as the associated entity AppGlblPkgModEOImpl.
     */
    public void setAppGlblPkgMod(AppGlblPkgModEOImpl value) {
        setAttributeInternal(APPGLBLPKGMOD, value);
    }

    /**
     * @param glblPkgId key constituent
     * @param glblPkgModId key constituent
     * @param glblPkgSmodId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer glblPkgId, Integer glblPkgModId, DBSequence glblPkgSmodId) {
        return new Key(new Object[]{glblPkgId, glblPkgModId, glblPkgSmodId});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("applicationGlobalPackage.model.entity.AppGlblPkgSmodEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdCreate(usrid);
        super.create(attributeList);
    }
    public String resolvEl(String data){
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message=valueExp.getValue(elContext).toString();
        return Message;
      }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
        Integer usrid=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdMod(usrid);
        }
        super.doDML(operation, e);
   
    }
}
