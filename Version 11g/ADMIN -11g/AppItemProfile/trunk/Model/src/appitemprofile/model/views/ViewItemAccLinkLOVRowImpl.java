package appitemprofile.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 02 11:37:40 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ViewItemAccLinkLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AttId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getAttId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setAttId((Integer)value);
            }
        }
        ,
        AttNm {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getAttNm();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setAttNm((String)value);
            }
        }
        ,
        AttTypeId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getAttTypeId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setAttTypeId((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getCoaId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        CoaNm {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getCoaNm();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setCoaNm((String)value);
            }
        }
        ,
        OrgId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getOrgId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getSlocId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getCldId();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        COAVO1 {
            public Object get(ViewItemAccLinkLOVRowImpl obj) {
                return obj.getCOAVO1();
            }

            public void put(ViewItemAccLinkLOVRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ViewItemAccLinkLOVRowImpl object);

        public abstract void put(ViewItemAccLinkLOVRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ATTID = AttributesEnum.AttId.index();
    public static final int ATTNM = AttributesEnum.AttNm.index();
    public static final int ATTTYPEID = AttributesEnum.AttTypeId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COAVO1 = AttributesEnum.COAVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ViewItemAccLinkLOVRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute AttId.
     * @return the AttId
     */
    public Integer getAttId() {
        return (Integer) getAttributeInternal(ATTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttId.
     * @param value value to set the  AttId
     */
    public void setAttId(Integer value) {
        setAttributeInternal(ATTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AttNm.
     * @return the AttNm
     */
    public String getAttNm() {
        return (String) getAttributeInternal(ATTNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttNm.
     * @param value value to set the  AttNm
     */
    public void setAttNm(String value) {
        setAttributeInternal(ATTNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AttTypeId.
     * @return the AttTypeId
     */
    public Integer getAttTypeId() {
        return (Integer) getAttributeInternal(ATTTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttTypeId.
     * @param value value to set the  AttTypeId
     */
    public void setAttTypeId(Integer value) {
        setAttributeInternal(ATTTYPEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaId.
     * @param value value to set the  CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNm.
     * @param value value to set the  CoaNm
     */
    public void setCoaNm(String value) {
        setAttributeInternal(COANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if(orgId != null)
        {return orgId;}
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        Integer slocId=Integer.parseInt(evaluateEL("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
          if(slocId != null)
        {return slocId;}
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String hoOrgId=(String)evaluateEL("#{pageFlowScope.GLBL_HO_ORG_ID}");
        if(hoOrgId != null)
        {return hoOrgId;}
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldId=(String)evaluateEL("#{pageFlowScope.GLBL_APP_CLD_ID}");
        if(cldId != null)
        {return cldId;}
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> COAVO1.
     */
    public RowSet getCOAVO1() {
        return (RowSet)getAttributeInternal(COAVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public String evaluateEL(String el) 
    {
    FacesContext facesContext = FacesContext.getCurrentInstance();
    ELContext elContext = facesContext.getELContext();
    ExpressionFactory expressionFactory =facesContext.getApplication().getExpressionFactory();
    ValueExpression exp = expressionFactory.createValueExpression(elContext, el,Object.class);
    String retVal = exp.getValue(elContext).toString();
    return retVal;
    }
}
