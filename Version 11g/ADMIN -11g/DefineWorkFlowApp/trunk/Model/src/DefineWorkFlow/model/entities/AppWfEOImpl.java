package DefineWorkFlow.model.entities;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 04 16:35:04 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppWfEOImpl extends EntityImpl {
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Date dt = (Date)Date.getCurrentDate();
        super.create(attributeList);
        SequenceImpl seq= new SequenceImpl("WFID",getDBTransaction());
        setWfId(seq.getSequenceNumber().toString());
        setUsrIdCreateDt(dt);
        
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
     public String resolvEl(String data){
              FacesContext fc = FacesContext.getCurrentInstance();
              Application app = fc.getApplication();
              ExpressionFactory elFactory = app.getExpressionFactory();
              ELContext elContext = fc.getELContext();
              ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
              String Message=valueExp.getValue(elContext).toString();
              return Message;
            }
    
    protected void doDML(int operation, TransactionEvent e) {
       Date date = (Date)Date.getCurrentDate();
        if (operation==DML_UPDATE) {
            Integer userIdMod = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
             setUsrIdMod(userIdMod);
             setUsrIdModDt(date); 
        }
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(AppWfEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(AppWfEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(AppWfEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        WfId {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfId();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfId((String)value);
            }
        }
        ,
        WfNm {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfNm();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfNm((String)value);
            }
        }
        ,
        WfFmDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfFmDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfFmDt((Date)value);
            }
        }
        ,
        WfToDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfToDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfToDt((Date)value);
            }
        }
        ,
        WfMaxLvl {
            public Object get(AppWfEOImpl obj) {
                return obj.getWfMaxLvl();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setWfMaxLvl((Integer)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppWfEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        Rowid {
            public Object get(AppWfEOImpl obj) {
                return obj.getRowid();
            }

            public void put(AppWfEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppWfEOImpl object);

        public abstract void put(AppWfEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int WFID = AttributesEnum.WfId.index();
    public static final int WFNM = AttributesEnum.WfNm.index();
    public static final int WFFMDT = AttributesEnum.WfFmDt.index();
    public static final int WFTODT = AttributesEnum.WfToDt.index();
    public static final int WFMAXLVL = AttributesEnum.WfMaxLvl.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ROWID = AttributesEnum.Rowid.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppWfEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("DefineWorkFlow.model.entities.AppWfEO");
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }


    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for WfId, using the alias name WfId.
     * @return the value of WfId
     */
    public String getWfId() {
        return (String)getAttributeInternal(WFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfId.
     * @param value value to set the WfId
     */
    public void setWfId(String value) {
        setAttributeInternal(WFID, value);
    }

    /**
     * Gets the attribute value for WfNm, using the alias name WfNm.
     * @return the value of WfNm
     */
    public String getWfNm() {
        return (String)getAttributeInternal(WFNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfNm.
     * @param value value to set the WfNm
     */
    public void setWfNm(String value) {
        setAttributeInternal(WFNM, value);
    }

    /**
     * Gets the attribute value for WfFmDt, using the alias name WfFmDt.
     * @return the value of WfFmDt
     */
    public Date getWfFmDt() {
        return (Date)getAttributeInternal(WFFMDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfFmDt.
     * @param value value to set the WfFmDt
     */
    public void setWfFmDt(Date value) {
        setAttributeInternal(WFFMDT, value);
    }

    /**
     * Gets the attribute value for WfToDt, using the alias name WfToDt.
     * @return the value of WfToDt
     */
    public Date getWfToDt() {
        return (Date)getAttributeInternal(WFTODT);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfToDt.
     * @param value value to set the WfToDt
     */
    public void setWfToDt(Date value) {
        setAttributeInternal(WFTODT, value);
    }

    /**
     * Gets the attribute value for WfMaxLvl, using the alias name WfMaxLvl.
     * @return the value of WfMaxLvl
     */
    public Integer getWfMaxLvl() {
        return (Integer)getAttributeInternal(WFMAXLVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for WfMaxLvl.
     * @param value value to set the WfMaxLvl
     */
    public void setWfMaxLvl(Integer value) {
        setAttributeInternal(WFMAXLVL, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }
    
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for Rowid, using the alias name Rowid.
     * @return the value of Rowid
     */
    public RowID getRowid() {
        return (RowID)getAttributeInternal(ROWID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

}
