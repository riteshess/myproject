package DefineWorkFlow.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Feb 01 17:30:37 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(DualVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(DualVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(DualVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        DocId {
            public Object get(DualVORowImpl obj) {
                return obj.getDocId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setDocId((Integer)value);
            }
        }
        ,
        transWfNm {
            public Object get(DualVORowImpl obj) {
                return obj.gettransWfNm();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.settransWfNm((String)value);
            }
        }
        ,
        TransEfId {
            public Object get(DualVORowImpl obj) {
                return obj.getTransEfId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setTransEfId((String)value);
            }
        }
        ,
        DocMapLovVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getDocMapLovVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppWfVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getAppWfVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DualVORowImpl object);

        public abstract void put(DualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int TRANSWFNM = AttributesEnum.transWfNm.index();
    public static final int TRANSEFID = AttributesEnum.TransEfId.index();
    public static final int DOCMAPLOVVO1 = AttributesEnum.DocMapLovVO1.index();
    public static final int APPWFVO1 = AttributesEnum.AppWfVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        String str= resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}");
        
        if(str != null) {
        Integer  slocid = Integer.parseInt(str);
        return slocid;
        }
        
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String orgid = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        if(orgid != null)
        return orgid;
        
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String cldid = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        if(cldid != null)
        return cldid;
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Integer getDocId() {
        return (Integer) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DocId.
     * @param value value to set the  DocId
     */
    public void setDocId(Integer value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute transWfNm.
     * @return the transWfNm
     */
    public String gettransWfNm() {
        return (String) getAttributeInternal(TRANSWFNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute transWfNm.
     * @param value value to set the  transWfNm
     */
    public void settransWfNm(String value) {
        setAttributeInternal(TRANSWFNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEfId.
     * @return the TransEfId
     */
    public String getTransEfId() {
        return (String) getAttributeInternal(TRANSEFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEfId.
     * @param value value to set the  TransEfId
     */
    public void setTransEfId(String value) {
        setAttributeInternal(TRANSEFID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocMapLovVO1.
     */
    public RowSet getDocMapLovVO1() {
        return (RowSet)getAttributeInternal(DOCMAPLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppWfVO1.
     */
    public RowSet getAppWfVO1() {
        return (RowSet)getAttributeInternal(APPWFVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }
}
