package bdgeoprofileapp.model.views;

import bdgeoprofileapp.model.entities.BdgEoBudgetEOImpl;
import bdgeoprofileapp.model.services.BdgEoProfileAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 15 18:57:25 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgEoBudgetVORowImpl extends ViewRowImpl {


    public static final int ENTITY_BDGEOBUDGETEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BudgAmt,
        BudgetId,
        BudgetMethod,
        BudgetSet,
        CldId,
        CopiedBudgAmt,
        CopyBdgSrcFlg,
        CopyBudgAmtFlg,
        DocId,
        EoId,
        FyId,
        HoOrgId,
        OrgId,
        PrdEndDt,
        PrdStartDt,
        Region,
        RevisionMeth,
        RevisionTyp,
        RevisionTypVal,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        EoNameTrans,
        BdgGrpId,
        FyEndDt,
        FyStartDt,
        CurrConvRate,
        CurrIdSp,
        CurrNameTrans,
        CopyPrdEndDt,
        CopyPrdStartDt,
        CopyPrevFyFlg,
        BdgFyId,
        AddDetailItemAmtBsTrans,
        BudgetStat,
        FreezeFlg,
        PropBudgAmt,
        MgrBudgAmt,
        DiffInAmtTrans,
        Remarks,
        DispAuthLinkTrans,
        FrzRemarks,
        FreezeDisplayTrans,
        DistbMethd,
        DistbPrdBasis,
        RegionNameTrans,
        DistbSelType,
        UnFreezeTrans,
        TotDistributedAmtTrans,
        TotDistributedPerTrans,
        BudgAmtNotaTrans,
        CopiedBudgAmtNotaTrans,
        MgrBudgAmtNotaTrans,
        TotDistributedAmtNotaTrans,
        DiffInAmtNotaTrans,
        FYBasisTrans,
        RevisionMethTrans,
        RevisionTypTrans,
        RevisionTypValTrans,
        RemarksTrans,
        DispColorDiffInAmtTrans,
        ChkManagerTrans,
        BudgetNm,
        BudgtAmtSpTrans,
        BudgAmtSpNotaTrans,
        currBsNotTrans,
        ImmSubOrdinateTrans,
        BudgtAmtBsTrans,
        BudgAmtBsNotaTrans,
        BdgEoBudgetProdDtl,
        BdgEoBudgetPrdDtl,
        BdgEoBudgetProdPrdDtl,
        LOVUserNameVO1,
        LOVUserNameVO2,
        LOVOrgNameVO1,
        LOVBdgMethodVO1,
        LOVEoIdVO1,
        LOVBdgSourceVO1,
        LOVAmtSourceVO1,
        LOVRevisionTypeVO1,
        LOVRevisionMethodVO1,
        LOVBdgGrpIdVO1,
        LOVCurrIdVO1,
        LOVCopyPreviousBdgTypeVO1,
        LOVStatusVO1,
        LOVDistubMethodVO1,
        LOVDistributionPrdBasisVO1,
        LOVLocationNmVO1,
        LOVDistSelTypeVO1,
        LOVFyIdForSearchVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BUDGAMT = AttributesEnum.BudgAmt.index();
    public static final int BUDGETID = AttributesEnum.BudgetId.index();
    public static final int BUDGETMETHOD = AttributesEnum.BudgetMethod.index();
    public static final int BUDGETSET = AttributesEnum.BudgetSet.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int COPIEDBUDGAMT = AttributesEnum.CopiedBudgAmt.index();
    public static final int COPYBDGSRCFLG = AttributesEnum.CopyBdgSrcFlg.index();
    public static final int COPYBUDGAMTFLG = AttributesEnum.CopyBudgAmtFlg.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int REVISIONMETH = AttributesEnum.RevisionMeth.index();
    public static final int REVISIONTYP = AttributesEnum.RevisionTyp.index();
    public static final int REVISIONTYPVAL = AttributesEnum.RevisionTypVal.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int EONAMETRANS = AttributesEnum.EoNameTrans.index();
    public static final int BDGGRPID = AttributesEnum.BdgGrpId.index();
    public static final int FYENDDT = AttributesEnum.FyEndDt.index();
    public static final int FYSTARTDT = AttributesEnum.FyStartDt.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRNAMETRANS = AttributesEnum.CurrNameTrans.index();
    public static final int COPYPRDENDDT = AttributesEnum.CopyPrdEndDt.index();
    public static final int COPYPRDSTARTDT = AttributesEnum.CopyPrdStartDt.index();
    public static final int COPYPREVFYFLG = AttributesEnum.CopyPrevFyFlg.index();
    public static final int BDGFYID = AttributesEnum.BdgFyId.index();
    public static final int ADDDETAILITEMAMTBSTRANS = AttributesEnum.AddDetailItemAmtBsTrans.index();
    public static final int BUDGETSTAT = AttributesEnum.BudgetStat.index();
    public static final int FREEZEFLG = AttributesEnum.FreezeFlg.index();
    public static final int PROPBUDGAMT = AttributesEnum.PropBudgAmt.index();
    public static final int MGRBUDGAMT = AttributesEnum.MgrBudgAmt.index();
    public static final int DIFFINAMTTRANS = AttributesEnum.DiffInAmtTrans.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int DISPAUTHLINKTRANS = AttributesEnum.DispAuthLinkTrans.index();
    public static final int FRZREMARKS = AttributesEnum.FrzRemarks.index();
    public static final int FREEZEDISPLAYTRANS = AttributesEnum.FreezeDisplayTrans.index();
    public static final int DISTBMETHD = AttributesEnum.DistbMethd.index();
    public static final int DISTBPRDBASIS = AttributesEnum.DistbPrdBasis.index();
    public static final int REGIONNAMETRANS = AttributesEnum.RegionNameTrans.index();
    public static final int DISTBSELTYPE = AttributesEnum.DistbSelType.index();
    public static final int UNFREEZETRANS = AttributesEnum.UnFreezeTrans.index();
    public static final int TOTDISTRIBUTEDAMTTRANS = AttributesEnum.TotDistributedAmtTrans.index();
    public static final int TOTDISTRIBUTEDPERTRANS = AttributesEnum.TotDistributedPerTrans.index();
    public static final int BUDGAMTNOTATRANS = AttributesEnum.BudgAmtNotaTrans.index();
    public static final int COPIEDBUDGAMTNOTATRANS = AttributesEnum.CopiedBudgAmtNotaTrans.index();
    public static final int MGRBUDGAMTNOTATRANS = AttributesEnum.MgrBudgAmtNotaTrans.index();
    public static final int TOTDISTRIBUTEDAMTNOTATRANS = AttributesEnum.TotDistributedAmtNotaTrans.index();
    public static final int DIFFINAMTNOTATRANS = AttributesEnum.DiffInAmtNotaTrans.index();
    public static final int FYBASISTRANS = AttributesEnum.FYBasisTrans.index();
    public static final int REVISIONMETHTRANS = AttributesEnum.RevisionMethTrans.index();
    public static final int REVISIONTYPTRANS = AttributesEnum.RevisionTypTrans.index();
    public static final int REVISIONTYPVALTRANS = AttributesEnum.RevisionTypValTrans.index();
    public static final int REMARKSTRANS = AttributesEnum.RemarksTrans.index();
    public static final int DISPCOLORDIFFINAMTTRANS = AttributesEnum.DispColorDiffInAmtTrans.index();
    public static final int CHKMANAGERTRANS = AttributesEnum.ChkManagerTrans.index();
    public static final int BUDGETNM = AttributesEnum.BudgetNm.index();
    public static final int BUDGTAMTSPTRANS = AttributesEnum.BudgtAmtSpTrans.index();
    public static final int BUDGAMTSPNOTATRANS = AttributesEnum.BudgAmtSpNotaTrans.index();
    public static final int CURRBSNOTTRANS = AttributesEnum.currBsNotTrans.index();
    public static final int IMMSUBORDINATETRANS = AttributesEnum.ImmSubOrdinateTrans.index();
    public static final int BUDGTAMTBSTRANS = AttributesEnum.BudgtAmtBsTrans.index();
    public static final int BUDGAMTBSNOTATRANS = AttributesEnum.BudgAmtBsNotaTrans.index();
    public static final int BDGEOBUDGETPRODDTL = AttributesEnum.BdgEoBudgetProdDtl.index();
    public static final int BDGEOBUDGETPRDDTL = AttributesEnum.BdgEoBudgetPrdDtl.index();
    public static final int BDGEOBUDGETPRODPRDDTL = AttributesEnum.BdgEoBudgetProdPrdDtl.index();
    public static final int LOVUSERNAMEVO1 = AttributesEnum.LOVUserNameVO1.index();
    public static final int LOVUSERNAMEVO2 = AttributesEnum.LOVUserNameVO2.index();
    public static final int LOVORGNAMEVO1 = AttributesEnum.LOVOrgNameVO1.index();
    public static final int LOVBDGMETHODVO1 = AttributesEnum.LOVBdgMethodVO1.index();
    public static final int LOVEOIDVO1 = AttributesEnum.LOVEoIdVO1.index();
    public static final int LOVBDGSOURCEVO1 = AttributesEnum.LOVBdgSourceVO1.index();
    public static final int LOVAMTSOURCEVO1 = AttributesEnum.LOVAmtSourceVO1.index();
    public static final int LOVREVISIONTYPEVO1 = AttributesEnum.LOVRevisionTypeVO1.index();
    public static final int LOVREVISIONMETHODVO1 = AttributesEnum.LOVRevisionMethodVO1.index();
    public static final int LOVBDGGRPIDVO1 = AttributesEnum.LOVBdgGrpIdVO1.index();
    public static final int LOVCURRIDVO1 = AttributesEnum.LOVCurrIdVO1.index();
    public static final int LOVCOPYPREVIOUSBDGTYPEVO1 = AttributesEnum.LOVCopyPreviousBdgTypeVO1.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LOVStatusVO1.index();
    public static final int LOVDISTUBMETHODVO1 = AttributesEnum.LOVDistubMethodVO1.index();
    public static final int LOVDISTRIBUTIONPRDBASISVO1 = AttributesEnum.LOVDistributionPrdBasisVO1.index();
    public static final int LOVLOCATIONNMVO1 = AttributesEnum.LOVLocationNmVO1.index();
    public static final int LOVDISTSELTYPEVO1 = AttributesEnum.LOVDistSelTypeVO1.index();
    public static final int LOVFYIDFORSEARCHVO1 = AttributesEnum.LOVFyIdForSearchVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgEoBudgetVORowImpl() {
    }

    /**
     * Gets BdgEoBudgetEO entity object.
     * @return the BdgEoBudgetEO
     */
    public BdgEoBudgetEOImpl getBdgEoBudgetEO() {
        return (BdgEoBudgetEOImpl) getEntity(ENTITY_BDGEOBUDGETEO);
    }


    /**
     * Gets the attribute value for BUDG_AMT using the alias name BudgAmt.
     * @return the BUDG_AMT
     */
    public Number getBudgAmt() {
        return (Number) getAttributeInternal(BUDGAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDG_AMT using the alias name BudgAmt.
     * @param value value to set the BUDG_AMT
     */
    public void setBudgAmt(Number value) {
        setAttributeInternal(BUDGAMT, value);
    }

    /**
     * Gets the attribute value for BUDGET_ID using the alias name BudgetId.
     * @return the BUDGET_ID
     */
    public String getBudgetId() {
        return (String) getAttributeInternal(BUDGETID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_ID using the alias name BudgetId.
     * @param value value to set the BUDGET_ID
     */
    public void setBudgetId(String value) {
        setAttributeInternal(BUDGETID, value);
    }

    /**
     * Gets the attribute value for BUDGET_METHOD using the alias name BudgetMethod.
     * @return the BUDGET_METHOD
     */
    public Integer getBudgetMethod() {
        return (Integer) getAttributeInternal(BUDGETMETHOD);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_METHOD using the alias name BudgetMethod.
     * @param value value to set the BUDGET_METHOD
     */
    public void setBudgetMethod(Integer value) {
        setAttributeInternal(BUDGETMETHOD, value);
    }

    /**
     * Gets the attribute value for BUDGET_SET using the alias name BudgetSet.
     * @return the BUDGET_SET
     */
    public Integer getBudgetSet() {
        return (Integer) getAttributeInternal(BUDGETSET);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_SET using the alias name BudgetSet.
     * @param value value to set the BUDGET_SET
     */
    public void setBudgetSet(Integer value) {
        setAttributeInternal(BUDGETSET, value);
    }


    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for COPIED_BUDG_AMT using the alias name CopiedBudgAmt.
     * @return the COPIED_BUDG_AMT
     */
    public Number getCopiedBudgAmt() {
        return (Number) getAttributeInternal(COPIEDBUDGAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for COPIED_BUDG_AMT using the alias name CopiedBudgAmt.
     * @param value value to set the COPIED_BUDG_AMT
     */
    public void setCopiedBudgAmt(Number value) {
        setAttributeInternal(COPIEDBUDGAMT, value);
    }

    /**
     * Gets the attribute value for COPY_BDG_SRC_FLG using the alias name CopyBdgSrcFlg.
     * @return the COPY_BDG_SRC_FLG
     */
    public String getCopyBdgSrcFlg() {
        return (String) getAttributeInternal(COPYBDGSRCFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for COPY_BDG_SRC_FLG using the alias name CopyBdgSrcFlg.
     * @param value value to set the COPY_BDG_SRC_FLG
     */
    public void setCopyBdgSrcFlg(String value) {
        setAttributeInternal(COPYBDGSRCFLG, value);
    }

    /**
     * Gets the attribute value for COPY_BUDG_AMT_FLG using the alias name CopyBudgAmtFlg.
     * @return the COPY_BUDG_AMT_FLG
     */
    public String getCopyBudgAmtFlg() {
        return (String) getAttributeInternal(COPYBUDGAMTFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for COPY_BUDG_AMT_FLG using the alias name CopyBudgAmtFlg.
     * @param value value to set the COPY_BUDG_AMT_FLG
     */
    public void setCopyBudgAmtFlg(String value) {
        setAttributeInternal(COPYBUDGAMTFLG, value);
    }


    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @return the PRD_END_DT
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @param value value to set the PRD_END_DT
     */
    public void setPrdEndDt(Timestamp value) {
        setAttributeInternal(PRDENDDT, value);
    }

    /**
     * Gets the attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @return the PRD_START_DT
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @param value value to set the PRD_START_DT
     */
    public void setPrdStartDt(Timestamp value) {
        setAttributeInternal(PRDSTARTDT, value);
    }

    /**
     * Gets the attribute value for REGION using the alias name Region.
     * @return the REGION
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Sets <code>value</code> as attribute value for REGION using the alias name Region.
     * @param value value to set the REGION
     */
    public void setRegion(String value) {
        setAttributeInternal(REGION, value);
    }

    /**
     * Gets the attribute value for REVISION_METH using the alias name RevisionMeth.
     * @return the REVISION_METH
     */
    public Integer getRevisionMeth() {
        return (Integer) getAttributeInternal(REVISIONMETH);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISION_METH using the alias name RevisionMeth.
     * @param value value to set the REVISION_METH
     */
    public void setRevisionMeth(Integer value) {
        setAttributeInternal(REVISIONMETH, value);
    }

    /**
     * Gets the attribute value for REVISION_TYP using the alias name RevisionTyp.
     * @return the REVISION_TYP
     */
    public String getRevisionTyp() {
        return (String) getAttributeInternal(REVISIONTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISION_TYP using the alias name RevisionTyp.
     * @param value value to set the REVISION_TYP
     */
    public void setRevisionTyp(String value) {
        setAttributeInternal(REVISIONTYP, value);
    }

    /**
     * Gets the attribute value for REVISION_TYP_VAL using the alias name RevisionTypVal.
     * @return the REVISION_TYP_VAL
     */
    public Number getRevisionTypVal() {
        return (Number) getAttributeInternal(REVISIONTYPVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for REVISION_TYP_VAL using the alias name RevisionTypVal.
     * @param value value to set the REVISION_TYP_VAL
     */
    public void setRevisionTypVal(Number value) {
        setAttributeInternal(REVISIONTYPVAL, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNameTrans.
     * @return the EoNameTrans
     */
    public String getEoNameTrans() {
        if (getAttributeInternal(EONAMETRANS) == null && this.getEoId() != null) {
            ViewObjectImpl eoVO1 = getAm().getLOVEoIdVO1();
            eoVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            eoVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            eoVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            eoVO1.setNamedWhereClauseParam("BindUserId", this.getUsrIdCreate());
            eoVO1.setNamedWhereClauseParam("BindEoId", this.getEoId());
            eoVO1.executeQuery();
            Row[] allRowsInRange = eoVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(EONAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNameTrans.
     * @param value value to set the  EoNameTrans
     */
    public void setEoNameTrans(String value) {
        setAttributeInternal(EONAMETRANS, value);
    }


    /**
     * Gets the attribute value for BDG_GRP_ID using the alias name BdgGrpId.
     * @return the BDG_GRP_ID
     */
    public Integer getBdgGrpId() {
        return (Integer) getAttributeInternal(BDGGRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for BDG_GRP_ID using the alias name BdgGrpId.
     * @param value value to set the BDG_GRP_ID
     */
    public void setBdgGrpId(Integer value) {
        setAttributeInternal(BDGGRPID, value);
    }

    /**
     * Gets the attribute value for FY_END_DT using the alias name FyEndDt.
     * @return the FY_END_DT
     */
    public Timestamp getFyEndDt() {
        return (Timestamp) getAttributeInternal(FYENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_END_DT using the alias name FyEndDt.
     * @param value value to set the FY_END_DT
     */
    public void setFyEndDt(Timestamp value) {
        setAttributeInternal(FYENDDT, value);
    }

    /**
     * Gets the attribute value for FY_START_DT using the alias name FyStartDt.
     * @return the FY_START_DT
     */
    public Timestamp getFyStartDt() {
        return (Timestamp) getAttributeInternal(FYSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_START_DT using the alias name FyStartDt.
     * @param value value to set the FY_START_DT
     */
    public void setFyStartDt(Timestamp value) {
        setAttributeInternal(FYSTARTDT, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @return the CURR_CONV_RATE
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @param value value to set the CURR_CONV_RATE
     */
    public void setCurrConvRate(Number value) {
        setAttributeInternal(CURRCONVRATE, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNameTrans.
     * @return the CurrNameTrans
     */
    public String getCurrNameTrans() {
        if (getAttributeInternal(CURRNAMETRANS) == null && this.getCurrIdSp() != null) {
            ViewObjectImpl currVO1 = getAm().getLOVCurrIdVO1();
            currVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            currVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            currVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            currVO1.setNamedWhereClauseParam("BindCurrId", this.getCurrIdSp());
            currVO1.executeQuery();
            Row[] allRowsInRange = currVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                setcurrBsNotTrans(allRowsInRange[0].getAttribute("CurrNotationAliasTxn").toString());
                return (String) allRowsInRange[0].getAttribute("CurrDescTxn");
            }
        }
        return (String) getAttributeInternal(CURRNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNameTrans.
     * @param value value to set the  CurrNameTrans
     */
    public void setCurrNameTrans(String value) {
        setAttributeInternal(CURRNAMETRANS, value);
    }


    /**
     * Gets the attribute value for COPY_PRD_END_DT using the alias name CopyPrdEndDt.
     * @return the COPY_PRD_END_DT
     */
    public Timestamp getCopyPrdEndDt() {
        return (Timestamp) getAttributeInternal(COPYPRDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for COPY_PRD_END_DT using the alias name CopyPrdEndDt.
     * @param value value to set the COPY_PRD_END_DT
     */
    public void setCopyPrdEndDt(Timestamp value) {
        setAttributeInternal(COPYPRDENDDT, value);
    }

    /**
     * Gets the attribute value for COPY_PRD_START_DT using the alias name CopyPrdStartDt.
     * @return the COPY_PRD_START_DT
     */
    public Timestamp getCopyPrdStartDt() {
        return (Timestamp) getAttributeInternal(COPYPRDSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for COPY_PRD_START_DT using the alias name CopyPrdStartDt.
     * @param value value to set the COPY_PRD_START_DT
     */
    public void setCopyPrdStartDt(Timestamp value) {
        setAttributeInternal(COPYPRDSTARTDT, value);
    }

    /**
     * Gets the attribute value for COPY_PREV_FY_FLG using the alias name CopyPrevFyFlg.
     * @return the COPY_PREV_FY_FLG
     */
    public String getCopyPrevFyFlg() {
        return (String) getAttributeInternal(COPYPREVFYFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for COPY_PREV_FY_FLG using the alias name CopyPrevFyFlg.
     * @param value value to set the COPY_PREV_FY_FLG
     */
    public void setCopyPrevFyFlg(String value) {
        setAttributeInternal(COPYPREVFYFLG, value);
    }

    /**
     * Gets the attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @return the BDG_FY_ID
     */
    public Integer getBdgFyId() {
        //System.out.println("Budget Fy Id Is " + getAttributeInternal(BDGFYID));
        return (Integer) getAttributeInternal(BDGFYID);
    }

    /**
     * Sets <code>value</code> as attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @param value value to set the BDG_FY_ID
     */
    public void setBdgFyId(Integer value) {
        setAttributeInternal(BDGFYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddDetailItemAmtSpTrans.
     * @return the AddDetailItemAmtSpTrans
     */
    public Number getAddDetailItemAmtBsTrans() {
        ViewObjectImpl bdgEoBudgetProdDtlVO1 = getAm().getBdgEoBudgetProdDtlVO1();
        bdgEoBudgetProdDtlVO1.setRangeSize(-1);
        Number val = new Number(0);
        Row[] allRowsInRange = bdgEoBudgetProdDtlVO1.getAllRowsInRange();
        if (allRowsInRange.length > 0) {
            for (int i = 0; i < allRowsInRange.length; i++) {
                if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                    val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                }
            }
        }
        return val;
        //return (Number) getAttributeInternal(ADDDETAILITEMAMTBSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddDetailItemAmtSpTrans.
     * @param value value to set the  AddDetailItemAmtSpTrans
     */
    public void setAddDetailItemAmtBsTrans(Number value) {
        setAttributeInternal(ADDDETAILITEMAMTBSTRANS, value);
    }

    /**
     * Gets the attribute value for BUDGET_STAT using the alias name BudgetStat.
     * @return the BUDGET_STAT
     */
    public Integer getBudgetStat() {
        return (Integer) getAttributeInternal(BUDGETSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_STAT using the alias name BudgetStat.
     * @param value value to set the BUDGET_STAT
     */
    public void setBudgetStat(Integer value) {
        setAttributeInternal(BUDGETSTAT, value);
    }

    /**
     * Gets the attribute value for FREEZE_FLG using the alias name FreezeFlg.
     * @return the FREEZE_FLG
     */
    public String getFreezeFlg() {
        return (String) getAttributeInternal(FREEZEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for FREEZE_FLG using the alias name FreezeFlg.
     * @param value value to set the FREEZE_FLG
     */
    public void setFreezeFlg(String value) {
        setAttributeInternal(FREEZEFLG, value);
    }

    /**
     * Gets the attribute value for PROP_BUDG_AMT using the alias name PropBudgAmt.
     * @return the PROP_BUDG_AMT
     */
    public Number getPropBudgAmt() {
        return (Number) getAttributeInternal(PROPBUDGAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for PROP_BUDG_AMT using the alias name PropBudgAmt.
     * @param value value to set the PROP_BUDG_AMT
     */
    public void setPropBudgAmt(Number value) {
        setAttributeInternal(PROPBUDGAMT, value);
    }

    /**
     * Gets the attribute value for MGR_BUDG_AMT using the alias name MgrBudgAmt.
     * @return the MGR_BUDG_AMT
     */
    public Number getMgrBudgAmt() {
        return (Number) getAttributeInternal(MGRBUDGAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for MGR_BUDG_AMT using the alias name MgrBudgAmt.
     * @param value value to set the MGR_BUDG_AMT
     */
    public void setMgrBudgAmt(Number value) {
        setAttributeInternal(MGRBUDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiffInAmtTrans.
     * @return the DiffInAmtTrans
     */
    public Number getDiffInAmtTrans() {
        if (this.getBudgAmt() != null && this.getMgrBudgAmt() != null) {
            if (getMgrBudgAmt().compareTo(getBudgAmt()) >= 0) {
                return getMgrBudgAmt().subtract(getBudgAmt());
            } else {
                return getBudgAmt().subtract(getMgrBudgAmt());
            }
        } else if (this.getBudgAmt() != null && this.getMgrBudgAmt() == null) {
            return getBudgAmt();
        } else if (this.getBudgAmt() == null && this.getMgrBudgAmt() != null) {
            return getMgrBudgAmt();
        }
        return (Number) getAttributeInternal(DIFFINAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiffInAmtTrans.
     * @param value value to set the  DiffInAmtTrans
     */
    public void setDiffInAmtTrans(Number value) {
        setAttributeInternal(DIFFINAMTTRANS, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DispAuthLinkTrans.
     * @return the DispAuthLinkTrans
     */
    public String getDispAuthLinkTrans() {
        if (getAttributeInternal(DISPAUTHLINKTRANS) == null && resolvEl("#{pageFlowScope.P_EMP_CODE}") != null &&
            this.getEoId() != null) {
            ViewObjectImpl detailVO1 = this.getAm().getGetImmediateSubOrdVO1();
            detailVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            detailVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            detailVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            detailVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            detailVO1.setNamedWhereClauseParam("BindMgrCode", resolvEl("#{pageFlowScope.P_EMP_CODE}"));

            detailVO1.executeQuery();
            detailVO1.setRangeSize(-1);

            Row[] allRowsInRange = detailVO1.getAllRowsInRange();
            /*  System.out.println("Allrows is >" + allRowsInRange.length + " --- " +
                               resolvEl("#{pageFlowScope.P_EMP_CODE}")); */
            for (int i = 0; i < allRowsInRange.length; i++) {
                if (allRowsInRange[i].getAttribute("EmpCode").equals(this.getEoId())) {
                    if (this.getBudgetStat() != 1) {
                        //System.out.println("Inside Return value");
                        return "Y";
                    }
                }
            }
        }
        return "N";
        //return (String) getAttributeInternal(DISPAUTHLINKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DispAuthLinkTrans.
     * @param value value to set the  DispAuthLinkTrans
     */
    public void setDispAuthLinkTrans(String value) {
        setAttributeInternal(DISPAUTHLINKTRANS, value);
    }

    /**
     * Gets the attribute value for FRZ_REMARKS using the alias name FrzRemarks.
     * @return the FRZ_REMARKS
     */
    public String getFrzRemarks() {
        return (String) getAttributeInternal(FRZREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for FRZ_REMARKS using the alias name FrzRemarks.
     * @param value value to set the FRZ_REMARKS
     */
    public void setFrzRemarks(String value) {
        setAttributeInternal(FRZREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FreezeDisplayTrans.
     * @return the FreezeDisplayTrans
     */
    public String getFreezeDisplayTrans() {
        if (getAttributeInternal(FREEZEDISPLAYTRANS) == null && resolvEl("#{pageFlowScope.P_EMP_CODE}") != null &&
            this.getEoId() != null) {
            ViewObjectImpl dtlVO1 = this.getAm().getImmediateSubOrdDtlVO1();

            dtlVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            dtlVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            dtlVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            dtlVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            dtlVO1.setNamedWhereClauseParam("BindEmpId", this.getEoId());
            dtlVO1.setNamedWhereClauseParam("BindPrdStDate", this.getPrdStartDt());
            dtlVO1.setNamedWhereClauseParam("BindPrdEndDate", this.getPrdEndDt());
            dtlVO1.executeQuery();
            dtlVO1.setRangeSize(-1);

            Row[] allRowsInRange = dtlVO1.getAllRowsInRange();
            //System.out.println("Allrows is >" + allRowsInRange.length);
            for (int i = 0; i < allRowsInRange.length; i++) {
                if (allRowsInRange[i].getAttribute("FreezeFlag").toString().equalsIgnoreCase("Y")) {
                    //System.out.println("Inside Return value");
                    return "Y";
                }
            }
        }
        return "N";
        //return (String) getAttributeInternal(FREEZEDISPLAYTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FreezeDisplayTrans.
     * @param value value to set the  FreezeDisplayTrans
     */
    public void setFreezeDisplayTrans(String value) {
        setAttributeInternal(FREEZEDISPLAYTRANS, value);
    }

    /**
     * Gets the attribute value for DISTB_METHD using the alias name DistbMethd.
     * @return the DISTB_METHD
     */
    public Integer getDistbMethd() {
        return (Integer) getAttributeInternal(DISTBMETHD);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_METHD using the alias name DistbMethd.
     * @param value value to set the DISTB_METHD
     */
    public void setDistbMethd(Integer value) {
        setAttributeInternal(DISTBMETHD, value);
    }

    /**
     * Gets the attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @return the DISTB_PRD_BASIS
     */
    public Integer getDistbPrdBasis() {
        return (Integer) getAttributeInternal(DISTBPRDBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @param value value to set the DISTB_PRD_BASIS
     */
    public void setDistbPrdBasis(Integer value) {
        setAttributeInternal(DISTBPRDBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RegionNameTrans.
     * @return the RegionNameTrans
     */
    public String getRegionNameTrans() {
        if (getAttributeInternal(REGIONNAMETRANS) == null && this.getRegion() != null) {
            ViewObjectImpl impl = getAm().getLOVLocationNmVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindLocId", this.getRegion());
            impl.executeQuery();

            Row[] allRowsInRange = impl.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("ParamDesc");
            }
        }
        return (String) getAttributeInternal(REGIONNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RegionNameTrans.
     * @param value value to set the  RegionNameTrans
     */
    public void setRegionNameTrans(String value) {
        setAttributeInternal(REGIONNAMETRANS, value);
    }

    /**
     * Gets the attribute value for DISTB_SEL_TYPE using the alias name DistbSelType.
     * @return the DISTB_SEL_TYPE
     */
    public String getDistbSelType() {
        return (String) getAttributeInternal(DISTBSELTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_SEL_TYPE using the alias name DistbSelType.
     * @param value value to set the DISTB_SEL_TYPE
     */
    public void setDistbSelType(String value) {
        setAttributeInternal(DISTBSELTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnFreezeTrans.
     * @return the UnFreezeTrans
     */
    public String getUnFreezeTrans() {
        if (getAttributeInternal(UNFREEZETRANS) == null && this.getCurrentLoginUserId() != null) {

            //// Following VO will check whether Current User who login have any supervisor or not
            ViewObjectImpl codeVO1 = this.getAm().getGetEmployeeCodeVO1();
            codeVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            codeVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            codeVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            codeVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            codeVO1.setNamedWhereClauseParam("BindUserId", this.getCurrentLoginUserId());

            codeVO1.executeQuery();

            Row[] allRowsInRange = codeVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {

                //// Following Code will checck whether manager Id is present for User who login
                Object mgrCode = allRowsInRange[0].getAttribute("MgrCode");
                if (mgrCode != null) {

                    // Following VO will retrive all the budget sets based upon the manager Id
                    ViewObjectImpl budgetSetsVO1 = this.getAm().getGetSelfEOBudgetSetsVO1();
                    budgetSetsVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
                    budgetSetsVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                    budgetSetsVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
                    budgetSetsVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
                    budgetSetsVO1.setNamedWhereClauseParam("BindEoId", mgrCode);
                    budgetSetsVO1.setNamedWhereClauseParam("BindPrdStDate", this.getPrdStartDt());
                    budgetSetsVO1.setNamedWhereClauseParam("BindPrdEndDate", this.getPrdEndDt());

                    budgetSetsVO1.executeQuery();

                    budgetSetsVO1.setRangeSize(-1);

                    Integer count = 0;

                    Row[] inRange = budgetSetsVO1.getAllRowsInRange();

                    //// Following Loop will check whether budget set have been freezed or not
                    for (Row r : inRange) {
                        if (r.getAttribute("FreezeFlg") != null &&
                            r.getAttribute("FreezeFlg").toString().equalsIgnoreCase("Y")) {
                            count++;
                        }
                    }

                    /// If budget Set is freezed it will return 'N' else 'Y'
                    if (count > 0) {
                        return "N";
                    } else {
                        return "Y";
                    }
                } else { /// Following will return when user who login dont have any supervisor

                    return "Y";
                }
            }
        }
        return "N";
        //return (String) getAttributeInternal(UNFREEZETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnFreezeTrans.
     * @param value value to set the  UnFreezeTrans
     */
    public void setUnFreezeTrans(String value) {
        setAttributeInternal(UNFREEZETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotDistributedAmtTrans.
     * @return the TotDistributedAmtTrans
     */
    public Number getTotDistributedAmtTrans() {
        //if (getAttributeInternal(TOTDISTRIBUTEDAMTTRANS) == null) {
        Number disbBdgAmt = new Number(0);

        ViewObjectImpl bdgEoBudgetPrdDtlVO1 = this.getAm().getBdgEoBudgetPrdDtlVO1();
        Row[] allRowsInRange = bdgEoBudgetPrdDtlVO1.getAllRowsInRange();
        if (allRowsInRange.length > 0) {
            RowSetIterator rsi = bdgEoBudgetPrdDtlVO1.createRowSetIterator(null);
            while (rsi.hasNext()) {
                Row next = rsi.next();
                disbBdgAmt = disbBdgAmt.add((Number) next.getAttribute("BudgAmtSp"));
            }
            if (rsi != null) {
                rsi.closeRowSetIterator();
            }
        }
        return disbBdgAmt;
        //}
        //return (Number) getAttributeInternal(TOTDISTRIBUTEDAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotDistributedAmtTrans.
     * @param value value to set the  TotDistributedAmtTrans
     */
    public void setTotDistributedAmtTrans(Number value) {
        setAttributeInternal(TOTDISTRIBUTEDAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotDistributedPerTrans.
     * @return the TotDistributedPerTrans
     */
    public Number getTotDistributedPerTrans() {
        if (getAttributeInternal(TOTDISTRIBUTEDPERTRANS) == null) {
            Number disbBdgPer = new Number(0);

            ViewObjectImpl bdgEoBudgetPrdDtlVO1 = this.getAm().getBdgEoBudgetPrdDtlVO1();
            Row[] allRowsInRange = bdgEoBudgetPrdDtlVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                RowSetIterator rsi = bdgEoBudgetPrdDtlVO1.createRowSetIterator(null);
                while (rsi.hasNext()) {
                    Row next = rsi.next();
                    disbBdgPer = disbBdgPer.add((Number) next.getAttribute("PerBdgAmtTrans"));
                }
                if (rsi != null) {
                    rsi.closeRowSetIterator();
                }
            }
            return disbBdgPer;
        }
        return (Number) getAttributeInternal(TOTDISTRIBUTEDPERTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotDistributedPerTrans.
     * @param value value to set the  TotDistributedPerTrans
     */
    public void setTotDistributedPerTrans(Number value) {
        setAttributeInternal(TOTDISTRIBUTEDPERTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgAmtNotaTrans.
     * @return the BudgAmtNotaTrans
     */
    public Number getBudgAmtNotaTrans() {
        if (getAttributeInternal(BUDGAMTNOTATRANS) == null && this.getBudgAmt() != null) {
            return this.getAm().convertNumberToNotation(getBudgAmt());
        }
        return (Number) getAttributeInternal(BUDGAMTNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgAmtNotaTrans.
     * @param value value to set the  BudgAmtNotaTrans
     */
    public void setBudgAmtNotaTrans(Number value) {
        setAttributeInternal(BUDGAMTNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CopiedBudgAmtNotaTrans.
     * @return the CopiedBudgAmtNotaTrans
     */
    public Number getCopiedBudgAmtNotaTrans() {
        if (getAttributeInternal(COPIEDBUDGAMTNOTATRANS) == null && this.getCopiedBudgAmt() != null) {
            return this.getAm().convertNumberToNotation(getCopiedBudgAmt());
        }
        return (Number) getAttributeInternal(COPIEDBUDGAMTNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CopiedBudgAmtNotaTrans.
     * @param value value to set the  CopiedBudgAmtNotaTrans
     */
    public void setCopiedBudgAmtNotaTrans(Number value) {
        setAttributeInternal(COPIEDBUDGAMTNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MgrBudgAmtNotaTrans.
     * @return the MgrBudgAmtNotaTrans
     */
    public Number getMgrBudgAmtNotaTrans() {
        if (getAttributeInternal(MGRBUDGAMTNOTATRANS) == null && this.getMgrBudgAmt() != null) {
            return this.getAm().convertNumberToNotation(getMgrBudgAmt());
        }
        return (Number) getAttributeInternal(MGRBUDGAMTNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MgrBudgAmtNotaTrans.
     * @param value value to set the  MgrBudgAmtNotaTrans
     */
    public void setMgrBudgAmtNotaTrans(Number value) {
        setAttributeInternal(MGRBUDGAMTNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotDistributedAmtNotaTrans.
     * @return the TotDistributedAmtNotaTrans
     */
    public Number getTotDistributedAmtNotaTrans() {
        //if (getAttributeInternal(TOTDISTRIBUTEDAMTNOTATRANS) == null) {
        Number disbBdgAmt = new Number(0);

        ViewObjectImpl bdgEoBudgetPrdDtlVO1 = this.getAm().getBdgEoBudgetPrdDtlVO1();
        Row[] allRowsInRange = bdgEoBudgetPrdDtlVO1.getAllRowsInRange();
        if (allRowsInRange.length > 0) {
            RowSetIterator rsi = bdgEoBudgetPrdDtlVO1.createRowSetIterator(null);
            while (rsi.hasNext()) {
                Row next = rsi.next();
                disbBdgAmt = disbBdgAmt.add((Number) next.getAttribute("BudgAmtSp"));
            }
            if (rsi != null) {
                rsi.closeRowSetIterator();
            }
        }
        return this.getAm().convertNumberToNotation(disbBdgAmt);
        //}
        //return (Number) getAttributeInternal(TOTDISTRIBUTEDAMTNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotDistributedAmtNotaTrans.
     * @param value value to set the  TotDistributedAmtNotaTrans
     */
    public void setTotDistributedAmtNotaTrans(Number value) {
        setAttributeInternal(TOTDISTRIBUTEDAMTNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DiffInAmtNotaTrans.
     * @return the DiffInAmtNotaTrans
     */
    public Number getDiffInAmtNotaTrans() {
        if (getAttributeInternal(DIFFINAMTNOTATRANS) == null && this.getDiffInAmtTrans() != null) {
            return this.getAm().convertNumberToNotation(getDiffInAmtTrans());
        }
        return (Number) getAttributeInternal(DIFFINAMTNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DiffInAmtNotaTrans.
     * @param value value to set the  DiffInAmtNotaTrans
     */
    public void setDiffInAmtNotaTrans(Number value) {
        setAttributeInternal(DIFFINAMTNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FYBasisTrans.
     * @return the FYBasisTrans
     */
    public Integer getFYBasisTrans() {
        if (getAttributeInternal(FYBASISTRANS) == null && this.getCopyPrdStartDt() != null) {
            ViewObjectImpl fYYearVO1 = this.getAm().getLOVFYYearVO1();
            fYYearVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            fYYearVO1.setNamedWhereClauseParam("BindFyStDate", this.getCopyPrdStartDt());
            fYYearVO1.setNamedWhereClauseParam("BindFyId", null);
            fYYearVO1.executeQuery();

            Row[] allRowsInRange = fYYearVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (Integer) allRowsInRange[0].getAttribute("FyId");
            }
        }
        return (Integer) getAttributeInternal(FYBASISTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FYBasisTrans.
     * @param value value to set the  FYBasisTrans
     */
    public void setFYBasisTrans(Integer value) {
        setAttributeInternal(FYBASISTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RevisionMethTrans.
     * @return the RevisionMethTrans
     */
    public Integer getRevisionMethTrans() {
        return (Integer) getAttributeInternal(REVISIONMETHTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RevisionMethTrans.
     * @param value value to set the  RevisionMethTrans
     */
    public void setRevisionMethTrans(Integer value) {
        setAttributeInternal(REVISIONMETHTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RevisionTypTrans.
     * @return the RevisionTypTrans
     */
    public String getRevisionTypTrans() {
        return (String) getAttributeInternal(REVISIONTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RevisionTypTrans.
     * @param value value to set the  RevisionTypTrans
     */
    public void setRevisionTypTrans(String value) {
        setAttributeInternal(REVISIONTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RevisionTypValTrans.
     * @return the RevisionTypValTrans
     */
    public Number getRevisionTypValTrans() {
        return (Number) getAttributeInternal(REVISIONTYPVALTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RevisionTypValTrans.
     * @param value value to set the  RevisionTypValTrans
     */
    public void setRevisionTypValTrans(Number value) {
        setAttributeInternal(REVISIONTYPVALTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RemarksTrans.
     * @return the RemarksTrans
     */
    public String getRemarksTrans() {
        return (String) getAttributeInternal(REMARKSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RemarksTrans.
     * @param value value to set the  RemarksTrans
     */
    public void setRemarksTrans(String value) {
        setAttributeInternal(REMARKSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DispColorDiffInAmtTrans.
     * @return the DispColorDiffInAmtTrans
     */
    public Integer getDispColorDiffInAmtTrans() {
        if (getAttributeInternal(DISPCOLORDIFFINAMTTRANS) == null) {
            if (this.getBudgAmt() != null && this.getMgrBudgAmt() != null) {
                if (getMgrBudgAmt().compareTo(getBudgAmt()) >= 0) {
                    return 1;
                } else {
                    return -1;
                }
            } else if (this.getBudgAmt() != null && this.getMgrBudgAmt() == null) {
                return -1;
            } else if (this.getBudgAmt() == null && this.getMgrBudgAmt() != null) {
                return 1;
            }
        }
        return (Integer) getAttributeInternal(DISPCOLORDIFFINAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DispColorDiffInAmtTrans.
     * @param value value to set the  DispColorDiffInAmtTrans
     */
    public void setDispColorDiffInAmtTrans(Integer value) {
        setAttributeInternal(DISPCOLORDIFFINAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChkManagerTrans.
     * @return the ChkManagerTrans
     */
    public String getChkManagerTrans() {
        if (getAttributeInternal(CHKMANAGERTRANS) == null && this.getCurrentLoginUserId() != null) {
            //// Following VO will check whether Current User who login have any supervisor or not
            ViewObjectImpl codeVO1 = this.getAm().getGetEmployeeCodeVO1();
            codeVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            codeVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            codeVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            codeVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            codeVO1.setNamedWhereClauseParam("BindUserId", this.getCurrentLoginUserId());

            codeVO1.executeQuery();

            Row[] allRowsInRange = codeVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {

                //// Following Code will checck whether manager Id is present for User who login
                Object mgrCode = allRowsInRange[0].getAttribute("MgrCode");

                if (mgrCode != null) {
                    return "N";
                }
            }
        }
        return "Y";
        //return (String) getAttributeInternal(CHKMANAGERTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChkManagerTrans.
     * @param value value to set the  ChkManagerTrans
     */
    public void setChkManagerTrans(String value) {
        setAttributeInternal(CHKMANAGERTRANS, value);
    }

    /**
     * Gets the attribute value for BUDGET_NM using the alias name BudgetNm.
     * @return the BUDGET_NM
     */
    public String getBudgetNm() {
        return (String) getAttributeInternal(BUDGETNM);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_NM using the alias name BudgetNm.
     * @param value value to set the BUDGET_NM
     */
    public void setBudgetNm(String value) {
        setAttributeInternal(BUDGETNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgtAmtSpTrans.
     * @return the BudgtAmtSpTrans
     */
    public Number getBudgtAmtSpTrans() {
        //    if (null == getAttributeInternal(BUDGTAMTSPTRANS)) {
        BdgEoProfileAMImpl am = (BdgEoProfileAMImpl) this.getApplicationModule();
        ViewObjectImpl vo = am.getBdgEoBudgetProdDtlVO1();
        RowSetIterator itr = vo.createRowSetIterator(null);
        Number count = new Number(0);
        while (itr.hasNext()) {
            Row next = itr.next();
            Object attribute = next.getAttribute("ItmAmtSp");
            if (attribute != null) {
                count = count.add((Number) attribute);
            }
        }
        itr.closeRowSetIterator();
        return count;
        //     }
        //   return (Number) getAttributeInternal(BUDGTAMTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgtAmtSpTrans.
     * @param value value to set the  BudgtAmtSpTrans
     */
    public void setBudgtAmtSpTrans(Number value) {
        setAttributeInternal(BUDGTAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgAmtSpNotaTrans.
     * @return the BudgAmtSpNotaTrans
     */
    public Number getBudgAmtSpNotaTrans() {
        if (getAttributeInternal(BUDGAMTSPNOTATRANS) == null && this.getBudgtAmtSpTrans() != null) {
            return this.getAm().convertNumberToNotation(getBudgtAmtSpTrans());
        }
        return (Number) getAttributeInternal(BUDGAMTSPNOTATRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgAmtSpNotaTrans.
     * @param value value to set the  BudgAmtSpNotaTrans
     */
    public void setBudgAmtSpNotaTrans(Number value) {
        setAttributeInternal(BUDGAMTSPNOTATRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute currBsNotTrans.
     * @return the currBsNotTrans
     */
    public String getcurrBsNotTrans() {
        if (null == getAttributeInternal(CURRBSNOTTRANS)) {
            getCurrNameTrans();
        }
        return (String) getAttributeInternal(CURRBSNOTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute currBsNotTrans.
     * @param value value to set the  currBsNotTrans
     */
    public void setcurrBsNotTrans(String value) {
        setAttributeInternal(CURRBSNOTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ImmSubOrdinateTrans.
     * @return the ImmSubOrdinateTrans
     */
    public Boolean getImmSubOrdinateTrans() {
        if (resolvEl("#{pageFlowScope.P_EMP_CODE}") != null && this.getEoId() != null) {
            if (Integer.parseInt(resolvEl("#{pageFlowScope.P_EMP_CODE}")) == this.getEoId()) {
                return false;
            } else {
                return true;
            }
        }
        return true;
        //return (Boolean) getAttributeInternal(IMMSUBORDINATETRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgtAmtBsTrans.
     * @return the BudgtAmtBsTrans
     */
    public Number getBudgtAmtBsTrans() {
        BdgEoProfileAMImpl am = (BdgEoProfileAMImpl) this.getApplicationModule();
        ViewObjectImpl vo = am.getBdgEoBudgetProdDtlVO1();
        RowSetIterator itr = vo.createRowSetIterator(null);
        Number count = new Number(0);
        while (itr.hasNext()) {
            Row next = itr.next();
            Object attribute = next.getAttribute("ItmAmtBs");
            if (attribute != null) {
                count = count.add((Number) attribute);
            }
        }
        itr.closeRowSetIterator();
        return count;

        //return (Number) getAttributeInternal(BUDGTAMTBSTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgAmtBsNotaTrans.
     * @return the BudgAmtBsNotaTrans
     */
    public Number getBudgAmtBsNotaTrans() {
        if (getAttributeInternal(BUDGAMTBSNOTATRANS) == null && this.getBudgtAmtBsTrans() != null) {
            return this.getAm().convertNumberToNotation(getBudgtAmtBsTrans());
        }
        return (Number) getAttributeInternal(BUDGAMTBSNOTATRANS);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgEoBudgetProdDtl.
     */
    public RowIterator getBdgEoBudgetProdDtl() {
        return (RowIterator) getAttributeInternal(BDGEOBUDGETPRODDTL);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgEoBudgetPrdDtl.
     */
    public RowIterator getBdgEoBudgetPrdDtl() {
        return (RowIterator) getAttributeInternal(BDGEOBUDGETPRDDTL);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgEoBudgetProdPrdDtl.
     */
    public RowIterator getBdgEoBudgetProdPrdDtl() {
        return (RowIterator) getAttributeInternal(BDGEOBUDGETPRODPRDDTL);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserNameVO1.
     */
    public RowSet getLOVUserNameVO1() {
        return (RowSet) getAttributeInternal(LOVUSERNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserNameVO2.
     */
    public RowSet getLOVUserNameVO2() {
        return (RowSet) getAttributeInternal(LOVUSERNAMEVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgNameVO1.
     */
    public RowSet getLOVOrgNameVO1() {
        return (RowSet) getAttributeInternal(LOVORGNAMEVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVBdgMethodVO1.
     */
    public RowSet getLOVBdgMethodVO1() {
        return (RowSet) getAttributeInternal(LOVBDGMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoIdVO1.
     */
    public RowSet getLOVEoIdVO1() {
        return (RowSet) getAttributeInternal(LOVEOIDVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVBdgSourceVO1.
     */
    public RowSet getLOVBdgSourceVO1() {
        return (RowSet) getAttributeInternal(LOVBDGSOURCEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAmtSourceVO1.
     */
    public RowSet getLOVAmtSourceVO1() {
        return (RowSet) getAttributeInternal(LOVAMTSOURCEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRevisionTypeVO1.
     */
    public RowSet getLOVRevisionTypeVO1() {
        return (RowSet) getAttributeInternal(LOVREVISIONTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRevisionMethodVO1.
     */
    public RowSet getLOVRevisionMethodVO1() {
        return (RowSet) getAttributeInternal(LOVREVISIONMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBdgGrpIdVO1.
     */
    public RowSet getLOVBdgGrpIdVO1() {
        return (RowSet) getAttributeInternal(LOVBDGGRPIDVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrIdVO1.
     */
    public RowSet getLOVCurrIdVO1() {
        return (RowSet) getAttributeInternal(LOVCURRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCopyPreviousBdgTypeVO1.
     */
    public RowSet getLOVCopyPreviousBdgTypeVO1() {
        return (RowSet) getAttributeInternal(LOVCOPYPREVIOUSBDGTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStatusVO1.
     */
    public RowSet getLOVStatusVO1() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistubMethodVO1.
     */
    public RowSet getLOVDistubMethodVO1() {
        return (RowSet) getAttributeInternal(LOVDISTUBMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistributionPrdBasisVO1.
     */
    public RowSet getLOVDistributionPrdBasisVO1() {
        return (RowSet) getAttributeInternal(LOVDISTRIBUTIONPRDBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLocationNmVO1.
     */
    public RowSet getLOVLocationNmVO1() {
        return (RowSet) getAttributeInternal(LOVLOCATIONNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistSelTypeVO1.
     */
    public RowSet getLOVDistSelTypeVO1() {
        return (RowSet) getAttributeInternal(LOVDISTSELTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFyIdForSearchVO1.
     */
    public RowSet getLOVFyIdForSearchVO1() {
        return (RowSet) getAttributeInternal(LOVFYIDFORSEARCHVO1);
    }

    /**
     * Method will return Application Module App
     */
    public BdgEoProfileAMImpl getAm() {
        BdgEoProfileAMImpl am = (BdgEoProfileAMImpl) getApplicationModule();
        return am;
    }

    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Method which will get Current User Login Id
     */
    protected Integer getCurrentLoginUserId() {
        Integer loginId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        return loginId;
    }
}
