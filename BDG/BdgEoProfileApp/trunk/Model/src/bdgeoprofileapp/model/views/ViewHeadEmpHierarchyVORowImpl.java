package bdgeoprofileapp.model.views;

import bdgeoprofileapp.model.services.BdgEoProfileAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Feb 16 15:51:02 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ViewHeadEmpHierarchyVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        EoId,
        EoNm,
        MgrCode,
        UsrId,
        ViewEmpHierarchy;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EONM = AttributesEnum.EoNm.index();
    public static final int MGRCODE = AttributesEnum.MgrCode.index();
    public static final int USRID = AttributesEnum.UsrId.index();
    public static final int VIEWEMPHIERARCHY = AttributesEnum.ViewEmpHierarchy.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ViewHeadEmpHierarchyVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoNm.
     * @return the EoNm
     */
    public String getEoNm() {
        return (String) getAttributeInternal(EONM);
    }

    /**
     * Gets the attribute value for the calculated attribute MgrCode.
     * @return the MgrCode
     */
    public Integer getMgrCode() {
        return (Integer) getAttributeInternal(MGRCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrId.
     * @return the UsrId
     */
    public Integer getUsrId() {
        return (Integer) getAttributeInternal(USRID);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewEmpHierarchy.
     */
    public RowIterator getViewEmpHierarchy() {
        RowSet rs = (RowSet) getAttributeInternal(VIEWEMPHIERARCHY);
        rs.setNamedWhereClauseParam("BindCldId", this.getCldId());
        rs.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
        rs.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());

        Row currentRow = this.getAm().getTemporaryDataVO1().getCurrentRow();
        Object empName = currentRow.getAttribute("EmployeeNameTrans");
        if (empName != null && empName.toString().length() > 0) {
            rs.setNamedWhereClauseParam("BindEoName", empName);
        } else {
            rs.setNamedWhereClauseParam("BindEoName", null);
        }
        rs.executeQuery();

        RowSetIterator ri = rs.createRowSetIterator(null);
        //System.out.println("_______>>>>> " + ri.getAllRowsInRange().length + " *** " + empName);
        return ri;
        //return (RowIterator) getAttributeInternal(VIEWEMPHIERARCHY);
    }

    /**
     * Generalized function to call object of application module.
     */
    public BdgEoProfileAMImpl getAm() {
        BdgEoProfileAMImpl am = (BdgEoProfileAMImpl) getApplicationModule();
        return am;
    }
}
