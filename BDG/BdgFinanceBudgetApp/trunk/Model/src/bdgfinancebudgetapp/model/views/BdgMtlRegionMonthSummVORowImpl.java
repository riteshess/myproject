package bdgfinancebudgetapp.model.views;

import bdgfinancebudgetapp.model.services.BdgFinanceBudgetAMImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 04 11:40:12 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgMtlRegionMonthSummVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        Yr,
        Mth,
        PrdStartDt,
        PrdEndDt,
        PrdDtlStartDt,
        PrdDtlEndDt,
        ItmAmtBs,
        Region,
        ParamDesc,
        ItmAmtBsNotaTrans;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int YR = AttributesEnum.Yr.index();
    public static final int MTH = AttributesEnum.Mth.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDDTLSTARTDT = AttributesEnum.PrdDtlStartDt.index();
    public static final int PRDDTLENDDT = AttributesEnum.PrdDtlEndDt.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int PARAMDESC = AttributesEnum.ParamDesc.index();
    public static final int ITMAMTBSNOTATRANS = AttributesEnum.ItmAmtBsNotaTrans.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgMtlRegionMonthSummVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute Yr.
     * @return the Yr
     */
    public String getYr() {
        return (String) getAttributeInternal(YR);
    }

    /**
     * Gets the attribute value for the calculated attribute Mth.
     * @return the Mth
     */
    public String getMth() {
        return (String) getAttributeInternal(MTH);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdStartDt.
     * @return the PrdStartDt
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdEndDt.
     * @return the PrdEndDt
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdDtlStartDt.
     * @return the PrdDtlStartDt
     */
    public Timestamp getPrdDtlStartDt() {
        return (Timestamp) getAttributeInternal(PRDDTLSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdDtlEndDt.
     * @return the PrdDtlEndDt
     */
    public Timestamp getPrdDtlEndDt() {
        return (Timestamp) getAttributeInternal(PRDDTLENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Gets the attribute value for the calculated attribute Region.
     * @return the Region
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Gets the attribute value for the calculated attribute ParamDesc.
     * @return the ParamDesc
     */
    public String getParamDesc() {
        return (String) getAttributeInternal(PARAMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBsNotaTrans.
     * @return the ItmAmtBsNotaTrans
     */
    public Number getItmAmtBsNotaTrans() {
        if (getAttributeInternal(ITMAMTBSNOTATRANS) == null && this.getItmAmtBs() != null) {
            return this.getAm().convertNumberToNotation(getItmAmtBs());
        }
        return (Number) getAttributeInternal(ITMAMTBSNOTATRANS);
    }

    /**
     * Method will return Application Module App
     */
    public BdgFinanceBudgetAMImpl getAm() {
        BdgFinanceBudgetAMImpl am = (BdgFinanceBudgetAMImpl) getApplicationModule();
        return am;
    }
}
