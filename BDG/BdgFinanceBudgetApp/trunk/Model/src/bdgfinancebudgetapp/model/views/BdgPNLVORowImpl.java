package bdgfinancebudgetapp.model.views;

import java.math.BigDecimal;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 03 14:19:14 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgPNLVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        BudgetType,
        Particulars,
        BudgetTypeValue,
        PrdStartDt,
        PrdEndDt,
        CoaId,
        CoaNm,
        Totbal,
        TotalBalConditionTrans,
        TotalBalTrans;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int BUDGETTYPE = AttributesEnum.BudgetType.index();
    public static final int PARTICULARS = AttributesEnum.Particulars.index();
    public static final int BUDGETTYPEVALUE = AttributesEnum.BudgetTypeValue.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int TOTBAL = AttributesEnum.Totbal.index();
    public static final int TOTALBALCONDITIONTRANS = AttributesEnum.TotalBalConditionTrans.index();
    public static final int TOTALBALTRANS = AttributesEnum.TotalBalTrans.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgPNLVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetType.
     * @return the BudgetType
     */
    public Integer getBudgetType() {
        return (Integer) getAttributeInternal(BUDGETTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute Particulars.
     * @return the Particulars
     */
    public String getParticulars() {
        return (String) getAttributeInternal(PARTICULARS);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetTypeValue.
     * @return the BudgetTypeValue
     */
    public Integer getBudgetTypeValue() {
        return (Integer) getAttributeInternal(BUDGETTYPEVALUE);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdStartDt.
     * @return the PrdStartDt
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdEndDt.
     * @return the PrdEndDt
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Gets the attribute value for the calculated attribute Totbal.
     * @return the Totbal
     */
    public Number getTotbal() {
        return (Number) getAttributeInternal(TOTBAL);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalBalConditionTrans.
     * @return the TotalBalConditionTrans
     */
    public Integer getTotalBalConditionTrans() {
        if (this.getTotbal() != null && getAttributeInternal(TOTALBALCONDITIONTRANS) == null) {
            return this.getTotbal().compareTo(0);
        }
        return (Integer) getAttributeInternal(TOTALBALCONDITIONTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalBalConditionTrans.
     * @param value value to set the  TotalBalConditionTrans
     */
    public void setTotalBalConditionTrans(Integer value) {
        setAttributeInternal(TOTALBALCONDITIONTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalBalTrans.
     * @return the TotalBalTrans
     */
    public Number getTotalBalTrans() {
        if (this.getTotbal() != null && getAttributeInternal(TOTALBALTRANS) == null) {
            if (getTotalBalConditionTrans() != null && getTotalBalConditionTrans() == -1) {
                return new Number(-1).multiply(this.getTotbal());
            } else {
                return this.getTotbal();
            }
        }
        return (Number) getAttributeInternal(TOTALBALTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalBalTrans.
     * @param value value to set the  TotalBalTrans
     */
    public void setTotalBalTrans(Number value) {
        setAttributeInternal(TOTALBALTRANS, value);
    }
}

