package bdgfinancebudgetapp.model.views;

import bdgfinancebudgetapp.model.entities.BdgFinBudgetEOImpl;
import bdgfinancebudgetapp.model.services.BdgFinanceBudgetAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 16 18:03:47 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgFinBudgetVORowImpl extends ViewRowImpl {


    public static final int ENTITY_BDGFINBUDGETEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        BdgFyId,
        BudgAmt,
        BudgetId,
        BudgetNm,
        BudgetSet,
        BudgetStat,
        CldId,
        CurrConvRate,
        CurrIdSp,
        DocId,
        EoId,
        FreezeFlg,
        FyEndDt,
        FyId,
        FyStartDt,
        HoOrgId,
        OrgId,
        PrdEndDt,
        PrdStartDt,
        Region,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        CurrNameTrans,
        EoNameTrans,
        RegionNameTrans,
        TotSalesBdgTrans,
        TotMatBdgTrans,
        TotOthersAmtTrans,
        TotalAmtTrans,
        TotRevenueTrans,
        TotExpenseTrans,
        DistbMethd,
        DistbPrdBasis,
        TotRevenueAmtNotaTrans,
        TotExpenseAmtNotaTrans,
        TotalNotaAmtTrans,
        TransIsCostCenterAvl,
        BdgFinBudgetDtl,
        BdgFinBudgetPrdDtl,
        MaterialBudgetDtl,
        HeadRegionForPNL,
        HeadEmpDtlsForPNLSumm,
        HeadOthersRegionForPNL,
        HeadOthersEmpDtlsForPNLSumm,
        HeadCustomerForPNL,
        HeadOthersCustomerForPNL,
        BdgSalesDistribution,
        BdgMaterialDistribution,
        BdgFinBudgetFlexiFlds,
        LovStatusVO1,
        LOVCurrIdVO1,
        LOVOrgNameVO1,
        LOVEoIdVO1,
        LOVLocationNmVO1,
        LOVDistubMethodVO1,
        LOVDistributionPrdBasisVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BDGFYID = AttributesEnum.BdgFyId.index();
    public static final int BUDGAMT = AttributesEnum.BudgAmt.index();
    public static final int BUDGETID = AttributesEnum.BudgetId.index();
    public static final int BUDGETNM = AttributesEnum.BudgetNm.index();
    public static final int BUDGETSET = AttributesEnum.BudgetSet.index();
    public static final int BUDGETSTAT = AttributesEnum.BudgetStat.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int FREEZEFLG = AttributesEnum.FreezeFlg.index();
    public static final int FYENDDT = AttributesEnum.FyEndDt.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int FYSTARTDT = AttributesEnum.FyStartDt.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CURRNAMETRANS = AttributesEnum.CurrNameTrans.index();
    public static final int EONAMETRANS = AttributesEnum.EoNameTrans.index();
    public static final int REGIONNAMETRANS = AttributesEnum.RegionNameTrans.index();
    public static final int TOTSALESBDGTRANS = AttributesEnum.TotSalesBdgTrans.index();
    public static final int TOTMATBDGTRANS = AttributesEnum.TotMatBdgTrans.index();
    public static final int TOTOTHERSAMTTRANS = AttributesEnum.TotOthersAmtTrans.index();
    public static final int TOTALAMTTRANS = AttributesEnum.TotalAmtTrans.index();
    public static final int TOTREVENUETRANS = AttributesEnum.TotRevenueTrans.index();
    public static final int TOTEXPENSETRANS = AttributesEnum.TotExpenseTrans.index();
    public static final int DISTBMETHD = AttributesEnum.DistbMethd.index();
    public static final int DISTBPRDBASIS = AttributesEnum.DistbPrdBasis.index();
    public static final int TOTREVENUEAMTNOTATRANS = AttributesEnum.TotRevenueAmtNotaTrans.index();
    public static final int TOTEXPENSEAMTNOTATRANS = AttributesEnum.TotExpenseAmtNotaTrans.index();
    public static final int TOTALNOTAAMTTRANS = AttributesEnum.TotalNotaAmtTrans.index();
    public static final int TRANSISCOSTCENTERAVL = AttributesEnum.TransIsCostCenterAvl.index();
    public static final int BDGFINBUDGETDTL = AttributesEnum.BdgFinBudgetDtl.index();
    public static final int BDGFINBUDGETPRDDTL = AttributesEnum.BdgFinBudgetPrdDtl.index();
    public static final int MATERIALBUDGETDTL = AttributesEnum.MaterialBudgetDtl.index();
    public static final int HEADREGIONFORPNL = AttributesEnum.HeadRegionForPNL.index();
    public static final int HEADEMPDTLSFORPNLSUMM = AttributesEnum.HeadEmpDtlsForPNLSumm.index();
    public static final int HEADOTHERSREGIONFORPNL = AttributesEnum.HeadOthersRegionForPNL.index();
    public static final int HEADOTHERSEMPDTLSFORPNLSUMM = AttributesEnum.HeadOthersEmpDtlsForPNLSumm.index();
    public static final int HEADCUSTOMERFORPNL = AttributesEnum.HeadCustomerForPNL.index();
    public static final int HEADOTHERSCUSTOMERFORPNL = AttributesEnum.HeadOthersCustomerForPNL.index();
    public static final int BDGSALESDISTRIBUTION = AttributesEnum.BdgSalesDistribution.index();
    public static final int BDGMATERIALDISTRIBUTION = AttributesEnum.BdgMaterialDistribution.index();
    public static final int BDGFINBUDGETFLEXIFLDS = AttributesEnum.BdgFinBudgetFlexiFlds.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LovStatusVO1.index();
    public static final int LOVCURRIDVO1 = AttributesEnum.LOVCurrIdVO1.index();
    public static final int LOVORGNAMEVO1 = AttributesEnum.LOVOrgNameVO1.index();
    public static final int LOVEOIDVO1 = AttributesEnum.LOVEoIdVO1.index();
    public static final int LOVLOCATIONNMVO1 = AttributesEnum.LOVLocationNmVO1.index();
    public static final int LOVDISTUBMETHODVO1 = AttributesEnum.LOVDistubMethodVO1.index();
    public static final int LOVDISTRIBUTIONPRDBASISVO1 = AttributesEnum.LOVDistributionPrdBasisVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgFinBudgetVORowImpl() {
    }

    /**
     * Gets BdgFinBudgetEO entity object.
     * @return the BdgFinBudgetEO
     */
    public BdgFinBudgetEOImpl getBdgFinBudgetEO() {
        return (BdgFinBudgetEOImpl) getEntity(ENTITY_BDGFINBUDGETEO);
    }

    /**
     * Gets the attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @return the BDG_FY_ID
     */
    public Integer getBdgFyId() {
        return (Integer) getAttributeInternal(BDGFYID);
    }

    /**
     * Sets <code>value</code> as attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @param value value to set the BDG_FY_ID
     */
    public void setBdgFyId(Integer value) {
        setAttributeInternal(BDGFYID, value);
    }

    /**
     * Gets the attribute value for BUDG_AMT using the alias name BudgAmt.
     * @return the BUDG_AMT
     */
    public Number getBudgAmt() {
        return (Number) getAttributeInternal(BUDGAMT);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDG_AMT using the alias name BudgAmt.
     * @param value value to set the BUDG_AMT
     */
    public void setBudgAmt(Number value) {
        setAttributeInternal(BUDGAMT, value);
    }

    /**
     * Gets the attribute value for BUDGET_ID using the alias name BudgetId.
     * @return the BUDGET_ID
     */
    public String getBudgetId() {
        return (String) getAttributeInternal(BUDGETID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_ID using the alias name BudgetId.
     * @param value value to set the BUDGET_ID
     */
    public void setBudgetId(String value) {
        setAttributeInternal(BUDGETID, value);
    }

    /**
     * Gets the attribute value for BUDGET_NM using the alias name BudgetNm.
     * @return the BUDGET_NM
     */
    public String getBudgetNm() {
        return (String) getAttributeInternal(BUDGETNM);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_NM using the alias name BudgetNm.
     * @param value value to set the BUDGET_NM
     */
    public void setBudgetNm(String value) {
        setAttributeInternal(BUDGETNM, value);
    }

    /**
     * Gets the attribute value for BUDGET_SET using the alias name BudgetSet.
     * @return the BUDGET_SET
     */
    public Integer getBudgetSet() {
        return (Integer) getAttributeInternal(BUDGETSET);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_SET using the alias name BudgetSet.
     * @param value value to set the BUDGET_SET
     */
    public void setBudgetSet(Integer value) {
        setAttributeInternal(BUDGETSET, value);
    }

    /**
     * Gets the attribute value for BUDGET_STAT using the alias name BudgetStat.
     * @return the BUDGET_STAT
     */
    public Integer getBudgetStat() {
        return (Integer) getAttributeInternal(BUDGETSTAT);
    }

    /**
     * Sets <code>value</code> as attribute value for BUDGET_STAT using the alias name BudgetStat.
     * @param value value to set the BUDGET_STAT
     */
    public void setBudgetStat(Integer value) {
        setAttributeInternal(BUDGETSTAT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @return the CURR_CONV_RATE
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @param value value to set the CURR_CONV_RATE
     */
    public void setCurrConvRate(Number value) {
        setAttributeInternal(CURRCONVRATE, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for FREEZE_FLG using the alias name FreezeFlg.
     * @return the FREEZE_FLG
     */
    public String getFreezeFlg() {
        return (String) getAttributeInternal(FREEZEFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for FREEZE_FLG using the alias name FreezeFlg.
     * @param value value to set the FREEZE_FLG
     */
    public void setFreezeFlg(String value) {
        setAttributeInternal(FREEZEFLG, value);
    }

    /**
     * Gets the attribute value for FY_END_DT using the alias name FyEndDt.
     * @return the FY_END_DT
     */
    public Timestamp getFyEndDt() {
        return (Timestamp) getAttributeInternal(FYENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_END_DT using the alias name FyEndDt.
     * @param value value to set the FY_END_DT
     */
    public void setFyEndDt(Timestamp value) {
        setAttributeInternal(FYENDDT, value);
    }

    /**
     * Gets the attribute value for FY_ID using the alias name FyId.
     * @return the FY_ID
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_ID using the alias name FyId.
     * @param value value to set the FY_ID
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for FY_START_DT using the alias name FyStartDt.
     * @return the FY_START_DT
     */
    public Timestamp getFyStartDt() {
        return (Timestamp) getAttributeInternal(FYSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for FY_START_DT using the alias name FyStartDt.
     * @param value value to set the FY_START_DT
     */
    public void setFyStartDt(Timestamp value) {
        setAttributeInternal(FYSTARTDT, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @return the PRD_END_DT
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @param value value to set the PRD_END_DT
     */
    public void setPrdEndDt(Timestamp value) {
        setAttributeInternal(PRDENDDT, value);
    }

    /**
     * Gets the attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @return the PRD_START_DT
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @param value value to set the PRD_START_DT
     */
    public void setPrdStartDt(Timestamp value) {
        setAttributeInternal(PRDSTARTDT, value);
    }

    /**
     * Gets the attribute value for REGION using the alias name Region.
     * @return the REGION
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Sets <code>value</code> as attribute value for REGION using the alias name Region.
     * @param value value to set the REGION
     */
    public void setRegion(String value) {
        setAttributeInternal(REGION, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNameTrans.
     * @return the CurrNameTrans
     */
    public String getCurrNameTrans() {
        if (getAttributeInternal(CURRNAMETRANS) == null && this.getCurrIdSp() != null) {
            ViewObjectImpl currVO1 = getAm().getLOVCurrIdVO1();
            currVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            currVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            currVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            currVO1.setNamedWhereClauseParam("BindCurrId", this.getCurrIdSp());
            currVO1.executeQuery();
            Row[] allRowsInRange = currVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("CurrDescTxn");
            }
        }
        return (String) getAttributeInternal(CURRNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNameTrans.
     * @param value value to set the  CurrNameTrans
     */
    public void setCurrNameTrans(String value) {
        setAttributeInternal(CURRNAMETRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute EoNameTrans.
     * @return the EoNameTrans
     */
    public String getEoNameTrans() {
        if (getAttributeInternal(EONAMETRANS) == null && this.getEoId() != null) {
            ViewObjectImpl eoVO1 = getAm().getLOVEoIdVO1();
            eoVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            eoVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            eoVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            eoVO1.setNamedWhereClauseParam("BindUserId", this.getUsrIdCreate());
            eoVO1.setNamedWhereClauseParam("BindEoId", this.getEoId());
            eoVO1.executeQuery();
            Row[] allRowsInRange = eoVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(EONAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoNameTrans.
     * @param value value to set the  EoNameTrans
     */
    public void setEoNameTrans(String value) {
        setAttributeInternal(EONAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RegionNameTrans.
     * @return the RegionNameTrans
     */
    public String getRegionNameTrans() {
        if (getAttributeInternal(REGIONNAMETRANS) == null && this.getRegion() != null) {
            ViewObjectImpl impl = getAm().getLOVLocationNmVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindLocId", this.getRegion());
            impl.executeQuery();

            Row[] allRowsInRange = impl.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("ParamDesc");
            }
        }
        return (String) getAttributeInternal(REGIONNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RegionNameTrans.
     * @param value value to set the  RegionNameTrans
     */
    public void setRegionNameTrans(String value) {
        setAttributeInternal(REGIONNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotSalesBdgTrans.
     * @return the TotSalesBdgTrans
     */
    public Number getTotSalesBdgTrans() {
        if (getAttributeInternal(TOTSALESBDGTRANS) == null) {
            ViewObjectImpl bdgFinBudgetDtlVO2 = this.getAm().getBdgFinBudgetDtlVO2();
            bdgFinBudgetDtlVO2.setNamedWhereClauseParam("BindBudgetType", 1);
            bdgFinBudgetDtlVO2.executeQuery();

            bdgFinBudgetDtlVO2.setRangeSize(-1);

            Number val = new Number(0);

            RowQualifier rQ = new RowQualifier(bdgFinBudgetDtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");
            Row[] allRowsInRange = bdgFinBudgetDtlVO2.getFilteredRows(rQ);

            if (allRowsInRange.length > 0) {
                for (int i = 0; i < allRowsInRange.length; i++) {
                    if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                        val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                    }
                }
            }
            return val;
        }
        return (Number) getAttributeInternal(TOTSALESBDGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotSalesBdgTrans.
     * @param value value to set the  TotSalesBdgTrans
     */
    public void setTotSalesBdgTrans(Number value) {
        setAttributeInternal(TOTSALESBDGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotMatBdgTrans.
     * @return the TotMatBdgTrans
     */
    public Number getTotMatBdgTrans() {
        if (getAttributeInternal(TOTMATBDGTRANS) == null) {
            ViewObjectImpl bdgFinBudgetDtlVO2 = this.getAm().getBdgFinBudgetDtlVO2();
            bdgFinBudgetDtlVO2.setNamedWhereClauseParam("BindBudgetType", 2);
            bdgFinBudgetDtlVO2.executeQuery();

            bdgFinBudgetDtlVO2.setRangeSize(-1);

            Number val = new Number(0);

            RowQualifier rQ = new RowQualifier(bdgFinBudgetDtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");
            Row[] allRowsInRange = bdgFinBudgetDtlVO2.getFilteredRows(rQ);

            if (allRowsInRange.length > 0) {
                for (int i = 0; i < allRowsInRange.length; i++) {
                    if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                        val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                    }
                }
            }
            return val;
        }
        return (Number) getAttributeInternal(TOTMATBDGTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotMatBdgTrans.
     * @param value value to set the  TotMatBdgTrans
     */
    public void setTotMatBdgTrans(Number value) {
        setAttributeInternal(TOTMATBDGTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotOthersAmtTrans.
     * @return the TotOthersAmtTrans
     */
    public Number getTotOthersAmtTrans() {
        if (getAttributeInternal(TOTOTHERSAMTTRANS) == null) {
            ViewObjectImpl bdgFinBudgetDtlVO2 = this.getAm().getBdgFinBudgetDtlVO2();
            bdgFinBudgetDtlVO2.setNamedWhereClauseParam("BindBudgetType", 3);
            bdgFinBudgetDtlVO2.executeQuery();

            bdgFinBudgetDtlVO2.setRangeSize(-1);

            Number val = new Number(0);

            RowQualifier rQ = new RowQualifier(bdgFinBudgetDtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");
            Row[] allRowsInRange = bdgFinBudgetDtlVO2.getFilteredRows(rQ);

            if (allRowsInRange.length > 0) {
                for (int i = 0; i < allRowsInRange.length; i++) {
                    if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                        if (allRowsInRange[i].getAttribute("AmtTyp").toString().equalsIgnoreCase("Cr")) {
                            val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                        } else if (allRowsInRange[i].getAttribute("AmtTyp").toString().equalsIgnoreCase("Dr")) {
                            val = val.subtract((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                        }
                    }
                }
            }
            return val;
        }
        return (Number) getAttributeInternal(TOTOTHERSAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotOthersAmtTrans.
     * @param value value to set the  TotOthersAmtTrans
     */
    public void setTotOthersAmtTrans(Number value) {
        setAttributeInternal(TOTOTHERSAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalAmtTrans.
     * @return the TotalAmtTrans
     */
    public Number getTotalAmtTrans() {
        if (getAttributeInternal(TOTALAMTTRANS) == null) {
            if (this.getTotSalesBdgTrans() != null && this.getTotMatBdgTrans() != null &&
                this.getTotOthersAmtTrans() != null) {
                Number val = new Number(0);

                val = this.getTotSalesBdgTrans().subtract(this.getTotMatBdgTrans());
                val = val.add(this.getTotOthersAmtTrans());
                return val;
            }
        }
        return (Number) getAttributeInternal(TOTALAMTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalAmtTrans.
     * @param value value to set the  TotalAmtTrans
     */
    public void setTotalAmtTrans(Number value) {
        setAttributeInternal(TOTALAMTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotRevenueTrans.
     * @return the TotRevenueTrans
     */
    public Number getTotRevenueTrans() {
        if (getAttributeInternal(TOTREVENUETRANS) == null) {
            Number val = this.getTotSalesBdgTrans(); // Sales Budget Total

            ViewObjectImpl bdgFinBudgetDtlVO2 = this.getAm().getBdgFinBudgetDtlVO2();
            bdgFinBudgetDtlVO2.setNamedWhereClauseParam("BindBudgetType", 3);
            bdgFinBudgetDtlVO2.executeQuery();

            bdgFinBudgetDtlVO2.setRangeSize(-1);

            RowQualifier rQ = new RowQualifier(bdgFinBudgetDtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");
            Row[] allRowsInRange = bdgFinBudgetDtlVO2.getFilteredRows(rQ);

            if (allRowsInRange.length > 0) {
                for (int i = 0; i < allRowsInRange.length; i++) {
                    if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                        if (allRowsInRange[i].getAttribute("AmtTyp").toString().equalsIgnoreCase("Cr")) {
                            val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                        }
                    }
                }
            }
            return val;
        }
        return (Number) getAttributeInternal(TOTREVENUETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotRevenueTrans.
     * @param value value to set the  TotRevenueTrans
     */
    public void setTotRevenueTrans(Number value) {
        setAttributeInternal(TOTREVENUETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotExpenseTrans.
     * @return the TotExpenseTrans
     */
    public Number getTotExpenseTrans() {
        if (getAttributeInternal(TOTEXPENSETRANS) == null) {

            Number val = this.getTotMatBdgTrans(); /// Material Budget Total

            ViewObjectImpl bdgFinBudgetDtlVO2 = this.getAm().getBdgFinBudgetDtlVO2();
            bdgFinBudgetDtlVO2.setNamedWhereClauseParam("BindBudgetType", 3);
            bdgFinBudgetDtlVO2.executeQuery();

            bdgFinBudgetDtlVO2.setRangeSize(-1);

            RowQualifier rQ = new RowQualifier(bdgFinBudgetDtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");
            Row[] allRowsInRange = bdgFinBudgetDtlVO2.getFilteredRows(rQ);

            if (allRowsInRange.length > 0) {
                for (int i = 0; i < allRowsInRange.length; i++) {
                    if (allRowsInRange[i].getAttribute("ItmAmtBs") != null) {
                        if (allRowsInRange[i].getAttribute("AmtTyp").toString().equalsIgnoreCase("Dr")) {
                            val = val.add((Number) allRowsInRange[i].getAttribute("ItmAmtBs"));
                        }
                    }
                }
            }
            return val;
        }
        return (Number) getAttributeInternal(TOTEXPENSETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotExpenseTrans.
     * @param value value to set the  TotExpenseTrans
     */
    public void setTotExpenseTrans(Number value) {
        setAttributeInternal(TOTEXPENSETRANS, value);
    }

    /**
     * Gets the attribute value for DISTB_METHD using the alias name DistbMethd.
     * @return the DISTB_METHD
     */
    public Integer getDistbMethd() {
        return (Integer) getAttributeInternal(DISTBMETHD);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_METHD using the alias name DistbMethd.
     * @param value value to set the DISTB_METHD
     */
    public void setDistbMethd(Integer value) {
        setAttributeInternal(DISTBMETHD, value);
    }

    /**
     * Gets the attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @return the DISTB_PRD_BASIS
     */
    public Integer getDistbPrdBasis() {
        return (Integer) getAttributeInternal(DISTBPRDBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @param value value to set the DISTB_PRD_BASIS
     */
    public void setDistbPrdBasis(Integer value) {
        setAttributeInternal(DISTBPRDBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotRevenueAmtNotaTrans.
     * @return the TotRevenueAmtNotaTrans
     */
    public Number getTotRevenueAmtNotaTrans() {
        if (getAttributeInternal(TOTREVENUEAMTNOTATRANS) == null && this.getTotRevenueTrans() != null) {
            return this.getAm().convertNumberToNotation(getTotRevenueTrans());
        }
        return (Number) getAttributeInternal(TOTREVENUEAMTNOTATRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotExpenseAmtNotaTrans.
     * @return the TotExpenseAmtNotaTrans
     */
    public Number getTotExpenseAmtNotaTrans() {
        if (getAttributeInternal(TOTEXPENSEAMTNOTATRANS) == null && this.getTotExpenseTrans() != null) {
            return this.getAm().convertNumberToNotation(getTotExpenseTrans());
        }
        return (Number) getAttributeInternal(TOTEXPENSEAMTNOTATRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalNotaAmtTrans.
     * @return the TotalNotaAmtTrans
     */
    public Number getTotalNotaAmtTrans() {
        if (getAttributeInternal(TOTALNOTAAMTTRANS) == null && this.getTotalAmtTrans() != null) {
            return this.getAm().convertNumberToNotation(getTotalAmtTrans());
        }
        return (Number) getAttributeInternal(TOTALNOTAAMTTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransIsCostCenterAvl.
     * @return the TransIsCostCenterAvl
     */
    public String getTransIsCostCenterAvl() {
        if (getAm().chkCcApplicableOrNot())
            return "Y";
        else
            return "N";
        //   return (String) getAttributeInternal(TRANSISCOSTCENTERAVL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgFinBudgetDtl.
     */
    public RowIterator getBdgFinBudgetDtl() {
        return (RowIterator) getAttributeInternal(BDGFINBUDGETDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgFinBudgetPrdDtl.
     */
    public RowIterator getBdgFinBudgetPrdDtl() {
        return (RowIterator) getAttributeInternal(BDGFINBUDGETPRDDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MaterialBudgetDtl.
     */
    public RowIterator getMaterialBudgetDtl() {
        return (RowIterator) getAttributeInternal(MATERIALBUDGETDTL);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadRegionForPNL.
     */
    public RowIterator getHeadRegionForPNL() {
        return (RowIterator) getAttributeInternal(HEADREGIONFORPNL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadEmpDtlsForPNLSumm.
     */
    public RowIterator getHeadEmpDtlsForPNLSumm() {
        return (RowIterator) getAttributeInternal(HEADEMPDTLSFORPNLSUMM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadOthersRegionForPNL.
     */
    public RowIterator getHeadOthersRegionForPNL() {
        return (RowIterator) getAttributeInternal(HEADOTHERSREGIONFORPNL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadOthersEmpDtlsForPNLSumm.
     */
    public RowIterator getHeadOthersEmpDtlsForPNLSumm() {
        return (RowIterator) getAttributeInternal(HEADOTHERSEMPDTLSFORPNLSUMM);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadCustomerForPNL.
     */
    public RowIterator getHeadCustomerForPNL() {
        return (RowIterator) getAttributeInternal(HEADCUSTOMERFORPNL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link HeadOthersCustomerForPNL.
     */
    public RowIterator getHeadOthersCustomerForPNL() {
        return (RowIterator) getAttributeInternal(HEADOTHERSCUSTOMERFORPNL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgSalesDistribution.
     */
    public RowIterator getBdgSalesDistribution() {
        return (RowIterator) getAttributeInternal(BDGSALESDISTRIBUTION);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgMaterialDistribution.
     */
    public RowIterator getBdgMaterialDistribution() {
        return (RowIterator) getAttributeInternal(BDGMATERIALDISTRIBUTION);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgFinBudgetFlexiFlds.
     */
    public RowIterator getBdgFinBudgetFlexiFlds() {
        return (RowIterator) getAttributeInternal(BDGFINBUDGETFLEXIFLDS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovStatusVO1.
     */
    public RowSet getLovStatusVO1() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrIdVO1.
     */
    public RowSet getLOVCurrIdVO1() {
        return (RowSet) getAttributeInternal(LOVCURRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgNameVO1.
     */
    public RowSet getLOVOrgNameVO1() {
        return (RowSet) getAttributeInternal(LOVORGNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoIdVO1.
     */
    public RowSet getLOVEoIdVO1() {
        return (RowSet) getAttributeInternal(LOVEOIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLocationNmVO1.
     */
    public RowSet getLOVLocationNmVO1() {
        return (RowSet) getAttributeInternal(LOVLOCATIONNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistubMethodVO1.
     */
    public RowSet getLOVDistubMethodVO1() {
        return (RowSet) getAttributeInternal(LOVDISTUBMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistributionPrdBasisVO1.
     */
    public RowSet getLOVDistributionPrdBasisVO1() {
        return (RowSet) getAttributeInternal(LOVDISTRIBUTIONPRDBASISVO1);
    }

    /**
     * Method will return Application Module App
     */
    public BdgFinanceBudgetAMImpl getAm() {
        BdgFinanceBudgetAMImpl am = (BdgFinanceBudgetAMImpl) getApplicationModule();
        return am;
    }
}
