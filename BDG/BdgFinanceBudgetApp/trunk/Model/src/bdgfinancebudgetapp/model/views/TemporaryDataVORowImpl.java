package bdgfinancebudgetapp.model.views;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 20 12:18:31 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TemporaryDataVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        HoOrgId,
        OrgId,
        BudgetIdTrans,
        BudgetNmTrans,
        FromDateTrans,
        ToDateTrans,
        FyRangeTrans,
        AmtNotationIdTrans,
        AmtNotationDispTrans,
        AmtNotationDescTrans,
        LOVFyIdForSearchVO1,
        LOVOrgNameVO1,
        LOVAmtNotationVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int BUDGETIDTRANS = AttributesEnum.BudgetIdTrans.index();
    public static final int BUDGETNMTRANS = AttributesEnum.BudgetNmTrans.index();
    public static final int FROMDATETRANS = AttributesEnum.FromDateTrans.index();
    public static final int TODATETRANS = AttributesEnum.ToDateTrans.index();
    public static final int FYRANGETRANS = AttributesEnum.FyRangeTrans.index();
    public static final int AMTNOTATIONIDTRANS = AttributesEnum.AmtNotationIdTrans.index();
    public static final int AMTNOTATIONDISPTRANS = AttributesEnum.AmtNotationDispTrans.index();
    public static final int AMTNOTATIONDESCTRANS = AttributesEnum.AmtNotationDescTrans.index();
    public static final int LOVFYIDFORSEARCHVO1 = AttributesEnum.LOVFyIdForSearchVO1.index();
    public static final int LOVORGNAMEVO1 = AttributesEnum.LOVOrgNameVO1.index();
    public static final int LOVAMTNOTATIONVO1 = AttributesEnum.LOVAmtNotationVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TemporaryDataVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetIdTrans.
     * @return the BudgetIdTrans
     */
    public String getBudgetIdTrans() {
        return (String) getAttributeInternal(BUDGETIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgetIdTrans.
     * @param value value to set the  BudgetIdTrans
     */
    public void setBudgetIdTrans(String value) {
        setAttributeInternal(BUDGETIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgetNmTrans.
     * @return the BudgetNmTrans
     */
    public String getBudgetNmTrans() {
        return (String) getAttributeInternal(BUDGETNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgetNmTrans.
     * @param value value to set the  BudgetNmTrans
     */
    public void setBudgetNmTrans(String value) {
        setAttributeInternal(BUDGETNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDateTrans.
     * @return the FromDateTrans
     */
    public Timestamp getFromDateTrans() {
        return (Timestamp) getAttributeInternal(FROMDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDateTrans.
     * @param value value to set the  FromDateTrans
     */
    public void setFromDateTrans(Timestamp value) {
        setAttributeInternal(FROMDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDateTrans.
     * @return the ToDateTrans
     */
    public Timestamp getToDateTrans() {
        return (Timestamp) getAttributeInternal(TODATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDateTrans.
     * @param value value to set the  ToDateTrans
     */
    public void setToDateTrans(Timestamp value) {
        setAttributeInternal(TODATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyRangeTrans.
     * @return the FyRangeTrans
     */
    public Integer getFyRangeTrans() {
        return (Integer) getAttributeInternal(FYRANGETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyRangeTrans.
     * @param value value to set the  FyRangeTrans
     */
    public void setFyRangeTrans(Integer value) {
        setAttributeInternal(FYRANGETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtNotationIdTrans.
     * @return the AmtNotationIdTrans
     */
    public Number getAmtNotationIdTrans() {
        if (getAttributeInternal(AMTNOTATIONIDTRANS) == null) {
            return new Number(1);
        }
        return (Number) getAttributeInternal(AMTNOTATIONIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtNotationIdTrans.
     * @param value value to set the  AmtNotationIdTrans
     */
    public void setAmtNotationIdTrans(Number value) {
        setAttributeInternal(AMTNOTATIONIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtNotationDispTrans.
     * @return the AmtNotationDispTrans
     */
    public String getAmtNotationDispTrans() {
        return (String) getAttributeInternal(AMTNOTATIONDISPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtNotationDispTrans.
     * @param value value to set the  AmtNotationDispTrans
     */
    public void setAmtNotationDispTrans(String value) {
        setAttributeInternal(AMTNOTATIONDISPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtNotationDescTrans.
     * @return the AmtNotationDescTrans
     */
    public String getAmtNotationDescTrans() {
        if (getAttributeInternal(AMTNOTATIONDESCTRANS) == null) {
            return "Basic";
        }
        return (String) getAttributeInternal(AMTNOTATIONDESCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtNotationDescTrans.
     * @param value value to set the  AmtNotationDescTrans
     */
    public void setAmtNotationDescTrans(String value) {
        setAttributeInternal(AMTNOTATIONDESCTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVFyIdForSearchVO1.
     */
    public RowSet getLOVFyIdForSearchVO1() {
        return (RowSet) getAttributeInternal(LOVFYIDFORSEARCHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgNameVO1.
     */
    public RowSet getLOVOrgNameVO1() {
        return (RowSet) getAttributeInternal(LOVORGNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVAmtNotationVO1.
     */
    public RowSet getLOVAmtNotationVO1() {
        return (RowSet) getAttributeInternal(LOVAMTNOTATIONVO1);
    }
}

