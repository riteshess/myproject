package mmmatclsftn.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import java.sql.Timestamp;

import mmmatclsftn.model.services.MmMatClsftnAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 01 17:49:08 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvClsRangeVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MMINVCLSRANGEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        ClsTypeId,
        ClsVlu1,
        ClsVlu2,
        ClsVlu3,
        ClsVluType,
        CrtDt,
        ModDt,
        OrgId,
        SlocId,
        UsrIdCrt,
        UsrIdMod,
        TransSel,
        TransCls,
        LovAnaTypeVO1,
        AnaSelectionVO1,
        ItemDescVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CLSTYPEID = AttributesEnum.ClsTypeId.index();
    public static final int CLSVLU1 = AttributesEnum.ClsVlu1.index();
    public static final int CLSVLU2 = AttributesEnum.ClsVlu2.index();
    public static final int CLSVLU3 = AttributesEnum.ClsVlu3.index();
    public static final int CLSVLUTYPE = AttributesEnum.ClsVluType.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int MODDT = AttributesEnum.ModDt.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int TRANSSEL = AttributesEnum.TransSel.index();
    public static final int TRANSCLS = AttributesEnum.TransCls.index();
    public static final int LOVANATYPEVO1 = AttributesEnum.LovAnaTypeVO1.index();
    public static final int ANASELECTIONVO1 = AttributesEnum.AnaSelectionVO1.index();
    public static final int ITEMDESCVO1 = AttributesEnum.ItemDescVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvClsRangeVORowImpl() {
    }

    /**
     * Gets MmInvClsRangeEO entity object.
     * @return the MmInvClsRangeEO
     */
    public EntityImpl getMmInvClsRangeEO() {
        return (EntityImpl) getEntity(ENTITY_MMINVCLSRANGEEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return EbizParams.GLBL_APP_CLD_ID();
        //        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CLS_TYPE_ID using the alias name ClsTypeId.
     * @return the CLS_TYPE_ID
     */
    public String getClsTypeId() {
//        MmMatClsftnAMImpl am= (MmMatClsftnAMImpl)this.getApplicationModule();
//        ViewObject vo=am.getMmInvClsRange1();
//        vo.setNamedWhereClauseParam("ClsTypeId", arg1);
        return (String) getAttributeInternal(CLSTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLS_TYPE_ID using the alias name ClsTypeId.
     * @param value value to set the CLS_TYPE_ID
     */
    public void setClsTypeId(String value) {
        setAttributeInternal(CLSTYPEID, value);
    }

    /**
     * Gets the attribute value for CLS_VLU_1 using the alias name ClsVlu1.
     * @return the CLS_VLU_1
     */
    public oracle.jbo.domain.Number getClsVlu1() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CLSVLU1);
    }

    /**
     * Sets <code>value</code> as attribute value for CLS_VLU_1 using the alias name ClsVlu1.
     * @param value value to set the CLS_VLU_1
     */
    public void setClsVlu1(oracle.jbo.domain.Number value) {
        setAttributeInternal(CLSVLU1, value);
    }

    /**
     * Gets the attribute value for CLS_VLU_2 using the alias name ClsVlu2.
     * @return the CLS_VLU_2
     */
    public oracle.jbo.domain.Number getClsVlu2() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CLSVLU2);
    }

    /**
     * Sets <code>value</code> as attribute value for CLS_VLU_2 using the alias name ClsVlu2.
     * @param value value to set the CLS_VLU_2
     */
    public void setClsVlu2(oracle.jbo.domain.Number value) {
        setAttributeInternal(CLSVLU2, value);
    }

    /**
     * Gets the attribute value for CLS_VLU_3 using the alias name ClsVlu3.
     * @return the CLS_VLU_3
     */
    public oracle.jbo.domain.Number getClsVlu3() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CLSVLU3);
    }

    /**
     * Sets <code>value</code> as attribute value for CLS_VLU_3 using the alias name ClsVlu3.
     * @param value value to set the CLS_VLU_3
     */
    public void setClsVlu3(Number value) {
        setAttributeInternal(CLSVLU3, value);
    }

    /**
     * Gets the attribute value for CLS_VLU_TYPE using the alias name ClsVluType.
     * @return the CLS_VLU_TYPE
     */
    public String getClsVluType() {
        return (String) getAttributeInternal(CLSVLUTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for CLS_VLU_TYPE using the alias name ClsVluType.
     * @param value value to set the CLS_VLU_TYPE
     */
    public void setClsVluType(String value) {
        if(getTransCls()!=null){
            MmMatClsftnAMImpl am=(MmMatClsftnAMImpl)this.getApplicationModule();
            ViewObject vo=am.getMmInvClsRange1();
          String clsVlu=  vo.getCurrentRow().getAttribute("TransCls").toString();
          System.out.println("cls value type is" +clsVlu);
          setAttribute("ClsVluType", clsVlu);
        }
        setAttributeInternal(CLSVLUTYPE, value);
    }

    /**
     * Gets the attribute value for CRT_DT using the alias name CrtDt.
     * @return the CRT_DT
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for CRT_DT using the alias name CrtDt.
     * @param value value to set the CRT_DT
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for MOD_DT using the alias name ModDt.
     * @return the MOD_DT
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for MOD_DT using the alias name ModDt.
     * @param value value to set the MOD_DT
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @return the USR_ID_CRT
     */
    public oracle.jbo.domain.Number getUsrIdCrt() {
        return (oracle.jbo.domain.Number) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CRT using the alias name UsrIdCrt.
     * @param value value to set the USR_ID_CRT
     */
    public void setUsrIdCrt(oracle.jbo.domain.Number value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public oracle.jbo.domain.Number getUsrIdMod() {
        return (oracle.jbo.domain.Number) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(oracle.jbo.domain.Number value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSel.
     * @return the TransSel
     */
    
    public String getTransSel() {
        if(getClsTypeId()!=null){
            System.out.println("csl type id in rowimpl is"+getClsTypeId());
        if(getClsTypeId().equalsIgnoreCase("ABC")|| getClsTypeId().equalsIgnoreCase("FSN")){
            return "P";
        }}
        else
        {
        return "A";
        }
    
            return "A";

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSel.
     * @param value value to set the  TransSel
     */
    public void setTransSel(String value) {
        setAttributeInternal(TRANSSEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCls.
     * @return the TransCls
     */
    public String getTransCls() {
        return (String) getAttributeInternal(TRANSCLS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCls.
     * @param value value to set the  TransCls
     */
    public void setTransCls(String value) {
        setAttributeInternal(TRANSCLS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAnaTypeVO1.
     */
    public RowSet getLovAnaTypeVO1() {
        return (RowSet) getAttributeInternal(LOVANATYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AnaSelectionVO1.
     */
    public RowSet getAnaSelectionVO1() {
        return (RowSet) getAttributeInternal(ANASELECTIONVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ItemDescVO1.
     */
    public RowSet getItemDescVO1() {
        return (RowSet) getAttributeInternal(ITEMDESCVO1);
    }
}

