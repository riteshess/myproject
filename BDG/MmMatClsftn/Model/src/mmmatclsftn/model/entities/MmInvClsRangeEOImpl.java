package mmmatclsftn.model.entities;

import adf.utils.ebiz.EbizParams;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 03 13:07:22 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvClsRangeEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        ClsTypeId,
        ClsVluType,
        ClsVlu1,
        ClsVlu2,
        ClsVlu3,
        UsrIdCrt,
        CrtDt,
        UsrIdMod,
        ModDt;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int CLSTYPEID = AttributesEnum.ClsTypeId.index();
    public static final int CLSVLUTYPE = AttributesEnum.ClsVluType.index();
    public static final int CLSVLU1 = AttributesEnum.ClsVlu1.index();
    public static final int CLSVLU2 = AttributesEnum.ClsVlu2.index();
    public static final int CLSVLU3 = AttributesEnum.ClsVlu3.index();
    public static final int USRIDCRT = AttributesEnum.UsrIdCrt.index();
    public static final int CRTDT = AttributesEnum.CrtDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int MODDT = AttributesEnum.ModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvClsRangeEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmmatclsftn.model.entities.MmInvClsRangeEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for ClsTypeId, using the alias name ClsTypeId.
     * @return the value of ClsTypeId
     */
    public String getClsTypeId() {
        return (String) getAttributeInternal(CLSTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsTypeId.
     * @param value value to set the ClsTypeId
     */
    public void setClsTypeId(String value) {
        
        setAttributeInternal(CLSTYPEID, value);
    }

    /**
     * Gets the attribute value for ClsVluType, using the alias name ClsVluType.
     * @return the value of ClsVluType
     */
    public String getClsVluType() {
        return (String) getAttributeInternal(CLSVLUTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsVluType.
     * @param value value to set the ClsVluType
     */
    public void setClsVluType(String value) {
        setAttributeInternal(CLSVLUTYPE, value);
    }

    /**
     * Gets the attribute value for ClsVlu1, using the alias name ClsVlu1.
     * @return the value of ClsVlu1
     */
    public Number getClsVlu1() {
        return (Number) getAttributeInternal(CLSVLU1);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsVlu1.
     * @param value value to set the ClsVlu1
     */
    public void setClsVlu1(Number value) {
        setAttributeInternal(CLSVLU1, value);
    }

    /**
     * Gets the attribute value for ClsVlu2, using the alias name ClsVlu2.
     * @return the value of ClsVlu2
     */
    public Number getClsVlu2() {
        return (Number) getAttributeInternal(CLSVLU2);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsVlu2.
     * @param value value to set the ClsVlu2
     */
    public void setClsVlu2(Number value) {
        setAttributeInternal(CLSVLU2, value);
    }

    /**
     * Gets the attribute value for ClsVlu3, using the alias name ClsVlu3.
     * @return the value of ClsVlu3
     */
    public Number getClsVlu3() {
        return (Number) getAttributeInternal(CLSVLU3);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsVlu3.
     * @param value value to set the ClsVlu3
     */
    public void setClsVlu3(Number value) {
        setAttributeInternal(CLSVLU3, value);
    }

    /**
     * Gets the attribute value for UsrIdCrt, using the alias name UsrIdCrt.
     * @return the value of UsrIdCrt
     */
    public Number getUsrIdCrt() {
        return (Number) getAttributeInternal(USRIDCRT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCrt.
     * @param value value to set the UsrIdCrt
     */
    public void setUsrIdCrt(Number value) {
        setAttributeInternal(USRIDCRT, value);
    }

    /**
     * Gets the attribute value for CrtDt, using the alias name CrtDt.
     * @return the value of CrtDt
     */
    public Timestamp getCrtDt() {
        return (Timestamp) getAttributeInternal(CRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CrtDt.
     * @param value value to set the CrtDt
     */
    public void setCrtDt(Timestamp value) {
        setAttributeInternal(CRTDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Number getUsrIdMod() {
        return (Number) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Number value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for ModDt, using the alias name ModDt.
     * @return the value of ModDt
     */
    public Timestamp getModDt() {
        return (Timestamp) getAttributeInternal(MODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModDt.
     * @param value value to set the ModDt
     */
    public void setModDt(Timestamp value) {
        setAttributeInternal(MODDT, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param clsTypeId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String clsTypeId) {
        return new Key(new Object[] { cldId, slocId, orgId, clsTypeId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        String cld_id=EbizParams.GLBL_APP_CLD_ID().toString();
         System.out.println("cldis is----------"+cld_id);
        Integer sloc_id=Integer.parseInt(EbizParams.GLBL_APP_SERV_LOC().toString());
        String org_id=EbizParams.GLBL_APP_USR_ORG().toString();
         System.out.println("sloc id is-----------"+sloc_id);
         setCldId(cld_id);
         setSlocId(sloc_id);
         setOrgId(org_id);
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
//    protected void doDML(int operation, TransactionEvent e) {
//        super.doDML(operation, e);
//    }
}

