package mmmatclsftn.model.entities;

import adf.utils.ebiz.EbizParams;

import java.math.BigDecimal;

import mmmatclsftn.model.entities.associations.common.Type;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 16 11:41:36 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MmInvAnaItmEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        DocId,
        ItmId,
        AnaVlu,
        AnaVlu2,
        AnaVluPct,
        AnaVluPct2,
        ClsId,
        MmInvAna;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ANAVLU = AttributesEnum.AnaVlu.index();
    public static final int ANAVLU2 = AttributesEnum.AnaVlu2.index();
    public static final int ANAVLUPCT = AttributesEnum.AnaVluPct.index();
    public static final int ANAVLUPCT2 = AttributesEnum.AnaVluPct2.index();
    public static final int CLSID = AttributesEnum.ClsId.index();
    public static final int MMINVANA = AttributesEnum.MmInvAna.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MmInvAnaItmEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("mmmatclsftn.model.entities.MmInvAnaItmEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ItmId, using the alias name ItmId.
     * @return the value of ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItmId.
     * @param value value to set the ItmId
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for AnaVlu, using the alias name AnaVlu.
     * @return the value of AnaVlu
     */
    public Number getAnaVlu() {
        return (Number) getAttributeInternal(ANAVLU);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnaVlu.
     * @param value value to set the AnaVlu
     */
    public void setAnaVlu(Number value) {
        setAttributeInternal(ANAVLU, value);
    }

    /**
     * Gets the attribute value for AnaVlu2, using the alias name AnaVlu2.
     * @return the value of AnaVlu2
     */
    public Number getAnaVlu2() {
        return (Number) getAttributeInternal(ANAVLU2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnaVlu2.
     * @param value value to set the AnaVlu2
     */
    public void setAnaVlu2(Number value) {
        setAttributeInternal(ANAVLU2, value);
    }

    /**
     * Gets the attribute value for AnaVluPct, using the alias name AnaVluPct.
     * @return the value of AnaVluPct
     */
    public Number getAnaVluPct() {
        return (Number) getAttributeInternal(ANAVLUPCT);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnaVluPct.
     * @param value value to set the AnaVluPct
     */
    public void setAnaVluPct(Number value) {
        setAttributeInternal(ANAVLUPCT, value);
    }

    /**
     * Gets the attribute value for AnaVluPct2, using the alias name AnaVluPct2.
     * @return the value of AnaVluPct2
     */
    public Number getAnaVluPct2() {
        return (Number) getAttributeInternal(ANAVLUPCT2);
    }

    /**
     * Sets <code>value</code> as the attribute value for AnaVluPct2.
     * @param value value to set the AnaVluPct2
     */
    public void setAnaVluPct2(Number value) {
        setAttributeInternal(ANAVLUPCT2, value);
    }

    /**
     * Gets the attribute value for ClsId, using the alias name ClsId.
     * @return the value of ClsId
     */
    public String getClsId() {
        return (String) getAttributeInternal(CLSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClsId.
     * @param value value to set the ClsId
     */
    public void setClsId(String value) {
        setAttributeInternal(CLSID, value);
    }

    /**
     * @return the associated entity MmInvAnaEOImpl.
     */
    public MmInvAnaEOImpl getMmInvAna() {
        return (MmInvAnaEOImpl) getAttributeInternal(MMINVANA);
    }

    /**
     * Sets <code>value</code> as the associated entity MmInvAnaEOImpl.
     */
    public void setMmInvAna(MmInvAnaEOImpl value) {
        setAttributeInternal(MMINVANA, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param docId key constituent
     * @param itmId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String docId, String itmId) {
        return new Key(new Object[] { cldId, slocId, orgId, docId, itmId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        System.out.println("create new row in MMINVANAITM");
        String cld_id=EbizParams.GLBL_APP_CLD_ID().toString();
        Integer sloc_id=Integer.parseInt(EbizParams.GLBL_APP_SERV_LOC().toString());
        setSlocId(sloc_id);
        setCldId(cld_id);
        
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
//    protected void doDML(int operation, TransactionEvent e) {
//        super.doDML(operation, e);
//    }
}

