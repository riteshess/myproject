package bdgkraprofileapp.model.services;

import bdgkraprofileapp.model.services.common.BdgKraProfileAM;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.ViewCriteria;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 09 16:05:13 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgKraProfileAMImpl extends ApplicationModuleImpl implements BdgKraProfileAM {
    /**
     * This is the default constructor (do not remove).
     */
    public BdgKraProfileAMImpl() {
    }

    public String getCldIdValue() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
    }

    public Integer getSlocIdValue() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
    }

    public String getHoOrgIdValue() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
    }

    public String getOrgIdValue() {
        return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
    }

    public Integer getUsrId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
    }

    /**Method to resolve expression- returns String value*/
    public String resolvEl(String data) {
        String val = null;
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        Object Message = valueExp.getValue(elContext);
        if (Message != null) {
            val = Message.toString();
        }
        return val;
    }

    /**
     * Container's getter for BdgKraPrfVO1.
     * @return BdgKraPrfVO1
     */
    public ViewObjectImpl getBdgKraPrfVO1() {
        return (ViewObjectImpl) findViewObject("BdgKraPrfVO1");
    }

    /**
     * Container's getter for SearchKraPrfDualVO1.
     * @return SearchKraPrfDualVO1
     */
    public ViewObjectImpl getSearchKraPrfDualVO1() {
        return (ViewObjectImpl) findViewObject("SearchKraPrfDualVO1");
    }

    /**
     * Search KRA Defination
     */
    public void SearchKraDef() {
        ViewCriteria criteria = getBdgKraPrfVO1().getViewCriteria("BdgKraPrfVOCriteria");
        getBdgKraPrfVO1().applyViewCriteria(criteria);
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindCldId", this.getCldIdValue());
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindSlocId", this.getSlocIdValue());
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgIdValue());
        if (this.getSearchKraPrfDualVO1().getCurrentRow() != null) {
            getBdgKraPrfVO1().setNamedWhereClauseParam("BindKraDesc",
                                                       this.getSearchKraPrfDualVO1().getCurrentRow().getAttribute("KraNameTrans"));
        }
        getBdgKraPrfVO1().executeQuery();
    }

    /**
     * Reset KRA Defination
     */
    public void ResetKraDef() {
        this.getSearchKraPrfDualVO1().executeQuery();

        ViewCriteria criteria = getBdgKraPrfVO1().getViewCriteria("BdgKraPrfVOCriteria");
        getBdgKraPrfVO1().applyViewCriteria(criteria);
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindCldId", "-1");
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindSlocId", -1);
        getBdgKraPrfVO1().setNamedWhereClauseParam("BindHoOrgId", "-1");
        getBdgKraPrfVO1().executeQuery();
    }

    /**
     * Container's getter for GenerateSequenctValue1.
     * @return GenerateSequenctValue1
     */
    public ViewObjectImpl getGenerateSequenctValueVO1() {
        return (ViewObjectImpl) findViewObject("GenerateSequenctValueVO1");
    }

    /**
     * Code to generate Kra Id and Set the value before commit the data
     */
    public void GenerateKraValue() {
        ViewObjectImpl generateSequenctValueVO1 = this.getGenerateSequenctValueVO1();
        generateSequenctValueVO1.setNamedWhereClauseParam("BindCldId", this.getCldIdValue());
        generateSequenctValueVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocIdValue());
        generateSequenctValueVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgIdValue());
        generateSequenctValueVO1.executeQuery();

        Row[] allRowsInRange = generateSequenctValueVO1.getAllRowsInRange();
        Object val = allRowsInRange[0].getAttribute("Value");

        this.getBdgKraPrfVO1().getCurrentRow().setAttribute("KraId", val);
    }

    /**
     * Check Kra Description duplicate
     */
    public Boolean ChkKraDescriptionDuplicate(String name) {
        Boolean val = false;

        ViewObjectImpl bdgKraPrfVO1 = this.getBdgKraPrfVO1();
        RowQualifier rowQualifier = new RowQualifier(bdgKraPrfVO1);
        rowQualifier.setWhereClause("upper(KraDesc)='" + name.toUpperCase() + "'");
        Row[] filteredRows = bdgKraPrfVO1.getFilteredRows(rowQualifier);
        if (filteredRows.length > 0 && filteredRows[0] != bdgKraPrfVO1.getCurrentRow()) {
            val = true;
        }

        return val;
    }
}

