package bdgmaterialbudgetapp.model.views;

import bdgmaterialbudgetapp.model.entities.BdgMtlBudgetDtlEOImpl;
import bdgmaterialbudgetapp.model.modules.BdgMaterialBudgetAMImpl;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 18 14:07:03 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgMtlBudgetDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_BDGMTLBUDGETDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        BdgFyId,
        DocId,
        ItmGrpId,
        ItmId,
        CurrConvRate,
        CurrIdSp,
        ItmAmtBs,
        ItmAmtSp,
        ItmPrice,
        ItmQty,
        ItmSelBasis,
        ItmUom,
        PrdEndDt,
        PrdStartDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        BomDocId,
        CustEoId,
        ItmSelType,
        DistbMethd,
        DistbPrdBasis,
        DistbUnit,
        TransItmDesc,
        TransGrpNm,
        TransCurrDesc,
        TransOrgCurrId,
        TransExceItmDesc,
        TransExceItmId,
        CustNameTrans,
        EoId,
        Region,
        ItmAmtSpNotaTrans,
        TransPrvBdgAmt,
        TransPrvActualAmt,
        TransPrvDiffAmt,
        TransPrvDiffType,
        LovSelectionBasisVO,
        LovItmIdPrfVO,
        LovGrpIdVO,
        LovItmUomVO,
        LovCurrIdSpVO,
        LovItmSelBasisVO,
        VwBdgEoBudgetExcptnVO1,
        LOVBomIdVO1,
        LOVDistubMethodVO1,
        LOVDistributionPrdBasisVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int BDGFYID = AttributesEnum.BdgFyId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMGRPID = AttributesEnum.ItmGrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMSELBASIS = AttributesEnum.ItmSelBasis.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int BOMDOCID = AttributesEnum.BomDocId.index();
    public static final int CUSTEOID = AttributesEnum.CustEoId.index();
    public static final int ITMSELTYPE = AttributesEnum.ItmSelType.index();
    public static final int DISTBMETHD = AttributesEnum.DistbMethd.index();
    public static final int DISTBPRDBASIS = AttributesEnum.DistbPrdBasis.index();
    public static final int DISTBUNIT = AttributesEnum.DistbUnit.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int TRANSGRPNM = AttributesEnum.TransGrpNm.index();
    public static final int TRANSCURRDESC = AttributesEnum.TransCurrDesc.index();
    public static final int TRANSORGCURRID = AttributesEnum.TransOrgCurrId.index();
    public static final int TRANSEXCEITMDESC = AttributesEnum.TransExceItmDesc.index();
    public static final int TRANSEXCEITMID = AttributesEnum.TransExceItmId.index();
    public static final int CUSTNAMETRANS = AttributesEnum.CustNameTrans.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int ITMAMTSPNOTATRANS = AttributesEnum.ItmAmtSpNotaTrans.index();
    public static final int TRANSPRVBDGAMT = AttributesEnum.TransPrvBdgAmt.index();
    public static final int TRANSPRVACTUALAMT = AttributesEnum.TransPrvActualAmt.index();
    public static final int TRANSPRVDIFFAMT = AttributesEnum.TransPrvDiffAmt.index();
    public static final int TRANSPRVDIFFTYPE = AttributesEnum.TransPrvDiffType.index();
    public static final int LOVSELECTIONBASISVO = AttributesEnum.LovSelectionBasisVO.index();
    public static final int LOVITMIDPRFVO = AttributesEnum.LovItmIdPrfVO.index();
    public static final int LOVGRPIDVO = AttributesEnum.LovGrpIdVO.index();
    public static final int LOVITMUOMVO = AttributesEnum.LovItmUomVO.index();
    public static final int LOVCURRIDSPVO = AttributesEnum.LovCurrIdSpVO.index();
    public static final int LOVITMSELBASISVO = AttributesEnum.LovItmSelBasisVO.index();
    public static final int VWBDGEOBUDGETEXCPTNVO1 = AttributesEnum.VwBdgEoBudgetExcptnVO1.index();
    public static final int LOVBOMIDVO1 = AttributesEnum.LOVBomIdVO1.index();
    public static final int LOVDISTUBMETHODVO1 = AttributesEnum.LOVDistubMethodVO1.index();
    public static final int LOVDISTRIBUTIONPRDBASISVO1 = AttributesEnum.LOVDistributionPrdBasisVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgMtlBudgetDtlVORowImpl() {
    }

    /**
     * Gets BdgMtlBudgetDtlEO entity object.
     * @return the BdgMtlBudgetDtlEO
     */
    public BdgMtlBudgetDtlEOImpl getBdgMtlBudgetDtlEO() {
        return (BdgMtlBudgetDtlEOImpl) getEntity(ENTITY_BDGMTLBUDGETDTLEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @return the BDG_FY_ID
     */
    public Integer getBdgFyId() {
        return (Integer) getAttributeInternal(BDGFYID);
    }

    /**
     * Sets <code>value</code> as attribute value for BDG_FY_ID using the alias name BdgFyId.
     * @param value value to set the BDG_FY_ID
     */
    public void setBdgFyId(Integer value) {
        setAttributeInternal(BDGFYID, value);
    }


    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for ITM_GRP_ID using the alias name ItmGrpId.
     * @return the ITM_GRP_ID
     */
    public String getItmGrpId() {
        return (String) getAttributeInternal(ITMGRPID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_GRP_ID using the alias name ItmGrpId.
     * @param value value to set the ITM_GRP_ID
     */
    public void setItmGrpId(String value) {
        setAttributeInternal(ITMGRPID, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        if (getAttributeInternal(ITMID) != null && getAttributeInternal(ITMID).equals("0")) {
            return null;
        }
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @return the CURR_CONV_RATE
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_RATE using the alias name CurrConvRate.
     * @param value value to set the CURR_CONV_RATE
     */
    public void setCurrConvRate(Number value) {
        if (value == null)
            value = new Number(0);
        Number price = new Number(0);
        Number qty = new Number(0);
        if (this.getItmPrice() != null)
            price = this.getItmPrice();
        if (this.getItmQty() != null)
            qty = this.getItmQty();
        this.setItmAmtSp(price.multiply(qty));
        this.setItmAmtBs(value.multiply(price.multiply(qty)));
        setAttributeInternal(CURRCONVRATE, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(Number value) {
        if (value == null)
            value = new Number(0);
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for ITM_PRICE using the alias name ItmPrice.
     * @return the ITM_PRICE
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_PRICE using the alias name ItmPrice.
     * @param value value to set the ITM_PRICE
     */
    public void setItmPrice(Number value) {
        if (value == null)
            value = new Number(0);
        Number convFctr = new Number(0);
        Number qty = new Number(0);
        if (this.getCurrConvRate() != null)
            convFctr = this.getCurrConvRate();
        if (this.getItmQty() != null)
            qty = this.getItmQty();
        this.setItmAmtSp(value.multiply(qty));
        this.setItmAmtBs(convFctr.multiply(value.multiply(qty)));
        setAttributeInternal(ITMPRICE, value);
    }

    /**
     * Gets the attribute value for ITM_QTY using the alias name ItmQty.
     * @return the ITM_QTY
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_QTY using the alias name ItmQty.
     * @param value value to set the ITM_QTY
     */
    public void setItmQty(Number value) {
        if (value == null)
            value = new Number(0);
        Number convFctr = new Number(0);
        Number price = new Number(0);
        if (this.getCurrConvRate() != null)
            convFctr = this.getCurrConvRate();
        if (getItmPrice() != null)
            price = getItmPrice();
        this.setItmAmtSp(value.multiply(price));
        this.setItmAmtBs(convFctr.multiply(price.multiply(value)));
        setAttributeInternal(ITMQTY, value);
    }

    /**
     * Gets the attribute value for ITM_SEL_BASIS using the alias name ItmSelBasis.
     * @return the ITM_SEL_BASIS
     */
    public String getItmSelBasis() {
        return (String) getAttributeInternal(ITMSELBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_SEL_BASIS using the alias name ItmSelBasis.
     * @param value value to set the ITM_SEL_BASIS
     */
    public void setItmSelBasis(String value) {
        setAttributeInternal(ITMSELBASIS, value);
    }

    /**
     * Gets the attribute value for ITM_UOM using the alias name ItmUom.
     * @return the ITM_UOM
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_UOM using the alias name ItmUom.
     * @param value value to set the ITM_UOM
     */
    public void setItmUom(String value) {
        setAttributeInternal(ITMUOM, value);
    }

    /**
     * Gets the attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @return the PRD_END_DT
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_END_DT using the alias name PrdEndDt.
     * @param value value to set the PRD_END_DT
     */
    public void setPrdEndDt(Timestamp value) {
        setAttributeInternal(PRDENDDT, value);
    }

    /**
     * Gets the attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @return the PRD_START_DT
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRD_START_DT using the alias name PrdStartDt.
     * @param value value to set the PRD_START_DT
     */
    public void setPrdStartDt(Timestamp value) {
        setAttributeInternal(PRDSTARTDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        if (getAttributeInternal(TRANSITMDESC) != null &&
            (getAttributeInternal(TRANSITMDESC)).toString().length() > 0 && this.getItmId() == null &&
            this.getItmId().equalsIgnoreCase("0"))
            return (String) getAttributeInternal(TRANSITMDESC);
        else {
            BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) this.getApplicationModule();
            am.getLovItmIdPrf().setNamedWhereClauseParam("cldIdBind", getCldId());
            am.getLovItmIdPrf().setNamedWhereClauseParam("grpIdBind", getItmGrpId());
            am.getLovItmIdPrf().setNamedWhereClauseParam("hoOrgIdBind", getHoOrgId());
            am.getLovItmIdPrf().setNamedWhereClauseParam("orgIdBind", getOrgId());
            am.getLovItmIdPrf().setNamedWhereClauseParam("slocIdBind", getSlocId());
            am.getLovItmIdPrf().executeQuery();
            Row[] fr = am.getLovItmIdPrf().getFilteredRows("ItmId", this.getItmId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("ItmDesc");
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransItmDesc.
     * @param value value to set the  TransItmDesc
     */
    public void setTransItmDesc(String value) {
        setAttributeInternal(TRANSITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpNm.
     * @return the TransGrpNm
     */
    public String getTransGrpNm() {
        if (getAttributeInternal(TRANSGRPNM) == null && this.getItmGrpId() != null) {
            BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) this.getApplicationModule();
            am.getLovGrpId().setNamedWhereClauseParam("cldIdBind", getCldId());
            am.getLovGrpId().setNamedWhereClauseParam("hoOrgIdBind", getHoOrgId());
            am.getLovGrpId().setNamedWhereClauseParam("slocIdBind", getSlocId());
            am.getLovGrpId().executeQuery();
            Row[] fr = am.getLovGrpId().getFilteredRows("GrpId", this.getItmGrpId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("GrpNm");
            else
                return (String) getAttributeInternal(TRANSGRPNM);
        }
        return (String) getAttributeInternal(TRANSGRPNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransGrpNm.
     * @param value value to set the  TransGrpNm
     */
    public void setTransGrpNm(String value) {
        setAttributeInternal(TRANSGRPNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrDesc.
     * @return the TransCurrDesc
     */
    public String getTransCurrDesc() {
        if (getAttributeInternal(TRANSCURRDESC) != null)
            return (String) getAttributeInternal(TRANSCURRDESC);
        else {
            BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) this.getApplicationModule();
            am.getLovCurrIdSp().setNamedWhereClauseParam("cldIdBind", getCldId());
            am.getLovCurrIdSp().setNamedWhereClauseParam("orgIdBind", getOrgId());
            am.getLovCurrIdSp().executeQuery();
            Row[] fr = am.getLovCurrIdSp().getFilteredRows("CcCurrIdTxn", this.getCurrIdSp());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("CurrDescTxn");
        }
        return (String) getAttributeInternal(TRANSCURRDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrDesc.
     * @param value value to set the  TransCurrDesc
     */
    public void setTransCurrDesc(String value) {
        setAttributeInternal(TRANSCURRDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgCurrId.
     * @return the TransOrgCurrId
     */
    public Integer getTransOrgCurrId() {
        if (getAttributeInternal(TRANSORGCURRID) != null)
            return (Integer) getAttributeInternal(TRANSORGCURRID);
        else {
            BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) this.getApplicationModule();
            String hoOrg = (String) am.getBdgMtlBudget().getCurrentRow().getAttribute("HoOrgId");
            String org = (String) am.getBdgMtlBudget().getCurrentRow().getAttribute("OrgId");
            String cld = (String) am.getBdgMtlBudget().getCurrentRow().getAttribute("CldId");
            am.getLovOrgId().setNamedWhereClauseParam("cldIdBind", cld);
            am.getLovOrgId().setNamedWhereClauseParam("hoOrgIdBind", hoOrg);
            am.getLovOrgId().executeQuery();
            Row[] fr = am.getLovOrgId().getFilteredRows("OrgId", org);
            if (fr.length > 0)
                return (Integer) fr[0].getAttribute("OrgCurrIdBs");
        }
        return (Integer) getAttributeInternal(TRANSORGCURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgCurrId.
     * @param value value to set the  TransOrgCurrId
     */
    public void setTransOrgCurrId(Integer value) {
        setAttributeInternal(TRANSORGCURRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExceItmDesc.
     * @return the TransExceItmDesc
     */
    public String getTransExceItmDesc() {
        if (getAttributeInternal(TRANSEXCEITMDESC) == null && this.getBomDocId() != null) {
            ViewObjectImpl bomIdVO1 = this.getAm().getLOVBomIdVO1();
            bomIdVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            bomIdVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            bomIdVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            bomIdVO1.setNamedWhereClauseParam("BindDocId", this.getBomDocId());
            bomIdVO1.setNamedWhereClauseParam("BindItmId", null);
            bomIdVO1.setNamedWhereClauseParam("BindActv", null);

            bomIdVO1.executeQuery();

            Row[] allRowsInRange = bomIdVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                if (allRowsInRange[0].getAttribute("OutptItmId") != null) {
                    ViewObjectImpl idPrf = this.getAm().getLovItmIdPrf();
                    idPrf.setNamedWhereClauseParam("cldIdBind", getCldId());
                    idPrf.setNamedWhereClauseParam("grpIdBind", null);
                    idPrf.setNamedWhereClauseParam("hoOrgIdBind", getHoOrgId());
                    idPrf.setNamedWhereClauseParam("orgIdBind", getOrgId());
                    idPrf.setNamedWhereClauseParam("slocIdBind", getSlocId());
                    idPrf.executeQuery();
                    Row[] fr = idPrf.getFilteredRows("ItmId", allRowsInRange[0].getAttribute("OutptItmId"));
                    if (fr.length > 0)
                        return (String) fr[0].getAttribute("ItmDesc");
                }
            }
        }
        return (String) getAttributeInternal(TRANSEXCEITMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExceItmDesc.
     * @param value value to set the  TransExceItmDesc
     */
    public void setTransExceItmDesc(String value) {
        setAttributeInternal(TRANSEXCEITMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransExceItmId.
     * @return the TransExceItmId
     */
    public String getTransExceItmId() {
        if (getAttributeInternal(TRANSEXCEITMID) == null && this.getBomDocId() != null) {
            ViewObjectImpl bomIdVO1 = this.getAm().getLOVBomIdVO1();
            bomIdVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            bomIdVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            bomIdVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            bomIdVO1.setNamedWhereClauseParam("BindDocId", this.getBomDocId());
            bomIdVO1.setNamedWhereClauseParam("BindItmId", null);
            bomIdVO1.setNamedWhereClauseParam("BindActv", null);

            bomIdVO1.executeQuery();

            Row[] allRowsInRange = bomIdVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("OutptItmId");
            }
        }
        return (String) getAttributeInternal(TRANSEXCEITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransExceItmId.
     * @param value value to set the  TransExceItmId
     */
    public void setTransExceItmId(String value) {
        setAttributeInternal(TRANSEXCEITMID, value);
    }

    /**
     * Gets the attribute value for BOM_DOC_ID using the alias name BomDocId.
     * @return the BOM_DOC_ID
     */
    public String getBomDocId() {
        return (String) getAttributeInternal(BOMDOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for BOM_DOC_ID using the alias name BomDocId.
     * @param value value to set the BOM_DOC_ID
     */
    public void setBomDocId(String value) {
        setAttributeInternal(BOMDOCID, value);
    }

    /**
     * Gets the attribute value for CUST_EO_ID using the alias name CustEoId.
     * @return the CUST_EO_ID
     */
    public Integer getCustEoId() {
        return (Integer) getAttributeInternal(CUSTEOID);
    }

    /**
     * Sets <code>value</code> as attribute value for CUST_EO_ID using the alias name CustEoId.
     * @param value value to set the CUST_EO_ID
     */
    public void setCustEoId(Integer value) {
        setAttributeInternal(CUSTEOID, value);
    }


    /**
     * Gets the attribute value for ITM_SEL_TYPE using the alias name ItmSelType.
     * @return the ITM_SEL_TYPE
     */
    public String getItmSelType() {
        return (String) getAttributeInternal(ITMSELTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_SEL_TYPE using the alias name ItmSelType.
     * @param value value to set the ITM_SEL_TYPE
     */
    public void setItmSelType(String value) {
        setAttributeInternal(ITMSELTYPE, value);
    }


    /**
     * Gets the attribute value for the calculated attribute CustNameTrans.
     * @return the CustNameTrans
     */
    public String getCustNameTrans() {
        if (getAttributeInternal(CUSTNAMETRANS) == null && this.getCustEoId() != null) {
            ViewObjectImpl custVO1 = getAm().getLOVCustomerNameVO1();
            custVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            custVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            custVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            custVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            custVO1.setNamedWhereClauseParam("BindEoId", this.getCustEoId());
            custVO1.executeQuery();
            Row[] allRowsInRange = custVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(CUSTNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNameTrans.
     * @param value value to set the  CustNameTrans
     */
    public void setCustNameTrans(String value) {
        setAttributeInternal(CUSTNAMETRANS, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for REGION using the alias name Region.
     * @return the REGION
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Sets <code>value</code> as attribute value for REGION using the alias name Region.
     * @param value value to set the REGION
     */
    public void setRegion(String value) {
        setAttributeInternal(REGION, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSpNotaTrans.
     * @return the ItmAmtSpNotaTrans
     */
    public Number getItmAmtSpNotaTrans() {
        if (getAttributeInternal(ITMAMTSPNOTATRANS) == null && this.getItmAmtSp() != null) {
            return this.getAm().convertNumberToNotation(getItmAmtSp());
        }
        return (Number) getAttributeInternal(ITMAMTSPNOTATRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrvBdgAmt.
     * @return the TransPrvBdgAmt
     */
    public Number getTransPrvBdgAmt() {
        if (getAttributeInternal(TRANSPRVBDGAMT) != null)
            return (Number) getAttributeInternal(TRANSPRVBDGAMT);
        else {
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("CldIdBind", this.getCldId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("RegionBind", this.getRegion());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmGrpIdBind", this.getItmGrpId());

            ViewObjectImpl bdgMtlBudget = this.getAm().getBdgMtlBudget();
            RowQualifier rQ = new RowQualifier(bdgMtlBudget);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId = " + this.getSlocId() + " and HoOrgId = '" +
                              this.getHoOrgId() + "' and DocId ='" + this.getDocId() + "'");
            Row[] filteredRows = bdgMtlBudget.getFilteredRows(rQ);

            if (filteredRows.length > 0) {
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdStrtDtBind",
                                                                               filteredRows[0].getAttribute("PrdStartDt"));
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdEndDtBind",
                                                                               filteredRows[0].getAttribute("PrdEndDt"));
            }
            this.getAm().getMtlBudgetVsActualVO().executeQuery();
            Row[] rows = this.getAm().getMtlBudgetVsActualVO().getAllRowsInRange();
            if (rows.length > 0)
                return (Number) rows[0].getAttribute("BudgAmt");
            else
                return new Number(0);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrvActualAmt.
     * @return the TransPrvActualAmt
     */
    public Number getTransPrvActualAmt() {
        if (getAttributeInternal(TRANSPRVACTUALAMT) != null)
            return (Number) getAttributeInternal(TRANSPRVACTUALAMT);
        else {
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("CldIdBind", this.getCldId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("RegionBind", this.getRegion());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmGrpIdBind", this.getItmGrpId());

            ViewObjectImpl bdgMtlBudget = this.getAm().getBdgMtlBudget();
            RowQualifier rQ = new RowQualifier(bdgMtlBudget);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId = " + this.getSlocId() + " and HoOrgId = '" +
                              this.getHoOrgId() + "' and DocId ='" + this.getDocId() + "'");
            Row[] filteredRows = bdgMtlBudget.getFilteredRows(rQ);

            if (filteredRows.length > 0) {
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdStrtDtBind",
                                                                               filteredRows[0].getAttribute("PrdStartDt"));
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdEndDtBind",
                                                                               filteredRows[0].getAttribute("PrdEndDt"));
            }
            this.getAm().getMtlBudgetVsActualVO().executeQuery();
            Row[] rows = this.getAm().getMtlBudgetVsActualVO().getAllRowsInRange();
            if (rows.length > 0)
                return (Number) rows[0].getAttribute("ActualAmt");
            else
                return new Number(0);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrvDiffAmt.
     * @return the TransPrvDiffAmt
     */
    public Number getTransPrvDiffAmt() {
        if (getAttributeInternal(TRANSPRVDIFFAMT) != null)
            return (Number) getAttributeInternal(TRANSPRVDIFFAMT);
        else {
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("CldIdBind", this.getCldId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("RegionBind", this.getRegion());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmGrpIdBind", this.getItmGrpId());

            ViewObjectImpl bdgMtlBudget = this.getAm().getBdgMtlBudget();
            RowQualifier rQ = new RowQualifier(bdgMtlBudget);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId = " + this.getSlocId() + " and HoOrgId = '" +
                              this.getHoOrgId() + "' and DocId ='" + this.getDocId() + "'");
            Row[] filteredRows = bdgMtlBudget.getFilteredRows(rQ);

            if (filteredRows.length > 0) {
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdStrtDtBind",
                                                                               filteredRows[0].getAttribute("PrdStartDt"));
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdEndDtBind",
                                                                               filteredRows[0].getAttribute("PrdEndDt"));
            }
            this.getAm().getMtlBudgetVsActualVO().executeQuery();
            Row[] rows = this.getAm().getMtlBudgetVsActualVO().getAllRowsInRange();
            if (rows.length > 0)
                return (Number) rows[0].getAttribute("DiffAmt");
            else
                return new Number(0);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrvDiffType.
     * @return the TransPrvDiffType
     */
    public Integer getTransPrvDiffType() {
        if (getAttributeInternal(TRANSPRVDIFFTYPE) != null)
            return (Integer) getAttributeInternal(TRANSPRVDIFFTYPE);
        else {
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("CldIdBind", this.getCldId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("SlocIdBind", this.getSlocId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("OrgIdBind", this.getOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("HoOrgIdBind", this.getHoOrgId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("RegionBind", this.getRegion());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmIdBind", this.getItmId());
            this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("ItmGrpIdBind", this.getItmGrpId());

            ViewObjectImpl bdgMtlBudget = this.getAm().getBdgMtlBudget();
            RowQualifier rQ = new RowQualifier(bdgMtlBudget);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId = " + this.getSlocId() + " and HoOrgId = '" +
                              this.getHoOrgId() + "' and DocId ='" + this.getDocId() + "'");
            Row[] filteredRows = bdgMtlBudget.getFilteredRows(rQ);

            if (filteredRows.length > 0) {
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdStrtDtBind",
                                                                               filteredRows[0].getAttribute("PrdStartDt"));
                this.getAm().getMtlBudgetVsActualVO().setNamedWhereClauseParam("PrdEndDtBind",
                                                                               filteredRows[0].getAttribute("PrdEndDt"));
            }
            this.getAm().getMtlBudgetVsActualVO().executeQuery();
            Row[] rows = this.getAm().getMtlBudgetVsActualVO().getAllRowsInRange();
            if (rows.length > 0)
                return (Integer) rows[0].getAttribute("DiffAmtType");
            else
                return new Integer(0);
        }
    }


    /**
     * Gets the attribute value for DISTB_METHD using the alias name DistbMethd.
     * @return the DISTB_METHD
     */
    public Integer getDistbMethd() {
        return (Integer) getAttributeInternal(DISTBMETHD);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_METHD using the alias name DistbMethd.
     * @param value value to set the DISTB_METHD
     */
    public void setDistbMethd(Integer value) {
        setAttributeInternal(DISTBMETHD, value);
    }

    /**
     * Gets the attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @return the DISTB_PRD_BASIS
     */
    public Integer getDistbPrdBasis() {
        return (Integer) getAttributeInternal(DISTBPRDBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_PRD_BASIS using the alias name DistbPrdBasis.
     * @param value value to set the DISTB_PRD_BASIS
     */
    public void setDistbPrdBasis(Integer value) {
        setAttributeInternal(DISTBPRDBASIS, value);
    }

    /**
     * Gets the attribute value for DISTB_UNIT using the alias name DistbUnit.
     * @return the DISTB_UNIT
     */
    public Integer getDistbUnit() {
        return (Integer) getAttributeInternal(DISTBUNIT);
    }

    /**
     * Sets <code>value</code> as attribute value for DISTB_UNIT using the alias name DistbUnit.
     * @param value value to set the DISTB_UNIT
     */
    public void setDistbUnit(Integer value) {
        setAttributeInternal(DISTBUNIT, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovSelectionBasisVO.
     */
    public RowSet getLovSelectionBasisVO() {
        return (RowSet) getAttributeInternal(LOVSELECTIONBASISVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdPrfVO.
     */
    public RowSet getLovItmIdPrfVO() {
        return (RowSet) getAttributeInternal(LOVITMIDPRFVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGrpIdVO.
     */
    public RowSet getLovGrpIdVO() {
        return (RowSet) getAttributeInternal(LOVGRPIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUomVO.
     */
    public RowSet getLovItmUomVO() {
        return (RowSet) getAttributeInternal(LOVITMUOMVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrIdSpVO.
     */
    public RowSet getLovCurrIdSpVO() {
        return (RowSet) getAttributeInternal(LOVCURRIDSPVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmSelBasisVO.
     */
    public RowSet getLovItmSelBasisVO() {
        return (RowSet) getAttributeInternal(LOVITMSELBASISVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VwBdgEoBudgetExcptnVO1.
     */
    public RowSet getVwBdgEoBudgetExcptnVO1() {
        return (RowSet) getAttributeInternal(VWBDGEOBUDGETEXCPTNVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBomIdVO1.
     */
    public RowSet getLOVBomIdVO1() {
        return (RowSet) getAttributeInternal(LOVBOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistubMethodVO1.
     */
    public RowSet getLOVDistubMethodVO1() {
        return (RowSet) getAttributeInternal(LOVDISTUBMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistributionPrdBasisVO1.
     */
    public RowSet getLOVDistributionPrdBasisVO1() {
        return (RowSet) getAttributeInternal(LOVDISTRIBUTIONPRDBASISVO1);
    }

    /**
     * Method will return Application Module App
     */
    public BdgMaterialBudgetAMImpl getAm() {
        BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) getApplicationModule();
        return am;
    }
}

