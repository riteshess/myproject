package bdgmaterialbudgetapp.model.views;

import bdgmaterialbudgetapp.model.modules.BdgMaterialBudgetAMImpl;

import java.math.BigInteger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Apr 08 15:58:50 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgMtlBudgetSummDtlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        BdgFyId,
        DocId,
        ItmGrpId,
        ItmId,
        CurrConvRate,
        CurrIdSp,
        ItmAmtBs,
        ItmAmtSp,
        ItmPrice,
        ItmQty,
        ItmSelBasis,
        ItmUom,
        PrdEndDt,
        PrdStartDt,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        CustEoId,
        ItmSelType,
        DistbMethd,
        DistbPrdBasis,
        DistbUnit,
        EoId,
        Region,
        CustNameTrans,
        TransGrpNm,
        TransItmDesc,
        ItmAmtSpNotaTrans,
        ViewBdgMtlBudgetDtl,
        BdgMtlBudgetProdPrdDtl,
        LovGrpIdVO1,
        LovItmIdPrfVO1,
        LovItmSelBasisVO1,
        LovItmUomVO1,
        LovSelectionBasisVO1,
        VwBdgEoBudgetExcptnVO1,
        LOVDistubMethodVO1,
        LOVDistributionPrdBasisVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int BDGFYID = AttributesEnum.BdgFyId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ITMGRPID = AttributesEnum.ItmGrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int CURRCONVRATE = AttributesEnum.CurrConvRate.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMSELBASIS = AttributesEnum.ItmSelBasis.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CUSTEOID = AttributesEnum.CustEoId.index();
    public static final int ITMSELTYPE = AttributesEnum.ItmSelType.index();
    public static final int DISTBMETHD = AttributesEnum.DistbMethd.index();
    public static final int DISTBPRDBASIS = AttributesEnum.DistbPrdBasis.index();
    public static final int DISTBUNIT = AttributesEnum.DistbUnit.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int CUSTNAMETRANS = AttributesEnum.CustNameTrans.index();
    public static final int TRANSGRPNM = AttributesEnum.TransGrpNm.index();
    public static final int TRANSITMDESC = AttributesEnum.TransItmDesc.index();
    public static final int ITMAMTSPNOTATRANS = AttributesEnum.ItmAmtSpNotaTrans.index();
    public static final int VIEWBDGMTLBUDGETDTL = AttributesEnum.ViewBdgMtlBudgetDtl.index();
    public static final int BDGMTLBUDGETPRODPRDDTL = AttributesEnum.BdgMtlBudgetProdPrdDtl.index();
    public static final int LOVGRPIDVO1 = AttributesEnum.LovGrpIdVO1.index();
    public static final int LOVITMIDPRFVO1 = AttributesEnum.LovItmIdPrfVO1.index();
    public static final int LOVITMSELBASISVO1 = AttributesEnum.LovItmSelBasisVO1.index();
    public static final int LOVITMUOMVO1 = AttributesEnum.LovItmUomVO1.index();
    public static final int LOVSELECTIONBASISVO1 = AttributesEnum.LovSelectionBasisVO1.index();
    public static final int VWBDGEOBUDGETEXCPTNVO1 = AttributesEnum.VwBdgEoBudgetExcptnVO1.index();
    public static final int LOVDISTUBMETHODVO1 = AttributesEnum.LOVDistubMethodVO1.index();
    public static final int LOVDISTRIBUTIONPRDBASISVO1 = AttributesEnum.LOVDistributionPrdBasisVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgMtlBudgetSummDtlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute BdgFyId.
     * @return the BdgFyId
     */
    public Integer getBdgFyId() {
        return (Integer) getAttributeInternal(BDGFYID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpId.
     * @return the ItmGrpId
     */
    public String getItmGrpId() {
        return (String) getAttributeInternal(ITMGRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrConvRate.
     * @return the CurrConvRate
     */
    public Number getCurrConvRate() {
        return (Number) getAttributeInternal(CURRCONVRATE);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrIdSp.
     * @return the CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSp.
     * @return the ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmPrice.
     * @return the ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmQty.
     * @return the ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSelBasis.
     * @return the ItmSelBasis
     */
    public String getItmSelBasis() {
        return (String) getAttributeInternal(ITMSELBASIS);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdEndDt.
     * @return the PrdEndDt
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdStartDt.
     * @return the PrdStartDt
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for the calculated attribute CustEoId.
     * @return the CustEoId
     */
    public Integer getCustEoId() {
        return (Integer) getAttributeInternal(CUSTEOID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmSelType.
     * @return the ItmSelType
     */
    public String getItmSelType() {
        return (String) getAttributeInternal(ITMSELTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute DistbMethd.
     * @return the DistbMethd
     */
    public Integer getDistbMethd() {
        return (Integer) getAttributeInternal(DISTBMETHD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DistbMethd.
     * @param value value to set the  DistbMethd
     */
    public void setDistbMethd(Integer value) {
        setAttributeInternal(DISTBMETHD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DistbPrdBasis.
     * @return the DistbPrdBasis
     */
    public Integer getDistbPrdBasis() {
        return (Integer) getAttributeInternal(DISTBPRDBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DistbPrdBasis.
     * @param value value to set the  DistbPrdBasis
     */
    public void setDistbPrdBasis(Integer value) {
        setAttributeInternal(DISTBPRDBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DistbUnit.
     * @return the DistbUnit
     */
    public Integer getDistbUnit() {
        return (Integer) getAttributeInternal(DISTBUNIT);
    }


    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute Region.
     * @return the Region
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNameTrans.
     * @return the CustNameTrans
     */
    public String getCustNameTrans() {
        if (getAttributeInternal(CUSTNAMETRANS) == null && this.getCustEoId() != null) {
            ViewObjectImpl custVO1 = getAm().getLOVCustomerNameVO1();
            custVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            custVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            custVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            custVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            custVO1.setNamedWhereClauseParam("BindEoId", this.getCustEoId());
            custVO1.executeQuery();
            Row[] allRowsInRange = custVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(CUSTNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNameTrans.
     * @param value value to set the  CustNameTrans
     */
    public void setCustNameTrans(String value) {
        setAttributeInternal(CUSTNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransGrpNm.
     * @return the TransGrpNm
     */
    public String getTransGrpNm() {
        if (getAttributeInternal(TRANSGRPNM) == null && this.getItmGrpId() != null) {
            ViewObjectImpl grpId = this.getAm().getLovGrpId();
            grpId.setNamedWhereClauseParam("cldIdBind", getCldId());
            grpId.setNamedWhereClauseParam("hoOrgIdBind", getHoOrgId());
            grpId.setNamedWhereClauseParam("slocIdBind", getSlocId());
            grpId.executeQuery();
            Row[] fr = grpId.getFilteredRows("GrpId", this.getItmGrpId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("GrpNm");
            else
                return (String) getAttributeInternal(TRANSGRPNM);
        }
        return (String) getAttributeInternal(TRANSGRPNM);
    }

    /**
     * Gets the attribute value for the calculated attribute TransItmDesc.
     * @return the TransItmDesc
     */
    public String getTransItmDesc() {
        if (getAttributeInternal(TRANSITMDESC) == null && this.getItmId() != null) {
            ViewObjectImpl idPrf = this.getAm().getLovItmIdPrf();
            idPrf.setNamedWhereClauseParam("cldIdBind", getCldId());
            idPrf.setNamedWhereClauseParam("grpIdBind", getItmGrpId());
            idPrf.setNamedWhereClauseParam("hoOrgIdBind", getHoOrgId());
            idPrf.setNamedWhereClauseParam("orgIdBind", getOrgId());
            idPrf.setNamedWhereClauseParam("slocIdBind", getSlocId());
            idPrf.executeQuery();
            Row[] fr = idPrf.getFilteredRows("ItmId", this.getItmId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("ItmDesc");
        }
        return (String) getAttributeInternal(TRANSITMDESC);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSpNotaTrans.
     * @return the ItmAmtSpNotaTrans
     */
    public Number getItmAmtSpNotaTrans() {
        if (getAttributeInternal(ITMAMTSPNOTATRANS) == null && this.getItmAmtSp() != null) {
            return this.getAm().convertNumberToNotation(getItmAmtSp());
        }
        return (Number) getAttributeInternal(ITMAMTSPNOTATRANS);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ViewBdgMtlBudgetDtl.
     */
    public RowIterator getViewBdgMtlBudgetDtl() {
        return (RowIterator) getAttributeInternal(VIEWBDGMTLBUDGETDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link BdgMtlBudgetProdPrdDtl.
     */
    public RowIterator getBdgMtlBudgetProdPrdDtl() {
        return (RowIterator) getAttributeInternal(BDGMTLBUDGETPRODPRDDTL);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovGrpIdVO1.
     */
    public RowSet getLovGrpIdVO1() {
        return (RowSet) getAttributeInternal(LOVGRPIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmIdPrfVO1.
     */
    public RowSet getLovItmIdPrfVO1() {
        return (RowSet) getAttributeInternal(LOVITMIDPRFVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmSelBasisVO1.
     */
    public RowSet getLovItmSelBasisVO1() {
        return (RowSet) getAttributeInternal(LOVITMSELBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovItmUomVO1.
     */
    public RowSet getLovItmUomVO1() {
        return (RowSet) getAttributeInternal(LOVITMUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSelectionBasisVO1.
     */
    public RowSet getLovSelectionBasisVO1() {
        return (RowSet) getAttributeInternal(LOVSELECTIONBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VwBdgEoBudgetExcptnVO1.
     */
    public RowSet getVwBdgEoBudgetExcptnVO1() {
        return (RowSet) getAttributeInternal(VWBDGEOBUDGETEXCPTNVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistubMethodVO1.
     */
    public RowSet getLOVDistubMethodVO1() {
        return (RowSet) getAttributeInternal(LOVDISTUBMETHODVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDistributionPrdBasisVO1.
     */
    public RowSet getLOVDistributionPrdBasisVO1() {
        return (RowSet) getAttributeInternal(LOVDISTRIBUTIONPRDBASISVO1);
    }

    /**
     * Method will return Application Module App
     */
    public BdgMaterialBudgetAMImpl getAm() {
        BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) getApplicationModule();
        return am;
    }
}

