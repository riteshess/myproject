package bdgmaterialbudgetapp.model.views;

import bdgmaterialbudgetapp.model.modules.BdgMaterialBudgetAMImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 18 18:06:43 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgMtlProdPrdDtlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        CustEoId,
        DocId,
        EoId,
        HoOrgId,
        ItmAmtBs,
        ItmAmtSp,
        ItmGrpId,
        ItmId,
        ItmPrice,
        ItmQty,
        ItmUom,
        OrgId,
        PrdDtlEndDt,
        PrdDtlStartDt,
        PrdEndDt,
        PrdStartDt,
        Region,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ItmAmtSpNotaTrans,
        ItmAmtBsNotaTrans,
        LOVEoIdVO1,
        LOVLocationNmVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CUSTEOID = AttributesEnum.CustEoId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMGRPID = AttributesEnum.ItmGrpId.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMPRICE = AttributesEnum.ItmPrice.index();
    public static final int ITMQTY = AttributesEnum.ItmQty.index();
    public static final int ITMUOM = AttributesEnum.ItmUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int PRDDTLENDDT = AttributesEnum.PrdDtlEndDt.index();
    public static final int PRDDTLSTARTDT = AttributesEnum.PrdDtlStartDt.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int REGION = AttributesEnum.Region.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITMAMTSPNOTATRANS = AttributesEnum.ItmAmtSpNotaTrans.index();
    public static final int ITMAMTBSNOTATRANS = AttributesEnum.ItmAmtBsNotaTrans.index();
    public static final int LOVEOIDVO1 = AttributesEnum.LOVEoIdVO1.index();
    public static final int LOVLOCATIONNMVO1 = AttributesEnum.LOVLocationNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgMtlProdPrdDtlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute CustEoId.
     * @return the CustEoId
     */
    public Integer getCustEoId() {
        return (Integer) getAttributeInternal(CUSTEOID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBs.
     * @return the ItmAmtBs
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSp.
     * @return the ItmAmtSp
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmGrpId.
     * @return the ItmGrpId
     */
    public String getItmGrpId() {
        return (String) getAttributeInternal(ITMGRPID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmId.
     * @return the ItmId
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmPrice.
     * @return the ItmPrice
     */
    public Number getItmPrice() {
        return (Number) getAttributeInternal(ITMPRICE);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmQty.
     * @return the ItmQty
     */
    public Number getItmQty() {
        return (Number) getAttributeInternal(ITMQTY);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmUom.
     * @return the ItmUom
     */
    public String getItmUom() {
        return (String) getAttributeInternal(ITMUOM);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdDtlEndDt.
     * @return the PrdDtlEndDt
     */
    public Timestamp getPrdDtlEndDt() {
        return (Timestamp) getAttributeInternal(PRDDTLENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdDtlStartDt.
     * @return the PrdDtlStartDt
     */
    public Timestamp getPrdDtlStartDt() {
        return (Timestamp) getAttributeInternal(PRDDTLSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdEndDt.
     * @return the PrdEndDt
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdStartDt.
     * @return the PrdStartDt
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Gets the attribute value for the calculated attribute Region.
     * @return the Region
     */
    public String getRegion() {
        return (String) getAttributeInternal(REGION);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtSpNotaTrans.
     * @return the ItmAmtSpNotaTrans
     */
    public Number getItmAmtSpNotaTrans() {
        if (getAttributeInternal(ITMAMTSPNOTATRANS) == null && this.getItmAmtSp() != null) {
            return this.getAm().convertNumberToNotation(getItmAmtSp());
        }
        return (Number) getAttributeInternal(ITMAMTSPNOTATRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmAmtBsNotaTrans.
     * @return the ItmAmtBsNotaTrans
     */
    public Number getItmAmtBsNotaTrans() {
        if (getAttributeInternal(ITMAMTBSNOTATRANS) == null && this.getItmAmtBs() != null) {
            return this.getAm().convertNumberToNotation(getItmAmtBs());
        }
        return (Number) getAttributeInternal(ITMAMTBSNOTATRANS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoIdVO1.
     */
    public RowSet getLOVEoIdVO1() {
        return (RowSet) getAttributeInternal(LOVEOIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLocationNmVO1.
     */
    public RowSet getLOVLocationNmVO1() {
        return (RowSet) getAttributeInternal(LOVLOCATIONNMVO1);
    }


    /**
     * Method will return Application Module App
     */
    public BdgMaterialBudgetAMImpl getAm() {
        BdgMaterialBudgetAMImpl am = (BdgMaterialBudgetAMImpl) getApplicationModule();
        return am;
    }
}
