package bdgkraeoprfapp.model.modules;


import bdgkraeoprfapp.model.modules.common.BdgKraEoPrfAM;

import bdgkraeoprfapp.model.utils.ADFUtils;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Dec 16 10:06:02 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgKraEoPrfAMImpl extends ApplicationModuleImpl implements BdgKraEoPrfAM {
    /**
     * This is the default constructor (do not remove).
     */
    public BdgKraEoPrfAMImpl() {
    }

    /**
     * Container's getter for SearchDual.
     * @return SearchDual
     */
    public ViewObjectImpl getSearchDual() {
        return (ViewObjectImpl) findViewObject("SearchDual");
    }

    /**
     * Container's getter for BdgKraPrf.
     * @return BdgKraPrf
     */
    public ViewObjectImpl getBdgKraPrf() {
        return (ViewObjectImpl) findViewObject("BdgKraPrf");
    }

    /**
     * Container's getter for BdgKraEoPrf.
     * @return BdgKraEoPrf
     */
    public ViewObjectImpl getBdgKraEoPrf() {
        return (ViewObjectImpl) findViewObject("BdgKraEoPrf");
    }

    /**
     * Container's getter for BdgKraPrfToEoPrfVL1.
     * @return BdgKraPrfToEoPrfVL1
     */
    public ViewLinkImpl getBdgKraPrfToEoPrfVL1() {
        return (ViewLinkImpl) findViewLink("BdgKraPrfToEoPrfVL1");
    }
    
    public void ExecuteOnPageLoad(String cldId, String hoOrgId, String orgId, Integer slocId)
    {
        this.getBdgKraPrf().setNamedWhereClauseParam("cldIdBind", cldId);
            this.getBdgKraPrf().setNamedWhereClauseParam("hoOrgIdBind", hoOrgId);
            this.getBdgKraPrf().setNamedWhereClauseParam("slocIdBind", slocId);
            this.getBdgKraPrf().executeQuery();
        }
    
    /**
        * Method used to call function to get the fy id.
        * @param CldId
        * @param OrgId
        * @return FY Id
        */
       public Integer GetFyIdOrg(String CldId, String OrgId) {
           ViewObjectImpl kraEo = this.getBdgKraEoPrf();
           Integer fyId = 0;
           if (kraEo.getCurrentRow().getAttribute("PrdStartDt") != null) {
               fyId = (Integer) (callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {
                                                    CldId, OrgId, kraEo.getCurrentRow().getAttribute("PrdStartDt")
               }));


               if (fyId > 0 && kraEo.getCurrentRow().getAttribute("FyId") != null) {
                   kraEo.getCurrentRow().setAttribute("FyId", fyId);
               }
           }
           return fyId;
       }
    
    
    public void SearchKra(String desgNm, String empNm, String kraDesc)
    {
        
        }
    
    
    /**
         * @param sqlReturnType
         * @param stmt
         * @param bindVars
         * @return
         */
        protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
            CallableStatement st = null;
            try {
                st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                st.registerOutParameter(1, sqlReturnType);
                if (bindVars != null) {
                    for (int z = 0; z < bindVars.length; z++) {
                        st.setObject(z + 2, bindVars[z]);
                    }
                }
                st.executeUpdate();
                return st.getObject(1);
            } catch (SQLException e) {
                throw new JboException(e.getMessage());
                // throw new JboException(e);
            } finally {
                if (st != null) {
                    try {
                        st.close();
                    } catch (SQLException e) {
                       
                    }
                }
            }
        }


        public String GenDocTxnId(String cldId, Integer slocId, String orgId, Integer usrId, Integer docId, Integer docTypeId)
        {
            String docTxnId= null;
                docTxnId = (String) (callStoredFunction(Types.VARCHAR, "APP.get_txn_id (?,?,?,?,?,?)", new Object[] {
                                                     cldId,slocId, orgId,usrId,docId,docTypeId 
                }));
                
                if(docTxnId!= null && docTxnId.length()>0)
                {
                        ViewObjectImpl kraEo = this.getBdgKraEoPrf();
                        kraEo.getCurrentRow().setAttribute("DocId", docTxnId);

                    }
                
                return docTxnId;
            }
}

