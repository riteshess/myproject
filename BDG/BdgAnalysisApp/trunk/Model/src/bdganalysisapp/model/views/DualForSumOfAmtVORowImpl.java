package bdganalysisapp.model.views;

import bdganalysisapp.model.modules.BdgAnalysisAppAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 19 14:08:59 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualForSumOfAmtVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        TransCldId,
        TransSlocId,
        TransHoOrgId,
        TransSumOrgBudgAmt,
        TransSumOrgPrvBudgAmt,
        TransSumOrgPropAmt,
        TransOrgSumVariance,
        TransOrgSumPropVar,
        TransOrgSumVarFlg,
        TransOrgSumPropVarFlg,
        TransSumOrgBudgAmtDisp,
        TransSumOrgPrvBudgAmtDisp,
        TransSumOrgPropAmtDisp,
        TransBdgEoBudgetDtlAmtSum;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int TRANSCLDID = AttributesEnum.TransCldId.index();
    public static final int TRANSSLOCID = AttributesEnum.TransSlocId.index();
    public static final int TRANSHOORGID = AttributesEnum.TransHoOrgId.index();
    public static final int TRANSSUMORGBUDGAMT = AttributesEnum.TransSumOrgBudgAmt.index();
    public static final int TRANSSUMORGPRVBUDGAMT = AttributesEnum.TransSumOrgPrvBudgAmt.index();
    public static final int TRANSSUMORGPROPAMT = AttributesEnum.TransSumOrgPropAmt.index();
    public static final int TRANSORGSUMVARIANCE = AttributesEnum.TransOrgSumVariance.index();
    public static final int TRANSORGSUMPROPVAR = AttributesEnum.TransOrgSumPropVar.index();
    public static final int TRANSORGSUMVARFLG = AttributesEnum.TransOrgSumVarFlg.index();
    public static final int TRANSORGSUMPROPVARFLG = AttributesEnum.TransOrgSumPropVarFlg.index();
    public static final int TRANSSUMORGBUDGAMTDISP = AttributesEnum.TransSumOrgBudgAmtDisp.index();
    public static final int TRANSSUMORGPRVBUDGAMTDISP = AttributesEnum.TransSumOrgPrvBudgAmtDisp.index();
    public static final int TRANSSUMORGPROPAMTDISP = AttributesEnum.TransSumOrgPropAmtDisp.index();
    public static final int TRANSBDGEOBUDGETDTLAMTSUM = AttributesEnum.TransBdgEoBudgetDtlAmtSum.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualForSumOfAmtVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOrgBudgAmt.
     * @return the TransSumOrgBudgAmt
     */
    public Number getTransSumOrgBudgAmt() {
        BdgAnalysisAppAMImpl am = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return sumAmt(am.getBdgOrgSumm().getFilteredRows("CldId", this.getTransCldId()), "BudgAmt");
        // return (Number) getAttributeInternal(TRANSSUMORGBUDGAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgBudgAmt.
     * @param value value to set the  TransSumOrgBudgAmt
     */
    public void setTransSumOrgBudgAmt(Number value) {
        setAttributeInternal(TRANSSUMORGBUDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCldId.
     * @return the TransCldId
     */
    public String getTransCldId() {
        return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        // return (String) getAttributeInternal(TRANSCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCldId.
     * @param value value to set the  TransCldId
     */
    public void setTransCldId(String value) {
        setAttributeInternal(TRANSCLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSlocId.
     * @return the TransSlocId
     */
    public Integer getTransSlocId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        // return (Integer) getAttributeInternal(TRANSSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSlocId.
     * @param value value to set the  TransSlocId
     */
    public void setTransSlocId(Integer value) {
        setAttributeInternal(TRANSSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransHoOrgId.
     * @return the TransHoOrgId
     */
    public String getTransHoOrgId() {
        return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        //return (String) getAttributeInternal(TRANSHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransHoOrgId.
     * @param value value to set the  TransHoOrgId
     */
    public void setTransHoOrgId(String value) {
        setAttributeInternal(TRANSHOORGID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransSumOrgPrvBudgAmt.
     * @return the TransSumOrgPrvBudgAmt
     */
    public Number getTransSumOrgPrvBudgAmt() {
        BdgAnalysisAppAMImpl am = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return sumAmt(am.getBdgOrgSumm().getFilteredRows("CldId", this.getTransCldId()), "PrvBudgAmt");
        //   return (Number) getAttributeInternal(TRANSSUMORGPRVBUDGAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgPrvBudgAmt.
     * @param value value to set the  TransSumOrgPrvBudgAmt
     */
    public void setTransSumOrgPrvBudgAmt(Number value) {
        setAttributeInternal(TRANSSUMORGPRVBUDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOrgPropAmt.
     * @return the TransSumOrgPropAmt
     */
    public Number getTransSumOrgPropAmt() {
        BdgAnalysisAppAMImpl am = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return sumAmt(am.getBdgOrgSumm().getFilteredRows("CldId", this.getTransCldId()), "TransPropBdgAmt");
        // return (Number) getAttributeInternal(TRANSSUMORGPROPAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgPropAmt.
     * @param value value to set the  TransSumOrgPropAmt
     */
    public void setTransSumOrgPropAmt(Number value) {
        setAttributeInternal(TRANSSUMORGPROPAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgSumVariance.
     * @return the TransOrgSumVariance
     */
    public Number getTransOrgSumVariance() {
        if (getAttributeInternal(TRANSORGSUMVARIANCE) != null)
            return (Number) getAttributeInternal(TRANSORGSUMVARIANCE);
        else {
            Number var = new Number(0);
            Number budgAmt = this.getTransSumOrgBudgAmt();
            Number prvBudgAmt = this.getTransSumOrgPrvBudgAmt();
            if (budgAmt != null && prvBudgAmt != null && prvBudgAmt.compareTo(new Number(0)) > 0)
                var = ((budgAmt.subtract(prvBudgAmt)).multiply(new Number(100))).divide(prvBudgAmt);
            return (Number) var.abs();
        }
        // return (Number) getAttributeInternal(TRANSORGSUMVARIANCE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgSumVariance.
     * @param value value to set the  TransOrgSumVariance
     */
    public void setTransOrgSumVariance(Number value) {
        setAttributeInternal(TRANSORGSUMVARIANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgSumPropVar.
     * @return the TransOrgSumPropVar
     */
    public Number getTransOrgSumPropVar() {
        // return (Number) getAttributeInternal(TRANSORGSUMPROPVAR);
        if (getAttributeInternal(TRANSORGSUMPROPVAR) != null)
            return (Number) getAttributeInternal(TRANSORGSUMPROPVAR);
        else {
            Number var = new Number(0);
            Number propAmt = this.getTransSumOrgPropAmt();
            Number prvAmt = this.getTransSumOrgPrvBudgAmt();
            if (propAmt != null && prvAmt != null && prvAmt.compareTo(new Number(0)) > 0)
                var = ((propAmt.subtract(prvAmt)).multiply(new Number(100))).divide(prvAmt);
            return (Number) var.abs();
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgSumPropVar.
     * @param value value to set the  TransOrgSumPropVar
     */
    public void setTransOrgSumPropVar(Number value) {
        setAttributeInternal(TRANSORGSUMPROPVAR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgSumVarFlg.
     * @return the TransOrgSumVarFlg
     */
    public String getTransOrgSumVarFlg() {
        // return (String) getAttributeInternal(TRANSORGSUMVARFLG);
        Number var = new Number(0);
        Number budgAmt = this.getTransSumOrgBudgAmt();
        Number prvBudgAmt = this.getTransSumOrgPrvBudgAmt();
        if (budgAmt != null && prvBudgAmt != null && prvBudgAmt.compareTo(new Number(0)) > 0)
            var = ((budgAmt.subtract(prvBudgAmt)).multiply(new Number(100))).divide(prvBudgAmt);
        if (var.compareTo(new Number(0)) >= 0)
            return "U";
        else
            return "D";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgSumVarFlg.
     * @param value value to set the  TransOrgSumVarFlg
     */
    public void setTransOrgSumVarFlg(String value) {
        setAttributeInternal(TRANSORGSUMVARFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOrgSumPropVarFlg.
     * @return the TransOrgSumPropVarFlg
     */
    public String getTransOrgSumPropVarFlg() {
        // return (String) getAttributeInternal(TRANSORGSUMPROPVARFLG);
        Number var = new Number(0);
        Number propAmt = this.getTransSumOrgPropAmt();
        Number prvAmt = this.getTransSumOrgPrvBudgAmt();
        if (propAmt != null && prvAmt != null && prvAmt.compareTo(new Number(0)) > 0)
            var = ((propAmt.subtract(prvAmt)).multiply(new Number(100))).divide(prvAmt);
        if (var.compareTo(new Number(0)) >= 0)
            return "U";
        else
            return "D";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOrgSumPropVarFlg.
     * @param value value to set the  TransOrgSumPropVarFlg
     */
    public void setTransOrgSumPropVarFlg(String value) {
        setAttributeInternal(TRANSORGSUMPROPVARFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOrgBudgAmtDisp.
     * @return the TransSumOrgBudgAmtDisp
     */
    public Number getTransSumOrgBudgAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getTransSumOrgBudgAmt());
        //return (Number) getAttributeInternal(TRANSSUMORGBUDGAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgBudgAmtDisp.
     * @param value value to set the  TransSumOrgBudgAmtDisp
     */
    public void setTransSumOrgBudgAmtDisp(Number value) {
        setAttributeInternal(TRANSSUMORGBUDGAMTDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOrgPrvBudgAmtDisp.
     * @return the TransSumOrgPrvBudgAmtDisp
     */
    public Number getTransSumOrgPrvBudgAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getTransSumOrgPrvBudgAmt());

        //return (Number) getAttributeInternal(TRANSSUMORGPRVBUDGAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgPrvBudgAmtDisp.
     * @param value value to set the  TransSumOrgPrvBudgAmtDisp
     */
    public void setTransSumOrgPrvBudgAmtDisp(Number value) {
        setAttributeInternal(TRANSSUMORGPRVBUDGAMTDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransSumOrgPropAmtDisp.
     * @return the TransSumOrgPropAmtDisp
     */
    public Number getTransSumOrgPropAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getTransSumOrgPropAmt());
        // return (Number) getAttributeInternal(TRANSSUMORGPROPAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransSumOrgPropAmtDisp.
     * @param value value to set the  TransSumOrgPropAmtDisp
     */
    public void setTransSumOrgPropAmtDisp(Number value) {
        setAttributeInternal(TRANSSUMORGPROPAMTDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBdgEoBudgetDtlAmtSum.
     * @return the TransBdgEoBudgetDtlAmtSum
     */
    public Number getTransBdgEoBudgetDtlAmtSum() {
        BdgAnalysisAppAMImpl am = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        am.getBdgEoBudgetProdDtl().setRangeSize(-1);
        Row dtlRow[] = am.getBdgEoBudgetProdDtl().getAllRowsInRange();
        Number sumAmt = new Number(0);
        for (Row row : dtlRow) {
            Number amt = new Number(0);
            if (row.getAttribute("ItmAmtBs") != null)
                amt = (Number) row.getAttribute("ItmAmtBs");
            sumAmt = sumAmt.add(amt);
        }
        return sumAmt;
        // return (Number) getAttributeInternal(TRANSBDGEOBUDGETDTLAMTSUM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBdgEoBudgetDtlAmtSum.
     * @param value value to set the  TransBdgEoBudgetDtlAmtSum
     */
    public void setTransBdgEoBudgetDtlAmtSum(Number value) {
        setAttributeInternal(TRANSBDGEOBUDGETDTLAMTSUM, value);
    }

    /**
     *      Method to Resolve EL expression (D)
     *      D - "EL Expression"
     * */
    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    public Number sumAmt(Row[] itr, String colNm) {
        Number sum = new Number(0);
        for (Row r : itr) {
            if (r.getAttribute(colNm) != null) {
                sum = sum.add((Number) r.getAttribute(colNm));
            }
        }
        return sum;
    }


}

