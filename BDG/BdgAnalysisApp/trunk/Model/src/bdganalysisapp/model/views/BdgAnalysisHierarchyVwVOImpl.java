package bdganalysisapp.model.views;


import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 22 12:20:06 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgAnalysisHierarchyVwVOImpl extends ViewObjectImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public BdgAnalysisHierarchyVwVOImpl() {
    }

    /**
     * Returns the variable value for cldIdBindVar.
     * @return variable value for cldIdBindVar
     */
    public String getcldIdBindVar() {
        return (String) ensureVariableManager().getVariableValue("cldIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable cldIdBindVar.
     * @param value value to bind as cldIdBindVar
     */
    public void setcldIdBindVar(String value) {
        ensureVariableManager().setVariableValue("cldIdBindVar", value);
    }

    /**
     * Returns the variable value for slocIdBindVar.
     * @return variable value for slocIdBindVar
     */
    public Integer getslocIdBindVar() {
        return (Integer) ensureVariableManager().getVariableValue("slocIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable slocIdBindVar.
     * @param value value to bind as slocIdBindVar
     */
    public void setslocIdBindVar(Integer value) {
        ensureVariableManager().setVariableValue("slocIdBindVar", value);
    }

    /**
     * Returns the variable value for hoOrgIdBindVar.
     * @return variable value for hoOrgIdBindVar
     */
    public String gethoOrgIdBindVar() {
        return (String) ensureVariableManager().getVariableValue("hoOrgIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable hoOrgIdBindVar.
     * @param value value to bind as hoOrgIdBindVar
     */
    public void sethoOrgIdBindVar(String value) {
        ensureVariableManager().setVariableValue("hoOrgIdBindVar", value);
    }

    /**
     * Returns the variable value for orgIdBindVar.
     * @return variable value for orgIdBindVar
     */
    public String getorgIdBindVar() {
        return (String) ensureVariableManager().getVariableValue("orgIdBindVar");
    }

    /**
     * Sets <code>value</code> for variable orgIdBindVar.
     * @param value value to bind as orgIdBindVar
     */
    public void setorgIdBindVar(String value) {
        ensureVariableManager().setVariableValue("orgIdBindVar", value);
    }

    /**
     * Returns the bind variable value for strtDtBindVar.
     * @return bind variable value for strtDtBindVar
     */
    public Timestamp getstrtDtBindVar() {
        return (Timestamp) getNamedWhereClauseParam("strtDtBindVar");
    }

    /**
     * Sets <code>value</code> for bind variable strtDtBindVar.
     * @param value value to bind as strtDtBindVar
     */
    public void setstrtDtBindVar(Timestamp value) {
        setNamedWhereClauseParam("strtDtBindVar", value);
    }

    /**
     * Returns the bind variable value for endDtBindVar.
     * @return bind variable value for endDtBindVar
     */
    public Timestamp getendDtBindVar() {
        return (Timestamp) getNamedWhereClauseParam("endDtBindVar");
    }

    /**
     * Sets <code>value</code> for bind variable endDtBindVar.
     * @param value value to bind as endDtBindVar
     */
    public void setendDtBindVar(Timestamp value) {
        setNamedWhereClauseParam("endDtBindVar", value);
    }

    /**
     * executeQueryForCollection - overridden for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - overridden for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - overridden for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - overridden for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }


    /**
     * Returns the variable value for structValNmBindVar.
     * @return variable value for structValNmBindVar
     */
    public String getstructValNmBindVar() {
        return (String) ensureVariableManager().getVariableValue("structValNmBindVar");
    }

    /**
     * Sets <code>value</code> for variable structValNmBindVar.
     * @param value value to bind as structValNmBindVar
     */
    public void setstructValNmBindVar(String value) {
        ensureVariableManager().setVariableValue("structValNmBindVar", value);
    }

    /*
     * @param associationDefImpl
     * @param viewObjectImpl
     * @param row
     * @param object
     * @return

    protected ViewRowSetImpl createViewLinkAccessorRS(AssociationDefImpl associationDefImpl,
                                                      ViewObjectImpl viewObjectImpl, Row row, Object[] object) {

        ViewRowSetImpl viewRowSetImpl = super.createViewLinkAccessorRS(associationDefImpl, viewObjectImpl, row, object);
        ViewCriteriaManager vcm = viewObjectImpl.getViewCriteriaManager();
        ViewCriteria vc = vcm.getViewCriteria("BdgAnalysisHierarchyVwCriteriaForSearch");
        VariableValueManager vvm = vc.ensureVariableManager();
        vvm.setVariableValue("structValNmBindVar", getStructValNm());
        viewObjectImpl.applyViewCriteria(vc);
        return viewRowSetImpl;


        // return super.createViewLinkAccessorRS(associationDefImpl, viewObjectImpl, row, object);
    } */


    /*  private String structValNm;

    public void setStructValNm(String structValNm) {
        this.structValNm = structValNm;
    }

    public String getStructValNm() {
        return structValNm;
    } */

    /**
     * Returns the variable value for docStructBindVar.
     * @return variable value for docStructBindVar
     */
    public Integer getdocStructBindVar() {
        return (Integer) ensureVariableManager().getVariableValue("docStructBindVar");
    }

    /**
     * Sets <code>value</code> for variable docStructBindVar.
     * @param value value to bind as docStructBindVar
     */
    public void setdocStructBindVar(Integer value) {
        ensureVariableManager().setVariableValue("docStructBindVar", value);
    }

    /**
     * Returns the variable value for docStructValBindVar.
     * @return variable value for docStructValBindVar
     */
    public String getdocStructValBindVar() {
        return (String) ensureVariableManager().getVariableValue("docStructValBindVar");
    }

    /**
     * Sets <code>value</code> for variable docStructValBindVar.
     * @param value value to bind as docStructValBindVar
     */
    public void setdocStructValBindVar(String value) {
        ensureVariableManager().setVariableValue("docStructValBindVar", value);
    }
}

