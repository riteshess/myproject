package bdganalysisapp.model.views;

import bdganalysisapp.model.modules.BdgAnalysisAppAMImpl;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jan 16 18:07:45 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BdgOrgSummVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        StructId,
        StructVal,
        StructValNm,
        StructValDepd,
        PrdStartDt,
        PrdEndDt,
        PrdDtl,
        BudgAmt,
        PrvBudgAmt,
        EoId,
        Lvl,
        AnalysisType,
        TransVariance,
        TransPropBdgAmt,
        TransPropVariance,
        TransVarUpDwnflg,
        TransPropVarUpDwnFlg,
        TransBudgAmtDisp,
        TransPrvBudgAmtDisp,
        TransPropBdgAmtDisp;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int STRUCTID = AttributesEnum.StructId.index();
    public static final int STRUCTVAL = AttributesEnum.StructVal.index();
    public static final int STRUCTVALNM = AttributesEnum.StructValNm.index();
    public static final int STRUCTVALDEPD = AttributesEnum.StructValDepd.index();
    public static final int PRDSTARTDT = AttributesEnum.PrdStartDt.index();
    public static final int PRDENDDT = AttributesEnum.PrdEndDt.index();
    public static final int PRDDTL = AttributesEnum.PrdDtl.index();
    public static final int BUDGAMT = AttributesEnum.BudgAmt.index();
    public static final int PRVBUDGAMT = AttributesEnum.PrvBudgAmt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int LVL = AttributesEnum.Lvl.index();
    public static final int ANALYSISTYPE = AttributesEnum.AnalysisType.index();
    public static final int TRANSVARIANCE = AttributesEnum.TransVariance.index();
    public static final int TRANSPROPBDGAMT = AttributesEnum.TransPropBdgAmt.index();
    public static final int TRANSPROPVARIANCE = AttributesEnum.TransPropVariance.index();
    public static final int TRANSVARUPDWNFLG = AttributesEnum.TransVarUpDwnflg.index();
    public static final int TRANSPROPVARUPDWNFLG = AttributesEnum.TransPropVarUpDwnFlg.index();
    public static final int TRANSBUDGAMTDISP = AttributesEnum.TransBudgAmtDisp.index();
    public static final int TRANSPRVBUDGAMTDISP = AttributesEnum.TransPrvBudgAmtDisp.index();
    public static final int TRANSPROPBDGAMTDISP = AttributesEnum.TransPropBdgAmtDisp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BdgOrgSummVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute StructId.
     * @return the StructId
     */
    public Integer getStructId() {
        return (Integer) getAttributeInternal(STRUCTID);
    }

    /**
     * Gets the attribute value for the calculated attribute StructVal.
     * @return the StructVal
     */
    public String getStructVal() {
        return (String) getAttributeInternal(STRUCTVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StructVal.
     * @param value value to set the  StructVal
     */
    public void setStructVal(String value) {
        setAttributeInternal(STRUCTVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StructValNm.
     * @return the StructValNm
     */
    public String getStructValNm() {
        return (String) getAttributeInternal(STRUCTVALNM);
    }

    /**
     * Gets the attribute value for the calculated attribute StructValDepd.
     * @return the StructValDepd
     */
    public String getStructValDepd() {
        return (String) getAttributeInternal(STRUCTVALDEPD);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdStartDt.
     * @return the PrdStartDt
     */
    public Timestamp getPrdStartDt() {
        return (Timestamp) getAttributeInternal(PRDSTARTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrdStartDt.
     * @param value value to set the  PrdStartDt
     */
    public void setPrdStartDt(Timestamp value) {
        setAttributeInternal(PRDSTARTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrdEndDt.
     * @return the PrdEndDt
     */
    public Timestamp getPrdEndDt() {
        return (Timestamp) getAttributeInternal(PRDENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrdEndDt.
     * @param value value to set the  PrdEndDt
     */
    public void setPrdEndDt(Timestamp value) {
        setAttributeInternal(PRDENDDT, value);
    }


    /**
     * Gets the attribute value for the calculated attribute PrdDtl.
     * @return the PrdDtl
     */
    public String getPrdDtl() {
        return (String) getAttributeInternal(PRDDTL);
    }

    /**
     * Gets the attribute value for the calculated attribute BudgAmt.
     * @return the BudgAmt
     */
    public Number getBudgAmt() {
        return (Number) getAttributeInternal(BUDGAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BudgAmt.
     * @param value value to set the  BudgAmt
     */
    public void setBudgAmt(Number value) {
        setAttributeInternal(BUDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PrvBudgAmt.
     * @return the PrvBudgAmt
     */
    public Number getPrvBudgAmt() {
        return (Number) getAttributeInternal(PRVBUDGAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrvBudgAmt.
     * @param value value to set the  PrvBudgAmt
     */
    public void setPrvBudgAmt(Number value) {
        setAttributeInternal(PRVBUDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoId.
     * @return the EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoId.
     * @param value value to set the  EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute Lvl.
     * @return the Lvl
     */
    public Integer getLvl() {
        return (Integer) getAttributeInternal(LVL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Lvl.
     * @param value value to set the  Lvl
     */
    public void setLvl(Integer value) {
        setAttributeInternal(LVL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AnalysisType.
     * @return the AnalysisType
     */
    public Integer getAnalysisType() {
        return (Integer) getAttributeInternal(ANALYSISTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVariance.
     * @return the TransVariance
     */
    public Number getTransVariance() {
        if (getAttributeInternal(TRANSVARIANCE) != null)
            return (Number) getAttributeInternal(TRANSVARIANCE);
        else {
            Number var = new Number(0);
            if (this.getBudgAmt() != null && this.getPrvBudgAmt() != null &&
                this.getPrvBudgAmt().compareTo(new Number(0)) > 0)
                var =
                    ((this.getBudgAmt().subtract(this.getPrvBudgAmt())).multiply(new Number(100))).divide(this.getPrvBudgAmt());
            return (Number) var.abs();
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVariance.
     * @param value value to set the  TransVariance
     */
    public void setTransVariance(Number value) {
        setAttributeInternal(TRANSVARIANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPropBdgAmt.
     * @return the TransPropBdgAmt
     */
    public Number getTransPropBdgAmt() {
        if (getAttributeInternal(TRANSPROPBDGAMT) != null)
            return (Number) getAttributeInternal(TRANSPROPBDGAMT);
        else {

            //check If Record for This Criteria is analysed before or not.
            //If analysed Before then put Proposed Amt else put Budget amount.
            BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
            RowQualifier rq = new RowQualifier(amImpl.getBdgBudgetAnalysis());
            rq.setWhereClause("PrdStartDt='" + this.getPrdStartDt() + "' and PrdEndDt='" + this.getPrdEndDt() +
                              "' and StructId=" + this.getStructId() + " and StructVal='" + this.getStructVal() + "'");
            Row fr[] = amImpl.getBdgBudgetAnalysis().getFilteredRows(rq);
            if (fr.length > 0)
                return (Number) fr[0].getAttribute("PropAmt");
            else if (this.getBudgAmt() != null)
                return this.getBudgAmt();
            else
                return new Number(0);
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPropBdgAmt.
     * @param value value to set the  TransPropBdgAmt
     */
    public void setTransPropBdgAmt(Number value) {
        setAttributeInternal(TRANSPROPBDGAMT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPropVariance.
     * @return the TransPropVariance
     */
    public Number getTransPropVariance() {
        if (getAttributeInternal(TRANSPROPVARIANCE) != null)
            return (Number) getAttributeInternal(TRANSPROPVARIANCE);
        else {
            Number var = new Number(0);
            if (this.getTransPropBdgAmt() != null && this.getPrvBudgAmt() != null &&
                this.getPrvBudgAmt().compareTo(new Number(0)) > 0)
                var =
                    ((this.getTransPropBdgAmt().subtract(this.getPrvBudgAmt())).multiply(new Number(100))).divide(this.getPrvBudgAmt());
            return (Number) var.abs();
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPropVariance.
     * @param value value to set the  TransPropVariance
     */
    public void setTransPropVariance(Number value) {
        setAttributeInternal(TRANSPROPVARIANCE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVarUpDwnflg.
     * @return the TransVarUpDwnflg
     */
    public String getTransVarUpDwnflg() {
        Number var = new Number(0);
        if (this.getBudgAmt() != null && this.getPrvBudgAmt() != null &&
            this.getPrvBudgAmt().compareTo(new Number(0)) > 0)
            var =
                ((this.getBudgAmt().subtract(this.getPrvBudgAmt())).multiply(new Number(100))).divide(this.getPrvBudgAmt());
        if (var.compareTo(new Number(0)) >= 0)
            return "U";
        else
            return "D";
        // return (String) getAttributeInternal(TRANSVARUPDWNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVarUpDwnflg.
     * @param value value to set the  TransVarUpDwnflg
     */
    public void setTransVarUpDwnflg(String value) {
        setAttributeInternal(TRANSVARUPDWNFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPropVarUpDwnFlg.
     * @return the TransPropVarUpDwnFlg
     */
    public String getTransPropVarUpDwnFlg() {
        Number var = new Number(0);
        if (this.getTransPropBdgAmt() != null && this.getPrvBudgAmt() != null &&
            this.getPrvBudgAmt().compareTo(new Number(0)) > 0)
            var =
                ((this.getTransPropBdgAmt().subtract(this.getPrvBudgAmt())).multiply(new Number(100))).divide(this.getPrvBudgAmt());
        if (var.compareTo(new Number(0)) >= 0)
            return "U";
        else
            return "D";

        // return (String) getAttributeInternal(TRANSPROPVARUPDWNFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPropVarUpDwnFlg.
     * @param value value to set the  TransPropVarUpDwnFlg
     */
    public void setTransPropVarUpDwnFlg(String value) {
        setAttributeInternal(TRANSPROPVARUPDWNFLG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBudgAmtDisp.
     * @return the TransBudgAmtDisp
     */
    public Number getTransBudgAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getBudgAmt());
        // return (Number) getAttributeInternal(TRANSBUDGAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBudgAmtDisp.
     * @param value value to set the  TransBudgAmtDisp
     */
    public void setTransBudgAmtDisp(Number value) {
        setAttributeInternal(TRANSBUDGAMTDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPrvBudgAmtDisp.
     * @return the TransPrvBudgAmtDisp
     */
    public Number getTransPrvBudgAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getPrvBudgAmt());

        // return (Number) getAttributeInternal(TRANSPRVBUDGAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPrvBudgAmtDisp.
     * @param value value to set the  TransPrvBudgAmtDisp
     */
    public void setTransPrvBudgAmtDisp(Number value) {
        setAttributeInternal(TRANSPRVBUDGAMTDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPropBdgAmtDisp.
     * @return the TransPropBdgAmtDisp
     */
    public Number getTransPropBdgAmtDisp() {
        BdgAnalysisAppAMImpl amImpl = (BdgAnalysisAppAMImpl) this.getApplicationModule();
        return amImpl.convertNumberNotation(this.getTransPropBdgAmt());
        //  return (Number) getAttributeInternal(TRANSPROPBDGAMTDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPropBdgAmtDisp.
     * @param value value to set the  TransPropBdgAmtDisp
     */
    public void setTransPropBdgAmtDisp(Number value) {
        setAttributeInternal(TRANSPROPBDGAMTDISP, value);
    }


}

