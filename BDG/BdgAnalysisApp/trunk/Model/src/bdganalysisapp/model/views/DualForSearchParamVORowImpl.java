package bdganalysisapp.model.views;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 19 10:59:22 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualForSearchParamVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        BdgType,
        StrtDt,
        EndDt,
        CompareBasis,
        TransStructId,
        TransStructValId,
        TransStructValNm,
        TransAmtNotationId,
        TransAmtNot,
        TransAmtNotDesc,
        TransUsrEoId,
        LovBdgTypeVO1,
        LovCompareBasisVO1,
        BdgOrgSummVO1,
        LovAmtNotationVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int BDGTYPE = AttributesEnum.BdgType.index();
    public static final int STRTDT = AttributesEnum.StrtDt.index();
    public static final int ENDDT = AttributesEnum.EndDt.index();
    public static final int COMPAREBASIS = AttributesEnum.CompareBasis.index();
    public static final int TRANSSTRUCTID = AttributesEnum.TransStructId.index();
    public static final int TRANSSTRUCTVALID = AttributesEnum.TransStructValId.index();
    public static final int TRANSSTRUCTVALNM = AttributesEnum.TransStructValNm.index();
    public static final int TRANSAMTNOTATIONID = AttributesEnum.TransAmtNotationId.index();
    public static final int TRANSAMTNOT = AttributesEnum.TransAmtNot.index();
    public static final int TRANSAMTNOTDESC = AttributesEnum.TransAmtNotDesc.index();
    public static final int TRANSUSREOID = AttributesEnum.TransUsrEoId.index();
    public static final int LOVBDGTYPEVO1 = AttributesEnum.LovBdgTypeVO1.index();
    public static final int LOVCOMPAREBASISVO1 = AttributesEnum.LovCompareBasisVO1.index();
    public static final int BDGORGSUMMVO1 = AttributesEnum.BdgOrgSummVO1.index();
    public static final int LOVAMTNOTATIONVO1 = AttributesEnum.LovAmtNotationVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualForSearchParamVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute BdgType.
     * @return the BdgType
     */
    public Integer getBdgType() {
        if (getAttributeInternal(BDGTYPE) != null)
            return (Integer) getAttributeInternal(BDGTYPE);
        else
            return 1;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BdgType.
     * @param value value to set the  BdgType
     */
    public void setBdgType(Integer value) {
        setAttributeInternal(BDGTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StrtDt.
     * @return the StrtDt
     */
    public Timestamp getStrtDt() {
        return (Timestamp) getAttributeInternal(STRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StrtDt.
     * @param value value to set the  StrtDt
     */
    public void setStrtDt(Timestamp value) {
        setAttributeInternal(STRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EndDt.
     * @return the EndDt
     */
    public Timestamp getEndDt() {
        return (Timestamp) getAttributeInternal(ENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EndDt.
     * @param value value to set the  EndDt
     */
    public void setEndDt(Timestamp value) {
        setAttributeInternal(ENDDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompareBasis.
     * @return the CompareBasis
     */
    public String getCompareBasis() {
        if (getAttributeInternal(COMPAREBASIS) != null)
            return (String) getAttributeInternal(COMPAREBASIS);
        else
            return "B";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompareBasis.
     * @param value value to set the  CompareBasis
     */
    public void setCompareBasis(String value) {
        setAttributeInternal(COMPAREBASIS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransStructId.
     * @return the TransStructId
     */
    public Integer getTransStructId() {
        return (Integer) getAttributeInternal(TRANSSTRUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStructId.
     * @param value value to set the  TransStructId
     */
    public void setTransStructId(Integer value) {
        setAttributeInternal(TRANSSTRUCTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStructValId.
     * @return the TransStructValId
     */
    public String getTransStructValId() {
        return (String) getAttributeInternal(TRANSSTRUCTVALID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStructValId.
     * @param value value to set the  TransStructValId
     */
    public void setTransStructValId(String value) {
        setAttributeInternal(TRANSSTRUCTVALID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStructValNm.
     * @return the TransStructValNm
     */
    public String getTransStructValNm() {
        return (String) getAttributeInternal(TRANSSTRUCTVALNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStructValNm.
     * @param value value to set the  TransStructValNm
     */
    public void setTransStructValNm(String value) {
        setAttributeInternal(TRANSSTRUCTVALNM, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransAmtNotationId.
     * @return the TransAmtNotationId
     */
    public oracle.jbo.domain.Number getTransAmtNotationId() {
        if (getAttributeInternal(TRANSAMTNOTATIONID) == null)
            return new Number(1);
        else
            return (oracle.jbo.domain.Number) getAttributeInternal(TRANSAMTNOTATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtNotationId.
     * @param value value to set the  TransAmtNotationId
     */
    public void setTransAmtNotationId(Number value) {
        setAttributeInternal(TRANSAMTNOTATIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmtNot.
     * @return the TransAmtNot
     */
    public String getTransAmtNot() {
        return (String) getAttributeInternal(TRANSAMTNOT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtNot.
     * @param value value to set the  TransAmtNot
     */
    public void setTransAmtNot(String value) {
        setAttributeInternal(TRANSAMTNOT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAmtNotDesc.
     * @return the TransAmtNotDesc
     */
    public String getTransAmtNotDesc() {
        if (getAttributeInternal(TRANSAMTNOTDESC) == null)
            return "Basic";
        else
            return (String) getAttributeInternal(TRANSAMTNOTDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAmtNotDesc.
     * @param value value to set the  TransAmtNotDesc
     */
    public void setTransAmtNotDesc(String value) {
        setAttributeInternal(TRANSAMTNOTDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrEoId.
     * @return the TransUsrEoId
     */
    public Integer getTransUsrEoId() {
        return Integer.parseInt(resolvEl("#{pageFlowScope.APP_USR_EMP_CODE}").toString());
        // return (Integer) getAttributeInternal(TRANSUSREOID);
    }

    private String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUsrEoId.
     * @param value value to set the  TransUsrEoId
     */
    public void setTransUsrEoId(Integer value) {
        setAttributeInternal(TRANSUSREOID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBdgTypeVO1.
     */
    public RowSet getLovBdgTypeVO1() {
        return (RowSet) getAttributeInternal(LOVBDGTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCompareBasisVO1.
     */
    public RowSet getLovCompareBasisVO1() {
        return (RowSet) getAttributeInternal(LOVCOMPAREBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> BdgOrgSummVO1.
     */
    public RowSet getBdgOrgSummVO1() {
        return (RowSet) getAttributeInternal(BDGORGSUMMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovAmtNotationVO1.
     */
    public RowSet getLovAmtNotationVO1() {
        return (RowSet) getAttributeInternal(LOVAMTNOTATIONVO1);
    }
}

