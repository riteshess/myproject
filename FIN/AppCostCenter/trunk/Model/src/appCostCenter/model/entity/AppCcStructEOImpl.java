package appCostCenter.model.entity;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Apr 12 16:53:42 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppCcStructEOImpl extends EntityImpl {
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Date date = (Date)Date.getCurrentDate();
        if (operation == DML_UPDATE) {
            Integer user = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));

            setUsrIdMod(user);
            setUsrIdModDt(date);

        }
        super.doDML(operation, e);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CcPrfId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcPrfId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcPrfId((Integer)value);
            }
        }
        ,
        CcPos {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcPos();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcPos((Integer)value);
            }
        }
        ,
        CcEntId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcEntId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcEntId((Long)value);
            }
        }
        ,
        CcEntIdParent {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcEntIdParent();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcEntIdParent((Long)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        CcDepndnt {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcDepndnt();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcDepndnt((String)value);
            }
        }
        ,
        CcMan {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCcMan();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCcMan((String)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        SlocId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        CldId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getCldId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        AppCcPrf {
            public Object get(AppCcStructEOImpl obj) {
                return obj.getAppCcPrf();
            }

            public void put(AppCcStructEOImpl obj, Object value) {
                obj.setAppCcPrf((AppCcPrfEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppCcStructEOImpl object);

        public abstract void put(AppCcStructEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CCPRFID = AttributesEnum.CcPrfId.index();
    public static final int CCPOS = AttributesEnum.CcPos.index();
    public static final int CCENTID = AttributesEnum.CcEntId.index();
    public static final int CCENTIDPARENT = AttributesEnum.CcEntIdParent.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int CCDEPNDNT = AttributesEnum.CcDepndnt.index();
    public static final int CCMAN = AttributesEnum.CcMan.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int APPCCPRF = AttributesEnum.AppCcPrf.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppCcStructEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("appCostCenter.model.entity.AppCcStructEO");
    }

    /**
     * Gets the attribute value for CcPrfId, using the alias name CcPrfId.
     * @return the value of CcPrfId
     */
    public Integer getCcPrfId() {
        return (Integer)getAttributeInternal(CCPRFID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcPrfId.
     * @param value value to set the CcPrfId
     */
    public void setCcPrfId(Integer value) {
        setAttributeInternal(CCPRFID, value);
    }

    /**
     * Gets the attribute value for CcPos, using the alias name CcPos.
     * @return the value of CcPos
     */
    public Integer getCcPos() {
        return (Integer)getAttributeInternal(CCPOS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcPos.
     * @param value value to set the CcPos
     */
    public void setCcPos(Integer value) {
        setAttributeInternal(CCPOS, value);
    }

    /**
     * Gets the attribute value for CcEntId, using the alias name CcEntId.
     * @return the value of CcEntId
     */
    public Long getCcEntId() {
        return (Long)getAttributeInternal(CCENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcEntId.
     * @param value value to set the CcEntId
     */
    public void setCcEntId(Long value) {
        setAttributeInternal(CCENTID, value);
    }

    /**
     * Gets the attribute value for CcEntIdParent, using the alias name CcEntIdParent.
     * @return the value of CcEntIdParent
     */
    public Long getCcEntIdParent() {
        return (Long)getAttributeInternal(CCENTIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcEntIdParent.
     * @param value value to set the CcEntIdParent
     */
    public void setCcEntIdParent(Long value) {
        setAttributeInternal(CCENTIDPARENT, value);
    }


    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }


    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }


    /**
     * Gets the attribute value for CcDepndnt, using the alias name CcDepndnt.
     * @return the value of CcDepndnt
     */
    public String getCcDepndnt() {
        return (String)getAttributeInternal(CCDEPNDNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcDepndnt.
     * @param value value to set the CcDepndnt
     */
    public void setCcDepndnt(String value) {
        setAttributeInternal(CCDEPNDNT, value);
    }

    /**
     * Gets the attribute value for CcMan, using the alias name CcMan.
     * @return the value of CcMan
     */
    public String getCcMan() {
        return (String)getAttributeInternal(CCMAN);
    }

    /**
     * Sets <code>value</code> as the attribute value for CcMan.
     * @param value value to set the CcMan
     */
    public void setCcMan(String value) {
        setAttributeInternal(CCMAN, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }


    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public AppCcPrfEOImpl getAppCcPrf() {
        return (AppCcPrfEOImpl)getAttributeInternal(APPCCPRF);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setAppCcPrf(AppCcPrfEOImpl value) {
        setAttributeInternal(APPCCPRF, value);
    }


    /**
     * @param ccPrfId key constituent
     * @param ccPos key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer ccPrfId, Integer ccPos) {
        return new Key(new Object[]{ccPrfId, ccPos});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {


        Integer a = Integer.parseInt(getGraphParameterID(getCcPrfId()));

        setCcPos(a);
        super.create(attributeList);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    public String getGraphParameterID(Integer P_PRF_ID) {
        return (String)callStoredFunction(STRING, "APP.PKG_APP.FN_GET_MAX_CC_POS(?)", new Object[] { P_PRF_ID });
    }

   
    private static int STRING = Types.VARCHAR;

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                }
            }
        }
    }
}
