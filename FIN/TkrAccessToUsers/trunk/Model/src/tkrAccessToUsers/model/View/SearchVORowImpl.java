package tkrAccessToUsers.model.View;

import java.math.BigDecimal;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import tkrAccessToUsers.model.Module.TkrAccessToUserAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 19 21:46:12 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        J1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getJ1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setJ1((BigDecimal)value);
            }
        }
        ,
        TikerId {
            public Object get(SearchVORowImpl obj) {
                return obj.getTikerId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTikerId((Integer)value);
            }
        }
        ,
        UserId {
            public Object get(SearchVORowImpl obj) {
                return obj.getUserId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setUserId((Integer)value);
            }
        }
        ,
        TickerPos {
            public Object get(SearchVORowImpl obj) {
                return obj.getTickerPos();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setTickerPos((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(SearchVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        UsrName {
            public Object get(SearchVORowImpl obj) {
                return obj.getUsrName();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setUsrName((String)value);
            }
        }
        ,
        OrgName {
            public Object get(SearchVORowImpl obj) {
                return obj.getOrgName();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setOrgName((String)value);
            }
        }
        ,
        CldId {
            public Object get(SearchVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        SlocId {
            public Object get(SearchVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        HoOrgId {
            public Object get(SearchVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        LovUserVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovUserVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgVO1 {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovOrgVO1();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchVORowImpl object);

        public abstract void put(SearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int J1 = AttributesEnum.J1.index();
    public static final int TIKERID = AttributesEnum.TikerId.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int TICKERPOS = AttributesEnum.TickerPos.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int USRNAME = AttributesEnum.UsrName.index();
    public static final int ORGNAME = AttributesEnum.OrgName.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LOVUSERVO1 = AttributesEnum.LovUserVO1.index();
    public static final int LOVORGVO1 = AttributesEnum.LovOrgVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute J1.
     * @return the J1
     */
    public BigDecimal getJ1() {
        return (BigDecimal) getAttributeInternal(J1);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute J1.
     * @param value value to set the  J1
     */
    public void setJ1(BigDecimal value) {
        setAttributeInternal(J1, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TikerId.
     * @return the TikerId
     */
    public Integer getTikerId() {
        return (Integer) getAttributeInternal(TIKERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TikerId.
     * @param value value to set the  TikerId
     */
    public void setTikerId(Integer value) {
        setAttributeInternal(TIKERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UserId.
     * @return the UserId
     */
    public Integer getUserId() {
        return (Integer) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UserId.
     * @param value value to set the  UserId
     */
    public void setUserId(Integer value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TickerPos.
     * @return the TickerPos
     */
    public Integer getTickerPos() {
        return (Integer) getAttributeInternal(TICKERPOS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TickerPos.
     * @param value value to set the  TickerPos
     */
    public void setTickerPos(Integer value) {
        setAttributeInternal(TICKERPOS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrName.
     * @return the UsrName
     */
    public String getUsrName() {
        return (String) getAttributeInternal(USRNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrName.
     * @param value value to set the  UsrName
     */
    public void setUsrName(String value) {
        setAttributeInternal(USRNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgName.
     * @return the OrgName
     */
    public String getOrgName() {
        return (String) getAttributeInternal(ORGNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgName.
     * @param value value to set the  OrgName
     */
    public void setOrgName(String value) {
        setAttributeInternal(ORGNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return ((TkrAccessToUserAMImpl)this.getApplicationModule()).getCurrentCldId();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return ((TkrAccessToUserAMImpl)this.getApplicationModule()).getCurrentSlocId();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return ((TkrAccessToUserAMImpl)this.getApplicationModule()).getCurrentHoOrgId();
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserVO1.
     */
    public RowSet getLovUserVO1() {
        return (RowSet)getAttributeInternal(LOVUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgVO1.
     */
    public RowSet getLovOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
