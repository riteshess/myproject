package schedule6.model.entities;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import schedule6.model.services.utill.ModelUtill;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Nov 17 15:27:04 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinSchLineEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SchCldId,
        SchHoOrgId,
        SchId,
        SchLineDispSeq,
        SchLineId,
        SchLineDesc,
        SchLineNote,
        SchLineIdPrnt,
        SchLineSubAddFlg,
        SchTotalDispFlag,
        SchTotalDesc,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        FinSch,
        FinSchLineDtl;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SCHCLDID = AttributesEnum.SchCldId.index();
    public static final int SCHHOORGID = AttributesEnum.SchHoOrgId.index();
    public static final int SCHID = AttributesEnum.SchId.index();
    public static final int SCHLINEDISPSEQ = AttributesEnum.SchLineDispSeq.index();
    public static final int SCHLINEID = AttributesEnum.SchLineId.index();
    public static final int SCHLINEDESC = AttributesEnum.SchLineDesc.index();
    public static final int SCHLINENOTE = AttributesEnum.SchLineNote.index();
    public static final int SCHLINEIDPRNT = AttributesEnum.SchLineIdPrnt.index();
    public static final int SCHLINESUBADDFLG = AttributesEnum.SchLineSubAddFlg.index();
    public static final int SCHTOTALDISPFLAG = AttributesEnum.SchTotalDispFlag.index();
    public static final int SCHTOTALDESC = AttributesEnum.SchTotalDesc.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int FINSCH = AttributesEnum.FinSch.index();
    public static final int FINSCHLINEDTL = AttributesEnum.FinSchLineDtl.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinSchLineEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("schedule6.model.entities.FinSchLineEO");
    }


    /**
     * Gets the attribute value for SchCldId, using the alias name SchCldId.
     * @return the value of SchCldId
     */
    public String getSchCldId() {
        return (String) getAttributeInternal(SCHCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchCldId.
     * @param value value to set the SchCldId
     */
    public void setSchCldId(String value) {
        setAttributeInternal(SCHCLDID, value);
    }

    /**
     * Gets the attribute value for SchHoOrgId, using the alias name SchHoOrgId.
     * @return the value of SchHoOrgId
     */
    public String getSchHoOrgId() {
        return (String) getAttributeInternal(SCHHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchHoOrgId.
     * @param value value to set the SchHoOrgId
     */
    public void setSchHoOrgId(String value) {
        setAttributeInternal(SCHHOORGID, value);
    }

    /**
     * Gets the attribute value for SchId, using the alias name SchId.
     * @return the value of SchId
     */
    public Integer getSchId() {
        return (Integer) getAttributeInternal(SCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchId.
     * @param value value to set the SchId
     */
    public void setSchId(Integer value) {
        setAttributeInternal(SCHID, value);
    }

    /**
     * Gets the attribute value for SchLineDispSeq, using the alias name SchLineDispSeq.
     * @return the value of SchLineDispSeq
     */
    public Integer getSchLineDispSeq() {
        return (Integer) getAttributeInternal(SCHLINEDISPSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineDispSeq.
     * @param value value to set the SchLineDispSeq
     */
    public void setSchLineDispSeq(Integer value) {
        setAttributeInternal(SCHLINEDISPSEQ, value);
    }

    /**
     * Gets the attribute value for SchLineId, using the alias name SchLineId.
     * @return the value of SchLineId
     */
    public String getSchLineId() {
        return (String) getAttributeInternal(SCHLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineId.
     * @param value value to set the SchLineId
     */
    public void setSchLineId(String value) {
        setAttributeInternal(SCHLINEID, value);
    }

    /**
     * Gets the attribute value for SchLineDesc, using the alias name SchLineDesc.
     * @return the value of SchLineDesc
     */
    public String getSchLineDesc() {
        return (String) getAttributeInternal(SCHLINEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineDesc.
     * @param value value to set the SchLineDesc
     */
    public void setSchLineDesc(String value) {
        setAttributeInternal(SCHLINEDESC, value);
    }

    /**
     * Gets the attribute value for SchLineNote, using the alias name SchLineNote.
     * @return the value of SchLineNote
     */
    public String getSchLineNote() {
        return (String) getAttributeInternal(SCHLINENOTE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineNote.
     * @param value value to set the SchLineNote
     */
    public void setSchLineNote(String value) {
        setAttributeInternal(SCHLINENOTE, value);
    }

    /**
     * Gets the attribute value for SchLineIdPrnt, using the alias name SchLineIdPrnt.
     * @return the value of SchLineIdPrnt
     */
    public String getSchLineIdPrnt() {
        return (String) getAttributeInternal(SCHLINEIDPRNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineIdPrnt.
     * @param value value to set the SchLineIdPrnt
     */
    public void setSchLineIdPrnt(String value) {
        setAttributeInternal(SCHLINEIDPRNT, value);
    }

    /**
     * Gets the attribute value for SchLineSubAddFlg, using the alias name SchLineSubAddFlg.
     * @return the value of SchLineSubAddFlg
     */
    public String getSchLineSubAddFlg() {
        return (String) getAttributeInternal(SCHLINESUBADDFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchLineSubAddFlg.
     * @param value value to set the SchLineSubAddFlg
     */
    public void setSchLineSubAddFlg(String value) {
        setAttributeInternal(SCHLINESUBADDFLG, value);
    }

    /**
     * Gets the attribute value for SchTotalDispFlag, using the alias name SchTotalDispFlag.
     * @return the value of SchTotalDispFlag
     */
    public String getSchTotalDispFlag() {
        return (String) getAttributeInternal(SCHTOTALDISPFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchTotalDispFlag.
     * @param value value to set the SchTotalDispFlag
     */
    public void setSchTotalDispFlag(String value) {
        setAttributeInternal(SCHTOTALDISPFLAG, value);
    }

    /**
     * Gets the attribute value for SchTotalDesc, using the alias name SchTotalDesc.
     * @return the value of SchTotalDesc
     */
    public String getSchTotalDesc() {
        return (String) getAttributeInternal(SCHTOTALDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for SchTotalDesc.
     * @param value value to set the SchTotalDesc
     */
    public void setSchTotalDesc(String value) {
        setAttributeInternal(SCHTOTALDESC, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * @return the associated entity FinSchEOImpl.
     */
    public FinSchEOImpl getFinSch() {
        return (FinSchEOImpl) getAttributeInternal(FINSCH);
    }

    /**
     * Sets <code>value</code> as the associated entity FinSchEOImpl.
     */
    public void setFinSch(FinSchEOImpl value) {
        setAttributeInternal(FINSCH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinSchLineDtl() {
        return (RowIterator) getAttributeInternal(FINSCHLINEDTL);
    }


    /**
     * @param schCldId key constituent
     * @param schHoOrgId key constituent
     * @param schId key constituent
     * @param schLineDispSeq key constituent
     * @param schLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String schCldId, String schHoOrgId, Integer schId, Integer schLineDispSeq,
                                       String schLineId) {
        return new Key(new Object[] { schCldId, schHoOrgId, schId, schLineDispSeq, schLineId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        this.setUsrIdCreate(Integer.parseInt((String)ModelUtill.resolvEl("#{pageFlowScope.GLBL_APP_USR}")));
        this.setSchTotalDispFlag("N");
        
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
      //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

