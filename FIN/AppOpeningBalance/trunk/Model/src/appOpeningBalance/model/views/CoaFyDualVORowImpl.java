package appOpeningBalance.model.views;

import appOpeningBalance.model.service.AppOpeningBalanceAMImpl;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Apr 28 14:13:35 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CoaFyDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Cldid {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getCldid();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setCldid((String)value);
            }
        }
        ,
        Slocid {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getSlocid();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setSlocid((Integer)value);
            }
        }
        ,
        Hoorgid {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getHoorgid();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setHoorgid((String)value);
            }
        }
        ,
        Orgid {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getOrgid();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setOrgid((String)value);
            }
        }
        ,
        ChartOfAccount {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getChartOfAccount();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setChartOfAccount((String)value);
            }
        }
        ,
        FinancialYear {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getFinancialYear();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setFinancialYear((Integer)value);
            }
        }
        ,
        Coaidtrans {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getCoaidtrans();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setCoaidtrans((Integer)value);
            }
        }
        ,
        SearchFYVO1 {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getSearchFYVO1();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CoaLOV1 {
            public Object get(CoaFyDualVORowImpl obj) {
                return obj.getCoaLOV1();
            }

            public void put(CoaFyDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(CoaFyDualVORowImpl object);

        public abstract void put(CoaFyDualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.Cldid.index();
    public static final int SLOCID = AttributesEnum.Slocid.index();
    public static final int HOORGID = AttributesEnum.Hoorgid.index();
    public static final int ORGID = AttributesEnum.Orgid.index();
    public static final int CHARTOFACCOUNT = AttributesEnum.ChartOfAccount.index();
    public static final int FINANCIALYEAR = AttributesEnum.FinancialYear.index();
    public static final int COAIDTRANS = AttributesEnum.Coaidtrans.index();
    public static final int SEARCHFYVO1 = AttributesEnum.SearchFYVO1.index();
    public static final int COALOV1 = AttributesEnum.CoaLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CoaFyDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Cldid.
     * @return the Cldid
     */
     public Object resolvEl(Object data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, (String)data, Object.class);
         Object Message = valueExp.getValue(elContext);
         return Message;
     }
    public String getCldid() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}")!= null){
            return resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Cldid.
     * @param value value to set the  Cldid
     */
    public void setCldid(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Slocid.
     * @return the Slocid
     */
    public Integer getSlocid() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}")!= null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString());
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Slocid.
     * @param value value to set the  Slocid
     */
    public void setSlocid(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Hoorgid.
     * @return the Hoorgid
     */
    public String getHoorgid() {
        if(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}")!= null){
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        }
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Hoorgid.
     * @param value value to set the  Hoorgid
     */
    public void setHoorgid(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Orgid.
     * @return the Orgid
     */
    public String getOrgid() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}")!= null){
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Orgid.
     * @param value value to set the  Orgid
     */
    public void setOrgid(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChartOfAccount.
     * @return the ChartOfAccount
     */
    public String getChartOfAccount() {
        //System.out.println("getCoaidtrans() = "+getCoaidtrans());
        if (resolvEl("#{pageFlowScope.COA_ID}")!= null) {
         
                System.out.println("if coaid is not null");
                AppOpeningBalanceAMImpl am = (AppOpeningBalanceAMImpl)resolvElDC("AppOpeningBalanceAMDataControl");
                CoaLOVImpl coa = am.getCoaLOV1();
                coa.setNamedWhereClauseParam("SlocIdBindVar", getSlocid());
                coa.setNamedWhereClauseParam("HoOrgIdBindVar", getHoorgid());
                coa.setNamedWhereClauseParam("CldIdbindVar", getCldid());
                coa.setNamedWhereClauseParam("BindCoaId", Integer.parseInt(resolvEl("#{pageFlowScope.COA_ID}").toString()));
                coa.executeQuery();
                Row[] allRowsInRange = coa.getAllRowsInRange();
                System.out.println("allRowsInRange = "+allRowsInRange.length);
                if (allRowsInRange.length > 0) {
                    Object attribute = allRowsInRange[0].getAttribute("CoaNm");
                    System.out.println("attribute = "+attribute);
                    if (attribute != null) {
                        return (String)attribute;
                    }
                }
                //Row[] filteredRows = coa.getFilteredRows("CoaNm", arg1);

            
        }
        return (String) getAttributeInternal(CHARTOFACCOUNT);
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChartOfAccount.
     * @param value value to set the  ChartOfAccount
     */
    public void setChartOfAccount(String value) {
        setAttributeInternal(CHARTOFACCOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FinancialYear.
     * @return the FinancialYear
     */
    public Integer getFinancialYear() {
        if(resolvEl("#{pageFlowScope.FY_ID}")!= null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.FY_ID}").toString());
        }
        return (Integer) getAttributeInternal(FINANCIALYEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FinancialYear.
     * @param value value to set the  FinancialYear
     */
    public void setFinancialYear(Integer value) {
        setAttributeInternal(FINANCIALYEAR, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Coaidtrans.
     * @return the Coaidtrans
     */
    public Integer getCoaidtrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Coaidtrans.
     * @param value value to set the  Coaidtrans
     */
    public void setCoaidtrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute coaIdTrans.
     * @return the coaIdTrans
     */
    public Integer getcoaIdTrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute coaIdTrans.
     * @param value value to set the  coaIdTrans
     */
    public void setcoaIdTrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SearchFYVO1.
     */
    public RowSet getSearchFYVO1() {
        return (RowSet)getAttributeInternal(SEARCHFYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CoaLOV1.
     */
    public RowSet getCoaLOV1() {
        return (RowSet)getAttributeInternal(COALOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
