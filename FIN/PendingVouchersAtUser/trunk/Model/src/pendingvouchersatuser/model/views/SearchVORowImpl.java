package pendingvouchersatuser.model.views;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Apr 29 18:26:48 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setDummy((String)value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setCldIdTrans((String)value);
            }
        }
        ,
        VoucherIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getVoucherIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setVoucherIdTrans((String)value);
            }
        }
        ,
        VouDtTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getVouDtTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setVouDtTrans((Timestamp)value);
            }
        }
        ,
        UsrNmTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getUsrNmTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setUsrNmTrans((String)value);
            }
        }
        ,
        UsrIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getUsrIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setUsrIdTrans((String)value);
            }
        }
        ,
        FwdDtTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getFwdDtTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setFwdDtTrans((Timestamp)value);
            }
        }
        ,
        RemarksTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getRemarksTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setRemarksTrans((String)value);
            }
        }
        ,
        slocIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getslocIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setslocIdTrans((Integer)value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String)value);
            }
        }
        ,
        GlblUsrIdTrans {
            public Object get(SearchVORowImpl obj) {
                return obj.getGlblUsrIdTrans();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setGlblUsrIdTrans((Integer)value);
            }
        }
        ,
        LovUserIdVO {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovUserIdVO();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovSearchUsrVO {
            public Object get(SearchVORowImpl obj) {
                return obj.getLovSearchUsrVO();
            }

            public void put(SearchVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;


        private static int firstIndex = 0;

        public abstract Object get(SearchVORowImpl object);

        public abstract void put(SearchVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int VOUCHERIDTRANS = AttributesEnum.VoucherIdTrans.index();
    public static final int VOUDTTRANS = AttributesEnum.VouDtTrans.index();
    public static final int USRNMTRANS = AttributesEnum.UsrNmTrans.index();
    public static final int USRIDTRANS = AttributesEnum.UsrIdTrans.index();
    public static final int FWDDTTRANS = AttributesEnum.FwdDtTrans.index();
    public static final int REMARKSTRANS = AttributesEnum.RemarksTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.slocIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int GLBLUSRIDTRANS = AttributesEnum.GlblUsrIdTrans.index();
    public static final int LOVUSERIDVO = AttributesEnum.LovUserIdVO.index();
    public static final int LOVSEARCHUSRVO = AttributesEnum.LovSearchUsrVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Dummy.
     * @param value value to set the  Dummy
     */
    public void setDummy(String value) {
        setAttributeInternal(DUMMY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        String cldId=resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
        
        return cldId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VoucherIdTrans.
     * @return the VoucherIdTrans
     */
    public String getVoucherIdTrans() {
        return (String) getAttributeInternal(VOUCHERIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VoucherIdTrans.
     * @param value value to set the  VoucherIdTrans
     */
    public void setVoucherIdTrans(String value) {
        setAttributeInternal(VOUCHERIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VouDtTrans.
     * @return the VouDtTrans
     */
    public Timestamp getVouDtTrans() {
        return (Timestamp) getAttributeInternal(VOUDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VouDtTrans.
     * @param value value to set the  VouDtTrans
     */
    public void setVouDtTrans(Timestamp value) {
        setAttributeInternal(VOUDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrNmTrans.
     * @return the UsrNmTrans
     */
    public String getUsrNmTrans() {
        return (String) getAttributeInternal(USRNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrNmTrans.
     * @param value value to set the  UsrNmTrans
     */
    public void setUsrNmTrans(String value) {
        setAttributeInternal(USRNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdTrans.
     * @return the UsrIdTrans
     */
    public String getUsrIdTrans() {
        return (String) getAttributeInternal(USRIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdTrans.
     * @param value value to set the  UsrIdTrans
     */
    public void setUsrIdTrans(String value) {
        setAttributeInternal(USRIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FwdDtTrans.
     * @return the FwdDtTrans
     */
    public Timestamp getFwdDtTrans() {
        return (Timestamp) getAttributeInternal(FWDDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FwdDtTrans.
     * @param value value to set the  FwdDtTrans
     */
    public void setFwdDtTrans(Timestamp value) {
        setAttributeInternal(FWDDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RemarksTrans.
     * @return the RemarksTrans
     */
    public String getRemarksTrans() {
        return (String) getAttributeInternal(REMARKSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RemarksTrans.
     * @param value value to set the  RemarksTrans
     */
    public void setRemarksTrans(String value) {
        setAttributeInternal(REMARKSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute slocIdTrans.
     * @return the slocIdTrans
     */
    public Integer getslocIdTrans() {
        Integer slocId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        return slocId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute slocIdTrans.
     * @param value value to set the  slocIdTrans
     */
    public void setslocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
    String orgId=resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
        return orgId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute GlblUsrIdTrans.
     * @return the GlblUsrIdTrans
     */
    public Integer getGlblUsrIdTrans() {
        Integer usId=Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_USR}"));
        return usId;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute GlblUsrIdTrans.
     * @param value value to set the  GlblUsrIdTrans
     */
    public void setGlblUsrIdTrans(Integer value) {
        setAttributeInternal(GLBLUSRIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUserIdVO.
     */
    public RowSet getLovUserIdVO() {
        return (RowSet)getAttributeInternal(LOVUSERIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> PendingVouchersVO.
     */
   
    /**
     * Gets the view accessor <code>RowSet</code> LovSearchUsrVO.
     */
    public RowSet getLovSearchUsrVO() {
        return (RowSet)getAttributeInternal(LOVSEARCHUSRVO);
    }

    public String resolvEl(String data){
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message=valueExp.getValue(elContext).toString();
        return Message;
      }
    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
