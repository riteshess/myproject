package glApp.model.view;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 05 13:56:48 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class glAmtDtlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        AdjVouId {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getAdjVouId();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setAdjVouId((String)value);
            }
        }
        ,
        AdjVouDt {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getAdjVouDt();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setAdjVouDt((Timestamp)value);
            }
        }
        ,
        AdjAmtAdj {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getAdjAmtAdj();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setAdjAmtAdj((Number)value);
            }
        }
        ,
        SubstrDocTxnIdDisp3 {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getSubstrDocTxnIdDisp3();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setSubstrDocTxnIdDisp3((String)value);
            }
        }
        ,
        RadjVouId {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getRadjVouId();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setRadjVouId((String)value);
            }
        }
        ,
        AdjAmtTyp {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getAdjAmtTyp();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setAdjAmtTyp((String)value);
            }
        }
        ,
        Type {
            public Object get(glAmtDtlVORowImpl obj) {
                return obj.getType();
            }

            public void put(glAmtDtlVORowImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(glAmtDtlVORowImpl object);

        public abstract void put(glAmtDtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ADJVOUID = AttributesEnum.AdjVouId.index();
    public static final int ADJVOUDT = AttributesEnum.AdjVouDt.index();
    public static final int ADJAMTADJ = AttributesEnum.AdjAmtAdj.index();
    public static final int SUBSTRDOCTXNIDDISP3 = AttributesEnum.SubstrDocTxnIdDisp3.index();
    public static final int RADJVOUID = AttributesEnum.RadjVouId.index();
    public static final int ADJAMTTYP = AttributesEnum.AdjAmtTyp.index();
    public static final int TYPE = AttributesEnum.Type.index();

    /**
     * This is the default constructor (do not remove).
     */
    public glAmtDtlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute AdjVouId.
     * @return the AdjVouId
     */
    public String getAdjVouId() {
        return (String) getAttributeInternal(ADJVOUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdjVouId.
     * @param value value to set the  AdjVouId
     */
    public void setAdjVouId(String value) {
        setAttributeInternal(ADJVOUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AdjVouDt.
     * @return the AdjVouDt
     */
    public Timestamp getAdjVouDt() {
        return (Timestamp) getAttributeInternal(ADJVOUDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdjVouDt.
     * @param value value to set the  AdjVouDt
     */
    public void setAdjVouDt(Timestamp value) {
        setAttributeInternal(ADJVOUDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AdjAmtAdjTrans.
     * @return the AdjAmtAdjTrans
     */
    public Number getAdjAmtAdj() {
        return (Number) getAttributeInternal(ADJAMTADJ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdjAmtAdjTrans.
     * @param value value to set the  AdjAmtAdjTrans
     */
    public void setAdjAmtAdj(Number value) {
        if(value !=null)
        {
                          Integer decimalPlaces = 2;
                       if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
                           System.out.println("Null");
                           decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());   
                       }
                       
                       value.round(decimalPlaces );

            
        }
        
        setAttributeInternal(ADJAMTADJ, value);
    }
    public String resolvEl(String data){
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message=valueExp.getValue(elContext).toString();
            return Message;
          }
    /**
     * Gets the attribute value for the calculated attribute SubstrDocTxnIdDisp3.
     * @return the SubstrDocTxnIdDisp3
     */
    public String getSubstrDocTxnIdDisp3() {
        return (String) getAttributeInternal(SUBSTRDOCTXNIDDISP3);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubstrDocTxnIdDisp3.
     * @param value value to set the  SubstrDocTxnIdDisp3
     */
    public void setSubstrDocTxnIdDisp3(String value) {
        setAttributeInternal(SUBSTRDOCTXNIDDISP3, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RadjVouId.
     * @return the RadjVouId
     */
    public String getRadjVouId() {
        return (String) getAttributeInternal(RADJVOUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RadjVouId.
     * @param value value to set the  RadjVouId
     */
    public void setRadjVouId(String value) {
        setAttributeInternal(RADJVOUID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AdjAmtTyp.
     * @return the AdjAmtTyp
     */
    public String getAdjAmtTyp() {
        return (String) getAttributeInternal(ADJAMTTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdjAmtTyp.
     * @param value value to set the  AdjAmtTyp
     */
    public void setAdjAmtTyp(String value) {
        setAttributeInternal(ADJAMTTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Type.
     * @return the Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Type.
     * @param value value to set the  Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
