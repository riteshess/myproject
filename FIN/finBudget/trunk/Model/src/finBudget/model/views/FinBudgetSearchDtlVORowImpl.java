package finBudget.model.views;

import finBudget.model.services.FinBudgetAMImpl;

import java.math.MathContext;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Apr 06 10:35:26 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinBudgetSearchDtlVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SlocId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        FyId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getFyId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setFyId((Integer)value);
            }
        }
        ,
        CoaId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaId((Integer)value);
            }
        }
        ,
        CoaCldId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaCldId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaCldId((String)value);
            }
        }
        ,
        CoaHoOrgId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaHoOrgId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaHoOrgId((String)value);
            }
        }
        ,
        CoaCogId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaCogId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaCogId((String)value);
            }
        }
        ,
        CoaBudget {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaBudget();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaBudget((Number)value);
            }
        }
        ,
        CoaBudgetType {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getCoaBudgetType();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setCoaBudgetType((String)value);
            }
        }
        ,
        MonId {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getMonId();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setMonId((Integer)value);
            }
        }
        ,
        MonNm {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getMonNm();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setMonNm((String)value);
            }
        }
        ,
        LovOrgIdVO {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getLovOrgIdVO();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCoaVO {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getLovCoaVO();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovCostCenterVO {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getLovCostCenterVO();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgFyVO {
            public Object get(FinBudgetSearchDtlVORowImpl obj) {
                return obj.getLovOrgFyVO();
            }

            public void put(FinBudgetSearchDtlVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(FinBudgetSearchDtlVORowImpl object);

        public abstract void put(FinBudgetSearchDtlVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COACLDID = AttributesEnum.CoaCldId.index();
    public static final int COAHOORGID = AttributesEnum.CoaHoOrgId.index();
    public static final int COACOGID = AttributesEnum.CoaCogId.index();
    public static final int COABUDGET = AttributesEnum.CoaBudget.index();
    public static final int COABUDGETTYPE = AttributesEnum.CoaBudgetType.index();
    public static final int MONID = AttributesEnum.MonId.index();
    public static final int MONNM = AttributesEnum.MonNm.index();
    public static final int LOVORGIDVO = AttributesEnum.LovOrgIdVO.index();
    public static final int LOVCOAVO = AttributesEnum.LovCoaVO.index();
    public static final int LOVCOSTCENTERVO = AttributesEnum.LovCostCenterVO.index();
    public static final int LOVORGFYVO = AttributesEnum.LovOrgFyVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinBudgetSearchDtlVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer)getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyId.
     * @return the FyId
     */
    public Integer getFyId() {
        return (Integer)getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyId.
     * @param value value to set the  FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer)getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaId.
     * @param value value to set the  CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaCldId.
     * @return the CoaCldId
     */
    public String getCoaCldId() {
        return (String)getAttributeInternal(COACLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaCldId.
     * @param value value to set the  CoaCldId
     */
    public void setCoaCldId(String value) {
        setAttributeInternal(COACLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaHoOrgId.
     * @return the CoaHoOrgId
     */
    public String getCoaHoOrgId() {
        return (String)getAttributeInternal(COAHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaHoOrgId.
     * @param value value to set the  CoaHoOrgId
     */
    public void setCoaHoOrgId(String value) {
        setAttributeInternal(COAHOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaCogId.
     * @return the CoaCogId
     */
    public String getCoaCogId() {
        return (String)getAttributeInternal(COACOGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaCogId.
     * @param value value to set the  CoaCogId
     */
    public void setCoaCogId(String value) {
        setAttributeInternal(COACOGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaBudget.
     * @return the CoaBudget
     */
    public Number getCoaBudget() {
        return (Number)getAttributeInternal(COABUDGET);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaBudget.
     * @param value value to set the  CoaBudget
     */
    public void setCoaBudget(Number value) {
        if (value != null){
            Integer decimalPlaces = 2;
            if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
               decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());    
             }
            value = (Number)value.round(decimalPlaces);
        }
        setAttributeInternal(COABUDGET, value);
    }
    public Object resolvEl(String data){
                            FacesContext fc = FacesContext.getCurrentInstance();
                            Application app = fc.getApplication();
                            ExpressionFactory elFactory = app.getExpressionFactory();
                            ELContext elContext = fc.getELContext();
                            ValueExpression valueExp =  
                            elFactory.createValueExpression(elContext, data, Object.class);
                            Object Message= valueExp.getValue(elContext);
                            return Message;
                    }

    /**
     * Gets the attribute value for the calculated attribute CoaBudgetType.
     * @return the CoaBudgetType
     */
    public String getCoaBudgetType() {
        return (String)getAttributeInternal(COABUDGETTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaBudgetType.
     * @param value value to set the  CoaBudgetType
     */
    public void setCoaBudgetType(String value) {
        setAttributeInternal(COABUDGETTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MonId.
     * @return the MonId
     */
    public Integer getMonId() {
        return (Integer)getAttributeInternal(MONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MonId.
     * @param value value to set the  MonId
     */
    public void setMonId(Integer value) {
        setAttributeInternal(MONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MonNm.
     * @return the MonNm
     */
    public String getMonNm() {


        FinBudgetAMImpl am = (FinBudgetAMImpl)resolvElDC("FinBudgetAMDataControl");
        Integer monId = 1;
        String monNm = null;

        try {
            monId = getMonId();
        } catch (NullPointerException npe) {
            npe.printStackTrace();
        }
        if (monId != null) {
            Row[] xx = am.getLovMonth().getFilteredRows("MonId", monId);
            if (xx.length > 0) {
                monNm = xx[0].getAttribute("MonNm").toString();
            }
            return monNm;
        } else {

            return (String)getAttributeInternal(MONNM);
        }
    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);
    }
    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MonNm.
     * @param value value to set the  MonNm
     */
    public void setMonNm(String value) {
        setAttributeInternal(MONNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO.
     */
    public RowSet getLovOrgIdVO() {
        return (RowSet)getAttributeInternal(LOVORGIDVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCoaVO.
     */
    public RowSet getLovCoaVO() {
        return (RowSet)getAttributeInternal(LOVCOAVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCostCenterVO.
     */
    public RowSet getLovCostCenterVO() {
        return (RowSet)getAttributeInternal(LOVCOSTCENTERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgFyVO.
     */
    public RowSet getLovOrgFyVO() {
        return (RowSet)getAttributeInternal(LOVORGFYVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
