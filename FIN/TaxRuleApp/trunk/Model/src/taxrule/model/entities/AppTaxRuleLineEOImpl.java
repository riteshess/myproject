package taxrule.model.entities;

import java.sql.CallableStatement;
import java.sql.SQLException;

import java.sql.Types;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 24 15:54:01 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppTaxRuleLineEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TaxRuleId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleId((Integer)value);
            }
        }
        ,
        TaxTypeId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxTypeId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxTypeId((Integer)value);
            }
        }
        ,
        TaxId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxId((Integer)value);
            }
        }
        ,
        TaxRuleSlocId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleSlocId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleSlocId((Integer)value);
            }
        }
        ,
        TaxRuleSlno {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleSlno();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleSlno((Integer)value);
            }
        }
        ,
        TaxRuleCalcRule {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleCalcRule();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleCalcRule((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        TaxRulePriority {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRulePriority();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRulePriority((Integer)value);
            }
        }
        ,
        Amt {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getAmt();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setAmt((Integer)value);
            }
        }
        ,
        TaxRuleCalcType {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleCalcType();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleCalcType((String)value);
            }
        }
        ,
        TaxRuleBalType {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleBalType();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleBalType((String)value);
            }
        }
        ,
        TaxRuleCoaId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleCoaId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleCoaId((Integer)value);
            }
        }
        ,
        TaxRuleNaId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxRuleNaId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxRuleNaId((Integer)value);
            }
        }
        ,
        TaxCldId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxCldId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxCldId((String)value);
            }
        }
        ,
        TaxHoOrgId {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getTaxHoOrgId();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setTaxHoOrgId((String)value);
            }
        }
        ,
        AppTaxRule {
            public Object get(AppTaxRuleLineEOImpl obj) {
                return obj.getAppTaxRule();
            }

            public void put(AppTaxRuleLineEOImpl obj, Object value) {
                obj.setAppTaxRule((AppTaxRuleEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppTaxRuleLineEOImpl object);

        public abstract void put(AppTaxRuleLineEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TAXRULEID = AttributesEnum.TaxRuleId.index();
    public static final int TAXTYPEID = AttributesEnum.TaxTypeId.index();
    public static final int TAXID = AttributesEnum.TaxId.index();
    public static final int TAXRULESLOCID = AttributesEnum.TaxRuleSlocId.index();
    public static final int TAXRULESLNO = AttributesEnum.TaxRuleSlno.index();
    public static final int TAXRULECALCRULE = AttributesEnum.TaxRuleCalcRule.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TAXRULEPRIORITY = AttributesEnum.TaxRulePriority.index();
    public static final int AMT = AttributesEnum.Amt.index();
    public static final int TAXRULECALCTYPE = AttributesEnum.TaxRuleCalcType.index();
    public static final int TAXRULEBALTYPE = AttributesEnum.TaxRuleBalType.index();
    public static final int TAXRULECOAID = AttributesEnum.TaxRuleCoaId.index();
    public static final int TAXRULENAID = AttributesEnum.TaxRuleNaId.index();
    public static final int TAXCLDID = AttributesEnum.TaxCldId.index();
    public static final int TAXHOORGID = AttributesEnum.TaxHoOrgId.index();
    public static final int APPTAXRULE = AttributesEnum.AppTaxRule.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppTaxRuleLineEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("taxrule.model.entities.AppTaxRuleLineEO");
    }

    /**
     * Gets the attribute value for TaxRuleId, using the alias name TaxRuleId.
     * @return the value of TaxRuleId
     */
    public Integer getTaxRuleId() {
        return (Integer)getAttributeInternal(TAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleId.
     * @param value value to set the TaxRuleId
     */
    public void setTaxRuleId(Integer value) {
        setAttributeInternal(TAXRULEID, value);
    }

    /**
     * Gets the attribute value for TaxTypeId, using the alias name TaxTypeId.
     * @return the value of TaxTypeId
     */
    public Integer getTaxTypeId() {
        return (Integer)getAttributeInternal(TAXTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxTypeId.
     * @param value value to set the TaxTypeId
     */
    public void setTaxTypeId(Integer value) {
        setAttributeInternal(TAXTYPEID, value);
    }

    /**
     * Gets the attribute value for TaxId, using the alias name TaxId.
     * @return the value of TaxId
     */
    public Integer getTaxId() {
        return (Integer)getAttributeInternal(TAXID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxId.
     * @param value value to set the TaxId
     */
    public void setTaxId(Integer value) {
        setAttributeInternal(TAXID, value);
    }

    /**
     * Gets the attribute value for TaxRuleSlocId, using the alias name TaxRuleSlocId.
     * @return the value of TaxRuleSlocId
     */
    public Integer getTaxRuleSlocId() {
        return (Integer)getAttributeInternal(TAXRULESLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleSlocId.
     * @param value value to set the TaxRuleSlocId
     */
    public void setTaxRuleSlocId(Integer value) {
        setAttributeInternal(TAXRULESLOCID, value);
    }

    /**
     * Gets the attribute value for TaxRuleSlno, using the alias name TaxRuleSlno.
     * @return the value of TaxRuleSlno
     */
    public Integer getTaxRuleSlno() {
        return (Integer)getAttributeInternal(TAXRULESLNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleSlno.
     * @param value value to set the TaxRuleSlno
     */
    public void setTaxRuleSlno(Integer value) {
        setAttributeInternal(TAXRULESLNO, value);
    }

    /**
     * Gets the attribute value for TaxRuleCalcRule, using the alias name TaxRuleCalcRule.
     * @return the value of TaxRuleCalcRule
     */
    public String getTaxRuleCalcRule() {
        return (String)getAttributeInternal(TAXRULECALCRULE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleCalcRule.
     * @param value value to set the TaxRuleCalcRule
     */
    public void setTaxRuleCalcRule(String value) {
        setAttributeInternal(TAXRULECALCRULE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for TaxRulePriority, using the alias name TaxRulePriority.
     * @return the value of TaxRulePriority
     */
    public Integer getTaxRulePriority() {
        return (Integer)getAttributeInternal(TAXRULEPRIORITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRulePriority.
     * @param value value to set the TaxRulePriority
     */
    public void setTaxRulePriority(Integer value) {
        setAttributeInternal(TAXRULEPRIORITY, value);
    }

    /**
     * Gets the attribute value for Amt, using the alias name Amt.
     * @return the value of Amt
     */
    public Integer getAmt() {
        return (Integer)getAttributeInternal(AMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Amt.
     * @param value value to set the Amt
     */
    public void setAmt(Integer value) {
        setAttributeInternal(AMT, value);
    }

    /**
     * Gets the attribute value for TaxRuleCalcType, using the alias name TaxRuleCalcType.
     * @return the value of TaxRuleCalcType
     */
    public String getTaxRuleCalcType() {
        return (String)getAttributeInternal(TAXRULECALCTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleCalcType.
     * @param value value to set the TaxRuleCalcType
     */
    public void setTaxRuleCalcType(String value) {
        setAttributeInternal(TAXRULECALCTYPE, value);
    }

    /**
     * Gets the attribute value for TaxRuleBalType, using the alias name TaxRuleBalType.
     * @return the value of TaxRuleBalType
     */
    public String getTaxRuleBalType() {
        return (String)getAttributeInternal(TAXRULEBALTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleBalType.
     * @param value value to set the TaxRuleBalType
     */
    public void setTaxRuleBalType(String value) {
        setAttributeInternal(TAXRULEBALTYPE, value);
    }

    /**
     * Gets the attribute value for TaxRuleCoaId, using the alias name TaxRuleCoaId.
     * @return the value of TaxRuleCoaId
     */
    public Integer getTaxRuleCoaId() {
        return (Integer)getAttributeInternal(TAXRULECOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleCoaId.
     * @param value value to set the TaxRuleCoaId
     */
    public void setTaxRuleCoaId(Integer value) {
        setAttributeInternal(TAXRULECOAID, value);
    }

    /**
     * Gets the attribute value for TaxRuleNaId, using the alias name TaxRuleNaId.
     * @return the value of TaxRuleNaId
     */
    public Integer getTaxRuleNaId() {
        return (Integer)getAttributeInternal(TAXRULENAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleNaId.
     * @param value value to set the TaxRuleNaId
     */
    public void setTaxRuleNaId(Integer value) {
        setAttributeInternal(TAXRULENAID, value);
    }

    /**
     * Gets the attribute value for TaxCldId, using the alias name TaxCldId.
     * @return the value of TaxCldId
     */
    public String getTaxCldId() {
        return (String)getAttributeInternal(TAXCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxCldId.
     * @param value value to set the TaxCldId
     */
    public void setTaxCldId(String value) {
        setAttributeInternal(TAXCLDID, value);
    }

    /**
     * Gets the attribute value for TaxHoOrgId, using the alias name TaxHoOrgId.
     * @return the value of TaxHoOrgId
     */
    public String getTaxHoOrgId() {
        return (String)getAttributeInternal(TAXHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxHoOrgId.
     * @param value value to set the TaxHoOrgId
     */
    public void setTaxHoOrgId(String value) {
        setAttributeInternal(TAXHOORGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppTaxRuleEOImpl.
     */
    public AppTaxRuleEOImpl getAppTaxRule() {
        return (AppTaxRuleEOImpl)getAttributeInternal(APPTAXRULE);
    }

    /**
     * Sets <code>value</code> as the associated entity AppTaxRuleEOImpl.
     */
    public void setAppTaxRule(AppTaxRuleEOImpl value) {
        setAttributeInternal(APPTAXRULE, value);
    }


    /**
     * @param taxRuleId key constituent
     * @param taxRuleSlocId key constituent
     * @param taxRuleSlno key constituent
     * @param taxCldId key constituent
     * @param taxHoOrgId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer taxRuleId, Integer taxRuleSlocId, Integer taxRuleSlno, String taxCldId,
                                       String taxHoOrgId) {
        return new Key(new Object[]{taxRuleId, taxRuleSlocId, taxRuleSlno, taxCldId, taxHoOrgId});
    }

    public String resolvElDC(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        setTaxRuleSlno( Integer.parseInt(callStoredFunction(NUMERIC, "app.GET_MAX_SRNO_TAX_RULE_LINE (?,?,?,?)", new Object[] { getTaxRuleId(), getTaxRuleSlocId(), getTaxHoOrgId(),getTaxCldId() }).toString()));
       
        setTaxRulePriority(Integer.parseInt(callStoredFunction(NUMERIC, "app.get_max_priority_tax_rule_line(?,?,?,?)", new Object[] {getTaxCldId(),getTaxRuleSlocId(), getTaxHoOrgId(), getTaxRuleId()}).toString()));
        setUsrIdCreate(UserId);
        super.create(attributeList);
    }
    private static int NUMERIC = Types.NUMERIC;
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);

            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            System.out.println("Function return " + st.getObject(1));
            return st.getObject(1);
        } catch (SQLException e) {
            // if (e.getMessage().length() < 11) {
            throw new JboException(e.getMessage());
            /*  } else {
                int end = e.getMessage().indexOf("\n");
                throw new JboException(e.getMessage().substring(11, end));
            } */
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }
    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdMod(UserId);
        setUsrIdModDt((Date)Date.getCurrentDate());
        }
        super.doDML(operation, e);
    }
}
