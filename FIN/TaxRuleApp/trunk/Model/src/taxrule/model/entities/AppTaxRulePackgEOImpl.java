package taxrule.model.entities;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 26 15:18:50 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppTaxRulePackgEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TaxRuleSlocId {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getTaxRuleSlocId();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setTaxRuleSlocId((Integer) value);
            }
        }
        ,
        TaxCldId {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getTaxCldId();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setTaxCldId((String) value);
            }
        }
        ,
        TaxHoOrgId {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getTaxHoOrgId();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setTaxHoOrgId((String) value);
            }
        }
        ,
        TaxRuleId {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getTaxRuleId();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setTaxRuleId((Integer) value);
            }
        }
        ,
        TaxRulePackgId {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getTaxRulePackgId();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setTaxRulePackgId((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        }
        ,
        ApplFlg {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getApplFlg();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setApplFlg((String) value);
            }
        }
        ,
        AppTaxRule {
            public Object get(AppTaxRulePackgEOImpl obj) {
                return obj.getAppTaxRule();
            }

            public void put(AppTaxRulePackgEOImpl obj, Object value) {
                obj.setAppTaxRule((AppTaxRuleEOImpl) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AppTaxRulePackgEOImpl object);

        public abstract void put(AppTaxRulePackgEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TAXRULESLOCID = AttributesEnum.TaxRuleSlocId.index();
    public static final int TAXCLDID = AttributesEnum.TaxCldId.index();
    public static final int TAXHOORGID = AttributesEnum.TaxHoOrgId.index();
    public static final int TAXRULEID = AttributesEnum.TaxRuleId.index();
    public static final int TAXRULEPACKGID = AttributesEnum.TaxRulePackgId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int APPLFLG = AttributesEnum.ApplFlg.index();
    public static final int APPTAXRULE = AttributesEnum.AppTaxRule.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppTaxRulePackgEOImpl() {
    }

    /**
     * Gets the attribute value for TaxRuleSlocId, using the alias name TaxRuleSlocId.
     * @return the value of TaxRuleSlocId
     */
    public Integer getTaxRuleSlocId() {
        return (Integer) getAttributeInternal(TAXRULESLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleSlocId.
     * @param value value to set the TaxRuleSlocId
     */
    public void setTaxRuleSlocId(Integer value) {
        setAttributeInternal(TAXRULESLOCID, value);
    }

    /**
     * Gets the attribute value for TaxCldId, using the alias name TaxCldId.
     * @return the value of TaxCldId
     */
    public String getTaxCldId() {
        return (String) getAttributeInternal(TAXCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxCldId.
     * @param value value to set the TaxCldId
     */
    public void setTaxCldId(String value) {
        setAttributeInternal(TAXCLDID, value);
    }

    /**
     * Gets the attribute value for TaxHoOrgId, using the alias name TaxHoOrgId.
     * @return the value of TaxHoOrgId
     */
    public String getTaxHoOrgId() {
        return (String) getAttributeInternal(TAXHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxHoOrgId.
     * @param value value to set the TaxHoOrgId
     */
    public void setTaxHoOrgId(String value) {
        setAttributeInternal(TAXHOORGID, value);
    }

    /**
     * Gets the attribute value for TaxRuleId, using the alias name TaxRuleId.
     * @return the value of TaxRuleId
     */
    public Integer getTaxRuleId() {
        return (Integer) getAttributeInternal(TAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleId.
     * @param value value to set the TaxRuleId
     */
    public void setTaxRuleId(Integer value) {
        setAttributeInternal(TAXRULEID, value);
    }

    /**
     * Gets the attribute value for TaxRulePackgId, using the alias name TaxRulePackgId.
     * @return the value of TaxRulePackgId
     */
    public String getTaxRulePackgId() {
        return (String) getAttributeInternal(TAXRULEPACKGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRulePackgId.
     * @param value value to set the TaxRulePackgId
     */
    public void setTaxRulePackgId(String value) {
        setAttributeInternal(TAXRULEPACKGID, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for ApplFlg, using the alias name ApplFlg.
     * @return the value of ApplFlg
     */
    public String getApplFlg() {
        return (String) getAttributeInternal(APPLFLG);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApplFlg.
     * @param value value to set the ApplFlg
     */
    public void setApplFlg(String value) {
        setAttributeInternal(APPLFLG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity AppTaxRuleEOImpl.
     */
    public AppTaxRuleEOImpl getAppTaxRule() {
        return (AppTaxRuleEOImpl) getAttributeInternal(APPTAXRULE);
    }

    /**
     * Sets <code>value</code> as the associated entity AppTaxRuleEOImpl.
     */
    public void setAppTaxRule(AppTaxRuleEOImpl value) {
        setAttributeInternal(APPTAXRULE, value);
    }

    /**
     * @param taxRuleSlocId key constituent
     * @param taxCldId key constituent
     * @param taxHoOrgId key constituent
     * @param taxRuleId key constituent
     * @param taxRulePackgId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer taxRuleSlocId, String taxCldId, String taxHoOrgId, Integer taxRuleId,
                                       String taxRulePackgId) {
        return new Key(new Object[] { taxRuleSlocId, taxCldId, taxHoOrgId, taxRuleId, taxRulePackgId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("taxrule.model.entities.AppTaxRulePackgEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdCreateDt((new Timestamp(System.currentTimeMillis())));
        setUsrIdCreate(UserId);
        super.create(attributeList);
    }
    public String resolvElDC(String data) {
         FacesContext fc = FacesContext.getCurrentInstance();
         Application app = fc.getApplication();
         ExpressionFactory elFactory = app.getExpressionFactory();
         ELContext elContext = fc.getELContext();
         ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
         String Message = valueExp.getValue(elContext).toString();
         return Message;
     }
    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
     //   super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdMod(UserId);
        setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(operation, e);
    }
}

