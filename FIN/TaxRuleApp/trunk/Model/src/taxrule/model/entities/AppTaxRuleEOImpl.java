package taxrule.model.entities;

import java.math.BigDecimal;

import java.math.BigInteger;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jan 24 15:25:55 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppTaxRuleEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TaxRuleId {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleId();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleId((Integer) value);
            }
        }
        ,
        TaxRuleSlocId {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleSlocId();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleSlocId((Integer) value);
            }
        }
        ,
        TaxRuleDesc {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleDesc();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleDesc((String) value);
            }
        }
        ,
        TaxRuleInclType {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleInclType();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleInclType((String) value);
            }
        }
        ,
        TaxRuleStrtDt {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleStrtDt();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleStrtDt((Date) value);
            }
        }
        ,
        TaxRuleValidityDt {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleValidityDt();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleValidityDt((Date) value);
            }
        }
        ,
        TaxRuleRoundLogic {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleRoundLogic();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleRoundLogic((String) value);
            }
        }
        ,
        TaxRuleCalcRoundTo {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleCalcRoundTo();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleCalcRoundTo((Number) value);
            }
        }
        ,
        TaxRuleCalcRoundPnt {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleCalcRoundPnt();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleCalcRoundPnt((Integer) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setUsrIdModDt((Date) value);
            }
        }
        ,
        TaxRuleFinalised {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleFinalised();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleFinalised((String) value);
            }
        }
        ,
        TaxRuleActv {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleActv();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleActv((String) value);
            }
        }
        ,
        TaxTypeTds {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxTypeTds();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxTypeTds((String) value);
            }
        }
        ,
        TaxRuleInst {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxRuleInst();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxRuleInst((Integer) value);
            }
        }
        ,
        TaxHoOrgId {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxHoOrgId();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxHoOrgId((String) value);
            }
        }
        ,
        TaxCldId {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxCldId();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxCldId((String) value);
            }
        }
        ,
        TaxFormTypId {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getTaxFormTypId();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setTaxFormTypId((Integer) value);
            }
        }
        ,
        AppTaxRuleLine {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getAppTaxRuleLine();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppTaxRulePackg {
            public Object get(AppTaxRuleEOImpl obj) {
                return obj.getAppTaxRulePackg();
            }

            public void put(AppTaxRuleEOImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppTaxRuleEOImpl object);

        public abstract void put(AppTaxRuleEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TAXRULEID = AttributesEnum.TaxRuleId.index();
    public static final int TAXRULESLOCID = AttributesEnum.TaxRuleSlocId.index();
    public static final int TAXRULEDESC = AttributesEnum.TaxRuleDesc.index();
    public static final int TAXRULEINCLTYPE = AttributesEnum.TaxRuleInclType.index();
    public static final int TAXRULESTRTDT = AttributesEnum.TaxRuleStrtDt.index();
    public static final int TAXRULEVALIDITYDT = AttributesEnum.TaxRuleValidityDt.index();
    public static final int TAXRULEROUNDLOGIC = AttributesEnum.TaxRuleRoundLogic.index();
    public static final int TAXRULECALCROUNDTO = AttributesEnum.TaxRuleCalcRoundTo.index();
    public static final int TAXRULECALCROUNDPNT = AttributesEnum.TaxRuleCalcRoundPnt.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TAXRULEFINALISED = AttributesEnum.TaxRuleFinalised.index();
    public static final int TAXRULEACTV = AttributesEnum.TaxRuleActv.index();
    public static final int TAXTYPETDS = AttributesEnum.TaxTypeTds.index();
    public static final int TAXRULEINST = AttributesEnum.TaxRuleInst.index();
    public static final int TAXHOORGID = AttributesEnum.TaxHoOrgId.index();
    public static final int TAXCLDID = AttributesEnum.TaxCldId.index();
    public static final int TAXFORMTYPID = AttributesEnum.TaxFormTypId.index();
    public static final int APPTAXRULELINE = AttributesEnum.AppTaxRuleLine.index();
    public static final int APPTAXRULEPACKG = AttributesEnum.AppTaxRulePackg.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppTaxRuleEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("taxrule.model.entities.AppTaxRuleEO");
    }


    /**
     * Gets the attribute value for TaxRuleId, using the alias name TaxRuleId.
     * @return the value of TaxRuleId
     */
    public Integer getTaxRuleId() {
        return (Integer)getAttributeInternal(TAXRULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleId.
     * @param value value to set the TaxRuleId
     */
    public void setTaxRuleId(Integer value) {
        setAttributeInternal(TAXRULEID, value);
    }

    /**
     * Gets the attribute value for TaxRuleSlocId, using the alias name TaxRuleSlocId.
     * @return the value of TaxRuleSlocId
     */
    public Integer getTaxRuleSlocId() {
        return (Integer)getAttributeInternal(TAXRULESLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleSlocId.
     * @param value value to set the TaxRuleSlocId
     */
    public void setTaxRuleSlocId(Integer value) {
        setAttributeInternal(TAXRULESLOCID, value);
    }

    /**
     * Gets the attribute value for TaxRuleDesc, using the alias name TaxRuleDesc.
     * @return the value of TaxRuleDesc
     */
    public String getTaxRuleDesc() {
        return (String)getAttributeInternal(TAXRULEDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleDesc.
     * @param value value to set the TaxRuleDesc
     */
    public void setTaxRuleDesc(String value) {
        setAttributeInternal(TAXRULEDESC, value.toUpperCase());
    }

    /**
     * Gets the attribute value for TaxRuleInclType, using the alias name TaxRuleInclType.
     * @return the value of TaxRuleInclType
     */
    public String getTaxRuleInclType() {
        return (String)getAttributeInternal(TAXRULEINCLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleInclType.
     * @param value value to set the TaxRuleInclType
     */
    public void setTaxRuleInclType(String value) {
        setAttributeInternal(TAXRULEINCLTYPE, value);
    }

    /**
     * Gets the attribute value for TaxRuleStrtDt, using the alias name TaxRuleStrtDt.
     * @return the value of TaxRuleStrtDt
     */
    public Date getTaxRuleStrtDt() {
        return (Date)getAttributeInternal(TAXRULESTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleStrtDt.
     * @param value value to set the TaxRuleStrtDt
     */
    public void setTaxRuleStrtDt(Date value) {
        setAttributeInternal(TAXRULESTRTDT, value);
    }

    /**
     * Gets the attribute value for TaxRuleValidityDt, using the alias name TaxRuleValidityDt.
     * @return the value of TaxRuleValidityDt
     */
    public Date getTaxRuleValidityDt() {
        return (Date)getAttributeInternal(TAXRULEVALIDITYDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleValidityDt.
     * @param value value to set the TaxRuleValidityDt
     */
    public void setTaxRuleValidityDt(Date value) {
        setAttributeInternal(TAXRULEVALIDITYDT, value);
    }

    /**
     * Gets the attribute value for TaxRuleRoundLogic, using the alias name TaxRuleRoundLogic.
     * @return the value of TaxRuleRoundLogic
     */
    public String getTaxRuleRoundLogic() {
        return (String)getAttributeInternal(TAXRULEROUNDLOGIC);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleRoundLogic.
     * @param value value to set the TaxRuleRoundLogic
     */
    public void setTaxRuleRoundLogic(String value) {
        setAttributeInternal(TAXRULEROUNDLOGIC, value);
    }

    /**
     * Gets the attribute value for TaxRuleCalcRoundTo, using the alias name TaxRuleCalcRoundTo.
     * @return the value of TaxRuleCalcRoundTo
     */
    public oracle.jbo.domain.Number getTaxRuleCalcRoundTo() {
        return (oracle.jbo.domain.Number)getAttributeInternal(TAXRULECALCROUNDTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleCalcRoundTo.
     * @param value value to set the TaxRuleCalcRoundTo
     */
    public void setTaxRuleCalcRoundTo(oracle.jbo.domain.Number value) {
        setAttributeInternal(TAXRULECALCROUNDTO, value);
    }

    /**
     * Gets the attribute value for TaxRuleCalcRoundPnt, using the alias name TaxRuleCalcRoundPnt.
     * @return the value of TaxRuleCalcRoundPnt
     */
    public Integer getTaxRuleCalcRoundPnt() {
        return (Integer)getAttributeInternal(TAXRULECALCROUNDPNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleCalcRoundPnt.
     * @param value value to set the TaxRuleCalcRoundPnt
     */
    public void setTaxRuleCalcRoundPnt(Integer value) {
        setAttributeInternal(TAXRULECALCROUNDPNT, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Date getUsrIdCreateDt() {
        return (Date)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Date getUsrIdModDt() {
        return (Date)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for TaxRuleFinalised, using the alias name TaxRuleFinalised.
     * @return the value of TaxRuleFinalised
     */
    public String getTaxRuleFinalised() {
        return (String)getAttributeInternal(TAXRULEFINALISED);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleFinalised.
     * @param value value to set the TaxRuleFinalised
     */
    public void setTaxRuleFinalised(String value) {
        setAttributeInternal(TAXRULEFINALISED, value);
    }

    /**
     * Gets the attribute value for TaxRuleActv, using the alias name TaxRuleActv.
     * @return the value of TaxRuleActv
     */
    public String getTaxRuleActv() {
        return (String)getAttributeInternal(TAXRULEACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleActv.
     * @param value value to set the TaxRuleActv
     */
    public void setTaxRuleActv(String value) {
        setAttributeInternal(TAXRULEACTV, value);
    }

    /**
     * Gets the attribute value for TaxTypeTds, using the alias name TaxTypeTds.
     * @return the value of TaxTypeTds
     */
    public String getTaxTypeTds() {
        return (String)getAttributeInternal(TAXTYPETDS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxTypeTds.
     * @param value value to set the TaxTypeTds
     */
    public void setTaxTypeTds(String value) {
        setAttributeInternal(TAXTYPETDS, value);
    }

    /**
     * Gets the attribute value for TaxRuleInst, using the alias name TaxRuleInst.
     * @return the value of TaxRuleInst
     */
    public Integer getTaxRuleInst() {
        return (Integer)getAttributeInternal(TAXRULEINST);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxRuleInst.
     * @param value value to set the TaxRuleInst
     */
    public void setTaxRuleInst(Integer value) {
        setAttributeInternal(TAXRULEINST, value);
    }

    /**
     * Gets the attribute value for TaxHoOrgId, using the alias name TaxHoOrgId.
     * @return the value of TaxHoOrgId
     */
    public String getTaxHoOrgId() {
        return (String)getAttributeInternal(TAXHOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxHoOrgId.
     * @param value value to set the TaxHoOrgId
     */
    public void setTaxHoOrgId(String value) {
        setAttributeInternal(TAXHOORGID, value);
    }

    /**
     * Gets the attribute value for TaxCldId, using the alias name TaxCldId.
     * @return the value of TaxCldId
     */
    public String getTaxCldId() {
        return (String)getAttributeInternal(TAXCLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxCldId.
     * @param value value to set the TaxCldId
     */
    public void setTaxCldId(String value) {
        setAttributeInternal(TAXCLDID, value);
    }

    /**
     * Gets the attribute value for TaxFormTypId, using the alias name TaxFormTypId.
     * @return the value of TaxFormTypId
     */
    public Integer getTaxFormTypId() {
        return (Integer) getAttributeInternal(TAXFORMTYPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxFormTypId.
     * @param value value to set the TaxFormTypId
     */
    public void setTaxFormTypId(Integer value) {
        setAttributeInternal(TAXFORMTYPID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppTaxRuleLine() {
        return (RowIterator)getAttributeInternal(APPTAXRULELINE);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppTaxRulePackg() {
        return (RowIterator) getAttributeInternal(APPTAXRULEPACKG);
    }


    /**
     * @param taxRuleId key constituent
     * @param taxRuleSlocId key constituent
     * @param taxHoOrgId key constituent
     * @param taxCldId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer taxRuleId, Integer taxRuleSlocId, String taxHoOrgId, String taxCldId) {
        return new Key(new Object[] { taxRuleId, taxRuleSlocId, taxHoOrgId, taxCldId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
     public String resolvElDC(String data) {
          FacesContext fc = FacesContext.getCurrentInstance();
          Application app = fc.getApplication();
          ExpressionFactory elFactory = app.getExpressionFactory();
          ELContext elContext = fc.getELContext();
          ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
          String Message = valueExp.getValue(elContext).toString();
          return Message;
      }
    protected void create(AttributeList attributeList) {
        String CloudId = resolvElDC("#{pageFlowScope.GLBL_APP_CLD_ID}");
        String OrgId = resolvElDC("#{pageFlowScope.GLBL_HO_ORG_ID}");
        Integer SlocId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        Integer InstId =Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_INST_ID}"));
        
        setTaxRuleInst(InstId);
        setTaxRuleSlocId(SlocId);
        setTaxCldId(CloudId);
        setTaxHoOrgId(OrgId);
        setUsrIdCreate(UserId);
        
       
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if(operation==DML_UPDATE){
        Integer UserId=Integer.parseInt(resolvElDC("#{pageFlowScope.GLBL_APP_USR}"));
        setUsrIdMod(UserId);
        setUsrIdModDt((Date)Date.getCurrentDate());
        }
        super.doDML(operation, e);
    }
}
