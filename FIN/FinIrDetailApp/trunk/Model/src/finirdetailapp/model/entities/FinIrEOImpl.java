package finirdetailapp.model.entities;

import static adf.utils.ebiz.EbizParams.GLBL_APP_CLD_ID;
import static adf.utils.ebiz.EbizParams.GLBL_APP_SERV_LOC;
import static adf.utils.ebiz.EbizParams.GLBL_APP_USR;
import static adf.utils.ebiz.EbizParams.GLBL_APP_USR_ORG;
import static adf.utils.ebiz.EbizParams.GLBL_HO_ORG_ID;
import adf.utils.model.ADFModelUtils;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jul 07 11:50:23 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FinIrEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        EoId,
        SrcDocTyp,
        SrcDocId,
        IrId,
        IrDt,
        ReqTyp,
        PrjId,
        CurrId,
        ConvRate,
        DueDt,
        Remarks,
        ReqStatus,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        SrcCoaId,
        TotAmtSp,
        TotAmtBs,
        EoTyp,
        FyId,
        FinIrExpDtlEO,
        FinIrPayDtlEO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int SRCDOCTYP = AttributesEnum.SrcDocTyp.index();
    public static final int SRCDOCID = AttributesEnum.SrcDocId.index();
    public static final int IRID = AttributesEnum.IrId.index();
    public static final int IRDT = AttributesEnum.IrDt.index();
    public static final int REQTYP = AttributesEnum.ReqTyp.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int CONVRATE = AttributesEnum.ConvRate.index();
    public static final int DUEDT = AttributesEnum.DueDt.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int REQSTATUS = AttributesEnum.ReqStatus.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int SRCCOAID = AttributesEnum.SrcCoaId.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int EOTYP = AttributesEnum.EoTyp.index();
    public static final int FYID = AttributesEnum.FyId.index();
    public static final int FINIREXPDTLEO = AttributesEnum.FinIrExpDtlEO.index();
    public static final int FINIRPAYDTLEO = AttributesEnum.FinIrPayDtlEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FinIrEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("finirdetailapp.model.entities.FinIrEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for SrcDocTyp, using the alias name SrcDocTyp.
     * @return the value of SrcDocTyp
     */
    public Integer getSrcDocTyp() {
        return (Integer) getAttributeInternal(SRCDOCTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocTyp.
     * @param value value to set the SrcDocTyp
     */
    public void setSrcDocTyp(Integer value) {
        setAttributeInternal(SRCDOCTYP, value);
    }

    /**
     * Gets the attribute value for SrcDocId, using the alias name SrcDocId.
     * @return the value of SrcDocId
     */
    public String getSrcDocId() {
        return (String) getAttributeInternal(SRCDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcDocId.
     * @param value value to set the SrcDocId
     */
    public void setSrcDocId(String value) {
        setAttributeInternal(SRCDOCID, value);
    }

    /**
     * Gets the attribute value for IrId, using the alias name IrId.
     * @return the value of IrId
     */
    public String getIrId() {
        return (String) getAttributeInternal(IRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for IrId.
     * @param value value to set the IrId
     */
    public void setIrId(String value) {
        setAttributeInternal(IRID, value);
    }

    /**
     * Gets the attribute value for IrDt, using the alias name IrDt.
     * @return the value of IrDt
     */
    public Timestamp getIrDt() {
        return (Timestamp) getAttributeInternal(IRDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for IrDt.
     * @param value value to set the IrDt
     */
    public void setIrDt(Timestamp value) {
        setAttributeInternal(IRDT, value);
    }

    /**
     * Gets the attribute value for ReqTyp, using the alias name ReqTyp.
     * @return the value of ReqTyp
     */
    public String getReqTyp() {
        return (String) getAttributeInternal(REQTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqTyp.
     * @param value value to set the ReqTyp
     */
    public void setReqTyp(String value) {
        setAttributeInternal(REQTYP, value);
    }

    /**
     * Gets the attribute value for PrjId, using the alias name PrjId.
     * @return the value of PrjId
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrjId.
     * @param value value to set the PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the attribute value for CurrId, using the alias name CurrId.
     * @return the value of CurrId
     */
    public Integer getCurrId() {
        return (Integer) getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrId.
     * @param value value to set the CurrId
     */
    public void setCurrId(Integer value) {
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for ConvRate, using the alias name ConvRate.
     * @return the value of ConvRate
     */
    public oracle.jbo.domain.Number getConvRate() {
        return (oracle.jbo.domain.Number) getAttributeInternal(CONVRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ConvRate.
     * @param value value to set the ConvRate
     */
    public void setConvRate(oracle.jbo.domain.Number value) {
        setAttributeInternal(CONVRATE, value);
    }

    /**
     * Gets the attribute value for DueDt, using the alias name DueDt.
     * @return the value of DueDt
     */
    public Timestamp getDueDt() {
        return (Timestamp) getAttributeInternal(DUEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DueDt.
     * @param value value to set the DueDt
     */
    public void setDueDt(Timestamp value) {
        setAttributeInternal(DUEDT, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ReqStatus, using the alias name ReqStatus.
     * @return the value of ReqStatus
     */
    public Integer getReqStatus() {
        return (Integer) getAttributeInternal(REQSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReqStatus.
     * @param value value to set the ReqStatus
     */
    public void setReqStatus(Integer value) {
        setAttributeInternal(REQSTATUS, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for SrcCoaId, using the alias name SrcCoaId.
     * @return the value of SrcCoaId
     */
    public Number getSrcCoaId() {
        return (Number) getAttributeInternal(SRCCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SrcCoaId.
     * @param value value to set the SrcCoaId
     */
    public void setSrcCoaId(Number value) {
        setAttributeInternal(SRCCOAID, value);
    }

    /**
     * Gets the attribute value for TotAmtSp, using the alias name TotAmtSp.
     * @return the value of TotAmtSp
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtSp.
     * @param value value to set the TotAmtSp
     */
    public void setTotAmtSp(Number value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for TotAmtBs, using the alias name TotAmtBs.
     * @return the value of TotAmtBs
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtBs.
     * @param value value to set the TotAmtBs
     */
    public void setTotAmtBs(Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for EoTyp, using the alias name EoTyp.
     * @return the value of EoTyp
     */
    public Integer getEoTyp() {
        return (Integer) getAttributeInternal(EOTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoTyp.
     * @param value value to set the EoTyp
     */
    public void setEoTyp(Integer value) {
        setAttributeInternal(EOTYP, value);
    }

    /**
     * Gets the attribute value for FyId, using the alias name FyId.
     * @return the value of FyId
     */
    public Integer getFyId() {
        return (Integer) getAttributeInternal(FYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FyId.
     * @param value value to set the FyId
     */
    public void setFyId(Integer value) {
        setAttributeInternal(FYID, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinIrExpDtlEO() {
        return (RowIterator) getAttributeInternal(FINIREXPDTLEO);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getFinIrPayDtlEO() {
        return (RowIterator) getAttributeInternal(FINIRPAYDTLEO);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param eoId key constituent
     * @param irDt key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       Integer eoId, Timestamp irDt) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, eoId, irDt });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        this.setCldId(GLBL_APP_CLD_ID());
        this.setSlocId(GLBL_APP_SERV_LOC());
        this.setHoOrgId(GLBL_HO_ORG_ID());
        this.setOrgId(GLBL_APP_USR_ORG());
        this.setUsrIdCreate(GLBL_APP_USR());
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        this.setIrDt(new Timestamp(System.currentTimeMillis()));
        Object obj = callStoredFunction(Types.VARCHAR, "APP.get_txn_id(?,?,?,?,?,?)", new Object[] {
                                        GLBL_APP_CLD_ID(), GLBL_APP_SERV_LOC(), GLBL_APP_USR_ORG(), GLBL_APP_USR(), 40,
                                        0
        });
        Object Fyobj = callStoredFunction(Types.NUMERIC, "APP.fn_get_fy_id(?,?,?,?)", new Object[] {
                                          GLBL_APP_CLD_ID(), GLBL_APP_USR_ORG(),
                                          new Timestamp(System.currentTimeMillis()), "FY"
        });
        System.out.println("fy no: " + Fyobj);
        if (Fyobj != null) {
            this.setFyId(Integer.parseInt(Fyobj.toString()));
        }
        this.setDocId(obj.toString());
        this.setSrcDocId("0");
        this.setSrcDocTyp(0);
        this.setReqStatus(879);
        //this.setPrjId("PROJ0000");
        Object ob = ADFModelUtils.resolvEl("#{pageFlowScope.GLBL_ORG_PROJ_ID}");
        this.setPrjId(ob.toString());

        this.setEoTyp(79);
        this.setReqTyp("A");
        //     this.setPrjId("PROJ0000");
    }

    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {

        CallableStatement st = null;
        try {
            // 1. Create a JDBC CallabledStatement
            st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
            // 2. Register the first bind variable for the return value
            st.registerOutParameter(1, sqlReturnType);

            if (bindVars != null) {
                // 3. Loop over values for the bind variables passed in, if any
                for (int z = 0; z < bindVars.length; z++) {
                    // 4. Set the value of user-supplied bind vars in the stmt
                    st.setObject(z + 2, bindVars[z]);
                }
            }
            // 5. Set the value of user-supplied bind vars in the stmt
            st.executeUpdate();
            // 6. Return the value of the first bind variable
            return st.getObject(1);
        } catch (SQLException e) {
            // if (e.getMessage().length() < 11) {
            throw new JboException(e.getMessage());
            /*  } else {
                int end = e.getMessage().indexOf("\n");
                throw new JboException(e.getMessage().substring(11, end));
            } */
        } finally {
            if (st != null) {
                try {
                    // 7. Close the statement
                    st.close();
                } catch (SQLException e) {
                    throw new JboException(e.getMessage());
                }
            }
        }
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //  super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(GLBL_APP_USR());
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        }
        if (operation == DML_INSERT) {
            /*   Object IrIbj = callStoredFunction(Types.VARCHAR, "APP.FN_GEN_DISP_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                              GLBL_APP_SERV_LOC(), GLBL_APP_CLD_ID(), GLBL_APP_USR_ORG(), 59,
                                              this.getDocId(), 0, "FIN$IR", this.getFyId(), 0
            });
            System.out.println("It Id: " + IrIbj);
            if (IrIbj != null) {
                this.setIrId(IrIbj.toString());
            } */



        }
        if (operation == DML_INSERT || operation == DML_UPDATE) {
            System.out.println("come 11");
            /*  if (this.getEoTyp() == 80) {
                System.out.println("come 22");
                this.setSrcDocId(this.getDocId());
                this.setSrcDocTyp(59);
                System.out.println("seted");
            } */
        }
    }
}

