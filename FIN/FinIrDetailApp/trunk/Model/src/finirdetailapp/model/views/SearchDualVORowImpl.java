package finirdetailapp.model.views;

import adf.utils.ebiz.EbizParams;
import static adf.utils.ebiz.EbizParams.GLBL_APP_CLD_ID;
import static adf.utils.ebiz.EbizParams.GLBL_APP_SERV_LOC;
import static adf.utils.ebiz.EbizParams.GLBL_APP_USR_ORG;
import static adf.utils.ebiz.EbizParams.GLBL_HO_ORG_ID;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jul 09 10:35:29 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Selectobjects0,
        RequestIdTrans,
        ReqTypTrans,
        eoNmTrans,
        EoIdTrans,
        CldIdTrans,
        SlocIdTrans,
        HoOrgIdTrans,
        OrgIdTrans,
        DateFromTrans,
        DateToTrans,
        AmtFrmTrans,
        AmtToTrans,
        UsrIdTrand,
        EoTypeTrans,
        EoTypeIdTrans,
        LOVRequestTypVO1,
        LOVIrIdVO1,
        LOVEoNMForSearchVO1,
        LoVEoTypeVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SELECTOBJECTS0 = AttributesEnum.Selectobjects0.index();
    public static final int REQUESTIDTRANS = AttributesEnum.RequestIdTrans.index();
    public static final int REQTYPTRANS = AttributesEnum.ReqTypTrans.index();
    public static final int EONMTRANS = AttributesEnum.eoNmTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int DATEFROMTRANS = AttributesEnum.DateFromTrans.index();
    public static final int DATETOTRANS = AttributesEnum.DateToTrans.index();
    public static final int AMTFRMTRANS = AttributesEnum.AmtFrmTrans.index();
    public static final int AMTTOTRANS = AttributesEnum.AmtToTrans.index();
    public static final int USRIDTRAND = AttributesEnum.UsrIdTrand.index();
    public static final int EOTYPETRANS = AttributesEnum.EoTypeTrans.index();
    public static final int EOTYPEIDTRANS = AttributesEnum.EoTypeIdTrans.index();
    public static final int LOVREQUESTTYPVO1 = AttributesEnum.LOVRequestTypVO1.index();
    public static final int LOVIRIDVO1 = AttributesEnum.LOVIrIdVO1.index();
    public static final int LOVEONMFORSEARCHVO1 = AttributesEnum.LOVEoNMForSearchVO1.index();
    public static final int LOVEOTYPEVO1 = AttributesEnum.LoVEoTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Selectobjects0.
     * @return the Selectobjects0
     */
    public String getSelectobjects0() {
        return (String) getAttributeInternal(SELECTOBJECTS0);
    }

    /**
     * Gets the attribute value for the calculated attribute RequestIdTrans.
     * @return the RequestIdTrans
     */
    public String getRequestIdTrans() {
        return (String) getAttributeInternal(REQUESTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RequestIdTrans.
     * @param value value to set the  RequestIdTrans
     */
    public void setRequestIdTrans(String value) {
        setAttributeInternal(REQUESTIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ReqTypTrans.
     * @return the ReqTypTrans
     */
    public String getReqTypTrans() {
        return (String) getAttributeInternal(REQTYPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ReqTypTrans.
     * @param value value to set the  ReqTypTrans
     */
    public void setReqTypTrans(String value) {
        setAttributeInternal(REQTYPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute eoNmTrans.
     * @return the eoNmTrans
     */
    public String geteoNmTrans() {
        return (String) getAttributeInternal(EONMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute eoNmTrans.
     * @param value value to set the  eoNmTrans
     */
    public void seteoNmTrans(String value) {
        setAttributeInternal(EONMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoIdTrans.
     * @return the EoIdTrans
     */
    public Integer getEoIdTrans() {
        return (Integer) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdTrans.
     * @param value value to set the  EoIdTrans
     */
    public void setEoIdTrans(Integer value) {
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        return GLBL_APP_CLD_ID();
        // return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        return GLBL_APP_SERV_LOC();
        //return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        return GLBL_HO_ORG_ID();
        //  return (String) getAttributeInternal(HOORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgIdTrans.
     * @param value value to set the  HoOrgIdTrans
     */
    public void setHoOrgIdTrans(String value) {
        setAttributeInternal(HOORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
        return GLBL_APP_USR_ORG();
        //  return (String) getAttributeInternal(ORGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DateFromTrans.
     * @return the DateFromTrans
     */
    public Date getDateFromTrans() {
        return (Date) getAttributeInternal(DATEFROMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DateFromTrans.
     * @param value value to set the  DateFromTrans
     */
    public void setDateFromTrans(Date value) {
        setAttributeInternal(DATEFROMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DateToTrans.
     * @return the DateToTrans
     */
    public Date getDateToTrans() {
        return (Date) getAttributeInternal(DATETOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DateToTrans.
     * @param value value to set the  DateToTrans
     */
    public void setDateToTrans(Date value) {
        setAttributeInternal(DATETOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtFrmTrans.
     * @return the AmtFrmTrans
     */
    public Number getAmtFrmTrans() {
        return (Number) getAttributeInternal(AMTFRMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtFrmTrans.
     * @param value value to set the  AmtFrmTrans
     */
    public void setAmtFrmTrans(Number value) {
        setAttributeInternal(AMTFRMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AmtToTrans.
     * @return the AmtToTrans
     */
    public Number getAmtToTrans() {
        return (Number) getAttributeInternal(AMTTOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AmtToTrans.
     * @param value value to set the  AmtToTrans
     */
    public void setAmtToTrans(Number value) {
        setAttributeInternal(AMTTOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdTrand.
     * @return the UsrIdTrand
     */
    public Integer getUsrIdTrand() {
        return EbizParams.GLBL_APP_USR();
        //  return (Integer) getAttributeInternal(USRIDTRAND);
    }

    /**
     * Gets the attribute value for the calculated attribute EoTypeTrans.
     * @return the EoTypeTrans
     */
    public Integer getEoTypeTrans() {
        return (Integer) getAttributeInternal(EOTYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoTypeTrans.
     * @param value value to set the  EoTypeTrans
     */
    public void setEoTypeTrans(Integer value) {
        setAttributeInternal(EOTYPETRANS, value);

        System.out.println("EoTypeId in setter :: " + this.getAttributeInternal(EOTYPETRANS));
    }


    /**
     * Gets the attribute value for the calculated attribute EoTypeIdTrans.
     * @return the EoTypeIdTrans
     */
    public Integer getEoTypeIdTrans() {
        /*   if (getAttributeInternal(EOTYPEIDTRANS) != null) {
            return (Integer) getAttributeInternal(EOTYPEIDTRANS);
        } else {
            if (this.getEoTypeTrans() != null) {
                Row[] filteredRows = this.getLoVEoTypeVO1().getFilteredRows("EeTypeId", this.getEoTypeTrans());
                if (filteredRows.length > 0) {
                    return Integer.parseInt(filteredRows[0].getAttribute("EeTypeId").toString());
                }
            } else
                return new Integer(79);
        } */
        return (Integer) getAttributeInternal(EOTYPEIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoTypeIdTrans.
     * @param value value to set the  EoTypeIdTrans
     */
    public void setEoTypeIdTrans(Integer value) {
        setAttributeInternal(EOTYPEIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRequestTypVO1.
     */
    public RowSet getLOVRequestTypVO1() {
        return (RowSet) getAttributeInternal(LOVREQUESTTYPVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVIrIdVO1.
     */
    public RowSet getLOVIrIdVO1() {
        return (RowSet) getAttributeInternal(LOVIRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVEoNMForSearchVO1.
     */
    public RowSet getLOVEoNMForSearchVO1() {
        return (RowSet) getAttributeInternal(LOVEONMFORSEARCHVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LoVEoTypeVO1.
     */
    public RowSet getLoVEoTypeVO1() {
        return (RowSet) getAttributeInternal(LOVEOTYPEVO1);
    }
}

