package voucherreversalapp.model.views;

/* import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.context.FacesContext;

import oracle.adfdt.model.objects.Application; */

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 20 16:04:10 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Dummy {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getDummy();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OrgIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getOrgIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setOrgIdTrans((String) value);
            }
        }
        ,
        SlocIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getSlocIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setSlocIdTrans((Integer) value);
            }
        }
        ,
        CldIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCldIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCldIdTrans((String) value);
            }
        }
        ,
        VouTypeTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getVouTypeTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setVouTypeTrans((Integer) value);
            }
        }
        ,
        VoucherNoTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getVoucherNoTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setVoucherNoTrans((String) value);
            }
        }
        ,
        FromDtTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getFromDtTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setFromDtTrans((Date) value);
            }
        }
        ,
        ToDtTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getToDtTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setToDtTrans((Date) value);
            }
        }
        ,
        CoaIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCoaIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCoaIdTrans((Integer) value);
            }
        }
        ,
        CoaNmTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCoaNmTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCoaNmTrans((String) value);
            }
        }
        ,
        CogIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCogIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCogIdTrans((String) value);
            }
        }
        ,
        CogNmTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCogNmTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setCogNmTrans((String) value);
            }
        }
        ,
        HoOrgIdTrans {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getHoOrgIdTrans();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PrjId {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getPrjId();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setPrjId((String) value);
            }
        }
        ,
        LOVOrgVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVOrgVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVVoucherVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVVoucherVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CoaLOVVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getCoaLOVVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LOVCogVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLOVCogVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovProjectVO1 {
            public Object get(SearchDualVORowImpl obj) {
                return obj.getLovProjectVO1();
            }

            public void put(SearchDualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(SearchDualVORowImpl object);

        public abstract void put(SearchDualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DUMMY = AttributesEnum.Dummy.index();
    public static final int ORGIDTRANS = AttributesEnum.OrgIdTrans.index();
    public static final int SLOCIDTRANS = AttributesEnum.SlocIdTrans.index();
    public static final int CLDIDTRANS = AttributesEnum.CldIdTrans.index();
    public static final int VOUTYPETRANS = AttributesEnum.VouTypeTrans.index();
    public static final int VOUCHERNOTRANS = AttributesEnum.VoucherNoTrans.index();
    public static final int FROMDTTRANS = AttributesEnum.FromDtTrans.index();
    public static final int TODTTRANS = AttributesEnum.ToDtTrans.index();
    public static final int COAIDTRANS = AttributesEnum.CoaIdTrans.index();
    public static final int COANMTRANS = AttributesEnum.CoaNmTrans.index();
    public static final int COGIDTRANS = AttributesEnum.CogIdTrans.index();
    public static final int COGNMTRANS = AttributesEnum.CogNmTrans.index();
    public static final int HOORGIDTRANS = AttributesEnum.HoOrgIdTrans.index();
    public static final int PRJID = AttributesEnum.PrjId.index();
    public static final int LOVORGVO1 = AttributesEnum.LOVOrgVO1.index();
    public static final int LOVVOUCHERVO1 = AttributesEnum.LOVVoucherVO1.index();
    public static final int COALOVVO1 = AttributesEnum.CoaLOVVO1.index();
    public static final int LOVCOGVO1 = AttributesEnum.LOVCogVO1.index();
    public static final int LOVPROJECTVO1 = AttributesEnum.LovProjectVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Dummy.
     * @return the Dummy
     */
    public String getDummy() {
        return (String) getAttributeInternal(DUMMY);
    }


    /**
     * Gets the attribute value for the calculated attribute OrgIdTrans.
     * @return the OrgIdTrans
     */
    public String getOrgIdTrans() {
         if(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}") != null){
                //System.out.println(resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}"));
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}");
            }else
        return (String) getAttributeInternal(ORGIDTRANS); 
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgIdTrans.
     * @param value value to set the  OrgIdTrans
     */
    public void setOrgIdTrans(String value) {
        setAttributeInternal(ORGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocIdTrans.
     * @return the SlocIdTrans
     */
    public Integer getSlocIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}") != null){
            return Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
            }else 
        return (Integer) getAttributeInternal(SLOCIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocIdTrans.
     * @param value value to set the  SlocIdTrans
     */
    public void setSlocIdTrans(Integer value) {
        setAttributeInternal(SLOCIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldIdTrans.
     * @return the CldIdTrans
     */
    public String getCldIdTrans() {
        if(resolvEl("#{pageFlowScope. GLBL_APP_CLD_ID }") != null){
            return resolvEl("#{pageFlowScope. GLBL_APP_CLD_ID }");
            }else
        return (String) getAttributeInternal(CLDIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldIdTrans.
     * @param value value to set the  CldIdTrans
     */
    public void setCldIdTrans(String value) {
        setAttributeInternal(CLDIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VouTypeTrans.
     * @return the VouTypeTrans
     */
    public Integer getVouTypeTrans() {
        return (Integer) getAttributeInternal(VOUTYPETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VouTypeTrans.
     * @param value value to set the  VouTypeTrans
     */
    public void setVouTypeTrans(Integer value) {
        setAttributeInternal(VOUTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VoucherNoTrans.
     * @return the VoucherNoTrans
     */
    public String getVoucherNoTrans() {
        return (String) getAttributeInternal(VOUCHERNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VoucherNoTrans.
     * @param value value to set the  VoucherNoTrans
     */
    public void setVoucherNoTrans(String value) {
        setAttributeInternal(VOUCHERNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDtTrans.
     * @return the FromDtTrans
     */
    public Date getFromDtTrans() {
        return (Date) getAttributeInternal(FROMDTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDtTrans.
     * @param value value to set the  FromDtTrans
     */
    public void setFromDtTrans(Date value) {
        setAttributeInternal(FROMDTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDtTrans.
     * @return the ToDtTrans
     */
    public Date getToDtTrans() {
        return (Date) getAttributeInternal(TODTTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDtTrans.
     * @param value value to set the  ToDtTrans
     */
    public void setToDtTrans(Date value) {
        setAttributeInternal(TODTTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaIdTrans.
     * @return the CoaIdTrans
     */
    public Integer getCoaIdTrans() {
        return (Integer) getAttributeInternal(COAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaIdTrans.
     * @param value value to set the  CoaIdTrans
     */
    public void setCoaIdTrans(Integer value) {
        setAttributeInternal(COAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNmTrans.
     * @return the CoaNmTrans
     */
    public String getCoaNmTrans() {
        return (String) getAttributeInternal(COANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNmTrans.
     * @param value value to set the  CoaNmTrans
     */
    public void setCoaNmTrans(String value) {
        setAttributeInternal(COANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CogIdTrans.
     * @return the CogIdTrans
     */
    public String getCogIdTrans() {
        return (String) getAttributeInternal(COGIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CogIdTrans.
     * @param value value to set the  CogIdTrans
     */
    public void setCogIdTrans(String value) {
        setAttributeInternal(COGIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CogNmTrans.
     * @return the CogNmTrans
     */
    public String getCogNmTrans() {
        return (String) getAttributeInternal(COGNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CogNmTrans.
     * @param value value to set the  CogNmTrans
     */
    public void setCogNmTrans(String value) {
        setAttributeInternal(COGNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgIdTrans.
     * @return the HoOrgIdTrans
     */
    public String getHoOrgIdTrans() {
        if(resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}") != null){
            return resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}");
            }
        return (String) getAttributeInternal(HOORGIDTRANS);
    }


    /**
     * Gets the attribute value for the calculated attribute LovProjectVO.
     * @return the LovProjectVO
     */
    public String getPrjId() {
        return (String) getAttributeInternal(PRJID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PrjId.
     * @param value value to set the  PrjId
     */
    public void setPrjId(String value) {
        setAttributeInternal(PRJID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOrgVO1.
     */
    public RowSet getLOVOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVVoucherVO1.
     */
    public RowSet getLOVVoucherVO1() {
        return (RowSet)getAttributeInternal(LOVVOUCHERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CoaLOVVO1.
     */
    public RowSet getCoaLOVVO1() {
        return (RowSet)getAttributeInternal(COALOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCogVO1.
     */
    public RowSet getLOVCogVO1() {
        return (RowSet)getAttributeInternal(LOVCOGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovProjectVO1.
     */
    public RowSet getLovProjectVO1() {
        return (RowSet) getAttributeInternal(LOVPROJECTVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    public String resolvEl(String data) {
            FacesContext fc = FacesContext.getCurrentInstance();
            Application app = fc.getApplication();
            ExpressionFactory elFactory = app.getExpressionFactory();
            ELContext elContext = fc.getELContext();
            ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
            String Message = valueExp.getValue(elContext).toString();
            return Message;
        }
}
