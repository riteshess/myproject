package taxtype.model.views;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;

import taxtype.model.entities.AppTaxTypeEOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Sep 21 16:38:18 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppTaxTypeVORowImpl extends ViewRowImpl {


    public static final int ENTITY_APPTAXTYPEEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TaxTypeId {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeId();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeId((Integer)value);
            }
        }
        ,
        TaxTypeSlocId {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeSlocId();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeSlocId((Integer)value);
            }
        }
        ,
        TaxTypeNm {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeNm();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeNm((String)value);
            }
        }
        ,
        TaxTypeCalcRule {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeCalcRule();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeCalcRule((String)value);
            }
        }
        ,
        TaxTypeResv {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeResv();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeResv((String)value);
            }
        }
        ,
        TaxTypeActv {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeActv();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeActv((String)value);
            }
        }
        ,
        TaxTypeDef {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeDef();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeDef((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Date)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setUsrIdModDt((Date)value);
            }
        }
        ,
        TaxTypeTds {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxTypeTds();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setTaxTypeTds((String)value);
            }
        }
        ,
        HoOrgId {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        AppTax {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getAppTax();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CalculationLOV {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getCalculationLOV();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserLOV {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUserLOV();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        TaxSelectionForTdsLOV {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getTaxSelectionForTdsLOV();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UserLOV1 {
            public Object get(AppTaxTypeVORowImpl obj) {
                return obj.getUserLOV1();
            }

            public void put(AppTaxTypeVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(AppTaxTypeVORowImpl object);

        public abstract void put(AppTaxTypeVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TAXTYPEID = AttributesEnum.TaxTypeId.index();
    public static final int TAXTYPESLOCID = AttributesEnum.TaxTypeSlocId.index();
    public static final int TAXTYPENM = AttributesEnum.TaxTypeNm.index();
    public static final int TAXTYPECALCRULE = AttributesEnum.TaxTypeCalcRule.index();
    public static final int TAXTYPERESV = AttributesEnum.TaxTypeResv.index();
    public static final int TAXTYPEACTV = AttributesEnum.TaxTypeActv.index();
    public static final int TAXTYPEDEF = AttributesEnum.TaxTypeDef.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TAXTYPETDS = AttributesEnum.TaxTypeTds.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int APPTAX = AttributesEnum.AppTax.index();
    public static final int CALCULATIONLOV = AttributesEnum.CalculationLOV.index();
    public static final int USERLOV = AttributesEnum.UserLOV.index();
    public static final int TAXSELECTIONFORTDSLOV = AttributesEnum.TaxSelectionForTdsLOV.index();
    public static final int USERLOV1 = AttributesEnum.UserLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AppTaxTypeVORowImpl() {
    }

    /**
     * Gets AppTaxTypeEO entity object.
     * @return the AppTaxTypeEO
     */
    public AppTaxTypeEOImpl getAppTaxTypeEO() {
        return (AppTaxTypeEOImpl)getEntity(ENTITY_APPTAXTYPEEO);
    }

    /**
     * Gets the attribute value for TAX_TYPE_ID using the alias name TaxTypeId.
     * @return the TAX_TYPE_ID
     */
    public Integer getTaxTypeId() {
        return (Integer)getAttributeInternal(TAXTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_ID using the alias name TaxTypeId.
     * @param value value to set the TAX_TYPE_ID
     */
    public void setTaxTypeId(Integer value) {
        setAttributeInternal(TAXTYPEID, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_SLOC_ID using the alias name TaxTypeSlocId.
     * @return the TAX_TYPE_SLOC_ID
     */
    public Integer getTaxTypeSlocId() {
        return (Integer) getAttributeInternal(TAXTYPESLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_SLOC_ID using the alias name TaxTypeSlocId.
     * @param value value to set the TAX_TYPE_SLOC_ID
     */
    public void setTaxTypeSlocId(Integer value) {
        setAttributeInternal(TAXTYPESLOCID, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_NM using the alias name TaxTypeNm.
     * @return the TAX_TYPE_NM
     */
    public String getTaxTypeNm() {
        return (String) getAttributeInternal(TAXTYPENM);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_NM using the alias name TaxTypeNm.
     * @param value value to set the TAX_TYPE_NM
     */
    public void setTaxTypeNm(String value) {
        setAttributeInternal(TAXTYPENM, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_CALC_RULE using the alias name TaxTypeCalcRule.
     * @return the TAX_TYPE_CALC_RULE
     */
    public String getTaxTypeCalcRule() {
        return (String) getAttributeInternal(TAXTYPECALCRULE);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_CALC_RULE using the alias name TaxTypeCalcRule.
     * @param value value to set the TAX_TYPE_CALC_RULE
     */
    public void setTaxTypeCalcRule(String value) {
        setAttributeInternal(TAXTYPECALCRULE, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_RESV using the alias name TaxTypeResv.
     * @return the TAX_TYPE_RESV
     */
    public String getTaxTypeResv() {
        return (String) getAttributeInternal(TAXTYPERESV);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_RESV using the alias name TaxTypeResv.
     * @param value value to set the TAX_TYPE_RESV
     */
    public void setTaxTypeResv(String value) {
        setAttributeInternal(TAXTYPERESV, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_ACTV using the alias name TaxTypeActv.
     * @return the TAX_TYPE_ACTV
     */
    public String getTaxTypeActv() {
        return (String) getAttributeInternal(TAXTYPEACTV);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_ACTV using the alias name TaxTypeActv.
     * @param value value to set the TAX_TYPE_ACTV
     */
    public void setTaxTypeActv(String value) {
        setAttributeInternal(TAXTYPEACTV, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_DEF using the alias name TaxTypeDef.
     * @return the TAX_TYPE_DEF
     */
    public String getTaxTypeDef() {
        return (String) getAttributeInternal(TAXTYPEDEF);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_DEF using the alias name TaxTypeDef.
     * @param value value to set the TAX_TYPE_DEF
     */
    public void setTaxTypeDef(String value) {
        setAttributeInternal(TAXTYPEDEF, value);
    }


    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Date getUsrIdCreateDt() {
        return (Date) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Date value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Date getUsrIdModDt() {
        return (Date) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Date value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for TAX_TYPE_TDS using the alias name TaxTypeTds.
     * @return the TAX_TYPE_TDS
     */
    public String getTaxTypeTds() {
        return (String) getAttributeInternal(TAXTYPETDS);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_TYPE_TDS using the alias name TaxTypeTds.
     * @param value value to set the TAX_TYPE_TDS
     */
    public void setTaxTypeTds(String value) {
        setAttributeInternal(TAXTYPETDS, value);
    }


    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AppTax.
     */
    public RowIterator getAppTax() {
        return (RowIterator)getAttributeInternal(APPTAX);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CalculationLOV.
     */
    public RowSet getCalculationLOV() {
        return (RowSet)getAttributeInternal(CALCULATIONLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserLOV.
     */
    public RowSet getUserLOV() {
        return (RowSet)getAttributeInternal(USERLOV);
    }


    /**
     * Gets the view accessor <code>RowSet</code> TaxSelectionForTdsLOV.
     */
    public RowSet getTaxSelectionForTdsLOV() {
        return (RowSet)getAttributeInternal(TAXSELECTIONFORTDSLOV);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserLOV1.
     */
    public RowSet getUserLOV1() {
        return (RowSet)getAttributeInternal(USERLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
