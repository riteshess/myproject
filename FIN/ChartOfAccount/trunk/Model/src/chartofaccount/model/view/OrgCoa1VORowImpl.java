package chartofaccount.model.view;

import chartofaccount.model.service.ChartOfAccountAMImpl;

import java.math.BigDecimal;

import java.math.MathContext;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 10 18:24:08 IST 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OrgCoa1VORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        OrgSlocId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgSlocId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgSlocId((Integer)value);
            }
        }
        ,
        OrgId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgId((String)value);
            }
        }
        ,
        OrgCoaId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaId((Integer)value);
            }
        }
        ,
        OrgCoaResv {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaResv();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaResv((String)value);
            }
        }
        ,
        OrgCoaActv {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaActv();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaActv((String)value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setUsrIdCreate((Integer)value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp)value);
            }
        }
        ,
        UsrIdMod {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setUsrIdMod((Integer)value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp)value);
            }
        }
        ,
        OrgCoaLimit {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaLimit();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaLimit((Long)value);
            }
        }
        ,
        HoOrgId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setHoOrgId((String)value);
            }
        }
        ,
        CldId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getCldId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setCldId((String)value);
            }
        }
        ,
        OrgCoaOpBal {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaOpBal();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaOpBal((BigDecimal)value);
            }
        }
        ,
        OrgCoaOpBalTyp {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaOpBalTyp();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaOpBalTyp((String)value);
            }
        }
        ,
        FyDesc {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getFyDesc();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setFyDesc((String)value);
            }
        }
        ,
        OrgFyId {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgFyId();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgFyId((Integer)value);
            }
        }
        ,
        OrgCoaDrBal {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaDrBal();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaDrBal((BigDecimal)value);
            }
        }
        ,
        OrgCoaCrBal {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaCrBal();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaCrBal((BigDecimal)value);
            }
        }
        ,
        OrgCoaDrBalTmp {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaDrBalTmp();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaDrBalTmp((BigDecimal)value);
            }
        }
        ,
        OrgCoaCrBalTmp {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaCrBalTmp();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaCrBalTmp((BigDecimal)value);
            }
        }
        ,
        OrgCoaClBal {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaClBal();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaClBal((BigDecimal)value);
            }
        }
        ,
        OrgCoaClBalTyp {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getOrgCoaClBalTyp();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setOrgCoaClBalTyp((String)value);
            }
        }
        ,
        TransOpeningBal {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getTransOpeningBal();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setTransOpeningBal((BigDecimal)value);
            }
        }
        ,
        TransOpeningBalType {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getTransOpeningBalType();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setTransOpeningBalType((String)value);
            }
        }
        ,
        LovOrgVO1 {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getLovOrgVO1();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CoaVO1 {
            public Object get(OrgCoa1VORowImpl obj) {
                return obj.getCoaVO1();
            }

            public void put(OrgCoa1VORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(OrgCoa1VORowImpl object);

        public abstract void put(OrgCoa1VORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ORGSLOCID = AttributesEnum.OrgSlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGCOAID = AttributesEnum.OrgCoaId.index();
    public static final int ORGCOARESV = AttributesEnum.OrgCoaResv.index();
    public static final int ORGCOAACTV = AttributesEnum.OrgCoaActv.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ORGCOALIMIT = AttributesEnum.OrgCoaLimit.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int ORGCOAOPBAL = AttributesEnum.OrgCoaOpBal.index();
    public static final int ORGCOAOPBALTYP = AttributesEnum.OrgCoaOpBalTyp.index();
    public static final int FYDESC = AttributesEnum.FyDesc.index();
    public static final int ORGFYID = AttributesEnum.OrgFyId.index();
    public static final int ORGCOADRBAL = AttributesEnum.OrgCoaDrBal.index();
    public static final int ORGCOACRBAL = AttributesEnum.OrgCoaCrBal.index();
    public static final int ORGCOADRBALTMP = AttributesEnum.OrgCoaDrBalTmp.index();
    public static final int ORGCOACRBALTMP = AttributesEnum.OrgCoaCrBalTmp.index();
    public static final int ORGCOACLBAL = AttributesEnum.OrgCoaClBal.index();
    public static final int ORGCOACLBALTYP = AttributesEnum.OrgCoaClBalTyp.index();
    public static final int TRANSOPENINGBAL = AttributesEnum.TransOpeningBal.index();
    public static final int TRANSOPENINGBALTYPE = AttributesEnum.TransOpeningBalType.index();
    public static final int LOVORGVO1 = AttributesEnum.LovOrgVO1.index();
    public static final int COAVO1 = AttributesEnum.CoaVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public OrgCoa1VORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute OrgSlocId.
     * @return the OrgSlocId
     */
    public Integer getOrgSlocId() {
        return (Integer)getAttributeInternal(ORGSLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgSlocId.
     * @param value value to set the  OrgSlocId
     */
    public void setOrgSlocId(Integer value) {
        setAttributeInternal(ORGSLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaId.
     * @return the OrgCoaId
     */
    public Integer getOrgCoaId() {
        return (Integer)getAttributeInternal(ORGCOAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaId.
     * @param value value to set the  OrgCoaId
     */
    public void setOrgCoaId(Integer value) {
        setAttributeInternal(ORGCOAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaResv.
     * @return the OrgCoaResv
     */
    public String getOrgCoaResv() {
        return (String)getAttributeInternal(ORGCOARESV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaResv.
     * @param value value to set the  OrgCoaResv
     */
    public void setOrgCoaResv(String value) {
        setAttributeInternal(ORGCOARESV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaActv.
     * @return the OrgCoaActv
     */
    public String getOrgCoaActv() {
        return (String)getAttributeInternal(ORGCOAACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaActv.
     * @param value value to set the  OrgCoaActv
     */
    public void setOrgCoaActv(String value) {
        setAttributeInternal(ORGCOAACTV, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer)getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreate.
     * @param value value to set the  UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp)getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreateDt.
     * @param value value to set the  UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer)getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdMod.
     * @param value value to set the  UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp)getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdModDt.
     * @param value value to set the  UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaLimit.
     * @return the OrgCoaLimit
     */
    public Long getOrgCoaLimit() {
        return (Long)getAttributeInternal(ORGCOALIMIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaLimit.
     * @param value value to set the  OrgCoaLimit
     */
    public void setOrgCoaLimit(Long value) {
        setAttributeInternal(ORGCOALIMIT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String)getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String)getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaOpBal.
     * @return the OrgCoaOpBal
     */
    public BigDecimal getOrgCoaOpBal() {
        return (BigDecimal)getAttributeInternal(ORGCOAOPBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaOpBal.
     * @param value value to set the  OrgCoaOpBal
     */
     public String resolvEl(String data){
               FacesContext fc = FacesContext.getCurrentInstance();
               Application app = fc.getApplication();
               ExpressionFactory elFactory = app.getExpressionFactory();
               ELContext elContext = fc.getELContext();
               ValueExpression valueExp =  
     elFactory.createValueExpression(elContext, data, Object.class);
               String Message=valueExp.getValue(elContext).toString();
               return Message;
             }

    public void setOrgCoaOpBal(BigDecimal value) {
        if (value != null){
            Integer decimalPlaces = 2;
                          if(resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")!=null){
                              //System.out.println("Null");
                              decimalPlaces = Integer.parseInt((resolvEl("#{pageFlowScope.GLBL_AMT_DIGIT}")).toString());    
                          }
                           value.round(new MathContext(decimalPlaces));
            
            setAttributeInternal(ORGCOAOPBAL, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaOpBalTyp.
     * @return the OrgCoaOpBalTyp
     */
    public String getOrgCoaOpBalTyp() {
        return (String)getAttributeInternal(ORGCOAOPBALTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaOpBalTyp.
     * @param value value to set the  OrgCoaOpBalTyp
     */
    public void setOrgCoaOpBalTyp(String value) {
        setAttributeInternal(ORGCOAOPBALTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FyDesc.
     * @return the FyDesc
     */
    public String getFyDesc() {
        return (String)getAttributeInternal(FYDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FyDesc.
     * @param value value to set the  FyDesc
     */
    public void setFyDesc(String value) {
        setAttributeInternal(FYDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgFyId.
     * @return the OrgFyId
     */
    public Integer getOrgFyId() {
        return (Integer) getAttributeInternal(ORGFYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgFyId.
     * @param value value to set the  OrgFyId
     */
    public void setOrgFyId(Integer value) {
        setAttributeInternal(ORGFYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaDrBal.
     * @return the OrgCoaDrBal
     */
    public BigDecimal getOrgCoaDrBal() {
        return (BigDecimal) getAttributeInternal(ORGCOADRBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaDrBal.
     * @param value value to set the  OrgCoaDrBal
     */
    public void setOrgCoaDrBal(BigDecimal value) {
        setAttributeInternal(ORGCOADRBAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaCrBal.
     * @return the OrgCoaCrBal
     */
    public BigDecimal getOrgCoaCrBal() {
        return (BigDecimal) getAttributeInternal(ORGCOACRBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaCrBal.
     * @param value value to set the  OrgCoaCrBal
     */
    public void setOrgCoaCrBal(BigDecimal value) {
        setAttributeInternal(ORGCOACRBAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaDrBalTmp.
     * @return the OrgCoaDrBalTmp
     */
    public BigDecimal getOrgCoaDrBalTmp() {
        return (BigDecimal) getAttributeInternal(ORGCOADRBALTMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaDrBalTmp.
     * @param value value to set the  OrgCoaDrBalTmp
     */
    public void setOrgCoaDrBalTmp(BigDecimal value) {
        setAttributeInternal(ORGCOADRBALTMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaCrBalTmp.
     * @return the OrgCoaCrBalTmp
     */
    public BigDecimal getOrgCoaCrBalTmp() {
        return (BigDecimal) getAttributeInternal(ORGCOACRBALTMP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaCrBalTmp.
     * @param value value to set the  OrgCoaCrBalTmp
     */
    public void setOrgCoaCrBalTmp(BigDecimal value) {
        setAttributeInternal(ORGCOACRBALTMP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaClBal.
     * @return the OrgCoaClBal
     */
    public BigDecimal getOrgCoaClBal() {
        return (BigDecimal) getAttributeInternal(ORGCOACLBAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaClBal.
     * @param value value to set the  OrgCoaClBal
     */
    public void setOrgCoaClBal(BigDecimal value) {
        setAttributeInternal(ORGCOACLBAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgCoaClBalTyp.
     * @return the OrgCoaClBalTyp
     */
    public String getOrgCoaClBalTyp() {
        return (String) getAttributeInternal(ORGCOACLBALTYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgCoaClBalTyp.
     * @param value value to set the  OrgCoaClBalTyp
     */
    public void setOrgCoaClBalTyp(String value) {
        setAttributeInternal(ORGCOACLBALTYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpeningBal.
     * @return the TransOpeningBal
     */
    public BigDecimal getTransOpeningBal() {
       /*  ChartOfAccountAMImpl am = (ChartOfAccountAMImpl)resolvElDC("ChartOfAccountAMDataControl");
        BigDecimal tot = new BigDecimal(0);
        ViewObjectImpl vo = am.getOrgCoa1VO1();
        RowSetIterator rsi = vo.createRowSetIterator(null);
        BigDecimal val = new BigDecimal(0);
        String type = "Dr";
        while (rsi.hasNext()) {
            Row rw = rsi.next();
            if (rw.getAttribute("OrgCoaOpBal") != null) {
                val = (BigDecimal)rw.getAttribute("OrgCoaOpBal");
            }
            else{
                val= new BigDecimal(0);
            }
            if (rw.getAttribute("OrgCoaOpBalTyp") != null) {
                type = (String)rw.getAttribute("OrgCoaOpBalTyp");
            }
            else{
                type="Dr";
            }
            if(type.equalsIgnoreCase("Dr")){
                tot=tot.add(val);
            }
            else{
                tot=tot.subtract(val);
            }
        }

        if(tot!=null){
            return tot.abs();
        }
        else{
        return (BigDecimal)getAttributeInternal(TRANSOPENINGBAL);
        } */
       return (BigDecimal)getAttributeInternal(TRANSOPENINGBAL);

    }

    public Object resolvElDC(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp =
            elFactory.createValueExpression(elContext, "#{data." + data + ".dataProvider}", Object.class);
        return valueExp.getValue(elContext);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpeningBal.
     * @param value value to set the  TransOpeningBal
     */
    public void setTransOpeningBal(BigDecimal value) {
        setAttributeInternal(TRANSOPENINGBAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransOpeningBalType.
     * @return the TransOpeningBalType
     */
    public String getTransOpeningBalType() {
        
        
     /*    ChartOfAccountAMImpl am = (ChartOfAccountAMImpl)resolvElDC("ChartOfAccountAMDataControl");
        BigDecimal tot = new BigDecimal(0);
        ViewObjectImpl vo = am.getOrgCoa1VO1();
        RowSetIterator rsi = vo.createRowSetIterator(null);
        BigDecimal val = new BigDecimal(0);
        String type = "Dr";
        while (rsi.hasNext()) {
            Row rw = rsi.next();
            if (rw.getAttribute("OrgCoaOpBal") != null) {
                val = (BigDecimal)rw.getAttribute("OrgCoaOpBal");
            }
            else{
                val= new BigDecimal(0);
            }
            if (rw.getAttribute("OrgCoaOpBalTyp") != null) {
                type = (String)rw.getAttribute("OrgCoaOpBalTyp");
            }
            else{
                type="Dr";
            }
            if(type.equalsIgnoreCase("Dr")){
                tot=tot.add(val);
            }
            else{
                tot=tot.subtract(val);
            }
        }
        
        if(tot.compareTo(new BigDecimal(0))==1){
            return "Dr";
        }
        else if(tot.compareTo(new BigDecimal(0))==0){
            return "Dr";
        }
        else{
            return "Cr";
        } */
       return "Dr";
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransOpeningBalType.
     * @param value value to set the  TransOpeningBalType
     */
    public void setTransOpeningBalType(String value) {
        setAttributeInternal(TRANSOPENINGBALTYPE, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovOrgVO1.
     */
    public RowSet getLovOrgVO1() {
        return (RowSet)getAttributeInternal(LOVORGVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> CoaVO1.
     */
    public RowSet getCoaVO1() {
        return (RowSet)getAttributeInternal(COAVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
