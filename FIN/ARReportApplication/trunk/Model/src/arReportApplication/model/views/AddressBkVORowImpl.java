package arReportApplication.model.views;

import java.math.BigInteger;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Nov 07 15:00:38 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AddressBkVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Adds1 {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAdds1();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Adds2 {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAdds2();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Adds3 {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAdds3();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AddsBkEntId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAddsBkEntId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AddsId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAddsId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CldId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        CntryId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getCntryId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PostalCode {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getPostalCode();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SlocId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StructId {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getStructId();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setStructId((String) value);
            }
        }
        ,
        UsrIdCreate {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdMod {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        UsrIdModDt {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StructIdTrans {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getStructIdTrans();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setStructIdTrans((String) value);
            }
        }
        ,
        AddsStrLOV1 {
            public Object get(AddressBkVORowImpl obj) {
                return obj.getAddsStrLOV1();
            }

            public void put(AddressBkVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AddressBkVORowImpl object);

        public abstract void put(AddressBkVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ADDS1 = AttributesEnum.Adds1.index();
    public static final int ADDS2 = AttributesEnum.Adds2.index();
    public static final int ADDS3 = AttributesEnum.Adds3.index();
    public static final int ADDSBKENTID = AttributesEnum.AddsBkEntId.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CNTRYID = AttributesEnum.CntryId.index();
    public static final int POSTALCODE = AttributesEnum.PostalCode.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRUCTID = AttributesEnum.StructId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int STRUCTIDTRANS = AttributesEnum.StructIdTrans.index();
    public static final int ADDSSTRLOV1 = AttributesEnum.AddsStrLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AddressBkVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Adds1.
     * @return the Adds1
     */
    public String getAdds1() {
        return (String) getAttributeInternal(ADDS1);
    }

    /**
     * Gets the attribute value for the calculated attribute Adds2.
     * @return the Adds2
     */
    public String getAdds2() {
        return (String) getAttributeInternal(ADDS2);
    }

    /**
     * Gets the attribute value for the calculated attribute Adds3.
     * @return the Adds3
     */
    public String getAdds3() {
        return (String) getAttributeInternal(ADDS3);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsBkEntId.
     * @return the AddsBkEntId
     */
    public BigInteger getAddsBkEntId() {
        return (BigInteger) getAttributeInternal(ADDSBKENTID);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsId.
     * @return the AddsId
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}") != null) {
            String cldId = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}");
            return cldId;
        }
        return (String) getAttributeInternal(CLDID);
    }


    /**
     * Gets the attribute value for the calculated attribute CntryId.
     * @return the CntryId
     */


    public BigInteger getCntryId() {
        return (BigInteger) getAttributeInternal(CNTRYID);
    }

    /**
     * Gets the attribute value for the calculated attribute PostalCode.
     * @return the PostalCode
     */
    public String getPostalCode() {
        return (String) getAttributeInternal(POSTALCODE);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        if (resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}") != null) {
            Integer slocId = Integer.parseInt(resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}"));
            return slocId;
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute StructId.
     * @return the StructId
     */
    public String getStructId() {
        return (String) getAttributeInternal(STRUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StructId.
     * @param value value to set the  StructId
     */
    public void setStructId(String value) {
        setAttributeInternal(STRUCTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreate.
     * @return the UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdMod.
     * @return the UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdModDt.
     * @return the UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }


    /**
     * Gets the attribute value for the calculated attribute StructIdTrans.
     * @return the StructIdTrans
     */
    public String getStructIdTrans() {
        return (String) getAttributeInternal(STRUCTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StructIdTrans.
     * @param value value to set the  StructIdTrans
     */
    public void setStructIdTrans(String value) {
        setAttributeInternal(STRUCTIDTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AddsStrLOV1.
     */
    public RowSet getAddsStrLOV1() {
        return (RowSet) getAttributeInternal(ADDSSTRLOV1);
    }

    public String resolvEl(String data) {
        FacesContext fc = FacesContext.getCurrentInstance();
        Application app = fc.getApplication();
        ExpressionFactory elFactory = app.getExpressionFactory();
        ELContext elContext = fc.getELContext();
        ValueExpression valueExp = elFactory.createValueExpression(elContext, data, Object.class);
        String Message = valueExp.getValue(elContext).toString();
        return Message;
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

