package arReportApplication.model.views;

import java.math.BigInteger;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Nov 12 15:42:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AddsValForStrucLOVRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getCldId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        SlocId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getSlocId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        AddsLoc {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getAddsLoc();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setAddsLoc((String) value);
            }
        }
        ,
        AddsId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getAddsId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setAddsId((String) value);
            }
        }
        ,
        StructId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getStructId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setStructId((String) value);
            }
        }
        ,
        LblId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLblId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLblId((String) value);
            }
        }
        ,
        LocId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLocId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLocId((String) value);
            }
        }
        ,
        LblIdParent {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLblIdParent();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLblIdParent((String) value);
            }
        }
        ,
        UsrIdCreateDt {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        }
        ,
        CntryId {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getCntryId();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setCntryId((BigInteger) value);
            }
        }
        ,
        LocIdParent {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLocIdParent();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLocIdParent((String) value);
            }
        }
        ,
        chkTrans {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getchkTrans();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setchkTrans((String) value);
            }
        }
        ,
        LableValue {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLableValue();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLableValue((String) value);
            }
        }
        ,
        ParentLocTrans {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getParentLocTrans();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setParentLocTrans((String) value);
            }
        }
        ,
        LocIdTrns {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getLocIdTrns();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setLocIdTrns((String) value);
            }
        }
        ,
        AddsLblIdLOV1 {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getAddsLblIdLOV1();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AddsLblValLOV1 {
            public Object get(AddsValForStrucLOVRowImpl obj) {
                return obj.getAddsLblValLOV1();
            }

            public void put(AddsValForStrucLOVRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(AddsValForStrucLOVRowImpl object);

        public abstract void put(AddsValForStrucLOVRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    
    public String parent=null;
    public int count =0;


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ADDSLOC = AttributesEnum.AddsLoc.index();
    public static final int ADDSID = AttributesEnum.AddsId.index();
    public static final int STRUCTID = AttributesEnum.StructId.index();
    public static final int LBLID = AttributesEnum.LblId.index();
    public static final int LOCID = AttributesEnum.LocId.index();
    public static final int LBLIDPARENT = AttributesEnum.LblIdParent.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int CNTRYID = AttributesEnum.CntryId.index();
    public static final int LOCIDPARENT = AttributesEnum.LocIdParent.index();
    public static final int CHKTRANS = AttributesEnum.chkTrans.index();
    public static final int LABLEVALUE = AttributesEnum.LableValue.index();
    public static final int PARENTLOCTRANS = AttributesEnum.ParentLocTrans.index();
    public static final int LOCIDTRNS = AttributesEnum.LocIdTrns.index();
    public static final int ADDSLBLIDLOV1 = AttributesEnum.AddsLblIdLOV1.index();
    public static final int ADDSLBLVALLOV1 = AttributesEnum.AddsLblValLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AddsValForStrucLOVRowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsLoc.
     * @return the AddsLoc
     */
    public String getAddsLoc() {
        return (String) getAttributeInternal(ADDSLOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddsLoc.
     * @param value value to set the  AddsLoc
     */
    public void setAddsLoc(String value) {
        setAttributeInternal(ADDSLOC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AddsId.
     * @return the AddsId
     */
    public String getAddsId() {
        return (String) getAttributeInternal(ADDSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AddsId.
     * @param value value to set the  AddsId
     */
    public void setAddsId(String value) {
        setAttributeInternal(ADDSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StructId.
     * @return the StructId
     */
    public String getStructId() {
        return (String) getAttributeInternal(STRUCTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StructId.
     * @param value value to set the  StructId
     */
    public void setStructId(String value) {
        setAttributeInternal(STRUCTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LblId.
     * @return the LblId
     */
    public String getLblId() {
        return (String) getAttributeInternal(LBLID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LblId.
     * @param value value to set the  LblId
     */
    public void setLblId(String value) {
        setAttributeInternal(LBLID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LocId.
     * @return the LocId
     */
    public String getLocId() {
        return (String) getAttributeInternal(LOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocId.
     * @param value value to set the  LocId
     */
    public void setLocId(String value) {
        setAttributeInternal(LOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LblIdParent.
     * @return the LblIdParent
     */
    public String getLblIdParent() {
        return (String) getAttributeInternal(LBLIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LblIdParent.
     * @param value value to set the  LblIdParent
     */
    public void setLblIdParent(String value) {
        setAttributeInternal(LBLIDPARENT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrIdCreateDt.
     * @return the UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrIdCreateDt.
     * @param value value to set the  UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CntryId.
     * @return the CntryId
     */
    public BigInteger getCntryId() {
        return (BigInteger) getAttributeInternal(CNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CntryId.
     * @param value value to set the  CntryId
     */
    public void setCntryId(BigInteger value) {
        setAttributeInternal(CNTRYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LocIdParent.
     * @return the LocIdParent
     */
    public String getLocIdParent() {
        return (String) getAttributeInternal(LOCIDPARENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocIdParent.
     * @param value value to set the  LocIdParent
     */
    public void setLocIdParent(String value) {
        if(((AddsValForStrucLOVImpl)this.getViewObject()).rowUpdate.equalsIgnoreCase("Y"))
        if(this.parent == null){
           if(count == 1)
               parent="not null";
          //  System.out.println("value used for setting is " +value);
        setAttributeInternal(LOCIDPARENT, value);
        }
    }

    /**
     * Gets the attribute value for the calculated attribute chkTrans.
     * @return the chkTrans
     */
    public String getchkTrans() {
        return (String) getAttributeInternal(CHKTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute chkTrans.
     * @param value value to set the  chkTrans
     */
    public void setchkTrans(String value) {
        setAttributeInternal(CHKTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LableValue.
     * @return the LableValue
     */
    public String getLableValue() {
        return (String) getAttributeInternal(LABLEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LableValue.
     * @param value value to set the  LableValue
     */
    public void setLableValue(String value) {
        setAttributeInternal(LABLEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentLocTrans.
     * @return the ParentLocTrans
     */
    public String getParentLocTrans() {
        
        String locId=null;
        locId= (String) getAttributeInternal(PARENTLOCTRANS);
        
        if(locId==null){
            System.out.println("Parent Location ID "+0);
            return "0";
        }else{        
            System.out.println("Parent Location ID "+locId);
        return locId;
            }
       
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParentLocTrans.
     * @param value value to set the  ParentLocTrans
     */
    public void setParentLocTrans(String value) {
        System.out.println("Set Parent LOC iD"+value);
        setAttributeInternal(PARENTLOCTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LocIdTrns.
     * @return the LocIdTrns
     */
    public String getLocIdTrns() {
        return (String) getAttributeInternal(LOCIDTRNS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LocIdTrns.
     * @param value value to set the  LocIdTrns
     */
    public void setLocIdTrns(String value) {
        System.out.println("Location id of current line is "+value);
        setAttributeInternal(LOCIDTRNS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AddsLblIdLOV1.
     */
    public RowSet getAddsLblIdLOV1() {
        return (RowSet) getAttributeInternal(ADDSLBLIDLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AddsLblValLOV1.
     */
    public RowSet getAddsLblValLOV1() {
        return (RowSet) getAttributeInternal(ADDSLBLVALLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

