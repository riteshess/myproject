package arReportApplication.model.services;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import arReportApplication.model.services.common.ARReportsAM;
import arReportApplication.model.views.AddressBkVOImpl;
import arReportApplication.model.views.AddsStrLOVImpl;
import arReportApplication.model.views.AddsValForStrucLOVImpl;
import arReportApplication.model.views.AddsValForStrucLOVRowImpl;
import arReportApplication.model.views.CoaLOVImpl;

import java.sql.Types;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 01 14:10:53 IST 2012
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ARReportsAMImpl extends ApplicationModuleImpl implements ARReportsAM {
    /**
     * This is the default constructor (do not remove).
     */
    public ARReportsAMImpl() {
    }

    /**
     * Container's getter for CoaLOV.
     * @return CoaLOV
     */
    public CoaLOVImpl getCoaLOV() {
        return (CoaLOVImpl) findViewObject("CoaLOV");
    }

    /**
     * Container's getter for OrganisationLOV.
     * @return OrganisationLOV
     */
    public ViewObjectImpl getOrganisationLOV() {
        return (ViewObjectImpl) findViewObject("OrganisationLOV");
    }

    /**
     * Container's getter for EntityVO1.
     * @return EntityVO1
     */
    public ViewObjectImpl getEntityVO1() {
        return (ViewObjectImpl) findViewObject("EntityVO1");
    }


    /**
     * Container's getter for AddressBk1.
     * @return AddressBk1
     */
    public AddressBkVOImpl getAddressBk1() {
        return (AddressBkVOImpl) findViewObject("AddressBk1");
    }

    /**
     * Container's getter for AddsValForStrucLOV1.
     * @return AddsValForStrucLOV1
     */
    public AddsValForStrucLOVImpl getAddsValForStrucLOV1() {
        return (AddsValForStrucLOVImpl) findViewObject("AddsValForStrucLOV1");
    }

    /** For chnage in Address Structure LOV. **/
    public void onStructureChange(String structId) {
        this.getAddsValForStrucLOV1().setBindCldId(this.getAddressBk1().getCurrentRow().getAttribute("CldId").toString());
        this.getAddsValForStrucLOV1().setBindSlocId((Integer) (this.getAddressBk1().getCurrentRow().getAttribute("SlocId")));

        if (this.getAddressBk1().getCurrentRow().getAttribute("AddsId") != null) {
            this.getAddsValForStrucLOV1().setBindAddsId(this.getAddressBk1().getCurrentRow().getAttribute("AddsId").toString());
        } else
            this.getAddsValForStrucLOV1().setBindAddsId(null);
        this.getAddsValForStrucLOV1().setBindStructId(structId);
        this.getAddsValForStrucLOV1().executeQuery();
    }

    /** Filtering Adrress data on Label. **/

    public void setParentLocId(String parentLocId) {
        AddsValForStrucLOVImpl vo = this.getAddsValForStrucLOV1();
        AddsValForStrucLOVRowImpl row = (AddsValForStrucLOVRowImpl) vo.getCurrentRow();

        AddsValForStrucLOVRowImpl rowVar = row;
        AddsValForStrucLOVRowImpl rowNext = null;

        ViewObjectImpl lblValVO = this.getAddsLblValLOV1();
        lblValVO.setNamedWhereClauseParam("BindCldId", row.getCldId());
        lblValVO.setNamedWhereClauseParam("BindSlocId", row.getSlocId());
        lblValVO.setNamedWhereClauseParam("BindStructId", row.getStructId());

        // Resetting Children Vlaue.
        while (vo.hasNext()) {
            //System.out.println("Row found......");
            rowNext = (AddsValForStrucLOVRowImpl) vo.next();
            rowNext.setLocId(null);
            rowNext.setAddsLoc(null);
            rowNext.setLocIdParent(null);
        }
        // Setting Parent LocationId to below LOV.
        vo.setCurrentRow(rowVar);
        if (vo.hasNext()) {
            rowNext = (AddsValForStrucLOVRowImpl) vo.next();
            rowNext.parent = null;
            rowNext.count = 1;
            rowNext.setLocIdParent(row.getLocId());
            rowNext.parent = null;
            rowNext.count = 0;
        }

        //Setting the current seleted Row.
        vo.setCurrentRow(rowVar);
        row = rowVar;

        System.out.println("Row Is :---------------" + row);

        while (!row.getLblIdParent().equalsIgnoreCase("0")) {

            System.out.println("Current Loc Id Parent is " + row.getLocIdParent());

            lblValVO.setNamedWhereClauseParam("BindLocId", row.getLocIdParent());
            lblValVO.setNamedWhereClauseParam("BindLblId", row.getLblIdParent());
            lblValVO.executeQuery();

            System.out.println("Parent Location is " + lblValVO.first().getAttribute("LocId") + "Adds value is " +
                               lblValVO.first().getAttribute("AddsLoc"));

            row = (AddsValForStrucLOVRowImpl) vo.previous();
            row.setAddsLoc(lblValVO.first().getAttribute("AddsLoc").toString());
            row.setLocId(lblValVO.first().getAttribute("LocId").toString());
            row.setLocIdParent(lblValVO.first().getAttribute("LocIdParent").toString());

        }

        System.out.println("No of Rows" + vo.getRowCount());

    }

    /** Resstting Child AddsLocVal in case of null Parent Found. **/

    public void setChildInNullCase() {

        AddsValForStrucLOVImpl vo = this.getAddsValForStrucLOV1();
        AddsValForStrucLOVRowImpl row = (AddsValForStrucLOVRowImpl) vo.getCurrentRow();

        AddsValForStrucLOVRowImpl rowVar = row;
        AddsValForStrucLOVRowImpl rowNext = null;


        //Next Code Set Current Rows Parent Id to Parent LocId

        if (vo.hasPrevious()) {
            try {
                row = (AddsValForStrucLOVRowImpl) vo.previous();
                rowVar.setLocIdParent(row.getAttribute("LocId").toString());
                vo.next();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            rowVar.setLocIdParent("0");
        }
        vo.setCurrentRow(rowVar);
        //Next Code will change child rows parent id to  null;
        while (vo.hasNext()) {
            System.out.println("Row Found----");
            row = (AddsValForStrucLOVRowImpl) vo.next();
            row.setLocIdParent(null);
            System.out.println("Savind Adds Loc Id to reset children");
            row.setAddsLoc(null);
            System.out.println("Savind Loc ID Loc Id to reset children");
            row.setLocId(null);
        }


        row = (AddsValForStrucLOVRowImpl) vo.first();
        System.out.println("Loc Id is " + row.getLocId() + "Adds Loc Id is " + row.getAddsLoc() + "Loc Id PArent is " +
                           row.getLocIdParent());


        while (vo.hasNext()) {
            row = (AddsValForStrucLOVRowImpl) vo.next();
            System.out.println("Loc Id is " + row.getLocId() + "Adds Loc Id is " + row.getAddsLoc() +
                               "Loc Id PArent is " + row.getLocIdParent());

        }
        vo.setCurrentRow(rowVar);
    }

    /* public void setCurrentLocId(String currLocId){
        ViewObjectImpl addsLblValVO = this.getAddsLblValLOV1();
        currLocId =addsLblValVO.getCurrentRow().getAttribute("LocId").toString();
    } */

    /**
     * Container's getter for AddsStrLOV1.
     * @return AddsStrLOV1
     */
    public AddsStrLOVImpl getAddsStrLOV1() {
        return (AddsStrLOVImpl) findViewObject("AddsStrLOV1");
    }

    /**
     * Container's getter for AddsLblValLOV1.
     * @return AddsLblValLOV1
     */
    public ViewObjectImpl getAddsLblValLOV1() {
        return (ViewObjectImpl) findViewObject("AddsLblValLOV1");
    }

    public void setChild() {
        AddsValForStrucLOVRowImpl curRow = ((AddsValForStrucLOVRowImpl) this.getAddsValForStrucLOV1().getCurrentRow());
        AddsValForStrucLOVRowImpl nextRow = null;
        String locId = curRow.getLocIdTrns();
        Key key = curRow.getKey();
        Integer range = this.getAddsValForStrucLOV1().getRangeIndexOf(curRow);


        if (this.getAddsValForStrucLOV1().hasNext()) {
            System.out.println("There is next row ");
            nextRow = (AddsValForStrucLOVRowImpl) this.getAddsValForStrucLOV1().next();
            nextRow.setParentLocTrans(locId);
        }
        this.getAddsValForStrucLOV1().findAndSetCurrentRowByKey(key, range);

    }

    public void chkOperation() {
        AddsValForStrucLOVRowImpl currentRow =
            ((AddsValForStrucLOVRowImpl) this.getAddsValForStrucLOV1().getCurrentRow());
        AddsValForStrucLOVRowImpl nxtRow = null;

        if (this.getAddsValForStrucLOV1().getCurrentRow().getAttribute("chkTrans") != null) {
            if (this.getAddsValForStrucLOV1().getCurrentRow().getAttribute("chkTrans").toString().equalsIgnoreCase("TRUE")) {
                this.getAddsValForStrucLOV1().getCurrentRow().setAttribute("chkTrans", Boolean.FALSE);
                System.out.println("Inside if setting True____________");
            } else {
                while (this.getAddsValForStrucLOV1().hasNext()) {
                    nxtRow = (AddsValForStrucLOVRowImpl) this.getAddsValForStrucLOV1().next();
                    if (nxtRow.toString().equalsIgnoreCase("TRUE")) {
                        this.getAddsValForStrucLOV1().getCurrentRow().setAttribute("chkTrans", Boolean.FALSE);
                        System.out.println("Inside ELSE setting False____________");
                    }
                }
            }

        }
    }

    /**
     * Container's getter for OrgLogo1.
     * @return OrgLogo1
     */
    public ViewObjectImpl getOrgLogo1() {
        return (ViewObjectImpl) findViewObject("OrgLogo1");
    }

    public Boolean chkUsrRptSecAccess(Integer rptId) {
        String ret =
            (String) ADFModelUtils.callFunction(this.getRootApplicationModule(),
                                                new StringBuilder("APP.FN_CHK_USR_RPT_SEC(?,?,?,?,?)"), new Object[] {
                                                EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(), rptId
        }, Types.VARCHAR);
        if (ret != null && ret.length() > 0 && ret.toUpperCase().equals("Y"))
            return true;
        else
            return false;
    }
}
