package batchpayment.model.views;

import java.sql.Timestamp;

import javax.el.ELContext;
import javax.el.ExpressionFactory;

import javax.el.ValueExpression;

import javax.faces.application.Application;
import javax.faces.context.FacesContext;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 18 11:17:11 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        BatchId {
            public Object get(DualVORowImpl obj) {
                return obj.getBatchId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setBatchId((String) value);
            }
        }
        ,
        TxnId {
            public Object get(DualVORowImpl obj) {
                return obj.getTxnId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setTxnId((String) value);
            }
        }
        ,
        CoaId {
            public Object get(DualVORowImpl obj) {
                return obj.getCoaId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        }
        ,
        CoaNm {
            public Object get(DualVORowImpl obj) {
                return obj.getCoaNm();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setCoaNm((String) value);
            }
        }
        ,
        UsrCreateDt {
            public Object get(DualVORowImpl obj) {
                return obj.getUsrCreateDt();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setUsrCreateDt((Date) value);
            }
        }
        ,
        StatId {
            public Object get(DualVORowImpl obj) {
                return obj.getStatId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setStatId((Integer) value);
            }
        }
        ,
        StatVal {
            public Object get(DualVORowImpl obj) {
                return obj.getStatVal();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setStatVal((String) value);
            }
        }
        ,
        OrgId {
            public Object get(DualVORowImpl obj) {
                return obj.getOrgId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        }
        ,
        OrgNm {
            public Object get(DualVORowImpl obj) {
                return obj.getOrgNm();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setOrgNm((String) value);
            }
        }
        ,
        SlocId {
            public Object get(DualVORowImpl obj) {
                return obj.getSlocId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        }
        ,
        HoOrgId {
            public Object get(DualVORowImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        }
        ,
        CldId {
            public Object get(DualVORowImpl obj) {
                return obj.getCldId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        }
        ,
        Usr_Id {
            public Object get(DualVORowImpl obj) {
                return obj.getUsr_Id();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setUsr_Id((Integer) value);
            }
        }
        ,
        TransProjectId {
            public Object get(DualVORowImpl obj) {
                return obj.getTransProjectId();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setTransProjectId((String) value);
            }
        }
        ,
        FinApPayViewVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getFinApPayViewVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Fin_CoaVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getFin_CoaVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AppUserVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getAppUserVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovBatchIdVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovBatchIdVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovStatusIdNew1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovStatusIdNew1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovOrgIdVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovOrgIdVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovBatchIdVO2 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovBatchIdVO2();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        LovProjectVO1 {
            public Object get(DualVORowImpl obj) {
                return obj.getLovProjectVO1();
            }

            public void put(DualVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(DualVORowImpl object);

        public abstract void put(DualVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BATCHID = AttributesEnum.BatchId.index();
    public static final int TXNID = AttributesEnum.TxnId.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int USRCREATEDT = AttributesEnum.UsrCreateDt.index();
    public static final int STATID = AttributesEnum.StatId.index();
    public static final int STATVAL = AttributesEnum.StatVal.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int ORGNM = AttributesEnum.OrgNm.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int USR_ID = AttributesEnum.Usr_Id.index();
    public static final int TRANSPROJECTID = AttributesEnum.TransProjectId.index();
    public static final int FINAPPAYVIEWVO1 = AttributesEnum.FinApPayViewVO1.index();
    public static final int FIN_COAVO1 = AttributesEnum.Fin_CoaVO1.index();
    public static final int APPUSERVO1 = AttributesEnum.AppUserVO1.index();
    public static final int LOVBATCHIDVO1 = AttributesEnum.LovBatchIdVO1.index();
    public static final int LOVSTATUSIDNEW1 = AttributesEnum.LovStatusIdNew1.index();
    public static final int LOVORGIDVO1 = AttributesEnum.LovOrgIdVO1.index();
    public static final int LOVBATCHIDVO2 = AttributesEnum.LovBatchIdVO2.index();
    public static final int LOVPROJECTVO1 = AttributesEnum.LovProjectVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public DualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute BatchId.
     * @return the BatchId
     */
    public String getBatchId() {
        Integer sloc_id=1;
        String cld_id = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        String org_id = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        String str = resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString();
        if(str != null) {
            sloc_id = Integer.parseInt(str);
        }
        filterBatch(cld_id, org_id, sloc_id);
        return (String) getAttributeInternal(BATCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute BatchId.
     * @param value value to set the  BatchId
     */
    public void setBatchId(String value) {
        setAttributeInternal(BATCHID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TxnId.
     * @return the TxnId
     */
    public String getTxnId() {
        return (String) getAttributeInternal(TXNID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TxnId.
     * @param value value to set the  TxnId
     */
    public void setTxnId(String value) {
        setAttributeInternal(TXNID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaId.
     * @param value value to set the  CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CoaNm.
     * @param value value to set the  CoaNm
     */
    public void setCoaNm(String value) {
        setAttributeInternal(COANM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UsrCreateDt.
     * @return the UsrCreateDt
     */
    public Date getUsrCreateDt() {
        return (Date) getAttributeInternal(USRCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UsrCreateDt.
     * @param value value to set the  UsrCreateDt
     */
    public void setUsrCreateDt(Date value) {
        setAttributeInternal(USRCREATEDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatId.
     * @return the StatId
     */
    public Integer getStatId() {
        return (Integer) getAttributeInternal(STATID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatId.
     * @param value value to set the  StatId
     */
    public void setStatId(Integer value) {
        setAttributeInternal(STATID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StatVal.
     * @return the StatVal
     */
    public String getStatVal() {
        return (String) getAttributeInternal(STATVAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StatVal.
     * @param value value to set the  StatVal
     */
    public void setStatVal(String value) {
        setAttributeInternal(STATVAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        String str = resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        if(str != null) {
            return resolvEl("#{pageFlowScope.GLBL_APP_USR_ORG}").toString();
        }
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgNm.
     * @return the OrgNm
     */
    public String getOrgNm() {
        return (String) getAttributeInternal(ORGNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgNm.
     * @param value value to set the  OrgNm
     */
    public void setOrgNm(String value) {
        setAttributeInternal(ORGNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        String str = resolvEl("#{pageFlowScope.GLBL_APP_SERV_LOC}").toString();
        if(str != null) {
            return Integer.parseInt(str);
        }
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        String str = resolvEl("#{pageFlowScope.GLBL_HO_ORG_ID}").toString();
        if(str != null) {
            return str;
        }
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        String str = resolvEl("#{pageFlowScope.GLBL_APP_CLD_ID}").toString();
        if(str != null) {
            return str;
        }
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Usr_Id.
     * @return the Usr_Id
     */
    public Integer getUsr_Id() {
        String str = resolvEl("#{pageFlowScope.GLBL_APP_USR}").toString();
        if(str != null) {
            return Integer.parseInt(str);
        }
        return (Integer) getAttributeInternal(USR_ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Usr_Id.
     * @param value value to set the  Usr_Id
     */
    public void setUsr_Id(Integer value) {
        setAttributeInternal(USR_ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransProjectId.
     * @return the TransProjectId
     */
    public String getTransProjectId() {
        return (String) getAttributeInternal(TRANSPROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransProjectId.
     * @param value value to set the  TransProjectId
     */
    public void setTransProjectId(String value) {
        setAttributeInternal(TRANSPROJECTID, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> FinApPayViewVO1.
     */
    public RowSet getFinApPayViewVO1() {
        return (RowSet)getAttributeInternal(FINAPPAYVIEWVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Fin_CoaVO1.
     */
    public RowSet getFin_CoaVO1() {
        return (RowSet)getAttributeInternal(FIN_COAVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppUserVO1.
     */
    public RowSet getAppUserVO1() {
        return (RowSet)getAttributeInternal(APPUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBatchIdVO1.
     */
    public RowSet getLovBatchIdVO1() {
        return (RowSet)getAttributeInternal(LOVBATCHIDVO1);
    }
    
    public void filterBatch(String cld_id, String org_id, Integer sloc_id) {
        
        /* RowSet batchIdVO1 = getLovBatchIdVO1();
        batchIdVO1.setNamedWhereClauseParam("Cld_IdBind", cld_id);
        batchIdVO1.setNamedWhereClauseParam("SLOC_IDBIND", sloc_id);
        batchIdVO1.setNamedWhereClauseParam("ORG_IDBIND", org_id);
        batchIdVO1.executeQuery(); */
    }


    /**
     * Gets the view accessor <code>RowSet</code> LovStatusIdNew1.
     */
    public RowSet getLovStatusIdNew1() {
        return (RowSet)getAttributeInternal(LOVSTATUSIDNEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgIdVO1.
     */
    public RowSet getLovOrgIdVO1() {
        return (RowSet)getAttributeInternal(LOVORGIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovBatchIdVO2.
     */
    public RowSet getLovBatchIdVO2() {
        return (RowSet)getAttributeInternal(LOVBATCHIDVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovProjectVO1.
     */
    public RowSet getLovProjectVO1() {
        return (RowSet) getAttributeInternal(LOVPROJECTVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    
    public String resolvEl(String data){
    FacesContext fc = FacesContext.getCurrentInstance();
    Application app = fc.getApplication();
    ExpressionFactory elFactory = app.getExpressionFactory();
    ELContext elContext = fc.getELContext();
    ValueExpression valueExp = elFactory.createValueExpression(elContext, data,
    Object.class);
    String Message=valueExp.getValue(elContext).toString();
    return Message;
    }
}
