package trnploadingrequestapp.model.views;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;

import trnploadingrequestapp.model.services.TrnpLoadingRequestAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 15 15:56:47 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SearchDualVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        TransRouteId,
        TransRouteNm,
        TransRequestId,
        TransStrtDt,
        TransEndDt,
        TransRequestType,
        TransCustomerNm,
        TransCustomerId,
        TransTransporterNm,
        TransTransporterId,
        TransUseLr,
        LovRequestTypeVO1,
        LovRouteNoVO1,
        LovLoadingRequestVO1,
        LovCustNmVO1,
        LovTransporterNmVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int TRANSROUTEID = AttributesEnum.TransRouteId.index();
    public static final int TRANSROUTENM = AttributesEnum.TransRouteNm.index();
    public static final int TRANSREQUESTID = AttributesEnum.TransRequestId.index();
    public static final int TRANSSTRTDT = AttributesEnum.TransStrtDt.index();
    public static final int TRANSENDDT = AttributesEnum.TransEndDt.index();
    public static final int TRANSREQUESTTYPE = AttributesEnum.TransRequestType.index();
    public static final int TRANSCUSTOMERNM = AttributesEnum.TransCustomerNm.index();
    public static final int TRANSCUSTOMERID = AttributesEnum.TransCustomerId.index();
    public static final int TRANSTRANSPORTERNM = AttributesEnum.TransTransporterNm.index();
    public static final int TRANSTRANSPORTERID = AttributesEnum.TransTransporterId.index();
    public static final int TRANSUSELR = AttributesEnum.TransUseLr.index();
    public static final int LOVREQUESTTYPEVO1 = AttributesEnum.LovRequestTypeVO1.index();
    public static final int LOVROUTENOVO1 = AttributesEnum.LovRouteNoVO1.index();
    public static final int LOVLOADINGREQUESTVO1 = AttributesEnum.LovLoadingRequestVO1.index();
    public static final int LOVCUSTNMVO1 = AttributesEnum.LovCustNmVO1.index();
    public static final int LOVTRANSPORTERNMVO1 = AttributesEnum.LovTransporterNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SearchDualVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public String getSlocId() {
        return (String) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRouteId.
     * @return the TransRouteId
     */
    public String getTransRouteId() {
        return (String) getAttributeInternal(TRANSROUTEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRouteId.
     * @param value value to set the  TransRouteId
     */
    public void setTransRouteId(String value) {
        setAttributeInternal(TRANSROUTEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRouteNm.
     * @return the TransRouteNm
     */
    public String getTransRouteNm() {
        return (String) getAttributeInternal(TRANSROUTENM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRouteNm.
     * @param value value to set the  TransRouteNm
     */
    public void setTransRouteNm(String value) {
        setAttributeInternal(TRANSROUTENM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRequestId.
     * @return the TransRequestId
     */
    public String getTransRequestId() {
        return (String) getAttributeInternal(TRANSREQUESTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRequestId.
     * @param value value to set the  TransRequestId
     */
    public void setTransRequestId(String value) {
        setAttributeInternal(TRANSREQUESTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStrtDt.
     * @return the TransStrtDt
     */
    public Timestamp getTransStrtDt() {
        return (Timestamp) getAttributeInternal(TRANSSTRTDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStrtDt.
     * @param value value to set the  TransStrtDt
     */
    public void setTransStrtDt(Timestamp value) {
        setAttributeInternal(TRANSSTRTDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEndDt.
     * @return the TransEndDt
     */
    public Timestamp getTransEndDt() {
        return (Timestamp) getAttributeInternal(TRANSENDDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEndDt.
     * @param value value to set the  TransEndDt
     */
    public void setTransEndDt(Timestamp value) {
        setAttributeInternal(TRANSENDDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransRequestType.
     * @return the TransRequestType
     */
    public String getTransRequestType() {
        return (String) getAttributeInternal(TRANSREQUESTTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransRequestType.
     * @param value value to set the  TransRequestType
     */
    public void setTransRequestType(String value) {
        setAttributeInternal(TRANSREQUESTTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCustomerNm.
     * @return the TransCustomerNm
     */
    public String getTransCustomerNm() {
        return (String) getAttributeInternal(TRANSCUSTOMERNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCustomerNm.
     * @param value value to set the  TransCustomerNm
     */
    public void setTransCustomerNm(String value) {
        setAttributeInternal(TRANSCUSTOMERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCustomerId.
     * @return the TransCustomerId
     */
    public Integer getTransCustomerId() {
        return (Integer) getAttributeInternal(TRANSCUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCustomerId.
     * @param value value to set the  TransCustomerId
     */
    public void setTransCustomerId(Integer value) {
        setAttributeInternal(TRANSCUSTOMERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTransporterNm.
     * @return the TransTransporterNm
     */
    public String getTransTransporterNm() {
        return (String) getAttributeInternal(TRANSTRANSPORTERNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTransporterNm.
     * @param value value to set the  TransTransporterNm
     */
    public void setTransTransporterNm(String value) {
        setAttributeInternal(TRANSTRANSPORTERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTransporterId.
     * @return the TransTransporterId
     */
    public Integer getTransTransporterId() {
        return (Integer) getAttributeInternal(TRANSTRANSPORTERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTransporterId.
     * @param value value to set the  TransTransporterId
     */
    public void setTransTransporterId(Integer value) {
        setAttributeInternal(TRANSTRANSPORTERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUseLr.
     * @return the TransUseLr
     */
    public String getTransUseLr() {
        if (getAttributeInternal(TRANSUSELR) != null)
            return (String) getAttributeInternal(TRANSUSELR);
        else {
            return ((TrnpLoadingRequestAMImpl) this.getApplicationModule()).getValFrmOrgPrf("USE_LR");
        }
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRequestTypeVO1.
     */
    public RowSet getLovRequestTypeVO1() {
        return (RowSet) getAttributeInternal(LOVREQUESTTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovRouteNoVO1.
     */
    public RowSet getLovRouteNoVO1() {
        return (RowSet) getAttributeInternal(LOVROUTENOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLoadingRequestVO1.
     */
    public RowSet getLovLoadingRequestVO1() {
        return (RowSet) getAttributeInternal(LOVLOADINGREQUESTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustNmVO1.
     */
    public RowSet getLovCustNmVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTransporterNmVO1.
     */
    public RowSet getLovTransporterNmVO1() {
        return (RowSet) getAttributeInternal(LOVTRANSPORTERNMVO1);
    }
}

