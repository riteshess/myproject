package trnploadingrequestapp.model.views;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnploadingrequestapp.model.services.TrnpLoadingRequestAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 08 14:33:55 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLrRouteEoVORowImpl extends ViewRowImpl {

    public static final int ENTITY_SLSTRNPLRROUTEEOEO = 0;
    private static ADFLogger _log = ADFLogger.createADFLogger(SlsTrnpLrRouteEoVORowImpl.class);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ArrivalPnt,
        CldId,
        DeparturePnt,
        DocId,
        EoId,
        HoOrgId,
        OrgId,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransCustomerNm,
        TransDocIdSrcDisp,
        TransDocIdSrc,
        TransCurrIdSp,
        TransDocSrcSwitcher,
        TransPickDocId,
        SlsTrnpLrProdDtl,
        SlsTrnpLrDocSrc,
        LovCustNmVO1,
        LovShipmentVO1,
        LovPurchaseOrdVO1,
        LovTransferOrderVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSCUSTOMERNM = AttributesEnum.TransCustomerNm.index();
    public static final int TRANSDOCIDSRCDISP = AttributesEnum.TransDocIdSrcDisp.index();
    public static final int TRANSDOCIDSRC = AttributesEnum.TransDocIdSrc.index();
    public static final int TRANSCURRIDSP = AttributesEnum.TransCurrIdSp.index();
    public static final int TRANSDOCSRCSWITCHER = AttributesEnum.TransDocSrcSwitcher.index();
    public static final int TRANSPICKDOCID = AttributesEnum.TransPickDocId.index();
    public static final int SLSTRNPLRPRODDTL = AttributesEnum.SlsTrnpLrProdDtl.index();
    public static final int SLSTRNPLRDOCSRC = AttributesEnum.SlsTrnpLrDocSrc.index();
    public static final int LOVCUSTNMVO1 = AttributesEnum.LovCustNmVO1.index();
    public static final int LOVSHIPMENTVO1 = AttributesEnum.LovShipmentVO1.index();
    public static final int LOVPURCHASEORDVO1 = AttributesEnum.LovPurchaseOrdVO1.index();
    public static final int LOVTRANSFERORDERVO1 = AttributesEnum.LovTransferOrderVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLrRouteEoVORowImpl() {
    }

    /**
     * Gets SlsTrnpLrRouteEoEO entity object.
     * @return the SlsTrnpLrRouteEoEO
     */
    public EntityImpl getSlsTrnpLrRouteEoEO() {
        return (EntityImpl) getEntity(ENTITY_SLSTRNPLRROUTEEOEO);
    }

    /**
     * Gets the attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @return the ARRIVAL_PNT
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @param value value to set the ARRIVAL_PNT
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @return the DEPARTURE_PNT
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @param value value to set the DEPARTURE_PNT
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCustomerNm.
     * @return the TransCustomerNm
     */
    public String getTransCustomerNm() {
        if (getAttributeInternal(TRANSCUSTOMERNM) != null)
            return (String) getAttributeInternal(TRANSCUSTOMERNM);
        else {                
                TrnpLoadingRequestAMImpl am = (TrnpLoadingRequestAMImpl) this.getApplicationModule();

                    if(this.getEoId().toString().equalsIgnoreCase("0"))
                    {
                        ViewObjectImpl orgVo =  am.getLovOrgNmVO1();
                        orgVo.setNamedWhereClauseParam("BindCldId", this.getCldId());
                        orgVo.executeQuery();
                        
                        Row[] filteredOrg = orgVo.getFilteredRows("OrgId", this.getOrgId());
                        
                        if(filteredOrg.length > 0)
                        {   
                            System.out.println("Inside filteredOrg condition :: "+filteredOrg.length);
                            System.out.println("Organization name :: "+filteredOrg[0].getAttribute("OrgDesc"));
                            //this.setTransCustomerNm((String) filteredOrg[0].getAttribute("OrgDesc"));
                            return (String) filteredOrg[0].getAttribute("OrgDesc");   
                        }
                        else
                            return (String) getAttributeInternal(TRANSCUSTOMERNM); 
                    }
                    else
                    {
                        Row fr[] = this.getLovCustNmVO1().getFilteredRows("EoId", this.getEoId());
                        _log.info("No. of Filtered Rows=" + fr.length);
                        if (fr.length > 0) {
                            return (String) fr[0].getAttribute("EoNm");
                        } else
                            return (String) getAttributeInternal(TRANSCUSTOMERNM);
                    }
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCustomerNm.
     * @param value value to set the  TransCustomerNm
     */
    public void setTransCustomerNm(String value) {
        setAttributeInternal(TRANSCUSTOMERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocIdSrcDisp.
     * @return the TransDocIdSrcDisp
     */
    public String getTransDocIdSrcDisp() {
        return (String) getAttributeInternal(TRANSDOCIDSRCDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocIdSrcDisp.
     * @param value value to set the  TransDocIdSrcDisp
     */
    public void setTransDocIdSrcDisp(String value) {
        setAttributeInternal(TRANSDOCIDSRCDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocIdSrc.
     * @return the TransDocIdSrc
     */
    public String getTransDocIdSrc() {
        return (String) getAttributeInternal(TRANSDOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocIdSrc.
     * @param value value to set the  TransDocIdSrc
     */
    public void setTransDocIdSrc(String value) {
        setAttributeInternal(TRANSDOCIDSRC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrIdSp.
     * @return the TransCurrIdSp
     */
    public Integer getTransCurrIdSp() {
        if (getAttributeInternal(TRANSCURRIDSP) != null)
            return (Integer) getAttributeInternal(TRANSCURRIDSP);
        else {
            TrnpLoadingRequestAMImpl am = (TrnpLoadingRequestAMImpl) this.getApplicationModule();
            return (Integer) am.getSlsTrnpLr().getCurrentRow().getAttribute("CurrIdSp");
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrIdSp.
     * @param value value to set the  TransCurrIdSp
     */
    public void setTransCurrIdSp(Integer value) {
        setAttributeInternal(TRANSCURRIDSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocSrcSwitcher.
     * @return the TransDocSrcSwitcher
     */
    public String getTransDocSrcSwitcher() {
        TrnpLoadingRequestAMImpl am = (TrnpLoadingRequestAMImpl) this.getApplicationModule();
        Integer lrBasis = (Integer) am.getSlsTrnpLr().getCurrentRow().getAttribute("LrBasis");
        if (lrBasis.equals(new Integer(4)))
            return "LOV_TransDocIdSrcDispShip";
        else if (lrBasis.equals(new Integer(5)))
            return "LOV_TransDocIdSrcDispPO";
        else if(lrBasis.equals(new Integer(39)))
            return "LOV_TransDocIdSrcDispTO";
        else
            return (String) getAttributeInternal(TRANSDOCSRCSWITCHER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocSrcSwitcher.
     * @param value value to set the  TransDocSrcSwitcher
     */
    public void setTransDocSrcSwitcher(String value) {
        setAttributeInternal(TRANSDOCSRCSWITCHER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransPickDocId.
     * @return the TransPickDocId
     */
    public String getTransPickDocId() {
        return (String) getAttributeInternal(TRANSPICKDOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransPickDocId.
     * @param value value to set the  TransPickDocId
     */
    public void setTransPickDocId(String value) {
        setAttributeInternal(TRANSPICKDOCID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLrProdDtl.
     */
    public RowIterator getSlsTrnpLrProdDtl() {
        return (RowIterator) getAttributeInternal(SLSTRNPLRPRODDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLrDocSrc.
     */
    public RowIterator getSlsTrnpLrDocSrc() {
        return (RowIterator) getAttributeInternal(SLSTRNPLRDOCSRC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustNmVO1.
     */
    public RowSet getLovCustNmVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovShipmentVO1.
     */
    public RowSet getLovShipmentVO1() {
        return (RowSet) getAttributeInternal(LOVSHIPMENTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovPurchaseOrdVO1.
     */
    public RowSet getLovPurchaseOrdVO1() {
        return (RowSet) getAttributeInternal(LOVPURCHASEORDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTransferOrderVO1.
     */
    public RowSet getLovTransferOrderVO1() {
        return (RowSet) getAttributeInternal(LOVTRANSFERORDERVO1);
    }
}

