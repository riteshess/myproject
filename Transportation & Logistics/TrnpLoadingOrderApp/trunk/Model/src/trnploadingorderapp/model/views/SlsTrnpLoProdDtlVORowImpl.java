package trnploadingorderapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnploadingorderapp.model.entities.SlsTrnpLoProdDtlEOImpl;
import trnploadingorderapp.model.services.TrnpLoadingOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 04 10:26:06 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLoProdDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPLOSHIPDTLEO = 0;
    Number Zero = new Number(0);

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ArrivalPnt,
        CldId,
        DeparturePnt,
        DocId,
        EoId,
        HoOrgId,
        ItmAmtBs,
        ItmAmtSp,
        ItmId,
        ItmWt,
        ItmWtUom,
        OrgId,
        Rate,
        DocIdSrc,
        SlocId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        ItemNameTrans,
        ItmWtUomNmTrans,
        ShipQty,
        ShipQtyUom,
        TransTripDist,
        LOVItemNmVO1,
        LOVUomVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return SlsTrnpLoProdDtlVORowImpl.AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return SlsTrnpLoProdDtlVORowImpl.AttributesEnum.firstIndex() +
                   SlsTrnpLoProdDtlVORowImpl.AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = SlsTrnpLoProdDtlVORowImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ITMAMTBS = AttributesEnum.ItmAmtBs.index();
    public static final int ITMAMTSP = AttributesEnum.ItmAmtSp.index();
    public static final int ITMID = AttributesEnum.ItmId.index();
    public static final int ITMWT = AttributesEnum.ItmWt.index();
    public static final int ITMWTUOM = AttributesEnum.ItmWtUom.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int DOCIDSRC = AttributesEnum.DocIdSrc.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int ITEMNAMETRANS = AttributesEnum.ItemNameTrans.index();
    public static final int ITMWTUOMNMTRANS = AttributesEnum.ItmWtUomNmTrans.index();
    public static final int SHIPQTY = AttributesEnum.ShipQty.index();
    public static final int SHIPQTYUOM = AttributesEnum.ShipQtyUom.index();
    public static final int TRANSTRIPDIST = AttributesEnum.TransTripDist.index();
    public static final int LOVITEMNMVO1 = AttributesEnum.LOVItemNmVO1.index();
    public static final int LOVUOMVO1 = AttributesEnum.LOVUomVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLoProdDtlVORowImpl() {
    }

    /**
     * Gets SlsTrnpLoShipDtlEO entity object.
     * @return the SlsTrnpLoShipDtlEO
     */
    public SlsTrnpLoProdDtlEOImpl getSlsTrnpLoShipDtlEO() {
        return (SlsTrnpLoProdDtlEOImpl) getEntity(ENTITY_SLSTRNPLOSHIPDTLEO);
    }

    /**
     * Gets the attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @return the ARRIVAL_PNT
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @param value value to set the ARRIVAL_PNT
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @return the DEPARTURE_PNT
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @param value value to set the DEPARTURE_PNT
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @return the ITM_AMT_BS
     */
    public Number getItmAmtBs() {
        return (Number) getAttributeInternal(ITMAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_BS using the alias name ItmAmtBs.
     * @param value value to set the ITM_AMT_BS
     */
    public void setItmAmtBs(Number value) {
        setAttributeInternal(ITMAMTBS, value);
    }

    /**
     * Gets the attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @return the ITM_AMT_SP
     */
    public Number getItmAmtSp() {
        return (Number) getAttributeInternal(ITMAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_AMT_SP using the alias name ItmAmtSp.
     * @param value value to set the ITM_AMT_SP
     */
    public void setItmAmtSp(Number value) {
        if (value == null)
            value = Zero;
        Number currRate = Zero;
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("CurrConvFctr") != null)
            currRate = (Number) getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("CurrConvFctr");
        this.setItmAmtBs(value.multiply(currRate));
        setAttributeInternal(ITMAMTSP, value);
    }

    /**
     * Gets the attribute value for ITM_ID using the alias name ItmId.
     * @return the ITM_ID
     */
    public String getItmId() {
        return (String) getAttributeInternal(ITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_ID using the alias name ItmId.
     * @param value value to set the ITM_ID
     */
    public void setItmId(String value) {
        setAttributeInternal(ITMID, value);
    }

    /**
     * Gets the attribute value for ITM_WT using the alias name ItmWt.
     * @return the ITM_WT
     */
    public Number getItmWt() {
        return (Number) getAttributeInternal(ITMWT);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_WT using the alias name ItmWt.
     * @param value value to set the ITM_WT
     */
    public void setItmWt(Number value) {
        if (value == null)
            value = Zero;
        setAttributeInternal(ITMWT, value);

        String rateBasis = "F";
        String rateFctr = "D";
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateFctr") != null)
            rateFctr = (String) getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateFctr");
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateBasis") != null)
            rateBasis = (String) getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateBasis");
        if (rateFctr.equals("W")) {
            this.setItmAmtSp(value.multiply(this.getRate() == null ? Zero : this.getRate()));
        }
        if (rateBasis.equals("F") && rateFctr.equals("D")) {
            Row[] fr = this.getAm().getSlsTrnpLoRouteEoVO1().getFilteredRows("EoId", this.getEoId());
            Number rateEo = Zero;
            if (fr.length > 0)
                rateEo = (Number) fr[0].getAttribute("Rate");
            //   Number dist = (Number) getAm().getSlsTrnpLoRouteDtlVO1().getCurrentRow().getAttribute("TotVal");
            // Number slNo = (Number) getAm().getSlsTrnpLoRouteDtlVO1().getCurrentRow().getAttribute("SlNo");


            ViewObjectImpl impl = this.getAm().getSlsTrnpLoProdDtlVO2();
            impl.setRangeSize(-1);
            impl.executeQuery();
            RowQualifier rqTripProdDtl = new RowQualifier(impl);
            rqTripProdDtl.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() +
                                         " and HoOrgId ='" + this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() +
                                         "' and DocId ='" + this.getDocId() + "' and DeparturePnt ='" +
                                         this.getDeparturePnt() + "' and ArrivalPnt ='" + this.getArrivalPnt() +
                                         "' and EoId=" + getEoId());
            Row[] itmRow = impl.getFilteredRows(rqTripProdDtl);
            Number totWt = Zero;
            for (Row row : itmRow) {
                if (row.getAttribute("ItmWt") != null)
                    totWt = totWt.add((Number) row.getAttribute("ItmWt"));
            }
            System.out.println("Total Weight =" + totWt);
            for (Row row : itmRow) {
                Number itmWt = Zero;
                if (row.getAttribute("ItmWt") != null)
                    itmWt = (Number) row.getAttribute("ItmWt");
                System.out.println("(Percentage of Item in total Weight)*100=" + itmWt.divide(totWt));
                row.setAttribute("Rate", (rateEo.multiply(itmWt.divide(totWt))).round(6));
            }

            /*  Number itmRate = Zero;
            itmRate = rateEo.multiply(value.divide(totWt));
            this.setRate(itmRate); */
        }
    }

    /**
     * Gets the attribute value for ITM_WT_UOM using the alias name ItmWtUom.
     * @return the ITM_WT_UOM
     */
    public String getItmWtUom() {
        return (String) getAttributeInternal(ITMWTUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for ITM_WT_UOM using the alias name ItmWtUom.
     * @param value value to set the ITM_WT_UOM
     */
    public void setItmWtUom(String value) {
        setAttributeInternal(ITMWTUOM, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RATE using the alias name Rate.
     * @return the RATE
     */
    public Number getRate() {
        return (Number) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE using the alias name Rate.
     * @param value value to set the RATE
     */
    public void setRate(Number value) {
        if (value == null)
            value = Zero;

        String rateBasis = "F";
        String rateFctr = "D";
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateFctr") != null)
            rateFctr = (String) getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateFctr");
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateBasis") != null)
            rateBasis = (String) getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateBasis");

        if (rateFctr.equals("D")) {
            this.setItmAmtSp(value.multiply(this.getTransTripDist()));
        } else {
            this.setItmAmtSp(value.multiply(this.getItmWt()));
        }

        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for SHIP_ID using the alias name ShipId.
     * @return the SHIP_ID
     */
    public String getDocIdSrc() {
        return (String) getAttributeInternal(DOCIDSRC);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_ID using the alias name ShipId.
     * @param value value to set the SHIP_ID
     */
    public void setDocIdSrc(String value) {
        setAttributeInternal(DOCIDSRC, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItemNameTrans.
     * @return the ItemNameTrans
     */
    public String getItemNameTrans() {
        if (this.getItmId() != null) {
            return this.getAm().getItemNameBasedOnItemId(this.getItmId());
        }
        return (String) getAttributeInternal(ITEMNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItemNameTrans.
     * @param value value to set the  ItemNameTrans
     */
    public void setItemNameTrans(String value) {
        setAttributeInternal(ITEMNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ItmWtUomNmTrans.
     * @return the ItmWtUomNmTrans
     */
    public String getItmWtUomNmTrans() {
        if (this.getItmWtUom() != null) {
            ViewObjectImpl impl = this.getAm().getLOVUomVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindUomId", this.getItmWtUom());

            impl.executeQuery();

            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("UomDesc");
            }
        }
        return (String) getAttributeInternal(ITMWTUOMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ItmWtUomNmTrans.
     * @param value value to set the  ItmWtUomNmTrans
     */
    public void setItmWtUomNmTrans(String value) {
        setAttributeInternal(ITMWTUOMNMTRANS, value);
    }


    /**
     * Gets the attribute value for SHIP_QTY using the alias name ShipQty.
     * @return the SHIP_QTY
     */
    public Number getShipQty() {
        return (Number) getAttributeInternal(SHIPQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_QTY using the alias name ShipQty.
     * @param value value to set the SHIP_QTY
     */
    public void setShipQty(Number value) {
        setAttributeInternal(SHIPQTY, value);
    }

    /**
     * Gets the attribute value for SHIP_QTY_UOM using the alias name ShipQtyUom.
     * @return the SHIP_QTY_UOM
     */
    public String getShipQtyUom() {
        return (String) getAttributeInternal(SHIPQTYUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for SHIP_QTY_UOM using the alias name ShipQtyUom.
     * @param value value to set the SHIP_QTY_UOM
     */
    public void setShipQtyUom(String value) {
        setAttributeInternal(SHIPQTYUOM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTripDist.
     * @return the TransTripDist
     */
    public Number getTransTripDist() {
        if (getAm().getSlsTrnpLoVO1().getCurrentRow().getAttribute("RateFctr").toString().equals("D"))
            return (Number) getAm().getSlsTrnpLoRouteDtlVO1().getCurrentRow().getAttribute("TotVal");
        else
            return (Number) getAttributeInternal(TRANSTRIPDIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTripDist.
     * @param value value to set the  TransTripDist
     */
    public void setTransTripDist(Number value) {
        setAttributeInternal(TRANSTRIPDIST, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVItemNmVO1.
     */
    public RowSet getLOVItemNmVO1() {
        return (RowSet) getAttributeInternal(LOVITEMNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUomVO1.
     */
    public RowSet getLOVUomVO1() {
        return (RowSet) getAttributeInternal(LOVUOMVO1);
    }

    /**
     * Method will return Application Module App
     */
    public TrnpLoadingOrderAMImpl getAm() {
        TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) getApplicationModule();
        return am;
    }
}
