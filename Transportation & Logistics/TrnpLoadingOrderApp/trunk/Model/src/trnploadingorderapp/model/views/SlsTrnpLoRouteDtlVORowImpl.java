package trnploadingorderapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnploadingorderapp.model.entities.SlsTrnpLoRouteDtlEOImpl;
import trnploadingorderapp.model.services.TrnpLoadingOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 04 09:47:09 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLoRouteDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPLOROUTEDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AmtBs,
        AmtSp,
        ArrivalDate,
        ArrivalPnt,
        CldId,
        DepartureDate,
        DeparturePnt,
        DocId,
        HoOrgId,
        OrgId,
        Rate,
        SlocId,
        TotVal,
        Uom,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        CustomerNmTrans,
        EoIdTrans,
        UonNmTrans,
        EoTypeTrans,
        ArrivalPntNmTrans,
        DeparturePntNmTrans,
        TotProdRateTrans,
        TotProdWtTrans,
        SlNo,
        DeptDateForValTrans,
        TotAmtSpTrans,
        TotAmtBsTrans,
        CustomerRateTrans,
        SlsTrnpLoRouteEo,
        SlsTrnpLoOc,
        SlsTrnpLo,
        LOVCustNameVO1,
        LOVShipmentIdVO1,
        LOVUomVO1,
        LOVLocNmVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int ARRIVALDATE = AttributesEnum.ArrivalDate.index();
    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPARTUREDATE = AttributesEnum.DepartureDate.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TOTVAL = AttributesEnum.TotVal.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CUSTOMERNMTRANS = AttributesEnum.CustomerNmTrans.index();
    public static final int EOIDTRANS = AttributesEnum.EoIdTrans.index();
    public static final int UONNMTRANS = AttributesEnum.UonNmTrans.index();
    public static final int EOTYPETRANS = AttributesEnum.EoTypeTrans.index();
    public static final int ARRIVALPNTNMTRANS = AttributesEnum.ArrivalPntNmTrans.index();
    public static final int DEPARTUREPNTNMTRANS = AttributesEnum.DeparturePntNmTrans.index();
    public static final int TOTPRODRATETRANS = AttributesEnum.TotProdRateTrans.index();
    public static final int TOTPRODWTTRANS = AttributesEnum.TotProdWtTrans.index();
    public static final int SLNO = AttributesEnum.SlNo.index();
    public static final int DEPTDATEFORVALTRANS = AttributesEnum.DeptDateForValTrans.index();
    public static final int TOTAMTSPTRANS = AttributesEnum.TotAmtSpTrans.index();
    public static final int TOTAMTBSTRANS = AttributesEnum.TotAmtBsTrans.index();
    public static final int CUSTOMERRATETRANS = AttributesEnum.CustomerRateTrans.index();
    public static final int SLSTRNPLOROUTEEO = AttributesEnum.SlsTrnpLoRouteEo.index();
    public static final int SLSTRNPLOOC = AttributesEnum.SlsTrnpLoOc.index();
    public static final int SLSTRNPLO = AttributesEnum.SlsTrnpLo.index();
    public static final int LOVCUSTNAMEVO1 = AttributesEnum.LOVCustNameVO1.index();
    public static final int LOVSHIPMENTIDVO1 = AttributesEnum.LOVShipmentIdVO1.index();
    public static final int LOVUOMVO1 = AttributesEnum.LOVUomVO1.index();
    public static final int LOVLOCNMVO1 = AttributesEnum.LOVLocNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLoRouteDtlVORowImpl() {
    }

    /**
     * Gets SlsTrnpLoRouteDtlEO entity object.
     * @return the SlsTrnpLoRouteDtlEO
     */
    public SlsTrnpLoRouteDtlEOImpl getSlsTrnpLoRouteDtlEO() {
        return (SlsTrnpLoRouteDtlEOImpl) getEntity(ENTITY_SLSTRNPLOROUTEDTLEO);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for ARRIVAL_DATE using the alias name ArrivalDate.
     * @return the ARRIVAL_DATE
     */
    public Timestamp getArrivalDate() {
        return (Timestamp) getAttributeInternal(ARRIVALDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_DATE using the alias name ArrivalDate.
     * @param value value to set the ARRIVAL_DATE
     */
    public void setArrivalDate(Timestamp value) {
        setAttributeInternal(ARRIVALDATE, value);
    }

    /**
     * Gets the attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @return the ARRIVAL_PNT
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @param value value to set the ARRIVAL_PNT
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_DATE using the alias name DepartureDate.
     * @return the DEPARTURE_DATE
     */
    public Timestamp getDepartureDate() {
        
        if(getAttributeInternal(DEPARTUREDATE) != null)
            return (Timestamp) getAttributeInternal(DEPARTUREDATE);
        
        return (Timestamp) getAttributeInternal(DEPARTUREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_DATE using the alias name DepartureDate.
     * @param value value to set the DEPARTURE_DATE
     */
    public void setDepartureDate(Timestamp value) {
        
        System.out.println("getAttributeInternal(DEPARTUREDATE) :: "+ (Timestamp) getAttributeInternal(DEPARTUREDATE));
        
        if(getAttributeInternal(DEPARTUREDATE) != null)
            setAttributeInternal(DEPARTUREDATE, (Timestamp) getAttributeInternal(DEPARTUREDATE));
        
        setAttributeInternal(DEPARTUREDATE, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @return the DEPARTURE_PNT
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @param value value to set the DEPARTURE_PNT
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RATE using the alias name Rate.
     * @return the RATE
     */
    public Number getRate() {
        return (Number) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE using the alias name Rate.
     * @param value value to set the RATE
     */
    public void setRate(Number value) {
        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TOT_VAL using the alias name TotVal.
     * @return the TOT_VAL
     */
    public Number getTotVal() {
        return (Number) getAttributeInternal(TOTVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_VAL using the alias name TotVal.
     * @param value value to set the TOT_VAL
     */
    public void setTotVal(Number value) {
        setAttributeInternal(TOTVAL, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerNmTrans.
     * @return the CustomerNmTrans
     */
    public String getCustomerNmTrans() {
        return (String) getAttributeInternal(CUSTOMERNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerNmTrans.
     * @param value value to set the  CustomerNmTrans
     */
    public void setCustomerNmTrans(String value) {
        setAttributeInternal(CUSTOMERNMTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute EoIdTrans.
     * @return the EoIdTrans
     */
    public Integer getEoIdTrans() {
        return (Integer) getAttributeInternal(EOIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EoIdTrans.
     * @param value value to set the  EoIdTrans
     */
    public void setEoIdTrans(Integer value) {
        if (value != null) {
            Row currentRow = this.getAm().getSlsTrnpLoVO1().getCurrentRow();
            Number flatRate = new Number(0);
            flatRate =
                this.getAm().getRateFromRateContract(value, (String) currentRow.getAttribute("RateBasis"),
                                                     (String) currentRow.getAttribute("RateFctr"),
                                                     (Integer) currentRow.getAttribute("VehicleTyp"),
                                                     (Integer) currentRow.getAttribute("CurrIdSp"), null);
            this.setCustomerRateTrans(flatRate);
        }
        setAttributeInternal(EOIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UonNmTrans.
     * @return the UonNmTrans
     */
    public String getUonNmTrans() {
        if (this.getUom() != null) {
            RowSet lOVUomVO1 = this.getLOVUomVO1();
            lOVUomVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            lOVUomVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            lOVUomVO1.setNamedWhereClauseParam("BindUomId", this.getUom());

            lOVUomVO1.executeQuery();

            Row[] allRowsInRange = lOVUomVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("UomDesc");
            }
        }
        return (String) getAttributeInternal(UONNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UonNmTrans.
     * @param value value to set the  UonNmTrans
     */
    public void setUonNmTrans(String value) {
        setAttributeInternal(UONNMTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute EoTypteTrans.
     * @return the EoTypteTrans
     */
    public Integer getEoTypeTrans() {
        /* if (getAttributeInternal(EOTYPETRANS) == null) {
            Row currentRow = this.getAm().getSlsTrnpLoVO1().getCurrentRow();
            if (currentRow != null && currentRow.getAttribute("LoSrcBasis") != null) {
                Integer loSrcBasis = (Integer) currentRow.getAttribute("LoSrcBasis");
                if (loSrcBasis == 9) { /// For Customer
                    return 68;
                } else if (loSrcBasis == 8) { /// For Supplier
                    return 69;
                }
            }
        } */
        return (Integer) this.getSlsTrnpLo().getAttribute("EoTypeTrans");
        //return (Integer) getAttributeInternal(EOTYPETRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute ArrivalPntNmTrans.
     * @return the ArrivalPntNmTrans
     */
    public String getArrivalPntNmTrans() {
        if (this.getArrivalPnt() != null) {
            return this.getAm().getLocNmBasedOnId(this.getArrivalPnt());
        }
        return (String) getAttributeInternal(ARRIVALPNTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ArrivalPntNmTrans.
     * @param value value to set the  ArrivalPntNmTrans
     */
    public void setArrivalPntNmTrans(String value) {
        setAttributeInternal(ARRIVALPNTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeparturePntNmTrans.
     * @return the DeparturePntNmTrans
     */
    public String getDeparturePntNmTrans() {
        if (this.getDeparturePnt() != null) {
            return this.getAm().getLocNmBasedOnId(this.getDeparturePnt());
        }
        return (String) getAttributeInternal(DEPARTUREPNTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DeparturePntNmTrans.
     * @param value value to set the  DeparturePntNmTrans
     */
    public void setDeparturePntNmTrans(String value) {
        setAttributeInternal(DEPARTUREPNTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotProdRateTrans.
     * @return the TotProdRateTrans
     */
    public Number getTotProdRateTrans() {
        if (this.getDocId() != null && this.getArrivalPnt() != null && this.getDeparturePnt() != null) {
            Number totRate = new Number(0);
            ViewObjectImpl dtlVO2 = this.getAm().getSlsTrnpLoProdDtlVO2();
            dtlVO2.setRangeSize(-1);
            dtlVO2.executeQuery();
            RowQualifier rQ = new RowQualifier(dtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "' and ArrivalPnt ='" + this.getArrivalPnt() + "' and DeparturePnt ='" +
                              this.getDeparturePnt() + "'");
            Row[] filteredRows = dtlVO2.getFilteredRows(rQ);
            for (Row r : filteredRows) {
                if (r.getAttribute("Rate") != null) {
                    totRate = totRate.add((Number) r.getAttribute("Rate"));
                }
            }
            if (totRate != null) {
                return totRate;
            }
        }
        return (Number) getAttributeInternal(TOTPRODRATETRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotProdWtTrans.
     * @return the TotProdWtTrans
     */
    public Number getTotProdWtTrans() {
        if (this.getDocId() != null && this.getArrivalPnt() != null && this.getDeparturePnt() != null) {
            Number totWt = new Number(0);
            ViewObjectImpl dtlVO2 = this.getAm().getSlsTrnpLoProdDtlVO2();
            dtlVO2.setRangeSize(-1);
            dtlVO2.executeQuery();
            RowQualifier rQ = new RowQualifier(dtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "' and ArrivalPnt ='" + this.getArrivalPnt() + "' and DeparturePnt ='" +
                              this.getDeparturePnt() + "'");
            Row[] filteredRows = dtlVO2.getFilteredRows(rQ);
            for (Row r : filteredRows) {
                if (r.getAttribute("ItmWt") != null) {
                    totWt = totWt.add((Number) r.getAttribute("ItmWt"));
                }
            }

            if (totWt != null) {
                return totWt;
            }
        }
        return (Number) getAttributeInternal(TOTPRODWTTRANS);
    }

    /**
     * Gets the attribute value for SL_NO using the alias name SlNo.
     * @return the SL_NO
     */
    public Integer getSlNo() {
        return (Integer) getAttributeInternal(SLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SL_NO using the alias name SlNo.
     * @param value value to set the SL_NO
     */
    public void setSlNo(Integer value) {
        setAttributeInternal(SLNO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DeptDateForValTrans.
     * @return the DeptDateForValTrans
     */
    public Timestamp getDeptDateForValTrans() {
        if (this.getSlNo() == 1) {
            return new Timestamp(System.currentTimeMillis());
        } else {
            Row[] filteredRows = this.getAm().getSlsTrnpLoRouteDtlVO1().getFilteredRows("SlNo", (this.getSlNo() - 1));
            if (filteredRows.length > 0 && filteredRows[0].getAttribute("ArrivalDate") != null) {
                return (Timestamp) filteredRows[0].getAttribute("ArrivalDate");
            } else {
                return new Timestamp(System.currentTimeMillis());
            }
        }
        // return (Timestamp) getAttributeInternal(DEPTDATEFORVALTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtSpTrans.
     * @return the TotAmtSpTrans
     */
    public Number getTotAmtSpTrans() {
        if (this.getDocId() != null && this.getArrivalPnt() != null && this.getDeparturePnt() != null) {
            Number totSp = new Number(0);
            ViewObjectImpl dtlVO2 = this.getAm().getSlsTrnpLoProdDtlVO2();
            dtlVO2.setRangeSize(-1);
            dtlVO2.executeQuery();
            RowQualifier rQ = new RowQualifier(dtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "' and ArrivalPnt ='" + this.getArrivalPnt() + "' and DeparturePnt ='" +
                              this.getDeparturePnt() + "'");
            Row[] filteredRows = dtlVO2.getFilteredRows(rQ);
            for (Row r : filteredRows) {
                if (r.getAttribute("ItmAmtSp") != null) {
                    totSp = totSp.add((Number) r.getAttribute("ItmAmtSp"));
                }
            }

            if (totSp != null) {
                return totSp;
            }
        }
        return (Number) getAttributeInternal(TOTAMTSPTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtBsTrans.
     * @return the TotAmtBsTrans
     */
    public Number getTotAmtBsTrans() {
        if (this.getDocId() != null && this.getArrivalPnt() != null && this.getDeparturePnt() != null) {
            Number totBs = new Number(0);
            ViewObjectImpl dtlVO2 = this.getAm().getSlsTrnpLoProdDtlVO2();
            dtlVO2.setRangeSize(-1);
            dtlVO2.executeQuery();
            RowQualifier rQ = new RowQualifier(dtlVO2);
            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "' and ArrivalPnt ='" + this.getArrivalPnt() + "' and DeparturePnt ='" +
                              this.getDeparturePnt() + "'");
            Row[] filteredRows = dtlVO2.getFilteredRows(rQ);
            for (Row r : filteredRows) {
                if (r.getAttribute("ItmAmtBs") != null) {
                    totBs = totBs.add((Number) r.getAttribute("ItmAmtBs"));
                }
            }

            if (totBs != null) {
                return totBs;
            }
        }
        return (Number) getAttributeInternal(TOTAMTBSTRANS);
    }


    /**
     * Gets the attribute value for the calculated attribute CustomerRateTrans.
     * @return the CustomerRateTrans
     */
    public Number getCustomerRateTrans() {
        return (Number) getAttributeInternal(CUSTOMERRATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerRateTrans.
     * @param value value to set the  CustomerRateTrans
     */
    public void setCustomerRateTrans(Number value) {
        setAttributeInternal(CUSTOMERRATETRANS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLoRouteEo.
     */
    public RowIterator getSlsTrnpLoRouteEo() {
        return (RowIterator) getAttributeInternal(SLSTRNPLOROUTEEO);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLoOc.
     */
    public RowIterator getSlsTrnpLoOc() {
        return (RowIterator) getAttributeInternal(SLSTRNPLOOC);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SlsTrnpLo.
     */
    public Row getSlsTrnpLo() {
        return (Row) getAttributeInternal(SLSTRNPLO);
    }

    /**
     * Sets the master-detail link SlsTrnpLo between this object and <code>value</code>.
     */
    public void setSlsTrnpLo(Row value) {
        setAttributeInternal(SLSTRNPLO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustNameVO1.
     */
    public RowSet getLOVCustNameVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVShipmentIdVO1.
     */
    public RowSet getLOVShipmentIdVO1() {
        return (RowSet) getAttributeInternal(LOVSHIPMENTIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUomVO1.
     */
    public RowSet getLOVUomVO1() {
        return (RowSet) getAttributeInternal(LOVUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLocNmVO1.
     */
    public RowSet getLOVLocNmVO1() {
        return (RowSet) getAttributeInternal(LOVLOCNMVO1);
    }

    /**
     * Method will return Application Module App
     */
    public TrnpLoadingOrderAMImpl getAm() {
        TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) getApplicationModule();
        return am;
    }
}

