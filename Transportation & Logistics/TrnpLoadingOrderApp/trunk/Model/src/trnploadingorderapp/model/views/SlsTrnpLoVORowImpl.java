package trnploadingorderapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.math.BigInteger;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.NClobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnploadingorderapp.model.entities.SlsTrnpLoEOImpl;
import trnploadingorderapp.model.services.TrnpLoadingOrderAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 02 16:47:19 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLoVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPLOEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        CurrConvFctr,
        CurrIdSp,
        DocId,
        DriverEoId,
        FuelQty,
        FuelUom,
        HoOrgId,
        LoDt,
        LoId,
        LrId,
        MultipleCustFlg,
        OrgId,
        RateBasis,
        RateFctr,
        ReqTyp,
        RouteId,
        SlocId,
        TrailorNo,
        TrailorType,
        TrnspId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        VehicleNo,
        VehicleTyp,
        CurrNameTrans,
        CustNameTrans,
        CustIdTrans,
        FuelUomNmTrans,
        LrDispIdTrans,
        RouteNmTrans,
        DriverNmTrans,
        TrnspNmTrans,
        LoStatus,
        LoBasis,
        LoSrcBasis,
        EoTypeTrans,
        TransTaxRuleAll,
        TotAmtSpTrans,
        TotAmtBsTrans,
        OtherChgsAmtSpTrans,
        OtherChgsAmtBsTrans,
        OverAllTotSpTrans,
        OverAllTotBsTrans,
        VhclItmId,
        DriverNm,
        AdvCoaNmTrans,
        AdvCoaIdTrans,
        PayModeTrans,
        TransUseLr,
        TotWt,
        TransAllItmWt,
        TransVhclWt,
        TransAppItmWt,
        SlsTrnpLoRouteDtl,
        SlsTrnpLoEoAdv,
        SlsTrnpLoTr,
        LOVReqTypeVO1,
        LOVMultiCustVO1,
        LOVRateBasisVO1,
        LOVRateFctrVO1,
        LOVUserNameVO1,
        LOVCurrIdVO1,
        LOVCustNameVO1,
        LOVUomVO1,
        LOVLrIdVO1,
        LOVRouteNmVO1,
        LOVDriverNmVO1,
        LOVTransporterNmVO1,
        LOVStatusVO1,
        LOVLoBasisVO1,
        LOVSrcBasisVO1,
        LovTaxRuleIdVO1,
        LOVVehicleNoVO1,
        LOVVehicleTypeVO1,
        LOVBankCashCoaNmVO1,
        LOVPayModeVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DRIVEREOID = AttributesEnum.DriverEoId.index();
    public static final int FUELQTY = AttributesEnum.FuelQty.index();
    public static final int FUELUOM = AttributesEnum.FuelUom.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LODT = AttributesEnum.LoDt.index();
    public static final int LOID = AttributesEnum.LoId.index();
    public static final int LRID = AttributesEnum.LrId.index();
    public static final int MULTIPLECUSTFLG = AttributesEnum.MultipleCustFlg.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RATEBASIS = AttributesEnum.RateBasis.index();
    public static final int RATEFCTR = AttributesEnum.RateFctr.index();
    public static final int REQTYP = AttributesEnum.ReqTyp.index();
    public static final int ROUTEID = AttributesEnum.RouteId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRAILORNO = AttributesEnum.TrailorNo.index();
    public static final int TRAILORTYPE = AttributesEnum.TrailorType.index();
    public static final int TRNSPID = AttributesEnum.TrnspId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VEHICLENO = AttributesEnum.VehicleNo.index();
    public static final int VEHICLETYP = AttributesEnum.VehicleTyp.index();
    public static final int CURRNAMETRANS = AttributesEnum.CurrNameTrans.index();
    public static final int CUSTNAMETRANS = AttributesEnum.CustNameTrans.index();
    public static final int CUSTIDTRANS = AttributesEnum.CustIdTrans.index();
    public static final int FUELUOMNMTRANS = AttributesEnum.FuelUomNmTrans.index();
    public static final int LRDISPIDTRANS = AttributesEnum.LrDispIdTrans.index();
    public static final int ROUTENMTRANS = AttributesEnum.RouteNmTrans.index();
    public static final int DRIVERNMTRANS = AttributesEnum.DriverNmTrans.index();
    public static final int TRNSPNMTRANS = AttributesEnum.TrnspNmTrans.index();
    public static final int LOSTATUS = AttributesEnum.LoStatus.index();
    public static final int LOBASIS = AttributesEnum.LoBasis.index();
    public static final int LOSRCBASIS = AttributesEnum.LoSrcBasis.index();
    public static final int EOTYPETRANS = AttributesEnum.EoTypeTrans.index();
    public static final int TRANSTAXRULEALL = AttributesEnum.TransTaxRuleAll.index();
    public static final int TOTAMTSPTRANS = AttributesEnum.TotAmtSpTrans.index();
    public static final int TOTAMTBSTRANS = AttributesEnum.TotAmtBsTrans.index();
    public static final int OTHERCHGSAMTSPTRANS = AttributesEnum.OtherChgsAmtSpTrans.index();
    public static final int OTHERCHGSAMTBSTRANS = AttributesEnum.OtherChgsAmtBsTrans.index();
    public static final int OVERALLTOTSPTRANS = AttributesEnum.OverAllTotSpTrans.index();
    public static final int OVERALLTOTBSTRANS = AttributesEnum.OverAllTotBsTrans.index();
    public static final int VHCLITMID = AttributesEnum.VhclItmId.index();
    public static final int DRIVERNM = AttributesEnum.DriverNm.index();
    public static final int ADVCOANMTRANS = AttributesEnum.AdvCoaNmTrans.index();
    public static final int ADVCOAIDTRANS = AttributesEnum.AdvCoaIdTrans.index();
    public static final int PAYMODETRANS = AttributesEnum.PayModeTrans.index();
    public static final int TRANSUSELR = AttributesEnum.TransUseLr.index();
    public static final int TOTWT = AttributesEnum.TotWt.index();
    public static final int TRANSALLITMWT = AttributesEnum.TransAllItmWt.index();
    public static final int TRANSVHCLWT = AttributesEnum.TransVhclWt.index();
    public static final int TRANSAPPITMWT = AttributesEnum.TransAppItmWt.index();
    public static final int SLSTRNPLOROUTEDTL = AttributesEnum.SlsTrnpLoRouteDtl.index();
    public static final int SLSTRNPLOEOADV = AttributesEnum.SlsTrnpLoEoAdv.index();
    public static final int SLSTRNPLOTR = AttributesEnum.SlsTrnpLoTr.index();
    public static final int LOVREQTYPEVO1 = AttributesEnum.LOVReqTypeVO1.index();
    public static final int LOVMULTICUSTVO1 = AttributesEnum.LOVMultiCustVO1.index();
    public static final int LOVRATEBASISVO1 = AttributesEnum.LOVRateBasisVO1.index();
    public static final int LOVRATEFCTRVO1 = AttributesEnum.LOVRateFctrVO1.index();
    public static final int LOVUSERNAMEVO1 = AttributesEnum.LOVUserNameVO1.index();
    public static final int LOVCURRIDVO1 = AttributesEnum.LOVCurrIdVO1.index();
    public static final int LOVCUSTNAMEVO1 = AttributesEnum.LOVCustNameVO1.index();
    public static final int LOVUOMVO1 = AttributesEnum.LOVUomVO1.index();
    public static final int LOVLRIDVO1 = AttributesEnum.LOVLrIdVO1.index();
    public static final int LOVROUTENMVO1 = AttributesEnum.LOVRouteNmVO1.index();
    public static final int LOVDRIVERNMVO1 = AttributesEnum.LOVDriverNmVO1.index();
    public static final int LOVTRANSPORTERNMVO1 = AttributesEnum.LOVTransporterNmVO1.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LOVStatusVO1.index();
    public static final int LOVLOBASISVO1 = AttributesEnum.LOVLoBasisVO1.index();
    public static final int LOVSRCBASISVO1 = AttributesEnum.LOVSrcBasisVO1.index();
    public static final int LOVTAXRULEIDVO1 = AttributesEnum.LovTaxRuleIdVO1.index();
    public static final int LOVVEHICLENOVO1 = AttributesEnum.LOVVehicleNoVO1.index();
    public static final int LOVVEHICLETYPEVO1 = AttributesEnum.LOVVehicleTypeVO1.index();
    public static final int LOVBANKCASHCOANMVO1 = AttributesEnum.LOVBankCashCoaNmVO1.index();
    public static final int LOVPAYMODEVO1 = AttributesEnum.LOVPayModeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLoVORowImpl() {
    }

    /**
     * Gets SlsTrnpLoEO entity object.
     * @return the SlsTrnpLoEO
     */
    public SlsTrnpLoEOImpl getSlsTrnpLoEO() {
        return (SlsTrnpLoEOImpl) getEntity(ENTITY_SLSTRNPLOEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {

        setAttributeInternal(CURRIDSP, value);
        /// following will set conversion rate based on CurrIdSp
        if (value != null) {
            setCurrConvFctr(getAm().getCurrRateForCurrId(value));
        }
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DRIVER_EO_ID using the alias name DriverEoId.
     * @return the DRIVER_EO_ID
     */
    public Integer getDriverEoId() {
        return (Integer) getAttributeInternal(DRIVEREOID);
    }

    /**
     * Sets <code>value</code> as attribute value for DRIVER_EO_ID using the alias name DriverEoId.
     * @param value value to set the DRIVER_EO_ID
     */
    public void setDriverEoId(Integer value) {
        setAttributeInternal(DRIVEREOID, value);
    }

    /**
     * Gets the attribute value for FUEL_QTY using the alias name FuelQty.
     * @return the FUEL_QTY
     */
    public Number getFuelQty() {
        return (Number) getAttributeInternal(FUELQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_QTY using the alias name FuelQty.
     * @param value value to set the FUEL_QTY
     */
    public void setFuelQty(Number value) {
        setAttributeInternal(FUELQTY, value);
    }

    /**
     * Gets the attribute value for FUEL_UOM using the alias name FuelUom.
     * @return the FUEL_UOM
     */
    public String getFuelUom() {
        return (String) getAttributeInternal(FUELUOM);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_UOM using the alias name FuelUom.
     * @param value value to set the FUEL_UOM
     */
    public void setFuelUom(String value) {
        setAttributeInternal(FUELUOM, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for LO_DT using the alias name LoDt.
     * @return the LO_DT
     */
    public Timestamp getLoDt() {
        return (Timestamp) getAttributeInternal(LODT);
    }

    /**
     * Sets <code>value</code> as attribute value for LO_DT using the alias name LoDt.
     * @param value value to set the LO_DT
     */
    public void setLoDt(Timestamp value) {
        setAttributeInternal(LODT, value);
    }

    /**
     * Gets the attribute value for LO_ID using the alias name LoId.
     * @return the LO_ID
     */
    public String getLoId() {
        return (String) getAttributeInternal(LOID);
    }

    /**
     * Sets <code>value</code> as attribute value for LO_ID using the alias name LoId.
     * @param value value to set the LO_ID
     */
    public void setLoId(String value) {
        setAttributeInternal(LOID, value);
    }

    /**
     * Gets the attribute value for LR_ID using the alias name LrId.
     * @return the LR_ID
     */
    public String getLrId() {
        return (String) getAttributeInternal(LRID);
    }

    /**
     * Sets <code>value</code> as attribute value for LR_ID using the alias name LrId.
     * @param value value to set the LR_ID
     */
    public void setLrId(String value) {
        setAttributeInternal(LRID, value);
    }

    /**
     * Gets the attribute value for MULTIPLE_CUST_FLG using the alias name MultipleCustFlg.
     * @return the MULTIPLE_CUST_FLG
     */
    public String getMultipleCustFlg() {
        return (String) getAttributeInternal(MULTIPLECUSTFLG);
    }

    /**
     * Sets <code>value</code> as attribute value for MULTIPLE_CUST_FLG using the alias name MultipleCustFlg.
     * @param value value to set the MULTIPLE_CUST_FLG
     */
    public void setMultipleCustFlg(String value) {
        setAttributeInternal(MULTIPLECUSTFLG, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RATE_BASIS using the alias name RateBasis.
     * @return the RATE_BASIS
     */
    public String getRateBasis() {
        return (String) getAttributeInternal(RATEBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE_BASIS using the alias name RateBasis.
     * @param value value to set the RATE_BASIS
     */
    public void setRateBasis(String value) {
        setAttributeInternal(RATEBASIS, value);
    }

    /**
     * Gets the attribute value for RATE_FCTR using the alias name RateFctr.
     * @return the RATE_FCTR
     */
    public String getRateFctr() {
        return (String) getAttributeInternal(RATEFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE_FCTR using the alias name RateFctr.
     * @param value value to set the RATE_FCTR
     */
    public void setRateFctr(String value) {
        setAttributeInternal(RATEFCTR, value);
    }

    /**
     * Gets the attribute value for REQ_TYP using the alias name ReqTyp.
     * @return the REQ_TYP
     */
    public String getReqTyp() {
        return (String) getAttributeInternal(REQTYP);
    }

    /**
     * Sets <code>value</code> as attribute value for REQ_TYP using the alias name ReqTyp.
     * @param value value to set the REQ_TYP
     */
    public void setReqTyp(String value) {
        setAttributeInternal(REQTYP, value);
    }

    /**
     * Gets the attribute value for ROUTE_ID using the alias name RouteId.
     * @return the ROUTE_ID
     */
    public String getRouteId() {
        return (String) getAttributeInternal(ROUTEID);
    }

    /**
     * Sets <code>value</code> as attribute value for ROUTE_ID using the alias name RouteId.
     * @param value value to set the ROUTE_ID
     */
    public void setRouteId(String value) {
        setAttributeInternal(ROUTEID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TRAILOR_NO using the alias name TrailorNo.
     * @return the TRAILOR_NO
     */
    public String getTrailorNo() {
        return (String) getAttributeInternal(TRAILORNO);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAILOR_NO using the alias name TrailorNo.
     * @param value value to set the TRAILOR_NO
     */
    public void setTrailorNo(String value) {
        setAttributeInternal(TRAILORNO, value);
    }

    /**
     * Gets the attribute value for TRAILOR_TYPE using the alias name TrailorType.
     * @return the TRAILOR_TYPE
     */
    public String getTrailorType() {
        return (String) getAttributeInternal(TRAILORTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TRAILOR_TYPE using the alias name TrailorType.
     * @param value value to set the TRAILOR_TYPE
     */
    public void setTrailorType(String value) {
        setAttributeInternal(TRAILORTYPE, value);
    }

    /**
     * Gets the attribute value for TRNSP_ID using the alias name TrnspId.
     * @return the TRNSP_ID
     */
    public Integer getTrnspId() {
        return (Integer) getAttributeInternal(TRNSPID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNSP_ID using the alias name TrnspId.
     * @param value value to set the TRNSP_ID
     */
    public void setTrnspId(Integer value) {
        setAttributeInternal(TRNSPID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VEHICLE_NO using the alias name VehicleNo.
     * @return the VEHICLE_NO
     */
    public String getVehicleNo() {
        return (String) getAttributeInternal(VEHICLENO);
    }

    /**
     * Sets <code>value</code> as attribute value for VEHICLE_NO using the alias name VehicleNo.
     * @param value value to set the VEHICLE_NO
     */
    public void setVehicleNo(String value) {
        setAttributeInternal(VEHICLENO, value);
    }

    /**
     * Gets the attribute value for VEHICLE_TYP using the alias name VehicleTyp.
     * @return the VEHICLE_TYP
     */
    public Integer getVehicleTyp() {
        return (Integer) getAttributeInternal(VEHICLETYP);
    }

    /**
     * Sets <code>value</code> as attribute value for VEHICLE_TYP using the alias name VehicleTyp.
     * @param value value to set the VEHICLE_TYP
     */
    public void setVehicleTyp(Integer value) {
        setAttributeInternal(VEHICLETYP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNameTrans.
     * @return the CurrNameTrans
     */
    public String getCurrNameTrans() {
        if (this.getCurrIdSp() != null) {
            ViewObjectImpl currVO1 = getAm().getLOVCurrIdVO1();
            currVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            currVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            currVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            currVO1.setNamedWhereClauseParam("BindCurrId", this.getCurrIdSp());
            currVO1.executeQuery();
            Row[] allRowsInRange = currVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("CurrDescTxn");
            }
        }
        return (String) getAttributeInternal(CURRNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNameTrans.
     * @param value value to set the  CurrNameTrans
     */
    public void setCurrNameTrans(String value) {
        setAttributeInternal(CURRNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNameTrans.
     * @return the CustNameTrans
     */
    public String getCustNameTrans() {
        if (getAttributeInternal(CUSTNAMETRANS) == null && this.getMultipleCustFlg() != null &&
            this.getMultipleCustFlg().equalsIgnoreCase("N")) {
            Row[] allRowsInRange = this.getAm().getSlsTrnpLoRouteEoVO1().getAllRowsInRange();
            if (allRowsInRange.length > 0 && allRowsInRange[0].getAttribute("EoId") != null) {
                return this.getAm().getEoNmBasedOnId((Integer) allRowsInRange[0].getAttribute("EoId"));
            }
        }
        return (String) getAttributeInternal(CUSTNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNameTrans.
     * @param value value to set the  CustNameTrans
     */
    public void setCustNameTrans(String value) {
        setAttributeInternal(CUSTNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustIdTrans.
     * @return the CustIdTrans
     */
    public Integer getCustIdTrans() {
        return (Integer) getAttributeInternal(CUSTIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustIdTrans.
     * @param value value to set the  CustIdTrans
     */
    public void setCustIdTrans(Integer value) {
        setAttributeInternal(CUSTIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FuelUomNmTrans.
     * @return the FuelUomNmTrans
     */
    public String getFuelUomNmTrans() {
        if (this.getFuelUom() != null) {
            RowSet lOVUomVO1 = this.getLOVUomVO1();
            lOVUomVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            lOVUomVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            lOVUomVO1.setNamedWhereClauseParam("BindUomId", this.getFuelUom());

            lOVUomVO1.executeQuery();

            Row[] allRowsInRange = lOVUomVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("UomDesc");
            }
        }
        return (String) getAttributeInternal(FUELUOMNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FuelUomNmTrans.
     * @param value value to set the  FuelUomNmTrans
     */
    public void setFuelUomNmTrans(String value) {
        setAttributeInternal(FUELUOMNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LrDispIdTrans.
     * @return the LrDispIdTrans
     */
    public String getLrDispIdTrans() {
        if (this.getLrId() != null) {
            ViewObjectImpl idVO1 = this.getAm().getLOVLrIdVO1();
            idVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            idVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            idVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            idVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            idVO1.setNamedWhereClauseParam("BindDocId", this.getLrId());
            idVO1.executeQuery();

            Row[] allRowsInRange = idVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("LrId");
            }
        }
        return (String) getAttributeInternal(LRDISPIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LrDispIdTrans.
     * @param value value to set the  LrDispIdTrans
     */
    public void setLrDispIdTrans(String value) {
        setAttributeInternal(LRDISPIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RouteNmTrans.
     * @return the RouteNmTrans
     */
    public String getRouteNmTrans() {
        if (this.getRouteId() != null) {
            ViewObjectImpl impl = this.getAm().getLOVRouteNmVO1();
            impl.setNamedWhereClauseParam("BindCldId", this.getCldId());
            impl.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            impl.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            impl.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            impl.setNamedWhereClauseParam("BindDocId", this.getRouteId());

            impl.executeQuery();

            Row[] allRowsInRange = impl.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("RouteNm");
            }
        }
        return (String) getAttributeInternal(ROUTENMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RouteNmTrans.
     * @param value value to set the  RouteNmTrans
     */
    public void setRouteNmTrans(String value) {
        setAttributeInternal(ROUTENMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DriverNmTrans.
     * @return the DriverNmTrans
     */
    public String getDriverNmTrans() {
        if (this.getDriverEoId() != null) {
            return this.getAm().getEoNmBasedOnId(this.getDriverEoId());
        }
        return (String) getAttributeInternal(DRIVERNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DriverNmTrans.
     * @param value value to set the  DriverNmTrans
     */
    public void setDriverNmTrans(String value) {
        setAttributeInternal(DRIVERNMTRANS, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TrnspNmTrans.
     * @return the TrnspNmTrans
     */
    public String getTrnspNmTrans() {
        if (this.getTrnspId() != null) {
            return this.getAm().getEoNmBasedOnId(this.getTrnspId());
        }
        return (String) getAttributeInternal(TRNSPNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TrnspNmTrans.
     * @param value value to set the  TrnspNmTrans
     */
    public void setTrnspNmTrans(String value) {
        setAttributeInternal(TRNSPNMTRANS, value);
    }

    /**
     * Gets the attribute value for LO_STATUS using the alias name LoStatus.
     * @return the LO_STATUS
     */
    public Integer getLoStatus() {
        return (Integer) getAttributeInternal(LOSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for LO_STATUS using the alias name LoStatus.
     * @param value value to set the LO_STATUS
     */
    public void setLoStatus(Integer value) {
        setAttributeInternal(LOSTATUS, value);
    }

    /**
     * Gets the attribute value for LO_BASIS using the alias name LoBasis.
     * @return the LO_BASIS
     */
    public Integer getLoBasis() {
        return (Integer) getAttributeInternal(LOBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for LO_BASIS using the alias name LoBasis.
     * @param value value to set the LO_BASIS
     */
    public void setLoBasis(Integer value) {
        setAttributeInternal(LOBASIS, value);
    }

    /**
     * Gets the attribute value for LO_SRC_BASIS using the alias name LoSrcBasis.
     * @return the LO_SRC_BASIS
     */
    public Integer getLoSrcBasis() {
        return (Integer) getAttributeInternal(LOSRCBASIS);
    }

    /**
     * Sets <code>value</code> as attribute value for LO_SRC_BASIS using the alias name LoSrcBasis.
     * @param value value to set the LO_SRC_BASIS
     */
    public void setLoSrcBasis(Integer value) {
        if (value != null) {
            if (value.toString().equalsIgnoreCase("39"))
                System.out.println("Inside lrBasisSetter 39 condition :: " + value);
            this.setMultipleCustFlg("N");
            this.setCustIdTrans(0);
            System.out.println("Multiple Customer Flag :: " + this.getMultipleCustFlg());
            System.out.println("TransCustomerId value :: " + this.getCustIdTrans());
        }
        setAttributeInternal(LOSRCBASIS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EoTypeTrans.
     * @return the EoTypeTrans
     */
    public Integer getEoTypeTrans() {
        if (getAttributeInternal(EOTYPETRANS) == null) {
            Row currentRow = this.getAm().getSlsTrnpLoVO1().getCurrentRow();
            if (currentRow != null && currentRow.getAttribute("LoSrcBasis") != null) {
                Integer loSrcBasis = (Integer) currentRow.getAttribute("LoSrcBasis");
                if (loSrcBasis == 4) { /// For Customer
                    return 68;
                } else if (loSrcBasis == 5) { /// For Supplier
                    return 69;
                }
            }
        }
        return (Integer) getAttributeInternal(EOTYPETRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRuleAll.
     * @return the TransTaxRuleAll
     */
    public Integer getTransTaxRuleAll() {
        if (getAttributeInternal(TRANSTAXRULEALL) == null) {
            return this.getAm().fetchDfltTaxRuleId();
        }
        return (Integer) getAttributeInternal(TRANSTAXRULEALL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuleAll.
     * @param value value to set the  TransTaxRuleAll
     */
    public void setTransTaxRuleAll(Integer value) {
        setAttributeInternal(TRANSTAXRULEALL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtSpTrans.
     * @return the TotAmtSpTrans
     */
    public Number getTotAmtSpTrans() {
        Number totAmtSp = new Number(0);
        Row[] allRowsInRange = this.getSlsTrnpLoRouteDtl().getAllRowsInRange();
        for (Row r : allRowsInRange) {
            if (r.getAttribute("AmtSp") != null) {
                totAmtSp = totAmtSp.add((Number) r.getAttribute("AmtSp"));
            }
        }

        if (totAmtSp != null) {
            return totAmtSp;
        }

        return (Number) getAttributeInternal(TOTAMTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotAmtSpTrans.
     * @param value value to set the  TotAmtSpTrans
     */
    public void setTotAmtSpTrans(Number value) {
        setAttributeInternal(TOTAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtBsTrans.
     * @return the TotAmtBsTrans
     */
    public Number getTotAmtBsTrans() {
        Number totAmtBs = new Number(0);
        Row[] allRowsInRange = this.getSlsTrnpLoRouteDtl().getAllRowsInRange();
        for (Row r : allRowsInRange) {
            if (r.getAttribute("AmtBs") != null) {
                totAmtBs = totAmtBs.add((Number) r.getAttribute("AmtBs"));
            }
        }

        if (totAmtBs != null) {
            return totAmtBs;
        }

        return (Number) getAttributeInternal(TOTAMTBSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotAmtBsTrans.
     * @param value value to set the  TotAmtBsTrans
     */
    public void setTotAmtBsTrans(Number value) {
        setAttributeInternal(TOTAMTBSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OtherChgsAmtSpTrans.
     * @return the OtherChgsAmtSpTrans
     */
    public Number getOtherChgsAmtSpTrans() {
        if (this.getDocId() != null) {
            ViewObjectImpl impl = this.getAm().getSlsTrnpLoOcVO2();
            impl.setRangeSize(-1);
            impl.executeQuery();
            RowQualifier rQ = new RowQualifier(impl);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");

            Row[] filteredRows = impl.getFilteredRows(rQ);
            Number otherChgsAmtSp = new Number(0);
            for (Row r : filteredRows) {
                if (r.getAttribute("AmtSp") != null) {
                    otherChgsAmtSp = otherChgsAmtSp.add((Number) r.getAttribute("AmtSp"));
                }
            }
            if (otherChgsAmtSp != null) {
                return otherChgsAmtSp;
            }
        }
        return (Number) getAttributeInternal(OTHERCHGSAMTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OtherChgsAmtSpTrans.
     * @param value value to set the  OtherChgsAmtSpTrans
     */
    public void setOtherChgsAmtSpTrans(Number value) {
        setAttributeInternal(OTHERCHGSAMTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OtherChgsAmtBsTrans.
     * @return the OtherChgsAmtBsTrans
     */
    public Number getOtherChgsAmtBsTrans() {
        if (this.getDocId() != null) {
            ViewObjectImpl impl = this.getAm().getSlsTrnpLoOcVO2();
            impl.setRangeSize(-1);
            impl.executeQuery();
            RowQualifier rQ = new RowQualifier(impl);

            rQ.setWhereClause("CldId ='" + this.getCldId() + "' and SlocId =" + this.getSlocId() + " and HoOrgId ='" +
                              this.getHoOrgId() + "' and OrgId ='" + this.getOrgId() + "' and DocId ='" +
                              this.getDocId() + "'");

            Row[] filteredRows = impl.getFilteredRows(rQ);
            Number otherChgsAmtBs = new Number(0);
            for (Row r : filteredRows) {
                if (r.getAttribute("AmtBs") != null) {
                    otherChgsAmtBs = otherChgsAmtBs.add((Number) r.getAttribute("AmtBs"));
                }
            }
            if (otherChgsAmtBs != null) {
                return otherChgsAmtBs;
            }
        }
        return (Number) getAttributeInternal(OTHERCHGSAMTBSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OtherChgsAmtBsTrans.
     * @param value value to set the  OtherChgsAmtBsTrans
     */
    public void setOtherChgsAmtBsTrans(Number value) {
        setAttributeInternal(OTHERCHGSAMTBSTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OverAllTotSpTrans.
     * @return the OverAllTotSpTrans
     */
    public Number getOverAllTotSpTrans() {
        if (this.getTotAmtSpTrans() != null && this.getOtherChgsAmtSpTrans() != null) {
            return this.getTotAmtSpTrans().add(this.getOtherChgsAmtSpTrans());
        }
        return (Number) getAttributeInternal(OVERALLTOTSPTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OverAllTotSpTrans.
     * @param value value to set the  OverAllTotSpTrans
     */
    public void setOverAllTotSpTrans(Number value) {
        setAttributeInternal(OVERALLTOTSPTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OverAllTotBsTrans.
     * @return the OverAllTotBsTrans
     */
    public Number getOverAllTotBsTrans() {
        if (this.getTotAmtBsTrans() != null && this.getOtherChgsAmtBsTrans() != null) {
            return this.getTotAmtBsTrans().add(this.getOtherChgsAmtBsTrans());
        }
        return (Number) getAttributeInternal(OVERALLTOTBSTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OverAllTotBsTrans.
     * @param value value to set the  OverAllTotBsTrans
     */
    public void setOverAllTotBsTrans(Number value) {
        setAttributeInternal(OVERALLTOTBSTRANS, value);
    }

    /**
     * Gets the attribute value for VHCL_ITM_ID using the alias name VhclItmId.
     * @return the VHCL_ITM_ID
     */
    public String getVhclItmId() {
        return (String) getAttributeInternal(VHCLITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for VHCL_ITM_ID using the alias name VhclItmId.
     * @param value value to set the VHCL_ITM_ID
     */
    public void setVhclItmId(String value) {
        setAttributeInternal(VHCLITMID, value);
    }

    /**
     * Gets the attribute value for DRIVER_NM using the alias name DriverNm.
     * @return the DRIVER_NM
     */
    public String getDriverNm() {
        return (String) getAttributeInternal(DRIVERNM);
    }

    /**
     * Sets <code>value</code> as attribute value for DRIVER_NM using the alias name DriverNm.
     * @param value value to set the DRIVER_NM
     */
    public void setDriverNm(String value) {
        setAttributeInternal(DRIVERNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AdvCoaNmTrans.
     * @return the AdvCoaNmTrans
     */
    public String getAdvCoaNmTrans() {
        if (this.getAdvCoaIdTrans() != null) {
            ViewObjectImpl bankCashCoaNmVO1 = this.getAm().getLOVBankCashCoaNmVO1();
            bankCashCoaNmVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            bankCashCoaNmVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            bankCashCoaNmVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            bankCashCoaNmVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());

            bankCashCoaNmVO1.setNamedWhereClauseParam("BindCoaId", this.getAdvCoaIdTrans());

            bankCashCoaNmVO1.executeQuery();

            Row[] allRowsInRange = bankCashCoaNmVO1.getAllRowsInRange();
            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("CoaNm");
            }
        }
        return (String) getAttributeInternal(ADVCOANMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdvCoaNmTrans.
     * @param value value to set the  AdvCoaNmTrans
     */
    public void setAdvCoaNmTrans(String value) {
        setAttributeInternal(ADVCOANMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AdvCoaIdTrans.
     * @return the AdvCoaIdTrans
     */
    public Integer getAdvCoaIdTrans() {
        if (getAttributeInternal(ADVCOAIDTRANS) == null) {
            Row[] allRowsInRange = this.getSlsTrnpLoEoAdv().getAllRowsInRange();
            if (allRowsInRange.length > 0 && allRowsInRange[0].getAttribute("BankCashCoaId") != null) {
                return (Integer) allRowsInRange[0].getAttribute("BankCashCoaId");
            }
        }
        return (Integer) getAttributeInternal(ADVCOAIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AdvCoaIdTrans.
     * @param value value to set the  AdvCoaIdTrans
     */
    public void setAdvCoaIdTrans(Integer value) {
        setAttributeInternal(ADVCOAIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PayModeTrans.
     * @return the PayModeTrans
     */
    public Integer getPayModeTrans() {
        if (getAttributeInternal(PAYMODETRANS) == null) {
            Row[] allRowsInRange = this.getSlsTrnpLoEoAdv().getAllRowsInRange();
            if (allRowsInRange.length > 0 && allRowsInRange[0].getAttribute("PayMode") != null) {
                return (Integer) allRowsInRange[0].getAttribute("PayMode");
            }
        }
        return (Integer) getAttributeInternal(PAYMODETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PayModeTrans.
     * @param value value to set the  PayModeTrans
     */
    public void setPayModeTrans(Integer value) {
        setAttributeInternal(PAYMODETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUsrLr.
     * @return the TransUsrLr
     */
    public String getTransUseLr() {
        if (getAttributeInternal(TRANSUSELR) != null)
            return (String) getAttributeInternal(TRANSUSELR);
        else
            return ((TrnpLoadingOrderAMImpl) this.getApplicationModule()).getValFrmOrgPrf("USE_LR");

    }

    /**
     * Gets the attribute value for TOT_WT using the alias name TotWt.
     * @return the TOT_WT
     */
    public Number getTotWt() {
        return (Number) getAttributeInternal(TOTWT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_WT using the alias name TotWt.
     * @param value value to set the TOT_WT
     */
    public void setTotWt(Number value) {
        setAttributeInternal(TOTWT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAllItmWt.
     * @return the TransAllItmWt
     */
    public Number getTransAllItmWt() {
        
        if(this.getDocId() != null)
        {
            Number itemsWt = new Number(0);
            
            TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) this.getApplicationModule();
          
            ViewObjectImpl loVo = am.getSlsTrnpLoProdDtlVO2();
            
            Row[] filteredRows = loVo.getFilteredRows("DocId", this.getDocId());
            
            if(filteredRows.length > 0)
            {
                for(Row r : filteredRows)
                {   
                    itemsWt = itemsWt.add(((Number) r.getAttribute("ItmWt")).multiply((Number) r.getAttribute("ShipQty")));
                    System.out.println("Item weight :: "+r.getAttribute("ItmWt")+" * "+r.getAttribute("ShipQty"));
                    System.out.println("Item Weight :: "+itemsWt);
                }
                
                
                return itemsWt;
            }
            
        }

        return (Number) getAttributeInternal(TRANSALLITMWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAllItmWt.
     * @param value value to set the  TransAllItmWt
     */
    public void setTransAllItmWt(Number value) {
        setAttributeInternal(TRANSALLITMWT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransVhclWt.
     * @return the TransVhclWt
     */
    public Number getTransVhclWt() {
        
        if(this.getVehicleNo() != null && this.getVehicleTyp() != null)
        {
            System.out.println("Vehicle no in RowImpl ::"+this.getVehicleNo());
            System.out.println("Vehicle Type :: "+this.getVehicleTyp());
            System.out.println("Transporter Id :: "+this.getTrnspId());
            
            TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) this.getApplicationModule();
            ViewObjectImpl vo = am.getLOVVehicleNoVO1();
            vo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            vo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            vo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
            vo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            vo.setNamedWhereClauseParam("BindVhclType",this.getVehicleTyp());
            vo.setNamedWhereClauseParam("BindTrnpId", this.getTrnspId());
            vo.executeQuery();
            
            Row[] filteredRows = vo.getFilteredRows("FaRegNo", this.getVehicleNo());
            
            if(filteredRows.length > 0)
            {
                System.out.println("Weight :: "+filteredRows[0].getAttribute("GrossWt"));
                return (Number) filteredRows[0].getAttribute("GrossWt"); 
            }
            else
              return new Number(0);
        }
        
        return (Number) getAttributeInternal(TRANSVHCLWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransVhclWt.
     * @param value value to set the  TransVhclWt
     */
    public void setTransVhclWt(Number value) {
        setAttributeInternal(TRANSVHCLWT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransAppItmWt.
     * @return the TransAppItmWt
     */
    public Number getTransAppItmWt() {
        
        if(this.getDocId() != null)
        {
            Number allItmWt = new Number(0);
            
            TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) this.getApplicationModule();
            ViewObjectImpl prodDtlVo =  am.getSlsTrnpLoProdDtlVO2();
            Row[] filteredRows = prodDtlVo.getFilteredRows("DocId", this.getDocId());
            
            if(filteredRows.length > 0)
            {
                ViewObjectImpl appItmVO = am.getLovAppItmPrfWtVO1();
                appItmVO.setNamedWhereClauseParam("BindCldId", this.getCldId());
                appItmVO.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
                appItmVO.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                appItmVO.executeQuery();
                
                for(Row prodRows : filteredRows)
                {
                    Row[] appItmFilter = appItmVO.getFilteredRows("ItmId", prodRows.getAttribute("ItmId"));
                    
                    if(appItmFilter.length > 0)
                    {
                        System.out.println("ItmId :: "+prodRows.getAttribute("ItmId"));
                        
                        for(Row r: appItmFilter)
                        {
                            System.out.println("Weight for Item ' "+prodRows.getAttribute("ItmId")+" ' is :: "+r.getAttribute("PkgMtlRatio"));
                            allItmWt = allItmWt.add(((Number) r.getAttribute("PkgMtlRatio")).multiply((Number) prodRows.getAttribute("ItmWt")));
                        }
                        
                        return allItmWt;
                    }
                    else
                    {
                        System.out.println("No rows in APP$ITM$PRF :: "+appItmVO.getAllRowsInRange().length);
                        
                    }
                    
                }
                
            }
            else
                System.out.println("No rows in SLS$TRNP$LO$PROD$DTL :: "+filteredRows.length);
            
        }
        
        return (Number) getAttributeInternal(TRANSAPPITMWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransAppItmWt.
     * @param value value to set the  TransAppItmWt
     */
    public void setTransAppItmWt(Number value) {
        setAttributeInternal(TRANSAPPITMWT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLoRouteDtl.
     */
    public RowIterator getSlsTrnpLoRouteDtl() {
        return (RowIterator) getAttributeInternal(SLSTRNPLOROUTEDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLoEoAdv.
     */
    public RowIterator getSlsTrnpLoEoAdv() {
        return (RowIterator) getAttributeInternal(SLSTRNPLOEOADV);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLoTr.
     */
    public RowIterator getSlsTrnpLoTr() {
        return (RowIterator) getAttributeInternal(SLSTRNPLOTR);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVReqTypeVO1.
     */
    public RowSet getLOVReqTypeVO1() {
        return (RowSet) getAttributeInternal(LOVREQTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVMultiCustVO1.
     */
    public RowSet getLOVMultiCustVO1() {
        return (RowSet) getAttributeInternal(LOVMULTICUSTVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRateBasisVO1.
     */
    public RowSet getLOVRateBasisVO1() {
        return (RowSet) getAttributeInternal(LOVRATEBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRateFctrVO1.
     */
    public RowSet getLOVRateFctrVO1() {
        return (RowSet) getAttributeInternal(LOVRATEFCTRVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserNameVO1.
     */
    public RowSet getLOVUserNameVO1() {
        return (RowSet) getAttributeInternal(LOVUSERNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrIdVO1.
     */
    public RowSet getLOVCurrIdVO1() {
        return (RowSet) getAttributeInternal(LOVCURRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustNameVO1.
     */
    public RowSet getLOVCustNameVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUomVO1.
     */
    public RowSet getLOVUomVO1() {
        return (RowSet) getAttributeInternal(LOVUOMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLrIdVO1.
     */
    public RowSet getLOVLrIdVO1() {
        return (RowSet) getAttributeInternal(LOVLRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVRouteNmVO1.
     */
    public RowSet getLOVRouteNmVO1() {
        return (RowSet) getAttributeInternal(LOVROUTENMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDriverNmVO1.
     */
    public RowSet getLOVDriverNmVO1() {
        return (RowSet) getAttributeInternal(LOVDRIVERNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTransporterNmVO1.
     */
    public RowSet getLOVTransporterNmVO1() {
        return (RowSet) getAttributeInternal(LOVTRANSPORTERNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVStatusVO1.
     */
    public RowSet getLOVStatusVO1() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLoBasisVO1.
     */
    public RowSet getLOVLoBasisVO1() {
        return (RowSet) getAttributeInternal(LOVLOBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVSrcBasisVO1.
     */
    public RowSet getLOVSrcBasisVO1() {
        return (RowSet) getAttributeInternal(LOVSRCBASISVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleIdVO1.
     */
    public RowSet getLovTaxRuleIdVO1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVVehicleNoVO1.
     */
    public RowSet getLOVVehicleNoVO1() {
        return (RowSet) getAttributeInternal(LOVVEHICLENOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVVehicleTypeVO1.
     */
    public RowSet getLOVVehicleTypeVO1() {
        return (RowSet) getAttributeInternal(LOVVEHICLETYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVBankCashCoaNmVO1.
     */
    public RowSet getLOVBankCashCoaNmVO1() {
        return (RowSet) getAttributeInternal(LOVBANKCASHCOANMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVPayModeVO1.
     */
    public RowSet getLOVPayModeVO1() {
        return (RowSet) getAttributeInternal(LOVPAYMODEVO1);
    }

    /**
     * Method will return Application Module App
     */
    public TrnpLoadingOrderAMImpl getAm() {
        TrnpLoadingOrderAMImpl am = (TrnpLoadingOrderAMImpl) getApplicationModule();
        return am;
    }
}
