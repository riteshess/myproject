package trnpreportapp.model.views;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.Date;

import oracle.jbo.JboException;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 23 12:09:53 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TRNPRptTransVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        StnNmTrans,
        DrverNmTrans,
        FromDateTrans,
        ToDateTrans,
        CustomerIdTrans,
        RptTypeTrans,
        CustNmTrans,
        DrverIdTrans,
        StnIdTrans,
        VehicleNoTrans,
        SupInvNoTrans,
        SupInvDocTrans,
        LovStatnVO,
        LovCustVO,
        LovOrgVO,
        RadioFileTypeVO,
        LovDriverVO,
        LovSuppInvVO,
        LovVehicleNOVO;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int STNNMTRANS = AttributesEnum.StnNmTrans.index();
    public static final int DRVERNMTRANS = AttributesEnum.DrverNmTrans.index();
    public static final int FROMDATETRANS = AttributesEnum.FromDateTrans.index();
    public static final int TODATETRANS = AttributesEnum.ToDateTrans.index();
    public static final int CUSTOMERIDTRANS = AttributesEnum.CustomerIdTrans.index();
    public static final int RPTTYPETRANS = AttributesEnum.RptTypeTrans.index();
    public static final int CUSTNMTRANS = AttributesEnum.CustNmTrans.index();
    public static final int DRVERIDTRANS = AttributesEnum.DrverIdTrans.index();
    public static final int STNIDTRANS = AttributesEnum.StnIdTrans.index();
    public static final int VEHICLENOTRANS = AttributesEnum.VehicleNoTrans.index();
    public static final int SUPINVNOTRANS = AttributesEnum.SupInvNoTrans.index();
    public static final int SUPINVDOCTRANS = AttributesEnum.SupInvDocTrans.index();
    public static final int LOVSTATNVO = AttributesEnum.LovStatnVO.index();
    public static final int LOVCUSTVO = AttributesEnum.LovCustVO.index();
    public static final int LOVORGVO = AttributesEnum.LovOrgVO.index();
    public static final int RADIOFILETYPEVO = AttributesEnum.RadioFileTypeVO.index();
    public static final int LOVDRIVERVO = AttributesEnum.LovDriverVO.index();
    public static final int LOVSUPPINVVO = AttributesEnum.LovSuppInvVO.index();
    public static final int LOVVEHICLENOVO = AttributesEnum.LovVehicleNOVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TRNPRptTransVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CldId.
     * @param value value to set the  CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public String getSlocId() {
        return (String) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SlocId.
     * @param value value to set the  SlocId
     */
    public void setSlocId(String value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OrgId.
     * @return the OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OrgId.
     * @param value value to set the  OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HoOrgId.
     * @param value value to set the  HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StnNmTrans.
     * @return the StnNmTrans
     */
    public String getStnNmTrans() {
        return (String) getAttributeInternal(STNNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StnNmTrans.
     * @param value value to set the  StnNmTrans
     */
    public void setStnNmTrans(String value) {
        setAttributeInternal(STNNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DrverNmTrans.
     * @return the DrverNmTrans
     */
    public String getDrverNmTrans() {
        return (String) getAttributeInternal(DRVERNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DrverNmTrans.
     * @param value value to set the  DrverNmTrans
     */
    public void setDrverNmTrans(String value) {
        setAttributeInternal(DRVERNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FromDateTrans.
     * @return the FromDateTrans
     */
    public Timestamp getFromDateTrans() {
        Date dt = new Date();
               
               Timestamp ts= null;
               try {
                   dt = (Date) (callStoredFunction(Types.DATE, "APP.fn_get_fy_start_date(?,?,?,?)", new Object[] {
                                                   getCldId(), getOrgId(), new Timestamp(System.currentTimeMillis()), "FY"
                   }));
                //   System.out.println(" getcldi--getorgid "+getCldId()+getOrgId());
                   ts = new Timestamp(dt.getTime());
               } catch (Exception e) {
                   // TODO: Add catch code
                   e.printStackTrace();
               }
               return ((Timestamp) getAttributeInternal(FROMDATETRANS) == null ? ts : (Timestamp) getAttributeInternal(FROMDATETRANS));

       // return (Timestamp) getAttributeInternal(FROMDATETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FromDateTrans.
     * @param value value to set the  FromDateTrans
     */
    public void setFromDateTrans(Timestamp value) {
        setAttributeInternal(FROMDATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ToDateTrans.
     * @return the ToDateTrans
     */
    public Timestamp getToDateTrans() {
        //  return (Timestamp) getAttributeInternal(TODATETRANS);
               return ((Timestamp) getAttributeInternal(TODATETRANS)==null?new Timestamp(System.currentTimeMillis()):(Timestamp) getAttributeInternal(TODATETRANS));
          
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ToDateTrans.
     * @param value value to set the  ToDateTrans
     */
    public void setToDateTrans(Timestamp value) {
        setAttributeInternal(TODATETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomerIdTrans.
     * @return the CustomerIdTrans
     */
    public Integer getCustomerIdTrans() {
        return (Integer) getAttributeInternal(CUSTOMERIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustomerIdTrans.
     * @param value value to set the  CustomerIdTrans
     */
    public void setCustomerIdTrans(Integer value) {
        setAttributeInternal(CUSTOMERIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RptTypeTrans.
     * @return the RptTypeTrans
     */
    public String getRptTypeTrans() {
      //  return (String) getAttributeInternal(RPTTYPETRANS);
      return ((String) getAttributeInternal(RPTTYPETRANS)==null?"PDF":(String) getAttributeInternal(RPTTYPETRANS));
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RptTypeTrans.
     * @param value value to set the  RptTypeTrans
     */
    public void setRptTypeTrans(String value) {
        setAttributeInternal(RPTTYPETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNmTrans.
     * @return the CustNmTrans
     */
    public String getCustNmTrans() {
        return (String) getAttributeInternal(CUSTNMTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNmTrans.
     * @param value value to set the  CustNmTrans
     */
    public void setCustNmTrans(String value) {
        setAttributeInternal(CUSTNMTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DrverIdTrans.
     * @return the DrverIdTrans
     */
    public Integer getDrverIdTrans() {
        return (Integer) getAttributeInternal(DRVERIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DrverIdTrans.
     * @param value value to set the  DrverIdTrans
     */
    public void setDrverIdTrans(Integer value) {
        setAttributeInternal(DRVERIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StnIdTrans.
     * @return the StnIdTrans
     */
    public Integer getStnIdTrans() {
        return (Integer) getAttributeInternal(STNIDTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StnIdTrans.
     * @param value value to set the  StnIdTrans
     */
    public void setStnIdTrans(Integer value) {
        setAttributeInternal(STNIDTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VehicleNoTrans.
     * @return the VehicleNoTrans
     */
    public String getVehicleNoTrans() {
        return (String) getAttributeInternal(VEHICLENOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VehicleNoTrans.
     * @param value value to set the  VehicleNoTrans
     */
    public void setVehicleNoTrans(String value) {
        setAttributeInternal(VEHICLENOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupInvNoTrans.
     * @return the SupInvNoTrans
     */
    public String getSupInvNoTrans() {
        return (String) getAttributeInternal(SUPINVNOTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupInvNoTrans.
     * @param value value to set the  SupInvNoTrans
     */
    public void setSupInvNoTrans(String value) {
        setAttributeInternal(SUPINVNOTRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SupInvDocTrans.
     * @return the SupInvDocTrans
     */
    public String getSupInvDocTrans() {
        return (String) getAttributeInternal(SUPINVDOCTRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SupInvDocTrans.
     * @param value value to set the  SupInvDocTrans
     */
    public void setSupInvDocTrans(String value) {
        setAttributeInternal(SUPINVDOCTRANS, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovStatnVO.
     */
    public RowSet getLovStatnVO() {
        return (RowSet) getAttributeInternal(LOVSTATNVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCustVO.
     */
    public RowSet getLovCustVO() {
        return (RowSet) getAttributeInternal(LOVCUSTVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovOrgVO.
     */
    public RowSet getLovOrgVO() {
        return (RowSet) getAttributeInternal(LOVORGVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> RadioFileTypeVO.
     */
    public RowSet getRadioFileTypeVO() {
        return (RowSet) getAttributeInternal(RADIOFILETYPEVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDriverVO.
     */
    public RowSet getLovDriverVO() {
        return (RowSet) getAttributeInternal(LOVDRIVERVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovSuppInvVO.
     */
    public RowSet getLovSuppInvVO() {
        return (RowSet) getAttributeInternal(LOVSUPPINVVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovVehicleNOVO.
     */
    public RowSet getLovVehicleNOVO() {
        return (RowSet) getAttributeInternal(LOVVEHICLENOVO);
    }
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
              CallableStatement st = null;
              try {
                  // 1. Create a JDBC CallabledStatement
                  st = getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);
                  // 2. Register the first bind variable for the return value
                  st.registerOutParameter(1, sqlReturnType);
                  if (bindVars != null) {
                      // 3. Loop over values for the bind variables passed in, if any
                      for (int z = 0; z < bindVars.length; z++) {
                          // 4. Set the value of user-supplied bind vars in the stmt
                          st.setObject(z + 2, bindVars[z]);
                      }
                  }
                  // 5. Set the value of user-supplied bind vars in the stmt
                  st.executeUpdate();
                  // 6. Return the value of the first bind variable
                  return st.getObject(1);
              } catch (SQLException e) {
                  throw new JboException(e);
              } finally {
                  if (st != null) {
                      try {
                          // 7. Close the statement
                          st.close();
                      } catch (SQLException e) {
                      }
                  }
              }
       }
}

