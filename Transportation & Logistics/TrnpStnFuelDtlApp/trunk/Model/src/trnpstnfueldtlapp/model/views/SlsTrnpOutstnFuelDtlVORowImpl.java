package trnpstnfueldtlapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewRowImpl;

import trnpstnfueldtlapp.model.entities.SlsTrnpOutstnFuelDtlEOImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 18 19:10:08 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpOutstnFuelDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPOUTSTNFUELDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AmtBs,
        AmtSp,
        CldId,
        CurrConvFctr,
        CurrIdSp,
        DocId,
        DriverEoId,
        EndRead,
        EoId,
        FuelQty,
        FuelRate,
        FuelType,
        HoOrgId,
        InvDt,
        InvNo,
        OrgId,
        SlocId,
        Status,
        StrtRead,
        Uom,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        VehicleNo,
        VhclItmId,
        TransStationNm,
        TransUomDesc,
        TransCurrency,
        TransDriverNm,
        LovStationIdVO1,
        LovUsrIdVO1,
        LovUsrIdVO2,
        LovUomIdVO1,
        LovStatusVO1,
        LovCurrencyVO1,
        LovDriverEoIdVO1,
        LoFuelTypeVO1,
        LovVhclNoVO1,
        LOVDriverNameVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DRIVEREOID = AttributesEnum.DriverEoId.index();
    public static final int ENDREAD = AttributesEnum.EndRead.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int FUELQTY = AttributesEnum.FuelQty.index();
    public static final int FUELRATE = AttributesEnum.FuelRate.index();
    public static final int FUELTYPE = AttributesEnum.FuelType.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int INVDT = AttributesEnum.InvDt.index();
    public static final int INVNO = AttributesEnum.InvNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int STRTREAD = AttributesEnum.StrtRead.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VEHICLENO = AttributesEnum.VehicleNo.index();
    public static final int VHCLITMID = AttributesEnum.VhclItmId.index();
    public static final int TRANSSTATIONNM = AttributesEnum.TransStationNm.index();
    public static final int TRANSUOMDESC = AttributesEnum.TransUomDesc.index();
    public static final int TRANSCURRENCY = AttributesEnum.TransCurrency.index();
    public static final int TRANSDRIVERNM = AttributesEnum.TransDriverNm.index();
    public static final int LOVSTATIONIDVO1 = AttributesEnum.LovStationIdVO1.index();
    public static final int LOVUSRIDVO1 = AttributesEnum.LovUsrIdVO1.index();
    public static final int LOVUSRIDVO2 = AttributesEnum.LovUsrIdVO2.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVSTATUSVO1 = AttributesEnum.LovStatusVO1.index();
    public static final int LOVCURRENCYVO1 = AttributesEnum.LovCurrencyVO1.index();
    public static final int LOVDRIVEREOIDVO1 = AttributesEnum.LovDriverEoIdVO1.index();
    public static final int LOFUELTYPEVO1 = AttributesEnum.LoFuelTypeVO1.index();
    public static final int LOVVHCLNOVO1 = AttributesEnum.LovVhclNoVO1.index();
    public static final int LOVDRIVERNAMEVO1 = AttributesEnum.LOVDriverNameVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpOutstnFuelDtlVORowImpl() {
    }

    /**
     * Gets SlsTrnpOutstnFuelDtlEO entity object.
     * @return the SlsTrnpOutstnFuelDtlEO
     */
    public SlsTrnpOutstnFuelDtlEOImpl getSlsTrnpOutstnFuelDtlEO() {
        return (SlsTrnpOutstnFuelDtlEOImpl) getEntity(ENTITY_SLSTRNPOUTSTNFUELDTLEO);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        if (value == null)
            value = new Number(0);
        Number qty = new Number(0);
        if (this.getFuelQty() != null)
            qty = this.getFuelQty();
        Number rate = new Number(0);
        if (this.getFuelRate() != null)
            rate = this.getFuelRate();
        this.setAmtSp(qty.multiply(rate));
        this.setAmtBs(qty.multiply(rate).multiply(value));
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DRIVER_EO_ID using the alias name DriverEoId.
     * @return the DRIVER_EO_ID
     */
    public Integer getDriverEoId() {
        return (Integer) getAttributeInternal(DRIVEREOID);
    }

    /**
     * Sets <code>value</code> as attribute value for DRIVER_EO_ID using the alias name DriverEoId.
     * @param value value to set the DRIVER_EO_ID
     */
    public void setDriverEoId(Integer value) {
        setAttributeInternal(DRIVEREOID, value);
    }

    /**
     * Gets the attribute value for END_READ using the alias name EndRead.
     * @return the END_READ
     */
    public Integer getEndRead() {
        return (Integer) getAttributeInternal(ENDREAD);
    }

    /**
     * Sets <code>value</code> as attribute value for END_READ using the alias name EndRead.
     * @param value value to set the END_READ
     */
    public void setEndRead(Integer value) {
        setAttributeInternal(ENDREAD, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for FUEL_QTY using the alias name FuelQty.
     * @return the FUEL_QTY
     */
    public Number getFuelQty() {
        return (Number) getAttributeInternal(FUELQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_QTY using the alias name FuelQty.
     * @param value value to set the FUEL_QTY
     */
    public void setFuelQty(Number value) {
        if (value == null)
            value = new Number(0);
        Number rate = new Number(0);
        if (this.getFuelRate() != null)
            rate = this.getFuelRate();
        Number fctr = new Number(0);
        if (this.getCurrConvFctr() != null)
            fctr = this.getCurrConvFctr();
        this.setAmtSp(rate.multiply(value));
        this.setAmtBs(rate.multiply(value).multiply(fctr));
        setAttributeInternal(FUELQTY, value);
    }

    /**
     * Gets the attribute value for FUEL_RATE using the alias name FuelRate.
     * @return the FUEL_RATE
     */
    public Number getFuelRate() {
        return (Number) getAttributeInternal(FUELRATE);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_RATE using the alias name FuelRate.
     * @param value value to set the FUEL_RATE
     */
    public void setFuelRate(Number value) {
        if (value == null)
            value = new Number(0);
        Number qty = new Number(0);
        if (this.getFuelQty() != null)
            qty = this.getFuelQty();
        Number fctr = new Number(0);
        if (this.getCurrConvFctr() != null)
            fctr = this.getCurrConvFctr();
        this.setAmtSp(qty.multiply(value));
        this.setAmtBs(qty.multiply(value).multiply(fctr));
        setAttributeInternal(FUELRATE, value);
    }

    /**
     * Gets the attribute value for FUEL_TYPE using the alias name FuelType.
     * @return the FUEL_TYPE
     */
    public Integer getFuelType() {
        return (Integer) getAttributeInternal(FUELTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_TYPE using the alias name FuelType.
     * @param value value to set the FUEL_TYPE
     */
    public void setFuelType(Integer value) {
        setAttributeInternal(FUELTYPE, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for INV_DT using the alias name InvDt.
     * @return the INV_DT
     */
    public Timestamp getInvDt() {
        return (Timestamp) getAttributeInternal(INVDT);
    }

    /**
     * Sets <code>value</code> as attribute value for INV_DT using the alias name InvDt.
     * @param value value to set the INV_DT
     */
    public void setInvDt(Timestamp value) {
        setAttributeInternal(INVDT, value);
    }

    /**
     * Gets the attribute value for INV_NO using the alias name InvNo.
     * @return the INV_NO
     */
    public String getInvNo() {
        return (String) getAttributeInternal(INVNO);
    }

    /**
     * Sets <code>value</code> as attribute value for INV_NO using the alias name InvNo.
     * @param value value to set the INV_NO
     */
    public void setInvNo(String value) {
        setAttributeInternal(INVNO, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public Integer getStatus() {
        return (Integer) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(Integer value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for STRT_READ using the alias name StrtRead.
     * @return the STRT_READ
     */
    public Integer getStrtRead() {
        return (Integer) getAttributeInternal(STRTREAD);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_READ using the alias name StrtRead.
     * @param value value to set the STRT_READ
     */
    public void setStrtRead(Integer value) {
        setAttributeInternal(STRTREAD, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VEHICLE_NO using the alias name VehicleNo.
     * @return the VEHICLE_NO
     */
    public String getVehicleNo() {
        return (String) getAttributeInternal(VEHICLENO);
    }

    /**
     * Sets <code>value</code> as attribute value for VEHICLE_NO using the alias name VehicleNo.
     * @param value value to set the VEHICLE_NO
     */
    public void setVehicleNo(String value) {
        setAttributeInternal(VEHICLENO, value);
    }

    /**
     * Gets the attribute value for VHCL_ITM_ID using the alias name VhclItmId.
     * @return the VHCL_ITM_ID
     */
    public String getVhclItmId() {
        return (String) getAttributeInternal(VHCLITMID);
    }

    /**
     * Sets <code>value</code> as attribute value for VHCL_ITM_ID using the alias name VhclItmId.
     * @param value value to set the VHCL_ITM_ID
     */
    public void setVhclItmId(String value) {
        setAttributeInternal(VHCLITMID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransStationNm.
     * @return the TransStationNm
     */
    public String getTransStationNm() {
        if (getAttributeInternal(TRANSSTATIONNM) != null)
            return (String) getAttributeInternal(TRANSSTATIONNM);
        else {
            Row[] fr = this.getLovStationIdVO1().getFilteredRows("EoId", this.getEoId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("EoNm");
        }
        return (String) getAttributeInternal(TRANSSTATIONNM);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransStationNm.
     * @param value value to set the  TransStationNm
     */
    public void setTransStationNm(String value) {
        setAttributeInternal(TRANSSTATIONNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomDesc.
     * @return the TransUomDesc
     */
    public String getTransUomDesc() {
        if (getAttributeInternal(TRANSUOMDESC) != null)
            return (String) getAttributeInternal(TRANSUOMDESC);
        else {
            Row[] fr = this.getLovUomIdVO1().getFilteredRows("UomId", this.getUom());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("UomDesc");
        }
        return (String) getAttributeInternal(TRANSUOMDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomDesc.
     * @param value value to set the  TransUomDesc
     */
    public void setTransUomDesc(String value) {
        setAttributeInternal(TRANSUOMDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransCurrency.
     * @return the TransCurrency
     */
    public String getTransCurrency() {
        if (getAttributeInternal(TRANSCURRENCY) != null)
            return (String) getAttributeInternal(TRANSCURRENCY);
        else {
            Row[] fr = this.getLovCurrencyVO1().getFilteredRows("CcCurrIdTxn", this.getCurrIdSp());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("CurrDescTxn");
        }
        return (String) getAttributeInternal(TRANSCURRENCY);

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransCurrency.
     * @param value value to set the  TransCurrency
     */
    public void setTransCurrency(String value) {
        setAttributeInternal(TRANSCURRENCY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDriverNm.
     * @return the TransDriverNm
     */
    public String getTransDriverNm() {
        if (getAttributeInternal(TRANSDRIVERNM) != null)
            return (String) getAttributeInternal(TRANSDRIVERNM);
        else {
            Row fr[] = this.getLovDriverEoIdVO1().getFilteredRows("EoId", this.getDriverEoId());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("EoNm");
        }
        return (String) getAttributeInternal(TRANSDRIVERNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDriverNm.
     * @param value value to set the  TransDriverNm
     */
    public void setTransDriverNm(String value) {
        setAttributeInternal(TRANSDRIVERNM, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovStationIdVO1.
     */
    public RowSet getLovStationIdVO1() {
        return (RowSet) getAttributeInternal(LOVSTATIONIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO1.
     */
    public RowSet getLovUsrIdVO1() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUsrIdVO2.
     */
    public RowSet getLovUsrIdVO2() {
        return (RowSet) getAttributeInternal(LOVUSRIDVO2);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovStatusVO1.
     */
    public RowSet getLovStatusVO1() {
        return (RowSet) getAttributeInternal(LOVSTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovCurrencyVO1.
     */
    public RowSet getLovCurrencyVO1() {
        return (RowSet) getAttributeInternal(LOVCURRENCYVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovDriverEoIdVO1.
     */
    public RowSet getLovDriverEoIdVO1() {
        return (RowSet) getAttributeInternal(LOVDRIVEREOIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LoFuelTypeVO1.
     */
    public RowSet getLoFuelTypeVO1() {
        return (RowSet) getAttributeInternal(LOFUELTYPEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovVhclNoVO1.
     */
    public RowSet getLovVhclNoVO1() {
        return (RowSet) getAttributeInternal(LOVVHCLNOVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVDriverNameVO1.
     */
    public RowSet getLOVDriverNameVO1() {
        return (RowSet) getAttributeInternal(LOVDRIVERNAMEVO1);
    }
}

