package trnpstnfueldtlapp.model.services;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.Row;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewObjectImpl;

import trnpstnfueldtlapp.model.services.common.TrnpStnFuelDtlAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 18 18:42:55 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TrnpStnFuelDtlAMImpl extends ApplicationModuleImpl implements TrnpStnFuelDtlAM {
    Integer glblDocId = 24258;

    /**
     * This is the default constructor (do not remove).
     */
    public TrnpStnFuelDtlAMImpl() {
    }

    /**
     * Container's getter for SlsTrnpOutstnFuelDtl.
     * @return SlsTrnpOutstnFuelDtl
     */
    public ViewObjectImpl getSlsTrnpOutstnFuelDtl() {
        return (ViewObjectImpl) findViewObject("SlsTrnpOutstnFuelDtl");
    }

    public String genTxnId() {
        return (String) EbizParams.generateDocTxnId(this.getRootApplicationModule(), glblDocId);
    }

    /**
     * Container's getter for DualForSearch1.
     * @return DualForSearch1
     */
    public ViewObjectImpl getDualForSearch() {
        return (ViewObjectImpl) findViewObject("DualForSearch");
    }

    public void searchFuelDetail(String actionType) {
        if (actionType.equals("R")) {
            this.getDualForSearch().executeQuery();
            this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("orgIdBind", "-1");
        } else {
            this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("orgIdBind", EbizParams.GLBL_APP_USR_ORG());
        }
        Row curr = this.getDualForSearch().getCurrentRow();
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("cldIdBind", EbizParams.GLBL_APP_CLD_ID());
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("slocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("hoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());

        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("currIdBind", curr.getAttribute("TransCurrId"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("endDtBind", curr.getAttribute("TransEndDt"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("invcNoBind", curr.getAttribute("TransInvcNo"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("maxAmtBind", curr.getAttribute("TransEndAmt"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("minAmtBind", curr.getAttribute("TransStAmt"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("stDtBind", curr.getAttribute("TransStDt"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("stationIdBind", curr.getAttribute("TransStationId"));
        this.getSlsTrnpOutstnFuelDtl().setNamedWhereClauseParam("vehicleNoBind", curr.getAttribute("TransVehicleNo"));
        this.getSlsTrnpOutstnFuelDtl().executeQuery();
    }

    public void executeOnLoad() {
        this.getDualForSearch().setNamedWhereClauseParam("cldIdBind", EbizParams.GLBL_APP_CLD_ID());
        this.getDualForSearch().setNamedWhereClauseParam("orgIdBind", EbizParams.GLBL_APP_USR_ORG());
        this.getDualForSearch().setNamedWhereClauseParam("slocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        this.getDualForSearch().setNamedWhereClauseParam("hoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        this.getDualForSearch().executeQuery();
    }

    public String chkDuplicateInvoice(String invcNoParam) {
        this.getSlsTrnpOutstnFuelDtl1().setNamedWhereClauseParam("cldIdBind", EbizParams.GLBL_APP_CLD_ID());
        this.getSlsTrnpOutstnFuelDtl1().setNamedWhereClauseParam("slocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        this.getSlsTrnpOutstnFuelDtl1().setNamedWhereClauseParam("hoOrgIdBind", EbizParams.GLBL_HO_ORG_ID());
        this.getSlsTrnpOutstnFuelDtl1().setNamedWhereClauseParam("orgIdBind", EbizParams.GLBL_APP_USR_ORG());
        this.getSlsTrnpOutstnFuelDtl1().executeQuery();
        RowQualifier rq = new RowQualifier(this.getSlsTrnpOutstnFuelDtl1());
        rq.setWhereClause("EoId=" + this.getSlsTrnpOutstnFuelDtl().getCurrentRow().getAttribute("EoId") +
                          " and UPPER(InvNo)=UPPER('" + invcNoParam + "')");
        Row[] fr = this.getSlsTrnpOutstnFuelDtl1().getFilteredRows(rq);
        for (Row r : fr) {
            if (r.getAttribute("DocId").toString().equals(this.getSlsTrnpOutstnFuelDtl().getCurrentRow().getAttribute("DocId"))) {
            } else
                return "N";
        }
        return "Y";
    }

    /**
     * Container's getter for SlsTrnpOutstnFuelDtl1.
     * @return SlsTrnpOutstnFuelDtl1
     */
    public ViewObjectImpl getSlsTrnpOutstnFuelDtl1() {
        return (ViewObjectImpl) findViewObject("SlsTrnpOutstnFuelDtl1");
    }

    /**
     * Container's getter for LOVDriverName1.
     * @return LOVDriverName1
     */
    public ViewObjectImpl getLOVDriverName1() {
        return (ViewObjectImpl) findViewObject("LOVDriverName1");
    }
}

