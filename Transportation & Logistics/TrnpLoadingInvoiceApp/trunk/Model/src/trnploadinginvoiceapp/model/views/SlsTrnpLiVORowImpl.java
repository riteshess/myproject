package trnploadinginvoiceapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnploadinginvoiceapp.model.entities.SlsTrnpLiEOImpl;
import trnploadinginvoiceapp.model.services.TrnpLoadingInvoiceAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 15 18:34:39 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLiVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPLIEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        CurrConvFctr,
        CurrIdSp,
        DocId,
        EoId,
        HoOrgId,
        LiDt,
        LiId,
        OrgId,
        SlocId,
        TrnspId,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        CustNameTrans,
        CurrNameTrans,
        TranspNameTrans,
        TotAmtSpTrans,
        TotAmtBsTrans,
        TransTaxRuleAll,
        LiStatus,
        TotAmtBs,
        TotAmtSp,
        BasicAmtSpTrans,
        CoaId,
        LiTyp,
        SlsTrnpLiDtl,
        SlsTrnpLiTr,
        SlsTrnpLiOc,
        SlsTrnpLiCalc,
        LOVUserNameVO1,
        LOVCustomerNmVO1,
        LOVCurrIdVO1,
        LOVTrnpNameVO1,
        LovTaxRuleIdVO1,
        LOVLiStatusVO1,
        LOVLiTypeVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int LIDT = AttributesEnum.LiDt.index();
    public static final int LIID = AttributesEnum.LiId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int TRNSPID = AttributesEnum.TrnspId.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int CUSTNAMETRANS = AttributesEnum.CustNameTrans.index();
    public static final int CURRNAMETRANS = AttributesEnum.CurrNameTrans.index();
    public static final int TRANSPNAMETRANS = AttributesEnum.TranspNameTrans.index();
    public static final int TOTAMTSPTRANS = AttributesEnum.TotAmtSpTrans.index();
    public static final int TOTAMTBSTRANS = AttributesEnum.TotAmtBsTrans.index();
    public static final int TRANSTAXRULEALL = AttributesEnum.TransTaxRuleAll.index();
    public static final int LISTATUS = AttributesEnum.LiStatus.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int BASICAMTSPTRANS = AttributesEnum.BasicAmtSpTrans.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int LITYP = AttributesEnum.LiTyp.index();
    public static final int SLSTRNPLIDTL = AttributesEnum.SlsTrnpLiDtl.index();
    public static final int SLSTRNPLITR = AttributesEnum.SlsTrnpLiTr.index();
    public static final int SLSTRNPLIOC = AttributesEnum.SlsTrnpLiOc.index();
    public static final int SLSTRNPLICALC = AttributesEnum.SlsTrnpLiCalc.index();
    public static final int LOVUSERNAMEVO1 = AttributesEnum.LOVUserNameVO1.index();
    public static final int LOVCUSTOMERNMVO1 = AttributesEnum.LOVCustomerNmVO1.index();
    public static final int LOVCURRIDVO1 = AttributesEnum.LOVCurrIdVO1.index();
    public static final int LOVTRNPNAMEVO1 = AttributesEnum.LOVTrnpNameVO1.index();
    public static final int LOVTAXRULEIDVO1 = AttributesEnum.LovTaxRuleIdVO1.index();
    public static final int LOVLISTATUSVO1 = AttributesEnum.LOVLiStatusVO1.index();
    public static final int LOVLITYPEVO1 = AttributesEnum.LOVLiTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLiVORowImpl() {
    }

    /**
     * Gets SlsTrnpLiEO entity object.
     * @return the SlsTrnpLiEO
     */
    public SlsTrnpLiEOImpl getSlsTrnpLiEO() {
        return (SlsTrnpLiEOImpl) getEntity(ENTITY_SLSTRNPLIEO);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @return the CURR_CONV_FCTR
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_CONV_FCTR using the alias name CurrConvFctr.
     * @param value value to set the CURR_CONV_FCTR
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @return the CURR_ID_SP
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as attribute value for CURR_ID_SP using the alias name CurrIdSp.
     * @param value value to set the CURR_ID_SP
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for EO_ID using the alias name EoId.
     * @return the EO_ID
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as attribute value for EO_ID using the alias name EoId.
     * @param value value to set the EO_ID
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for LI_DT using the alias name LiDt.
     * @return the LI_DT
     */
    public Timestamp getLiDt() {
        return (Timestamp) getAttributeInternal(LIDT);
    }

    /**
     * Sets <code>value</code> as attribute value for LI_DT using the alias name LiDt.
     * @param value value to set the LI_DT
     */
    public void setLiDt(Timestamp value) {
        setAttributeInternal(LIDT, value);
    }

    /**
     * Gets the attribute value for LI_ID using the alias name LiId.
     * @return the LI_ID
     */
    public String getLiId() {
        return (String) getAttributeInternal(LIID);
    }

    /**
     * Sets <code>value</code> as attribute value for LI_ID using the alias name LiId.
     * @param value value to set the LI_ID
     */
    public void setLiId(String value) {
        setAttributeInternal(LIID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for TRNSP_ID using the alias name TrnspId.
     * @return the TRNSP_ID
     */
    public Integer getTrnspId() {
        return (Integer) getAttributeInternal(TRNSPID);
    }

    /**
     * Sets <code>value</code> as attribute value for TRNSP_ID using the alias name TrnspId.
     * @param value value to set the TRNSP_ID
     */
    public void setTrnspId(Integer value) {
        setAttributeInternal(TRNSPID, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CustNameTrans.
     * @return the CustNameTrans
     */
    public String getCustNameTrans() {
        if (this.getEoId() != null) {
            ViewObjectImpl appEoVO1 = this.getAm().getLOVAppEoVO1();
            appEoVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            appEoVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            appEoVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            appEoVO1.setNamedWhereClauseParam("BindEoId", this.getEoId());

            appEoVO1.executeQuery();

            Row[] allRows = appEoVO1.getAllRowsInRange();
            if (allRows.length > 0) {
                return (String) allRows[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(CUSTNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CustNameTrans.
     * @param value value to set the  CustNameTrans
     */
    public void setCustNameTrans(String value) {
        setAttributeInternal(CUSTNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrNameTrans.
     * @return the CurrNameTrans
     */
    public String getCurrNameTrans() {
        if (this.getCurrIdSp() != null) {
            ViewObjectImpl currVO1 = getAm().getLOVCurrIdVO1();
            currVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            currVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            currVO1.setNamedWhereClauseParam("BindOrgId", this.getOrgId());
            currVO1.setNamedWhereClauseParam("BindCurrId", this.getCurrIdSp());
            currVO1.executeQuery();
            Row[] allRowsInRange = currVO1.getAllRowsInRange();

            if (allRowsInRange.length > 0) {
                return (String) allRowsInRange[0].getAttribute("CurrDescTxn");
            }
        }
        return (String) getAttributeInternal(CURRNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrNameTrans.
     * @param value value to set the  CurrNameTrans
     */
    public void setCurrNameTrans(String value) {
        setAttributeInternal(CURRNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TranspNameTrans.
     * @return the TranspNameTrans
     */
    public String getTranspNameTrans() {
        if (this.getTrnspId() != null) {
            ViewObjectImpl appEoVO1 = this.getAm().getLOVAppEoVO1();
            appEoVO1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            appEoVO1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            appEoVO1.setNamedWhereClauseParam("BindHoOrgId", this.getHoOrgId());
            appEoVO1.setNamedWhereClauseParam("BindEoId", this.getTrnspId());

            appEoVO1.executeQuery();

            Row[] allRows = appEoVO1.getAllRowsInRange();
            if (allRows.length > 0) {
                return (String) allRows[0].getAttribute("EoNm");
            }
        }
        return (String) getAttributeInternal(TRANSPNAMETRANS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TranspNameTrans.
     * @param value value to set the  TranspNameTrans
     */
    public void setTranspNameTrans(String value) {
        setAttributeInternal(TRANSPNAMETRANS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtSpTrans.
     * @return the TotAmtSpTrans
     */
    public Number getTotAmtSpTrans() {
        Number val = new Number(0);
        Row[] allRowsInRange = this.getSlsTrnpLiDtl().getAllRowsInRange();
        for (Row r : allRowsInRange) {
            if (r.getAttribute("AmtSp") != null) {
                val = val.add((Number) r.getAttribute("AmtSp"));
            }
        }

        Row[] inRange = this.getSlsTrnpLiOc().getAllRowsInRange();
        for (Row r : inRange) {
            if (r.getAttribute("AmtSp") != null) {
                val = val.add((Number) r.getAttribute("AmtSp"));
            }
        }

        if (val != null) {
            return val;
        }
        return (Number) getAttributeInternal(TOTAMTSPTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TotAmtBsTrans.
     * @return the TotAmtBsTrans
     */
    public Number getTotAmtBsTrans() {
        Number val = new Number(0);
        Row[] allRowsInRange = this.getSlsTrnpLiDtl().getAllRowsInRange();
        for (Row r : allRowsInRange) {
            if (r.getAttribute("AmtBs") != null) {
                val = val.add((Number) r.getAttribute("AmtBs"));
            }
        }

        Row[] inRange = this.getSlsTrnpLiOc().getAllRowsInRange();
        for (Row r : inRange) {
            if (r.getAttribute("AmtBs") != null) {
                val = val.add((Number) r.getAttribute("AmtBs"));
            }
        }

        if (val != null) {
            return val;
        }
        return (Number) getAttributeInternal(TOTAMTBSTRANS);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTaxRuleAll.
     * @return the TransTaxRuleAll
     */
    public Integer getTransTaxRuleAll() {
        if (getAttributeInternal(TRANSTAXRULEALL) == null) {
            return this.getAm().fetchDfltTaxRuleId();
        }
        return (Integer) getAttributeInternal(TRANSTAXRULEALL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTaxRuleAll.
     * @param value value to set the  TransTaxRuleAll
     */
    public void setTransTaxRuleAll(Integer value) {
        setAttributeInternal(TRANSTAXRULEALL, value);
    }

    /**
     * Gets the attribute value for LI_STATUS using the alias name LiStatus.
     * @return the LI_STATUS
     */
    public Integer getLiStatus() {
        return (Integer) getAttributeInternal(LISTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for LI_STATUS using the alias name LiStatus.
     * @param value value to set the LI_STATUS
     */
    public void setLiStatus(Integer value) {
        setAttributeInternal(LISTATUS, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @return the TOT_AMT_BS
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_BS using the alias name TotAmtBs.
     * @param value value to set the TOT_AMT_BS
     */
    public void setTotAmtBs(Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }

    /**
     * Gets the attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @return the TOT_AMT_SP
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for TOT_AMT_SP using the alias name TotAmtSp.
     * @param value value to set the TOT_AMT_SP
     */
    public void setTotAmtSp(Number value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute BasicAmtSpTrans.
     * @return the BasicAmtSpTrans
     */
    public Number getBasicAmtSpTrans() {
        Number val = new Number(0);
        Row[] allRowsInRange = this.getSlsTrnpLiDtl().getAllRowsInRange();
        for (Row r : allRowsInRange) {
            if (r.getAttribute("AmtSp") != null) {
                val = val.add((Number) r.getAttribute("AmtSp"));
            }
        }

        if (val != null) {
            return val;
        }
        return (Number) getAttributeInternal(BASICAMTSPTRANS);
    }

    /**
     * Gets the attribute value for COA_ID using the alias name CoaId.
     * @return the COA_ID
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as attribute value for COA_ID using the alias name CoaId.
     * @param value value to set the COA_ID
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for LI_TYP using the alias name LiTyp.
     * @return the LI_TYP
     */
    public String getLiTyp() {
        return (String) getAttributeInternal(LITYP);
    }

    /**
     * Sets <code>value</code> as attribute value for LI_TYP using the alias name LiTyp.
     * @param value value to set the LI_TYP
     */
    public void setLiTyp(String value) {
        setAttributeInternal(LITYP, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLiDtl.
     */
    public RowIterator getSlsTrnpLiDtl() {
        return (RowIterator) getAttributeInternal(SLSTRNPLIDTL);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLiTr.
     */
    public RowIterator getSlsTrnpLiTr() {
        return (RowIterator) getAttributeInternal(SLSTRNPLITR);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLiOc.
     */
    public RowIterator getSlsTrnpLiOc() {
        return (RowIterator) getAttributeInternal(SLSTRNPLIOC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpLiCalc.
     */
    public RowIterator getSlsTrnpLiCalc() {
        return (RowIterator) getAttributeInternal(SLSTRNPLICALC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVUserNameVO1.
     */
    public RowSet getLOVUserNameVO1() {
        return (RowSet) getAttributeInternal(LOVUSERNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCustomerNmVO1.
     */
    public RowSet getLOVCustomerNmVO1() {
        return (RowSet) getAttributeInternal(LOVCUSTOMERNMVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVCurrIdVO1.
     */
    public RowSet getLOVCurrIdVO1() {
        return (RowSet) getAttributeInternal(LOVCURRIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVTrnpNameVO1.
     */
    public RowSet getLOVTrnpNameVO1() {
        return (RowSet) getAttributeInternal(LOVTRNPNAMEVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovTaxRuleIdVO1.
     */
    public RowSet getLovTaxRuleIdVO1() {
        return (RowSet) getAttributeInternal(LOVTAXRULEIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLiStatusVO1.
     */
    public RowSet getLOVLiStatusVO1() {
        return (RowSet) getAttributeInternal(LOVLISTATUSVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVLiTypeVO1.
     */
    public RowSet getLOVLiTypeVO1() {
        return (RowSet) getAttributeInternal(LOVLITYPEVO1);
    }

    /**
     * Method will return Application Module App
     */
    public TrnpLoadingInvoiceAMImpl getAm() {
        TrnpLoadingInvoiceAMImpl am = (TrnpLoadingInvoiceAMImpl) getApplicationModule();
        return am;
    }
}

