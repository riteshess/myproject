package trnploadinginvoiceapp.model.entities;

import adf.utils.ebiz.EbizParams;
import adf.utils.model.ADFModelUtils;

import java.sql.Types;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

import trnploadinginvoiceapp.model.services.TrnpLoadingInvoiceAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 15 17:19:41 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpLiEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        LiId,
        LiDt,
        EoId,
        TrnspId,
        CurrIdSp,
        CurrConvFctr,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        LiStatus,
        TotAmtSp,
        TotAmtBs,
        CoaId,
        LiTyp;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int LIID = AttributesEnum.LiId.index();
    public static final int LIDT = AttributesEnum.LiDt.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int TRNSPID = AttributesEnum.TrnspId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONVFCTR = AttributesEnum.CurrConvFctr.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int LISTATUS = AttributesEnum.LiStatus.index();
    public static final int TOTAMTSP = AttributesEnum.TotAmtSp.index();
    public static final int TOTAMTBS = AttributesEnum.TotAmtBs.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int LITYP = AttributesEnum.LiTyp.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpLiEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("trnploadinginvoiceapp.model.entities.SlsTrnpLiEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for LiId, using the alias name LiId.
     * @return the value of LiId
     */
    public String getLiId() {
        return (String) getAttributeInternal(LIID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LiId.
     * @param value value to set the LiId
     */
    public void setLiId(String value) {
        setAttributeInternal(LIID, value);
    }

    /**
     * Gets the attribute value for LiDt, using the alias name LiDt.
     * @return the value of LiDt
     */
    public Timestamp getLiDt() {
        return (Timestamp) getAttributeInternal(LIDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LiDt.
     * @param value value to set the LiDt
     */
    public void setLiDt(Timestamp value) {
        setAttributeInternal(LIDT, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for TrnspId, using the alias name TrnspId.
     * @return the value of TrnspId
     */
    public Integer getTrnspId() {
        return (Integer) getAttributeInternal(TRNSPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TrnspId.
     * @param value value to set the TrnspId
     */
    public void setTrnspId(Integer value) {
        setAttributeInternal(TRNSPID, value);
    }

    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConvFctr, using the alias name CurrConvFctr.
     * @return the value of CurrConvFctr
     */
    public Number getCurrConvFctr() {
        return (Number) getAttributeInternal(CURRCONVFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConvFctr.
     * @param value value to set the CurrConvFctr
     */
    public void setCurrConvFctr(Number value) {
        setAttributeInternal(CURRCONVFCTR, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }


    /**
     * Gets the attribute value for LiStatus, using the alias name LiStatus.
     * @return the value of LiStatus
     */
    public Integer getLiStatus() {
        return (Integer) getAttributeInternal(LISTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for LiStatus.
     * @param value value to set the LiStatus
     */
    public void setLiStatus(Integer value) {
        setAttributeInternal(LISTATUS, value);
    }

    /**
     * Gets the attribute value for TotAmtSp, using the alias name TotAmtSp.
     * @return the value of TotAmtSp
     */
    public Number getTotAmtSp() {
        return (Number) getAttributeInternal(TOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtSp.
     * @param value value to set the TotAmtSp
     */
    public void setTotAmtSp(Number value) {
        setAttributeInternal(TOTAMTSP, value);
    }

    /**
     * Gets the attribute value for TotAmtBs, using the alias name TotAmtBs.
     * @return the value of TotAmtBs
     */
    public Number getTotAmtBs() {
        return (Number) getAttributeInternal(TOTAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotAmtBs.
     * @param value value to set the TotAmtBs
     */
    public void setTotAmtBs(Number value) {
        setAttributeInternal(TOTAMTBS, value);
    }


    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }


    /**
     * Gets the attribute value for LiTyp, using the alias name LiTyp.
     * @return the value of LiTyp
     */
    public String getLiTyp() {
        return (String) getAttributeInternal(LITYP);
    }

    /**
     * Sets <code>value</code> as the attribute value for LiTyp.
     * @param value value to set the LiTyp
     */
    public void setLiTyp(String value) {
        setAttributeInternal(LITYP, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setCldId(EbizParams.GLBL_APP_CLD_ID());
        this.setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        this.setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        this.setOrgId(EbizParams.GLBL_APP_USR_ORG());

        this.setUsrIdCreate(EbizParams.GLBL_APP_USR());
        this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));

        this.setLiDt(new Timestamp(System.currentTimeMillis()));

        this.setDocId(getHexDocNoFromFun());

        this.setLiStatus(13);

        this.setLiTyp("I");

        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(EbizParams.GLBL_APP_USR());
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));
        } else if (operation == DML_INSERT) {
            this.setLiId(getLiDispIdFromFun());
        }
        super.doDML(operation, e);
    }

    /**Method to call database function*/
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        return ADFModelUtils.callFunction(getApplicationModule(), new StringBuilder(stmt), bindVars, sqlReturnType);
    }

    protected TrnpLoadingInvoiceAMImpl getApplicationModule() {
        return (TrnpLoadingInvoiceAMImpl) ADFModelUtils.resolvEl("#{data.TrnpLoadingInvoiceAMDataControl.dataProvider}");
    }

    /** ---------- To create HexDocId Id -------------**/

    public String getHexDocNoFromFun() {

        String hexDocIdFromFun = "0";
        try {
            hexDocIdFromFun = (String) callStoredFunction(Types.VARCHAR, "app.get_txn_id (?,?,?,?,?,?)", new Object[] {
                                                          EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                          EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(),
                                                          24257, new Integer(0)
            });

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("ERROR IN CALLING FUNCTION GET_TXN_ID at SlsTrnpLiEoImpl :" + e.getMessage());
        }
        System.out.println("===========" + hexDocIdFromFun);

        return hexDocIdFromFun;
    }

    /** ---------- To create DispLoadingOrder Id -------------**/

    public String getLiDispIdFromFun() {
        String dispIdFromFum = "0";

        try {
            dispIdFromFum = callStoredFunction(Types.VARCHAR, "SLS.TRNP_GEN_DISP_DOC_ID(?,?,?,?,?,?,?,?,?)", new Object[] {
                                               EbizParams.GLBL_APP_SERV_LOC(), EbizParams.GLBL_APP_CLD_ID(),
                                               EbizParams.GLBL_APP_USR_ORG(), 24257, this.getDocId(), 0, "SLS$TRNP$LI",
                                               EbizParams.getFyIdOnCurrDtAndCurrOrg(getApplicationModule()), 0
            }).toString();

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("ERROR IN CALLING FUNCTION at SlsTrnpLiEOImpl:" + e.getMessage());
        }
        System.out.println("===========" + dispIdFromFum);

        return dispIdFromFum;
    }
}
