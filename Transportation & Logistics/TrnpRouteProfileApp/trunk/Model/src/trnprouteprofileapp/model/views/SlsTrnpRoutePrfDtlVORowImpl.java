package trnprouteprofileapp.model.views;

import adf.utils.ebiz.EbizParams;

import java.sql.Timestamp;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;

import trnprouteprofileapp.model.entities.SlsTrnpRoutePrfDtlEOImpl;
import trnprouteprofileapp.model.service.TrnpRouteProfileAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 02 14:59:42 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpRoutePrfDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPROUTEPRFDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ArrivalPnt,
        CldId,
        DeparturePnt,
        Dist,
        DocId,
        FuelQty,
        HoOrgId,
        OrgId,
        SlocId,
        UomDist,
        UomFuel,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransUomFuel,
        TransUomDist,
        TransArrivalPnt,
        TransDeparturePnt,
        DprtAlias,
        ArrvlAlias,
        TransDprtAlias,
        TransArrvlAlias,
        SlNo,
        SlsTrnpRouteOc,
        UomLovVO1,
        SlsTrnpRouteLocVO1,
        LovLocationIdVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int DIST = AttributesEnum.Dist.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FUELQTY = AttributesEnum.FuelQty.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int UOMDIST = AttributesEnum.UomDist.index();
    public static final int UOMFUEL = AttributesEnum.UomFuel.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSUOMFUEL = AttributesEnum.TransUomFuel.index();
    public static final int TRANSUOMDIST = AttributesEnum.TransUomDist.index();
    public static final int TRANSARRIVALPNT = AttributesEnum.TransArrivalPnt.index();
    public static final int TRANSDEPARTUREPNT = AttributesEnum.TransDeparturePnt.index();
    public static final int DPRTALIAS = AttributesEnum.DprtAlias.index();
    public static final int ARRVLALIAS = AttributesEnum.ArrvlAlias.index();
    public static final int TRANSDPRTALIAS = AttributesEnum.TransDprtAlias.index();
    public static final int TRANSARRVLALIAS = AttributesEnum.TransArrvlAlias.index();
    public static final int SLNO = AttributesEnum.SlNo.index();
    public static final int SLSTRNPROUTEOC = AttributesEnum.SlsTrnpRouteOc.index();
    public static final int UOMLOVVO1 = AttributesEnum.UomLovVO1.index();
    public static final int SLSTRNPROUTELOCVO1 = AttributesEnum.SlsTrnpRouteLocVO1.index();
    public static final int LOVLOCATIONIDVO1 = AttributesEnum.LovLocationIdVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpRoutePrfDtlVORowImpl() {
    }

    /**
     * Gets SlsTrnpRoutePrfDtlEO entity object.
     * @return the SlsTrnpRoutePrfDtlEO
     */
    public SlsTrnpRoutePrfDtlEOImpl getSlsTrnpRoutePrfDtlEO() {
        return (SlsTrnpRoutePrfDtlEOImpl) getEntity(ENTITY_SLSTRNPROUTEPRFDTLEO);
    }

    /**
     * Gets the attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @return the ARRIVAL_PNT
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @param value value to set the ARRIVAL_PNT
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @return the DEPARTURE_PNT
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @param value value to set the DEPARTURE_PNT
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DIST using the alias name Dist.
     * @return the DIST
     */
    public Integer getDist() {
        return (Integer) getAttributeInternal(DIST);
    }

    /**
     * Sets <code>value</code> as attribute value for DIST using the alias name Dist.
     * @param value value to set the DIST
     */
    public void setDist(Integer value) {
        setAttributeInternal(DIST, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FUEL_QTY using the alias name FuelQty.
     * @return the FUEL_QTY
     */
    public Integer getFuelQty() {
        return (Integer) getAttributeInternal(FUELQTY);
    }

    /**
     * Sets <code>value</code> as attribute value for FUEL_QTY using the alias name FuelQty.
     * @param value value to set the FUEL_QTY
     */
    public void setFuelQty(Integer value) {
        setAttributeInternal(FUELQTY, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }


    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for UOM_DIST using the alias name UomDist.
     * @return the UOM_DIST
     */
    public String getUomDist() {

        /*  if (getAttributeInternal(UOMDIST) == null && getUomDist() != null) {
            String deptNmVar = null;
            RowSet departmentVO2 = this.getSlsTrnpRoutePrfDtlVo2();
            Row[] filteredRows = departmentVO2.getFilteredRows("DepartmentId", getDepartmentId());
            if (filteredRows.length > 0) {
                deptNmVar = filteredRows[0].getAttribute("DepartmentName").toString();
            }
            setUomDist(deptNmVar);
        } */

        return (String) getAttributeInternal(UOMDIST);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_DIST using the alias name UomDist.
     * @param value value to set the UOM_DIST
     */
    public void setUomDist(String value) {
        setAttributeInternal(UOMDIST, value);
        setTransUomDist(null);
    }

    /**
     * Gets the attribute value for UOM_FUEL using the alias name UomFuel.
     * @return the UOM_FUEL
     */
    public String getUomFuel() {
        return (String) getAttributeInternal(UOMFUEL);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM_FUEL using the alias name UomFuel.
     * @param value value to set the UOM_FUEL
     */
    public void setUomFuel(String value) {
        setAttributeInternal(UOMFUEL, value);
        setTransUomFuel(null);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomId.
     * @return the TransUomId
     */
    public String getTransUomFuel() {

        TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
        //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
        String uomfuel = null;
        if (getUomFuel() != null) {

            ViewObjectImpl impl = am.getUomLov1();
            impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());

            impl.executeQuery();
            Row[] filteredRows = impl.getFilteredRows("UomId", getUomFuel());
            if (filteredRows.length > 0) {
                uomfuel = filteredRows[0].getAttribute("UomDesc").toString();
                System.out.println("uomfuel in getter::: " + uomfuel);
            }

        }
        return uomfuel;
        //return (String) getAttributeInternal(TRANSUOMFUEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomId.
     * @param value value to set the  TransUomId
     */
    public void setTransUomFuel(String value) {
        setAttributeInternal(TRANSUOMFUEL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomDist.
     * @return the TransUomDist
     */
    public String getTransUomDist() {

        TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
        //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
        String uomdist = null;
        if (getUomDist() != null) {

            ViewObjectImpl impl = am.getUomLov1();
            impl.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            impl.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());

            Row[] filteredRows = impl.getFilteredRows("UomId", getUomDist());
            if (filteredRows.length > 0) {
                uomdist = filteredRows[0].getAttribute("UomDesc").toString();
            }

        }
        return uomdist;
        //return (String) getAttributeInternal(TRANSUOMDIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomDist.
     * @param value value to set the  TransUomDist
     */
    public void setTransUomDist(String value) {
        setAttributeInternal(TRANSUOMDIST, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransArrivalPnt.
     * @return the TransArrivalPnt
     */
    public String getTransArrivalPnt() {

        if (getAttributeInternal(TRANSARRIVALPNT) != null) {
            return (String) getAttributeInternal(TRANSARRIVALPNT);
        }
        TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
        //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
        String arrivalpnt = null;
        if (getArrivalPnt() != null) {

            ViewObjectImpl id1 = am.getLovLocationId1();
            id1.setNamedWhereClauseParam("BindCldId", this.getCldId());
            id1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
            id1.setNamedWhereClauseParam("orgIdBind", this.getOrgId());
            id1.executeQuery();

            Row[] filteredRows = id1.getFilteredRows("LocId", getArrivalPnt());
            if (filteredRows.length > 0) {
                arrivalpnt = filteredRows[0].getAttribute("AddsLoc").toString();
            }

        }

        return arrivalpnt;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransArrivalPnt.
     * @param value value to set the  TransArrivalPnt
     */
    public void setTransArrivalPnt(String value) {
        setAttributeInternal(TRANSARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDeparturePnt.
     * @return the TransDeparturePnt
     */
    public String getTransDeparturePnt() {
        if (getAttributeInternal(TRANSDEPARTUREPNT) != null) {
            return (String) getAttributeInternal(TRANSDEPARTUREPNT);
        } else {
            TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
            //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
            String departurepnt = null;
            if (getDeparturePnt() != null) {

                ViewObjectImpl id1 = am.getLovLocationId1();
                id1.setNamedWhereClauseParam("BindCldId", this.getCldId());
                id1.setNamedWhereClauseParam("BindSlocId", this.getSlocId());
                id1.setNamedWhereClauseParam("orgIdBind", this.getOrgId());
                id1.executeQuery();

                Row[] filteredRows = id1.getFilteredRows("LocId", getDeparturePnt());
                if (filteredRows.length > 0) {
                    departurepnt = filteredRows[0].getAttribute("AddsLoc").toString();
                }

            }

            return departurepnt;
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDeparturePnt.
     * @param value value to set the  TransDeparturePnt
     */
    public void setTransDeparturePnt(String value) {
        setAttributeInternal(TRANSDEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DPRT_ALIAS using the alias name DprtAlias.
     * @return the DPRT_ALIAS
     */
    public Integer getDprtAlias() {
        return (Integer) getAttributeInternal(DPRTALIAS);
    }

    /**
     * Sets <code>value</code> as attribute value for DPRT_ALIAS using the alias name DprtAlias.
     * @param value value to set the DPRT_ALIAS
     */
    public void setDprtAlias(Integer value) {
        setAttributeInternal(DPRTALIAS, value);
    }

    /**
     * Gets the attribute value for ARRVL_ALIAS using the alias name ArrvlAlias.
     * @return the ARRVL_ALIAS
     */
    public Integer getArrvlAlias() {
        return (Integer) getAttributeInternal(ARRVLALIAS);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRVL_ALIAS using the alias name ArrvlAlias.
     * @param value value to set the ARRVL_ALIAS
     */
    public void setArrvlAlias(Integer value) {
        setAttributeInternal(ARRVLALIAS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDprtAlias.
     * @return the TransDprtAlias
     */
    public String getTransDprtAlias() {

        TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
        //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
        String departurepnt = null;
        if (getDprtAlias() != null) {

            RowSet routeLoc = am.getSlsTrnpRouteLoc1();
            Row[] filteredRows = routeLoc.getFilteredRows("LocId", getDprtAlias());
            if (filteredRows.length > 0) {
                departurepnt = filteredRows[0].getAttribute("LocNm").toString();
            }

        }

        return departurepnt;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDprtAlias.
     * @param value value to set the  TransDprtAlias
     */
    public void setTransDprtAlias(String value) {
        setAttributeInternal(TRANSDPRTALIAS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransArrvlAlias.
     * @return the TransArrvlAlias
     */
    public String getTransArrvlAlias() {

        TrnpRouteProfileAMImpl am = (TrnpRouteProfileAMImpl) this.getApplicationModule();
        //  SlsTrnpRoutePrfDtlVOImpl dtl4 = am.getSlsTrnpRoutePrfDtl4();
        String arrivalpnt = null;
        if (getArrvlAlias() != null) {

            RowSet routeLoc = am.getSlsTrnpRouteLoc1();
            Row[] filteredRows = routeLoc.getFilteredRows("LocId", getArrvlAlias());
            if (filteredRows.length > 0) {
                arrivalpnt = filteredRows[0].getAttribute("LocNm").toString();
            }

        }

        return arrivalpnt;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransArrvlAlias.
     * @param value value to set the  TransArrvlAlias
     */
    public void setTransArrvlAlias(String value) {
        setAttributeInternal(TRANSARRVLALIAS, value);
    }

    /**
     * Gets the attribute value for SL_NO using the alias name SlNo.
     * @return the SL_NO
     */
    public Integer getSlNo() {
        return (Integer) getAttributeInternal(SLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SL_NO using the alias name SlNo.
     * @param value value to set the SL_NO
     */
    public void setSlNo(Integer value) {
        setAttributeInternal(SLNO, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpRouteOc.
     */
    public RowIterator getSlsTrnpRouteOc() {
        return (RowIterator) getAttributeInternal(SLSTRNPROUTEOC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UomLovVO1.
     */
    public RowSet getUomLovVO1() {
        return (RowSet) getAttributeInternal(UOMLOVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SlsTrnpRouteLocVO1.
     */
    public RowSet getSlsTrnpRouteLocVO1() {
        return (RowSet) getAttributeInternal(SLSTRNPROUTELOCVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLocationIdVO1.
     */
    public RowSet getLovLocationIdVO1() {
        return (RowSet) getAttributeInternal(LOVLOCATIONIDVO1);
    }
}

