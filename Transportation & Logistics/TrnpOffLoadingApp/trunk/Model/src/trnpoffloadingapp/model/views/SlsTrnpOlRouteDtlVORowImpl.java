package trnpoffloadingapp.model.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.RowQualifier;
import oracle.jbo.server.ViewRowImpl;

import trnpoffloadingapp.model.entities.SlsTrnpOlRouteDtlEOImpl;
import trnpoffloadingapp.model.services.TrnpOffLoadingAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 16 15:43:51 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpOlRouteDtlVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SLSTRNPOLROUTEDTLEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ActVal,
        AmtBs,
        AmtSp,
        ArrivalDate,
        ArrivalPnt,
        CldId,
        DepartureDate,
        DeparturePnt,
        DocId,
        EndRead,
        HoOrgId,
        OrgId,
        Rate,
        SlNo,
        SlocId,
        StrtRead,
        Uom,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        TransUomNm,
        TransLoDocId,
        TransDocIdSrc,
        TransDocIdSrcDisp,
        TransEoId,
        TransTotAmtSp,
        TransTotWt,
        SlsTrnpOlDocSrc,
        SlsTrnpOlOc,
        LovUomIdVO1,
        LovLoPntIdVO1,
        LovLOShipmentVO1;
        static AttributesEnum[] vals = null; ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ACTVAL = AttributesEnum.ActVal.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int ARRIVALDATE = AttributesEnum.ArrivalDate.index();
    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int DEPARTUREDATE = AttributesEnum.DepartureDate.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int ENDREAD = AttributesEnum.EndRead.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int SLNO = AttributesEnum.SlNo.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int STRTREAD = AttributesEnum.StrtRead.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int TRANSUOMNM = AttributesEnum.TransUomNm.index();
    public static final int TRANSLODOCID = AttributesEnum.TransLoDocId.index();
    public static final int TRANSDOCIDSRC = AttributesEnum.TransDocIdSrc.index();
    public static final int TRANSDOCIDSRCDISP = AttributesEnum.TransDocIdSrcDisp.index();
    public static final int TRANSEOID = AttributesEnum.TransEoId.index();
    public static final int TRANSTOTAMTSP = AttributesEnum.TransTotAmtSp.index();
    public static final int TRANSTOTWT = AttributesEnum.TransTotWt.index();
    public static final int SLSTRNPOLDOCSRC = AttributesEnum.SlsTrnpOlDocSrc.index();
    public static final int SLSTRNPOLOC = AttributesEnum.SlsTrnpOlOc.index();
    public static final int LOVUOMIDVO1 = AttributesEnum.LovUomIdVO1.index();
    public static final int LOVLOPNTIDVO1 = AttributesEnum.LovLoPntIdVO1.index();
    public static final int LOVLOSHIPMENTVO1 = AttributesEnum.LovLOShipmentVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpOlRouteDtlVORowImpl() {
    }

    /**
     * Gets SlsTrnpOlRouteDtlEO entity object.
     * @return the SlsTrnpOlRouteDtlEO
     */
    public SlsTrnpOlRouteDtlEOImpl getSlsTrnpOlRouteDtlEO() {
        return (SlsTrnpOlRouteDtlEOImpl) getEntity(ENTITY_SLSTRNPOLROUTEDTLEO);
    }

    /**
     * Gets the attribute value for ACT_VAL using the alias name ActVal.
     * @return the ACT_VAL
     */
    public Number getActVal() {
        return (Number) getAttributeInternal(ACTVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for ACT_VAL using the alias name ActVal.
     * @param value value to set the ACT_VAL
     */
    public void setActVal(Number value) {
        if (value == null)
            value = new Number(0);
        Number rate = new Number(0);
        Number currRate = new Number(0);
        TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();

        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr") != null)
            currRate = (Number) am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr");
        if (this.getRate() != null)
            rate = this.getRate();
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("RateFctr").toString().equals("D")) {
            RowQualifier rqItm = new RowQualifier(am.getSlsTrnpOlProdDtl1());
            rqItm.setWhereClause("DocId='" + this.getDocId() + "' and DeparturePnt='" + this.getDeparturePnt() +
                                 "' and ArrivalPnt='" + this.getArrivalPnt() + "'");
            Row[] itmrow = am.getSlsTrnpOlProdDtl1().getFilteredRows(rqItm);
            for (Row itmr : itmrow) {
                itmr.setAttribute("ItmAmtSp", value.multiply((Number) itmr.getAttribute("Rate")));
                itmr.setAttribute("ItmAmtBs", value.multiply((Number) itmr.getAttribute("Rate")).multiply(currRate));
            }
        }
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("RateFctr").toString().equals("F")) {
            this.setAmtSp(rate.multiply(value));
            this.setAmtBs(rate.multiply(value).multiply(currRate));
        }
        setAttributeInternal(ACTVAL, value);
    }

    /**
     * Gets the attribute value for AMT_BS using the alias name AmtBs.
     * @return the AMT_BS
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_BS using the alias name AmtBs.
     * @param value value to set the AMT_BS
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for AMT_SP using the alias name AmtSp.
     * @return the AMT_SP
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as attribute value for AMT_SP using the alias name AmtSp.
     * @param value value to set the AMT_SP
     */
    public void setAmtSp(Number value) {
        if (value == null)
            value = new Number(0);
        Number currRate = new Number(0);
        TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr") != null)
            currRate = (Number) am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr");
        this.setAmtBs(currRate.multiply(value));
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for ARRIVAL_DATE using the alias name ArrivalDate.
     * @return the ARRIVAL_DATE
     */
    public Timestamp getArrivalDate() {
        return (Timestamp) getAttributeInternal(ARRIVALDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_DATE using the alias name ArrivalDate.
     * @param value value to set the ARRIVAL_DATE
     */
    public void setArrivalDate(Timestamp value) {
        setAttributeInternal(ARRIVALDATE, value);
    }

    /**
     * Gets the attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @return the ARRIVAL_PNT
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for ARRIVAL_PNT using the alias name ArrivalPnt.
     * @param value value to set the ARRIVAL_PNT
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CLD_ID using the alias name CldId.
     * @return the CLD_ID
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLD_ID using the alias name CldId.
     * @param value value to set the CLD_ID
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_DATE using the alias name DepartureDate.
     * @return the DEPARTURE_DATE
     */
    public Timestamp getDepartureDate() {
        return (Timestamp) getAttributeInternal(DEPARTUREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_DATE using the alias name DepartureDate.
     * @param value value to set the DEPARTURE_DATE
     */
    public void setDepartureDate(Timestamp value) {
        setAttributeInternal(DEPARTUREDATE, value);
    }

    /**
     * Gets the attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @return the DEPARTURE_PNT
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTURE_PNT using the alias name DeparturePnt.
     * @param value value to set the DEPARTURE_PNT
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for END_READ using the alias name EndRead.
     * @return the END_READ
     */
    public Integer getEndRead() {
        return (Integer) getAttributeInternal(ENDREAD);
    }

    /**
     * Sets <code>value</code> as attribute value for END_READ using the alias name EndRead.
     * @param value value to set the END_READ
     */
    public void setEndRead(Integer value) {
        TrnpOffLoadingAMImpl amimpl = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        if (amimpl.getSlsTrnpOl().getCurrentRow().getAttribute("RateFctr").toString().equals("D")) {
            if (value == null) {
                this.setActVal(new Number(0));
            } else {
                Integer strt = 0;
                if (this.getStrtRead() != null)
                    strt = this.getStrtRead();
                this.setActVal(new Number(value - strt));
            }
        }
        Row fr[] = amimpl.getSlsTrnpOlRouteDtl().getFilteredRows("SlNo", this.getSlNo() + 1);
        if (fr.length > 0)
            fr[0].setAttribute("StrtRead", value);
        setAttributeInternal(ENDREAD, value);
    }

    /**
     * Gets the attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @return the HO_ORG_ID
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for HO_ORG_ID using the alias name HoOrgId.
     * @param value value to set the HO_ORG_ID
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for ORG_ID using the alias name OrgId.
     * @return the ORG_ID
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as attribute value for ORG_ID using the alias name OrgId.
     * @param value value to set the ORG_ID
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for RATE using the alias name Rate.
     * @return the RATE
     */
    public Number getRate() {
        return (Number) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as attribute value for RATE using the alias name Rate.
     * @param value value to set the RATE
     */
    public void setRate(Number value) {
        Number actVal = new Number(0);
        Number currRate = new Number(0);
        TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr") != null)
            currRate = (Number) am.getSlsTrnpOl().getCurrentRow().getAttribute("CurrConvFctr");
        if (value == null)
            value = new Number(0);
        if (this.getActVal() != null)
            actVal = this.getActVal();
        this.setAmtSp(actVal.multiply(value));

        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for SL_NO using the alias name SlNo.
     * @return the SL_NO
     */
    public Integer getSlNo() {
        return (Integer) getAttributeInternal(SLNO);
    }

    /**
     * Sets <code>value</code> as attribute value for SL_NO using the alias name SlNo.
     * @param value value to set the SL_NO
     */
    public void setSlNo(Integer value) {
        setAttributeInternal(SLNO, value);
    }

    /**
     * Gets the attribute value for SLOC_ID using the alias name SlocId.
     * @return the SLOC_ID
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for SLOC_ID using the alias name SlocId.
     * @param value value to set the SLOC_ID
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for STRT_READ using the alias name StrtRead.
     * @return the STRT_READ
     */
    public Integer getStrtRead() {
        return (Integer) getAttributeInternal(STRTREAD);
    }

    /**
     * Sets <code>value</code> as attribute value for STRT_READ using the alias name StrtRead.
     * @param value value to set the STRT_READ
     */
    public void setStrtRead(Integer value) {
        TrnpOffLoadingAMImpl amimpl = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        if (amimpl.getSlsTrnpOl().getCurrentRow().getAttribute("RateFctr").toString().equals("D")) {
            if (value == null)
                value = new Integer(0);
            if (this.getEndRead() == null || this.getEndRead().equals(0)) {
                this.setActVal(new Number(0));
            } else {
                this.setActVal(new Number(this.getEndRead() - value));
            }
        }
        setAttributeInternal(STRTREAD, value);
    }

    /**
     * Gets the attribute value for UOM using the alias name Uom.
     * @return the UOM
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as attribute value for UOM using the alias name Uom.
     * @param value value to set the UOM
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @return the USR_ID_CREATE
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE using the alias name UsrIdCreate.
     * @param value value to set the USR_ID_CREATE
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @return the USR_ID_CREATE_DT
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_CREATE_DT using the alias name UsrIdCreateDt.
     * @param value value to set the USR_ID_CREATE_DT
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @return the USR_ID_MOD
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD using the alias name UsrIdMod.
     * @param value value to set the USR_ID_MOD
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @return the USR_ID_MOD_DT
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as attribute value for USR_ID_MOD_DT using the alias name UsrIdModDt.
     * @param value value to set the USR_ID_MOD_DT
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransUomNm.
     * @return the TransUomNm
     */
    public String getTransUomNm() {
        if (getAttributeInternal(TRANSUOMNM) != null)
            return (String) getAttributeInternal(TRANSUOMNM);
        else {
            Row[] fr = this.getLovUomIdVO1().getFilteredRows("UomId", this.getUom());
            if (fr.length > 0)
                return (String) fr[0].getAttribute("UomDesc");
        }
        return (String) getAttributeInternal(TRANSUOMNM);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransUomNm.
     * @param value value to set the  TransUomNm
     */
    public void setTransUomNm(String value) {
        setAttributeInternal(TRANSUOMNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransLoDocId.
     * @return the TransLoDocId
     */
    public String getTransLoDocId() {
        if (getAttributeInternal(TRANSLODOCID) != null)
            return (String) getAttributeInternal(TRANSLODOCID);
        else {
            TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
            return (String) am.getSlsTrnpOl().getCurrentRow().getAttribute("LoDocId");
        }
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransLoDocId.
     * @param value value to set the  TransLoDocId
     */
    public void setTransLoDocId(String value) {
        setAttributeInternal(TRANSLODOCID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocSrc.
     * @return the TransDocSrc
     */
    public String getTransDocIdSrc() {
        return (String) getAttributeInternal(TRANSDOCIDSRC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocSrc.
     * @param value value to set the  TransDocSrc
     */
    public void setTransDocIdSrc(String value) {
        setAttributeInternal(TRANSDOCIDSRC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransDocIdSrcDisp.
     * @return the TransDocIdSrcDisp
     */
    public String getTransDocIdSrcDisp() {
        return (String) getAttributeInternal(TRANSDOCIDSRCDISP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransDocIdSrcDisp.
     * @param value value to set the  TransDocIdSrcDisp
     */
    public void setTransDocIdSrcDisp(String value) {
        setAttributeInternal(TRANSDOCIDSRCDISP, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransEoId.
     * @return the TransEoId
     */
    public Integer getTransEoId() {
        if (getAttributeInternal(TRANSEOID) != null)
            return (Integer) getAttributeInternal(TRANSEOID);
        else {
            TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
            return (Integer) am.getSlsTrnpOl().getCurrentRow().getAttribute("EoId");
        }

    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransEoId.
     * @param value value to set the  TransEoId
     */
    public void setTransEoId(Integer value) {
        setAttributeInternal(TRANSEOID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransTotAmt.
     * @return the TransTotAmt
     */
    public Number getTransTotAmtSp() {
        TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        Number totAmt = new Number(0);
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("RateBasis") != null) {
            am.getSlsTrnpOlProdDtl1().setRangeSize(-1);
            RowQualifier rqItm = new RowQualifier(am.getSlsTrnpOlProdDtl1());
            rqItm.setWhereClause("DocId='" + this.getDocId() + "' and ArrivalPnt='" + this.getArrivalPnt() +
                                 "' and DeparturePnt='" + this.getDeparturePnt() + "'");
            Row[] prodRw = am.getSlsTrnpOlProdDtl1().getFilteredRows(rqItm);
            // System.out.println("SlsTrnpOlRouteDtlVORowImpl-> No. of Filtered Rows=" + prodRw.length);
            for (Row row : prodRw) {
                Number itmAmt = new Number(0);
                if (row.getAttribute("ItmAmtSp") != null)
                    itmAmt = (Number) row.getAttribute("ItmAmtSp");
                totAmt = totAmt.add(itmAmt);
            }
            
        }
        // System.out.println("SlsTrnpOlRouteDtlVORowImpl-> Setting AmtSp=" + totAmt);
        this.setAmtSp(totAmt);
        return totAmt;
        //  return (Number) getAttributeInternal(TRANSTOTAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotAmt.
     * @param value value to set the  TransTotAmt
     */
    public void setTransTotAmtSp(Number value) {
        setAttributeInternal(TRANSTOTAMTSP, value);
    }


    /**
     * Gets the attribute value for the calculated attribute TransTotWt.
     * @return the TransTotWt
     */
    public Number getTransTotWt() {
        TrnpOffLoadingAMImpl am = (TrnpOffLoadingAMImpl) this.getApplicationModule();
        if (am.getSlsTrnpOl().getCurrentRow().getAttribute("RateFctr").toString().equals("W")) {
            RowQualifier rqItm = new RowQualifier(am.getSlsTrnpOlProdDtl1());
            rqItm.setWhereClause("DocId='" + this.getDocId() + "' and DeparturePnt='" + this.getDeparturePnt() +
                                 "' and ArrivalPnt='" + this.getArrivalPnt() + "'");
            Row[] itmrow = am.getSlsTrnpOlProdDtl1().getFilteredRows(rqItm);
            Number wt = new Number(0);
            for (Row itmr : itmrow) {
                if (itmr.getAttribute("ItmWt") != null)
                    wt = wt.add((Number) itmr.getAttribute("ItmWt"));
            }
            this.setActVal(wt);
            return wt;
        }
        return (Number) getAttributeInternal(TRANSTOTWT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransTotWt.
     * @param value value to set the  TransTotWt
     */
    public void setTransTotWt(Number value) {
        setAttributeInternal(TRANSTOTWT, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpOlDocSrc.
     */
    public RowIterator getSlsTrnpOlDocSrc() {
        return (RowIterator) getAttributeInternal(SLSTRNPOLDOCSRC);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SlsTrnpOlOc.
     */
    public RowIterator getSlsTrnpOlOc() {
        return (RowIterator) getAttributeInternal(SLSTRNPOLOC);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovUomIdVO1.
     */
    public RowSet getLovUomIdVO1() {
        return (RowSet) getAttributeInternal(LOVUOMIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLoPntIdVO1.
     */
    public RowSet getLovLoPntIdVO1() {
        return (RowSet) getAttributeInternal(LOVLOPNTIDVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LovLOShipmentVO1.
     */
    public RowSet getLovLOShipmentVO1() {
        return (RowSet) getAttributeInternal(LOVLOSHIPMENTVO1);
    }
}

