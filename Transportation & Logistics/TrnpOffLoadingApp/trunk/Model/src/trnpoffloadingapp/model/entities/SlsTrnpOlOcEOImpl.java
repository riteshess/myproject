package trnpoffloadingapp.model.entities;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jul 18 12:22:44 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpOlOcEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getCldId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setCldId((String) value);
            }
        },
        SlocId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getSlocId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setSlocId((Integer) value);
            }
        },
        OrgId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getOrgId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setOrgId((String) value);
            }
        },
        HoOrgId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getHoOrgId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setHoOrgId((String) value);
            }
        },
        DocId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getDocId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setDocId((String) value);
            }
        },
        DeparturePnt {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getDeparturePnt();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setDeparturePnt((String) value);
            }
        },
        ArrivalPnt {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getArrivalPnt();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setArrivalPnt((String) value);
            }
        },
        CoaId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getCoaId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setCoaId((Integer) value);
            }
        },
        TranType {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getTranType();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setTranType((String) value);
            }
        },
        OcId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getOcId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setOcId((String) value);
            }
        },
        AmtSpOc {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getAmtSpOc();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setAmtSpOc((Number) value);
            }
        },
        AmtSp {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getAmtSp();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setAmtSp((Number) value);
            }
        },
        AmtBs {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getAmtBs();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setAmtBs((Number) value);
            }
        },
        OcCat {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getOcCat();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setOcCat((Integer) value);
            }
        },
        CurrId {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getCurrId();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setCurrId((Integer) value);
            }
        },
        CurrRate {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getCurrRate();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setCurrRate((Number) value);
            }
        },
        UsrIdCreate {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getUsrIdCreate();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setUsrIdCreate((Integer) value);
            }
        },
        UsrIdCreateDt {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getUsrIdCreateDt();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setUsrIdCreateDt((Timestamp) value);
            }
        },
        UsrIdMod {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getUsrIdMod();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setUsrIdMod((Integer) value);
            }
        },
        UsrIdModDt {
            public Object get(SlsTrnpOlOcEOImpl obj) {
                return obj.getUsrIdModDt();
            }

            public void put(SlsTrnpOlOcEOImpl obj, Object value) {
                obj.setUsrIdModDt((Timestamp) value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(SlsTrnpOlOcEOImpl object);

        public abstract void put(SlsTrnpOlOcEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DEPARTUREPNT = AttributesEnum.DeparturePnt.index();
    public static final int ARRIVALPNT = AttributesEnum.ArrivalPnt.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int TRANTYPE = AttributesEnum.TranType.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int AMTSPOC = AttributesEnum.AmtSpOc.index();
    public static final int AMTSP = AttributesEnum.AmtSp.index();
    public static final int AMTBS = AttributesEnum.AmtBs.index();
    public static final int OCCAT = AttributesEnum.OcCat.index();
    public static final int CURRID = AttributesEnum.CurrId.index();
    public static final int CURRRATE = AttributesEnum.CurrRate.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpOlOcEOImpl() {
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DeparturePnt, using the alias name DeparturePnt.
     * @return the value of DeparturePnt
     */
    public String getDeparturePnt() {
        return (String) getAttributeInternal(DEPARTUREPNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeparturePnt.
     * @param value value to set the DeparturePnt
     */
    public void setDeparturePnt(String value) {
        setAttributeInternal(DEPARTUREPNT, value);
    }

    /**
     * Gets the attribute value for ArrivalPnt, using the alias name ArrivalPnt.
     * @return the value of ArrivalPnt
     */
    public String getArrivalPnt() {
        return (String) getAttributeInternal(ARRIVALPNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ArrivalPnt.
     * @param value value to set the ArrivalPnt
     */
    public void setArrivalPnt(String value) {
        setAttributeInternal(ARRIVALPNT, value);
    }

    /**
     * Gets the attribute value for CoaId, using the alias name CoaId.
     * @return the value of CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CoaId.
     * @param value value to set the CoaId
     */
    public void setCoaId(Integer value) {
        setAttributeInternal(COAID, value);
    }

    /**
     * Gets the attribute value for TranType, using the alias name TranType.
     * @return the value of TranType
     */
    public String getTranType() {
        return (String) getAttributeInternal(TRANTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TranType.
     * @param value value to set the TranType
     */
    public void setTranType(String value) {
        setAttributeInternal(TRANTYPE, value);
    }

    /**
     * Gets the attribute value for OcId, using the alias name OcId.
     * @return the value of OcId
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcId.
     * @param value value to set the OcId
     */
    public void setOcId(String value) {
        setAttributeInternal(OCID, value);
    }

    /**
     * Gets the attribute value for AmtSpOc, using the alias name AmtSpOc.
     * @return the value of AmtSpOc
     */
    public Number getAmtSpOc() {
        return (Number) getAttributeInternal(AMTSPOC);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmtSpOc.
     * @param value value to set the AmtSpOc
     */
    public void setAmtSpOc(Number value) {
        setAttributeInternal(AMTSPOC, value);
    }

    /**
     * Gets the attribute value for AmtSp, using the alias name AmtSp.
     * @return the value of AmtSp
     */
    public Number getAmtSp() {
        return (Number) getAttributeInternal(AMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmtSp.
     * @param value value to set the AmtSp
     */
    public void setAmtSp(Number value) {
        setAttributeInternal(AMTSP, value);
    }

    /**
     * Gets the attribute value for AmtBs, using the alias name AmtBs.
     * @return the value of AmtBs
     */
    public Number getAmtBs() {
        return (Number) getAttributeInternal(AMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for AmtBs.
     * @param value value to set the AmtBs
     */
    public void setAmtBs(Number value) {
        setAttributeInternal(AMTBS, value);
    }

    /**
     * Gets the attribute value for OcCat, using the alias name OcCat.
     * @return the value of OcCat
     */
    public Integer getOcCat() {
        return (Integer) getAttributeInternal(OCCAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for OcCat.
     * @param value value to set the OcCat
     */
    public void setOcCat(Integer value) {
        setAttributeInternal(OCCAT, value);
    }

    /**
     * Gets the attribute value for CurrId, using the alias name CurrId.
     * @return the value of CurrId
     */
    public Integer getCurrId() {
        return (Integer) getAttributeInternal(CURRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrId.
     * @param value value to set the CurrId
     */
    public void setCurrId(Integer value) {
        setAttributeInternal(CURRID, value);
    }

    /**
     * Gets the attribute value for CurrRate, using the alias name CurrRate.
     * @return the value of CurrRate
     */
    public Number getCurrRate() {
        return (Number) getAttributeInternal(CURRRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrRate.
     * @param value value to set the CurrRate
     */
    public void setCurrRate(Number value) {
        setAttributeInternal(CURRRATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param departurePnt key constituent
     * @param arrivalPnt key constituent
     * @param coaId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       String departurePnt, String arrivalPnt, Integer coaId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, departurePnt, arrivalPnt, coaId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("trnpoffloadingapp.model.entities.SlsTrnpOlOcEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

