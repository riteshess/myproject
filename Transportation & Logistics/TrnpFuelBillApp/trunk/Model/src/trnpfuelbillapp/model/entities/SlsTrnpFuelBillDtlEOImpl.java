package trnpfuelbillapp.model.entities;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 19 12:29:57 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpFuelBillDtlEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        DocId,
        DocIdFuelDtl,
        VehicleNo,
        EoInvNo,
        FuelQty,
        FuelRate,
        FuelAmtSp,
        FuelAmtBs,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        Uom,
        VhclItmId,
        SlsTrnpFuelBill;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int DOCIDFUELDTL = AttributesEnum.DocIdFuelDtl.index();
    public static final int VEHICLENO = AttributesEnum.VehicleNo.index();
    public static final int EOINVNO = AttributesEnum.EoInvNo.index();
    public static final int FUELQTY = AttributesEnum.FuelQty.index();
    public static final int FUELRATE = AttributesEnum.FuelRate.index();
    public static final int FUELAMTSP = AttributesEnum.FuelAmtSp.index();
    public static final int FUELAMTBS = AttributesEnum.FuelAmtBs.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int VHCLITMID = AttributesEnum.VhclItmId.index();
    public static final int SLSTRNPFUELBILL = AttributesEnum.SlsTrnpFuelBill.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpFuelBillDtlEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("trnpfuelbillapp.model.entities.SlsTrnpFuelBillDtlEO");
    }

    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for DocIdFuelDtl, using the alias name DocIdFuelDtl.
     * @return the value of DocIdFuelDtl
     */
    public String getDocIdFuelDtl() {
        return (String) getAttributeInternal(DOCIDFUELDTL);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIdFuelDtl.
     * @param value value to set the DocIdFuelDtl
     */
    public void setDocIdFuelDtl(String value) {
        setAttributeInternal(DOCIDFUELDTL, value);
    }

    /**
     * Gets the attribute value for VehicleNo, using the alias name VehicleNo.
     * @return the value of VehicleNo
     */
    public String getVehicleNo() {
        return (String) getAttributeInternal(VEHICLENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehicleNo.
     * @param value value to set the VehicleNo
     */
    public void setVehicleNo(String value) {
        setAttributeInternal(VEHICLENO, value);
    }

    /**
     * Gets the attribute value for EoInvNo, using the alias name EoInvNo.
     * @return the value of EoInvNo
     */
    public String getEoInvNo() {
        return (String) getAttributeInternal(EOINVNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoInvNo.
     * @param value value to set the EoInvNo
     */
    public void setEoInvNo(String value) {
        setAttributeInternal(EOINVNO, value);
    }

    /**
     * Gets the attribute value for FuelQty, using the alias name FuelQty.
     * @return the value of FuelQty
     */
    public Number getFuelQty() {
        return (Number) getAttributeInternal(FUELQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelQty.
     * @param value value to set the FuelQty
     */
    public void setFuelQty(Number value) {
        setAttributeInternal(FUELQTY, value);
    }

    /**
     * Gets the attribute value for FuelRate, using the alias name FuelRate.
     * @return the value of FuelRate
     */
    public Number getFuelRate() {
        return (Number) getAttributeInternal(FUELRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelRate.
     * @param value value to set the FuelRate
     */
    public void setFuelRate(Number value) {
        setAttributeInternal(FUELRATE, value);
    }

    /**
     * Gets the attribute value for FuelAmtSp, using the alias name FuelAmtSp.
     * @return the value of FuelAmtSp
     */
    public Number getFuelAmtSp() {
        return (Number) getAttributeInternal(FUELAMTSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelAmtSp.
     * @param value value to set the FuelAmtSp
     */
    public void setFuelAmtSp(Number value) {
        setAttributeInternal(FUELAMTSP, value);
    }

    /**
     * Gets the attribute value for FuelAmtBs, using the alias name FuelAmtBs.
     * @return the value of FuelAmtBs
     */
    public Number getFuelAmtBs() {
        return (Number) getAttributeInternal(FUELAMTBS);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelAmtBs.
     * @param value value to set the FuelAmtBs
     */
    public void setFuelAmtBs(Number value) {
        setAttributeInternal(FUELAMTBS, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the value of Uom
     */
    public String getUom() {
        return (String) getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for VhclItmId, using the alias name VhclItmId.
     * @return the value of VhclItmId
     */
    public String getVhclItmId() {
        return (String) getAttributeInternal(VHCLITMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VhclItmId.
     * @param value value to set the VhclItmId
     */
    public void setVhclItmId(String value) {
        setAttributeInternal(VHCLITMID, value);
    }

    /**
     * @return the associated entity SlsTrnpFuelBillEOImpl.
     */
    public SlsTrnpFuelBillEOImpl getSlsTrnpFuelBill() {
        return (SlsTrnpFuelBillEOImpl) getAttributeInternal(SLSTRNPFUELBILL);
    }

    /**
     * Sets <code>value</code> as the associated entity SlsTrnpFuelBillEOImpl.
     */
    public void setSlsTrnpFuelBill(SlsTrnpFuelBillEOImpl value) {
        setAttributeInternal(SLSTRNPFUELBILL, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param docId key constituent
     * @param docIdFuelDtl key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, String docId,
                                       String docIdFuelDtl) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, docId, docIdFuelDtl });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        // super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            this.setUsrIdCreate(EbizParams.GLBL_APP_USR());
            this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        }
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(EbizParams.GLBL_APP_USR());
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));

        }
        super.doDML(operation, e);
    }
}

