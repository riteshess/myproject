package trnpratecontractapp.model.entities;

import adf.utils.ebiz.EbizParams;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 02 16:28:07 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SlsTrnpRateCntrctEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        CldId,
        SlocId,
        OrgId,
        HoOrgId,
        EoId,
        EffectiveDt,
        CntrctBasis,
        RateFctr,
        Rate,
        RateUom,
        UsrIdCreate,
        UsrIdCreateDt,
        UsrIdMod,
        UsrIdModDt,
        VhclType,
        Actv,
        InactvDt,
        DocId,
        CurrIdSp,
        CurrConv,
        EoType,
        DayMinAmt,
        MinDistRate,
        MinDist;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int EOID = AttributesEnum.EoId.index();
    public static final int EFFECTIVEDT = AttributesEnum.EffectiveDt.index();
    public static final int CNTRCTBASIS = AttributesEnum.CntrctBasis.index();
    public static final int RATEFCTR = AttributesEnum.RateFctr.index();
    public static final int RATE = AttributesEnum.Rate.index();
    public static final int RATEUOM = AttributesEnum.RateUom.index();
    public static final int USRIDCREATE = AttributesEnum.UsrIdCreate.index();
    public static final int USRIDCREATEDT = AttributesEnum.UsrIdCreateDt.index();
    public static final int USRIDMOD = AttributesEnum.UsrIdMod.index();
    public static final int USRIDMODDT = AttributesEnum.UsrIdModDt.index();
    public static final int VHCLTYPE = AttributesEnum.VhclType.index();
    public static final int ACTV = AttributesEnum.Actv.index();
    public static final int INACTVDT = AttributesEnum.InactvDt.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int CURRIDSP = AttributesEnum.CurrIdSp.index();
    public static final int CURRCONV = AttributesEnum.CurrConv.index();
    public static final int EOTYPE = AttributesEnum.EoType.index();
    public static final int DAYMINAMT = AttributesEnum.DayMinAmt.index();
    public static final int MINDISTRATE = AttributesEnum.MinDistRate.index();
    public static final int MINDIST = AttributesEnum.MinDist.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SlsTrnpRateCntrctEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("trnpratecontractapp.model.entities.SlsTrnpRateCntrctEO");
    }


    /**
     * Gets the attribute value for CldId, using the alias name CldId.
     * @return the value of CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CldId.
     * @param value value to set the CldId
     */
    public void setCldId(String value) {
        setAttributeInternal(CLDID, value);
    }

    /**
     * Gets the attribute value for SlocId, using the alias name SlocId.
     * @return the value of SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SlocId.
     * @param value value to set the SlocId
     */
    public void setSlocId(Integer value) {
        setAttributeInternal(SLOCID, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the value of OrgId
     */
    public String getOrgId() {
        return (String) getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(String value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for HoOrgId, using the alias name HoOrgId.
     * @return the value of HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HoOrgId.
     * @param value value to set the HoOrgId
     */
    public void setHoOrgId(String value) {
        setAttributeInternal(HOORGID, value);
    }

    /**
     * Gets the attribute value for EoId, using the alias name EoId.
     * @return the value of EoId
     */
    public Integer getEoId() {
        return (Integer) getAttributeInternal(EOID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoId.
     * @param value value to set the EoId
     */
    public void setEoId(Integer value) {
        setAttributeInternal(EOID, value);
    }

    /**
     * Gets the attribute value for EffectiveDt, using the alias name EffectiveDt.
     * @return the value of EffectiveDt
     */
    public Timestamp getEffectiveDt() {
        return (Timestamp) getAttributeInternal(EFFECTIVEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveDt.
     * @param value value to set the EffectiveDt
     */
    public void setEffectiveDt(Timestamp value) {
        setAttributeInternal(EFFECTIVEDT, value);
    }


    /**
     * Gets the attribute value for CntrctBasis, using the alias name CntrctBasis.
     * @return the value of CntrctBasis
     */
    public String getCntrctBasis() {
        return (String) getAttributeInternal(CNTRCTBASIS);
    }

    /**
     * Sets <code>value</code> as the attribute value for CntrctBasis.
     * @param value value to set the CntrctBasis
     */
    public void setCntrctBasis(String value) {
        if (value != null && value.equals("F")) {
        } else {
            this.setRate(new Number(0));
        }
        setAttributeInternal(CNTRCTBASIS, value);
    }

    /**
     * Gets the attribute value for RateFctr, using the alias name RateFctr.
     * @return the value of RateFctr
     */
    public String getRateFctr() {
        return (String) getAttributeInternal(RATEFCTR);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateFctr.
     * @param value value to set the RateFctr
     */
    public void setRateFctr(String value) {
        if (value != null && value.equalsIgnoreCase("D")) {
        } else {
            this.setDayMinAmt(new Number(0));
            this.setMinDistRate(new Number(0));
        }
        setAttributeInternal(RATEFCTR, value);
    }

    /**
     * Gets the attribute value for Rate, using the alias name Rate.
     * @return the value of Rate
     */
    public Number getRate() {
        return (Number) getAttributeInternal(RATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Rate.
     * @param value value to set the Rate
     */
    public void setRate(Number value) {
        if (value == null || value.compareTo(new Number(0)) < 0)
            value = new Number(0);
        if (value.compareTo(new Number(0)) == 0) {
            setMinDistRate(new Number(0));
            setDayMinAmt(new Number(0));
        }
        setAttributeInternal(RATE, value);
    }

    /**
     * Gets the attribute value for RateUom, using the alias name RateUom.
     * @return the value of RateUom
     */
    public String getRateUom() {
        return (String) getAttributeInternal(RATEUOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for RateUom.
     * @param value value to set the RateUom
     */
    public void setRateUom(String value) {
        setAttributeInternal(RATEUOM, value);
    }

    /**
     * Gets the attribute value for UsrIdCreate, using the alias name UsrIdCreate.
     * @return the value of UsrIdCreate
     */
    public Integer getUsrIdCreate() {
        return (Integer) getAttributeInternal(USRIDCREATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreate.
     * @param value value to set the UsrIdCreate
     */
    public void setUsrIdCreate(Integer value) {
        setAttributeInternal(USRIDCREATE, value);
    }

    /**
     * Gets the attribute value for UsrIdCreateDt, using the alias name UsrIdCreateDt.
     * @return the value of UsrIdCreateDt
     */
    public Timestamp getUsrIdCreateDt() {
        return (Timestamp) getAttributeInternal(USRIDCREATEDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdCreateDt.
     * @param value value to set the UsrIdCreateDt
     */
    public void setUsrIdCreateDt(Timestamp value) {
        setAttributeInternal(USRIDCREATEDT, value);
    }

    /**
     * Gets the attribute value for UsrIdMod, using the alias name UsrIdMod.
     * @return the value of UsrIdMod
     */
    public Integer getUsrIdMod() {
        return (Integer) getAttributeInternal(USRIDMOD);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdMod.
     * @param value value to set the UsrIdMod
     */
    public void setUsrIdMod(Integer value) {
        setAttributeInternal(USRIDMOD, value);
    }

    /**
     * Gets the attribute value for UsrIdModDt, using the alias name UsrIdModDt.
     * @return the value of UsrIdModDt
     */
    public Timestamp getUsrIdModDt() {
        return (Timestamp) getAttributeInternal(USRIDMODDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UsrIdModDt.
     * @param value value to set the UsrIdModDt
     */
    public void setUsrIdModDt(Timestamp value) {
        setAttributeInternal(USRIDMODDT, value);
    }

    /**
     * Gets the attribute value for VhclType, using the alias name VhclType.
     * @return the value of VhclType
     */
    public Integer getVhclType() {
        return (Integer) getAttributeInternal(VHCLTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VhclType.
     * @param value value to set the VhclType
     */
    public void setVhclType(Integer value) {
        setAttributeInternal(VHCLTYPE, value);
    }


    /**
     * Gets the attribute value for Actv, using the alias name Actv.
     * @return the value of Actv
     */
    public String getActv() {
        return (String) getAttributeInternal(ACTV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Actv.
     * @param value value to set the Actv
     */
    public void setActv(String value) {
        setAttributeInternal(ACTV, value);
    }


    /**
     * Gets the attribute value for InactvDt, using the alias name InactvDt.
     * @return the value of InactvDt
     */
    public Timestamp getInactvDt() {
        return (Timestamp) getAttributeInternal(INACTVDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for InactvDt.
     * @param value value to set the InactvDt
     */
    public void setInactvDt(Timestamp value) {
        setAttributeInternal(INACTVDT, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the value of DocId
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }


    /**
     * Gets the attribute value for CurrIdSp, using the alias name CurrIdSp.
     * @return the value of CurrIdSp
     */
    public Integer getCurrIdSp() {
        return (Integer) getAttributeInternal(CURRIDSP);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrIdSp.
     * @param value value to set the CurrIdSp
     */
    public void setCurrIdSp(Integer value) {
        setAttributeInternal(CURRIDSP, value);
    }

    /**
     * Gets the attribute value for CurrConv, using the alias name CurrConv.
     * @return the value of CurrConv
     */
    public Number getCurrConv() {
        return (Number) getAttributeInternal(CURRCONV);
    }

    /**
     * Sets <code>value</code> as the attribute value for CurrConv.
     * @param value value to set the CurrConv
     */
    public void setCurrConv(Number value) {
        setAttributeInternal(CURRCONV, value);
    }


    /**
     * Gets the attribute value for EoType, using the alias name EoType.
     * @return the value of EoType
     */
    public Integer getEoType() {
        return (Integer) getAttributeInternal(EOTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EoType.
     * @param value value to set the EoType
     */
    public void setEoType(Integer value) {
        setAttributeInternal(EOTYPE, value);
    }

    /**
     * Gets the attribute value for DayMinAmt, using the alias name DayMinAmt.
     * @return the value of DayMinAmt
     */
    public Number getDayMinAmt() {
        return (Number) getAttributeInternal(DAYMINAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for DayMinAmt.
     * @param value value to set the DayMinAmt
     */
    public void setDayMinAmt(Number value) {
        if (value == null || value.compareTo(new Number(0)) < 0)
            value = new Number(0);
        setAttributeInternal(DAYMINAMT, value);
    }

    /**
     * Gets the attribute value for MinDistRate, using the alias name MinDistRate.
     * @return the value of MinDistRate
     */
    public Number getMinDistRate() {
        return (Number) getAttributeInternal(MINDISTRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinDistRate.
     * @param value value to set the MinDistRate
     */
    public void setMinDistRate(Number value) {
        if (value == null || value.compareTo(new Number(0)) < 0)
            value = new Number(0);
        if (value != null && value.compareTo(new Number(0)) > 0) {
        } else {
            this.setMinDist(new Number(0));
        }
        setAttributeInternal(MINDISTRATE, value);
    }

    /**
     * Gets the attribute value for MinDist, using the alias name MinDist.
     * @return the value of MinDist
     */
    public Number getMinDist() {
        return (Number) getAttributeInternal(MINDIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinDist.
     * @param value value to set the MinDist
     */
    public void setMinDist(Number value) {
        if (value == null || value.compareTo(new Number(0)) < 0)
            value = new Number(0);
        setAttributeInternal(MINDIST, value);
    }


    /**
     * @param cldId key constituent
     * @param slocId key constituent
     * @param orgId key constituent
     * @param hoOrgId key constituent
     * @param eoId key constituent
     * @param docId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(String cldId, Integer slocId, String orgId, String hoOrgId, Integer eoId,
                                       String docId) {
        return new Key(new Object[] { cldId, slocId, orgId, hoOrgId, eoId, docId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        this.setCldId(EbizParams.GLBL_APP_CLD_ID());
        this.setSlocId(EbizParams.GLBL_APP_SERV_LOC());
        this.setOrgId(EbizParams.GLBL_APP_USR_ORG());
        this.setHoOrgId(EbizParams.GLBL_HO_ORG_ID());
        this.setEoType(68);
        this.setCntrctBasis("F");
        this.setRateFctr("D");
        this.setActv("N");
        this.setEffectiveDt(new Timestamp(System.currentTimeMillis()));
        this.setRate(new Number(0));
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        //super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            this.setUsrIdCreate(EbizParams.GLBL_APP_USR());
            this.setUsrIdCreateDt(new Timestamp(System.currentTimeMillis()));
        }
        if (operation == DML_UPDATE) {
            this.setUsrIdMod(EbizParams.GLBL_APP_USR());
            this.setUsrIdModDt(new Timestamp(System.currentTimeMillis()));

        }
        super.doDML(operation, e);
    }
}

