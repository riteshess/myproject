package trnpratecontractapp.model.views;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;

import trnpratecontractapp.model.services.TrnpRateContractAMImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 08 16:44:37 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ImpOcVwVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SlocId,
        CldId,
        HoOrgId,
        OcId,
        OcNm,
        CoaId,
        CoaNm,
        DocTypeId,
        DocId,
        Reqd,
        OcCalcVal,
        OcCalcType,
        CustomDecl,
        PartOfCost,
        ThirdParty,
        OcCat,
        OcCatNm,
        TransChildRowCount,
        LOVOtherChargesNmVO1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int SLOCID = AttributesEnum.SlocId.index();
    public static final int CLDID = AttributesEnum.CldId.index();
    public static final int HOORGID = AttributesEnum.HoOrgId.index();
    public static final int OCID = AttributesEnum.OcId.index();
    public static final int OCNM = AttributesEnum.OcNm.index();
    public static final int COAID = AttributesEnum.CoaId.index();
    public static final int COANM = AttributesEnum.CoaNm.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int REQD = AttributesEnum.Reqd.index();
    public static final int OCCALCVAL = AttributesEnum.OcCalcVal.index();
    public static final int OCCALCTYPE = AttributesEnum.OcCalcType.index();
    public static final int CUSTOMDECL = AttributesEnum.CustomDecl.index();
    public static final int PARTOFCOST = AttributesEnum.PartOfCost.index();
    public static final int THIRDPARTY = AttributesEnum.ThirdParty.index();
    public static final int OCCAT = AttributesEnum.OcCat.index();
    public static final int OCCATNM = AttributesEnum.OcCatNm.index();
    public static final int TRANSCHILDROWCOUNT = AttributesEnum.TransChildRowCount.index();
    public static final int LOVOTHERCHARGESNMVO1 = AttributesEnum.LOVOtherChargesNmVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ImpOcVwVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute SlocId.
     * @return the SlocId
     */
    public Integer getSlocId() {
        return (Integer) getAttributeInternal(SLOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute CldId.
     * @return the CldId
     */
    public String getCldId() {
        return (String) getAttributeInternal(CLDID);
    }

    /**
     * Gets the attribute value for the calculated attribute HoOrgId.
     * @return the HoOrgId
     */
    public String getHoOrgId() {
        return (String) getAttributeInternal(HOORGID);
    }

    /**
     * Gets the attribute value for the calculated attribute OcId.
     * @return the OcId
     */
    public String getOcId() {
        return (String) getAttributeInternal(OCID);
    }

    /**
     * Gets the attribute value for the calculated attribute OcNm.
     * @return the OcNm
     */
    public String getOcNm() {
        return (String) getAttributeInternal(OCNM);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaId.
     * @return the CoaId
     */
    public Integer getCoaId() {
        return (Integer) getAttributeInternal(COAID);
    }

    /**
     * Gets the attribute value for the calculated attribute CoaNm.
     * @return the CoaNm
     */
    public String getCoaNm() {
        return (String) getAttributeInternal(COANM);
    }

    /**
     * Gets the attribute value for the calculated attribute DocTypeId.
     * @return the DocTypeId
     */
    public Integer getDocTypeId() {
        return (Integer) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Gets the attribute value for the calculated attribute DocId.
     * @return the DocId
     */
    public Long getDocId() {
        return (Long) getAttributeInternal(DOCID);
    }

    /**
     * Gets the attribute value for the calculated attribute Reqd.
     * @return the Reqd
     */
    public String getReqd() {
        return (String) getAttributeInternal(REQD);
    }

    /**
     * Gets the attribute value for the calculated attribute OcCalcVal.
     * @return the OcCalcVal
     */
    public BigDecimal getOcCalcVal() {
        return (BigDecimal) getAttributeInternal(OCCALCVAL);
    }

    /**
     * Gets the attribute value for the calculated attribute OcCalcType.
     * @return the OcCalcType
     */
    public String getOcCalcType() {
        return (String) getAttributeInternal(OCCALCTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute CustomDecl.
     * @return the CustomDecl
     */
    public String getCustomDecl() {
        return (String) getAttributeInternal(CUSTOMDECL);
    }

    /**
     * Gets the attribute value for the calculated attribute PartOfCost.
     * @return the PartOfCost
     */
    public String getPartOfCost() {
        return (String) getAttributeInternal(PARTOFCOST);
    }

    /**
     * Gets the attribute value for the calculated attribute ThirdParty.
     * @return the ThirdParty
     */
    public String getThirdParty() {
        return (String) getAttributeInternal(THIRDPARTY);
    }

    /**
     * Gets the attribute value for the calculated attribute OcCat.
     * @return the OcCat
     */
    public Integer getOcCat() {
        return (Integer) getAttributeInternal(OCCAT);
    }

    /**
     * Gets the attribute value for the calculated attribute OcCatNm.
     * @return the OcCatNm
     */
    public String getOcCatNm() {
        return (String) getAttributeInternal(OCCATNM);
    }


    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OcCatNm.
     * @param value value to set the  OcCatNm
     */
    public void setOcCatNm(String value) {
        setAttributeInternal(OCCATNM, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransChildRowCount.
     * @return the TransChildRowCount
     */
    public Integer getTransChildRowCount() {
        TrnpRateContractAMImpl am = (TrnpRateContractAMImpl) this.getApplicationModule();
       Row[] fr = am.getSlsTrnpRatesCntrctOc1().getFilteredRows("OcId",this.getOcId());
        return fr.length;
       // return (Integer) getAttributeInternal(TRANSCHILDROWCOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransChildRowCount.
     * @param value value to set the  TransChildRowCount
     */
    public void setTransChildRowCount(Integer value) {
        setAttributeInternal(TRANSCHILDROWCOUNT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LOVOtherChargesNmVO1.
     */
    public RowSet getLOVOtherChargesNmVO1() {
        return (RowSet) getAttributeInternal(LOVOTHERCHARGESNMVO1);
    }
}

