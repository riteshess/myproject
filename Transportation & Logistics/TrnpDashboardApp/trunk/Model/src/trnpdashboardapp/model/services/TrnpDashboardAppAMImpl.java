package trnpdashboardapp.model.services;

import adf.utils.ebiz.EbizParams;

import adf.utils.model.ADFModelUtils;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.sql.Types;

import java.util.ArrayList;

import java.util.StringTokenizer;

import javax.faces.application.FacesMessage;

import oracle.jbo.JboException;
import oracle.jbo.NameValuePairs;
import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.ApplicationModuleImpl;


import oracle.jbo.server.RowFinder;

import oracle.jbo.server.ViewLinkImpl;


import oracle.jbo.server.ViewObjectImpl;

import trnpdashboardapp.model.ds.TickerRowDS;
import trnpdashboardapp.model.services.common.TrnpDashboardAppAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Sep 09 18:47:12 IST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TrnpDashboardAppAMImpl extends ApplicationModuleImpl implements TrnpDashboardAppAM {
    /**
     * This is the default constructor (do not remove).
     */
    public TrnpDashboardAppAMImpl() {
        //this.setVehicleStatusVOParams();
    }
    
    public void setVehicleStatusVOParams()
    {
        ViewObjectImpl vo1 = this.getVehicleStatusVO1();
        vo1.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        vo1.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        vo1.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());    
        vo1.executeQuery();
        
        ViewObjectImpl vo2 = this.getVehicleStatusVO2();
        vo2.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        vo2.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        vo2.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());    
        vo2.executeQuery();
        
        ViewObjectImpl loVo = this.getLoWeightDiffVO1();
        loVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        loVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        loVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_HO_ORG_ID());
        loVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC()); 
        loVo.executeQuery();
             
        ViewObjectImpl loRwVo = this.getLoWeightDiffRouteWiseVO1();
        loRwVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        loRwVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        loRwVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_HO_ORG_ID());
        loRwVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC()); 
        loRwVo.executeQuery(); 
        
    }
        
    public String getVehicleDesc(String itmSrNo)
    {  
        if(itmSrNo != null)
        {
             ViewObjectImpl vhclDescVo = this.getVhclDescVo1();
            vhclDescVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
            vhclDescVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
            vhclDescVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
            vhclDescVo.setNamedWhereClauseParam("BindItmSrNo", itmSrNo);
            vhclDescVo.executeQuery();
            
            Row[] filteredRows = vhclDescVo.getAllRowsInRange();
            
            if(filteredRows.length > 0)
            {
                return filteredRows[0].getAttribute("VhclDesc").toString().concat("-").concat(filteredRows[0].getAttribute("GrossWt").toString().concat("-")).concat(filteredRows[0].getAttribute("ChasisNo").toString().concat("-").concat(filteredRows[0].getAttribute("EngineNo").toString().concat("-")).concat(filteredRows[0].getAttribute("MileageLoad").toString()));
            } 
            
        }
        
        return "";
    }
    
    protected Object callStoredFunction(int sqlReturnType, String stmt, Object[] bindVars) {
        CallableStatement st = null;
        //_log.info("__________________________________________begin");
        try {

            st = this.getDBTransaction().createCallableStatement("begin ? := " + stmt + ";end;", 0);

            st.registerOutParameter(1, sqlReturnType);
            if (bindVars != null) {
                for (int z = 0; z < bindVars.length; z++) {
                    st.setObject(z + 2, bindVars[z]);
                    // _log.info(""+bindVars[z]);
                }
            }
            st.executeUpdate();
            // _log.info("__________________________________________end");
            return st.getObject(1);
        } catch (SQLException e) {
            throw new JboException(e);
        } finally {
            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }
        }

    }

    
    public Number getDocPendingCountForMyApproval(Integer DocTypeId, StringBuffer CountType, StringBuffer type) {
        Number count = new Number(0);
        if (type != null) {
        } else {
            type = new StringBuffer("X");
        }
        try {
            BigDecimal s = null;


            s = (BigDecimal) callStoredFunction(Types.NUMERIC, "SLS.SLS_TRNP_DOC_WF_CNT(?,?,?,?,?,?)", new Object[] {
                                                EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                EbizParams.GLBL_APP_USR_ORG(), EbizParams.GLBL_APP_USR(), DocTypeId,CountType.toString()
            });

            System.out.println("Returned value :: "+s);
            
            count = new Number(s);
            
            System.out.println("Count value :: "+count);
            
        } catch (Exception e) {
            ADFModelUtils.showFormattedFacesMessage(ADFModelUtils.resolvRsrc("MSG.2050"), "<br/> SLS_TRNP_DOC_WF_CNT.", FacesMessage.SEVERITY_ERROR);
            //System.out.println("There have been an error in calling function 'SLS_TRNP_DOC_WF_CNT' !");
            e.printStackTrace();
        }
        return count;
    }

    public void setLoadingReqBindVars(String type)
    {
        System.out.println("Type in Loading Request :: "+type);
        
        ViewObjectImpl lrVo = this.getTrnpLoadingReqVwVO1();
        lrVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        lrVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        lrVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        lrVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        lrVo.setNamedWhereClauseParam("BindUsrId", EbizParams.GLBL_APP_USR());
        lrVo.setNamedWhereClauseParam("BindWfType", type);
        lrVo.executeQuery();
    }

    public void setLoadingOrderBindVars(String type)
    {
        System.out.println("Type in Loading Order :: "+type);
        
        ViewObjectImpl lrVo = this.getTrnpLoadingOrderVwVO1();
        lrVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        lrVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        lrVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        lrVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        lrVo.setNamedWhereClauseParam("BindUsrId", EbizParams.GLBL_APP_USR());
        lrVo.setNamedWhereClauseParam("BindWfType", type);
        lrVo.executeQuery();
    }

    public void setOffloadingBindVars(String type)
    {
        System.out.println("Type in Offloading :: "+type);
        
        ViewObjectImpl lrVo = this.getTrnpOffloadingVwVo1();
        lrVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        lrVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        lrVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        lrVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        lrVo.setNamedWhereClauseParam("BindUsrId", EbizParams.GLBL_APP_USR());
        lrVo.setNamedWhereClauseParam("BindWfType", type);
        lrVo.executeQuery();
    }

    public void setLoadingInvoiceBindVars(String type)
    {
        System.out.println("Type in Loading Invoice :: "+type);
        
        ViewObjectImpl lrVo = this.getTrnpLoadingInvoiceVwVO1();
        lrVo.setNamedWhereClauseParam("BindCldId", EbizParams.GLBL_APP_CLD_ID());
        lrVo.setNamedWhereClauseParam("BindSlocId", EbizParams.GLBL_APP_SERV_LOC());
        lrVo.setNamedWhereClauseParam("BindOrgId", EbizParams.GLBL_APP_USR_ORG());
        lrVo.setNamedWhereClauseParam("BindHoOrgId", EbizParams.GLBL_HO_ORG_ID());
        lrVo.setNamedWhereClauseParam("BindUsrId", EbizParams.GLBL_APP_USR());
        lrVo.setNamedWhereClauseParam("BindWfType", type);
        lrVo.executeQuery();
    }

    /**
     * Container's getter for TrnpLoadingOrderVwVO1.
     * @return TrnpLoadingOrderVwVO1
     */
    public ArrayList<TickerRowDS> getSelectedTickerList()
    {
            ArrayList<TickerRowDS> selectSettingList  = new ArrayList<TickerRowDS>();
            
            ViewObjectImpl selectedTickerVO = this.getTrnpSelectedTickerList1();
            
            selectedTickerVO.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());            
            selectedTickerVO.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());            
            selectedTickerVO.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());            
            selectedTickerVO.setNamedWhereClauseParam("UsrIdBind", EbizParams.GLBL_APP_USR());
            selectedTickerVO.executeQuery();
            
        int i_2 = selectedTickerVO.getRangeSize();
        selectedTickerVO.setRangeSize(-1);
        Row[] filteredRows = selectedTickerVO.getAllRowsInRange();
        Integer i = 1;
        for (Row r : filteredRows) {
            Object o = ADFModelUtils.callFunction(this, new StringBuilder("SLS.FN_GET_TKR_VAL(?,?,?,?,?)"), new Object[] {
                                                  EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                  EbizParams.GLBL_APP_USR_ORG(), this.getfyId(), r.getAttribute("TkrId")
            }, Types.VARCHAR);
            System.out.println("Returned : " + o);
            if (o != null) {
                String s = o.toString();
                StringTokenizer d = new StringTokenizer(s, "|");
                if (d.countTokens() == 3) {
                    Object tkrNm = r.getAttribute("TkrNm");
                    TickerRowDS t = new TickerRowDS();
                    t.setTickerId(r.getAttribute("TkrId").toString());
                    t.setSeqNo((Integer) r.getAttribute("SeqNo"));
                    t.setTickerDesc(tkrNm == null ? "" : tkrNm.toString());
                    t.setArrow(d.nextToken());
                    t.setCurrentAmt(d.nextToken());
                    t.setPreviousAmt(d.nextToken());
                    System.out.println("Current Amount :: "+t.getCurrentAmt());
                    System.out.println("Previous Amount :: "+t.getPreviousAmt());
                    t.setCurr(getCurrIdBs().toString());
                    System.out.println("Currency :: "+t.getCurr());
                    selectSettingList.add(t);
                }
            }
            
        }
        for (TickerRowDS r : selectSettingList) {
            System.out.println(r.getSeqNo() + " : " + r.getTickerDesc() + " : " + r.getTickerId());
        }
        
        selectedTickerVO.setRangeSize(i_2);
            
            return selectSettingList;
    }
    

    public StringBuffer getCurrIdBs() {
        Integer i = 0;
        StringBuffer s = new StringBuffer("");
        try {


            i = (Integer) callStoredFunction(Types.INTEGER, "APP.PKG_APP.GET_ORG_DEF_CURR_BS1(?)", new Object[] {
                                             EbizParams.GLBL_APP_USR_ORG() });

        } catch (Exception e) {
            e.printStackTrace();
        }
        if (i != 0) {
            ViewObjectImpl currDescFromIdVO = this.getCurrDescVO1();
            currDescFromIdVO.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
            currDescFromIdVO.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
            currDescFromIdVO.setNamedWhereClauseParam("CurrIdBind", 73);
            currDescFromIdVO.executeQuery();
            Row[] allRowsInRange = currDescFromIdVO.getAllRowsInRange();
            for (Row r : allRowsInRange) {
                s = new StringBuffer(r.getAttribute("CurrNotationAlias").toString());
            }
        }
        //_log.info(" Curr ID is : "+s);
        return s;
    }


    /**
     * Method used to call function to get the fy id.
     * @param CldId
     * @param OrgId
     * @return FY Id
     */
    
    public Integer getfyId() {
        Integer fyId = 0;
        try {
            fyId = (Integer) (callStoredFunction(Types.INTEGER, "APP.GET_ORG_FY_ID (?,?,?)", new Object[] {
                                                 EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_USR_ORG(),
                                                 new Timestamp(System.currentTimeMillis())
            }));
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        return fyId;
    }


    /**
     * Method to fetch all the tickers
     * @return
     */
    
    public ArrayList<TickerRowDS> getTickerList() {
        ArrayList<TickerRowDS> list = new ArrayList<TickerRowDS>();
        ViewObjectImpl mapViewVO = this.getTrnpUnselectedTickerListVO1();
        mapViewVO.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        mapViewVO.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        mapViewVO.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        mapViewVO.setNamedWhereClauseParam("UsrIdBind", EbizParams.GLBL_APP_USR());
        mapViewVO.executeQuery();
        
        int i_2 = mapViewVO.getRangeSize();
        mapViewVO.setRangeSize(-1);
        Row[] filteredRows = mapViewVO.getAllRowsInRange();
        
        System.out.println("Filtered rows : " + filteredRows.length);
        System.out.println("FyId value :: "+this.getfyId());
        
        Integer i = 1;
        for (Row r : filteredRows) {
            Object o = ADFModelUtils.callFunction(this, new StringBuilder("SLS.FN_GET_TKR_VAL(?,?,?,?,?)"), new Object[] {
                                                  EbizParams.GLBL_APP_CLD_ID(), EbizParams.GLBL_APP_SERV_LOC(),
                                                  EbizParams.GLBL_APP_USR_ORG(), this.getfyId(), r.getAttribute("TkrId")
            }, Types.VARCHAR);
            System.out.println("Returned : " + o);
            if (o != null) {
                String s = o.toString();
                StringTokenizer d = new StringTokenizer(s, "|");
                if (d.countTokens() == 3) {
                    Object tkrNm = r.getAttribute("TkrNm");
                    TickerRowDS t = new TickerRowDS();
                    t.setTickerId(r.getAttribute("TkrId").toString());
                    t.setSeqNo(i);
                    t.setTickerDesc(tkrNm == null ? "" : tkrNm.toString());
                    t.setArrow(d.nextToken());
                    t.setCurrentAmt(d.nextToken());
                    System.out.println("Current Amount :: "+t.getCurrentAmt());
                    t.setPreviousAmt(d.nextToken());
                    System.out.println("Previous Amount :: "+t.getPreviousAmt());
                    t.setCurr(getCurrIdBs().toString());
                    System.out.println("Currency :: "+t.getCurr());
                    list.add(t);
                }
            }
            //Gross Profit|419530808.04686|192307731861484.01752
        }

        mapViewVO.setRangeSize(i_2);
        ViewObjectImpl impl = this.getTickerListVO1();
        return list;
    }


    /**
     * Method to insert Rows in User Settings
     */
    public void saveUserSettings() {
        
        ViewObjectImpl allTkrVO = this.getTrnpAllTickerVO1();
        allTkrVO.setNamedWhereClauseParam("CldIdBind", EbizParams.GLBL_APP_CLD_ID());
        allTkrVO.setNamedWhereClauseParam("OrgIdBind", EbizParams.GLBL_APP_USR_ORG());
        allTkrVO.setNamedWhereClauseParam("SlocIdBind", EbizParams.GLBL_APP_SERV_LOC());
        allTkrVO.setNamedWhereClauseParam("UsrIdBind", EbizParams.GLBL_APP_USR());
        allTkrVO.executeQuery();
        System.out.println("Rows Removed : " + allTkrVO.getEstimatedRowCount());
        RowSetIterator ctr = allTkrVO.createRowSetIterator(null);
        ViewObjectImpl mmTkrVO = this.getMmTkrUsrVO1();

        while (ctr.hasNext()) {
            RowFinder finder = mmTkrVO.lookupRowFinder("findTckrRow");
            NameValuePairs n = new NameValuePairs();
            n.setAttribute("CldId", EbizParams.GLBL_APP_CLD_ID());
            n.setAttribute("OrgId", EbizParams.GLBL_APP_USR_ORG());
            n.setAttribute("SlocId", EbizParams.GLBL_APP_SERV_LOC());
            n.setAttribute("TkrId", ctr.next().getAttribute("TkrId").toString());
            n.setAttribute("UsrId", EbizParams.GLBL_APP_USR());
            RowIterator ri = finder.execute(n, mmTkrVO);
            System.out.println("Set Default Find Row : " + ri.getFetchedRowCount());
            if (ri.getFetchedRowCount() > 0) {
                if (ri.hasNext()) {
                    ri.next().setAttribute("TkrPos", 0);
                }
            }
        }
        ctr.closeRowSetIterator();
        //this.getDBTransaction().commit();
    }

    public void insertRecord(Integer seqNo, String tickerId) {
        
        ViewObjectImpl mmTkrVO = this.getMmTkrUsrVO1();
        RowFinder finder = mmTkrVO.lookupRowFinder("findTckrRow");
        NameValuePairs n = new NameValuePairs();
        n.setAttribute("CldId", EbizParams.GLBL_APP_CLD_ID());
        n.setAttribute("OrgId", EbizParams.GLBL_APP_USR_ORG());
        n.setAttribute("SlocId", EbizParams.GLBL_APP_SERV_LOC());
        n.setAttribute("TkrId", tickerId);
        n.setAttribute("UsrId", EbizParams.GLBL_APP_USR());

        RowIterator ri = finder.execute(n, mmTkrVO);
        System.out.println("Find Row : " + ri.getFetchedRowCount());
        if (ri.getFetchedRowCount() > 0) {
            if (ri.hasNext()) {
                ri.next().setAttribute("TkrPos", seqNo);
                System.out.println("Sequence No. :: "+seqNo);
            }
        }
    }
    
    public void commitAll()
    {
        this.getDBTransaction().commit();  
    }

    public ViewObjectImpl getTrnpLoadingOrderVwVO1() {
        return (ViewObjectImpl) findViewObject("TrnpLoadingOrderVwVO1");
    }


    /**
     * Container's getter for TrnpLoadingReqVwVO1.
     * @return TrnpLoadingReqVwVO1
     */
    public ViewObjectImpl getTrnpLoadingReqVwVO1() {
        return (ViewObjectImpl) findViewObject("TrnpLoadingReqVwVO1");
    }

    /**
     * Container's getter for TrnpOffloadingVwVo1.
     * @return TrnpOffloadingVwVo1
     */
    public ViewObjectImpl getTrnpOffloadingVwVo1() {
        return (ViewObjectImpl) findViewObject("TrnpOffloadingVwVo1");
    }

    /**
     * Container's getter for TrnpLoadingInvoiceVwVO1.
     * @return TrnpLoadingInvoiceVwVO1
     */
    public ViewObjectImpl getTrnpLoadingInvoiceVwVO1() {
        return (ViewObjectImpl) findViewObject("TrnpLoadingInvoiceVwVO1");
    }

    /**
     * Container's getter for TrnpSelectedTickerList1.
     * @return TrnpSelectedTickerList1
     */
    public ViewObjectImpl getTrnpSelectedTickerList1() {
        return (ViewObjectImpl) findViewObject("TrnpSelectedTickerList1");
    }

    /**
     * Container's getter for CurrDescVO1.
     * @return CurrDescVO1
     */
    public ViewObjectImpl getCurrDescVO1() {
        return (ViewObjectImpl) findViewObject("CurrDescVO1");
    }

    /**
     * Container's getter for TickerListVO1.
     * @return TickerListVO1
     */
    public ViewObjectImpl getTickerListVO1() {
        return (ViewObjectImpl) findViewObject("TickerListVO1");
    }

    /**
     * Container's getter for TrnpSelectedTickerListVO1.
     * @return TrnpSelectedTickerListVO1
     */
    public ViewObjectImpl getTrnpSelectedTickerListVO1() {
        return (ViewObjectImpl) findViewObject("TrnpSelectedTickerListVO1");
    }

    /**
     * Container's getter for TrnpUnselectedTickerListVO1.
     * @return TrnpUnselectedTickerListVO1
     */
    public ViewObjectImpl getTrnpUnselectedTickerListVO1() {
        return (ViewObjectImpl) findViewObject("TrnpUnselectedTickerListVO1");
    }

    /**
     * Container's getter for TrnpAllTickerVO1.
     * @return TrnpAllTickerVO1
     */
    public ViewObjectImpl getTrnpAllTickerVO1() {
        return (ViewObjectImpl) findViewObject("TrnpAllTickerVO1");
    }

    /**
     * Container's getter for MmTkrUsrVO1.
     * @return MmTkrUsrVO1
     */
    public ViewObjectImpl getMmTkrUsrVO1() {
        return (ViewObjectImpl) findViewObject("MmTkrUsrVO1");
    }

    /**
     * Container's getter for VehicleStatusVO1.
     * @return VehicleStatusVO1
     */
    public ViewObjectImpl getVehicleStatusVO1() {
        return (ViewObjectImpl) findViewObject("VehicleStatusVO1");
    }

    /**
     * Container's getter for StatusVO1.
     * @return StatusVO1
     */
    public ViewObjectImpl getStatusVO1() {
        return (ViewObjectImpl) findViewObject("StatusVO1");
    }

    /**
     * Container's getter for StatusVO2.
     * @return StatusVO2
     */
    public ViewObjectImpl getStatusVO2() {
        return (ViewObjectImpl) findViewObject("StatusVO2");
    }

    /**
     * Container's getter for VehicleStatusVO2.
     * @return VehicleStatusVO2
     */
    public ViewObjectImpl getVehicleStatusVO2() {
        return (ViewObjectImpl) findViewObject("VehicleStatusVO2");
    }

    /**
     * Container's getter for VehicleStatusVL1.
     * @return VehicleStatusVL1
     */
    public ViewLinkImpl getVehicleStatusVL1() {
        return (ViewLinkImpl) findViewLink("VehicleStatusVL1");
    }

    /**
     * Container's getter for RouteWiseLRVO1.
     * @return RouteWiseLRVO1
     */
    public ViewObjectImpl getRouteWiseLRVO1() {
        return (ViewObjectImpl) findViewObject("RouteWiseLRVO1");
    }

    /**
     * Container's getter for DelayedDeliveriesVO1.
     * @return DelayedDeliveriesVO1
     */
    public ViewObjectImpl getDelayedDeliveriesVO1() {
        return (ViewObjectImpl) findViewObject("DelayedDeliveriesVO1");
    }

    /**
     * Container's getter for ActualDistanceVO1.
     * @return ActualDistanceVO1
     */
    public ViewObjectImpl getActualDistanceVO1() {
        return (ViewObjectImpl) findViewObject("ActualDistanceVO1");
    }

    /**
     * Container's getter for DrillVehicleStatus1.
     * @return DrillVehicleStatus1
     */
    public ViewObjectImpl getDrillVehicleStatus() {
        return (ViewObjectImpl) findViewObject("DrillVehicleStatus");
    }

    /**
     * Container's getter for DrillVehicleStatus1.
     * @return DrillVehicleStatus1
     */
    public ViewObjectImpl getDrillVehicleStatus1() {
        return (ViewObjectImpl) findViewObject("DrillVehicleStatus1");
    }

    /**
     * Container's getter for VehicleStatusToDrill1.
     * @return VehicleStatusToDrill1
     */
    public ViewLinkImpl getVehicleStatusToDrill1() {
        return (ViewLinkImpl) findViewLink("VehicleStatusToDrill1");
    }

    /**
     * Container's getter for DelayedDeliveryAmt1.
     * @return DelayedDeliveryAmt1
     */
    public ViewObjectImpl getDelayedDeliveryRoute1() {
        return (ViewObjectImpl) findViewObject("DelayedDeliveryRoute1");
    }

    /**
     * Container's getter for DelayedDeliveryVehicle1.
     * @return DelayedDeliveryVehicle1
     */
    public ViewObjectImpl getDelayedDeliveryVehicle1() {
        return (ViewObjectImpl) findViewObject("DelayedDeliveryVehicle1");
    }

    /**
     * Container's getter for DelayedDeliveryDriver1.
     * @return DelayedDeliveryDriver1
     */
    public ViewObjectImpl getDelayedDeliveryDriver1() {
        return (ViewObjectImpl) findViewObject("DelayedDeliveryDriver1");
    }

    /**
     * Container's getter for PendingLrLo1.
     * @return PendingLrLo1
     */
    public ViewObjectImpl getPendingLrLo1() {
        return (ViewObjectImpl) findViewObject("PendingLrLo1");
    }

    /**
     * Container's getter for LOStatusDtl1.
     * @return LOStatusDtl1
     */
    public ViewObjectImpl getLOStatusDtl1() {
        return (ViewObjectImpl) findViewObject("LOStatusDtl1");
    }

    /**
     * Container's getter for OlAmtDtl1.
     * @return OlAmtDtl1
     */
    public ViewObjectImpl getOlAmtDtl1() {
        return (ViewObjectImpl) findViewObject("OlAmtDtl1");
    }

    /**
     * Container's getter for FuelDtlSupp1.
     * @return FuelDtlSupp1
     */
    public ViewObjectImpl getFuelDtlSupp1() {
        return (ViewObjectImpl) findViewObject("FuelDtlSupp1");
    }

    /**
     * Container's getter for VhclFuelDistMilageDtl1.
     * @return VhclFuelDistMilageDtl1
     */
    public ViewObjectImpl getVhclFuelDistMilageDtl1() {
        return (ViewObjectImpl) findViewObject("VhclFuelDistMilageDtl1");
    }

    /**
     * Container's getter for LoadingInvoiceCustAmt1.
     * @return LoadingInvoiceCustAmt1
     */
    public ViewObjectImpl getLoadingInvoiceCustAmt1() {
        return (ViewObjectImpl) findViewObject("LoadingInvoiceCustAmt1");
    }

    /**
     * Container's getter for VhclDescVo1.
     * @return VhclDescVo1
     */
    public ViewObjectImpl getVhclDescVo1() {
        return (ViewObjectImpl) findViewObject("VhclDescVo1");
    }

    /**
     * Container's getter for LoWeightDiffVO1.
     * @return LoWeightDiffVO1
     */
    public ViewObjectImpl getLoWeightDiffVO1() {
        return (ViewObjectImpl) findViewObject("LoWeightDiffVO1");
    }

    /**
     * Container's getter for LoWeightDiffRouteWiseVO1.
     * @return LoWeightDiffRouteWiseVO1
     */
    public ViewObjectImpl getLoWeightDiffRouteWiseVO1() {
        return (ViewObjectImpl) findViewObject("LoWeightDiffRouteWiseVO1");
    }
}

